Compiled from "SPARQLResultsXSVMappingStrategy.java"
public abstract class org.eclipse.rdf4j.query.resultio.text.SPARQLResultsXSVMappingStrategy implements com.opencsv.bean.MappingStrategy<org.eclipse.rdf4j.query.BindingSet> {
  protected java.util.List<java.lang.String> bindingNames;

  protected final org.eclipse.rdf4j.model.ValueFactory valueFactory;

  protected static final java.util.regex.Pattern numberPattern;

  private static final java.lang.String WRITING_UNSUPPORTED;

  public org.eclipse.rdf4j.query.resultio.text.SPARQLResultsXSVMappingStrategy(org.eclipse.rdf4j.model.ValueFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field bindingNames:Ljava/util/List;
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field valueFactory:Lorg/eclipse/rdf4j/model/ValueFactory;
      14: return

  public java.util.List<java.lang.String> getBindingNames();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bindingNames:Ljava/util/List;
       4: areturn

  public java.beans.PropertyDescriptor findDescriptor(int);
    Code:
       0: aconst_null
       1: areturn

  public com.opencsv.bean.BeanField<org.eclipse.rdf4j.query.BindingSet> findField(int);
    Code:
       0: aconst_null
       1: areturn

  public int findMaxFieldIndex();
    Code:
       0: iconst_0
       1: ireturn

  public org.eclipse.rdf4j.query.BindingSet createBean();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String[] generateHeader(org.eclipse.rdf4j.query.BindingSet);
    Code:
       0: new           #4                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #6                  // String This mapping strategy does not write.
       6: invokespecial #7                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.Integer getColumnIndex(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public boolean isAnnotationDriven();
    Code:
       0: iconst_1
       1: ireturn

  protected org.eclipse.rdf4j.model.Value parseNumberPatternMatch(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: invokestatic  #8                  // Method org/eclipse/rdf4j/model/datatypes/XMLDatatypeUtil.isValidInteger:(Ljava/lang/String;)Z
       6: ifeq          30
       9: aload_1
      10: invokestatic  #9                  // Method org/eclipse/rdf4j/model/datatypes/XMLDatatypeUtil.isValidNegativeInteger:(Ljava/lang/String;)Z
      13: ifeq          23
      16: getstatic     #10                 // Field org/eclipse/rdf4j/model/vocabulary/XMLSchema.NEGATIVE_INTEGER:Lorg/eclipse/rdf4j/model/IRI;
      19: astore_2
      20: goto          55
      23: getstatic     #11                 // Field org/eclipse/rdf4j/model/vocabulary/XMLSchema.INTEGER:Lorg/eclipse/rdf4j/model/IRI;
      26: astore_2
      27: goto          55
      30: aload_1
      31: invokestatic  #12                 // Method org/eclipse/rdf4j/model/datatypes/XMLDatatypeUtil.isValidDecimal:(Ljava/lang/String;)Z
      34: ifeq          44
      37: getstatic     #13                 // Field org/eclipse/rdf4j/model/vocabulary/XMLSchema.DECIMAL:Lorg/eclipse/rdf4j/model/IRI;
      40: astore_2
      41: goto          55
      44: aload_1
      45: invokestatic  #14                 // Method org/eclipse/rdf4j/model/datatypes/XMLDatatypeUtil.isValidDouble:(Ljava/lang/String;)Z
      48: ifeq          55
      51: getstatic     #15                 // Field org/eclipse/rdf4j/model/vocabulary/XMLSchema.DOUBLE:Lorg/eclipse/rdf4j/model/IRI;
      54: astore_2
      55: aload_2
      56: ifnull        73
      59: aload_0
      60: getfield      #3                  // Field valueFactory:Lorg/eclipse/rdf4j/model/ValueFactory;
      63: aload_1
      64: aload_2
      65: invokeinterface #16,  3           // InterfaceMethod org/eclipse/rdf4j/model/ValueFactory.createLiteral:(Ljava/lang/String;Lorg/eclipse/rdf4j/model/IRI;)Lorg/eclipse/rdf4j/model/Literal;
      70: goto          83
      73: aload_0
      74: getfield      #3                  // Field valueFactory:Lorg/eclipse/rdf4j/model/ValueFactory;
      77: aload_1
      78: invokeinterface #17,  2           // InterfaceMethod org/eclipse/rdf4j/model/ValueFactory.createLiteral:(Ljava/lang/String;)Lorg/eclipse/rdf4j/model/Literal;
      83: areturn

  public org.eclipse.rdf4j.query.BindingSet populateNewBeanWithIntrospection(java.lang.String[]);
    Code:
       0: new           #4                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #18                 // String Please use populateNewBean() instead.
       6: invokespecial #7                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void verifyLineLength(int);
    Code:
       0: return

  public void setErrorLocale(java.util.Locale);
    Code:
       0: return

  public void setType(java.lang.Class<? extends org.eclipse.rdf4j.query.BindingSet>);
    Code:
       0: return

  public java.lang.String[] transmuteBean(org.eclipse.rdf4j.query.BindingSet);
    Code:
       0: new           #4                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #6                  // String This mapping strategy does not write.
       6: invokespecial #7                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String[] transmuteBean(java.lang.Object) throws com.opencsv.exceptions.CsvDataTypeMismatchException, com.opencsv.exceptions.CsvRequiredFieldEmptyException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class org/eclipse/rdf4j/query/BindingSet
       5: invokevirtual #20                 // Method transmuteBean:(Lorg/eclipse/rdf4j/query/BindingSet;)[Ljava/lang/String;
       8: areturn

  public java.lang.Object populateNewBeanWithIntrospection(java.lang.String[]) throws java.lang.InstantiationException, java.lang.IllegalAccessException, java.beans.IntrospectionException, java.lang.reflect.InvocationTargetException, com.opencsv.exceptions.CsvRequiredFieldEmptyException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method populateNewBeanWithIntrospection:([Ljava/lang/String;)Lorg/eclipse/rdf4j/query/BindingSet;
       5: areturn

  public java.lang.String[] generateHeader(java.lang.Object) throws com.opencsv.exceptions.CsvRequiredFieldEmptyException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class org/eclipse/rdf4j/query/BindingSet
       5: invokevirtual #22                 // Method generateHeader:(Lorg/eclipse/rdf4j/query/BindingSet;)[Ljava/lang/String;
       8: areturn

  public java.lang.Object createBean() throws java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method createBean:()Lorg/eclipse/rdf4j/query/BindingSet;
       4: areturn

  static {};
    Code:
       0: ldc           #24                 // String ^[-+]?[\\d.].*
       2: invokestatic  #25                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #26                 // Field numberPattern:Ljava/util/regex/Pattern;
       8: return
}
