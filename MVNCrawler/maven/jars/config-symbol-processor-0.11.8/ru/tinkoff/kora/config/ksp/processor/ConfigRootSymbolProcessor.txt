Compiled from "ConfigRootSymbolProcessor.kt"
public final class ru.tinkoff.kora.config.ksp.processor.ConfigRootSymbolProcessor extends ru.tinkoff.kora.ksp.common.BaseSymbolProcessor {
  private final com.google.devtools.ksp.processing.CodeGenerator codeGenerator;

  private ru.tinkoff.kora.config.ksp.ConfigRootModuleGenerator moduleGenerator;

  private ru.tinkoff.kora.config.ksp.ConfigParserGenerator configParserGenerator;

  public ru.tinkoff.kora.config.ksp.processor.ConfigRootSymbolProcessor(com.google.devtools.ksp.processing.SymbolProcessorEnvironment);
    Code:
       0: aload_1
       1: ldc           #9                  // String environment
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokespecial #17                 // Method ru/tinkoff/kora/ksp/common/BaseSymbolProcessor."<init>":(Lcom/google/devtools/ksp/processing/SymbolProcessorEnvironment;)V
      11: aload_0
      12: aload_1
      13: invokevirtual #23                 // Method com/google/devtools/ksp/processing/SymbolProcessorEnvironment.getCodeGenerator:()Lcom/google/devtools/ksp/processing/CodeGenerator;
      16: putfield      #27                 // Field codeGenerator:Lcom/google/devtools/ksp/processing/CodeGenerator;
      19: return

  public java.util.List<com.google.devtools.ksp.symbol.KSAnnotated> processRound(com.google.devtools.ksp.processing.Resolver);
    Code:
       0: aload_1
       1: ldc           #35                 // String resolver
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: new           #37                 // class ru/tinkoff/kora/config/ksp/ConfigRootModuleGenerator
      10: dup
      11: aload_1
      12: invokespecial #40                 // Method ru/tinkoff/kora/config/ksp/ConfigRootModuleGenerator."<init>":(Lcom/google/devtools/ksp/processing/Resolver;)V
      15: putfield      #44                 // Field moduleGenerator:Lru/tinkoff/kora/config/ksp/ConfigRootModuleGenerator;
      18: aload_0
      19: new           #46                 // class ru/tinkoff/kora/config/ksp/ConfigParserGenerator
      22: dup
      23: aload_1
      24: invokespecial #47                 // Method ru/tinkoff/kora/config/ksp/ConfigParserGenerator."<init>":(Lcom/google/devtools/ksp/processing/Resolver;)V
      27: putfield      #51                 // Field configParserGenerator:Lru/tinkoff/kora/config/ksp/ConfigParserGenerator;
      30: new           #53                 // class java/util/ArrayList
      33: dup
      34: invokespecial #56                 // Method java/util/ArrayList."<init>":()V
      37: checkcast     #58                 // class java/util/List
      40: astore_2
      41: aload_1
      42: ldc           #60                 // class ru/tinkoff/kora/config/common/ConfigRoot
      44: invokestatic  #66                 // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
      47: invokeinterface #72,  1           // InterfaceMethod kotlin/reflect/KClass.getQualifiedName:()Ljava/lang/String;
      52: dup
      53: invokestatic  #76                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      56: iconst_0
      57: iconst_2
      58: aconst_null
      59: invokestatic  #82                 // InterfaceMethod com/google/devtools/ksp/processing/Resolver.getSymbolsWithAnnotation$default:(Lcom/google/devtools/ksp/processing/Resolver;Ljava/lang/String;ZILjava/lang/Object;)Lkotlin/sequences/Sequence;
      62: getstatic     #88                 // Field ru/tinkoff/kora/config/ksp/processor/ConfigRootSymbolProcessor$processRound$symbolsToProcess$1.INSTANCE:Lru/tinkoff/kora/config/ksp/processor/ConfigRootSymbolProcessor$processRound$symbolsToProcess$1;
      65: checkcast     #90                 // class kotlin/jvm/functions/Function1
      68: invokestatic  #96                 // Method kotlin/sequences/SequencesKt.filter:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;
      71: astore_3
      72: aload_3
      73: astore        4
      75: iconst_0
      76: istore        5
      78: aload         4
      80: invokeinterface #102,  1          // InterfaceMethod kotlin/sequences/Sequence.iterator:()Ljava/util/Iterator;
      85: astore        6
      87: aload         6
      89: invokeinterface #108,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      94: ifeq          139
      97: aload         6
      99: invokeinterface #112,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     104: astore        7
     106: aload         7
     108: checkcast     #114                // class com/google/devtools/ksp/symbol/KSAnnotated
     111: astore        8
     113: iconst_0
     114: istore        9
     116: aload         8
     118: new           #116                // class ru/tinkoff/kora/config/ksp/processor/ConfigRootSymbolProcessor$processRound$1$1
     121: dup
     122: aload_0
     123: aload_2
     124: invokespecial #119                // Method ru/tinkoff/kora/config/ksp/processor/ConfigRootSymbolProcessor$processRound$1$1."<init>":(Lru/tinkoff/kora/config/ksp/processor/ConfigRootSymbolProcessor;Ljava/util/List;)V
     127: checkcast     #90                 // class kotlin/jvm/functions/Function1
     130: invokestatic  #125                // Method ru/tinkoff/kora/ksp/common/KspCommonUtilsKt.visitClass:(Lcom/google/devtools/ksp/symbol/KSAnnotated;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
     133: pop
     134: nop
     135: nop
     136: goto          87
     139: nop
     140: aload_2
     141: areturn

  public static final ru.tinkoff.kora.config.ksp.ConfigParserGenerator access$getConfigParserGenerator$p(ru.tinkoff.kora.config.ksp.processor.ConfigRootSymbolProcessor);
    Code:
       0: aload_0
       1: getfield      #51                 // Field configParserGenerator:Lru/tinkoff/kora/config/ksp/ConfigParserGenerator;
       4: areturn

  public static final com.google.devtools.ksp.processing.CodeGenerator access$getCodeGenerator$p(ru.tinkoff.kora.config.ksp.processor.ConfigRootSymbolProcessor);
    Code:
       0: aload_0
       1: getfield      #27                 // Field codeGenerator:Lcom/google/devtools/ksp/processing/CodeGenerator;
       4: areturn

  public static final ru.tinkoff.kora.config.ksp.ConfigRootModuleGenerator access$getModuleGenerator$p(ru.tinkoff.kora.config.ksp.processor.ConfigRootSymbolProcessor);
    Code:
       0: aload_0
       1: getfield      #44                 // Field moduleGenerator:Lru/tinkoff/kora/config/ksp/ConfigRootModuleGenerator;
       4: areturn
}
