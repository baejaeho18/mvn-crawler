Compiled from "S3FileStorePlugin.scala"
public final class net.spals.appbuilder.filestore.s3.S3FileStorePlugin$$anonfun$getFileContent$1 extends scala.runtime.AbstractFunction1<net.spals.appbuilder.filestore.core.model.FileMetadata, java.io.InputStream> implements scala.Serializable {
  public static final long serialVersionUID;

  private final net.spals.appbuilder.filestore.s3.S3FileStorePlugin $outer;

  private final net.spals.appbuilder.filestore.core.model.FileStoreKey key$1;

  public final java.io.InputStream apply(net.spals.appbuilder.filestore.core.model.FileMetadata);
    Code:
       0: aload_0
       1: getfield      #25                 // Field $outer:Lnet/spals/appbuilder/filestore/s3/S3FileStorePlugin;
       4: aload_0
       5: getfield      #27                 // Field key$1:Lnet/spals/appbuilder/filestore/core/model/FileStoreKey;
       8: invokevirtual #31                 // Method net/spals/appbuilder/filestore/s3/S3FileStorePlugin.resolveS3ObjectId:(Lnet/spals/appbuilder/filestore/core/model/FileStoreKey;)Lcom/amazonaws/services/s3/model/S3ObjectId;
      11: astore_2
      12: new           #33                 // class com/amazonaws/services/s3/model/GetObjectRequest
      15: dup
      16: aload_2
      17: invokespecial #37                 // Method com/amazonaws/services/s3/model/GetObjectRequest."<init>":(Lcom/amazonaws/services/s3/model/S3ObjectId;)V
      20: astore_3
      21: aload_1
      22: invokeinterface #43,  1           // InterfaceMethod net/spals/appbuilder/filestore/core/model/FileMetadata.getSecurityLevel:()Lnet/spals/appbuilder/filestore/core/model/FileSecurityLevel;
      27: astore        5
      29: getstatic     #49                 // Field net/spals/appbuilder/filestore/core/model/FileSecurityLevel.PUBLIC:Lnet/spals/appbuilder/filestore/core/model/FileSecurityLevel;
      32: aload         5
      34: invokevirtual #55                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      37: ifeq          52
      40: aload_0
      41: getfield      #25                 // Field $outer:Lnet/spals/appbuilder/filestore/s3/S3FileStorePlugin;
      44: getfield      #59                 // Field net/spals/appbuilder/filestore/s3/S3FileStorePlugin.net$spals$appbuilder$filestore$s3$S3FileStorePlugin$$s3Client:Lcom/amazonaws/services/s3/AmazonS3;
      47: astore        6
      49: goto          101
      52: getstatic     #62                 // Field net/spals/appbuilder/filestore/core/model/FileSecurityLevel.PRIVATE:Lnet/spals/appbuilder/filestore/core/model/FileSecurityLevel;
      55: aload         5
      57: invokevirtual #55                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          207
      63: getstatic     #68                 // Field scala/compat/java8/OptionConverters$RichOptionalGeneric$.MODULE$:Lscala/compat/java8/OptionConverters$RichOptionalGeneric$;
      66: getstatic     #73                 // Field scala/compat/java8/OptionConverters$.MODULE$:Lscala/compat/java8/OptionConverters$;
      69: aload_0
      70: getfield      #25                 // Field $outer:Lnet/spals/appbuilder/filestore/s3/S3FileStorePlugin;
      73: getfield      #77                 // Field net/spals/appbuilder/filestore/s3/S3FileStorePlugin.net$spals$appbuilder$filestore$s3$S3FileStorePlugin$$s3EncryptionHolder:Lnet/spals/appbuilder/filestore/s3/S3EncryptionHolder;
      76: invokevirtual #83                 // Method net/spals/appbuilder/filestore/s3/S3EncryptionHolder.value:()Ljava/util/Optional;
      79: invokevirtual #87                 // Method scala/compat/java8/OptionConverters$.RichOptionalGeneric:(Ljava/util/Optional;)Ljava/util/Optional;
      82: invokevirtual #91                 // Method scala/compat/java8/OptionConverters$RichOptionalGeneric$.asScala$extension:(Ljava/util/Optional;)Lscala/Option;
      85: new           #93                 // class net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$getFileContent$1$$anonfun$1
      88: dup
      89: aload_0
      90: invokespecial #96                 // Method net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$getFileContent$1$$anonfun$1."<init>":(Lnet/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$getFileContent$1;)V
      93: invokevirtual #102                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      96: checkcast     #104                // class com/amazonaws/services/s3/AmazonS3
      99: astore        6
     101: aload         6
     103: astore        4
     105: getstatic     #109                // Field scala/util/Try$.MODULE$:Lscala/util/Try$;
     108: new           #111                // class net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$getFileContent$1$$anonfun$2
     111: dup
     112: aload_0
     113: aload_3
     114: aload         4
     116: invokespecial #114                // Method net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$getFileContent$1$$anonfun$2."<init>":(Lnet/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$getFileContent$1;Lcom/amazonaws/services/s3/model/GetObjectRequest;Lcom/amazonaws/services/s3/AmazonS3;)V
     119: invokevirtual #117                // Method scala/util/Try$.apply:(Lscala/Function0;)Lscala/util/Try;
     122: astore        7
     124: aload         7
     126: instanceof    #119                // class scala/util/Success
     129: ifeq          159
     132: aload         7
     134: checkcast     #119                // class scala/util/Success
     137: astore        8
     139: aload         8
     141: invokevirtual #122                // Method scala/util/Success.value:()Ljava/lang/Object;
     144: checkcast     #124                // class com/amazonaws/services/s3/model/S3Object
     147: astore        9
     149: aload         9
     151: invokevirtual #128                // Method com/amazonaws/services/s3/model/S3Object.getObjectContent:()Lcom/amazonaws/services/s3/model/S3ObjectInputStream;
     154: astore        10
     156: aload         10
     158: areturn
     159: aload         7
     161: instanceof    #130                // class scala/util/Failure
     164: ifeq          197
     167: aload         7
     169: checkcast     #130                // class scala/util/Failure
     172: astore        11
     174: aload         11
     176: invokevirtual #134                // Method scala/util/Failure.exception:()Ljava/lang/Throwable;
     179: astore        12
     181: new           #136                // class java/io/IOException
     184: dup
     185: invokespecial #139                // Method java/io/IOException."<init>":()V
     188: aload         12
     190: invokevirtual #143                // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     193: checkcast     #136                // class java/io/IOException
     196: athrow
     197: new           #145                // class scala/MatchError
     200: dup
     201: aload         7
     203: invokespecial #148                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     206: athrow
     207: new           #145                // class scala/MatchError
     210: dup
     211: aload         5
     213: invokespecial #148                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     216: athrow

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class net/spals/appbuilder/filestore/core/model/FileMetadata
       5: invokevirtual #168                // Method apply:(Lnet/spals/appbuilder/filestore/core/model/FileMetadata;)Ljava/io/InputStream;
       8: areturn

  public net.spals.appbuilder.filestore.s3.S3FileStorePlugin$$anonfun$getFileContent$1(net.spals.appbuilder.filestore.s3.S3FileStorePlugin, net.spals.appbuilder.filestore.core.model.FileStoreKey);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #25                 // Field $outer:Lnet/spals/appbuilder/filestore/s3/S3FileStorePlugin;
      11: aload_0
      12: aload_2
      13: putfield      #27                 // Field key$1:Lnet/spals/appbuilder/filestore/core/model/FileStoreKey;
      16: aload_0
      17: invokespecial #172                // Method scala/runtime/AbstractFunction1."<init>":()V
      20: return
}
