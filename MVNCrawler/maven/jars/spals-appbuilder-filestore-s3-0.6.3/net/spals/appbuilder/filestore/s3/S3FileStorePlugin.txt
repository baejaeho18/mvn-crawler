Compiled from "S3FileStorePlugin.scala"
public class net.spals.appbuilder.filestore.s3.S3FileStorePlugin implements net.spals.appbuilder.filestore.core.FileStorePlugin {
  public final com.amazonaws.services.s3.AmazonS3 net$spals$appbuilder$filestore$s3$S3FileStorePlugin$$s3Client;

  public final net.spals.appbuilder.filestore.s3.S3EncryptionHolder net$spals$appbuilder$filestore$s3$S3FileStorePlugin$$s3EncryptionHolder;

  private final com.amazonaws.services.s3.transfer.TransferManager s3TransferManager;

  private final net.spals.appbuilder.filestore.s3.S3TransferEncryptionHolder s3TransferEncryptionHolder;

  private java.lang.String endpoint;

  private java.lang.String s3Bucket;

  private scala.Option<com.amazonaws.services.s3.model.Region> s3Region;

  private volatile boolean bitmap$0;

  private scala.Option s3Region$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #40                 // Field bitmap$0:Z
       8: ifne          37
      11: aload_0
      12: getstatic     #46                 // Field scala/util/Try$.MODULE$:Lscala/util/Try$;
      15: new           #48                 // class net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$s3Region$1
      18: dup
      19: aload_0
      20: invokespecial #52                 // Method net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$s3Region$1."<init>":(Lnet/spals/appbuilder/filestore/s3/S3FileStorePlugin;)V
      23: invokevirtual #56                 // Method scala/util/Try$.apply:(Lscala/Function0;)Lscala/util/Try;
      26: invokevirtual #61                 // Method scala/util/Try.toOption:()Lscala/Option;
      29: putfield      #63                 // Field s3Region:Lscala/Option;
      32: aload_0
      33: iconst_1
      34: putfield      #40                 // Field bitmap$0:Z
      37: getstatic     #69                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      40: pop
      41: aload_1
      42: monitorexit
      43: aload_0
      44: getfield      #63                 // Field s3Region:Lscala/Option;
      47: areturn
      48: aload_1
      49: monitorexit
      50: athrow
    Exception table:
       from    to  target type
           4    43    48   any

  public java.lang.String endpoint();
    Code:
       0: aload_0
       1: getfield      #76                 // Field endpoint:Ljava/lang/String;
       4: areturn

  public void endpoint_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #76                 // Field endpoint:Ljava/lang/String;
       5: return

  public java.lang.String s3Bucket();
    Code:
       0: aload_0
       1: getfield      #81                 // Field s3Bucket:Ljava/lang/String;
       4: areturn

  public void s3Bucket_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #81                 // Field s3Bucket:Ljava/lang/String;
       5: return

  public scala.Option<com.amazonaws.services.s3.model.Region> s3Region();
    Code:
       0: aload_0
       1: getfield      #40                 // Field bitmap$0:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #63                 // Field s3Region:Lscala/Option;
      11: goto          18
      14: aload_0
      15: invokespecial #84                 // Method s3Region$lzycompute:()Lscala/Option;
      18: areturn

  public void createBucket();
    Code:
       0: aload_0
       1: getfield      #91                 // Field net$spals$appbuilder$filestore$s3$S3FileStorePlugin$$s3Client:Lcom/amazonaws/services/s3/AmazonS3;
       4: aload_0
       5: invokevirtual #93                 // Method s3Bucket:()Ljava/lang/String;
       8: invokeinterface #99,  2           // InterfaceMethod com/amazonaws/services/s3/AmazonS3.doesBucketExist:(Ljava/lang/String;)Z
      13: ifne          30
      16: aload_0
      17: getfield      #91                 // Field net$spals$appbuilder$filestore$s3$S3FileStorePlugin$$s3Client:Lcom/amazonaws/services/s3/AmazonS3;
      20: aload_0
      21: invokevirtual #93                 // Method s3Bucket:()Ljava/lang/String;
      24: invokeinterface #102,  2          // InterfaceMethod com/amazonaws/services/s3/AmazonS3.createBucket:(Ljava/lang/String;)Lcom/amazonaws/services/s3/model/Bucket;
      29: pop
      30: return

  public boolean deleteFile(net.spals.appbuilder.filestore.core.model.FileStoreKey);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #108                // Method resolveS3ObjectId:(Lnet/spals/appbuilder/filestore/core/model/FileStoreKey;)Lcom/amazonaws/services/s3/model/S3ObjectId;
       5: astore_2
       6: new           #110                // class com/amazonaws/services/s3/model/DeleteObjectRequest
       9: dup
      10: aload_2
      11: invokevirtual #115                // Method com/amazonaws/services/s3/model/S3ObjectId.getBucket:()Ljava/lang/String;
      14: aload_2
      15: invokevirtual #118                // Method com/amazonaws/services/s3/model/S3ObjectId.getKey:()Ljava/lang/String;
      18: invokespecial #121                // Method com/amazonaws/services/s3/model/DeleteObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      21: astore_3
      22: getstatic     #46                 // Field scala/util/Try$.MODULE$:Lscala/util/Try$;
      25: new           #123                // class net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$deleteFile$1
      28: dup
      29: aload_0
      30: aload_3
      31: invokespecial #126                // Method net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$deleteFile$1."<init>":(Lnet/spals/appbuilder/filestore/s3/S3FileStorePlugin;Lcom/amazonaws/services/s3/model/DeleteObjectRequest;)V
      34: invokevirtual #56                 // Method scala/util/Try$.apply:(Lscala/Function0;)Lscala/util/Try;
      37: invokevirtual #130                // Method scala/util/Try.isSuccess:()Z
      40: ireturn

  public java.util.Optional<java.io.InputStream> getFileContent(net.spals.appbuilder.filestore.core.model.FileStoreKey) throws java.io.IOException;
    Code:
       0: getstatic     #144                // Field scala/compat/java8/OptionConverters$RichOptionForJava8$.MODULE$:Lscala/compat/java8/OptionConverters$RichOptionForJava8$;
       3: getstatic     #149                // Field scala/compat/java8/OptionConverters$.MODULE$:Lscala/compat/java8/OptionConverters$;
       6: getstatic     #154                // Field scala/compat/java8/OptionConverters$RichOptionalGeneric$.MODULE$:Lscala/compat/java8/OptionConverters$RichOptionalGeneric$;
       9: getstatic     #149                // Field scala/compat/java8/OptionConverters$.MODULE$:Lscala/compat/java8/OptionConverters$;
      12: aload_0
      13: aload_1
      14: invokevirtual #157                // Method getFileMetadata:(Lnet/spals/appbuilder/filestore/core/model/FileStoreKey;)Ljava/util/Optional;
      17: invokevirtual #161                // Method scala/compat/java8/OptionConverters$.RichOptionalGeneric:(Ljava/util/Optional;)Ljava/util/Optional;
      20: invokevirtual #165                // Method scala/compat/java8/OptionConverters$RichOptionalGeneric$.asScala$extension:(Ljava/util/Optional;)Lscala/Option;
      23: new           #167                // class net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$getFileContent$1
      26: dup
      27: aload_0
      28: aload_1
      29: invokespecial #170                // Method net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$getFileContent$1."<init>":(Lnet/spals/appbuilder/filestore/s3/S3FileStorePlugin;Lnet/spals/appbuilder/filestore/core/model/FileStoreKey;)V
      32: invokevirtual #174                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      35: invokevirtual #178                // Method scala/compat/java8/OptionConverters$.RichOptionForJava8:(Lscala/Option;)Lscala/Option;
      38: invokevirtual #182                // Method scala/compat/java8/OptionConverters$RichOptionForJava8$.asJava$extension:(Lscala/Option;)Ljava/util/Optional;
      41: areturn

  public java.util.Optional<net.spals.appbuilder.filestore.core.model.FileMetadata> getFileMetadata(net.spals.appbuilder.filestore.core.model.FileStoreKey) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #108                // Method resolveS3ObjectId:(Lnet/spals/appbuilder/filestore/core/model/FileStoreKey;)Lcom/amazonaws/services/s3/model/S3ObjectId;
       5: astore_2
       6: new           #184                // class com/amazonaws/services/s3/model/GetObjectMetadataRequest
       9: dup
      10: aload_2
      11: invokevirtual #115                // Method com/amazonaws/services/s3/model/S3ObjectId.getBucket:()Ljava/lang/String;
      14: aload_2
      15: invokevirtual #118                // Method com/amazonaws/services/s3/model/S3ObjectId.getKey:()Ljava/lang/String;
      18: invokespecial #185                // Method com/amazonaws/services/s3/model/GetObjectMetadataRequest."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      21: astore_3
      22: iconst_0
      23: istore        4
      25: aconst_null
      26: astore        5
      28: getstatic     #46                 // Field scala/util/Try$.MODULE$:Lscala/util/Try$;
      31: new           #187                // class net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$3
      34: dup
      35: aload_0
      36: aload_3
      37: invokespecial #190                // Method net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$3."<init>":(Lnet/spals/appbuilder/filestore/s3/S3FileStorePlugin;Lcom/amazonaws/services/s3/model/GetObjectMetadataRequest;)V
      40: invokevirtual #56                 // Method scala/util/Try$.apply:(Lscala/Function0;)Lscala/util/Try;
      43: astore        6
      45: aload         6
      47: instanceof    #192                // class scala/util/Success
      50: ifeq          107
      53: aload         6
      55: checkcast     #192                // class scala/util/Success
      58: astore        7
      60: aload         7
      62: invokevirtual #195                // Method scala/util/Success.value:()Ljava/lang/Object;
      65: checkcast     #197                // class com/amazonaws/services/s3/model/ObjectMetadata
      68: astore        8
      70: getstatic     #144                // Field scala/compat/java8/OptionConverters$RichOptionForJava8$.MODULE$:Lscala/compat/java8/OptionConverters$RichOptionForJava8$;
      73: getstatic     #149                // Field scala/compat/java8/OptionConverters$.MODULE$:Lscala/compat/java8/OptionConverters$;
      76: getstatic     #202                // Field scala/Option$.MODULE$:Lscala/Option$;
      79: aload         8
      81: invokevirtual #205                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      84: new           #207                // class net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$getFileMetadata$1
      87: dup
      88: aload_0
      89: aload_2
      90: invokespecial #210                // Method net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$getFileMetadata$1."<init>":(Lnet/spals/appbuilder/filestore/s3/S3FileStorePlugin;Lcom/amazonaws/services/s3/model/S3ObjectId;)V
      93: invokevirtual #174                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      96: invokevirtual #178                // Method scala/compat/java8/OptionConverters$.RichOptionForJava8:(Lscala/Option;)Lscala/Option;
      99: invokevirtual #182                // Method scala/compat/java8/OptionConverters$RichOptionForJava8$.asJava$extension:(Lscala/Option;)Ljava/util/Optional;
     102: astore        9
     104: goto          197
     107: aload         6
     109: instanceof    #212                // class scala/util/Failure
     112: ifeq          200
     115: iconst_1
     116: istore        4
     118: aload         6
     120: checkcast     #212                // class scala/util/Failure
     123: astore        5
     125: aload         5
     127: invokevirtual #216                // Method scala/util/Failure.exception:()Ljava/lang/Throwable;
     130: astore        10
     132: aload         10
     134: instanceof    #218                // class com/amazonaws/services/s3/model/AmazonS3Exception
     137: ifeq          200
     140: aload         10
     142: checkcast     #218                // class com/amazonaws/services/s3/model/AmazonS3Exception
     145: astore        11
     147: aload         11
     149: invokevirtual #222                // Method com/amazonaws/services/s3/model/AmazonS3Exception.getStatusCode:()I
     152: istore        12
     154: iload         12
     156: tableswitch   { // 404 to 404
                   404: 192
               default: 176
          }
     176: new           #139                // class java/io/IOException
     179: dup
     180: invokespecial #224                // Method java/io/IOException."<init>":()V
     183: aload         11
     185: invokevirtual #228                // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     188: checkcast     #139                // class java/io/IOException
     191: athrow
     192: invokestatic  #234                // Method java/util/Optional.empty:()Ljava/util/Optional;
     195: astore        9
     197: aload         9
     199: areturn
     200: iload         4
     202: ifeq          228
     205: aload         5
     207: invokevirtual #216                // Method scala/util/Failure.exception:()Ljava/lang/Throwable;
     210: astore        13
     212: new           #139                // class java/io/IOException
     215: dup
     216: invokespecial #224                // Method java/io/IOException."<init>":()V
     219: aload         13
     221: invokevirtual #228                // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     224: checkcast     #139                // class java/io/IOException
     227: athrow
     228: new           #236                // class scala/MatchError
     231: dup
     232: aload         6
     234: invokespecial #239                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     237: athrow

  public net.spals.appbuilder.filestore.core.model.FileMetadata putFile(net.spals.appbuilder.filestore.core.model.FileStoreKey, net.spals.appbuilder.filestore.core.model.PutFileRequest) throws java.io.IOException;
    Code:
       0: getstatic     #154                // Field scala/compat/java8/OptionConverters$RichOptionalGeneric$.MODULE$:Lscala/compat/java8/OptionConverters$RichOptionalGeneric$;
       3: getstatic     #149                // Field scala/compat/java8/OptionConverters$.MODULE$:Lscala/compat/java8/OptionConverters$;
       6: aload_2
       7: invokeinterface #254,  1          // InterfaceMethod net/spals/appbuilder/filestore/core/model/PutFileRequest.getContentLength:()Ljava/util/Optional;
      12: invokevirtual #161                // Method scala/compat/java8/OptionConverters$.RichOptionalGeneric:(Ljava/util/Optional;)Ljava/util/Optional;
      15: invokevirtual #165                // Method scala/compat/java8/OptionConverters$RichOptionalGeneric$.asScala$extension:(Ljava/util/Optional;)Lscala/Option;
      18: astore        4
      20: aload         4
      22: instanceof    #256                // class scala/Some
      25: ifeq          39
      28: aload_2
      29: invokeinterface #260,  1          // InterfaceMethod net/spals/appbuilder/filestore/core/model/PutFileRequest.getFileStream:()Ljava/io/InputStream;
      34: astore        5
      36: goto          66
      39: getstatic     #265                // Field scala/None$.MODULE$:Lscala/None$;
      42: aload         4
      44: invokevirtual #269                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          441
      50: new           #271                // class java/io/BufferedInputStream
      53: dup
      54: aload_2
      55: invokeinterface #260,  1          // InterfaceMethod net/spals/appbuilder/filestore/core/model/PutFileRequest.getFileStream:()Ljava/io/InputStream;
      60: iconst_1
      61: invokespecial #274                // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;I)V
      64: astore        5
      66: aload         5
      68: astore_3
      69: aload_2
      70: invokeinterface #278,  1          // InterfaceMethod net/spals/appbuilder/filestore/core/model/PutFileRequest.getFileSecurityLevel:()Lnet/spals/appbuilder/filestore/core/model/FileSecurityLevel;
      75: astore        7
      77: getstatic     #284                // Field net/spals/appbuilder/filestore/core/model/FileSecurityLevel.PUBLIC:Lnet/spals/appbuilder/filestore/core/model/FileSecurityLevel;
      80: aload         7
      82: invokevirtual #269                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      85: ifeq          97
      88: aload_0
      89: getfield      #286                // Field s3TransferManager:Lcom/amazonaws/services/s3/transfer/TransferManager;
      92: astore        8
      94: goto          143
      97: getstatic     #289                // Field net/spals/appbuilder/filestore/core/model/FileSecurityLevel.PRIVATE:Lnet/spals/appbuilder/filestore/core/model/FileSecurityLevel;
     100: aload         7
     102: invokevirtual #269                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     105: ifeq          431
     108: getstatic     #154                // Field scala/compat/java8/OptionConverters$RichOptionalGeneric$.MODULE$:Lscala/compat/java8/OptionConverters$RichOptionalGeneric$;
     111: getstatic     #149                // Field scala/compat/java8/OptionConverters$.MODULE$:Lscala/compat/java8/OptionConverters$;
     114: aload_0
     115: getfield      #291                // Field s3TransferEncryptionHolder:Lnet/spals/appbuilder/filestore/s3/S3TransferEncryptionHolder;
     118: invokevirtual #295                // Method net/spals/appbuilder/filestore/s3/S3TransferEncryptionHolder.value:()Ljava/util/Optional;
     121: invokevirtual #161                // Method scala/compat/java8/OptionConverters$.RichOptionalGeneric:(Ljava/util/Optional;)Ljava/util/Optional;
     124: invokevirtual #165                // Method scala/compat/java8/OptionConverters$RichOptionalGeneric$.asScala$extension:(Ljava/util/Optional;)Lscala/Option;
     127: new           #297                // class net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$6
     130: dup
     131: aload_0
     132: invokespecial #298                // Method net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$6."<init>":(Lnet/spals/appbuilder/filestore/s3/S3FileStorePlugin;)V
     135: invokevirtual #302                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
     138: checkcast     #304                // class com/amazonaws/services/s3/transfer/TransferManager
     141: astore        8
     143: aload         8
     145: astore        6
     147: new           #197                // class com/amazonaws/services/s3/model/ObjectMetadata
     150: dup
     151: invokespecial #305                // Method com/amazonaws/services/s3/model/ObjectMetadata."<init>":()V
     154: astore        9
     156: getstatic     #154                // Field scala/compat/java8/OptionConverters$RichOptionalGeneric$.MODULE$:Lscala/compat/java8/OptionConverters$RichOptionalGeneric$;
     159: getstatic     #149                // Field scala/compat/java8/OptionConverters$.MODULE$:Lscala/compat/java8/OptionConverters$;
     162: aload_2
     163: invokeinterface #254,  1          // InterfaceMethod net/spals/appbuilder/filestore/core/model/PutFileRequest.getContentLength:()Ljava/util/Optional;
     168: invokevirtual #161                // Method scala/compat/java8/OptionConverters$.RichOptionalGeneric:(Ljava/util/Optional;)Ljava/util/Optional;
     171: invokevirtual #165                // Method scala/compat/java8/OptionConverters$RichOptionalGeneric$.asScala$extension:(Ljava/util/Optional;)Lscala/Option;
     174: new           #307                // class net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$putFile$1
     177: dup
     178: aload_0
     179: aload         9
     181: invokespecial #310                // Method net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$putFile$1."<init>":(Lnet/spals/appbuilder/filestore/s3/S3FileStorePlugin;Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
     184: invokevirtual #314                // Method scala/Option.foreach:(Lscala/Function1;)V
     187: getstatic     #154                // Field scala/compat/java8/OptionConverters$RichOptionalGeneric$.MODULE$:Lscala/compat/java8/OptionConverters$RichOptionalGeneric$;
     190: getstatic     #149                // Field scala/compat/java8/OptionConverters$.MODULE$:Lscala/compat/java8/OptionConverters$;
     193: aload_2
     194: invokeinterface #317,  1          // InterfaceMethod net/spals/appbuilder/filestore/core/model/PutFileRequest.getContentType:()Ljava/util/Optional;
     199: invokevirtual #161                // Method scala/compat/java8/OptionConverters$.RichOptionalGeneric:(Ljava/util/Optional;)Ljava/util/Optional;
     202: invokevirtual #165                // Method scala/compat/java8/OptionConverters$RichOptionalGeneric$.asScala$extension:(Ljava/util/Optional;)Lscala/Option;
     205: new           #319                // class net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$putFile$2
     208: dup
     209: aload_0
     210: aload         9
     212: invokespecial #320                // Method net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$putFile$2."<init>":(Lnet/spals/appbuilder/filestore/s3/S3FileStorePlugin;Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
     215: invokevirtual #314                // Method scala/Option.foreach:(Lscala/Function1;)V
     218: aload_2
     219: invokeinterface #278,  1          // InterfaceMethod net/spals/appbuilder/filestore/core/model/PutFileRequest.getFileSecurityLevel:()Lnet/spals/appbuilder/filestore/core/model/FileSecurityLevel;
     224: astore        11
     226: getstatic     #284                // Field net/spals/appbuilder/filestore/core/model/FileSecurityLevel.PUBLIC:Lnet/spals/appbuilder/filestore/core/model/FileSecurityLevel;
     229: aload         11
     231: invokevirtual #269                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     234: ifeq          245
     237: getstatic     #326                // Field com/amazonaws/services/s3/model/CannedAccessControlList.PublicRead:Lcom/amazonaws/services/s3/model/CannedAccessControlList;
     240: astore        12
     242: goto          261
     245: getstatic     #289                // Field net/spals/appbuilder/filestore/core/model/FileSecurityLevel.PRIVATE:Lnet/spals/appbuilder/filestore/core/model/FileSecurityLevel;
     248: aload         11
     250: invokevirtual #269                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     253: ifeq          421
     256: getstatic     #329                // Field com/amazonaws/services/s3/model/CannedAccessControlList.Private:Lcom/amazonaws/services/s3/model/CannedAccessControlList;
     259: astore        12
     261: aload         12
     263: astore        10
     265: aload_0
     266: aload_1
     267: invokevirtual #108                // Method resolveS3ObjectId:(Lnet/spals/appbuilder/filestore/core/model/FileStoreKey;)Lcom/amazonaws/services/s3/model/S3ObjectId;
     270: astore        13
     272: new           #331                // class com/amazonaws/services/s3/model/PutObjectRequest
     275: dup
     276: aload         13
     278: invokevirtual #115                // Method com/amazonaws/services/s3/model/S3ObjectId.getBucket:()Ljava/lang/String;
     281: aload         13
     283: invokevirtual #118                // Method com/amazonaws/services/s3/model/S3ObjectId.getKey:()Ljava/lang/String;
     286: aload_3
     287: aload         9
     289: invokespecial #334                // Method com/amazonaws/services/s3/model/PutObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;Lcom/amazonaws/services/s3/model/ObjectMetadata;)V
     292: astore        14
     294: aload         14
     296: aload         10
     298: invokevirtual #338                // Method com/amazonaws/services/s3/model/PutObjectRequest.withCannedAcl:(Lcom/amazonaws/services/s3/model/CannedAccessControlList;)Lcom/amazonaws/services/s3/model/PutObjectRequest;
     301: pop
     302: getstatic     #46                 // Field scala/util/Try$.MODULE$:Lscala/util/Try$;
     305: new           #340                // class net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$7
     308: dup
     309: aload_0
     310: aload         6
     312: aload         14
     314: invokespecial #343                // Method net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$7."<init>":(Lnet/spals/appbuilder/filestore/s3/S3FileStorePlugin;Lcom/amazonaws/services/s3/transfer/TransferManager;Lcom/amazonaws/services/s3/model/PutObjectRequest;)V
     317: invokevirtual #56                 // Method scala/util/Try$.apply:(Lscala/Function0;)Lscala/util/Try;
     320: astore        16
     322: aload         16
     324: instanceof    #192                // class scala/util/Success
     327: ifeq          373
     330: new           #345                // class net/spals/appbuilder/filestore/core/model/FileMetadata$Builder
     333: dup
     334: invokespecial #346                // Method net/spals/appbuilder/filestore/core/model/FileMetadata$Builder."<init>":()V
     337: aload_2
     338: invokeinterface #278,  1          // InterfaceMethod net/spals/appbuilder/filestore/core/model/PutFileRequest.getFileSecurityLevel:()Lnet/spals/appbuilder/filestore/core/model/FileSecurityLevel;
     343: invokevirtual #350                // Method net/spals/appbuilder/filestore/core/model/FileMetadata$Builder.setSecurityLevel:(Lnet/spals/appbuilder/filestore/core/model/FileSecurityLevel;)Lnet/spals/appbuilder/filestore/core/model/FileMetadata$Builder;
     346: getstatic     #356                // Field net/spals/appbuilder/filestore/core/model/FileStoreLocation.REMOTE:Lnet/spals/appbuilder/filestore/core/model/FileStoreLocation;
     349: invokevirtual #360                // Method net/spals/appbuilder/filestore/core/model/FileMetadata$Builder.setStoreLocation:(Lnet/spals/appbuilder/filestore/core/model/FileStoreLocation;)Lnet/spals/appbuilder/filestore/core/model/FileMetadata$Builder;
     352: aload_0
     353: aload         13
     355: invokevirtual #364                // Method resolveBrowserURI:(Lcom/amazonaws/services/s3/model/S3ObjectId;)Ljava/net/URI;
     358: invokevirtual #368                // Method net/spals/appbuilder/filestore/core/model/FileMetadata$Builder.setURI:(Ljava/net/URI;)Lnet/spals/appbuilder/filestore/core/model/FileMetadata$Builder;
     361: invokevirtual #372                // Method net/spals/appbuilder/filestore/core/model/FileMetadata$Builder.build:()Lnet/spals/appbuilder/filestore/core/model/FileMetadata;
     364: astore        17
     366: aload         17
     368: aload_3
     369: invokevirtual #377                // Method java/io/InputStream.close:()V
     372: areturn
     373: aload         16
     375: instanceof    #212                // class scala/util/Failure
     378: ifeq          411
     381: aload         16
     383: checkcast     #212                // class scala/util/Failure
     386: astore        18
     388: aload         18
     390: invokevirtual #216                // Method scala/util/Failure.exception:()Ljava/lang/Throwable;
     393: astore        19
     395: new           #139                // class java/io/IOException
     398: dup
     399: invokespecial #224                // Method java/io/IOException."<init>":()V
     402: aload         19
     404: invokevirtual #228                // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     407: checkcast     #139                // class java/io/IOException
     410: athrow
     411: new           #236                // class scala/MatchError
     414: dup
     415: aload         16
     417: invokespecial #239                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     420: athrow
     421: new           #236                // class scala/MatchError
     424: dup
     425: aload         11
     427: invokespecial #239                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     430: athrow
     431: new           #236                // class scala/MatchError
     434: dup
     435: aload         7
     437: invokespecial #239                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     440: athrow
     441: new           #236                // class scala/MatchError
     444: dup
     445: aload         4
     447: invokespecial #239                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     450: athrow
     451: astore        15
     453: aload_3
     454: invokevirtual #377                // Method java/io/InputStream.close:()V
     457: aload         15
     459: athrow
    Exception table:
       from    to  target type
         373   421   451   any
         302   368   451   any

  public java.net.URI resolveBrowserURI(com.amazonaws.services.s3.model.S3ObjectId);
    Code:
       0: aload_0
       1: invokevirtual #388                // Method s3Region:()Lscala/Option;
       4: new           #390                // class net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$8
       7: dup
       8: aload_0
       9: invokespecial #391                // Method net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$8."<init>":(Lnet/spals/appbuilder/filestore/s3/S3FileStorePlugin;)V
      12: invokevirtual #174                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      15: new           #393                // class net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$9
      18: dup
      19: aload_0
      20: invokespecial #394                // Method net/spals/appbuilder/filestore/s3/S3FileStorePlugin$$anonfun$9."<init>":(Lnet/spals/appbuilder/filestore/s3/S3FileStorePlugin;)V
      23: invokevirtual #302                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      26: checkcast     #396                // class java/lang/String
      29: astore_2
      30: new           #398                // class com/amazonaws/DefaultRequest
      33: dup
      34: ldc_w         #400                // String Amazon S3
      37: invokespecial #402                // Method com/amazonaws/DefaultRequest."<init>":(Ljava/lang/String;)V
      40: astore_3
      41: new           #404                // class com/amazonaws/internal/IdentityEndpointBuilder
      44: dup
      45: new           #406                // class java/net/URI
      48: dup
      49: aload_2
      50: invokespecial #407                // Method java/net/URI."<init>":(Ljava/lang/String;)V
      53: invokespecial #410                // Method com/amazonaws/internal/IdentityEndpointBuilder."<init>":(Ljava/net/URI;)V
      56: astore        4
      58: new           #412                // class com/amazonaws/services/s3/internal/S3RequestEndpointResolver
      61: dup
      62: aload         4
      64: iconst_1
      65: aload_1
      66: invokevirtual #115                // Method com/amazonaws/services/s3/model/S3ObjectId.getBucket:()Ljava/lang/String;
      69: aload_1
      70: invokevirtual #118                // Method com/amazonaws/services/s3/model/S3ObjectId.getKey:()Ljava/lang/String;
      73: invokespecial #415                // Method com/amazonaws/services/s3/internal/S3RequestEndpointResolver."<init>":(Lcom/amazonaws/internal/ServiceEndpointBuilder;ZLjava/lang/String;Ljava/lang/String;)V
      76: astore        5
      78: aload         5
      80: aload_3
      81: invokevirtual #419                // Method com/amazonaws/services/s3/internal/S3RequestEndpointResolver.resolveRequestEndpoint:(Lcom/amazonaws/Request;)V
      84: aload_3
      85: iconst_0
      86: iconst_1
      87: invokestatic  #425                // Method com/amazonaws/services/s3/internal/ServiceUtils.convertRequestToUrl:(Lcom/amazonaws/Request;ZZ)Ljava/net/URL;
      90: invokevirtual #431                // Method java/net/URL.toURI:()Ljava/net/URI;
      93: areturn

  public com.amazonaws.services.s3.model.S3ObjectId resolveS3ObjectId(net.spals.appbuilder.filestore.core.model.FileStoreKey);
    Code:
       0: new           #112                // class com/amazonaws/services/s3/model/S3ObjectId
       3: dup
       4: aload_0
       5: invokevirtual #93                 // Method s3Bucket:()Ljava/lang/String;
       8: aload_1
       9: ldc_w         #439                // String /
      12: invokeinterface #443,  2          // InterfaceMethod net/spals/appbuilder/filestore/core/model/FileStoreKey.toGlobalId:(Ljava/lang/String;)Ljava/lang/String;
      17: invokespecial #444                // Method com/amazonaws/services/s3/model/S3ObjectId."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      20: areturn

  public net.spals.appbuilder.filestore.s3.S3FileStorePlugin(java.lang.String, com.amazonaws.services.s3.AmazonS3, net.spals.appbuilder.filestore.s3.S3EncryptionHolder, com.amazonaws.services.s3.transfer.TransferManager, net.spals.appbuilder.filestore.s3.S3TransferEncryptionHolder);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #91                 // Field net$spals$appbuilder$filestore$s3$S3FileStorePlugin$$s3Client:Lcom/amazonaws/services/s3/AmazonS3;
       5: aload_0
       6: aload_3
       7: putfield      #449                // Field net$spals$appbuilder$filestore$s3$S3FileStorePlugin$$s3EncryptionHolder:Lnet/spals/appbuilder/filestore/s3/S3EncryptionHolder;
      10: aload_0
      11: aload         4
      13: putfield      #286                // Field s3TransferManager:Lcom/amazonaws/services/s3/transfer/TransferManager;
      16: aload_0
      17: aload         5
      19: putfield      #291                // Field s3TransferEncryptionHolder:Lnet/spals/appbuilder/filestore/s3/S3TransferEncryptionHolder;
      22: aload_0
      23: invokespecial #450                // Method java/lang/Object."<init>":()V
      26: aload_0
      27: aconst_null
      28: putfield      #76                 // Field endpoint:Ljava/lang/String;
      31: aload_0
      32: new           #452                // class scala/StringContext
      35: dup
      36: getstatic     #457                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      39: iconst_2
      40: anewarray     #396                // class java/lang/String
      43: dup
      44: iconst_0
      45: ldc_w         #459                // String
      48: aastore
      49: dup
      50: iconst_1
      51: ldc_w         #461                // String -filestore
      54: aastore
      55: checkcast     #463                // class "[Ljava/lang/Object;"
      58: invokevirtual #467                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      61: invokespecial #470                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      64: getstatic     #457                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      67: iconst_1
      68: anewarray     #4                  // class java/lang/Object
      71: dup
      72: iconst_0
      73: aload_1
      74: invokevirtual #473                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      77: aastore
      78: invokevirtual #477                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      81: invokevirtual #481                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      84: putfield      #81                 // Field s3Bucket:Ljava/lang/String;
      87: return
}
