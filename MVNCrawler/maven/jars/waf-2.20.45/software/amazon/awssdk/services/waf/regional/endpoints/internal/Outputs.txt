Compiled from "Outputs.java"
public class software.amazon.awssdk.services.waf.regional.endpoints.internal.Outputs {
  private static final java.lang.String DNS_SUFFIX;

  private static final java.lang.String DUAL_STACK_DNS_SUFFIX;

  private static final java.lang.String SUPPORTS_FIPS;

  private static final java.lang.String SUPPORTS_DUAL_STACK;

  private final java.lang.String dnsSuffix;

  private final java.lang.String dualStackDnsSuffix;

  private final boolean supportsFips;

  private final boolean supportsDualStack;

  private software.amazon.awssdk.services.waf.regional.endpoints.internal.Outputs(software.amazon.awssdk.services.waf.regional.endpoints.internal.Outputs$Builder);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #3                  // Method software/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder.access$000:(Lsoftware/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder;)Ljava/lang/String;
       9: putfield      #4                  // Field dnsSuffix:Ljava/lang/String;
      12: aload_0
      13: aload_1
      14: invokestatic  #5                  // Method software/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder.access$100:(Lsoftware/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder;)Ljava/lang/String;
      17: putfield      #6                  // Field dualStackDnsSuffix:Ljava/lang/String;
      20: aload_0
      21: aload_1
      22: invokestatic  #7                  // Method software/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder.access$200:(Lsoftware/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder;)Z
      25: putfield      #8                  // Field supportsFips:Z
      28: aload_0
      29: aload_1
      30: invokestatic  #9                  // Method software/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder.access$300:(Lsoftware/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder;)Z
      33: putfield      #10                 // Field supportsDualStack:Z
      36: return

  public java.lang.String dnsSuffix();
    Code:
       0: aload_0
       1: getfield      #4                  // Field dnsSuffix:Ljava/lang/String;
       4: areturn

  public java.lang.String dualStackDnsSuffix();
    Code:
       0: aload_0
       1: getfield      #6                  // Field dualStackDnsSuffix:Ljava/lang/String;
       4: areturn

  public boolean supportsFips();
    Code:
       0: aload_0
       1: getfield      #8                  // Field supportsFips:Z
       4: ireturn

  public boolean supportsDualStack();
    Code:
       0: aload_0
       1: getfield      #10                 // Field supportsDualStack:Z
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #12                 // class software/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs
      28: astore_2
      29: aload_0
      30: getfield      #8                  // Field supportsFips:Z
      33: aload_2
      34: getfield      #8                  // Field supportsFips:Z
      37: if_icmpeq     42
      40: iconst_0
      41: ireturn
      42: aload_0
      43: getfield      #10                 // Field supportsDualStack:Z
      46: aload_2
      47: getfield      #10                 // Field supportsDualStack:Z
      50: if_icmpeq     55
      53: iconst_0
      54: ireturn
      55: aload_0
      56: getfield      #4                  // Field dnsSuffix:Ljava/lang/String;
      59: ifnull        79
      62: aload_0
      63: getfield      #4                  // Field dnsSuffix:Ljava/lang/String;
      66: aload_2
      67: getfield      #4                  // Field dnsSuffix:Ljava/lang/String;
      70: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      73: ifne          88
      76: goto          86
      79: aload_2
      80: getfield      #4                  // Field dnsSuffix:Ljava/lang/String;
      83: ifnull        88
      86: iconst_0
      87: ireturn
      88: aload_0
      89: getfield      #6                  // Field dualStackDnsSuffix:Ljava/lang/String;
      92: ifnull        109
      95: aload_0
      96: getfield      #6                  // Field dualStackDnsSuffix:Ljava/lang/String;
      99: aload_2
     100: getfield      #6                  // Field dualStackDnsSuffix:Ljava/lang/String;
     103: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     106: goto          121
     109: aload_2
     110: getfield      #6                  // Field dualStackDnsSuffix:Ljava/lang/String;
     113: ifnonnull     120
     116: iconst_1
     117: goto          121
     120: iconst_0
     121: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field dnsSuffix:Ljava/lang/String;
       4: ifnull        17
       7: aload_0
       8: getfield      #4                  // Field dnsSuffix:Ljava/lang/String;
      11: invokevirtual #14                 // Method java/lang/String.hashCode:()I
      14: goto          18
      17: iconst_0
      18: istore_1
      19: bipush        31
      21: iload_1
      22: imul
      23: aload_0
      24: getfield      #6                  // Field dualStackDnsSuffix:Ljava/lang/String;
      27: ifnull        40
      30: aload_0
      31: getfield      #6                  // Field dualStackDnsSuffix:Ljava/lang/String;
      34: invokevirtual #14                 // Method java/lang/String.hashCode:()I
      37: goto          41
      40: iconst_0
      41: iadd
      42: istore_1
      43: bipush        31
      45: iload_1
      46: imul
      47: aload_0
      48: getfield      #8                  // Field supportsFips:Z
      51: ifeq          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: iadd
      60: istore_1
      61: bipush        31
      63: iload_1
      64: imul
      65: aload_0
      66: getfield      #10                 // Field supportsDualStack:Z
      69: ifeq          76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: iadd
      78: istore_1
      79: iload_1
      80: ireturn

  public java.lang.String toString();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #17                 // String Outputs{dnsSuffix=\'
       9: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field dnsSuffix:Ljava/lang/String;
      16: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: bipush        39
      21: invokevirtual #19                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: ldc           #20                 // String , dualStackDnsSuffix=\'
      26: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #6                  // Field dualStackDnsSuffix:Ljava/lang/String;
      33: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: bipush        39
      38: invokevirtual #19                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      41: ldc           #21                 // String , supportsFips=
      43: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: getfield      #8                  // Field supportsFips:Z
      50: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      53: ldc           #23                 // String , supportsDualStack=
      55: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: getfield      #10                 // Field supportsDualStack:Z
      62: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      65: bipush        125
      67: invokevirtual #19                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      70: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: areturn

  public static software.amazon.awssdk.services.waf.regional.endpoints.internal.Outputs$Builder builder();
    Code:
       0: new           #25                 // class software/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder
       3: dup
       4: invokespecial #26                 // Method software/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder."<init>":()V
       7: areturn

  public static software.amazon.awssdk.services.waf.regional.endpoints.internal.Outputs fromNode(software.amazon.awssdk.protocols.jsoncore.JsonNode);
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod software/amazon/awssdk/protocols/jsoncore/JsonNode.asObject:()Ljava/util/Map;
       6: astore_1
       7: invokestatic  #28                 // Method builder:()Lsoftware/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder;
      10: astore_2
      11: aload_1
      12: ldc           #29                 // String dnsSuffix
      14: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #31                 // class software/amazon/awssdk/protocols/jsoncore/JsonNode
      22: astore_3
      23: aload_3
      24: ifnull        38
      27: aload_2
      28: aload_3
      29: invokeinterface #32,  1           // InterfaceMethod software/amazon/awssdk/protocols/jsoncore/JsonNode.asString:()Ljava/lang/String;
      34: invokevirtual #33                 // Method software/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder.dnsSuffix:(Ljava/lang/String;)Lsoftware/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder;
      37: pop
      38: aload_1
      39: ldc           #34                 // String dualStackDnsSuffix
      41: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #31                 // class software/amazon/awssdk/protocols/jsoncore/JsonNode
      49: astore        4
      51: aload         4
      53: ifnull        68
      56: aload_2
      57: aload         4
      59: invokeinterface #32,  1           // InterfaceMethod software/amazon/awssdk/protocols/jsoncore/JsonNode.asString:()Ljava/lang/String;
      64: invokevirtual #35                 // Method software/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder.dualStackDnsSuffix:(Ljava/lang/String;)Lsoftware/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder;
      67: pop
      68: aload_1
      69: ldc           #36                 // String supportsFIPS
      71: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      76: checkcast     #31                 // class software/amazon/awssdk/protocols/jsoncore/JsonNode
      79: astore        5
      81: aload         5
      83: ifnull        98
      86: aload_2
      87: aload         5
      89: invokeinterface #37,  1           // InterfaceMethod software/amazon/awssdk/protocols/jsoncore/JsonNode.asBoolean:()Z
      94: invokevirtual #38                 // Method software/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder.supportsFips:(Z)Lsoftware/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder;
      97: pop
      98: aload_1
      99: ldc           #39                 // String supportsDualStack
     101: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     106: checkcast     #31                 // class software/amazon/awssdk/protocols/jsoncore/JsonNode
     109: astore        6
     111: aload         6
     113: ifnull        128
     116: aload_2
     117: aload         6
     119: invokeinterface #37,  1           // InterfaceMethod software/amazon/awssdk/protocols/jsoncore/JsonNode.asBoolean:()Z
     124: invokevirtual #40                 // Method software/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder.supportsDualStack:(Z)Lsoftware/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder;
     127: pop
     128: aload_2
     129: invokevirtual #41                 // Method software/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder.build:()Lsoftware/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs;
     132: areturn

  software.amazon.awssdk.services.waf.regional.endpoints.internal.Outputs(software.amazon.awssdk.services.waf.regional.endpoints.internal.Outputs$Builder, software.amazon.awssdk.services.waf.regional.endpoints.internal.Outputs$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lsoftware/amazon/awssdk/services/waf/regional/endpoints/internal/Outputs$Builder;)V
       5: return
}
