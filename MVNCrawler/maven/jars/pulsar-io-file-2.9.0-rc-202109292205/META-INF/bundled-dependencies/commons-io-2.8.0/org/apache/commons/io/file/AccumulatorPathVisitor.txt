Compiled from "AccumulatorPathVisitor.java"
public class org.apache.commons.io.file.AccumulatorPathVisitor extends org.apache.commons.io.file.CountingPathVisitor {
  private final java.util.List<java.nio.file.Path> dirList;

  private final java.util.List<java.nio.file.Path> fileList;

  public static org.apache.commons.io.file.AccumulatorPathVisitor withBigIntegerCounters();
    Code:
       0: new           #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor
       3: dup
       4: invokestatic  #2                  // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
       7: invokespecial #3                  // Method "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;)V
      10: areturn

  public static org.apache.commons.io.file.AccumulatorPathVisitor withLongCounters();
    Code:
       0: new           #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor
       3: dup
       4: invokestatic  #4                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
       7: invokespecial #3                  // Method "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;)V
      10: areturn

  public org.apache.commons.io.file.AccumulatorPathVisitor(org.apache.commons.io.file.Counters$PathCounters);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/commons/io/file/CountingPathVisitor."<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;)V
       5: aload_0
       6: new           #6                  // class java/util/ArrayList
       9: dup
      10: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #8                  // Field dirList:Ljava/util/List;
      16: aload_0
      17: new           #6                  // class java/util/ArrayList
      20: dup
      21: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      24: putfield      #9                  // Field fileList:Ljava/util/List;
      27: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: aload_1
       9: invokespecial #10                 // Method org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z
      12: ifne          17
      15: iconst_0
      16: ireturn
      17: aload_1
      18: instanceof    #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor
      21: ifne          26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor
      30: astore_2
      31: aload_0
      32: getfield      #8                  // Field dirList:Ljava/util/List;
      35: aload_2
      36: getfield      #8                  // Field dirList:Ljava/util/List;
      39: invokestatic  #11                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      42: ifeq          63
      45: aload_0
      46: getfield      #9                  // Field fileList:Ljava/util/List;
      49: aload_2
      50: getfield      #9                  // Field fileList:Ljava/util/List;
      53: invokestatic  #11                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      56: ifeq          63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: ireturn

  public java.util.List<java.nio.file.Path> getDirList();
    Code:
       0: aload_0
       1: getfield      #8                  // Field dirList:Ljava/util/List;
       4: areturn

  public java.util.List<java.nio.file.Path> getFileList();
    Code:
       0: aload_0
       1: getfield      #9                  // Field fileList:Ljava/util/List;
       4: areturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: aload_0
       4: invokespecial #12                 // Method org/apache/commons/io/file/CountingPathVisitor.hashCode:()I
       7: istore_2
       8: bipush        31
      10: iload_2
      11: imul
      12: iconst_2
      13: anewarray     #13                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_0
      19: getfield      #8                  // Field dirList:Ljava/util/List;
      22: aastore
      23: dup
      24: iconst_1
      25: aload_0
      26: getfield      #9                  // Field fileList:Ljava/util/List;
      29: aastore
      30: invokestatic  #14                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      33: iadd
      34: istore_2
      35: iload_2
      36: ireturn

  public java.util.List<java.nio.file.Path> relativizeDirectories(java.nio.file.Path, boolean, java.util.Comparator<? super java.nio.file.Path>);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getDirList:()Ljava/util/List;
       4: aload_1
       5: iload_2
       6: aload_3
       7: invokestatic  #16                 // Method org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;
      10: areturn

  public java.util.List<java.nio.file.Path> relativizeFiles(java.nio.file.Path, boolean, java.util.Comparator<? super java.nio.file.Path>);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getFileList:()Ljava/util/List;
       4: aload_1
       5: iload_2
       6: aload_3
       7: invokestatic  #16                 // Method org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;
      10: areturn

  public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_0
       2: anewarray     #18                 // class java/nio/file/LinkOption
       5: invokestatic  #19                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       8: ifeq          18
      11: aload_0
      12: getfield      #8                  // Field dirList:Ljava/util/List;
      15: goto          22
      18: aload_0
      19: getfield      #9                  // Field fileList:Ljava/util/List;
      22: aload_1
      23: invokeinterface #20,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
      28: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: aload_0
      35: aload_1
      36: aload_2
      37: invokespecial #22                 // Method org/apache/commons/io/file/CountingPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
      40: areturn

  public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #23                 // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #24                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
       9: areturn
}
