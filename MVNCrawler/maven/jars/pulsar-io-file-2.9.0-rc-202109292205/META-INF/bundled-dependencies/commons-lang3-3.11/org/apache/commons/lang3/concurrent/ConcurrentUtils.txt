Compiled from "ConcurrentUtils.java"
public class org.apache.commons.lang3.concurrent.ConcurrentUtils {
  private org.apache.commons.lang3.concurrent.ConcurrentUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.commons.lang3.concurrent.ConcurrentException extractCause(java.util.concurrent.ExecutionException);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_0
      14: invokestatic  #3                  // Method throwCause:(Ljava/util/concurrent/ExecutionException;)V
      17: new           #4                  // class org/apache/commons/lang3/concurrent/ConcurrentException
      20: dup
      21: aload_0
      22: invokevirtual #5                  // Method java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;
      25: aload_0
      26: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      29: invokespecial #6                  // Method org/apache/commons/lang3/concurrent/ConcurrentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: areturn

  public static org.apache.commons.lang3.concurrent.ConcurrentRuntimeException extractCauseUnchecked(java.util.concurrent.ExecutionException);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_0
      14: invokestatic  #3                  // Method throwCause:(Ljava/util/concurrent/ExecutionException;)V
      17: new           #7                  // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException
      20: dup
      21: aload_0
      22: invokevirtual #5                  // Method java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;
      25: aload_0
      26: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      29: invokespecial #8                  // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: areturn

  public static void handleCause(java.util.concurrent.ExecutionException) throws org.apache.commons.lang3.concurrent.ConcurrentException;
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;
       4: astore_1
       5: aload_1
       6: ifnull        11
       9: aload_1
      10: athrow
      11: return

  public static void handleCauseUnchecked(java.util.concurrent.ExecutionException);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;
       4: astore_1
       5: aload_1
       6: ifnull        11
       9: aload_1
      10: athrow
      11: return

  static java.lang.Throwable checkedException(java.lang.Throwable);
    Code:
       0: aload_0
       1: ifnull        22
       4: aload_0
       5: instanceof    #11                 // class java/lang/RuntimeException
       8: ifne          22
      11: aload_0
      12: instanceof    #12                 // class java/lang/Error
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: new           #13                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #15                 // String Not a checked exception:
      32: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: iconst_0
      43: anewarray     #19                 // class java/lang/Object
      46: invokestatic  #20                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
      49: aload_0
      50: areturn

  private static void throwCause(java.util.concurrent.ExecutionException);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
       4: instanceof    #11                 // class java/lang/RuntimeException
       7: ifeq          18
      10: aload_0
      11: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      14: checkcast     #11                 // class java/lang/RuntimeException
      17: athrow
      18: aload_0
      19: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      22: instanceof    #12                 // class java/lang/Error
      25: ifeq          36
      28: aload_0
      29: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      32: checkcast     #12                 // class java/lang/Error
      35: athrow
      36: return

  public static <T> T initialize(org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>) throws org.apache.commons.lang3.concurrent.ConcurrentException;
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #21,  1           // InterfaceMethod org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;
      10: goto          14
      13: aconst_null
      14: areturn

  public static <T> T initializeUnchecked(org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>);
    Code:
       0: aload_0
       1: invokestatic  #22                 // Method initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
       4: areturn
       5: astore_1
       6: new           #7                  // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException
       9: dup
      10: aload_1
      11: invokevirtual #23                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;
      14: invokespecial #24                 // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class org/apache/commons/lang3/concurrent/ConcurrentException

  public static <K, V> V putIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, V);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokeinterface #25,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_3
      15: aload_3
      16: ifnull        23
      19: aload_3
      20: goto          24
      23: aload_2
      24: areturn

  public static <K, V> V createIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>) throws org.apache.commons.lang3.concurrent.ConcurrentException;
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_2
       5: ifnonnull     10
       8: aconst_null
       9: areturn
      10: aload_0
      11: aload_1
      12: invokeinterface #26,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: astore_3
      18: aload_3
      19: ifnonnull     34
      22: aload_0
      23: aload_1
      24: aload_2
      25: invokeinterface #21,  1           // InterfaceMethod org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;
      30: invokestatic  #27                 // Method putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: areturn
      34: aload_3
      35: areturn

  public static <K, V> V createIfAbsentUnchecked(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #28                 // Method createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
       6: areturn
       7: astore_3
       8: new           #7                  // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException
      11: dup
      12: aload_3
      13: invokevirtual #23                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;
      16: invokespecial #24                 // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException."<init>":(Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     6     7   Class org/apache/commons/lang3/concurrent/ConcurrentException

  public static <T> java.util.concurrent.Future<T> constantFuture(T);
    Code:
       0: new           #29                 // class org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture
       3: dup
       4: aload_0
       5: invokespecial #30                 // Method org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture."<init>":(Ljava/lang/Object;)V
       8: areturn
}
