Compiled from "EventCountCircuitBreaker.java"
class org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$StateStrategyOpen extends org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$StateStrategy {
  private org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$StateStrategyOpen();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #2                  // Method org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy."<init>":(Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$1;)V
       5: return

  public boolean isStateTransition(org.apache.commons.lang3.concurrent.EventCountCircuitBreaker, org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$CheckIntervalData, org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$CheckIntervalData);
    Code:
       0: aload_3
       1: invokevirtual #3                  // Method org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData.getCheckIntervalStart:()J
       4: aload_2
       5: invokevirtual #3                  // Method org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData.getCheckIntervalStart:()J
       8: lcmp
       9: ifeq          27
      12: aload_2
      13: invokevirtual #4                  // Method org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData.getEventCount:()I
      16: aload_1
      17: invokevirtual #5                  // Method org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.getClosingThreshold:()I
      20: if_icmpge     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  protected long fetchCheckInterval(org.apache.commons.lang3.concurrent.EventCountCircuitBreaker);
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method org/apache/commons/lang3/concurrent/EventCountCircuitBreaker.getClosingInterval:()J
       4: lreturn

  org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$StateStrategyOpen(org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
