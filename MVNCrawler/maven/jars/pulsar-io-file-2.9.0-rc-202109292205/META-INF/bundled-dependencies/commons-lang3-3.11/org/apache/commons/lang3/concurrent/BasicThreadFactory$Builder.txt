Compiled from "BasicThreadFactory.java"
public class org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder implements org.apache.commons.lang3.builder.Builder<org.apache.commons.lang3.concurrent.BasicThreadFactory> {
  private java.util.concurrent.ThreadFactory wrappedFactory;

  private java.lang.Thread$UncaughtExceptionHandler exceptionHandler;

  private java.lang.String namingPattern;

  private java.lang.Integer priority;

  private java.lang.Boolean daemon;

  public org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder wrappedFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_1
       1: ldc           #7                  // String Wrapped ThreadFactory must not be null!
       3: iconst_0
       4: anewarray     #8                  // class java/lang/Object
       7: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: aload_1
      13: putfield      #5                  // Field wrappedFactory:Ljava/util/concurrent/ThreadFactory;
      16: aload_0
      17: areturn

  public org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder namingPattern(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #10                 // String Naming pattern must not be null!
       3: iconst_0
       4: anewarray     #8                  // class java/lang/Object
       7: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field namingPattern:Ljava/lang/String;
      16: aload_0
      17: areturn

  public org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder daemon(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #2                  // Field daemon:Ljava/lang/Boolean;
       8: aload_0
       9: areturn

  public org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder priority(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #3                  // Field priority:Ljava/lang/Integer;
       8: aload_0
       9: areturn

  public org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder uncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler);
    Code:
       0: aload_1
       1: ldc           #13                 // String Uncaught exception handler must not be null!
       3: iconst_0
       4: anewarray     #8                  // class java/lang/Object
       7: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: aload_1
      13: putfield      #1                  // Field exceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
      16: aload_0
      17: areturn

  public void reset();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #5                  // Field wrappedFactory:Ljava/util/concurrent/ThreadFactory;
       5: aload_0
       6: aconst_null
       7: putfield      #1                  // Field exceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
      10: aload_0
      11: aconst_null
      12: putfield      #4                  // Field namingPattern:Ljava/lang/String;
      15: aload_0
      16: aconst_null
      17: putfield      #3                  // Field priority:Ljava/lang/Integer;
      20: aload_0
      21: aconst_null
      22: putfield      #2                  // Field daemon:Ljava/lang/Boolean;
      25: return

  public org.apache.commons.lang3.concurrent.BasicThreadFactory build();
    Code:
       0: new           #14                 // class org/apache/commons/lang3/concurrent/BasicThreadFactory
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #15                 // Method org/apache/commons/lang3/concurrent/BasicThreadFactory."<init>":(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$1;)V
       9: astore_1
      10: aload_0
      11: invokevirtual #16                 // Method reset:()V
      14: aload_1
      15: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method build:()Lorg/apache/commons/lang3/concurrent/BasicThreadFactory;
       4: areturn

  static java.util.concurrent.ThreadFactory access$000(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field wrappedFactory:Ljava/util/concurrent/ThreadFactory;
       4: areturn

  static java.lang.String access$100(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field namingPattern:Ljava/lang/String;
       4: areturn

  static java.lang.Integer access$200(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field priority:Ljava/lang/Integer;
       4: areturn

  static java.lang.Boolean access$300(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field daemon:Ljava/lang/Boolean;
       4: areturn

  static java.lang.Thread$UncaughtExceptionHandler access$400(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder);
    Code:
       0: aload_0
       1: getfield      #1                  // Field exceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
       4: areturn
}
