Compiled from "StdArraySerializers.java"
public class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer extends com.fasterxml.jackson.databind.ser.std.ArraySerializerBase<boolean[]> {
  private static final com.fasterxml.jackson.databind.JavaType VALUE_TYPE;

  public com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer();
    Code:
       0: aload_0
       1: ldc           #1                  // class "[Z"
       3: invokespecial #2                  // Method com/fasterxml/jackson/databind/ser/std/ArraySerializerBase."<init>":(Ljava/lang/Class;)V
       6: return

  protected com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer, com.fasterxml.jackson.databind.BeanProperty, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #3                  // Method com/fasterxml/jackson/databind/ser/std/ArraySerializerBase."<init>":(Lcom/fasterxml/jackson/databind/ser/std/ArraySerializerBase;Lcom/fasterxml/jackson/databind/BeanProperty;Ljava/lang/Boolean;)V
       7: return

  public com.fasterxml.jackson.databind.JsonSerializer<?> _withResolved(com.fasterxml.jackson.databind.BeanProperty, java.lang.Boolean);
    Code:
       0: new           #4                  // class com/fasterxml/jackson/databind/ser/std/StdArraySerializers$BooleanArraySerializer
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #5                  // Method "<init>":(Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers$BooleanArraySerializer;Lcom/fasterxml/jackson/databind/BeanProperty;Ljava/lang/Boolean;)V
      10: areturn

  public com.fasterxml.jackson.databind.ser.ContainerSerializer<?> _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer);
    Code:
       0: aload_0
       1: areturn

  public com.fasterxml.jackson.databind.JavaType getContentType();
    Code:
       0: getstatic     #6                  // Field VALUE_TYPE:Lcom/fasterxml/jackson/databind/JavaType;
       3: areturn

  public com.fasterxml.jackson.databind.JsonSerializer<?> getContentSerializer();
    Code:
       0: aconst_null
       1: areturn

  public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, boolean[]);
    Code:
       0: aload_2
       1: arraylength
       2: ifne          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ireturn

  public boolean hasSingleElement(boolean[]);
    Code:
       0: aload_1
       1: arraylength
       2: iconst_1
       3: if_icmpne     10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public final void serialize(boolean[], com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_1
       1: arraylength
       2: istore        4
       4: iload         4
       6: iconst_1
       7: if_icmpne     26
      10: aload_0
      11: aload_3
      12: invokevirtual #7                  // Method _shouldUnwrapSingle:(Lcom/fasterxml/jackson/databind/SerializerProvider;)Z
      15: ifeq          26
      18: aload_0
      19: aload_1
      20: aload_2
      21: aload_3
      22: invokevirtual #8                  // Method serializeContents:([ZLcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      25: return
      26: aload_2
      27: aload_1
      28: iload         4
      30: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeStartArray:(Ljava/lang/Object;I)V
      33: aload_0
      34: aload_1
      35: aload_2
      36: aload_3
      37: invokevirtual #8                  // Method serializeContents:([ZLcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      40: aload_2
      41: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeEndArray:()V
      44: return

  public void serializeContents(boolean[], com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: aload_1
       4: arraylength
       5: istore        5
       7: iload         4
       9: iload         5
      11: if_icmpge     28
      14: aload_2
      15: aload_1
      16: iload         4
      18: baload
      19: invokevirtual #11                 // Method com/fasterxml/jackson/core/JsonGenerator.writeBoolean:(Z)V
      22: iinc          4, 1
      25: goto          7
      28: return

  public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: ldc           #12                 // String array
       3: iconst_1
       4: invokevirtual #13                 // Method createSchemaNode:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
       7: astore_3
       8: aload_3
       9: ldc           #14                 // String items
      11: aload_0
      12: ldc           #15                 // String boolean
      14: invokevirtual #16                 // Method createSchemaNode:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/ObjectNode;
      17: invokevirtual #17                 // Method com/fasterxml/jackson/databind/node/ObjectNode.set:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;
      20: pop
      21: aload_3
      22: areturn

  public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #18                 // Field com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes.BOOLEAN:Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;
       6: invokevirtual #19                 // Method visitArrayFormat:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;)V
       9: return

  public void serializeContents(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class "[Z"
       5: aload_2
       6: aload_3
       7: invokevirtual #8                  // Method serializeContents:([ZLcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      10: return

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class "[Z"
       5: aload_2
       6: aload_3
       7: invokevirtual #20                 // Method serialize:([ZLcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      10: return

  public boolean hasSingleElement(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class "[Z"
       5: invokevirtual #21                 // Method hasSingleElement:([Z)Z
       8: ireturn

  public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #1                  // class "[Z"
       6: invokevirtual #22                 // Method isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;[Z)Z
       9: ireturn

  static {};
    Code:
       0: invokestatic  #23                 // Method com/fasterxml/jackson/databind/type/TypeFactory.defaultInstance:()Lcom/fasterxml/jackson/databind/type/TypeFactory;
       3: ldc           #24                 // class java/lang/Boolean
       5: invokevirtual #25                 // Method com/fasterxml/jackson/databind/type/TypeFactory.uncheckedSimpleType:(Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/JavaType;
       8: putstatic     #6                  // Field VALUE_TYPE:Lcom/fasterxml/jackson/databind/JavaType;
      11: return
}
