Compiled from "CryptoConfig.java"
public class org.apache.pulsar.common.functions.CryptoConfig {
  private java.lang.String cryptoKeyReaderClassName;

  private java.util.Map<java.lang.String, java.lang.Object> cryptoKeyReaderConfig;

  private java.lang.String[] encryptionKeys;

  private org.apache.pulsar.client.api.ProducerCryptoFailureAction producerCryptoFailureAction;

  private org.apache.pulsar.client.api.ConsumerCryptoFailureAction consumerCryptoFailureAction;

  public static org.apache.pulsar.common.functions.CryptoConfig$CryptoConfigBuilder builder();
    Code:
       0: new           #1                  // class org/apache/pulsar/common/functions/CryptoConfig$CryptoConfigBuilder
       3: dup
       4: invokespecial #2                  // Method org/apache/pulsar/common/functions/CryptoConfig$CryptoConfigBuilder."<init>":()V
       7: areturn

  public java.lang.String getCryptoKeyReaderClassName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cryptoKeyReaderClassName:Ljava/lang/String;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getCryptoKeyReaderConfig();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cryptoKeyReaderConfig:Ljava/util/Map;
       4: areturn

  public java.lang.String[] getEncryptionKeys();
    Code:
       0: aload_0
       1: getfield      #5                  // Field encryptionKeys:[Ljava/lang/String;
       4: areturn

  public org.apache.pulsar.client.api.ProducerCryptoFailureAction getProducerCryptoFailureAction();
    Code:
       0: aload_0
       1: getfield      #6                  // Field producerCryptoFailureAction:Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
       4: areturn

  public org.apache.pulsar.client.api.ConsumerCryptoFailureAction getConsumerCryptoFailureAction();
    Code:
       0: aload_0
       1: getfield      #7                  // Field consumerCryptoFailureAction:Lorg/apache/pulsar/client/api/ConsumerCryptoFailureAction;
       4: areturn

  public void setCryptoKeyReaderClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field cryptoKeyReaderClassName:Ljava/lang/String;
       5: return

  public void setCryptoKeyReaderConfig(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field cryptoKeyReaderConfig:Ljava/util/Map;
       5: return

  public void setEncryptionKeys(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field encryptionKeys:[Ljava/lang/String;
       5: return

  public void setProducerCryptoFailureAction(org.apache.pulsar.client.api.ProducerCryptoFailureAction);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field producerCryptoFailureAction:Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
       5: return

  public void setConsumerCryptoFailureAction(org.apache.pulsar.client.api.ConsumerCryptoFailureAction);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field consumerCryptoFailureAction:Lorg/apache/pulsar/client/api/ConsumerCryptoFailureAction;
       5: return

  public java.lang.String toString();
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #10                 // String CryptoConfig(cryptoKeyReaderClassName=
       9: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #12                 // Method getCryptoKeyReaderClassName:()Ljava/lang/String;
      16: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #13                 // String , cryptoKeyReaderConfig=
      21: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #14                 // Method getCryptoKeyReaderConfig:()Ljava/util/Map;
      28: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #16                 // String , encryptionKeys=
      33: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #17                 // Method getEncryptionKeys:()[Ljava/lang/String;
      40: invokestatic  #18                 // Method java/util/Arrays.deepToString:([Ljava/lang/Object;)Ljava/lang/String;
      43: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #19                 // String , producerCryptoFailureAction=
      48: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: invokevirtual #20                 // Method getProducerCryptoFailureAction:()Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
      55: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      58: ldc           #21                 // String , consumerCryptoFailureAction=
      60: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_0
      64: invokevirtual #22                 // Method getConsumerCryptoFailureAction:()Lorg/apache/pulsar/client/api/ConsumerCryptoFailureAction;
      67: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      70: ldc           #23                 // String )
      72: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: areturn

  public org.apache.pulsar.common.functions.CryptoConfig();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.pulsar.common.functions.CryptoConfig(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, java.lang.String[], org.apache.pulsar.client.api.ProducerCryptoFailureAction, org.apache.pulsar.client.api.ConsumerCryptoFailureAction);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field cryptoKeyReaderClassName:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field cryptoKeyReaderConfig:Ljava/util/Map;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field encryptionKeys:[Ljava/lang/String;
      19: aload_0
      20: aload         4
      22: putfield      #6                  // Field producerCryptoFailureAction:Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
      25: aload_0
      26: aload         5
      28: putfield      #7                  // Field consumerCryptoFailureAction:Lorg/apache/pulsar/client/api/ConsumerCryptoFailureAction;
      31: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #26                 // class org/apache/pulsar/common/functions/CryptoConfig
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #26                 // class org/apache/pulsar/common/functions/CryptoConfig
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #27                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #12                 // Method getCryptoKeyReaderClassName:()Ljava/lang/String;
      35: astore_3
      36: aload_2
      37: invokevirtual #12                 // Method getCryptoKeyReaderClassName:()Ljava/lang/String;
      40: astore        4
      42: aload_3
      43: ifnonnull     54
      46: aload         4
      48: ifnull        65
      51: goto          63
      54: aload_3
      55: aload         4
      57: invokevirtual #28                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: aload_0
      66: invokevirtual #14                 // Method getCryptoKeyReaderConfig:()Ljava/util/Map;
      69: astore        5
      71: aload_2
      72: invokevirtual #14                 // Method getCryptoKeyReaderConfig:()Ljava/util/Map;
      75: astore        6
      77: aload         5
      79: ifnonnull     90
      82: aload         6
      84: ifnull        102
      87: goto          100
      90: aload         5
      92: aload         6
      94: invokevirtual #28                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      97: ifne          102
     100: iconst_0
     101: ireturn
     102: aload_0
     103: invokevirtual #17                 // Method getEncryptionKeys:()[Ljava/lang/String;
     106: aload_2
     107: invokevirtual #17                 // Method getEncryptionKeys:()[Ljava/lang/String;
     110: invokestatic  #29                 // Method java/util/Arrays.deepEquals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
     113: ifne          118
     116: iconst_0
     117: ireturn
     118: aload_0
     119: invokevirtual #20                 // Method getProducerCryptoFailureAction:()Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
     122: astore        7
     124: aload_2
     125: invokevirtual #20                 // Method getProducerCryptoFailureAction:()Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
     128: astore        8
     130: aload         7
     132: ifnonnull     143
     135: aload         8
     137: ifnull        155
     140: goto          153
     143: aload         7
     145: aload         8
     147: invokevirtual #28                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     150: ifne          155
     153: iconst_0
     154: ireturn
     155: aload_0
     156: invokevirtual #22                 // Method getConsumerCryptoFailureAction:()Lorg/apache/pulsar/client/api/ConsumerCryptoFailureAction;
     159: astore        9
     161: aload_2
     162: invokevirtual #22                 // Method getConsumerCryptoFailureAction:()Lorg/apache/pulsar/client/api/ConsumerCryptoFailureAction;
     165: astore        10
     167: aload         9
     169: ifnonnull     180
     172: aload         10
     174: ifnull        192
     177: goto          190
     180: aload         9
     182: aload         10
     184: invokevirtual #28                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     187: ifne          192
     190: iconst_0
     191: ireturn
     192: iconst_1
     193: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #26                 // class org/apache/pulsar/common/functions/CryptoConfig
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #12                 // Method getCryptoKeyReaderClassName:()Ljava/lang/String;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #30                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: invokevirtual #14                 // Method getCryptoKeyReaderConfig:()Ljava/util/Map;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #30                 // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: iload_2
      57: bipush        59
      59: imul
      60: aload_0
      61: invokevirtual #17                 // Method getEncryptionKeys:()[Ljava/lang/String;
      64: invokestatic  #31                 // Method java/util/Arrays.deepHashCode:([Ljava/lang/Object;)I
      67: iadd
      68: istore_2
      69: aload_0
      70: invokevirtual #20                 // Method getProducerCryptoFailureAction:()Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
      73: astore        5
      75: iload_2
      76: bipush        59
      78: imul
      79: aload         5
      81: ifnonnull     89
      84: bipush        43
      86: goto          94
      89: aload         5
      91: invokevirtual #30                 // Method java/lang/Object.hashCode:()I
      94: iadd
      95: istore_2
      96: aload_0
      97: invokevirtual #22                 // Method getConsumerCryptoFailureAction:()Lorg/apache/pulsar/client/api/ConsumerCryptoFailureAction;
     100: astore        6
     102: iload_2
     103: bipush        59
     105: imul
     106: aload         6
     108: ifnonnull     116
     111: bipush        43
     113: goto          121
     116: aload         6
     118: invokevirtual #30                 // Method java/lang/Object.hashCode:()I
     121: iadd
     122: istore_2
     123: iload_2
     124: ireturn
}
