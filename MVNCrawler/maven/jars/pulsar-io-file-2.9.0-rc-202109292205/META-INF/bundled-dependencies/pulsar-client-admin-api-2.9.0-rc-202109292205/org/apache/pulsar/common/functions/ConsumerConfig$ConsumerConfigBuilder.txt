Compiled from "ConsumerConfig.java"
public class org.apache.pulsar.common.functions.ConsumerConfig$ConsumerConfigBuilder {
  private java.lang.String schemaType;

  private java.lang.String serdeClassName;

  private boolean isRegexPattern;

  private boolean schemaProperties$set;

  private java.util.Map<java.lang.String, java.lang.String> schemaProperties$value;

  private boolean consumerProperties$set;

  private java.util.Map<java.lang.String, java.lang.String> consumerProperties$value;

  private java.lang.Integer receiverQueueSize;

  private org.apache.pulsar.common.functions.CryptoConfig cryptoConfig;

  private boolean poolMessages;

  org.apache.pulsar.common.functions.ConsumerConfig$ConsumerConfigBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.pulsar.common.functions.ConsumerConfig$ConsumerConfigBuilder schemaType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field schemaType:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.pulsar.common.functions.ConsumerConfig$ConsumerConfigBuilder serdeClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field serdeClassName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.pulsar.common.functions.ConsumerConfig$ConsumerConfigBuilder isRegexPattern(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field isRegexPattern:Z
       5: aload_0
       6: areturn

  public org.apache.pulsar.common.functions.ConsumerConfig$ConsumerConfigBuilder schemaProperties(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field schemaProperties$value:Ljava/util/Map;
       5: aload_0
       6: iconst_1
       7: putfield      #6                  // Field schemaProperties$set:Z
      10: aload_0
      11: areturn

  public org.apache.pulsar.common.functions.ConsumerConfig$ConsumerConfigBuilder consumerProperties(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field consumerProperties$value:Ljava/util/Map;
       5: aload_0
       6: iconst_1
       7: putfield      #8                  // Field consumerProperties$set:Z
      10: aload_0
      11: areturn

  public org.apache.pulsar.common.functions.ConsumerConfig$ConsumerConfigBuilder receiverQueueSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field receiverQueueSize:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.pulsar.common.functions.ConsumerConfig$ConsumerConfigBuilder cryptoConfig(org.apache.pulsar.common.functions.CryptoConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field cryptoConfig:Lorg/apache/pulsar/common/functions/CryptoConfig;
       5: aload_0
       6: areturn

  public org.apache.pulsar.common.functions.ConsumerConfig$ConsumerConfigBuilder poolMessages(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field poolMessages:Z
       5: aload_0
       6: areturn

  public org.apache.pulsar.common.functions.ConsumerConfig build();
    Code:
       0: aload_0
       1: getfield      #5                  // Field schemaProperties$value:Ljava/util/Map;
       4: astore_1
       5: aload_0
       6: getfield      #6                  // Field schemaProperties$set:Z
       9: ifne          16
      12: invokestatic  #12                 // Method org/apache/pulsar/common/functions/ConsumerConfig.access$000:()Ljava/util/Map;
      15: astore_1
      16: aload_0
      17: getfield      #7                  // Field consumerProperties$value:Ljava/util/Map;
      20: astore_2
      21: aload_0
      22: getfield      #8                  // Field consumerProperties$set:Z
      25: ifne          32
      28: invokestatic  #13                 // Method org/apache/pulsar/common/functions/ConsumerConfig.access$100:()Ljava/util/Map;
      31: astore_2
      32: new           #14                 // class org/apache/pulsar/common/functions/ConsumerConfig
      35: dup
      36: aload_0
      37: getfield      #2                  // Field schemaType:Ljava/lang/String;
      40: aload_0
      41: getfield      #3                  // Field serdeClassName:Ljava/lang/String;
      44: aload_0
      45: getfield      #4                  // Field isRegexPattern:Z
      48: aload_1
      49: aload_2
      50: aload_0
      51: getfield      #9                  // Field receiverQueueSize:Ljava/lang/Integer;
      54: aload_0
      55: getfield      #10                 // Field cryptoConfig:Lorg/apache/pulsar/common/functions/CryptoConfig;
      58: aload_0
      59: getfield      #11                 // Field poolMessages:Z
      62: invokespecial #15                 // Method org/apache/pulsar/common/functions/ConsumerConfig."<init>":(Ljava/lang/String;Ljava/lang/String;ZLjava/util/Map;Ljava/util/Map;Ljava/lang/Integer;Lorg/apache/pulsar/common/functions/CryptoConfig;Z)V
      65: areturn

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #18                 // String ConsumerConfig.ConsumerConfigBuilder(schemaType=
       9: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field schemaType:Ljava/lang/String;
      16: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #20                 // String , serdeClassName=
      21: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #3                  // Field serdeClassName:Ljava/lang/String;
      28: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #21                 // String , isRegexPattern=
      33: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #4                  // Field isRegexPattern:Z
      40: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      43: ldc           #23                 // String , schemaProperties$value=
      45: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #5                  // Field schemaProperties$value:Ljava/util/Map;
      52: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #25                 // String , consumerProperties$value=
      57: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #7                  // Field consumerProperties$value:Ljava/util/Map;
      64: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #26                 // String , receiverQueueSize=
      69: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #9                  // Field receiverQueueSize:Ljava/lang/Integer;
      76: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #27                 // String , cryptoConfig=
      81: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: getfield      #10                 // Field cryptoConfig:Lorg/apache/pulsar/common/functions/CryptoConfig;
      88: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: ldc           #28                 // String , poolMessages=
      93: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: getfield      #11                 // Field poolMessages:Z
     100: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     103: ldc           #29                 // String )
     105: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: areturn
}
