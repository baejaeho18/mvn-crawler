Compiled from "NonPersistentTopics.java"
public interface org.apache.pulsar.client.admin.NonPersistentTopics {
  public abstract org.apache.pulsar.common.partition.PartitionedTopicMetadata getPartitionedTopicMetadata(java.lang.String) throws org.apache.pulsar.client.admin.PulsarAdminException;

  public abstract java.util.concurrent.CompletableFuture<org.apache.pulsar.common.partition.PartitionedTopicMetadata> getPartitionedTopicMetadataAsync(java.lang.String);

  public abstract org.apache.pulsar.common.policies.data.NonPersistentTopicStats getStats(java.lang.String) throws org.apache.pulsar.client.admin.PulsarAdminException;

  public abstract java.util.concurrent.CompletableFuture<org.apache.pulsar.common.policies.data.NonPersistentTopicStats> getStatsAsync(java.lang.String);

  public abstract org.apache.pulsar.common.policies.data.PersistentTopicInternalStats getInternalStats(java.lang.String) throws org.apache.pulsar.client.admin.PulsarAdminException;

  public abstract java.util.concurrent.CompletableFuture<org.apache.pulsar.common.policies.data.PersistentTopicInternalStats> getInternalStatsAsync(java.lang.String);

  public abstract void createPartitionedTopic(java.lang.String, int) throws org.apache.pulsar.client.admin.PulsarAdminException;

  public abstract java.util.concurrent.CompletableFuture<java.lang.Void> createPartitionedTopicAsync(java.lang.String, int);

  public abstract void unload(java.lang.String) throws org.apache.pulsar.client.admin.PulsarAdminException;

  public abstract java.util.concurrent.CompletableFuture<java.lang.Void> unloadAsync(java.lang.String);

  public abstract java.util.List<java.lang.String> getListInBundle(java.lang.String, java.lang.String) throws org.apache.pulsar.client.admin.PulsarAdminException;

  public abstract java.util.concurrent.CompletableFuture<java.util.List<java.lang.String>> getListInBundleAsync(java.lang.String, java.lang.String);

  public abstract java.util.List<java.lang.String> getList(java.lang.String) throws org.apache.pulsar.client.admin.PulsarAdminException;

  public abstract java.util.concurrent.CompletableFuture<java.util.List<java.lang.String>> getListAsync(java.lang.String);
}
