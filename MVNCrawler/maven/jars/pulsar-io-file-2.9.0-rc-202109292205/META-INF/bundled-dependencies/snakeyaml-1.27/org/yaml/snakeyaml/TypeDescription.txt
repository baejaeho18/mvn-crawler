Compiled from "TypeDescription.java"
public class org.yaml.snakeyaml.TypeDescription {
  private static final java.util.logging.Logger log;

  private final java.lang.Class<? extends java.lang.Object> type;

  private java.lang.Class<?> impl;

  private org.yaml.snakeyaml.nodes.Tag tag;

  private transient java.util.Set<org.yaml.snakeyaml.introspector.Property> dumpProperties;

  private transient org.yaml.snakeyaml.introspector.PropertyUtils propertyUtils;

  private transient boolean delegatesChecked;

  private java.util.Map<java.lang.String, org.yaml.snakeyaml.introspector.PropertySubstitute> properties;

  protected java.util.Set<java.lang.String> excludes;

  protected java.lang.String[] includes;

  protected org.yaml.snakeyaml.introspector.BeanAccess beanAccess;

  public org.yaml.snakeyaml.TypeDescription(java.lang.Class<? extends java.lang.Object>, org.yaml.snakeyaml.nodes.Tag);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #1                  // Method "<init>":(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Tag;Ljava/lang/Class;)V
       7: return

  public org.yaml.snakeyaml.TypeDescription(java.lang.Class<? extends java.lang.Object>, org.yaml.snakeyaml.nodes.Tag, java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       8: putfield      #4                  // Field properties:Ljava/util/Map;
      11: aload_0
      12: invokestatic  #5                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
      15: putfield      #6                  // Field excludes:Ljava/util/Set;
      18: aload_0
      19: aconst_null
      20: putfield      #7                  // Field includes:[Ljava/lang/String;
      23: aload_0
      24: aload_1
      25: putfield      #8                  // Field type:Ljava/lang/Class;
      28: aload_0
      29: aload_2
      30: putfield      #9                  // Field tag:Lorg/yaml/snakeyaml/nodes/Tag;
      33: aload_0
      34: aload_3
      35: putfield      #10                 // Field impl:Ljava/lang/Class;
      38: aload_0
      39: aconst_null
      40: putfield      #11                 // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      43: return

  public org.yaml.snakeyaml.TypeDescription(java.lang.Class<? extends java.lang.Object>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #12                 // class org/yaml/snakeyaml/nodes/Tag
       5: dup
       6: aload_2
       7: invokespecial #13                 // Method org/yaml/snakeyaml/nodes/Tag."<init>":(Ljava/lang/String;)V
      10: aconst_null
      11: invokespecial #1                  // Method "<init>":(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Tag;Ljava/lang/Class;)V
      14: return

  public org.yaml.snakeyaml.TypeDescription(java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: checkcast     #12                 // class org/yaml/snakeyaml/nodes/Tag
       6: aconst_null
       7: invokespecial #1                  // Method "<init>":(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Tag;Ljava/lang/Class;)V
      10: return

  public org.yaml.snakeyaml.TypeDescription(java.lang.Class<? extends java.lang.Object>, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokespecial #1                  // Method "<init>":(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Tag;Ljava/lang/Class;)V
       7: return

  public org.yaml.snakeyaml.nodes.Tag getTag();
    Code:
       0: aload_0
       1: getfield      #9                  // Field tag:Lorg/yaml/snakeyaml/nodes/Tag;
       4: areturn

  public void setTag(org.yaml.snakeyaml.nodes.Tag);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field tag:Lorg/yaml/snakeyaml/nodes/Tag;
       5: return

  public void setTag(java.lang.String);
    Code:
       0: aload_0
       1: new           #12                 // class org/yaml/snakeyaml/nodes/Tag
       4: dup
       5: aload_1
       6: invokespecial #13                 // Method org/yaml/snakeyaml/nodes/Tag."<init>":(Ljava/lang/String;)V
       9: invokevirtual #14                 // Method setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
      12: return

  public java.lang.Class<? extends java.lang.Object> getType();
    Code:
       0: aload_0
       1: getfield      #8                  // Field type:Ljava/lang/Class;
       4: areturn

  public void putListPropertyType(java.lang.String, java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: anewarray     #15                 // class java/lang/Class
       6: dup
       7: iconst_0
       8: aload_2
       9: aastore
      10: invokevirtual #16                 // Method addPropertyParameters:(Ljava/lang/String;[Ljava/lang/Class;)V
      13: return

  public java.lang.Class<? extends java.lang.Object> getListPropertyType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field properties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          43
      13: aload_0
      14: getfield      #4                  // Field properties:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #19                 // class org/yaml/snakeyaml/introspector/PropertySubstitute
      26: invokevirtual #20                 // Method org/yaml/snakeyaml/introspector/PropertySubstitute.getActualTypeArguments:()[Ljava/lang/Class;
      29: astore_2
      30: aload_2
      31: ifnull        43
      34: aload_2
      35: arraylength
      36: ifle          43
      39: aload_2
      40: iconst_0
      41: aaload
      42: areturn
      43: aconst_null
      44: areturn

  public void putMapPropertyType(java.lang.String, java.lang.Class<? extends java.lang.Object>, java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_2
       3: anewarray     #15                 // class java/lang/Class
       6: dup
       7: iconst_0
       8: aload_2
       9: aastore
      10: dup
      11: iconst_1
      12: aload_3
      13: aastore
      14: invokevirtual #16                 // Method addPropertyParameters:(Ljava/lang/String;[Ljava/lang/Class;)V
      17: return

  public java.lang.Class<? extends java.lang.Object> getMapKeyType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field properties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          43
      13: aload_0
      14: getfield      #4                  // Field properties:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #19                 // class org/yaml/snakeyaml/introspector/PropertySubstitute
      26: invokevirtual #20                 // Method org/yaml/snakeyaml/introspector/PropertySubstitute.getActualTypeArguments:()[Ljava/lang/Class;
      29: astore_2
      30: aload_2
      31: ifnull        43
      34: aload_2
      35: arraylength
      36: ifle          43
      39: aload_2
      40: iconst_0
      41: aaload
      42: areturn
      43: aconst_null
      44: areturn

  public java.lang.Class<? extends java.lang.Object> getMapValueType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field properties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          44
      13: aload_0
      14: getfield      #4                  // Field properties:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #19                 // class org/yaml/snakeyaml/introspector/PropertySubstitute
      26: invokevirtual #20                 // Method org/yaml/snakeyaml/introspector/PropertySubstitute.getActualTypeArguments:()[Ljava/lang/Class;
      29: astore_2
      30: aload_2
      31: ifnull        44
      34: aload_2
      35: arraylength
      36: iconst_1
      37: if_icmple     44
      40: aload_2
      41: iconst_1
      42: aaload
      43: areturn
      44: aconst_null
      45: areturn

  public void addPropertyParameters(java.lang.String, java.lang.Class<?>...);
    Code:
       0: aload_0
       1: getfield      #4                  // Field properties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifne          25
      13: aload_0
      14: aload_1
      15: aconst_null
      16: aconst_null
      17: aconst_null
      18: aload_2
      19: invokevirtual #21                 // Method substituteProperty:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Class;)V
      22: goto          44
      25: aload_0
      26: getfield      #4                  // Field properties:Ljava/util/Map;
      29: aload_1
      30: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #19                 // class org/yaml/snakeyaml/introspector/PropertySubstitute
      38: astore_3
      39: aload_3
      40: aload_2
      41: invokevirtual #22                 // Method org/yaml/snakeyaml/introspector/PropertySubstitute.setActualTypeArguments:([Ljava/lang/Class;)V
      44: return

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #25                 // String TypeDescription for
       9: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #27                 // Method getType:()Ljava/lang/Class;
      16: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #29                 // String  (tag=\'
      21: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #30                 // Method getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      28: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #31                 // String \')
      33: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  private void checkDelegates();
    Code:
       0: aload_0
       1: getfield      #4                  // Field properties:Ljava/util/Map;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: astore_1
      10: aload_1
      11: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          56
      26: aload_2
      27: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #19                 // class org/yaml/snakeyaml/introspector/PropertySubstitute
      35: astore_3
      36: aload_3
      37: aload_0
      38: aload_3
      39: invokevirtual #37                 // Method org/yaml/snakeyaml/introspector/PropertySubstitute.getName:()Ljava/lang/String;
      42: invokespecial #38                 // Method discoverProperty:(Ljava/lang/String;)Lorg/yaml/snakeyaml/introspector/Property;
      45: invokevirtual #39                 // Method org/yaml/snakeyaml/introspector/PropertySubstitute.setDelegate:(Lorg/yaml/snakeyaml/introspector/Property;)V
      48: goto          53
      51: astore        4
      53: goto          17
      56: aload_0
      57: iconst_1
      58: putfield      #41                 // Field delegatesChecked:Z
      61: return
    Exception table:
       from    to  target type
          36    48    51   Class org/yaml/snakeyaml/error/YAMLException

  private org.yaml.snakeyaml.introspector.Property discoverProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #42                 // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
       4: ifnull        44
       7: aload_0
       8: getfield      #11                 // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      11: ifnonnull     27
      14: aload_0
      15: getfield      #42                 // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      18: aload_0
      19: getfield      #8                  // Field type:Ljava/lang/Class;
      22: aload_1
      23: invokevirtual #43                 // Method org/yaml/snakeyaml/introspector/PropertyUtils.getProperty:(Ljava/lang/Class;Ljava/lang/String;)Lorg/yaml/snakeyaml/introspector/Property;
      26: areturn
      27: aload_0
      28: getfield      #42                 // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      31: aload_0
      32: getfield      #8                  // Field type:Ljava/lang/Class;
      35: aload_1
      36: aload_0
      37: getfield      #11                 // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      40: invokevirtual #44                 // Method org/yaml/snakeyaml/introspector/PropertyUtils.getProperty:(Ljava/lang/Class;Ljava/lang/String;Lorg/yaml/snakeyaml/introspector/BeanAccess;)Lorg/yaml/snakeyaml/introspector/Property;
      43: areturn
      44: aconst_null
      45: areturn

  public org.yaml.snakeyaml.introspector.Property getProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #41                 // Field delegatesChecked:Z
       4: ifne          11
       7: aload_0
       8: invokespecial #45                 // Method checkDelegates:()V
      11: aload_0
      12: getfield      #4                  // Field properties:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #17,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      21: ifeq          40
      24: aload_0
      25: getfield      #4                  // Field properties:Ljava/util/Map;
      28: aload_1
      29: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #46                 // class org/yaml/snakeyaml/introspector/Property
      37: goto          45
      40: aload_0
      41: aload_1
      42: invokespecial #38                 // Method discoverProperty:(Ljava/lang/String;)Lorg/yaml/snakeyaml/introspector/Property;
      45: areturn

  public void substituteProperty(java.lang.String, java.lang.Class<?>, java.lang.String, java.lang.String, java.lang.Class<?>...);
    Code:
       0: aload_0
       1: new           #19                 // class org/yaml/snakeyaml/introspector/PropertySubstitute
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: aload         5
      12: invokespecial #47                 // Method org/yaml/snakeyaml/introspector/PropertySubstitute."<init>":(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Class;)V
      15: invokevirtual #48                 // Method substituteProperty:(Lorg/yaml/snakeyaml/introspector/PropertySubstitute;)V
      18: return

  public void substituteProperty(org.yaml.snakeyaml.introspector.PropertySubstitute);
    Code:
       0: getstatic     #49                 // Field java/util/Collections.EMPTY_MAP:Ljava/util/Map;
       3: aload_0
       4: getfield      #4                  // Field properties:Ljava/util/Map;
       7: if_acmpne     21
      10: aload_0
      11: new           #50                 // class java/util/LinkedHashMap
      14: dup
      15: invokespecial #51                 // Method java/util/LinkedHashMap."<init>":()V
      18: putfield      #4                  // Field properties:Ljava/util/Map;
      21: aload_1
      22: aload_0
      23: getfield      #8                  // Field type:Ljava/lang/Class;
      26: invokevirtual #52                 // Method org/yaml/snakeyaml/introspector/PropertySubstitute.setTargetType:(Ljava/lang/Class;)V
      29: aload_0
      30: getfield      #4                  // Field properties:Ljava/util/Map;
      33: aload_1
      34: invokevirtual #37                 // Method org/yaml/snakeyaml/introspector/PropertySubstitute.getName:()Ljava/lang/String;
      37: aload_1
      38: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: return

  public void setPropertyUtils(org.yaml.snakeyaml.introspector.PropertyUtils);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
       5: return

  public void setIncludes(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        14
       5: aload_1
       6: arraylength
       7: ifle          14
      10: aload_1
      11: goto          15
      14: aconst_null
      15: putfield      #7                  // Field includes:[Ljava/lang/String;
      18: return

  public void setExcludes(java.lang.String...);
    Code:
       0: aload_1
       1: ifnull        61
       4: aload_1
       5: arraylength
       6: ifle          61
       9: aload_0
      10: new           #54                 // class java/util/HashSet
      13: dup
      14: invokespecial #55                 // Method java/util/HashSet."<init>":()V
      17: putfield      #6                  // Field excludes:Ljava/util/Set;
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     58
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #6                  // Field excludes:Ljava/util/Set;
      44: aload         5
      46: invokeinterface #56,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      51: pop
      52: iinc          4, 1
      55: goto          28
      58: goto          68
      61: aload_0
      62: invokestatic  #5                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
      65: putfield      #6                  // Field excludes:Ljava/util/Set;
      68: return

  public java.util.Set<org.yaml.snakeyaml.introspector.Property> getProperties();
    Code:
       0: aload_0
       1: getfield      #57                 // Field dumpProperties:Ljava/util/Set;
       4: ifnull        12
       7: aload_0
       8: getfield      #57                 // Field dumpProperties:Ljava/util/Set;
      11: areturn
      12: aload_0
      13: getfield      #42                 // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      16: ifnull        392
      19: aload_0
      20: getfield      #7                  // Field includes:[Ljava/lang/String;
      23: ifnull        98
      26: aload_0
      27: new           #58                 // class java/util/LinkedHashSet
      30: dup
      31: invokespecial #59                 // Method java/util/LinkedHashSet."<init>":()V
      34: putfield      #57                 // Field dumpProperties:Ljava/util/Set;
      37: aload_0
      38: getfield      #7                  // Field includes:[Ljava/lang/String;
      41: astore_1
      42: aload_1
      43: arraylength
      44: istore_2
      45: iconst_0
      46: istore_3
      47: iload_3
      48: iload_2
      49: if_icmpge     93
      52: aload_1
      53: iload_3
      54: aaload
      55: astore        4
      57: aload_0
      58: getfield      #6                  // Field excludes:Ljava/util/Set;
      61: aload         4
      63: invokeinterface #60,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      68: ifne          87
      71: aload_0
      72: getfield      #57                 // Field dumpProperties:Ljava/util/Set;
      75: aload_0
      76: aload         4
      78: invokevirtual #61                 // Method getProperty:(Ljava/lang/String;)Lorg/yaml/snakeyaml/introspector/Property;
      81: invokeinterface #56,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      86: pop
      87: iinc          3, 1
      90: goto          47
      93: aload_0
      94: getfield      #57                 // Field dumpProperties:Ljava/util/Set;
      97: areturn
      98: aload_0
      99: getfield      #11                 // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
     102: ifnonnull     119
     105: aload_0
     106: getfield      #42                 // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
     109: aload_0
     110: getfield      #8                  // Field type:Ljava/lang/Class;
     113: invokevirtual #62                 // Method org/yaml/snakeyaml/introspector/PropertyUtils.getProperties:(Ljava/lang/Class;)Ljava/util/Set;
     116: goto          134
     119: aload_0
     120: getfield      #42                 // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
     123: aload_0
     124: getfield      #8                  // Field type:Ljava/lang/Class;
     127: aload_0
     128: getfield      #11                 // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
     131: invokevirtual #63                 // Method org/yaml/snakeyaml/introspector/PropertyUtils.getProperties:(Ljava/lang/Class;Lorg/yaml/snakeyaml/introspector/BeanAccess;)Ljava/util/Set;
     134: astore_1
     135: aload_0
     136: getfield      #4                  // Field properties:Ljava/util/Map;
     139: invokeinterface #64,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     144: ifeq          238
     147: aload_0
     148: getfield      #6                  // Field excludes:Ljava/util/Set;
     151: invokeinterface #65,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     156: ifeq          166
     159: aload_0
     160: aload_1
     161: dup_x1
     162: putfield      #57                 // Field dumpProperties:Ljava/util/Set;
     165: areturn
     166: aload_0
     167: new           #58                 // class java/util/LinkedHashSet
     170: dup
     171: invokespecial #59                 // Method java/util/LinkedHashSet."<init>":()V
     174: putfield      #57                 // Field dumpProperties:Ljava/util/Set;
     177: aload_1
     178: invokeinterface #66,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     183: astore_2
     184: aload_2
     185: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     190: ifeq          233
     193: aload_2
     194: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     199: checkcast     #46                 // class org/yaml/snakeyaml/introspector/Property
     202: astore_3
     203: aload_0
     204: getfield      #6                  // Field excludes:Ljava/util/Set;
     207: aload_3
     208: invokevirtual #67                 // Method org/yaml/snakeyaml/introspector/Property.getName:()Ljava/lang/String;
     211: invokeinterface #60,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     216: ifne          230
     219: aload_0
     220: getfield      #57                 // Field dumpProperties:Ljava/util/Set;
     223: aload_3
     224: invokeinterface #56,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     229: pop
     230: goto          184
     233: aload_0
     234: getfield      #57                 // Field dumpProperties:Ljava/util/Set;
     237: areturn
     238: aload_0
     239: getfield      #41                 // Field delegatesChecked:Z
     242: ifne          249
     245: aload_0
     246: invokespecial #45                 // Method checkDelegates:()V
     249: aload_0
     250: new           #58                 // class java/util/LinkedHashSet
     253: dup
     254: invokespecial #59                 // Method java/util/LinkedHashSet."<init>":()V
     257: putfield      #57                 // Field dumpProperties:Ljava/util/Set;
     260: aload_0
     261: getfield      #4                  // Field properties:Ljava/util/Map;
     264: invokeinterface #33,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     269: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     274: astore_2
     275: aload_2
     276: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     281: ifeq          331
     284: aload_2
     285: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     290: checkcast     #46                 // class org/yaml/snakeyaml/introspector/Property
     293: astore_3
     294: aload_0
     295: getfield      #6                  // Field excludes:Ljava/util/Set;
     298: aload_3
     299: invokevirtual #67                 // Method org/yaml/snakeyaml/introspector/Property.getName:()Ljava/lang/String;
     302: invokeinterface #60,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     307: ifne          328
     310: aload_3
     311: invokevirtual #68                 // Method org/yaml/snakeyaml/introspector/Property.isReadable:()Z
     314: ifeq          328
     317: aload_0
     318: getfield      #57                 // Field dumpProperties:Ljava/util/Set;
     321: aload_3
     322: invokeinterface #56,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     327: pop
     328: goto          275
     331: aload_1
     332: invokeinterface #66,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     337: astore_2
     338: aload_2
     339: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     344: ifeq          387
     347: aload_2
     348: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     353: checkcast     #46                 // class org/yaml/snakeyaml/introspector/Property
     356: astore_3
     357: aload_0
     358: getfield      #6                  // Field excludes:Ljava/util/Set;
     361: aload_3
     362: invokevirtual #67                 // Method org/yaml/snakeyaml/introspector/Property.getName:()Ljava/lang/String;
     365: invokeinterface #60,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     370: ifne          384
     373: aload_0
     374: getfield      #57                 // Field dumpProperties:Ljava/util/Set;
     377: aload_3
     378: invokeinterface #56,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     383: pop
     384: goto          338
     387: aload_0
     388: getfield      #57                 // Field dumpProperties:Ljava/util/Set;
     391: areturn
     392: aconst_null
     393: areturn

  public boolean setupPropertyType(java.lang.String, org.yaml.snakeyaml.nodes.Node);
    Code:
       0: iconst_0
       1: ireturn

  public boolean setProperty(java.lang.Object, java.lang.String, java.lang.Object) throws java.lang.Exception;
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.Object newInstance(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_0
       1: getfield      #10                 // Field impl:Ljava/lang/Class;
       4: ifnull        49
       7: aload_0
       8: getfield      #10                 // Field impl:Ljava/lang/Class;
      11: iconst_0
      12: anewarray     #15                 // class java/lang/Class
      15: invokevirtual #69                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      18: astore_2
      19: aload_2
      20: iconst_1
      21: invokevirtual #70                 // Method java/lang/reflect/Constructor.setAccessible:(Z)V
      24: aload_2
      25: iconst_0
      26: anewarray     #71                 // class java/lang/Object
      29: invokevirtual #72                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      32: areturn
      33: astore_2
      34: getstatic     #74                 // Field log:Ljava/util/logging/Logger;
      37: aload_2
      38: invokevirtual #75                 // Method java/lang/Exception.getLocalizedMessage:()Ljava/lang/String;
      41: invokevirtual #76                 // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V
      44: aload_0
      45: aconst_null
      46: putfield      #10                 // Field impl:Ljava/lang/Class;
      49: aconst_null
      50: areturn
    Exception table:
       from    to  target type
           7    32    33   Class java/lang/Exception

  public java.lang.Object newInstance(java.lang.String, org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object finalizeConstruction(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  static {};
    Code:
       0: ldc_w         #77                 // class org/yaml/snakeyaml/TypeDescription
       3: invokevirtual #78                 // Method java/lang/Class.getPackage:()Ljava/lang/Package;
       6: invokevirtual #79                 // Method java/lang/Package.getName:()Ljava/lang/String;
       9: invokestatic  #80                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      12: putstatic     #74                 // Field log:Ljava/util/logging/Logger;
      15: return
}
