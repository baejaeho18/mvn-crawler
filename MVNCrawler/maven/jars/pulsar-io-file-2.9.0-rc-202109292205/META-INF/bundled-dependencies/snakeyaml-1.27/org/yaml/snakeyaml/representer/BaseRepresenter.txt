Compiled from "BaseRepresenter.java"
public abstract class org.yaml.snakeyaml.representer.BaseRepresenter {
  protected final java.util.Map<java.lang.Class<?>, org.yaml.snakeyaml.representer.Represent> representers;

  protected org.yaml.snakeyaml.representer.Represent nullRepresenter;

  protected final java.util.Map<java.lang.Class<?>, org.yaml.snakeyaml.representer.Represent> multiRepresenters;

  protected org.yaml.snakeyaml.DumperOptions$ScalarStyle defaultScalarStyle;

  protected org.yaml.snakeyaml.DumperOptions$FlowStyle defaultFlowStyle;

  protected final java.util.Map<java.lang.Object, org.yaml.snakeyaml.nodes.Node> representedObjects;

  protected java.lang.Object objectToRepresent;

  private org.yaml.snakeyaml.introspector.PropertyUtils propertyUtils;

  private boolean explicitPropertyUtils;

  public org.yaml.snakeyaml.representer.BaseRepresenter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field representers:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class java/util/LinkedHashMap
      19: dup
      20: invokespecial #6                  // Method java/util/LinkedHashMap."<init>":()V
      23: putfield      #7                  // Field multiRepresenters:Ljava/util/Map;
      26: aload_0
      27: aconst_null
      28: putfield      #8                  // Field defaultScalarStyle:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      31: aload_0
      32: getstatic     #9                  // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.AUTO:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
      35: putfield      #10                 // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
      38: aload_0
      39: new           #11                 // class org/yaml/snakeyaml/representer/BaseRepresenter$1
      42: dup
      43: aload_0
      44: invokespecial #12                 // Method org/yaml/snakeyaml/representer/BaseRepresenter$1."<init>":(Lorg/yaml/snakeyaml/representer/BaseRepresenter;)V
      47: putfield      #13                 // Field representedObjects:Ljava/util/Map;
      50: aload_0
      51: iconst_0
      52: putfield      #14                 // Field explicitPropertyUtils:Z
      55: return

  public org.yaml.snakeyaml.nodes.Node represent(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
       5: astore_2
       6: aload_0
       7: getfield      #13                 // Field representedObjects:Ljava/util/Map;
      10: invokeinterface #16,  1           // InterfaceMethod java/util/Map.clear:()V
      15: aload_0
      16: aconst_null
      17: putfield      #17                 // Field objectToRepresent:Ljava/lang/Object;
      20: aload_2
      21: areturn

  protected final org.yaml.snakeyaml.nodes.Node representData(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field objectToRepresent:Ljava/lang/Object;
       5: aload_0
       6: getfield      #13                 // Field representedObjects:Ljava/util/Map;
       9: aload_0
      10: getfield      #17                 // Field objectToRepresent:Ljava/lang/Object;
      13: invokeinterface #18,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      18: ifeq          40
      21: aload_0
      22: getfield      #13                 // Field representedObjects:Ljava/util/Map;
      25: aload_0
      26: getfield      #17                 // Field objectToRepresent:Ljava/lang/Object;
      29: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #20                 // class org/yaml/snakeyaml/nodes/Node
      37: astore_2
      38: aload_2
      39: areturn
      40: aload_1
      41: ifnonnull     57
      44: aload_0
      45: getfield      #21                 // Field nullRepresenter:Lorg/yaml/snakeyaml/representer/Represent;
      48: aconst_null
      49: invokeinterface #22,  2           // InterfaceMethod org/yaml/snakeyaml/representer/Represent.representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
      54: astore_2
      55: aload_2
      56: areturn
      57: aload_1
      58: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      61: astore_3
      62: aload_0
      63: getfield      #4                  // Field representers:Ljava/util/Map;
      66: aload_3
      67: invokeinterface #18,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      72: ifeq          102
      75: aload_0
      76: getfield      #4                  // Field representers:Ljava/util/Map;
      79: aload_3
      80: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      85: checkcast     #24                 // class org/yaml/snakeyaml/representer/Represent
      88: astore        4
      90: aload         4
      92: aload_1
      93: invokeinterface #22,  2           // InterfaceMethod org/yaml/snakeyaml/representer/Represent.representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
      98: astore_2
      99: goto          248
     102: aload_0
     103: getfield      #7                  // Field multiRepresenters:Ljava/util/Map;
     106: invokeinterface #25,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     111: invokeinterface #26,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     116: astore        4
     118: aload         4
     120: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     125: ifeq          184
     128: aload         4
     130: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     135: checkcast     #29                 // class java/lang/Class
     138: astore        5
     140: aload         5
     142: ifnull        181
     145: aload         5
     147: aload_1
     148: invokevirtual #30                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
     151: ifeq          181
     154: aload_0
     155: getfield      #7                  // Field multiRepresenters:Ljava/util/Map;
     158: aload         5
     160: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     165: checkcast     #24                 // class org/yaml/snakeyaml/representer/Represent
     168: astore        6
     170: aload         6
     172: aload_1
     173: invokeinterface #22,  2           // InterfaceMethod org/yaml/snakeyaml/representer/Represent.representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
     178: astore_2
     179: aload_2
     180: areturn
     181: goto          118
     184: aload_0
     185: getfield      #7                  // Field multiRepresenters:Ljava/util/Map;
     188: aconst_null
     189: invokeinterface #18,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     194: ifeq          224
     197: aload_0
     198: getfield      #7                  // Field multiRepresenters:Ljava/util/Map;
     201: aconst_null
     202: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     207: checkcast     #24                 // class org/yaml/snakeyaml/representer/Represent
     210: astore        4
     212: aload         4
     214: aload_1
     215: invokeinterface #22,  2           // InterfaceMethod org/yaml/snakeyaml/representer/Represent.representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
     220: astore_2
     221: goto          248
     224: aload_0
     225: getfield      #4                  // Field representers:Ljava/util/Map;
     228: aconst_null
     229: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     234: checkcast     #24                 // class org/yaml/snakeyaml/representer/Represent
     237: astore        4
     239: aload         4
     241: aload_1
     242: invokeinterface #22,  2           // InterfaceMethod org/yaml/snakeyaml/representer/Represent.representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
     247: astore_2
     248: aload_2
     249: areturn

  protected org.yaml.snakeyaml.nodes.Node representScalar(org.yaml.snakeyaml.nodes.Tag, java.lang.String, org.yaml.snakeyaml.DumperOptions$ScalarStyle);
    Code:
       0: aload_3
       1: ifnonnull     9
       4: aload_0
       5: getfield      #8                  // Field defaultScalarStyle:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
       8: astore_3
       9: new           #31                 // class org/yaml/snakeyaml/nodes/ScalarNode
      12: dup
      13: aload_1
      14: aload_2
      15: aconst_null
      16: aconst_null
      17: aload_3
      18: invokespecial #32                 // Method org/yaml/snakeyaml/nodes/ScalarNode."<init>":(Lorg/yaml/snakeyaml/nodes/Tag;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;)V
      21: astore        4
      23: aload         4
      25: areturn

  protected org.yaml.snakeyaml.nodes.Node representScalar(org.yaml.snakeyaml.nodes.Tag, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #33                 // Method representScalar:(Lorg/yaml/snakeyaml/nodes/Tag;Ljava/lang/String;Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;)Lorg/yaml/snakeyaml/nodes/Node;
       7: areturn

  protected org.yaml.snakeyaml.nodes.Node representSequence(org.yaml.snakeyaml.nodes.Tag, java.lang.Iterable<?>, org.yaml.snakeyaml.DumperOptions$FlowStyle);
    Code:
       0: bipush        10
       2: istore        4
       4: aload_2
       5: instanceof    #34                 // class java/util/List
       8: ifeq          22
      11: aload_2
      12: checkcast     #34                 // class java/util/List
      15: invokeinterface #35,  1           // InterfaceMethod java/util/List.size:()I
      20: istore        4
      22: new           #36                 // class java/util/ArrayList
      25: dup
      26: iload         4
      28: invokespecial #37                 // Method java/util/ArrayList."<init>":(I)V
      31: astore        5
      33: new           #38                 // class org/yaml/snakeyaml/nodes/SequenceNode
      36: dup
      37: aload_1
      38: aload         5
      40: aload_3
      41: invokespecial #39                 // Method org/yaml/snakeyaml/nodes/SequenceNode."<init>":(Lorg/yaml/snakeyaml/nodes/Tag;Ljava/util/List;Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
      44: astore        6
      46: aload_0
      47: getfield      #13                 // Field representedObjects:Ljava/util/Map;
      50: aload_0
      51: getfield      #17                 // Field objectToRepresent:Ljava/lang/Object;
      54: aload         6
      56: invokeinterface #40,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: getstatic     #41                 // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.FLOW:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
      65: astore        7
      67: aload_2
      68: invokeinterface #42,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      73: astore        8
      75: aload         8
      77: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      82: ifeq          139
      85: aload         8
      87: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      92: astore        9
      94: aload_0
      95: aload         9
      97: invokevirtual #15                 // Method representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
     100: astore        10
     102: aload         10
     104: instanceof    #31                 // class org/yaml/snakeyaml/nodes/ScalarNode
     107: ifeq          121
     110: aload         10
     112: checkcast     #31                 // class org/yaml/snakeyaml/nodes/ScalarNode
     115: invokevirtual #43                 // Method org/yaml/snakeyaml/nodes/ScalarNode.isPlain:()Z
     118: ifne          126
     121: getstatic     #44                 // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.BLOCK:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     124: astore        7
     126: aload         5
     128: aload         10
     130: invokeinterface #45,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     135: pop
     136: goto          75
     139: aload_3
     140: getstatic     #9                  // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.AUTO:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     143: if_acmpne     175
     146: aload_0
     147: getfield      #10                 // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     150: getstatic     #9                  // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.AUTO:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     153: if_acmpeq     168
     156: aload         6
     158: aload_0
     159: getfield      #10                 // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     162: invokevirtual #46                 // Method org/yaml/snakeyaml/nodes/SequenceNode.setFlowStyle:(Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
     165: goto          175
     168: aload         6
     170: aload         7
     172: invokevirtual #46                 // Method org/yaml/snakeyaml/nodes/SequenceNode.setFlowStyle:(Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
     175: aload         6
     177: areturn

  protected org.yaml.snakeyaml.nodes.Node representMapping(org.yaml.snakeyaml.nodes.Tag, java.util.Map<?, ?>, org.yaml.snakeyaml.DumperOptions$FlowStyle);
    Code:
       0: new           #36                 // class java/util/ArrayList
       3: dup
       4: aload_2
       5: invokeinterface #47,  1           // InterfaceMethod java/util/Map.size:()I
      10: invokespecial #37                 // Method java/util/ArrayList."<init>":(I)V
      13: astore        4
      15: new           #48                 // class org/yaml/snakeyaml/nodes/MappingNode
      18: dup
      19: aload_1
      20: aload         4
      22: aload_3
      23: invokespecial #49                 // Method org/yaml/snakeyaml/nodes/MappingNode."<init>":(Lorg/yaml/snakeyaml/nodes/Tag;Ljava/util/List;Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
      26: astore        5
      28: aload_0
      29: getfield      #13                 // Field representedObjects:Ljava/util/Map;
      32: aload_0
      33: getfield      #17                 // Field objectToRepresent:Ljava/lang/Object;
      36: aload         5
      38: invokeinterface #40,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: getstatic     #41                 // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.FLOW:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
      47: astore        6
      49: aload_2
      50: invokeinterface #50,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      55: invokeinterface #26,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      60: astore        7
      62: aload         7
      64: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      69: ifeq          180
      72: aload         7
      74: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      79: checkcast     #51                 // class java/util/Map$Entry
      82: astore        8
      84: aload_0
      85: aload         8
      87: invokeinterface #52,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      92: invokevirtual #15                 // Method representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
      95: astore        9
      97: aload_0
      98: aload         8
     100: invokeinterface #53,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     105: invokevirtual #15                 // Method representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
     108: astore        10
     110: aload         9
     112: instanceof    #31                 // class org/yaml/snakeyaml/nodes/ScalarNode
     115: ifeq          129
     118: aload         9
     120: checkcast     #31                 // class org/yaml/snakeyaml/nodes/ScalarNode
     123: invokevirtual #43                 // Method org/yaml/snakeyaml/nodes/ScalarNode.isPlain:()Z
     126: ifne          134
     129: getstatic     #44                 // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.BLOCK:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     132: astore        6
     134: aload         10
     136: instanceof    #31                 // class org/yaml/snakeyaml/nodes/ScalarNode
     139: ifeq          153
     142: aload         10
     144: checkcast     #31                 // class org/yaml/snakeyaml/nodes/ScalarNode
     147: invokevirtual #43                 // Method org/yaml/snakeyaml/nodes/ScalarNode.isPlain:()Z
     150: ifne          158
     153: getstatic     #44                 // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.BLOCK:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     156: astore        6
     158: aload         4
     160: new           #54                 // class org/yaml/snakeyaml/nodes/NodeTuple
     163: dup
     164: aload         9
     166: aload         10
     168: invokespecial #55                 // Method org/yaml/snakeyaml/nodes/NodeTuple."<init>":(Lorg/yaml/snakeyaml/nodes/Node;Lorg/yaml/snakeyaml/nodes/Node;)V
     171: invokeinterface #45,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     176: pop
     177: goto          62
     180: aload_3
     181: getstatic     #9                  // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.AUTO:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     184: if_acmpne     216
     187: aload_0
     188: getfield      #10                 // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     191: getstatic     #9                  // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.AUTO:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     194: if_acmpeq     209
     197: aload         5
     199: aload_0
     200: getfield      #10                 // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     203: invokevirtual #56                 // Method org/yaml/snakeyaml/nodes/MappingNode.setFlowStyle:(Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
     206: goto          216
     209: aload         5
     211: aload         6
     213: invokevirtual #56                 // Method org/yaml/snakeyaml/nodes/MappingNode.setFlowStyle:(Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
     216: aload         5
     218: areturn

  public void setDefaultScalarStyle(org.yaml.snakeyaml.DumperOptions$ScalarStyle);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field defaultScalarStyle:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
       5: return

  public org.yaml.snakeyaml.DumperOptions$ScalarStyle getDefaultScalarStyle();
    Code:
       0: aload_0
       1: getfield      #8                  // Field defaultScalarStyle:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
       4: ifnonnull     11
       7: getstatic     #57                 // Field org/yaml/snakeyaml/DumperOptions$ScalarStyle.PLAIN:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      10: areturn
      11: aload_0
      12: getfield      #8                  // Field defaultScalarStyle:Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      15: areturn

  public void setDefaultFlowStyle(org.yaml.snakeyaml.DumperOptions$FlowStyle);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
       5: return

  public org.yaml.snakeyaml.DumperOptions$FlowStyle getDefaultFlowStyle();
    Code:
       0: aload_0
       1: getfield      #10                 // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
       4: areturn

  public void setPropertyUtils(org.yaml.snakeyaml.introspector.PropertyUtils);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
       5: aload_0
       6: iconst_1
       7: putfield      #14                 // Field explicitPropertyUtils:Z
      10: return

  public final org.yaml.snakeyaml.introspector.PropertyUtils getPropertyUtils();
    Code:
       0: aload_0
       1: getfield      #58                 // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
       4: ifnonnull     18
       7: aload_0
       8: new           #59                 // class org/yaml/snakeyaml/introspector/PropertyUtils
      11: dup
      12: invokespecial #60                 // Method org/yaml/snakeyaml/introspector/PropertyUtils."<init>":()V
      15: putfield      #58                 // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      18: aload_0
      19: getfield      #58                 // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      22: areturn

  public final boolean isExplicitPropertyUtils();
    Code:
       0: aload_0
       1: getfield      #14                 // Field explicitPropertyUtils:Z
       4: ireturn
}
