Compiled from "Base64Variant.java"
public final class com.fasterxml.jackson.core.Base64Variant implements java.io.Serializable {
  private static final int INT_SPACE;

  private static final long serialVersionUID;

  protected static final char PADDING_CHAR_NONE;

  public static final int BASE64_VALUE_INVALID;

  public static final int BASE64_VALUE_PADDING;

  private final transient int[] _asciiToBase64;

  private final transient char[] _base64ToAsciiC;

  private final transient byte[] _base64ToAsciiB;

  final java.lang.String _name;

  private final char _paddingChar;

  private final int _maxLineLength;

  private final boolean _writePadding;

  private final com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour _paddingReadBehaviour;

  public com.fasterxml.jackson.core.Base64Variant(java.lang.String, java.lang.String, boolean, char, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        128
       8: newarray       int
      10: putfield      #2                  // Field _asciiToBase64:[I
      13: aload_0
      14: bipush        64
      16: newarray       char
      18: putfield      #3                  // Field _base64ToAsciiC:[C
      21: aload_0
      22: bipush        64
      24: newarray       byte
      26: putfield      #4                  // Field _base64ToAsciiB:[B
      29: aload_0
      30: aload_1
      31: putfield      #5                  // Field _name:Ljava/lang/String;
      34: aload_0
      35: iload_3
      36: putfield      #6                  // Field _writePadding:Z
      39: aload_0
      40: iload         4
      42: putfield      #7                  // Field _paddingChar:C
      45: aload_0
      46: iload         5
      48: putfield      #8                  // Field _maxLineLength:I
      51: aload_2
      52: invokevirtual #9                  // Method java/lang/String.length:()I
      55: istore        6
      57: iload         6
      59: bipush        64
      61: if_icmpeq     97
      64: new           #10                 // class java/lang/IllegalArgumentException
      67: dup
      68: new           #11                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #13                 // String Base64Alphabet length must be exactly 64 (was
      77: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: iload         6
      82: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      85: ldc           #16                 // String )
      87: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: aload_2
      98: iconst_0
      99: iload         6
     101: aload_0
     102: getfield      #3                  // Field _base64ToAsciiC:[C
     105: iconst_0
     106: invokevirtual #19                 // Method java/lang/String.getChars:(II[CI)V
     109: aload_0
     110: getfield      #2                  // Field _asciiToBase64:[I
     113: iconst_m1
     114: invokestatic  #21                 // Method java/util/Arrays.fill:([II)V
     117: iconst_0
     118: istore        7
     120: iload         7
     122: iload         6
     124: if_icmpge     161
     127: aload_0
     128: getfield      #3                  // Field _base64ToAsciiC:[C
     131: iload         7
     133: caload
     134: istore        8
     136: aload_0
     137: getfield      #4                  // Field _base64ToAsciiB:[B
     140: iload         7
     142: iload         8
     144: i2b
     145: bastore
     146: aload_0
     147: getfield      #2                  // Field _asciiToBase64:[I
     150: iload         8
     152: iload         7
     154: iastore
     155: iinc          7, 1
     158: goto          120
     161: iload_3
     162: ifeq          174
     165: aload_0
     166: getfield      #2                  // Field _asciiToBase64:[I
     169: iload         4
     171: bipush        -2
     173: iastore
     174: aload_0
     175: iload_3
     176: ifeq          185
     179: getstatic     #22                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
     182: goto          188
     185: getstatic     #23                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
     188: putfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
     191: return

  public com.fasterxml.jackson.core.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_1
       4: getfield      #6                  // Field _writePadding:Z
       7: aload_1
       8: getfield      #7                  // Field _paddingChar:C
      11: iload_3
      12: invokespecial #25                 // Method "<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V
      15: return

  public com.fasterxml.jackson.core.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: aload_1
       7: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
      10: iload         5
      12: invokespecial #26                 // Method "<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V
      15: return

  private com.fasterxml.jackson.core.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        128
       8: newarray       int
      10: putfield      #2                  // Field _asciiToBase64:[I
      13: aload_0
      14: bipush        64
      16: newarray       char
      18: putfield      #3                  // Field _base64ToAsciiC:[C
      21: aload_0
      22: bipush        64
      24: newarray       byte
      26: putfield      #4                  // Field _base64ToAsciiB:[B
      29: aload_0
      30: aload_2
      31: putfield      #5                  // Field _name:Ljava/lang/String;
      34: aload_1
      35: getfield      #4                  // Field _base64ToAsciiB:[B
      38: astore        7
      40: aload         7
      42: iconst_0
      43: aload_0
      44: getfield      #4                  // Field _base64ToAsciiB:[B
      47: iconst_0
      48: aload         7
      50: arraylength
      51: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      54: aload_1
      55: getfield      #3                  // Field _base64ToAsciiC:[C
      58: astore        8
      60: aload         8
      62: iconst_0
      63: aload_0
      64: getfield      #3                  // Field _base64ToAsciiC:[C
      67: iconst_0
      68: aload         8
      70: arraylength
      71: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      74: aload_1
      75: getfield      #2                  // Field _asciiToBase64:[I
      78: astore        9
      80: aload         9
      82: iconst_0
      83: aload_0
      84: getfield      #2                  // Field _asciiToBase64:[I
      87: iconst_0
      88: aload         9
      90: arraylength
      91: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      94: aload_0
      95: iload_3
      96: putfield      #6                  // Field _writePadding:Z
      99: aload_0
     100: iload         4
     102: putfield      #7                  // Field _paddingChar:C
     105: aload_0
     106: iload         6
     108: putfield      #8                  // Field _maxLineLength:I
     111: aload_0
     112: aload         5
     114: putfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
     117: return

  private com.fasterxml.jackson.core.Base64Variant(com.fasterxml.jackson.core.Base64Variant, com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: getfield      #5                  // Field _name:Ljava/lang/String;
       6: aload_1
       7: getfield      #6                  // Field _writePadding:Z
      10: aload_1
      11: getfield      #7                  // Field _paddingChar:C
      14: aload_2
      15: aload_1
      16: getfield      #8                  // Field _maxLineLength:I
      19: invokespecial #26                 // Method "<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V
      22: return

  public com.fasterxml.jackson.core.Base64Variant withPaddingAllowed();
    Code:
       0: aload_0
       1: getstatic     #28                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_ALLOWED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
       4: invokevirtual #29                 // Method withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;
       7: areturn

  public com.fasterxml.jackson.core.Base64Variant withPaddingRequired();
    Code:
       0: aload_0
       1: getstatic     #22                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
       4: invokevirtual #29                 // Method withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;
       7: areturn

  public com.fasterxml.jackson.core.Base64Variant withPaddingForbidden();
    Code:
       0: aload_0
       1: getstatic     #23                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
       4: invokevirtual #29                 // Method withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;
       7: areturn

  public com.fasterxml.jackson.core.Base64Variant withReadPadding(com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
       5: if_acmpne     12
       8: aload_0
       9: goto          21
      12: new           #20                 // class com/fasterxml/jackson/core/Base64Variant
      15: dup
      16: aload_0
      17: aload_1
      18: invokespecial #30                 // Method "<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V
      21: areturn

  public com.fasterxml.jackson.core.Base64Variant withWritePadding(boolean);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #6                  // Field _writePadding:Z
       5: if_icmpne     12
       8: aload_0
       9: goto          33
      12: new           #20                 // class com/fasterxml/jackson/core/Base64Variant
      15: dup
      16: aload_0
      17: aload_0
      18: getfield      #5                  // Field _name:Ljava/lang/String;
      21: iload_1
      22: aload_0
      23: getfield      #7                  // Field _paddingChar:C
      26: aload_0
      27: getfield      #8                  // Field _maxLineLength:I
      30: invokespecial #25                 // Method "<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V
      33: areturn

  protected java.lang.Object readResolve();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _name:Ljava/lang/String;
       4: invokestatic  #31                 // Method com/fasterxml/jackson/core/Base64Variants.valueOf:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;
       7: astore_1
       8: aload_0
       9: getfield      #6                  // Field _writePadding:Z
      12: aload_1
      13: getfield      #6                  // Field _writePadding:Z
      16: if_icmpne     63
      19: aload_0
      20: getfield      #7                  // Field _paddingChar:C
      23: aload_1
      24: getfield      #7                  // Field _paddingChar:C
      27: if_icmpne     63
      30: aload_0
      31: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
      34: aload_1
      35: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
      38: if_acmpne     63
      41: aload_0
      42: getfield      #8                  // Field _maxLineLength:I
      45: aload_1
      46: getfield      #8                  // Field _maxLineLength:I
      49: if_icmpne     63
      52: aload_0
      53: getfield      #6                  // Field _writePadding:Z
      56: aload_1
      57: getfield      #6                  // Field _writePadding:Z
      60: if_icmpeq     92
      63: new           #20                 // class com/fasterxml/jackson/core/Base64Variant
      66: dup
      67: aload_1
      68: aload_0
      69: getfield      #5                  // Field _name:Ljava/lang/String;
      72: aload_0
      73: getfield      #6                  // Field _writePadding:Z
      76: aload_0
      77: getfield      #7                  // Field _paddingChar:C
      80: aload_0
      81: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
      84: aload_0
      85: getfield      #8                  // Field _maxLineLength:I
      88: invokespecial #26                 // Method "<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V
      91: areturn
      92: aload_1
      93: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _name:Ljava/lang/String;
       4: areturn

  public boolean usesPadding();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _writePadding:Z
       4: ireturn

  public boolean requiresPaddingOnRead();
    Code:
       0: aload_0
       1: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
       4: getstatic     #22                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean acceptsPaddingOnRead();
    Code:
       0: aload_0
       1: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
       4: getstatic     #23                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean usesPaddingChar(char);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #7                  // Field _paddingChar:C
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean usesPaddingChar(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #7                  // Field _paddingChar:C
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour paddingReadBehaviour();
    Code:
       0: aload_0
       1: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
       4: areturn

  public char getPaddingChar();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _paddingChar:C
       4: ireturn

  public byte getPaddingByte();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _paddingChar:C
       4: i2b
       5: ireturn

  public int getMaxLineLength();
    Code:
       0: aload_0
       1: getfield      #8                  // Field _maxLineLength:I
       4: ireturn

  public int decodeBase64Char(char);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: bipush        127
       5: if_icmpgt     17
       8: aload_0
       9: getfield      #2                  // Field _asciiToBase64:[I
      12: iload_2
      13: iaload
      14: goto          18
      17: iconst_m1
      18: ireturn

  public int decodeBase64Char(int);
    Code:
       0: iload_1
       1: bipush        127
       3: if_icmpgt     15
       6: aload_0
       7: getfield      #2                  // Field _asciiToBase64:[I
      10: iload_1
      11: iaload
      12: goto          16
      15: iconst_m1
      16: ireturn

  public int decodeBase64Byte(byte);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: ifge          8
       6: iconst_m1
       7: ireturn
       8: aload_0
       9: getfield      #2                  // Field _asciiToBase64:[I
      12: iload_2
      13: iaload
      14: ireturn

  public char encodeBase64BitsAsChar(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _base64ToAsciiC:[C
       4: iload_1
       5: caload
       6: ireturn

  public int encodeBase64Chunk(int, char[], int);
    Code:
       0: aload_2
       1: iload_3
       2: iinc          3, 1
       5: aload_0
       6: getfield      #3                  // Field _base64ToAsciiC:[C
       9: iload_1
      10: bipush        18
      12: ishr
      13: bipush        63
      15: iand
      16: caload
      17: castore
      18: aload_2
      19: iload_3
      20: iinc          3, 1
      23: aload_0
      24: getfield      #3                  // Field _base64ToAsciiC:[C
      27: iload_1
      28: bipush        12
      30: ishr
      31: bipush        63
      33: iand
      34: caload
      35: castore
      36: aload_2
      37: iload_3
      38: iinc          3, 1
      41: aload_0
      42: getfield      #3                  // Field _base64ToAsciiC:[C
      45: iload_1
      46: bipush        6
      48: ishr
      49: bipush        63
      51: iand
      52: caload
      53: castore
      54: aload_2
      55: iload_3
      56: iinc          3, 1
      59: aload_0
      60: getfield      #3                  // Field _base64ToAsciiC:[C
      63: iload_1
      64: bipush        63
      66: iand
      67: caload
      68: castore
      69: iload_3
      70: ireturn

  public void encodeBase64Chunk(java.lang.StringBuilder, int);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field _base64ToAsciiC:[C
       5: iload_2
       6: bipush        18
       8: ishr
       9: bipush        63
      11: iand
      12: caload
      13: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      16: pop
      17: aload_1
      18: aload_0
      19: getfield      #3                  // Field _base64ToAsciiC:[C
      22: iload_2
      23: bipush        12
      25: ishr
      26: bipush        63
      28: iand
      29: caload
      30: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      33: pop
      34: aload_1
      35: aload_0
      36: getfield      #3                  // Field _base64ToAsciiC:[C
      39: iload_2
      40: bipush        6
      42: ishr
      43: bipush        63
      45: iand
      46: caload
      47: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      50: pop
      51: aload_1
      52: aload_0
      53: getfield      #3                  // Field _base64ToAsciiC:[C
      56: iload_2
      57: bipush        63
      59: iand
      60: caload
      61: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      64: pop
      65: return

  public int encodeBase64Partial(int, int, char[], int);
    Code:
       0: aload_3
       1: iload         4
       3: iinc          4, 1
       6: aload_0
       7: getfield      #3                  // Field _base64ToAsciiC:[C
      10: iload_1
      11: bipush        18
      13: ishr
      14: bipush        63
      16: iand
      17: caload
      18: castore
      19: aload_3
      20: iload         4
      22: iinc          4, 1
      25: aload_0
      26: getfield      #3                  // Field _base64ToAsciiC:[C
      29: iload_1
      30: bipush        12
      32: ishr
      33: bipush        63
      35: iand
      36: caload
      37: castore
      38: aload_0
      39: invokevirtual #33                 // Method usesPadding:()Z
      42: ifeq          90
      45: aload_3
      46: iload         4
      48: iinc          4, 1
      51: iload_2
      52: iconst_2
      53: if_icmpne     71
      56: aload_0
      57: getfield      #3                  // Field _base64ToAsciiC:[C
      60: iload_1
      61: bipush        6
      63: ishr
      64: bipush        63
      66: iand
      67: caload
      68: goto          75
      71: aload_0
      72: getfield      #7                  // Field _paddingChar:C
      75: castore
      76: aload_3
      77: iload         4
      79: iinc          4, 1
      82: aload_0
      83: getfield      #7                  // Field _paddingChar:C
      86: castore
      87: goto          114
      90: iload_2
      91: iconst_2
      92: if_icmpne     114
      95: aload_3
      96: iload         4
      98: iinc          4, 1
     101: aload_0
     102: getfield      #3                  // Field _base64ToAsciiC:[C
     105: iload_1
     106: bipush        6
     108: ishr
     109: bipush        63
     111: iand
     112: caload
     113: castore
     114: iload         4
     116: ireturn

  public void encodeBase64Partial(java.lang.StringBuilder, int, int);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field _base64ToAsciiC:[C
       5: iload_2
       6: bipush        18
       8: ishr
       9: bipush        63
      11: iand
      12: caload
      13: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      16: pop
      17: aload_1
      18: aload_0
      19: getfield      #3                  // Field _base64ToAsciiC:[C
      22: iload_2
      23: bipush        12
      25: ishr
      26: bipush        63
      28: iand
      29: caload
      30: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      33: pop
      34: aload_0
      35: invokevirtual #33                 // Method usesPadding:()Z
      38: ifeq          82
      41: aload_1
      42: iload_3
      43: iconst_2
      44: if_icmpne     62
      47: aload_0
      48: getfield      #3                  // Field _base64ToAsciiC:[C
      51: iload_2
      52: bipush        6
      54: ishr
      55: bipush        63
      57: iand
      58: caload
      59: goto          66
      62: aload_0
      63: getfield      #7                  // Field _paddingChar:C
      66: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      69: pop
      70: aload_1
      71: aload_0
      72: getfield      #7                  // Field _paddingChar:C
      75: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      78: pop
      79: goto          104
      82: iload_3
      83: iconst_2
      84: if_icmpne     104
      87: aload_1
      88: aload_0
      89: getfield      #3                  // Field _base64ToAsciiC:[C
      92: iload_2
      93: bipush        6
      95: ishr
      96: bipush        63
      98: iand
      99: caload
     100: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     103: pop
     104: return

  public byte encodeBase64BitsAsByte(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field _base64ToAsciiB:[B
       4: iload_1
       5: baload
       6: ireturn

  public int encodeBase64Chunk(int, byte[], int);
    Code:
       0: aload_2
       1: iload_3
       2: iinc          3, 1
       5: aload_0
       6: getfield      #4                  // Field _base64ToAsciiB:[B
       9: iload_1
      10: bipush        18
      12: ishr
      13: bipush        63
      15: iand
      16: baload
      17: bastore
      18: aload_2
      19: iload_3
      20: iinc          3, 1
      23: aload_0
      24: getfield      #4                  // Field _base64ToAsciiB:[B
      27: iload_1
      28: bipush        12
      30: ishr
      31: bipush        63
      33: iand
      34: baload
      35: bastore
      36: aload_2
      37: iload_3
      38: iinc          3, 1
      41: aload_0
      42: getfield      #4                  // Field _base64ToAsciiB:[B
      45: iload_1
      46: bipush        6
      48: ishr
      49: bipush        63
      51: iand
      52: baload
      53: bastore
      54: aload_2
      55: iload_3
      56: iinc          3, 1
      59: aload_0
      60: getfield      #4                  // Field _base64ToAsciiB:[B
      63: iload_1
      64: bipush        63
      66: iand
      67: baload
      68: bastore
      69: iload_3
      70: ireturn

  public int encodeBase64Partial(int, int, byte[], int);
    Code:
       0: aload_3
       1: iload         4
       3: iinc          4, 1
       6: aload_0
       7: getfield      #4                  // Field _base64ToAsciiB:[B
      10: iload_1
      11: bipush        18
      13: ishr
      14: bipush        63
      16: iand
      17: baload
      18: bastore
      19: aload_3
      20: iload         4
      22: iinc          4, 1
      25: aload_0
      26: getfield      #4                  // Field _base64ToAsciiB:[B
      29: iload_1
      30: bipush        12
      32: ishr
      33: bipush        63
      35: iand
      36: baload
      37: bastore
      38: aload_0
      39: invokevirtual #33                 // Method usesPadding:()Z
      42: ifeq          93
      45: aload_0
      46: getfield      #7                  // Field _paddingChar:C
      49: i2b
      50: istore        5
      52: aload_3
      53: iload         4
      55: iinc          4, 1
      58: iload_2
      59: iconst_2
      60: if_icmpne     78
      63: aload_0
      64: getfield      #4                  // Field _base64ToAsciiB:[B
      67: iload_1
      68: bipush        6
      70: ishr
      71: bipush        63
      73: iand
      74: baload
      75: goto          80
      78: iload         5
      80: bastore
      81: aload_3
      82: iload         4
      84: iinc          4, 1
      87: iload         5
      89: bastore
      90: goto          117
      93: iload_2
      94: iconst_2
      95: if_icmpne     117
      98: aload_3
      99: iload         4
     101: iinc          4, 1
     104: aload_0
     105: getfield      #4                  // Field _base64ToAsciiB:[B
     108: iload_1
     109: bipush        6
     111: ishr
     112: bipush        63
     114: iand
     115: baload
     116: bastore
     117: iload         4
     119: ireturn

  public java.lang.String encode(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #34                 // Method encode:([BZ)Ljava/lang/String;
       6: areturn

  public java.lang.String encode(byte[], boolean);
    Code:
       0: aload_1
       1: arraylength
       2: istore_3
       3: new           #11                 // class java/lang/StringBuilder
       6: dup
       7: iload_3
       8: iload_3
       9: iconst_2
      10: ishr
      11: iadd
      12: iload_3
      13: iconst_3
      14: ishr
      15: iadd
      16: invokespecial #35                 // Method java/lang/StringBuilder."<init>":(I)V
      19: astore        4
      21: iload_2
      22: ifeq          33
      25: aload         4
      27: bipush        34
      29: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      32: pop
      33: aload_0
      34: invokevirtual #36                 // Method getMaxLineLength:()I
      37: iconst_2
      38: ishr
      39: istore        5
      41: iconst_0
      42: istore        6
      44: iload_3
      45: iconst_3
      46: isub
      47: istore        7
      49: iload         6
      51: iload         7
      53: if_icmpgt     146
      56: aload_1
      57: iload         6
      59: iinc          6, 1
      62: baload
      63: bipush        8
      65: ishl
      66: istore        8
      68: iload         8
      70: aload_1
      71: iload         6
      73: iinc          6, 1
      76: baload
      77: sipush        255
      80: iand
      81: ior
      82: istore        8
      84: iload         8
      86: bipush        8
      88: ishl
      89: aload_1
      90: iload         6
      92: iinc          6, 1
      95: baload
      96: sipush        255
      99: iand
     100: ior
     101: istore        8
     103: aload_0
     104: aload         4
     106: iload         8
     108: invokevirtual #37                 // Method encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V
     111: iinc          5, -1
     114: iload         5
     116: ifgt          143
     119: aload         4
     121: bipush        92
     123: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     126: pop
     127: aload         4
     129: bipush        110
     131: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     134: pop
     135: aload_0
     136: invokevirtual #36                 // Method getMaxLineLength:()I
     139: iconst_2
     140: ishr
     141: istore        5
     143: goto          49
     146: iload_3
     147: iload         6
     149: isub
     150: istore        8
     152: iload         8
     154: ifle          204
     157: aload_1
     158: iload         6
     160: iinc          6, 1
     163: baload
     164: bipush        16
     166: ishl
     167: istore        9
     169: iload         8
     171: iconst_2
     172: if_icmpne     194
     175: iload         9
     177: aload_1
     178: iload         6
     180: iinc          6, 1
     183: baload
     184: sipush        255
     187: iand
     188: bipush        8
     190: ishl
     191: ior
     192: istore        9
     194: aload_0
     195: aload         4
     197: iload         9
     199: iload         8
     201: invokevirtual #38                 // Method encodeBase64Partial:(Ljava/lang/StringBuilder;II)V
     204: iload_2
     205: ifeq          216
     208: aload         4
     210: bipush        34
     212: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     215: pop
     216: aload         4
     218: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     221: areturn

  public java.lang.String encode(byte[], boolean, java.lang.String);
    Code:
       0: aload_1
       1: arraylength
       2: istore        4
       4: new           #11                 // class java/lang/StringBuilder
       7: dup
       8: iload         4
      10: iload         4
      12: iconst_2
      13: ishr
      14: iadd
      15: iload         4
      17: iconst_3
      18: ishr
      19: iadd
      20: invokespecial #35                 // Method java/lang/StringBuilder."<init>":(I)V
      23: astore        5
      25: iload_2
      26: ifeq          37
      29: aload         5
      31: bipush        34
      33: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: pop
      37: aload_0
      38: invokevirtual #36                 // Method getMaxLineLength:()I
      41: iconst_2
      42: ishr
      43: istore        6
      45: iconst_0
      46: istore        7
      48: iload         4
      50: iconst_3
      51: isub
      52: istore        8
      54: iload         7
      56: iload         8
      58: if_icmpgt     142
      61: aload_1
      62: iload         7
      64: iinc          7, 1
      67: baload
      68: bipush        8
      70: ishl
      71: istore        9
      73: iload         9
      75: aload_1
      76: iload         7
      78: iinc          7, 1
      81: baload
      82: sipush        255
      85: iand
      86: ior
      87: istore        9
      89: iload         9
      91: bipush        8
      93: ishl
      94: aload_1
      95: iload         7
      97: iinc          7, 1
     100: baload
     101: sipush        255
     104: iand
     105: ior
     106: istore        9
     108: aload_0
     109: aload         5
     111: iload         9
     113: invokevirtual #37                 // Method encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V
     116: iinc          6, -1
     119: iload         6
     121: ifgt          139
     124: aload         5
     126: aload_3
     127: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: pop
     131: aload_0
     132: invokevirtual #36                 // Method getMaxLineLength:()I
     135: iconst_2
     136: ishr
     137: istore        6
     139: goto          54
     142: iload         4
     144: iload         7
     146: isub
     147: istore        9
     149: iload         9
     151: ifle          201
     154: aload_1
     155: iload         7
     157: iinc          7, 1
     160: baload
     161: bipush        16
     163: ishl
     164: istore        10
     166: iload         9
     168: iconst_2
     169: if_icmpne     191
     172: iload         10
     174: aload_1
     175: iload         7
     177: iinc          7, 1
     180: baload
     181: sipush        255
     184: iand
     185: bipush        8
     187: ishl
     188: ior
     189: istore        10
     191: aload_0
     192: aload         5
     194: iload         10
     196: iload         9
     198: invokevirtual #38                 // Method encodeBase64Partial:(Ljava/lang/StringBuilder;II)V
     201: iload_2
     202: ifeq          213
     205: aload         5
     207: bipush        34
     209: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     212: pop
     213: aload         5
     215: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     218: areturn

  public byte[] decode(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: new           #39                 // class com/fasterxml/jackson/core/util/ByteArrayBuilder
       3: dup
       4: invokespecial #40                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #41                 // Method decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V
      14: aload_2
      15: invokevirtual #42                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.toByteArray:()[B
      18: areturn

  public void decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder) throws java.lang.IllegalArgumentException;
    Code:
       0: iconst_0
       1: istore_3
       2: aload_1
       3: invokevirtual #9                  // Method java/lang/String.length:()I
       6: istore        4
       8: iload_3
       9: iload         4
      11: if_icmplt     17
      14: goto          394
      17: aload_1
      18: iload_3
      19: iinc          3, 1
      22: invokevirtual #43                 // Method java/lang/String.charAt:(I)C
      25: istore        5
      27: iload         5
      29: bipush        32
      31: if_icmple     8
      34: aload_0
      35: iload         5
      37: invokevirtual #44                 // Method decodeBase64Char:(C)I
      40: istore        6
      42: iload         6
      44: ifge          55
      47: aload_0
      48: iload         5
      50: iconst_0
      51: aconst_null
      52: invokevirtual #45                 // Method _reportInvalidBase64:(CILjava/lang/String;)V
      55: iload         6
      57: istore        7
      59: iload_3
      60: iload         4
      62: if_icmplt     69
      65: aload_0
      66: invokevirtual #46                 // Method _reportBase64EOF:()V
      69: aload_1
      70: iload_3
      71: iinc          3, 1
      74: invokevirtual #43                 // Method java/lang/String.charAt:(I)C
      77: istore        5
      79: aload_0
      80: iload         5
      82: invokevirtual #44                 // Method decodeBase64Char:(C)I
      85: istore        6
      87: iload         6
      89: ifge          100
      92: aload_0
      93: iload         5
      95: iconst_1
      96: aconst_null
      97: invokevirtual #45                 // Method _reportInvalidBase64:(CILjava/lang/String;)V
     100: iload         7
     102: bipush        6
     104: ishl
     105: iload         6
     107: ior
     108: istore        7
     110: iload_3
     111: iload         4
     113: if_icmplt     142
     116: aload_0
     117: invokevirtual #47                 // Method requiresPaddingOnRead:()Z
     120: ifne          138
     123: iload         7
     125: iconst_4
     126: ishr
     127: istore        7
     129: aload_2
     130: iload         7
     132: invokevirtual #48                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.append:(I)V
     135: goto          394
     138: aload_0
     139: invokevirtual #46                 // Method _reportBase64EOF:()V
     142: aload_1
     143: iload_3
     144: iinc          3, 1
     147: invokevirtual #43                 // Method java/lang/String.charAt:(I)C
     150: istore        5
     152: aload_0
     153: iload         5
     155: invokevirtual #44                 // Method decodeBase64Char:(C)I
     158: istore        6
     160: iload         6
     162: ifge          269
     165: iload         6
     167: bipush        -2
     169: if_icmpeq     180
     172: aload_0
     173: iload         5
     175: iconst_2
     176: aconst_null
     177: invokevirtual #45                 // Method _reportInvalidBase64:(CILjava/lang/String;)V
     180: aload_0
     181: invokevirtual #49                 // Method acceptsPaddingOnRead:()Z
     184: ifne          191
     187: aload_0
     188: invokevirtual #50                 // Method _reportBase64UnexpectedPadding:()V
     191: iload_3
     192: iload         4
     194: if_icmplt     201
     197: aload_0
     198: invokevirtual #46                 // Method _reportBase64EOF:()V
     201: aload_1
     202: iload_3
     203: iinc          3, 1
     206: invokevirtual #43                 // Method java/lang/String.charAt:(I)C
     209: istore        5
     211: aload_0
     212: iload         5
     214: invokevirtual #51                 // Method usesPaddingChar:(C)Z
     217: ifne          254
     220: aload_0
     221: iload         5
     223: iconst_3
     224: new           #11                 // class java/lang/StringBuilder
     227: dup
     228: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     231: ldc           #52                 // String expected padding character \'
     233: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     236: aload_0
     237: invokevirtual #53                 // Method getPaddingChar:()C
     240: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     243: ldc           #54                 // String \'
     245: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     251: invokevirtual #45                 // Method _reportInvalidBase64:(CILjava/lang/String;)V
     254: iload         7
     256: iconst_4
     257: ishr
     258: istore        7
     260: aload_2
     261: iload         7
     263: invokevirtual #48                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.append:(I)V
     266: goto          8
     269: iload         7
     271: bipush        6
     273: ishl
     274: iload         6
     276: ior
     277: istore        7
     279: iload_3
     280: iload         4
     282: if_icmplt     311
     285: aload_0
     286: invokevirtual #47                 // Method requiresPaddingOnRead:()Z
     289: ifne          307
     292: iload         7
     294: iconst_2
     295: ishr
     296: istore        7
     298: aload_2
     299: iload         7
     301: invokevirtual #55                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.appendTwoBytes:(I)V
     304: goto          394
     307: aload_0
     308: invokevirtual #46                 // Method _reportBase64EOF:()V
     311: aload_1
     312: iload_3
     313: iinc          3, 1
     316: invokevirtual #43                 // Method java/lang/String.charAt:(I)C
     319: istore        5
     321: aload_0
     322: iload         5
     324: invokevirtual #44                 // Method decodeBase64Char:(C)I
     327: istore        6
     329: iload         6
     331: ifge          375
     334: iload         6
     336: bipush        -2
     338: if_icmpeq     349
     341: aload_0
     342: iload         5
     344: iconst_3
     345: aconst_null
     346: invokevirtual #45                 // Method _reportInvalidBase64:(CILjava/lang/String;)V
     349: aload_0
     350: invokevirtual #49                 // Method acceptsPaddingOnRead:()Z
     353: ifne          360
     356: aload_0
     357: invokevirtual #50                 // Method _reportBase64UnexpectedPadding:()V
     360: iload         7
     362: iconst_2
     363: ishr
     364: istore        7
     366: aload_2
     367: iload         7
     369: invokevirtual #55                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.appendTwoBytes:(I)V
     372: goto          391
     375: iload         7
     377: bipush        6
     379: ishl
     380: iload         6
     382: ior
     383: istore        7
     385: aload_2
     386: iload         7
     388: invokevirtual #56                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.appendThreeBytes:(I)V
     391: goto          8
     394: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _name:Ljava/lang/String;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_1
      12: invokevirtual #57                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_0
      16: invokevirtual #57                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #20                 // class com/fasterxml/jackson/core/Base64Variant
      28: astore_2
      29: aload_2
      30: getfield      #7                  // Field _paddingChar:C
      33: aload_0
      34: getfield      #7                  // Field _paddingChar:C
      37: if_icmpne     91
      40: aload_2
      41: getfield      #8                  // Field _maxLineLength:I
      44: aload_0
      45: getfield      #8                  // Field _maxLineLength:I
      48: if_icmpne     91
      51: aload_2
      52: getfield      #6                  // Field _writePadding:Z
      55: aload_0
      56: getfield      #6                  // Field _writePadding:Z
      59: if_icmpne     91
      62: aload_2
      63: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
      66: aload_0
      67: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
      70: if_acmpne     91
      73: aload_0
      74: getfield      #5                  // Field _name:Ljava/lang/String;
      77: aload_2
      78: getfield      #5                  // Field _name:Ljava/lang/String;
      81: invokevirtual #58                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      84: ifeq          91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _name:Ljava/lang/String;
       4: invokevirtual #59                 // Method java/lang/String.hashCode:()I
       7: ireturn

  protected void _reportInvalidBase64(char, int, java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: iload_1
       1: bipush        32
       3: if_icmpgt     49
       6: new           #11                 // class java/lang/StringBuilder
       9: dup
      10: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      13: ldc           #60                 // String Illegal white space character (code 0x
      15: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: iload_1
      19: invokestatic  #61                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      22: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #62                 // String ) as character #
      27: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_2
      31: iconst_1
      32: iadd
      33: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: ldc           #63                 // String  of 4-char base64 unit: can only used between units
      38: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: astore        4
      46: goto          184
      49: aload_0
      50: iload_1
      51: invokevirtual #51                 // Method usesPaddingChar:(C)Z
      54: ifeq          100
      57: new           #11                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #64                 // String Unexpected padding character (\'
      66: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: invokevirtual #53                 // Method getPaddingChar:()C
      73: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      76: ldc           #65                 // String \') as character #
      78: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: iload_2
      82: iconst_1
      83: iadd
      84: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      87: ldc           #66                 // String  of 4-char base64 unit: padding only legal as 3rd or 4th character
      89: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: astore        4
      97: goto          184
     100: iload_1
     101: invokestatic  #67                 // Method java/lang/Character.isDefined:(C)Z
     104: ifeq          114
     107: iload_1
     108: invokestatic  #68                 // Method java/lang/Character.isISOControl:(C)Z
     111: ifeq          146
     114: new           #11                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #69                 // String Illegal character (code 0x
     123: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: iload_1
     127: invokestatic  #61                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     130: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: ldc           #70                 // String ) in base64 content
     135: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: astore        4
     143: goto          184
     146: new           #11                 // class java/lang/StringBuilder
     149: dup
     150: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     153: ldc           #71                 // String Illegal character \'
     155: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: iload_1
     159: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     162: ldc           #72                 // String \' (code 0x
     164: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: iload_1
     168: invokestatic  #61                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     171: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: ldc           #70                 // String ) in base64 content
     176: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: astore        4
     184: aload_3
     185: ifnull        214
     188: new           #11                 // class java/lang/StringBuilder
     191: dup
     192: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     195: aload         4
     197: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: ldc           #73                 // String :
     202: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: aload_3
     206: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     212: astore        4
     214: new           #10                 // class java/lang/IllegalArgumentException
     217: dup
     218: aload         4
     220: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     223: athrow

  protected void _reportBase64EOF() throws java.lang.IllegalArgumentException;
    Code:
       0: new           #10                 // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #74                 // Method missingPaddingMessage:()Ljava/lang/String;
       8: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      11: athrow

  protected void _reportBase64UnexpectedPadding() throws java.lang.IllegalArgumentException;
    Code:
       0: new           #10                 // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #75                 // Method unexpectedPaddingMessage:()Ljava/lang/String;
       8: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      11: athrow

  protected java.lang.String unexpectedPaddingMessage();
    Code:
       0: ldc           #76                 // String Unexpected end of base64-encoded String: base64 variant \'%s\' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured
       2: iconst_1
       3: anewarray     #77                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #78                 // Method getName:()Ljava/lang/String;
      12: aastore
      13: invokestatic  #79                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      16: areturn

  public java.lang.String missingPaddingMessage();
    Code:
       0: ldc           #80                 // String Unexpected end of base64-encoded String: base64 variant \'%s\' expects padding (one or more \'%c\' characters) at the end. This Base64Variant might have been incorrectly configured
       2: iconst_2
       3: anewarray     #77                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #78                 // Method getName:()Ljava/lang/String;
      12: aastore
      13: dup
      14: iconst_1
      15: aload_0
      16: invokevirtual #53                 // Method getPaddingChar:()C
      19: invokestatic  #81                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      22: aastore
      23: invokestatic  #79                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: areturn
}
