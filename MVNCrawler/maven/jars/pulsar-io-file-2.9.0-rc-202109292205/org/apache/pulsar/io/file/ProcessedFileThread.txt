Compiled from "ProcessedFileThread.java"
public class org.apache.pulsar.io.file.ProcessedFileThread extends java.lang.Thread {
  private final java.util.concurrent.BlockingQueue<java.io.File> recentlyProcessed;

  private final boolean keepOriginal;

  public org.apache.pulsar.io.file.ProcessedFileThread(org.apache.pulsar.io.file.FileSourceConfig, java.util.concurrent.BlockingQueue<java.io.File>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Thread."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method org/apache/pulsar/io/file/FileSourceConfig.getKeepFile:()Ljava/lang/Boolean;
       9: invokestatic  #3                  // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      12: iconst_0
      13: invokestatic  #4                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      16: invokevirtual #5                  // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #6                  // class java/lang/Boolean
      22: invokevirtual #7                  // Method java/lang/Boolean.booleanValue:()Z
      25: putfield      #8                  // Field keepOriginal:Z
      28: aload_0
      29: aload_2
      30: putfield      #9                  // Field recentlyProcessed:Ljava/util/concurrent/BlockingQueue;
      33: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #9                  // Field recentlyProcessed:Ljava/util/concurrent/BlockingQueue;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.take:()Ljava/lang/Object;
       9: checkcast     #11                 // class java/io/File
      12: astore_1
      13: aload_0
      14: aload_1
      15: invokespecial #12                 // Method handle:(Ljava/io/File;)V
      18: goto          0
      21: astore_1
      22: return
    Exception table:
       from    to  target type
           0    21    21   Class java/lang/InterruptedException

  private void handle(java.io.File);
    Code:
       0: aload_0
       1: getfield      #8                  // Field keepOriginal:Z
       4: ifne          23
       7: aload_1
       8: invokevirtual #14                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      11: invokestatic  #15                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
      14: pop
      15: goto          23
      18: astore_2
      19: aload_2
      20: invokevirtual #17                 // Method java/io/IOException.printStackTrace:()V
      23: return
    Exception table:
       from    to  target type
           7    15    18   Class java/io/IOException
}
