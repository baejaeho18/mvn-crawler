Compiled from "FileSourceConfig.java"
public class org.apache.pulsar.io.file.FileSourceConfig implements java.io.Serializable {
  private static final long serialVersionUID;

  private java.lang.String inputDirectory;

  private java.lang.Boolean recurse;

  private java.lang.Boolean keepFile;

  private java.lang.String fileFilter;

  private java.lang.String pathFilter;

  private java.lang.Integer minimumFileAge;

  private java.lang.Long maximumFileAge;

  private java.lang.Integer minimumSize;

  private java.lang.Double maximumSize;

  private java.lang.Boolean ignoreHiddenFiles;

  private java.lang.Long pollingInterval;

  private java.lang.Integer numWorkers;

  public static org.apache.pulsar.io.file.FileSourceConfig load(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #1                  // class com/fasterxml/jackson/databind/ObjectMapper
       3: dup
       4: new           #2                  // class com/fasterxml/jackson/dataformat/yaml/YAMLFactory
       7: dup
       8: invokespecial #3                  // Method com/fasterxml/jackson/dataformat/yaml/YAMLFactory."<init>":()V
      11: invokespecial #4                  // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":(Lcom/fasterxml/jackson/core/JsonFactory;)V
      14: astore_1
      15: aload_1
      16: new           #5                  // class java/io/File
      19: dup
      20: aload_0
      21: invokespecial #6                  // Method java/io/File."<init>":(Ljava/lang/String;)V
      24: ldc           #7                  // class org/apache/pulsar/io/file/FileSourceConfig
      26: invokevirtual #8                  // Method com/fasterxml/jackson/databind/ObjectMapper.readValue:(Ljava/io/File;Ljava/lang/Class;)Ljava/lang/Object;
      29: checkcast     #7                  // class org/apache/pulsar/io/file/FileSourceConfig
      32: areturn

  public static org.apache.pulsar.io.file.FileSourceConfig load(java.util.Map<java.lang.String, java.lang.Object>) throws java.io.IOException;
    Code:
       0: new           #1                  // class com/fasterxml/jackson/databind/ObjectMapper
       3: dup
       4: invokespecial #9                  // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
       7: astore_1
       8: aload_1
       9: new           #1                  // class com/fasterxml/jackson/databind/ObjectMapper
      12: dup
      13: invokespecial #9                  // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
      16: aload_0
      17: invokevirtual #10                 // Method com/fasterxml/jackson/databind/ObjectMapper.writeValueAsString:(Ljava/lang/Object;)Ljava/lang/String;
      20: ldc           #7                  // class org/apache/pulsar/io/file/FileSourceConfig
      22: invokevirtual #11                 // Method com/fasterxml/jackson/databind/ObjectMapper.readValue:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      25: checkcast     #7                  // class org/apache/pulsar/io/file/FileSourceConfig
      28: areturn

  public void validate();
    Code:
       0: aload_0
       1: getfield      #12                 // Field inputDirectory:Ljava/lang/String;
       4: invokestatic  #13                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
       7: ifeq          20
      10: new           #14                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #15                 // String Required property not set.
      16: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #12                 // Field inputDirectory:Ljava/lang/String;
      24: iconst_0
      25: anewarray     #17                 // class java/lang/String
      28: invokestatic  #18                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      31: iconst_1
      32: anewarray     #19                 // class java/nio/file/LinkOption
      35: dup
      36: iconst_0
      37: getstatic     #20                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
      40: aastore
      41: invokestatic  #21                 // Method java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      44: ifeq          57
      47: new           #14                 // class java/lang/IllegalArgumentException
      50: dup
      51: ldc           #22                 // String Specified input directory does not exist
      53: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: getfield      #12                 // Field inputDirectory:Ljava/lang/String;
      61: iconst_0
      62: anewarray     #17                 // class java/lang/String
      65: invokestatic  #18                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      68: invokestatic  #23                 // Method java/nio/file/Files.isReadable:(Ljava/nio/file/Path;)Z
      71: ifne          84
      74: new           #14                 // class java/lang/IllegalArgumentException
      77: dup
      78: ldc           #24                 // String Specified input directory is not readable
      80: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: aload_0
      85: getfield      #25                 // Field keepFile:Ljava/lang/Boolean;
      88: invokestatic  #26                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      91: iconst_0
      92: invokestatic  #27                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      95: invokevirtual #28                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      98: checkcast     #29                 // class java/lang/Boolean
     101: invokevirtual #30                 // Method java/lang/Boolean.booleanValue:()Z
     104: ifeq          134
     107: aload_0
     108: getfield      #12                 // Field inputDirectory:Ljava/lang/String;
     111: iconst_0
     112: anewarray     #17                 // class java/lang/String
     115: invokestatic  #18                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
     118: invokestatic  #31                 // Method java/nio/file/Files.isWritable:(Ljava/nio/file/Path;)Z
     121: ifne          134
     124: new           #14                 // class java/lang/IllegalArgumentException
     127: dup
     128: ldc           #32                 // String You have requested the consumed files to be deleted, but the source directory is not writeable.
     130: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     133: athrow
     134: aload_0
     135: getfield      #33                 // Field fileFilter:Ljava/lang/String;
     138: invokestatic  #34                 // Method org/apache/commons/lang3/StringUtils.isNotBlank:(Ljava/lang/CharSequence;)Z
     141: ifeq          166
     144: aload_0
     145: getfield      #33                 // Field fileFilter:Ljava/lang/String;
     148: invokestatic  #35                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     151: pop
     152: goto          166
     155: astore_1
     156: new           #14                 // class java/lang/IllegalArgumentException
     159: dup
     160: ldc           #37                 // String Invalid Regex pattern provided for fileFilter
     162: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     165: athrow
     166: aload_0
     167: getfield      #38                 // Field minimumFileAge:Ljava/lang/Integer;
     170: ifnull        199
     173: aload_0
     174: getfield      #38                 // Field minimumFileAge:Ljava/lang/Integer;
     177: invokevirtual #39                 // Method java/lang/Integer.intValue:()I
     180: i2f
     181: invokestatic  #40                 // Method java/lang/Math.signum:(F)F
     184: fconst_0
     185: fcmpg
     186: ifge          199
     189: new           #14                 // class java/lang/IllegalArgumentException
     192: dup
     193: ldc           #41                 // String The property minimumFileAge must be non-negative
     195: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     198: athrow
     199: aload_0
     200: getfield      #42                 // Field maximumFileAge:Ljava/lang/Long;
     203: ifnull        232
     206: aload_0
     207: getfield      #42                 // Field maximumFileAge:Ljava/lang/Long;
     210: invokevirtual #43                 // Method java/lang/Long.longValue:()J
     213: l2f
     214: invokestatic  #40                 // Method java/lang/Math.signum:(F)F
     217: fconst_0
     218: fcmpg
     219: ifge          232
     222: new           #14                 // class java/lang/IllegalArgumentException
     225: dup
     226: ldc           #44                 // String The property maximumFileAge must be non-negative
     228: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     231: athrow
     232: aload_0
     233: getfield      #45                 // Field minimumSize:Ljava/lang/Integer;
     236: ifnull        265
     239: aload_0
     240: getfield      #45                 // Field minimumSize:Ljava/lang/Integer;
     243: invokevirtual #39                 // Method java/lang/Integer.intValue:()I
     246: i2f
     247: invokestatic  #40                 // Method java/lang/Math.signum:(F)F
     250: fconst_0
     251: fcmpg
     252: ifge          265
     255: new           #14                 // class java/lang/IllegalArgumentException
     258: dup
     259: ldc           #46                 // String The property minimumSize must be non-negative
     261: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     264: athrow
     265: aload_0
     266: getfield      #47                 // Field maximumSize:Ljava/lang/Double;
     269: ifnull        297
     272: aload_0
     273: getfield      #47                 // Field maximumSize:Ljava/lang/Double;
     276: invokevirtual #48                 // Method java/lang/Double.doubleValue:()D
     279: invokestatic  #49                 // Method java/lang/Math.signum:(D)D
     282: dconst_0
     283: dcmpg
     284: ifge          297
     287: new           #14                 // class java/lang/IllegalArgumentException
     290: dup
     291: ldc           #50                 // String The property maximumSize must be non-negative
     293: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     296: athrow
     297: aload_0
     298: getfield      #51                 // Field pollingInterval:Ljava/lang/Long;
     301: ifnull        326
     304: aload_0
     305: getfield      #51                 // Field pollingInterval:Ljava/lang/Long;
     308: invokevirtual #43                 // Method java/lang/Long.longValue:()J
     311: lconst_0
     312: lcmp
     313: ifgt          326
     316: new           #14                 // class java/lang/IllegalArgumentException
     319: dup
     320: ldc           #52                 // String The property pollingInterval must be greater than zero
     322: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     325: athrow
     326: aload_0
     327: getfield      #53                 // Field numWorkers:Ljava/lang/Integer;
     330: ifnull        353
     333: aload_0
     334: getfield      #53                 // Field numWorkers:Ljava/lang/Integer;
     337: invokevirtual #39                 // Method java/lang/Integer.intValue:()I
     340: ifgt          353
     343: new           #14                 // class java/lang/IllegalArgumentException
     346: dup
     347: ldc           #54                 // String The property numWorkers must be greater than zero
     349: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     352: athrow
     353: return
    Exception table:
       from    to  target type
         144   152   155   Class java/util/regex/PatternSyntaxException

  public org.apache.pulsar.io.file.FileSourceConfig();
    Code:
       0: aload_0
       1: invokespecial #55                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #56                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
       8: putfield      #25                 // Field keepFile:Ljava/lang/Boolean;
      11: aload_0
      12: ldc           #57                 // String [^\\.].*
      14: putfield      #33                 // Field fileFilter:Ljava/lang/String;
      17: aload_0
      18: iconst_1
      19: invokestatic  #58                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: putfield      #53                 // Field numWorkers:Ljava/lang/Integer;
      25: return

  public java.lang.String getInputDirectory();
    Code:
       0: aload_0
       1: getfield      #12                 // Field inputDirectory:Ljava/lang/String;
       4: areturn

  public java.lang.Boolean getRecurse();
    Code:
       0: aload_0
       1: getfield      #59                 // Field recurse:Ljava/lang/Boolean;
       4: areturn

  public java.lang.Boolean getKeepFile();
    Code:
       0: aload_0
       1: getfield      #25                 // Field keepFile:Ljava/lang/Boolean;
       4: areturn

  public java.lang.String getFileFilter();
    Code:
       0: aload_0
       1: getfield      #33                 // Field fileFilter:Ljava/lang/String;
       4: areturn

  public java.lang.String getPathFilter();
    Code:
       0: aload_0
       1: getfield      #60                 // Field pathFilter:Ljava/lang/String;
       4: areturn

  public java.lang.Integer getMinimumFileAge();
    Code:
       0: aload_0
       1: getfield      #38                 // Field minimumFileAge:Ljava/lang/Integer;
       4: areturn

  public java.lang.Long getMaximumFileAge();
    Code:
       0: aload_0
       1: getfield      #42                 // Field maximumFileAge:Ljava/lang/Long;
       4: areturn

  public java.lang.Integer getMinimumSize();
    Code:
       0: aload_0
       1: getfield      #45                 // Field minimumSize:Ljava/lang/Integer;
       4: areturn

  public java.lang.Double getMaximumSize();
    Code:
       0: aload_0
       1: getfield      #47                 // Field maximumSize:Ljava/lang/Double;
       4: areturn

  public java.lang.Boolean getIgnoreHiddenFiles();
    Code:
       0: aload_0
       1: getfield      #61                 // Field ignoreHiddenFiles:Ljava/lang/Boolean;
       4: areturn

  public java.lang.Long getPollingInterval();
    Code:
       0: aload_0
       1: getfield      #51                 // Field pollingInterval:Ljava/lang/Long;
       4: areturn

  public java.lang.Integer getNumWorkers();
    Code:
       0: aload_0
       1: getfield      #53                 // Field numWorkers:Ljava/lang/Integer;
       4: areturn

  public org.apache.pulsar.io.file.FileSourceConfig setInputDirectory(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field inputDirectory:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.pulsar.io.file.FileSourceConfig setRecurse(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #59                 // Field recurse:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public org.apache.pulsar.io.file.FileSourceConfig setKeepFile(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field keepFile:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public org.apache.pulsar.io.file.FileSourceConfig setFileFilter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field fileFilter:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.pulsar.io.file.FileSourceConfig setPathFilter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field pathFilter:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.pulsar.io.file.FileSourceConfig setMinimumFileAge(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field minimumFileAge:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.pulsar.io.file.FileSourceConfig setMaximumFileAge(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field maximumFileAge:Ljava/lang/Long;
       5: aload_0
       6: areturn

  public org.apache.pulsar.io.file.FileSourceConfig setMinimumSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field minimumSize:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.apache.pulsar.io.file.FileSourceConfig setMaximumSize(java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field maximumSize:Ljava/lang/Double;
       5: aload_0
       6: areturn

  public org.apache.pulsar.io.file.FileSourceConfig setIgnoreHiddenFiles(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field ignoreHiddenFiles:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public org.apache.pulsar.io.file.FileSourceConfig setPollingInterval(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field pollingInterval:Ljava/lang/Long;
       5: aload_0
       6: areturn

  public org.apache.pulsar.io.file.FileSourceConfig setNumWorkers(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field numWorkers:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #7                  // class org/apache/pulsar/io/file/FileSourceConfig
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #7                  // class org/apache/pulsar/io/file/FileSourceConfig
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #62                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #63                 // Method getRecurse:()Ljava/lang/Boolean;
      35: astore_3
      36: aload_2
      37: invokevirtual #63                 // Method getRecurse:()Ljava/lang/Boolean;
      40: astore        4
      42: aload_3
      43: ifnonnull     54
      46: aload         4
      48: ifnull        65
      51: goto          63
      54: aload_3
      55: aload         4
      57: invokevirtual #64                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: aload_0
      66: invokevirtual #65                 // Method getKeepFile:()Ljava/lang/Boolean;
      69: astore        5
      71: aload_2
      72: invokevirtual #65                 // Method getKeepFile:()Ljava/lang/Boolean;
      75: astore        6
      77: aload         5
      79: ifnonnull     90
      82: aload         6
      84: ifnull        102
      87: goto          100
      90: aload         5
      92: aload         6
      94: invokevirtual #64                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      97: ifne          102
     100: iconst_0
     101: ireturn
     102: aload_0
     103: invokevirtual #66                 // Method getMinimumFileAge:()Ljava/lang/Integer;
     106: astore        7
     108: aload_2
     109: invokevirtual #66                 // Method getMinimumFileAge:()Ljava/lang/Integer;
     112: astore        8
     114: aload         7
     116: ifnonnull     127
     119: aload         8
     121: ifnull        139
     124: goto          137
     127: aload         7
     129: aload         8
     131: invokevirtual #64                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     134: ifne          139
     137: iconst_0
     138: ireturn
     139: aload_0
     140: invokevirtual #67                 // Method getMaximumFileAge:()Ljava/lang/Long;
     143: astore        9
     145: aload_2
     146: invokevirtual #67                 // Method getMaximumFileAge:()Ljava/lang/Long;
     149: astore        10
     151: aload         9
     153: ifnonnull     164
     156: aload         10
     158: ifnull        176
     161: goto          174
     164: aload         9
     166: aload         10
     168: invokevirtual #64                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     171: ifne          176
     174: iconst_0
     175: ireturn
     176: aload_0
     177: invokevirtual #68                 // Method getMinimumSize:()Ljava/lang/Integer;
     180: astore        11
     182: aload_2
     183: invokevirtual #68                 // Method getMinimumSize:()Ljava/lang/Integer;
     186: astore        12
     188: aload         11
     190: ifnonnull     201
     193: aload         12
     195: ifnull        213
     198: goto          211
     201: aload         11
     203: aload         12
     205: invokevirtual #64                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     208: ifne          213
     211: iconst_0
     212: ireturn
     213: aload_0
     214: invokevirtual #69                 // Method getMaximumSize:()Ljava/lang/Double;
     217: astore        13
     219: aload_2
     220: invokevirtual #69                 // Method getMaximumSize:()Ljava/lang/Double;
     223: astore        14
     225: aload         13
     227: ifnonnull     238
     230: aload         14
     232: ifnull        250
     235: goto          248
     238: aload         13
     240: aload         14
     242: invokevirtual #64                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     245: ifne          250
     248: iconst_0
     249: ireturn
     250: aload_0
     251: invokevirtual #70                 // Method getIgnoreHiddenFiles:()Ljava/lang/Boolean;
     254: astore        15
     256: aload_2
     257: invokevirtual #70                 // Method getIgnoreHiddenFiles:()Ljava/lang/Boolean;
     260: astore        16
     262: aload         15
     264: ifnonnull     275
     267: aload         16
     269: ifnull        287
     272: goto          285
     275: aload         15
     277: aload         16
     279: invokevirtual #64                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     282: ifne          287
     285: iconst_0
     286: ireturn
     287: aload_0
     288: invokevirtual #71                 // Method getPollingInterval:()Ljava/lang/Long;
     291: astore        17
     293: aload_2
     294: invokevirtual #71                 // Method getPollingInterval:()Ljava/lang/Long;
     297: astore        18
     299: aload         17
     301: ifnonnull     312
     304: aload         18
     306: ifnull        324
     309: goto          322
     312: aload         17
     314: aload         18
     316: invokevirtual #64                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     319: ifne          324
     322: iconst_0
     323: ireturn
     324: aload_0
     325: invokevirtual #72                 // Method getNumWorkers:()Ljava/lang/Integer;
     328: astore        19
     330: aload_2
     331: invokevirtual #72                 // Method getNumWorkers:()Ljava/lang/Integer;
     334: astore        20
     336: aload         19
     338: ifnonnull     349
     341: aload         20
     343: ifnull        361
     346: goto          359
     349: aload         19
     351: aload         20
     353: invokevirtual #64                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     356: ifne          361
     359: iconst_0
     360: ireturn
     361: aload_0
     362: invokevirtual #73                 // Method getInputDirectory:()Ljava/lang/String;
     365: astore        21
     367: aload_2
     368: invokevirtual #73                 // Method getInputDirectory:()Ljava/lang/String;
     371: astore        22
     373: aload         21
     375: ifnonnull     386
     378: aload         22
     380: ifnull        398
     383: goto          396
     386: aload         21
     388: aload         22
     390: invokevirtual #64                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     393: ifne          398
     396: iconst_0
     397: ireturn
     398: aload_0
     399: invokevirtual #74                 // Method getFileFilter:()Ljava/lang/String;
     402: astore        23
     404: aload_2
     405: invokevirtual #74                 // Method getFileFilter:()Ljava/lang/String;
     408: astore        24
     410: aload         23
     412: ifnonnull     423
     415: aload         24
     417: ifnull        435
     420: goto          433
     423: aload         23
     425: aload         24
     427: invokevirtual #64                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     430: ifne          435
     433: iconst_0
     434: ireturn
     435: aload_0
     436: invokevirtual #75                 // Method getPathFilter:()Ljava/lang/String;
     439: astore        25
     441: aload_2
     442: invokevirtual #75                 // Method getPathFilter:()Ljava/lang/String;
     445: astore        26
     447: aload         25
     449: ifnonnull     460
     452: aload         26
     454: ifnull        472
     457: goto          470
     460: aload         25
     462: aload         26
     464: invokevirtual #64                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     467: ifne          472
     470: iconst_0
     471: ireturn
     472: iconst_1
     473: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #7                  // class org/apache/pulsar/io/file/FileSourceConfig
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #63                 // Method getRecurse:()Ljava/lang/Boolean;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #76                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: invokevirtual #65                 // Method getKeepFile:()Ljava/lang/Boolean;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #76                 // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: aload_0
      57: invokevirtual #66                 // Method getMinimumFileAge:()Ljava/lang/Integer;
      60: astore        5
      62: iload_2
      63: bipush        59
      65: imul
      66: aload         5
      68: ifnonnull     76
      71: bipush        43
      73: goto          81
      76: aload         5
      78: invokevirtual #76                 // Method java/lang/Object.hashCode:()I
      81: iadd
      82: istore_2
      83: aload_0
      84: invokevirtual #67                 // Method getMaximumFileAge:()Ljava/lang/Long;
      87: astore        6
      89: iload_2
      90: bipush        59
      92: imul
      93: aload         6
      95: ifnonnull     103
      98: bipush        43
     100: goto          108
     103: aload         6
     105: invokevirtual #76                 // Method java/lang/Object.hashCode:()I
     108: iadd
     109: istore_2
     110: aload_0
     111: invokevirtual #68                 // Method getMinimumSize:()Ljava/lang/Integer;
     114: astore        7
     116: iload_2
     117: bipush        59
     119: imul
     120: aload         7
     122: ifnonnull     130
     125: bipush        43
     127: goto          135
     130: aload         7
     132: invokevirtual #76                 // Method java/lang/Object.hashCode:()I
     135: iadd
     136: istore_2
     137: aload_0
     138: invokevirtual #69                 // Method getMaximumSize:()Ljava/lang/Double;
     141: astore        8
     143: iload_2
     144: bipush        59
     146: imul
     147: aload         8
     149: ifnonnull     157
     152: bipush        43
     154: goto          162
     157: aload         8
     159: invokevirtual #76                 // Method java/lang/Object.hashCode:()I
     162: iadd
     163: istore_2
     164: aload_0
     165: invokevirtual #70                 // Method getIgnoreHiddenFiles:()Ljava/lang/Boolean;
     168: astore        9
     170: iload_2
     171: bipush        59
     173: imul
     174: aload         9
     176: ifnonnull     184
     179: bipush        43
     181: goto          189
     184: aload         9
     186: invokevirtual #76                 // Method java/lang/Object.hashCode:()I
     189: iadd
     190: istore_2
     191: aload_0
     192: invokevirtual #71                 // Method getPollingInterval:()Ljava/lang/Long;
     195: astore        10
     197: iload_2
     198: bipush        59
     200: imul
     201: aload         10
     203: ifnonnull     211
     206: bipush        43
     208: goto          216
     211: aload         10
     213: invokevirtual #76                 // Method java/lang/Object.hashCode:()I
     216: iadd
     217: istore_2
     218: aload_0
     219: invokevirtual #72                 // Method getNumWorkers:()Ljava/lang/Integer;
     222: astore        11
     224: iload_2
     225: bipush        59
     227: imul
     228: aload         11
     230: ifnonnull     238
     233: bipush        43
     235: goto          243
     238: aload         11
     240: invokevirtual #76                 // Method java/lang/Object.hashCode:()I
     243: iadd
     244: istore_2
     245: aload_0
     246: invokevirtual #73                 // Method getInputDirectory:()Ljava/lang/String;
     249: astore        12
     251: iload_2
     252: bipush        59
     254: imul
     255: aload         12
     257: ifnonnull     265
     260: bipush        43
     262: goto          270
     265: aload         12
     267: invokevirtual #76                 // Method java/lang/Object.hashCode:()I
     270: iadd
     271: istore_2
     272: aload_0
     273: invokevirtual #74                 // Method getFileFilter:()Ljava/lang/String;
     276: astore        13
     278: iload_2
     279: bipush        59
     281: imul
     282: aload         13
     284: ifnonnull     292
     287: bipush        43
     289: goto          297
     292: aload         13
     294: invokevirtual #76                 // Method java/lang/Object.hashCode:()I
     297: iadd
     298: istore_2
     299: aload_0
     300: invokevirtual #75                 // Method getPathFilter:()Ljava/lang/String;
     303: astore        14
     305: iload_2
     306: bipush        59
     308: imul
     309: aload         14
     311: ifnonnull     319
     314: bipush        43
     316: goto          324
     319: aload         14
     321: invokevirtual #76                 // Method java/lang/Object.hashCode:()I
     324: iadd
     325: istore_2
     326: iload_2
     327: ireturn

  public java.lang.String toString();
    Code:
       0: new           #77                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #78                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #79                 // String FileSourceConfig(inputDirectory=
       9: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #73                 // Method getInputDirectory:()Ljava/lang/String;
      16: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #81                 // String , recurse=
      21: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #63                 // Method getRecurse:()Ljava/lang/Boolean;
      28: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #83                 // String , keepFile=
      33: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #65                 // Method getKeepFile:()Ljava/lang/Boolean;
      40: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #84                 // String , fileFilter=
      45: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #74                 // Method getFileFilter:()Ljava/lang/String;
      52: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #85                 // String , pathFilter=
      57: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #75                 // Method getPathFilter:()Ljava/lang/String;
      64: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #86                 // String , minimumFileAge=
      69: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #66                 // Method getMinimumFileAge:()Ljava/lang/Integer;
      76: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #87                 // String , maximumFileAge=
      81: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #67                 // Method getMaximumFileAge:()Ljava/lang/Long;
      88: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: ldc           #88                 // String , minimumSize=
      93: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: invokevirtual #68                 // Method getMinimumSize:()Ljava/lang/Integer;
     100: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     103: ldc           #89                 // String , maximumSize=
     105: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_0
     109: invokevirtual #69                 // Method getMaximumSize:()Ljava/lang/Double;
     112: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     115: ldc           #90                 // String , ignoreHiddenFiles=
     117: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_0
     121: invokevirtual #70                 // Method getIgnoreHiddenFiles:()Ljava/lang/Boolean;
     124: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     127: ldc           #91                 // String , pollingInterval=
     129: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_0
     133: invokevirtual #71                 // Method getPollingInterval:()Ljava/lang/Long;
     136: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     139: ldc           #92                 // String , numWorkers=
     141: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload_0
     145: invokevirtual #72                 // Method getNumWorkers:()Ljava/lang/Integer;
     148: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     151: ldc           #93                 // String )
     153: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     159: areturn
}
