Compiled from "MockitoAPI.scala"
public interface org.mockito.MockCreator {
  public abstract <T> T mock(scala.reflect.ClassTag<T>, scala.reflect.api.TypeTags$WeakTypeTag<T>, org.mockito.stubbing.DefaultAnswer, org.scalactic.Prettifier);

  public abstract <T> T mock(org.mockito.stubbing.Answer<?>, scala.reflect.ClassTag<T>, scala.reflect.api.TypeTags$WeakTypeTag<T>, org.scalactic.Prettifier);

  public abstract <T> T mock(org.mockito.stubbing.DefaultAnswer, scala.reflect.ClassTag<T>, scala.reflect.api.TypeTags$WeakTypeTag<T>, org.scalactic.Prettifier);

  public abstract <T> T mock(org.mockito.MockSettings, scala.reflect.ClassTag<T>, scala.reflect.api.TypeTags$WeakTypeTag<T>, org.scalactic.Prettifier);

  public abstract <T> T mock(java.lang.String, scala.reflect.ClassTag<T>, scala.reflect.api.TypeTags$WeakTypeTag<T>, org.mockito.stubbing.DefaultAnswer, org.scalactic.Prettifier);

  public abstract <T> T spy(T, boolean, scala.reflect.ClassTag<T>, scala.reflect.api.TypeTags$WeakTypeTag<T>, org.scalactic.Prettifier);

  public abstract <T> T spyLambda(T, scala.reflect.ClassTag<T>);

  public abstract org.mockito.MockSettings withSettings(org.mockito.stubbing.DefaultAnswer);
}
