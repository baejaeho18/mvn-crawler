Compiled from "DeepCloner.java"
public class org.powermock.classloading.DeepCloner implements org.powermock.classloading.spi.DeepClonerSPI {
  private final java.lang.ClassLoader targetCL;

  private final java.util.Map<java.lang.Object, java.lang.Object> referenceMap;

  private final java.lang.Class<org.powermock.classloading.spi.DoNotClone> doNotClone;

  public org.powermock.classloading.DeepCloner(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class org/powermock/core/ListMap
       8: dup
       9: invokespecial #4                  // Method org/powermock/core/ListMap."<init>":()V
      12: putfield      #5                  // Field referenceMap:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field targetCL:Ljava/lang/ClassLoader;
      20: aload_0
      21: aload_0
      22: aload_0
      23: getfield      #6                  // Field targetCL:Ljava/lang/ClassLoader;
      26: invokespecial #7                  // Method getDoNotClone:(Ljava/lang/ClassLoader;)Ljava/lang/Class;
      29: putfield      #8                  // Field doNotClone:Ljava/lang/Class;
      32: return

  public org.powermock.classloading.DeepCloner();
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: invokevirtual #10                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       7: invokespecial #11                 // Method "<init>":(Ljava/lang/ClassLoader;)V
      10: return

  private java.lang.Class<org.powermock.classloading.spi.DoNotClone> getDoNotClone(java.lang.ClassLoader);
    Code:
       0: ldc           #12                 // class org/powermock/classloading/spi/DoNotClone
       2: aload_1
       3: invokestatic  #13                 // Method org/powermock/api/support/ClassLoaderUtil.loadClass:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
       6: areturn

  public <T> T clone(T);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #14                 // Method clone:(Ljava/lang/Object;Z)Ljava/lang/Object;
       6: areturn

  public <T> T clone(T, boolean);
    Code:
       0: aload_1
       1: invokestatic  #15                 // Method assertObjectNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: aload_1
       6: invokestatic  #16                 // Method getType:(Ljava/lang/Object;)Ljava/lang/Class;
       9: aload_0
      10: getfield      #6                  // Field targetCL:Ljava/lang/ClassLoader;
      13: invokestatic  #13                 // Method org/powermock/api/support/ClassLoaderUtil.loadClass:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      16: aload_1
      17: iload_2
      18: invokespecial #17                 // Method performClone:(Ljava/lang/Class;Ljava/lang/Object;Z)Ljava/lang/Object;
      21: areturn

  private static <T> java.lang.Class<T> getType(T);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: instanceof    #18                 // class java/lang/Class
      10: ifeq          17
      13: aload_0
      14: goto          21
      17: aload_0
      18: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: checkcast     #18                 // class java/lang/Class
      24: checkcast     #18                 // class java/lang/Class
      27: areturn

  private static boolean isClass(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: instanceof    #18                 // class java/lang/Class
      10: ireturn

  private static void assertObjectNotNull(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #20                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #21                 // String Object to clone cannot be null
      10: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: return

  private <T> T performClone(java.lang.Class<T>, java.lang.Object, boolean);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_1
       4: invokevirtual #23                 // Method java/lang/Class.isArray:()Z
       7: ifeq          29
      10: aload_2
      11: invokestatic  #24                 // Method isClass:(Ljava/lang/Object;)Z
      14: ifne          29
      17: aload_0
      18: aload_0
      19: getfield      #6                  // Field targetCL:Ljava/lang/ClassLoader;
      22: aload_1
      23: aload_2
      24: iload_3
      25: invokespecial #25                 // Method instantiateArray:(Ljava/lang/ClassLoader;Ljava/lang/Class;Ljava/lang/Object;Z)Ljava/lang/Object;
      28: areturn
      29: aload_0
      30: aload_1
      31: invokespecial #26                 // Method isJavaReflectMethod:(Ljava/lang/Class;)Z
      34: ifeq          43
      37: aload_0
      38: aload_2
      39: invokespecial #27                 // Method cloneJavaReflectMethod:(Ljava/lang/Object;)Ljava/lang/Object;
      42: areturn
      43: aload_1
      44: invokevirtual #28                 // Method java/lang/Class.isPrimitive:()Z
      47: ifne          66
      50: aload_0
      51: aload_1
      52: invokespecial #29                 // Method isSunClass:(Ljava/lang/Class;)Z
      55: ifne          66
      58: aload_0
      59: aload_1
      60: invokespecial #30                 // Method isJavaReflectClass:(Ljava/lang/Class;)Z
      63: ifeq          68
      66: aload_2
      67: areturn
      68: aload_0
      69: aload_1
      70: aload_2
      71: invokespecial #31                 // Method isSerializableCandidate:(Ljava/lang/Class;Ljava/lang/Object;)Z
      74: ifeq          83
      77: aload_0
      78: aload_2
      79: invokespecial #32                 // Method serializationClone:(Ljava/lang/Object;)Ljava/lang/Object;
      82: areturn
      83: aload_1
      84: invokevirtual #33                 // Method java/lang/Class.isEnum:()Z
      87: ifeq          100
      90: aload_0
      91: aload_0
      92: getfield      #6                  // Field targetCL:Ljava/lang/ClassLoader;
      95: aload_2
      96: invokespecial #34                 // Method cloneEnum:(Ljava/lang/ClassLoader;Ljava/lang/Object;)Ljava/lang/Object;
      99: areturn
     100: aload_2
     101: invokestatic  #24                 // Method isClass:(Ljava/lang/Object;)Z
     104: ifeq          119
     107: aload_2
     108: invokestatic  #16                 // Method getType:(Ljava/lang/Object;)Ljava/lang/Class;
     111: aload_0
     112: getfield      #6                  // Field targetCL:Ljava/lang/ClassLoader;
     115: invokestatic  #13                 // Method org/powermock/api/support/ClassLoaderUtil.loadClass:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
     118: areturn
     119: aload_2
     120: invokestatic  #24                 // Method isClass:(Ljava/lang/Object;)Z
     123: ifeq          130
     126: aload_2
     127: goto          134
     130: aload_1
     131: invokestatic  #35                 // Method org/powermock/reflect/Whitebox.newInstance:(Ljava/lang/Class;)Ljava/lang/Object;
     134: astore        4
     136: aload         4
     138: ifnull        171
     141: aload_0
     142: getfield      #5                  // Field referenceMap:Ljava/util/Map;
     145: aload_2
     146: aload         4
     148: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     153: pop
     154: aload_0
     155: aload_0
     156: getfield      #6                  // Field targetCL:Ljava/lang/ClassLoader;
     159: aload_1
     160: aload_2
     161: aload         4
     163: aload_0
     164: getfield      #5                  // Field referenceMap:Ljava/util/Map;
     167: iload_3
     168: invokespecial #37                 // Method cloneFields:(Ljava/lang/ClassLoader;Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Z)V
     171: aload         4
     173: areturn

  private java.lang.Object cloneJavaReflectMethod(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #38                 // class java/lang/reflect/Method
       4: astore_2
       5: aload_2
       6: invokevirtual #39                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
       9: astore_3
      10: aload_3
      11: aload_0
      12: getfield      #6                  // Field targetCL:Ljava/lang/ClassLoader;
      15: invokestatic  #13                 // Method org/powermock/api/support/ClassLoaderUtil.loadClass:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      18: astore        4
      20: aconst_null
      21: astore        5
      23: aload         4
      25: aload_2
      26: invokevirtual #40                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      29: aload_2
      30: invokevirtual #41                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      33: invokevirtual #42                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      36: astore        5
      38: goto          48
      41: astore        6
      43: aload         6
      45: invokestatic  #44                 // Method org/powermock/api/support/SafeExceptionRethrower.safeRethrow:(Ljava/lang/Throwable;)V
      48: aload_2
      49: invokevirtual #45                 // Method java/lang/reflect/Method.isAccessible:()Z
      52: ifeq          61
      55: aload         5
      57: iconst_1
      58: invokevirtual #46                 // Method java/lang/reflect/Method.setAccessible:(Z)V
      61: aload         5
      63: areturn
    Exception table:
       from    to  target type
          23    38    41   Class java/lang/Exception

  private boolean isJavaReflectMethod(java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokevirtual #47                 // Method java/lang/Class.getName:()Ljava/lang/String;
       4: ldc           #38                 // class java/lang/reflect/Method
       6: invokevirtual #47                 // Method java/lang/Class.getName:()Ljava/lang/String;
       9: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ireturn

  private boolean isSunClass(java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokevirtual #47                 // Method java/lang/Class.getName:()Ljava/lang/String;
       4: ldc           #49                 // String sun.
       6: invokevirtual #50                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       9: ireturn

  private boolean isJavaReflectClass(java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokevirtual #47                 // Method java/lang/Class.getName:()Ljava/lang/String;
       4: ldc           #51                 // String java.lang.reflect
       6: invokevirtual #50                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       9: ireturn

  private <T> boolean isSerializableCandidate(java.lang.Class<T>, java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #52                 // Method isStandardJavaType:(Ljava/lang/Class;)Z
       4: ifeq          49
       7: aload_1
       8: invokestatic  #53                 // Method isSerializable:(Ljava/lang/Class;)Z
      11: ifne          21
      14: aload_1
      15: invokestatic  #54                 // Method isImpliticlySerializable:(Ljava/lang/Class;)Z
      18: ifeq          49
      21: ldc           #55                 // class java/util/Map
      23: aload_2
      24: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #56                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      30: ifne          49
      33: ldc           #57                 // class java/lang/Iterable
      35: aload_2
      36: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      39: invokevirtual #56                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      42: ifne          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn

  private static boolean isImpliticlySerializable(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method java/lang/Class.isPrimitive:()Z
       4: ireturn

  private static boolean isSerializable(java.lang.Class<?>);
    Code:
       0: ldc           #58                 // class java/io/Serializable
       2: aload_0
       3: invokevirtual #56                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ireturn

  private java.lang.Object serializationClone(java.lang.Object);
    Code:
       0: aconst_null
       1: astore_2
       2: aconst_null
       3: astore_3
       4: new           #59                 // class java/io/ByteArrayOutputStream
       7: dup
       8: invokespecial #60                 // Method java/io/ByteArrayOutputStream."<init>":()V
      11: astore        4
      13: new           #61                 // class java/io/ObjectOutputStream
      16: dup
      17: aload         4
      19: invokespecial #62                 // Method java/io/ObjectOutputStream."<init>":(Ljava/io/OutputStream;)V
      22: astore_2
      23: aload_2
      24: aload_1
      25: invokevirtual #63                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      28: aload_2
      29: invokevirtual #64                 // Method java/io/ObjectOutputStream.flush:()V
      32: new           #65                 // class java/io/ByteArrayInputStream
      35: dup
      36: aload         4
      38: invokevirtual #66                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      41: invokespecial #67                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      44: astore        5
      46: new           #68                 // class java/io/ObjectInputStream
      49: dup
      50: aload         5
      52: invokespecial #69                 // Method java/io/ObjectInputStream."<init>":(Ljava/io/InputStream;)V
      55: astore_3
      56: aload_3
      57: invokevirtual #70                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      60: astore        6
      62: aload_0
      63: aload_2
      64: invokespecial #71                 // Method close:(Ljava/io/Closeable;)V
      67: aload_0
      68: aload_3
      69: invokespecial #71                 // Method close:(Ljava/io/Closeable;)V
      72: aload         6
      74: areturn
      75: astore        4
      77: new           #72                 // class java/lang/RuntimeException
      80: dup
      81: aload         4
      83: invokespecial #73                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      86: athrow
      87: astore        7
      89: aload_0
      90: aload_2
      91: invokespecial #71                 // Method close:(Ljava/io/Closeable;)V
      94: aload_0
      95: aload_3
      96: invokespecial #71                 // Method close:(Ljava/io/Closeable;)V
      99: aload         7
     101: athrow
    Exception table:
       from    to  target type
           4    62    75   Class java/lang/Exception
           4    62    87   any
          75    89    87   any

  private void close(java.io.Closeable);
    Code:
       0: aload_1
       1: ifnull        10
       4: aload_1
       5: invokeinterface #74,  1           // InterfaceMethod java/io/Closeable.close:()V
      10: goto          14
      13: astore_2
      14: return
    Exception table:
       from    to  target type
           0    10    13   Class java/io/IOException

  private java.lang.Object cloneEnum(java.lang.ClassLoader, java.lang.Object);
    Code:
       0: aload_2
       1: invokestatic  #16                 // Method getType:(Ljava/lang/Object;)Ljava/lang/Class;
       4: aload_1
       5: invokestatic  #13                 // Method org/powermock/api/support/ClassLoaderUtil.loadClass:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
       8: astore        4
      10: aload_2
      11: aload         4
      13: invokestatic  #76                 // Method getEnumValue:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Enum;
      16: astore_3
      17: aload_3
      18: areturn

  private <T> void cloneFields(java.lang.ClassLoader, java.lang.Class<T>, java.lang.Object, java.lang.Object, java.util.Map<java.lang.Object, java.lang.Object>, boolean);
    Code:
       0: aload_2
       1: astore        7
       3: aload         7
       5: ifnull        302
       8: aload         7
      10: invokevirtual #77                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      13: astore        8
      15: aload         8
      17: arraylength
      18: istore        9
      20: iconst_0
      21: istore        10
      23: iload         10
      25: iload         9
      27: if_icmpge     292
      30: aload         8
      32: iload         10
      34: aaload
      35: astore        11
      37: aload         11
      39: aload_0
      40: getfield      #8                  // Field doNotClone:Ljava/lang/Class;
      43: invokevirtual #78                 // Method java/lang/reflect/Field.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      46: ifnull        52
      49: goto          286
      52: aload         11
      54: iconst_1
      55: invokevirtual #79                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      58: aload_3
      59: invokestatic  #16                 // Method getType:(Ljava/lang/Object;)Ljava/lang/Class;
      62: aload         11
      64: invokevirtual #80                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      67: invokestatic  #81                 // Method org/powermock/reflect/Whitebox.getField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
      70: astore        12
      72: aload         12
      74: iconst_1
      75: invokevirtual #79                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      78: aload         12
      80: aload_3
      81: invokevirtual #82                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      84: astore        13
      86: aload         13
      88: aload_3
      89: if_acmpne     99
      92: aload         4
      94: astore        14
      96: goto          217
      99: aload         5
     101: aload         13
     103: invokeinterface #83,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     108: ifeq          125
     111: aload         5
     113: aload         13
     115: invokeinterface #84,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     120: astore        14
     122: goto          217
     125: aload         13
     127: ifnonnull     145
     130: aload         13
     132: invokestatic  #85                 // Method isIterable:(Ljava/lang/Object;)Z
     135: ifne          145
     138: aload         13
     140: astore        14
     142: goto          217
     145: aload         13
     147: invokestatic  #16                 // Method getType:(Ljava/lang/Object;)Ljava/lang/Class;
     150: astore        15
     152: aload         15
     154: invokevirtual #47                 // Method java/lang/Class.getName:()Ljava/lang/String;
     157: ldc           #86                 // String void
     159: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     162: ifeq          177
     165: ldc           #18                 // class java/lang/Class
     167: ldc           #18                 // class java/lang/Class
     169: invokevirtual #87                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     172: checkcast     #18                 // class java/lang/Class
     175: astore        15
     177: aload         15
     179: aload_1
     180: invokestatic  #13                 // Method org/powermock/api/support/ClassLoaderUtil.loadClass:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
     183: astore        16
     185: aload         15
     187: invokevirtual #33                 // Method java/lang/Class.isEnum:()Z
     190: ifeq          205
     193: aload         13
     195: aload         16
     197: invokestatic  #76                 // Method getEnumValue:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Enum;
     200: astore        14
     202: goto          217
     205: aload_0
     206: aload         16
     208: aload         13
     210: iload         6
     212: invokespecial #17                 // Method performClone:(Ljava/lang/Class;Ljava/lang/Object;Z)Ljava/lang/Object;
     215: astore        14
     217: aload         11
     219: invokevirtual #88                 // Method java/lang/reflect/Field.isEnumConstant:()Z
     222: ifne          233
     225: aload         11
     227: invokestatic  #1                  // Method isStaticFinalModifier:(Ljava/lang/reflect/Field;)Z
     230: ifeq          237
     233: iconst_1
     234: goto          238
     237: iconst_0
     238: istore        15
     240: iload         15
     242: ifeq          257
     245: aload         11
     247: aload         4
     249: aload         14
     251: invokestatic  #89                 // Method org/powermock/classloading/DeepCloner$UnsafeFieldWriter.write:(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;)V
     254: goto          266
     257: aload         11
     259: aload         4
     261: aload         14
     263: invokevirtual #90                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
     266: goto          286
     269: astore        12
     271: aload         12
     273: athrow
     274: astore        12
     276: new           #72                 // class java/lang/RuntimeException
     279: dup
     280: aload         12
     282: invokespecial #73                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     285: athrow
     286: iinc          10, 1
     289: goto          23
     292: aload         7
     294: invokevirtual #91                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
     297: astore        7
     299: goto          3
     302: return
    Exception table:
       from    to  target type
          58   266   269   Class java/lang/RuntimeException
          58   266   274   Class java/lang/Exception

  private static <T> boolean isStandardJavaType(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method java/lang/Class.getName:()Ljava/lang/String;
       4: ldc           #92                 // String java.
       6: invokevirtual #50                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       9: ireturn

  private static boolean isStaticFinalModifier(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method java/lang/reflect/Field.getModifiers:()I
       4: istore_1
       5: iload_1
       6: invokestatic  #94                 // Method java/lang/reflect/Modifier.isFinal:(I)Z
       9: ifeq          19
      12: iload_1
      13: invokestatic  #95                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
      16: ifne          43
      19: aload_0
      20: invokevirtual #96                 // Method java/lang/reflect/Field.getDeclaringClass:()Ljava/lang/Class;
      23: ldc           #97                 // class java/lang/Character
      25: invokevirtual #98                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      28: ifeq          47
      31: aload_0
      32: invokevirtual #80                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      35: ldc           #99                 // String MIN_RADIX
      37: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifeq          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  private static boolean isIterable(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        18
       4: aload_0
       5: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokestatic  #100                // Method isIterable:(Ljava/lang/Class;)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private static boolean isIterable(java.lang.Class<?>);
    Code:
       0: ldc           #57                 // class java/lang/Iterable
       2: aload_0
       3: invokevirtual #56                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ireturn

  private static java.lang.Enum getEnumValue(java.lang.Object, java.lang.Class<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #101                // Method java/lang/Object.toString:()Ljava/lang/String;
       5: invokestatic  #102                // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       8: areturn

  private java.lang.Object instantiateArray(java.lang.ClassLoader, java.lang.Class<?>, java.lang.Object, boolean);
    Code:
       0: aload_3
       1: invokestatic  #103                // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
       4: istore        5
       6: aload_2
       7: invokevirtual #104                // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      10: iload         5
      12: invokestatic  #105                // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      15: astore        6
      17: iconst_0
      18: istore        7
      20: iload         7
      22: iload         5
      24: if_icmpge     80
      27: aload_3
      28: iload         7
      30: invokestatic  #106                // Method java/lang/reflect/Array.get:(Ljava/lang/Object;I)Ljava/lang/Object;
      33: astore        8
      35: aload         8
      37: ifnonnull     46
      40: aconst_null
      41: astore        9
      43: goto          65
      46: aload_0
      47: aload         8
      49: invokestatic  #16                 // Method getType:(Ljava/lang/Object;)Ljava/lang/Class;
      52: aload_1
      53: invokestatic  #13                 // Method org/powermock/api/support/ClassLoaderUtil.loadClass:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      56: aload         8
      58: iload         4
      60: invokespecial #17                 // Method performClone:(Ljava/lang/Class;Ljava/lang/Object;Z)Ljava/lang/Object;
      63: astore        9
      65: aload         6
      67: iload         7
      69: aload         9
      71: invokestatic  #107                // Method java/lang/reflect/Array.set:(Ljava/lang/Object;ILjava/lang/Object;)V
      74: iinc          7, 1
      77: goto          20
      80: aload         6
      82: areturn

  static boolean access$000(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method isStaticFinalModifier:(Ljava/lang/reflect/Field;)Z
       4: ireturn
}
