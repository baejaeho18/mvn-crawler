Compiled from "RaptorAnyEntityResolver.kt"
public final class io.fluidsonic.raptor.RaptorAnyEntityResolver implements io.fluidsonic.raptor.RaptorEntityResolver<io.fluidsonic.raptor.RaptorEntity, io.fluidsonic.raptor.RaptorEntityId> {
  private final java.util.Map<kotlin.reflect.KClass<? extends io.fluidsonic.raptor.RaptorEntityId>, io.fluidsonic.raptor.RaptorEntityResolver<io.fluidsonic.raptor.RaptorEntity, io.fluidsonic.raptor.RaptorEntityId>> resolversByIdClass;

  public io.fluidsonic.raptor.RaptorAnyEntityResolver(io.fluidsonic.raptor.RaptorContext, java.util.Map<kotlin.reflect.KClass<? extends io.fluidsonic.raptor.RaptorEntityId>, ? extends kotlin.reflect.KType>);
    Code:
       0: aload_1
       1: ldc           #13                 // String context
       3: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #21                 // String resolverTypes
       9: invokestatic  #19                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokespecial #24                 // Method java/lang/Object."<init>":()V
      16: aload_0
      17: aload_0
      18: checkcast     #2                  // class io/fluidsonic/raptor/RaptorAnyEntityResolver
      21: astore_3
      22: astore        24
      24: iconst_0
      25: istore        4
      27: aload_1
      28: checkcast     #26                 // class io/fluidsonic/raptor/RaptorScope
      31: invokestatic  #32                 // Method io/fluidsonic/raptor/di/RaptorDIKt.getDi:(Lio/fluidsonic/raptor/RaptorScope;)Lio/fluidsonic/raptor/di/RaptorDI;
      34: astore        5
      36: aload_2
      37: astore        6
      39: iconst_0
      40: istore        7
      42: aload         6
      44: astore        8
      46: new           #34                 // class java/util/LinkedHashMap
      49: dup
      50: aload         6
      52: invokeinterface #40,  1           // InterfaceMethod java/util/Map.size:()I
      57: invokestatic  #46                 // Method kotlin/collections/MapsKt.mapCapacity:(I)I
      60: invokespecial #49                 // Method java/util/LinkedHashMap."<init>":(I)V
      63: checkcast     #36                 // class java/util/Map
      66: astore        9
      68: iconst_0
      69: istore        10
      71: aload         8
      73: invokeinterface #53,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      78: checkcast     #55                 // class java/lang/Iterable
      81: astore        11
      83: iconst_0
      84: istore        12
      86: aload         11
      88: invokeinterface #59,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      93: astore        13
      95: aload         13
      97: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     102: ifeq          197
     105: aload         13
     107: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     112: astore        14
     114: aload         9
     116: aload         14
     118: checkcast     #71                 // class java/util/Map$Entry
     121: astore        15
     123: astore        16
     125: iconst_0
     126: istore        17
     128: aload         15
     130: invokeinterface #74,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     135: aload         16
     137: swap
     138: aload         14
     140: checkcast     #71                 // class java/util/Map$Entry
     143: astore        18
     145: astore        19
     147: astore        20
     149: iconst_0
     150: istore        21
     152: aload         18
     154: invokeinterface #77,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     159: checkcast     #79                 // class kotlin/reflect/KType
     162: astore        22
     164: aload         5
     166: aload         22
     168: invokestatic  #83                 // Method io/fluidsonic/raptor/di/RaptorDIKt.get:(Lio/fluidsonic/raptor/di/RaptorDI;Lkotlin/reflect/KType;)Ljava/lang/Object;
     171: dup
     172: ldc           #85                 // String null cannot be cast to non-null type io.fluidsonic.raptor.RaptorEntityResolver<io.fluidsonic.raptor.RaptorEntity, io.fluidsonic.raptor.RaptorEntityId>
     174: invokestatic  #88                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
     177: checkcast     #7                  // class io/fluidsonic/raptor/RaptorEntityResolver
     180: astore        23
     182: aload         20
     184: aload         19
     186: aload         23
     188: invokeinterface #92,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     193: pop
     194: goto          95
     197: aload         9
     199: nop
     200: nop
     201: nop
     202: aload         24
     204: swap
     205: nop
     206: putfield      #96                 // Field resolversByIdClass:Ljava/util/Map;
     209: return

  public java.lang.Object resolveOrNull(io.fluidsonic.raptor.RaptorEntityId, kotlin.coroutines.Continuation<? super io.fluidsonic.raptor.RaptorEntity>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #132                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokestatic  #138                // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
       8: invokespecial #142                // Method resolverByIdClass:(Lkotlin/reflect/KClass;)Lio/fluidsonic/raptor/RaptorEntityResolver;
      11: aload_1
      12: aload_2
      13: invokeinterface #144,  3          // InterfaceMethod io/fluidsonic/raptor/RaptorEntityResolver.resolveOrNull:(Lio/fluidsonic/raptor/RaptorEntityId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
      18: areturn

  public java.lang.Object resolveOrSkip(java.util.Collection<? extends io.fluidsonic.raptor.RaptorEntityId>, kotlin.coroutines.Continuation<? super java.util.Collection<? extends io.fluidsonic.raptor.RaptorEntity>>);
    Code:
       0: aload_2
       1: instanceof    #153                // class io/fluidsonic/raptor/RaptorAnyEntityResolver$resolveOrSkip$1
       4: ifeq          39
       7: aload_2
       8: checkcast     #153                // class io/fluidsonic/raptor/RaptorAnyEntityResolver$resolveOrSkip$1
      11: astore        18
      13: aload         18
      15: getfield      #156                // Field io/fluidsonic/raptor/RaptorAnyEntityResolver$resolveOrSkip$1.label:I
      18: ldc           #157                // int -2147483648
      20: iand
      21: ifeq          39
      24: aload         18
      26: dup
      27: getfield      #156                // Field io/fluidsonic/raptor/RaptorAnyEntityResolver$resolveOrSkip$1.label:I
      30: ldc           #157                // int -2147483648
      32: isub
      33: putfield      #156                // Field io/fluidsonic/raptor/RaptorAnyEntityResolver$resolveOrSkip$1.label:I
      36: goto          50
      39: new           #153                // class io/fluidsonic/raptor/RaptorAnyEntityResolver$resolveOrSkip$1
      42: dup
      43: aload_0
      44: aload_2
      45: invokespecial #160                // Method io/fluidsonic/raptor/RaptorAnyEntityResolver$resolveOrSkip$1."<init>":(Lio/fluidsonic/raptor/RaptorAnyEntityResolver;Lkotlin/coroutines/Continuation;)V
      48: astore        18
      50: aload         18
      52: getfield      #163                // Field io/fluidsonic/raptor/RaptorAnyEntityResolver$resolveOrSkip$1.result:Ljava/lang/Object;
      55: astore        17
      57: invokestatic  #168                // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      60: astore        19
      62: aload         18
      64: getfield      #156                // Field io/fluidsonic/raptor/RaptorAnyEntityResolver$resolveOrSkip$1.label:I
      67: tableswitch   { // 0 to 1
                     0: 88
                     1: 388
               default: 459
          }
      88: aload         17
      90: invokestatic  #174                // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
      93: aload_1
      94: checkcast     #55                 // class java/lang/Iterable
      97: astore_3
      98: iconst_0
      99: istore        4
     101: aload_3
     102: astore        5
     104: new           #34                 // class java/util/LinkedHashMap
     107: dup
     108: invokespecial #175                // Method java/util/LinkedHashMap."<init>":()V
     111: checkcast     #36                 // class java/util/Map
     114: astore        6
     116: iconst_0
     117: istore        7
     119: aload         5
     121: invokeinterface #59,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     126: astore        8
     128: aload         8
     130: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     135: ifeq          243
     138: aload         8
     140: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     145: astore        9
     147: aload         9
     149: checkcast     #177                // class io/fluidsonic/raptor/RaptorEntityId
     152: astore        10
     154: iconst_0
     155: istore        11
     157: aload         10
     159: invokevirtual #132                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     162: invokestatic  #138                // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
     165: astore        12
     167: aload         6
     169: astore        13
     171: iconst_0
     172: istore        14
     174: aload         13
     176: aload         12
     178: invokeinterface #180,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     183: astore        15
     185: aload         15
     187: ifnonnull     222
     190: iconst_0
     191: istore        16
     193: new           #182                // class java/util/ArrayList
     196: dup
     197: invokespecial #183                // Method java/util/ArrayList."<init>":()V
     200: checkcast     #185                // class java/util/List
     203: astore        16
     205: aload         13
     207: aload         12
     209: aload         16
     211: invokeinterface #92,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     216: pop
     217: aload         16
     219: goto          224
     222: aload         15
     224: nop
     225: checkcast     #185                // class java/util/List
     228: astore        10
     230: aload         10
     232: aload         9
     234: invokeinterface #189,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     239: pop
     240: goto          128
     243: aload         6
     245: nop
     246: astore_3
     247: iconst_0
     248: istore        4
     250: aload_3
     251: astore        5
     253: new           #182                // class java/util/ArrayList
     256: dup
     257: invokespecial #183                // Method java/util/ArrayList."<init>":()V
     260: checkcast     #191                // class java/util/Collection
     263: astore        6
     265: iconst_0
     266: istore        7
     268: aload         5
     270: invokeinterface #53,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     275: invokeinterface #194,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     280: astore        8
     282: aload         8
     284: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     289: ifeq          452
     292: aload         8
     294: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     299: checkcast     #71                 // class java/util/Map$Entry
     302: astore        9
     304: aload         9
     306: astore        10
     308: iconst_0
     309: istore        11
     311: aload         10
     313: invokeinterface #74,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     318: checkcast     #196                // class kotlin/reflect/KClass
     321: astore        12
     323: aload         10
     325: invokeinterface #77,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     330: checkcast     #185                // class java/util/List
     333: astore        13
     335: aload_0
     336: aload         12
     338: invokespecial #142                // Method resolverByIdClass:(Lkotlin/reflect/KClass;)Lio/fluidsonic/raptor/RaptorEntityResolver;
     341: aload         13
     343: checkcast     #191                // class java/util/Collection
     346: aload         18
     348: aload         18
     350: aload_0
     351: putfield      #199                // Field io/fluidsonic/raptor/RaptorAnyEntityResolver$resolveOrSkip$1.L$0:Ljava/lang/Object;
     354: aload         18
     356: aload         6
     358: putfield      #202                // Field io/fluidsonic/raptor/RaptorAnyEntityResolver$resolveOrSkip$1.L$1:Ljava/lang/Object;
     361: aload         18
     363: aload         8
     365: putfield      #205                // Field io/fluidsonic/raptor/RaptorAnyEntityResolver$resolveOrSkip$1.L$2:Ljava/lang/Object;
     368: aload         18
     370: iconst_1
     371: putfield      #156                // Field io/fluidsonic/raptor/RaptorAnyEntityResolver$resolveOrSkip$1.label:I
     374: invokeinterface #207,  3          // InterfaceMethod io/fluidsonic/raptor/RaptorEntityResolver.resolveOrSkip:(Ljava/util/Collection;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
     379: dup
     380: aload         19
     382: if_acmpne     433
     385: aload         19
     387: areturn
     388: iconst_0
     389: istore        4
     391: iconst_0
     392: istore        7
     394: iconst_0
     395: istore        11
     397: aload         18
     399: getfield      #205                // Field io/fluidsonic/raptor/RaptorAnyEntityResolver$resolveOrSkip$1.L$2:Ljava/lang/Object;
     402: checkcast     #61                 // class java/util/Iterator
     405: astore        8
     407: aload         18
     409: getfield      #202                // Field io/fluidsonic/raptor/RaptorAnyEntityResolver$resolveOrSkip$1.L$1:Ljava/lang/Object;
     412: checkcast     #191                // class java/util/Collection
     415: astore        6
     417: aload         18
     419: getfield      #199                // Field io/fluidsonic/raptor/RaptorAnyEntityResolver$resolveOrSkip$1.L$0:Ljava/lang/Object;
     422: checkcast     #2                  // class io/fluidsonic/raptor/RaptorAnyEntityResolver
     425: astore_0
     426: aload         17
     428: invokestatic  #174                // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     431: aload         17
     433: checkcast     #191                // class java/util/Collection
     436: checkcast     #55                 // class java/lang/Iterable
     439: astore        10
     441: aload         6
     443: aload         10
     445: invokestatic  #213                // Method kotlin/collections/CollectionsKt.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z
     448: pop
     449: goto          282
     452: aload         6
     454: checkcast     #185                // class java/util/List
     457: nop
     458: areturn
     459: new           #215                // class java/lang/IllegalStateException
     462: dup
     463: ldc           #217                // String call to \'resume\' before \'invoke\' with coroutine
     465: invokespecial #220                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     468: athrow

  private final io.fluidsonic.raptor.RaptorEntityResolver<io.fluidsonic.raptor.RaptorEntity, io.fluidsonic.raptor.RaptorEntityId> resolverByIdClass(kotlin.reflect.KClass<? extends io.fluidsonic.raptor.RaptorEntityId>);
    Code:
       0: aload_0
       1: getfield      #96                 // Field resolversByIdClass:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #180,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class io/fluidsonic/raptor/RaptorEntityResolver
      13: dup
      14: ifnonnull     59
      17: pop
      18: new           #215                // class java/lang/IllegalStateException
      21: dup
      22: new           #251                // class java/lang/StringBuilder
      25: dup
      26: invokespecial #252                // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #254                // String No entity resolver was provided for \'
      31: invokevirtual #258                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokeinterface #262,  1          // InterfaceMethod kotlin/reflect/KClass.getQualifiedName:()Ljava/lang/String;
      40: invokevirtual #258                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc_w         #264                // String \'.
      46: invokevirtual #258                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #267                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokevirtual #268                // Method java/lang/Object.toString:()Ljava/lang/String;
      55: invokespecial #220                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: areturn
}
