Compiled from "Equal.scala"
public class scalaz.Equal$EqualDecidable implements scalaz.Decidable<scalaz.Equal> {
  private scalaz.syntax.DecidableSyntax<scalaz.Equal> decidableSyntax;

  private scalaz.syntax.InvariantAltSyntax<scalaz.Equal> invariantAltSyntax;

  private scalaz.syntax.DivisibleSyntax<scalaz.Equal> divisibleSyntax;

  private scalaz.syntax.InvariantApplicativeSyntax<scalaz.Equal> invariantApplicativeSyntax;

  private scalaz.syntax.DivideSyntax<scalaz.Equal> divideSyntax;

  private scalaz.syntax.ContravariantSyntax<scalaz.Equal> contravariantSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<scalaz.Equal> invariantFunctorSyntax;

  public final java.lang.Object choose(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #76                 // InterfaceMethod scalaz/Decidable.choose$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object choose1(scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #86                 // InterfaceMethod scalaz/Decidable.choose1$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object choose3(scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #93                 // InterfaceMethod scalaz/Decidable.choose3$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object choose4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #100                // InterfaceMethod scalaz/Decidable.choose4$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object choosing2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #108                // InterfaceMethod scalaz/Decidable.choosing2$:(Lscalaz/Decidable;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object choosing3(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #116                // InterfaceMethod scalaz/Decidable.choosing3$:(Lscalaz/Decidable;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object choosing4(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #123                // InterfaceMethod scalaz/Decidable.choosing4$:(Lscalaz/Decidable;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #130                // InterfaceMethod scalaz/Decidable.xcoproduct1$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xcoproduct2(scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #136                // InterfaceMethod scalaz/Decidable.xcoproduct2$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xcoproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #142                // InterfaceMethod scalaz/Decidable.xcoproduct3$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #148                // InterfaceMethod scalaz/Decidable.xcoproduct4$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public scalaz.Decidable<scalaz.Equal>.DecidableLaw decidableLaw();
    Code:
       0: aload_0
       1: invokestatic  #155                // InterfaceMethod scalaz/Decidable.decidableLaw$:(Lscalaz/Decidable;)Lscalaz/Decidable$DecidableLaw;
       4: areturn

  public final java.lang.Object xcoderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #163                // InterfaceMethod scalaz/InvariantAlt.xcoderiving1$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xcoderiving2(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #169                // InterfaceMethod scalaz/InvariantAlt.xcoderiving2$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xcoderiving3(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #175                // InterfaceMethod scalaz/InvariantAlt.xcoderiving3$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xcoderiving4(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #181                // InterfaceMethod scalaz/InvariantAlt.xcoderiving4$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object contramap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #188                // InterfaceMethod scalaz/Divisible.contramap$:(Lscalaz/Divisible;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #195                // InterfaceMethod scalaz/Divisible.xproduct0$:(Lscalaz/Divisible;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #200                // InterfaceMethod scalaz/Divisible.xproduct1$:(Lscalaz/Divisible;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #206                // InterfaceMethod scalaz/Divisible.xproduct2$:(Lscalaz/Divisible;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #213                // InterfaceMethod scalaz/Divisible.xproduct3$:(Lscalaz/Divisible;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #220                // InterfaceMethod scalaz/Divisible.xproduct4$:(Lscalaz/Divisible;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public scalaz.Divisible<scalaz.Equal>.DivisibleLaw divisibleLaw();
    Code:
       0: aload_0
       1: invokestatic  #228                // InterfaceMethod scalaz/Divisible.divisibleLaw$:(Lscalaz/Divisible;)Lscalaz/Divisible$DivisibleLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #235                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #240                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #246                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #252                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #258                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public final java.lang.Object divide(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #264                // InterfaceMethod scalaz/Divide.divide$:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object divide1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #269                // InterfaceMethod scalaz/Divide.divide1$:(Lscalaz/Divide;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object divide3(scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #274                // InterfaceMethod scalaz/Divide.divide3$:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object divide4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #279                // InterfaceMethod scalaz/Divide.divide4$:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #285                // InterfaceMethod scalaz/Divide.tuple2$:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object dividing1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #291                // InterfaceMethod scalaz/Divide.dividing1$:(Lscalaz/Divide;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object dividing2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #296                // InterfaceMethod scalaz/Divide.dividing2$:(Lscalaz/Divide;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object dividing3(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #301                // InterfaceMethod scalaz/Divide.dividing3$:(Lscalaz/Divide;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object dividing4(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #306                // InterfaceMethod scalaz/Divide.dividing4$:(Lscalaz/Divide;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public scalaz.Divide<scalaz.Equal>.DivideLaw divideLaw();
    Code:
       0: aload_0
       1: invokestatic  #313                // InterfaceMethod scalaz/Divide.divideLaw$:(Lscalaz/Divide;)Lscalaz/Divide$DivideLaw;
       4: areturn

  public java.lang.Object narrow(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #320                // InterfaceMethod scalaz/Contravariant.narrow$:(Lscalaz/Contravariant;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #327                // InterfaceMethod scalaz/Contravariant.xmap$:(Lscalaz/Contravariant;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #335                // InterfaceMethod scalaz/Contravariant.compose$:(Lscalaz/Contravariant;Lscalaz/Contravariant;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #343                // InterfaceMethod scalaz/Contravariant.icompose$:(Lscalaz/Contravariant;Lscalaz/Functor;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Contravariant<?> product(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #351                // InterfaceMethod scalaz/Contravariant.product$:(Lscalaz/Contravariant;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public scalaz.Contravariant<scalaz.Equal>.ContravariantLaw contravariantLaw();
    Code:
       0: aload_0
       1: invokestatic  #358                // InterfaceMethod scalaz/Contravariant.contravariantLaw$:(Lscalaz/Contravariant;)Lscalaz/Contravariant$ContravariantLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #366                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #374                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scalaz.Equal>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #382                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.DecidableSyntax<scalaz.Equal> decidableSyntax();
    Code:
       0: aload_0
       1: getfield      #386                // Field decidableSyntax:Lscalaz/syntax/DecidableSyntax;
       4: areturn

  public void scalaz$Decidable$_setter_$decidableSyntax_$eq(scalaz.syntax.DecidableSyntax<scalaz.Equal>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #386                // Field decidableSyntax:Lscalaz/syntax/DecidableSyntax;
       5: return

  public scalaz.syntax.InvariantAltSyntax<scalaz.Equal> invariantAltSyntax();
    Code:
       0: aload_0
       1: getfield      #394                // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       4: areturn

  public void scalaz$InvariantAlt$_setter_$invariantAltSyntax_$eq(scalaz.syntax.InvariantAltSyntax<scalaz.Equal>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #394                // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       5: return

  public scalaz.syntax.DivisibleSyntax<scalaz.Equal> divisibleSyntax();
    Code:
       0: aload_0
       1: getfield      #401                // Field divisibleSyntax:Lscalaz/syntax/DivisibleSyntax;
       4: areturn

  public void scalaz$Divisible$_setter_$divisibleSyntax_$eq(scalaz.syntax.DivisibleSyntax<scalaz.Equal>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #401                // Field divisibleSyntax:Lscalaz/syntax/DivisibleSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scalaz.Equal> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #408                // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scalaz.Equal>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #408                // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.DivideSyntax<scalaz.Equal> divideSyntax();
    Code:
       0: aload_0
       1: getfield      #415                // Field divideSyntax:Lscalaz/syntax/DivideSyntax;
       4: areturn

  public void scalaz$Divide$_setter_$divideSyntax_$eq(scalaz.syntax.DivideSyntax<scalaz.Equal>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #415                // Field divideSyntax:Lscalaz/syntax/DivideSyntax;
       5: return

  public scalaz.syntax.ContravariantSyntax<scalaz.Equal> contravariantSyntax();
    Code:
       0: aload_0
       1: getfield      #422                // Field contravariantSyntax:Lscalaz/syntax/ContravariantSyntax;
       4: areturn

  public void scalaz$Contravariant$_setter_$contravariantSyntax_$eq(scalaz.syntax.ContravariantSyntax<scalaz.Equal>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #422                // Field contravariantSyntax:Lscalaz/syntax/ContravariantSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scalaz.Equal> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #429                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scalaz.Equal>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #429                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A1, A2, Z> scalaz.Equal<Z> divide2(scala.Function0<scalaz.Equal<A1>>, scala.Function0<scalaz.Equal<A2>>, scala.Function1<Z, scala.Tuple2<A1, A2>>);
    Code:
       0: getstatic     #441                // Field scalaz/Equal$.MODULE$:Lscalaz/Equal$;
       3: pop
       4: aload_3
       5: aload_1
       6: aload_2
       7: invokedynamic #460,  0            // InvokeDynamic #0:apply:(Lscala/Function1;Lscala/Function0;Lscala/Function0;)Lscala/Function2;
      12: astore        4
      14: new           #33                 // class scalaz/Equal$$anonfun$equal$2
      17: dup
      18: aload         4
      20: invokespecial #464                // Method scalaz/Equal$$anonfun$equal$2."<init>":(Lscala/Function2;)V
      23: areturn

  public <A> scalaz.Equal<A> conquer();
    Code:
       0: getstatic     #441                // Field scalaz/Equal$.MODULE$:Lscalaz/Equal$;
       3: pop
       4: invokedynamic #475,  0            // InvokeDynamic #1:apply:()Lscala/Function2;
       9: astore_1
      10: new           #33                 // class scalaz/Equal$$anonfun$equal$2
      13: dup
      14: aload_1
      15: invokespecial #464                // Method scalaz/Equal$$anonfun$equal$2."<init>":(Lscala/Function2;)V
      18: areturn

  public <Z, A1, A2> scalaz.Equal<Z> choose2(scala.Function0<scalaz.Equal<A1>>, scala.Function0<scalaz.Equal<A2>>, scala.Function1<Z, scalaz.$bslash$div<A1, A2>>);
    Code:
       0: getstatic     #441                // Field scalaz/Equal$.MODULE$:Lscalaz/Equal$;
       3: pop
       4: aload_3
       5: aload_1
       6: aload_2
       7: invokedynamic #482,  0            // InvokeDynamic #2:apply:(Lscala/Function1;Lscala/Function0;Lscala/Function0;)Lscala/Function2;
      12: astore        4
      14: new           #33                 // class scalaz/Equal$$anonfun$equal$2
      17: dup
      18: aload         4
      20: invokespecial #464                // Method scalaz/Equal$$anonfun$equal$2."<init>":(Lscala/Function2;)V
      23: areturn

  public java.lang.Object choose2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #484                // Method choose2:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Lscalaz/Equal;
       7: areturn

  public java.lang.Object conquer();
    Code:
       0: aload_0
       1: invokevirtual #487                // Method conquer:()Lscalaz/Equal;
       4: areturn

  public java.lang.Object divide2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #489                // Method divide2:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Lscalaz/Equal;
       7: areturn

  public static final boolean $anonfun$divide2$1(scala.Function1, scala.Function0, scala.Function0, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_3
       2: invokeinterface #501,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #503                // class scala/Tuple2
      10: astore        5
      12: aload         5
      14: ifnull        34
      17: aload         5
      19: invokevirtual #506                // Method scala/Tuple2._1:()Ljava/lang/Object;
      22: astore        6
      24: aload         5
      26: invokevirtual #509                // Method scala/Tuple2._2:()Ljava/lang/Object;
      29: astore        7
      31: goto          43
      34: new           #511                // class scala/MatchError
      37: dup
      38: aconst_null
      39: invokespecial #514                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      42: athrow
      43: aload_0
      44: aload         4
      46: invokeinterface #501,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      51: checkcast     #503                // class scala/Tuple2
      54: astore        8
      56: aload         8
      58: ifnull        78
      61: aload         8
      63: invokevirtual #506                // Method scala/Tuple2._1:()Ljava/lang/Object;
      66: astore        9
      68: aload         8
      70: invokevirtual #509                // Method scala/Tuple2._2:()Ljava/lang/Object;
      73: astore        10
      75: goto          87
      78: new           #511                // class scala/MatchError
      81: dup
      82: aconst_null
      83: invokespecial #514                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      86: athrow
      87: aload         6
      89: aload         9
      91: if_acmpeq     115
      94: aload_1
      95: invokeinterface #518,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
     100: checkcast     #35                 // class scalaz/Equal
     103: aload         6
     105: aload         9
     107: invokeinterface #522,  3          // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
     112: ifeq          145
     115: aload         7
     117: aload         10
     119: if_acmpeq     143
     122: aload_2
     123: invokeinterface #518,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
     128: checkcast     #35                 // class scalaz/Equal
     131: aload         7
     133: aload         10
     135: invokeinterface #522,  3          // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
     140: ifeq          145
     143: iconst_1
     144: ireturn
     145: iconst_0
     146: ireturn

  public static final boolean $anonfun$conquer$1(java.lang.Object, java.lang.Object);
    Code:
       0: iconst_1
       1: ireturn

  public static final boolean $anonfun$choose2$1(scala.Function1, scala.Function0, scala.Function0, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_3
       2: invokeinterface #501,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: aload_0
       8: aload         4
      10: invokeinterface #501,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: astore        14
      17: astore        13
      19: aload         13
      21: checkcast     #535                // class scalaz/$bslash$div
      24: astore        5
      26: aload         14
      28: checkcast     #535                // class scalaz/$bslash$div
      31: astore        6
      33: aload         5
      35: instanceof    #537                // class scalaz/$minus$bslash$div
      38: ifeq          101
      41: aload         5
      43: checkcast     #537                // class scalaz/$minus$bslash$div
      46: invokevirtual #540                // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      49: astore        7
      51: aload         6
      53: instanceof    #537                // class scalaz/$minus$bslash$div
      56: ifeq          101
      59: aload         6
      61: checkcast     #537                // class scalaz/$minus$bslash$div
      64: invokevirtual #540                // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      67: astore        8
      69: aload         7
      71: aload         8
      73: if_acmpeq     97
      76: aload_1
      77: invokeinterface #518,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      82: checkcast     #35                 // class scalaz/Equal
      85: aload         7
      87: aload         8
      89: invokeinterface #522,  3          // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      94: ifeq          99
      97: iconst_1
      98: ireturn
      99: iconst_0
     100: ireturn
     101: aload         13
     103: checkcast     #535                // class scalaz/$bslash$div
     106: astore        9
     108: aload         14
     110: checkcast     #535                // class scalaz/$bslash$div
     113: astore        10
     115: aload         9
     117: instanceof    #542                // class scalaz/$bslash$div$minus
     120: ifeq          183
     123: aload         9
     125: checkcast     #542                // class scalaz/$bslash$div$minus
     128: invokevirtual #544                // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
     131: astore        11
     133: aload         10
     135: instanceof    #542                // class scalaz/$bslash$div$minus
     138: ifeq          183
     141: aload         10
     143: checkcast     #542                // class scalaz/$bslash$div$minus
     146: invokevirtual #544                // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
     149: astore        12
     151: aload         11
     153: aload         12
     155: if_acmpeq     179
     158: aload_2
     159: invokeinterface #518,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
     164: checkcast     #35                 // class scalaz/Equal
     167: aload         11
     169: aload         12
     171: invokeinterface #522,  3          // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
     176: ifeq          181
     179: iconst_1
     180: ireturn
     181: iconst_0
     182: ireturn
     183: iconst_0
     184: ireturn

  public scalaz.Equal$EqualDecidable();
    Code:
       0: aload_0
       1: invokespecial #549                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #553                // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #556                // InterfaceMethod scalaz/Contravariant.$init$:(Lscalaz/Contravariant;)V
      12: aload_0
      13: invokestatic  #559                // InterfaceMethod scalaz/Divide.$init$:(Lscalaz/Divide;)V
      16: aload_0
      17: invokestatic  #562                // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      20: aload_0
      21: invokestatic  #565                // InterfaceMethod scalaz/Divisible.$init$:(Lscalaz/Divisible;)V
      24: aload_0
      25: invokestatic  #568                // InterfaceMethod scalaz/InvariantAlt.$init$:(Lscalaz/InvariantAlt;)V
      28: aload_0
      29: invokestatic  #571                // InterfaceMethod scalaz/Decidable.$init$:(Lscalaz/Decidable;)V
      32: invokestatic  #576                // Method scala/runtime/Statics.releaseFence:()V
      35: return

  public static final java.lang.Object $anonfun$divide2$1$adapted(scala.Function1, scala.Function0, scala.Function0, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #578                // Method $anonfun$divide2$1:(Lscala/Function1;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;Ljava/lang/Object;)Z
       9: invokestatic  #584                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      12: areturn

  public static final java.lang.Object $anonfun$conquer$1$adapted(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #586                // Method $anonfun$conquer$1:(Ljava/lang/Object;Ljava/lang/Object;)Z
       5: invokestatic  #584                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: areturn

  public static final java.lang.Object $anonfun$choose2$1$adapted(scala.Function1, scala.Function0, scala.Function0, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #588                // Method $anonfun$choose2$1:(Lscala/Function1;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;Ljava/lang/Object;)Z
       9: invokestatic  #584                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      12: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #600,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
