Compiled from "Bitraverse.scala"
public interface scalaz.Bitraverse<F> extends scalaz.Bifunctor<F>, scalaz.Bifoldable<F> {
  public static <F, G> scalaz.Bitraverse<F> fromIso(scalaz.Isomorphisms$Iso3<scalaz.BiNaturalTransformation, F, G>, scalaz.Bitraverse<G>);
    Code:
       0: getstatic     #70                 // Field scalaz/Bitraverse$.MODULE$:Lscalaz/Bitraverse$;
       3: pop
       4: new           #36                 // class scalaz/Bitraverse$$anon$8
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #74                 // Method scalaz/Bitraverse$$anon$8."<init>":(Lscalaz/Bitraverse;Lscalaz/Isomorphisms$Iso3;)V
      13: areturn

  public static <F> scalaz.Bitraverse<F> apply(scalaz.Bitraverse<F>);
    Code:
       0: getstatic     #70                 // Field scalaz/Bitraverse$.MODULE$:Lscalaz/Bitraverse$;
       3: pop
       4: aload_0
       5: areturn

  public abstract void scalaz$Bitraverse$_setter_$bitraverseSyntax_$eq(scalaz.syntax.BitraverseSyntax<F>);

  public abstract <G, A, B, C, D> G bitraverseImpl(F, scala.Function1<A, G>, scala.Function1<B, G>, scalaz.Applicative<G>);

  public static scalaz.Bitraverse compose$(scalaz.Bitraverse, scalaz.Bitraverse);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #98                 // InterfaceMethod compose:(Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public default <G> scalaz.Bitraverse<?> compose(scalaz.Bitraverse<G>);
    Code:
       0: new           #22                 // class scalaz/Bitraverse$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #102                // Method scalaz/Bitraverse$$anon$1."<init>":(Lscalaz/Bitraverse;Lscalaz/Bitraverse;)V
       9: areturn

  public static scalaz.Bitraverse product$(scalaz.Bitraverse, scalaz.Bitraverse);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #107                // InterfaceMethod product:(Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public default <G> scalaz.Bitraverse<?> product(scalaz.Bitraverse<G>);
    Code:
       0: new           #24                 // class scalaz/Bitraverse$$anon$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #108                // Method scalaz/Bitraverse$$anon$2."<init>":(Lscalaz/Bitraverse;Lscalaz/Bitraverse;)V
       9: areturn

  public static scala.Function1 bitraverseF$(scalaz.Bitraverse, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #115                // InterfaceMethod bitraverseF:(Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
       7: areturn

  public default <G, A, B, C, D> scala.Function1<F, G> bitraverseF(scala.Function1<A, G>, scala.Function1<B, G>, scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #135,  0            // InvokeDynamic #0:apply:(Lscalaz/Bitraverse;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
       9: areturn

  public static java.lang.Object bimap$(scalaz.Bitraverse, java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #141                // InterfaceMethod bimap:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public default <A, B, C, D> F bimap(F, scala.Function1<A, C>, scala.Function1<B, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #148                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       7: pop
       8: getstatic     #153                // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      11: invokevirtual #157                // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      14: checkcast     #159                // class scalaz/Applicative
      17: invokeinterface #161,  5          // InterfaceMethod bitraverseImpl:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      22: areturn

  public static scalaz.Traverse leftTraverse$(scalaz.Bitraverse);
    Code:
       0: aload_0
       1: invokespecial #167                // InterfaceMethod leftTraverse:()Lscalaz/Traverse;
       4: areturn

  public default <X> scalaz.Traverse<?> leftTraverse();
    Code:
       0: new           #26                 // class scalaz/Bitraverse$$anon$3
       3: dup
       4: aload_0
       5: invokespecial #171                // Method scalaz/Bitraverse$$anon$3."<init>":(Lscalaz/Bitraverse;)V
       8: areturn

  public static scalaz.Traverse rightTraverse$(scalaz.Bitraverse);
    Code:
       0: aload_0
       1: invokespecial #175                // InterfaceMethod rightTraverse:()Lscalaz/Traverse;
       4: areturn

  public default <X> scalaz.Traverse<?> rightTraverse();
    Code:
       0: new           #28                 // class scalaz/Bitraverse$$anon$4
       3: dup
       4: aload_0
       5: invokespecial #176                // Method scalaz/Bitraverse$$anon$4."<init>":(Lscalaz/Bitraverse;)V
       8: areturn

  public static scalaz.Traverse uTraverse$(scalaz.Bitraverse);
    Code:
       0: aload_0
       1: invokespecial #180                // InterfaceMethod uTraverse:()Lscalaz/Traverse;
       4: areturn

  public default scalaz.Traverse<?> uTraverse();
    Code:
       0: new           #30                 // class scalaz/Bitraverse$$anon$5
       3: dup
       4: aload_0
       5: invokespecial #182                // Method scalaz/Bitraverse$$anon$5."<init>":(Lscalaz/Bitraverse;)V
       8: areturn

  public static scalaz.Bitraverse$Bitraversal bitraversal$(scalaz.Bitraverse, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #189                // InterfaceMethod bitraversal:(Lscalaz/Applicative;)Lscalaz/Bitraverse$Bitraversal;
       5: areturn

  public default <G> scalaz.Bitraverse<F>.Bitraversal<G> bitraversal(scalaz.Applicative<G>);
    Code:
       0: new           #38                 // class scalaz/Bitraverse$Bitraversal
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #193                // Method scalaz/Bitraverse$Bitraversal."<init>":(Lscalaz/Bitraverse;Lscalaz/Applicative;)V
       9: areturn

  public static scalaz.Bitraverse$Bitraversal bitraversalS$(scalaz.Bitraverse);
    Code:
       0: aload_0
       1: invokespecial #199                // InterfaceMethod bitraversalS:()Lscalaz/Bitraverse$Bitraversal;
       4: areturn

  public default <S> scalaz.Bitraverse<F>.Bitraversal<?> bitraversalS();
    Code:
       0: new           #38                 // class scalaz/Bitraverse$Bitraversal
       3: dup
       4: aload_0
       5: getstatic     #205                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       8: invokevirtual #209                // Method scalaz/StateT$.stateMonad:()Lscalaz/MonadState;
      11: invokespecial #193                // Method scalaz/Bitraverse$Bitraversal."<init>":(Lscalaz/Bitraverse;Lscalaz/Applicative;)V
      14: areturn

  public static java.lang.Object bitraverse$(scalaz.Bitraverse, java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #216                // InterfaceMethod bitraverse:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public default <G, A, B, C, D> G bitraverse(F, scala.Function1<A, G>, scala.Function1<B, G>, scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload         4
       3: invokeinterface #189,  2          // InterfaceMethod bitraversal:(Lscalaz/Applicative;)Lscalaz/Bitraverse$Bitraversal;
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokevirtual #219                // Method scalaz/Bitraverse$Bitraversal.run:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      14: areturn

  public static scalaz.IndexedStateT bitraverseS$(scalaz.Bitraverse, java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #225                // InterfaceMethod bitraverseS:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Lscalaz/IndexedStateT;
       7: areturn

  public default <S, A, B, C, D> scalaz.IndexedStateT<S, S, java.lang.Object, F> bitraverseS(F, scala.Function1<A, scalaz.IndexedStateT<S, S, ?, C>>, scala.Function1<B, scalaz.IndexedStateT<S, S, ?, D>>);
    Code:
       0: aload_0
       1: invokeinterface #199,  1          // InterfaceMethod bitraversalS:()Lscalaz/Bitraverse$Bitraversal;
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokevirtual #219                // Method scalaz/Bitraverse$Bitraversal.run:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      12: checkcast     #47                 // class scalaz/IndexedStateT
      15: areturn

  public static scala.Tuple2 runBitraverseS$(scalaz.Bitraverse, java.lang.Object, java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #233                // InterfaceMethod runBitraverseS:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Lscala/Tuple2;
       9: areturn

  public default <S, A, B, C, D> scala.Tuple2<S, F> runBitraverseS(F, S, scala.Function1<A, scalaz.IndexedStateT<S, S, ?, C>>, scala.Function1<B, scalaz.IndexedStateT<S, S, ?, D>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload         4
       5: invokeinterface #225,  4          // InterfaceMethod bitraverseS:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Lscalaz/IndexedStateT;
      10: aload_2
      11: getstatic     #239                // Field scalaz/Bind$.MODULE$:Lscalaz/Bind$;
      14: pop
      15: getstatic     #153                // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      18: invokevirtual #157                // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      21: checkcast     #241                // class scalaz/Bind
      24: invokevirtual #244                // Method scalaz/IndexedStateT.apply:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      27: checkcast     #246                // class scala/Tuple2
      30: areturn

  public static scalaz.IndexedStateT traverseSTrampoline$(scalaz.Bitraverse, java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #253                // InterfaceMethod traverseSTrampoline:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       9: areturn

  public default <S, G, A, B, C, D> scalaz.IndexedStateT<S, S, java.lang.Object, G> traverseSTrampoline(F, scala.Function1<A, scalaz.IndexedStateT<S, S, ?, G>>, scala.Function1<B, scalaz.IndexedStateT<S, S, ?, G>>, scalaz.Applicative<G>);
    Code:
       0: getstatic     #205                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: pop
       4: getstatic     #259                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
       7: pop
       8: new           #43                 // class scalaz/FreeInstances$$anon$8
      11: dup
      12: aconst_null
      13: invokespecial #262                // Method scalaz/FreeInstances$$anon$8."<init>":(Lscalaz/FreeInstances;)V
      16: astore        7
      18: new           #59                 // class scalaz/StateTInstances2$$anon$12
      21: dup
      22: aconst_null
      23: aload         7
      25: invokespecial #265                // Method scalaz/StateTInstances2$$anon$12."<init>":(Lscalaz/StateTInstances2;Lscalaz/Applicative;)V
      28: aconst_null
      29: astore        7
      31: getstatic     #148                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      34: pop
      35: astore        8
      37: new           #20                 // class scalaz/Applicative$$anon$1
      40: dup
      41: aload         8
      43: aload         4
      45: invokespecial #268                // Method scalaz/Applicative$$anon$1."<init>":(Lscalaz/Applicative;Lscalaz/Applicative;)V
      48: aconst_null
      49: astore        8
      51: astore        5
      53: getstatic     #273                // Field scalaz/State$.MODULE$:Lscalaz/State$;
      56: pop
      57: aload_0
      58: aload_1
      59: aload_2
      60: aload_3
      61: aload         5
      63: invokedynamic #284,  0            // InvokeDynamic #1:apply:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
      68: astore        6
      70: getstatic     #205                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
      73: pop
      74: getstatic     #289                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      77: pop
      78: new           #45                 // class scalaz/IndexedStateT$Wrap
      81: dup
      82: aload         6
      84: invokespecial #292                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      87: areturn

  public static scalaz.Kleisli bitraverseKTrampoline$(scalaz.Bitraverse, java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #304                // InterfaceMethod bitraverseKTrampoline:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       9: areturn

  public default <S, G, A, B, C, D> scalaz.Kleisli<G, S, F> bitraverseKTrampoline(F, scala.Function1<A, scalaz.Kleisli<G, S, C>>, scala.Function1<B, scalaz.Kleisli<G, S, D>>, scalaz.Applicative<G>);
    Code:
       0: getstatic     #310                // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: pop
       4: getstatic     #259                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
       7: pop
       8: new           #43                 // class scalaz/FreeInstances$$anon$8
      11: dup
      12: aconst_null
      13: invokespecial #262                // Method scalaz/FreeInstances$$anon$8."<init>":(Lscalaz/FreeInstances;)V
      16: astore        6
      18: new           #55                 // class scalaz/KleisliInstances3$$anon$17
      21: dup
      22: aconst_null
      23: aload         6
      25: invokespecial #313                // Method scalaz/KleisliInstances3$$anon$17."<init>":(Lscalaz/KleisliInstances3;Lscalaz/Monad;)V
      28: aconst_null
      29: astore        6
      31: getstatic     #148                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      34: pop
      35: astore        7
      37: new           #20                 // class scalaz/Applicative$$anon$1
      40: dup
      41: aload         7
      43: aload         4
      45: invokespecial #268                // Method scalaz/Applicative$$anon$1."<init>":(Lscalaz/Applicative;Lscalaz/Applicative;)V
      48: aconst_null
      49: astore        7
      51: astore        5
      53: new           #315                // class scalaz/Kleisli
      56: dup
      57: aload_0
      58: aload_1
      59: aload_2
      60: aload_3
      61: aload         5
      63: invokedynamic #321,  0            // InvokeDynamic #2:apply:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
      68: invokespecial #322                // Method scalaz/Kleisli."<init>":(Lscala/Function1;)V
      71: areturn

  public static scala.Tuple2 bifoldLShape$(scalaz.Bitraverse, java.lang.Object, java.lang.Object, scala.Function2, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #332                // InterfaceMethod bifoldLShape:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Lscala/Tuple2;
       9: areturn

  public default <A, B, C> scala.Tuple2<C, F> bifoldLShape(F, C, scala.Function2<C, A, C>, scala.Function2<C, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #344,  0            // InvokeDynamic #3:apply:(Lscala/Function2;)Lscala/Function1;
       9: aload         4
      11: invokedynamic #349,  0            // InvokeDynamic #4:apply:(Lscala/Function2;)Lscala/Function1;
      16: invokeinterface #233,  5          // InterfaceMethod runBitraverseS:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Lscala/Tuple2;
      21: areturn

  public static java.lang.Object bisequence$(scalaz.Bitraverse, java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #357                // InterfaceMethod bisequence:(Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public default <G, A, B> G bisequence(F, scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #365,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
       7: invokedynamic #370,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
      12: aload_2
      13: invokeinterface #161,  5          // InterfaceMethod bitraverseImpl:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      18: areturn

  public static java.lang.Object bifoldLeft$(scalaz.Bitraverse, java.lang.Object, java.lang.Object, scala.Function2, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #376                // InterfaceMethod bifoldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  public default <A, B, C> C bifoldLeft(F, C, scala.Function2<C, A, C>, scala.Function2<C, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokeinterface #332,  5          // InterfaceMethod bifoldLShape:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Lscala/Tuple2;
      11: invokevirtual #381                // Method scala/Tuple2._1:()Ljava/lang/Object;
      14: areturn

  public static java.lang.Object bifoldMap$(scalaz.Bitraverse, java.lang.Object, scala.Function1, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #387                // InterfaceMethod bifoldMap:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public default <A, B, M> M bifoldMap(F, scala.Function1<A, M>, scala.Function1<B, M>, scalaz.Monoid<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: invokeinterface #394,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
       9: aload         4
      11: aload_2
      12: invokedynamic #404,  0            // InvokeDynamic #7:apply:(Lscalaz/Monoid;Lscala/Function1;)Lscala/Function2;
      17: aload         4
      19: aload_3
      20: invokedynamic #409,  0            // InvokeDynamic #8:apply:(Lscalaz/Monoid;Lscala/Function1;)Lscala/Function2;
      25: invokeinterface #332,  5          // InterfaceMethod bifoldLShape:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Lscala/Tuple2;
      30: invokevirtual #381                // Method scala/Tuple2._1:()Ljava/lang/Object;
      33: areturn

  public static java.lang.Object bifoldRight$(scalaz.Bitraverse, java.lang.Object, scala.Function0, scala.Function2, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #415                // InterfaceMethod bifoldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  public default <A, B, C> C bifoldRight(F, scala.Function0<C>, scala.Function2<A, scala.Function0<C>, C>, scala.Function2<B, scala.Function0<C>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokedynamic #425,  0            // InvokeDynamic #9:apply:(Lscala/Function2;)Lscala/Function1;
       8: aload         4
      10: invokedynamic #430,  0            // InvokeDynamic #10:apply:(Lscala/Function2;)Lscala/Function1;
      15: getstatic     #435                // Field scalaz/EndoByName$.MODULE$:Lscalaz/EndoByName$;
      18: pop
      19: new           #41                 // class scalaz/EndoByNameInstances$$anon$5
      22: dup
      23: aconst_null
      24: invokespecial #438                // Method scalaz/EndoByNameInstances$$anon$5."<init>":(Lscalaz/EndoByNameInstances;)V
      27: invokeinterface #387,  5          // InterfaceMethod bifoldMap:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      32: checkcast     #440                // class scalaz/EndoByName
      35: dup
      36: ifnonnull     41
      39: aconst_null
      40: athrow
      41: invokevirtual #442                // Method scalaz/EndoByName.run:()Lscala/Function1;
      44: aload_2
      45: invokeinterface #446,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      50: areturn

  public static scalaz.Bitraverse embed$(scalaz.Bitraverse, scalaz.Traverse, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #453                // InterfaceMethod embed:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Bitraverse;
       6: areturn

  public default <G, H> scalaz.Bitraverse<?> embed(scalaz.Traverse<G>, scalaz.Traverse<H>);
    Code:
       0: new           #32                 // class scalaz/Bitraverse$$anon$6
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #458                // Method scalaz/Bitraverse$$anon$6."<init>":(Lscalaz/Bitraverse;Lscalaz/Traverse;Lscalaz/Traverse;)V
      10: areturn

  public static scalaz.Bitraverse embedLeft$(scalaz.Bitraverse, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #464                // InterfaceMethod embedLeft:(Lscalaz/Traverse;)Lscalaz/Bitraverse;
       5: areturn

  public default <G> scalaz.Bitraverse<?> embedLeft(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #470                // Field scalaz/Traverse$.MODULE$:Lscalaz/Traverse$;
       5: pop
       6: getstatic     #153                // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
       9: invokevirtual #157                // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      12: invokeinterface #453,  3          // InterfaceMethod embed:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Bitraverse;
      17: areturn

  public static scalaz.Bitraverse embedRight$(scalaz.Bitraverse, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #474                // InterfaceMethod embedRight:(Lscalaz/Traverse;)Lscalaz/Bitraverse;
       5: areturn

  public default <H> scalaz.Bitraverse<?> embedRight(scalaz.Traverse<H>);
    Code:
       0: aload_0
       1: getstatic     #470                // Field scalaz/Traverse$.MODULE$:Lscalaz/Traverse$;
       4: pop
       5: getstatic     #153                // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
       8: invokevirtual #157                // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      11: aload_1
      12: invokeinterface #453,  3          // InterfaceMethod embed:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Bitraverse;
      17: areturn

  public abstract scalaz.syntax.BitraverseSyntax<F> bitraverseSyntax();

  public static java.lang.Object $anonfun$bitraverseF$1(scalaz.Bitraverse, scala.Function1, scala.Function1, scalaz.Applicative, java.lang.Object);
    Code:
       0: aload_0
       1: aload         4
       3: aload_1
       4: aload_2
       5: aload_3
       6: invokeinterface #161,  5          // InterfaceMethod bitraverseImpl:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      11: areturn

  public static scalaz.IndexedStateT $anonfun$traverseSTrampoline$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #446,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #47                 // class scalaz/IndexedStateT
      10: getstatic     #239                // Field scalaz/Bind$.MODULE$:Lscalaz/Bind$;
      13: pop
      14: getstatic     #153                // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      17: invokevirtual #157                // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      20: checkcast     #241                // class scalaz/Bind
      23: getstatic     #259                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
      26: pop
      27: new           #43                 // class scalaz/FreeInstances$$anon$8
      30: dup
      31: aconst_null
      32: invokespecial #262                // Method scalaz/FreeInstances$$anon$8."<init>":(Lscalaz/FreeInstances;)V
      35: invokevirtual #489                // Method scalaz/IndexedStateT.lift:(Lscalaz/Bind;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
      38: areturn

  public static scalaz.IndexedStateT $anonfun$traverseSTrampoline$3(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #446,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #47                 // class scalaz/IndexedStateT
      10: getstatic     #239                // Field scalaz/Bind$.MODULE$:Lscalaz/Bind$;
      13: pop
      14: getstatic     #153                // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      17: invokevirtual #157                // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      20: checkcast     #241                // class scalaz/Bind
      23: getstatic     #259                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
      26: pop
      27: new           #43                 // class scalaz/FreeInstances$$anon$8
      30: dup
      31: aconst_null
      32: invokespecial #262                // Method scalaz/FreeInstances$$anon$8."<init>":(Lscalaz/FreeInstances;)V
      35: invokevirtual #489                // Method scalaz/IndexedStateT.lift:(Lscalaz/Bind;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
      38: areturn

  public static scala.Tuple2 $anonfun$traverseSTrampoline$1(scalaz.Bitraverse, java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #501,  0            // InvokeDynamic #11:apply:(Lscala/Function1;)Lscala/Function1;
       8: aload_3
       9: invokedynamic #505,  0            // InvokeDynamic #12:apply:(Lscala/Function1;)Lscala/Function1;
      14: aload         4
      16: invokeinterface #216,  5          // InterfaceMethod bitraverse:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      21: checkcast     #47                 // class scalaz/IndexedStateT
      24: aload         5
      26: getstatic     #259                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
      29: pop
      30: new           #43                 // class scalaz/FreeInstances$$anon$8
      33: dup
      34: aconst_null
      35: invokespecial #262                // Method scalaz/FreeInstances$$anon$8."<init>":(Lscalaz/FreeInstances;)V
      38: invokevirtual #244                // Method scalaz/IndexedStateT.apply:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      41: checkcast     #507                // class scalaz/Free
      44: getstatic     #512                // Field scalaz/Leibniz$.MODULE$:Lscalaz/Leibniz$;
      47: pop
      48: new           #57                 // class scalaz/Leibniz$$anon$2
      51: dup
      52: invokespecial #515                // Method scalaz/Leibniz$$anon$2."<init>":()V
      55: invokevirtual #518                // Method scalaz/Free.run:(Lscalaz/Leibniz;)Ljava/lang/Object;
      58: checkcast     #246                // class scala/Tuple2
      61: areturn

  public static java.lang.Object $anonfun$bitraverseKTrampoline$3(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #310                // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: pop
       4: aload_0
       5: aload_1
       6: invokeinterface #446,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #315                // class scalaz/Kleisli
      14: invokevirtual #524                // Method scalaz/Kleisli.run:()Lscala/Function1;
      17: aload_2
      18: invokeinterface #446,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      23: areturn

  public static scalaz.Kleisli $anonfun$bitraverseKTrampoline$2(scala.Function1, java.lang.Object);
    Code:
       0: new           #315                // class scalaz/Kleisli
       3: dup
       4: aload_0
       5: aload_1
       6: invokedynamic #532,  0            // InvokeDynamic #13:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      11: invokespecial #322                // Method scalaz/Kleisli."<init>":(Lscala/Function1;)V
      14: getstatic     #259                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
      17: pop
      18: new           #43                 // class scalaz/FreeInstances$$anon$8
      21: dup
      22: aconst_null
      23: invokespecial #262                // Method scalaz/FreeInstances$$anon$8."<init>":(Lscalaz/FreeInstances;)V
      26: invokevirtual #535                // Method scalaz/Kleisli.lift:(Lscalaz/Applicative;)Lscalaz/Kleisli;
      29: areturn

  public static java.lang.Object $anonfun$bitraverseKTrampoline$5(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #310                // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: pop
       4: aload_0
       5: aload_1
       6: invokeinterface #446,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #315                // class scalaz/Kleisli
      14: invokevirtual #524                // Method scalaz/Kleisli.run:()Lscala/Function1;
      17: aload_2
      18: invokeinterface #446,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      23: areturn

  public static scalaz.Kleisli $anonfun$bitraverseKTrampoline$4(scala.Function1, java.lang.Object);
    Code:
       0: new           #315                // class scalaz/Kleisli
       3: dup
       4: aload_0
       5: aload_1
       6: invokedynamic #543,  0            // InvokeDynamic #14:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      11: invokespecial #322                // Method scalaz/Kleisli."<init>":(Lscala/Function1;)V
      14: getstatic     #259                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
      17: pop
      18: new           #43                 // class scalaz/FreeInstances$$anon$8
      21: dup
      22: aconst_null
      23: invokespecial #262                // Method scalaz/FreeInstances$$anon$8."<init>":(Lscalaz/FreeInstances;)V
      26: invokevirtual #535                // Method scalaz/Kleisli.lift:(Lscalaz/Applicative;)Lscalaz/Kleisli;
      29: areturn

  public static java.lang.Object $anonfun$bitraverseKTrampoline$1(scalaz.Bitraverse, java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #551,  0            // InvokeDynamic #15:apply:(Lscala/Function1;)Lscala/Function1;
       8: aload_3
       9: invokedynamic #555,  0            // InvokeDynamic #16:apply:(Lscala/Function1;)Lscala/Function1;
      14: aload         4
      16: invokeinterface #216,  5          // InterfaceMethod bitraverse:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      21: checkcast     #315                // class scalaz/Kleisli
      24: invokevirtual #524                // Method scalaz/Kleisli.run:()Lscala/Function1;
      27: aload         5
      29: invokeinterface #446,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #507                // class scalaz/Free
      37: getstatic     #512                // Field scalaz/Leibniz$.MODULE$:Lscalaz/Leibniz$;
      40: pop
      41: new           #57                 // class scalaz/Leibniz$$anon$2
      44: dup
      45: invokespecial #515                // Method scalaz/Leibniz$$anon$2."<init>":()V
      48: invokevirtual #518                // Method scalaz/Free.run:(Lscalaz/Leibniz;)Ljava/lang/Object;
      51: areturn

  public static java.lang.Object $anonfun$bifoldLShape$2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokeinterface #564,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static scalaz.IndexedStateT $anonfun$bifoldLShape$1(scala.Function2, java.lang.Object);
    Code:
       0: getstatic     #273                // Field scalaz/State$.MODULE$:Lscalaz/State$;
       3: pop
       4: aload_0
       5: aload_1
       6: invokedynamic #571,  0            // InvokeDynamic #17:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      11: astore_2
      12: getstatic     #273                // Field scalaz/State$.MODULE$:Lscalaz/State$;
      15: pop
      16: aload_2
      17: invokedynamic #579,  0            // InvokeDynamic #18:apply:(Lscala/Function1;)Lscala/Function1;
      22: astore_3
      23: getstatic     #205                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
      26: pop
      27: getstatic     #289                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      30: pop
      31: new           #45                 // class scalaz/IndexedStateT$Wrap
      34: dup
      35: aload_3
      36: invokespecial #292                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      39: areturn

  public static java.lang.Object $anonfun$bifoldLShape$4(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokeinterface #564,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static scalaz.IndexedStateT $anonfun$bifoldLShape$3(scala.Function2, java.lang.Object);
    Code:
       0: getstatic     #273                // Field scalaz/State$.MODULE$:Lscalaz/State$;
       3: pop
       4: aload_0
       5: aload_1
       6: invokedynamic #590,  0            // InvokeDynamic #19:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      11: astore_2
      12: getstatic     #273                // Field scalaz/State$.MODULE$:Lscalaz/State$;
      15: pop
      16: aload_2
      17: invokedynamic #579,  0            // InvokeDynamic #18:apply:(Lscala/Function1;)Lscala/Function1;
      22: astore_3
      23: getstatic     #205                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
      26: pop
      27: getstatic     #289                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      30: pop
      31: new           #45                 // class scalaz/IndexedStateT$Wrap
      34: dup
      35: aload_3
      36: invokespecial #292                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      39: areturn

  public static java.lang.Object $anonfun$bisequence$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$bisequence$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$bifoldMap$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #446,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object $anonfun$bifoldMap$1(scalaz.Monoid, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload_3
       4: invokedynamic #604,  0            // InvokeDynamic #20:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
       9: invokeinterface #608,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static java.lang.Object $anonfun$bifoldMap$4(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #446,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object $anonfun$bifoldMap$3(scalaz.Monoid, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload_3
       4: invokedynamic #615,  0            // InvokeDynamic #21:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
       9: invokeinterface #608,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static java.lang.Object $anonfun$bifoldRight$2(scala.Function2, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #564,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static scalaz.EndoByName $anonfun$bifoldRight$1(scala.Function2, java.lang.Object);
    Code:
       0: getstatic     #625                // Field scalaz/Endo$.MODULE$:Lscalaz/Endo$;
       3: pop
       4: aload_0
       5: aload_1
       6: invokedynamic #631,  0            // InvokeDynamic #22:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      11: astore_2
      12: new           #440                // class scalaz/EndoByName
      15: dup
      16: aload_2
      17: invokespecial #632                // Method scalaz/EndoByName."<init>":(Lscala/Function1;)V
      20: areturn

  public static java.lang.Object $anonfun$bifoldRight$4(scala.Function2, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #564,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static scalaz.EndoByName $anonfun$bifoldRight$3(scala.Function2, java.lang.Object);
    Code:
       0: getstatic     #625                // Field scalaz/Endo$.MODULE$:Lscalaz/Endo$;
       3: pop
       4: aload_0
       5: aload_1
       6: invokedynamic #641,  0            // InvokeDynamic #23:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      11: astore_2
      12: new           #440                // class scalaz/EndoByName
      15: dup
      16: aload_2
      17: invokespecial #632                // Method scalaz/EndoByName."<init>":(Lscala/Function1;)V
      20: areturn

  public static void $init$(scalaz.Bitraverse);
    Code:
       0: aload_0
       1: new           #34                 // class scalaz/Bitraverse$$anon$7
       4: dup
       5: aload_0
       6: invokespecial #643                // Method scalaz/Bitraverse$$anon$7."<init>":(Lscalaz/Bitraverse;)V
       9: invokeinterface #645,  2          // InterfaceMethod scalaz$Bitraverse$_setter_$bitraverseSyntax_$eq:(Lscalaz/syntax/BitraverseSyntax;)V
      14: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #657,  0            // InvokeDynamic #24:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
