Compiled from "Maybe.scala"
public final class scalaz.MaybeInstances0$$anon$3 implements scalaz.SemiLattice<scalaz.Maybe<A>> {
  private scalaz.syntax.SemiLatticeSyntax<scalaz.Maybe<A>> semiLatticeSyntax;

  private scalaz.syntax.BandSyntax<scalaz.Maybe<A>> bandSyntax;

  private scalaz.syntax.SemigroupSyntax<scalaz.Maybe<A>> semigroupSyntax;

  private final scalaz.SemiLattice A$1;

  public scalaz.SemiLattice<scalaz.Maybe<A>>.SemiLatticeLaw semiLatticeLaw();
    Code:
       0: aload_0
       1: invokestatic  #60                 // InterfaceMethod scalaz/SemiLattice.semiLatticeLaw$:(Lscalaz/SemiLattice;)Lscalaz/SemiLattice$SemiLatticeLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #70                 // InterfaceMethod scalaz/Band.multiply1$:(Lscalaz/Band;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public scalaz.Band<scalaz.Maybe<A>>.BandLaw bandLaw();
    Code:
       0: aload_0
       1: invokestatic  #79                 // InterfaceMethod scalaz/Band.bandLaw$:(Lscalaz/Band;)Lscalaz/Band$BandLaw;
       4: areturn

  public <S> scalaz.Maybe<scalaz.Maybe<A>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.Maybe<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #88                 // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.Maybe<A>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.Maybe<A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #94                 // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #101                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #108                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.Maybe<A>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #115                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.SemiLatticeSyntax<scalaz.Maybe<A>> semiLatticeSyntax();
    Code:
       0: aload_0
       1: getfield      #119                // Field semiLatticeSyntax:Lscalaz/syntax/SemiLatticeSyntax;
       4: areturn

  public void scalaz$SemiLattice$_setter_$semiLatticeSyntax_$eq(scalaz.syntax.SemiLatticeSyntax<scalaz.Maybe<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #119                // Field semiLatticeSyntax:Lscalaz/syntax/SemiLatticeSyntax;
       5: return

  public scalaz.syntax.BandSyntax<scalaz.Maybe<A>> bandSyntax();
    Code:
       0: aload_0
       1: getfield      #127                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       4: areturn

  public void scalaz$Band$_setter_$bandSyntax_$eq(scalaz.syntax.BandSyntax<scalaz.Maybe<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #127                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.Maybe<A>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #134                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.Maybe<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #134                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.Maybe<A> append(scalaz.Maybe<A>, scala.Function0<scalaz.Maybe<A>>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #33                 // class scalaz/Maybe$Just
      10: ifeq          84
      13: aload_1
      14: checkcast     #33                 // class scalaz/Maybe$Just
      17: invokevirtual #146                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: astore_3
      21: aload_2
      22: invokeinterface #150,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      27: checkcast     #27                 // class scalaz/Maybe
      30: dup
      31: ifnonnull     36
      34: aconst_null
      35: athrow
      36: astore        4
      38: aload         4
      40: instanceof    #33                 // class scalaz/Maybe$Just
      43: ifeq          64
      46: aload         4
      48: checkcast     #33                 // class scalaz/Maybe$Just
      51: invokevirtual #146                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      54: astore        5
      56: aload_0
      57: aload_3
      58: aload         5
      60: invokestatic  #154                // Method $anonfun$append$2:(Lscalaz/MaybeInstances0$$anon$3;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Maybe;
      63: areturn
      64: aload         4
      66: instanceof    #25                 // class scalaz/Maybe$Empty
      69: ifeq          74
      72: aload_1
      73: areturn
      74: new           #156                // class scala/MatchError
      77: dup
      78: aload         4
      80: invokespecial #160                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      83: athrow
      84: aload_1
      85: instanceof    #25                 // class scalaz/Maybe$Empty
      88: ifeq          164
      91: aload_2
      92: invokeinterface #150,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      97: checkcast     #27                 // class scalaz/Maybe
     100: dup
     101: ifnonnull     106
     104: aconst_null
     105: athrow
     106: astore        6
     108: aload         6
     110: instanceof    #33                 // class scalaz/Maybe$Just
     113: ifeq          135
     116: aload         6
     118: checkcast     #33                 // class scalaz/Maybe$Just
     121: invokevirtual #146                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     124: pop
     125: aload_2
     126: invokeinterface #150,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
     131: checkcast     #27                 // class scalaz/Maybe
     134: areturn
     135: aload         6
     137: instanceof    #25                 // class scalaz/Maybe$Empty
     140: ifeq          154
     143: getstatic     #166                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     146: pop
     147: getstatic     #169                // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
     150: invokevirtual #172                // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
     153: areturn
     154: new           #156                // class scala/MatchError
     157: dup
     158: aload         6
     160: invokespecial #160                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     163: athrow
     164: new           #156                // class scala/MatchError
     167: dup
     168: aload_1
     169: invokespecial #160                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     172: athrow

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class scalaz/Maybe
       5: aload_2
       6: invokevirtual #183                // Method append:(Lscalaz/Maybe;Lscala/Function0;)Lscalaz/Maybe;
       9: areturn

  public static final java.lang.Object $anonfun$append$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.Maybe $anonfun$append$2(scalaz.MaybeInstances0$$anon$3, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #166                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: pop
       4: aload_0
       5: getfield      #191                // Field A$1:Lscalaz/SemiLattice;
       8: aload_1
       9: aload_2
      10: invokedynamic #206,  0            // InvokeDynamic #0:apply:(Ljava/lang/Object;)Lscala/Function0;
      15: invokeinterface #208,  3          // InterfaceMethod scalaz/SemiLattice.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      20: astore_3
      21: new           #33                 // class scalaz/Maybe$Just
      24: dup
      25: aload_3
      26: invokespecial #209                // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      29: areturn

  public static final scalaz.Maybe $anonfun$append$4(scalaz.Maybe);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.Maybe $anonfun$append$1(scalaz.MaybeInstances0$$anon$3, scala.Function0, scalaz.Maybe, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #150,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #27                 // class scalaz/Maybe
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: astore        4
      17: aload         4
      19: instanceof    #33                 // class scalaz/Maybe$Just
      22: ifeq          43
      25: aload         4
      27: checkcast     #33                 // class scalaz/Maybe$Just
      30: invokevirtual #146                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      33: astore        5
      35: aload_0
      36: aload_3
      37: aload         5
      39: invokestatic  #154                // Method $anonfun$append$2:(Lscalaz/MaybeInstances0$$anon$3;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Maybe;
      42: areturn
      43: aload         4
      45: instanceof    #25                 // class scalaz/Maybe$Empty
      48: ifeq          53
      51: aload_2
      52: areturn
      53: new           #156                // class scala/MatchError
      56: dup
      57: aload         4
      59: invokespecial #160                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      62: athrow

  public static final scalaz.Maybe $anonfun$append$6(scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #150,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #27                 // class scalaz/Maybe
       9: areturn

  public static final scalaz.Maybe $anonfun$append$7();
    Code:
       0: getstatic     #166                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #225                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
       6: areturn

  public static final scalaz.Maybe $anonfun$append$5(scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #150,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #27                 // class scalaz/Maybe
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: astore_1
      16: aload_1
      17: instanceof    #33                 // class scalaz/Maybe$Just
      20: ifeq          41
      23: aload_1
      24: checkcast     #33                 // class scalaz/Maybe$Just
      27: invokevirtual #146                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      30: pop
      31: aload_0
      32: invokeinterface #150,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      37: checkcast     #27                 // class scalaz/Maybe
      40: areturn
      41: aload_1
      42: instanceof    #25                 // class scalaz/Maybe$Empty
      45: ifeq          59
      48: getstatic     #166                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      51: pop
      52: getstatic     #169                // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      55: invokevirtual #172                // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      58: areturn
      59: new           #156                // class scala/MatchError
      62: dup
      63: aload_1
      64: invokespecial #160                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      67: athrow

  public scalaz.MaybeInstances0$$anon$3(scalaz.MaybeInstances0, scalaz.SemiLattice);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #191                // Field A$1:Lscalaz/SemiLattice;
       5: aload_0
       6: invokespecial #232                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #236                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      13: aload_0
      14: invokestatic  #239                // InterfaceMethod scalaz/Band.$init$:(Lscalaz/Band;)V
      17: aload_0
      18: invokestatic  #242                // InterfaceMethod scalaz/SemiLattice.$init$:(Lscalaz/SemiLattice;)V
      21: invokestatic  #247                // Method scala/runtime/Statics.releaseFence:()V
      24: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #260,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
