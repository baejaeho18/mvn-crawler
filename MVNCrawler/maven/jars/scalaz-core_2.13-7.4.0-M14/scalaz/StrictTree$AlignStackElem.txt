Compiled from "StrictTree.scala"
public class scalaz.StrictTree$AlignStackElem<A, B, C> implements scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>, scala.Product, java.io.Serializable {
  private final scala.Option<scalaz.StrictTree$AlignStackElem<A, B, C>> parent;

  private final scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>> trees;

  private final scalaz.$bslash$amp$div<scala.collection.Iterator<scalaz.StrictTree<A>>, scala.collection.Iterator<scalaz.StrictTree<B>>> iterators;

  private final scala.collection.mutable.Buffer<scalaz.StrictTree<C>> mappedSubForest;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #47                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public final boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #55                 // InterfaceMethod scala/collection/Iterator.hasDefiniteSize$:(Lscala/collection/Iterator;)Z
       4: ireturn

  public final scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> iterator();
    Code:
       0: aload_0
       1: invokestatic  #61                 // InterfaceMethod scala/collection/Iterator.iterator$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public scala.Option<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> nextOption();
    Code:
       0: aload_0
       1: invokestatic  #68                 // InterfaceMethod scala/collection/Iterator.nextOption$:(Lscala/collection/Iterator;)Lscala/Option;
       4: areturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #75                 // InterfaceMethod scala/collection/Iterator.contains$:(Lscala/collection/Iterator;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.BufferedIterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> buffered();
    Code:
       0: aload_0
       1: invokestatic  #83                 // InterfaceMethod scala/collection/Iterator.buffered$:(Lscala/collection/Iterator;)Lscala/collection/BufferedIterator;
       4: areturn

  public <B$> scala.collection.Iterator<B$> padTo(int, B$);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #91                 // InterfaceMethod scala/collection/Iterator.padTo$:(Lscala/collection/Iterator;ILjava/lang/Object;)Lscala/collection/Iterator;
       6: areturn

  public scala.Tuple2<scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>, scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>> partition(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #100                // InterfaceMethod scala/collection/Iterator.partition$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <B$> scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>.GroupedIterator<B$> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #109                // InterfaceMethod scala/collection/Iterator.grouped$:(Lscala/collection/Iterator;I)Lscala/collection/Iterator$GroupedIterator;
       5: areturn

  public <B$> scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>.GroupedIterator<B$> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #117                // InterfaceMethod scala/collection/Iterator.sliding$:(Lscala/collection/Iterator;II)Lscala/collection/Iterator$GroupedIterator;
       6: areturn

  public <B$> int sliding$default$2();
    Code:
       0: aload_0
       1: invokestatic  #124                // InterfaceMethod scala/collection/Iterator.sliding$default$2$:(Lscala/collection/Iterator;)I
       4: ireturn

  public <B$> scala.collection.Iterator<B$> scanLeft(B$, scala.Function2<B$, scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #133                // InterfaceMethod scala/collection/Iterator.scanLeft$:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public <B$> scala.collection.Iterator<B$> scanRight(B$, scala.Function2<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #139                // InterfaceMethod scala/collection/Iterator.scanRight$:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public int indexWhere(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #147                // InterfaceMethod scala/collection/Iterator.indexWhere$:(Lscala/collection/Iterator;Lscala/Function1;I)I
       6: ireturn

  public int indexWhere$default$2();
    Code:
       0: aload_0
       1: invokestatic  #151                // InterfaceMethod scala/collection/Iterator.indexWhere$default$2$:(Lscala/collection/Iterator;)I
       4: ireturn

  public <B$> int indexOf(B$);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #158                // InterfaceMethod scala/collection/Iterator.indexOf$:(Lscala/collection/Iterator;Ljava/lang/Object;)I
       5: ireturn

  public <B$> int indexOf(B$, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #163                // InterfaceMethod scala/collection/Iterator.indexOf$:(Lscala/collection/Iterator;Ljava/lang/Object;I)I
       6: ireturn

  public final int length();
    Code:
       0: aload_0
       1: invokestatic  #167                // InterfaceMethod scala/collection/Iterator.length$:(Lscala/collection/Iterator;)I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #171                // InterfaceMethod scala/collection/Iterator.isEmpty$:(Lscala/collection/Iterator;)Z
       4: ireturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> filter(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #178                // InterfaceMethod scala/collection/Iterator.filter$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> filterNot(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #182                // InterfaceMethod scala/collection/Iterator.filterNot$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> filterImpl(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #190                // InterfaceMethod scala/collection/Iterator.filterImpl$:(Lscala/collection/Iterator;Lscala/Function1;Z)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> withFilter(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #195                // InterfaceMethod scala/collection/Iterator.withFilter$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B$> scala.collection.Iterator<B$> collect(scala.PartialFunction<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #203                // InterfaceMethod scala/collection/Iterator.collect$:(Lscala/collection/Iterator;Lscala/PartialFunction;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> distinct();
    Code:
       0: aload_0
       1: invokestatic  #208                // InterfaceMethod scala/collection/Iterator.distinct$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public <B$> scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> distinctBy(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #214                // InterfaceMethod scala/collection/Iterator.distinctBy$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B$> scala.collection.Iterator<B$> map(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #219                // InterfaceMethod scala/collection/Iterator.map$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B$> scala.collection.Iterator<B$> flatMap(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, scala.collection.IterableOnce<B$>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #224                // InterfaceMethod scala/collection/Iterator.flatMap$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B$> scala.collection.Iterator<B$> flatten(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, scala.collection.IterableOnce<B$>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #229                // InterfaceMethod scala/collection/Iterator.flatten$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B$> scala.collection.Iterator<B$> concat(scala.Function0<scala.collection.IterableOnce<B$>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #237                // InterfaceMethod scala/collection/Iterator.concat$:(Lscala/collection/Iterator;Lscala/Function0;)Lscala/collection/Iterator;
       5: areturn

  public final <B$> scala.collection.Iterator<B$> $plus$plus(scala.Function0<scala.collection.IterableOnce<B$>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #242                // InterfaceMethod scala/collection/Iterator.$plus$plus$:(Lscala/collection/Iterator;Lscala/Function0;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #250                // InterfaceMethod scala/collection/Iterator.take$:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> takeWhile(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #254                // InterfaceMethod scala/collection/Iterator.takeWhile$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #258                // InterfaceMethod scala/collection/Iterator.drop$:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> dropWhile(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #262                // InterfaceMethod scala/collection/Iterator.dropWhile$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>, scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>> span(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #266                // InterfaceMethod scala/collection/Iterator.span$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #274                // InterfaceMethod scala/collection/Iterator.slice$:(Lscala/collection/Iterator;II)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> sliceIterator(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #278                // InterfaceMethod scala/collection/Iterator.sliceIterator$:(Lscala/collection/Iterator;II)Lscala/collection/Iterator;
       6: areturn

  public <B$> scala.collection.Iterator<scala.Tuple2<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>> zip(scala.collection.IterableOnce<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #286                // InterfaceMethod scala/collection/Iterator.zip$:(Lscala/collection/Iterator;Lscala/collection/IterableOnce;)Lscala/collection/Iterator;
       5: areturn

  public <A1, B$> scala.collection.Iterator<scala.Tuple2<A1, B$>> zipAll(scala.collection.IterableOnce<B$>, A1, B$);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #296                // InterfaceMethod scala/collection/Iterator.zipAll$:(Lscala/collection/Iterator;Lscala/collection/IterableOnce;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/Iterator;
       7: areturn

  public scala.collection.Iterator<scala.Tuple2<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>> zipWithIndex();
    Code:
       0: aload_0
       1: invokestatic  #301                // InterfaceMethod scala/collection/Iterator.zipWithIndex$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public <B$> boolean sameElements(scala.collection.IterableOnce<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #308                // InterfaceMethod scala/collection/Iterator.sameElements$:(Lscala/collection/Iterator;Lscala/collection/IterableOnce;)Z
       5: ireturn

  public scala.Tuple2<scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>, scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>> duplicate();
    Code:
       0: aload_0
       1: invokestatic  #315                // InterfaceMethod scala/collection/Iterator.duplicate$:(Lscala/collection/Iterator;)Lscala/Tuple2;
       4: areturn

  public <B$> scala.collection.Iterator<B$> patch(int, scala.collection.Iterator<B$>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #324                // InterfaceMethod scala/collection/Iterator.patch$:(Lscala/collection/Iterator;ILscala/collection/Iterator;I)Lscala/collection/Iterator;
       7: areturn

  public <U> scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> tapEach(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #330                // InterfaceMethod scala/collection/Iterator.tapEach$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #336                // InterfaceMethod scala/collection/Iterator.toString$:(Lscala/collection/Iterator;)Ljava/lang/String;
       4: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> seq();
    Code:
       0: aload_0
       1: invokestatic  #340                // InterfaceMethod scala/collection/Iterator.seq$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public scala.Tuple2<scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>, scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #349                // InterfaceMethod scala/collection/IterableOnceOps.splitAt$:(Lscala/collection/IterableOnceOps;I)Lscala/Tuple2;
       5: areturn

  public boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #354                // InterfaceMethod scala/collection/IterableOnceOps.isTraversableAgain$:(Lscala/collection/IterableOnceOps;)Z
       4: ireturn

  public <U> void foreach(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #361                // InterfaceMethod scala/collection/IterableOnceOps.foreach$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)V
       5: return

  public boolean forall(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #368                // InterfaceMethod scala/collection/IterableOnceOps.forall$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #372                // InterfaceMethod scala/collection/IterableOnceOps.exists$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)Z
       5: ireturn

  public int count(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #379                // InterfaceMethod scala/collection/IterableOnceOps.count$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)I
       5: ireturn

  public scala.Option<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> find(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #386                // InterfaceMethod scala/collection/IterableOnceOps.find$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)Lscala/Option;
       5: areturn

  public <B$> B$ foldLeft(B$, scala.Function2<B$, scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #393                // InterfaceMethod scala/collection/IterableOnceOps.foldLeft$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B$> B$ foldRight(B$, scala.Function2<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #398                // InterfaceMethod scala/collection/IterableOnceOps.foldRight$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public final <B$> B$ $div$colon(B$, scala.Function2<B$, scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #402                // InterfaceMethod scala/collection/IterableOnceOps.$div$colon$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public final <B$> B$ $colon$bslash(B$, scala.Function2<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #406                // InterfaceMethod scala/collection/IterableOnceOps.$colon$bslash$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #411                // InterfaceMethod scala/collection/IterableOnceOps.fold$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B$> B$ reduce(scala.Function2<B$, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #418                // InterfaceMethod scala/collection/IterableOnceOps.reduce$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B$> scala.Option<B$> reduceOption(scala.Function2<B$, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #425                // InterfaceMethod scala/collection/IterableOnceOps.reduceOption$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B$> B$ reduceLeft(scala.Function2<B$, scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #430                // InterfaceMethod scala/collection/IterableOnceOps.reduceLeft$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B$> B$ reduceRight(scala.Function2<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #435                // InterfaceMethod scala/collection/IterableOnceOps.reduceRight$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B$> scala.Option<B$> reduceLeftOption(scala.Function2<B$, scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #440                // InterfaceMethod scala/collection/IterableOnceOps.reduceLeftOption$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B$> scala.Option<B$> reduceRightOption(scala.Function2<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #445                // InterfaceMethod scala/collection/IterableOnceOps.reduceRightOption$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Lscala/Option;
       5: areturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #449                // InterfaceMethod scala/collection/IterableOnceOps.nonEmpty$:(Lscala/collection/IterableOnceOps;)Z
       4: ireturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #453                // InterfaceMethod scala/collection/IterableOnceOps.size$:(Lscala/collection/IterableOnceOps;)I
       4: ireturn

  public final <B$> void copyToBuffer(scala.collection.mutable.Buffer<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #461                // InterfaceMethod scala/collection/IterableOnceOps.copyToBuffer$:(Lscala/collection/IterableOnceOps;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B$> int copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #467                // InterfaceMethod scala/collection/IterableOnceOps.copyToArray$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;)I
       5: ireturn

  public <B$> int copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #472                // InterfaceMethod scala/collection/IterableOnceOps.copyToArray$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;I)I
       6: ireturn

  public <B$> int copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #477                // InterfaceMethod scala/collection/IterableOnceOps.copyToArray$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;II)I
       7: ireturn

  public <B$> B$ sum(scala.math.Numeric<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #485                // InterfaceMethod scala/collection/IterableOnceOps.sum$:(Lscala/collection/IterableOnceOps;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B$> B$ product(scala.math.Numeric<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #490                // InterfaceMethod scala/collection/IterableOnceOps.product$:(Lscala/collection/IterableOnceOps;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object min(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #497                // InterfaceMethod scala/collection/IterableOnceOps.min$:(Lscala/collection/IterableOnceOps;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B$> scala.Option<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> minOption(scala.math.Ordering<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #505                // InterfaceMethod scala/collection/IterableOnceOps.minOption$:(Lscala/collection/IterableOnceOps;Lscala/math/Ordering;)Lscala/Option;
       5: areturn

  public java.lang.Object max(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #509                // InterfaceMethod scala/collection/IterableOnceOps.max$:(Lscala/collection/IterableOnceOps;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B$> scala.Option<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> maxOption(scala.math.Ordering<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #513                // InterfaceMethod scala/collection/IterableOnceOps.maxOption$:(Lscala/collection/IterableOnceOps;Lscala/math/Ordering;)Lscala/Option;
       5: areturn

  public java.lang.Object maxBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #519                // InterfaceMethod scala/collection/IterableOnceOps.maxBy$:(Lscala/collection/IterableOnceOps;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B$> scala.Option<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> maxByOption(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>, scala.math.Ordering<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #526                // InterfaceMethod scala/collection/IterableOnceOps.maxByOption$:(Lscala/collection/IterableOnceOps;Lscala/Function1;Lscala/math/Ordering;)Lscala/Option;
       6: areturn

  public java.lang.Object minBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #530                // InterfaceMethod scala/collection/IterableOnceOps.minBy$:(Lscala/collection/IterableOnceOps;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B$> scala.Option<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> minByOption(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>, scala.math.Ordering<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #534                // InterfaceMethod scala/collection/IterableOnceOps.minByOption$:(Lscala/collection/IterableOnceOps;Lscala/Function1;Lscala/math/Ordering;)Lscala/Option;
       6: areturn

  public <B$> scala.Option<B$> collectFirst(scala.PartialFunction<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #541                // InterfaceMethod scala/collection/IterableOnceOps.collectFirst$:(Lscala/collection/IterableOnceOps;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B$> B$ aggregate(scala.Function0<B$>, scala.Function2<B$, scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>, scala.Function2<B$, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #550                // InterfaceMethod scala/collection/IterableOnceOps.aggregate$:(Lscala/collection/IterableOnceOps;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B$> boolean corresponds(scala.collection.IterableOnce<B$>, scala.Function2<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #557                // InterfaceMethod scala/collection/IterableOnceOps.corresponds$:(Lscala/collection/IterableOnceOps;Lscala/collection/IterableOnce;Lscala/Function2;)Z
       6: ireturn

  public final java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #565                // InterfaceMethod scala/collection/IterableOnceOps.mkString$:(Lscala/collection/IterableOnceOps;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public final java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #570                // InterfaceMethod scala/collection/IterableOnceOps.mkString$:(Lscala/collection/IterableOnceOps;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public final java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #573                // InterfaceMethod scala/collection/IterableOnceOps.mkString$:(Lscala/collection/IterableOnceOps;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #580                // InterfaceMethod scala/collection/IterableOnceOps.addString$:(Lscala/collection/IterableOnceOps;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public final scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #585                // InterfaceMethod scala/collection/IterableOnceOps.addString$:(Lscala/collection/IterableOnceOps;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public final scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #589                // InterfaceMethod scala/collection/IterableOnceOps.addString$:(Lscala/collection/IterableOnceOps;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public <C1> C1 to(scala.collection.Factory<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, C1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #597                // InterfaceMethod scala/collection/IterableOnceOps.to$:(Lscala/collection/IterableOnceOps;Lscala/collection/Factory;)Ljava/lang/Object;
       5: areturn

  public final scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #603                // InterfaceMethod scala/collection/IterableOnceOps.toIterator$:(Lscala/collection/IterableOnceOps;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.immutable.List<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toList();
    Code:
       0: aload_0
       1: invokestatic  #610                // InterfaceMethod scala/collection/IterableOnceOps.toList$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.Vector<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toVector();
    Code:
       0: aload_0
       1: invokestatic  #617                // InterfaceMethod scala/collection/IterableOnceOps.toVector$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/Vector;
       4: areturn

  public <K, V> scala.collection.immutable.Map<K, V> toMap(scala.$less$colon$less<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #624                // InterfaceMethod scala/collection/IterableOnceOps.toMap$:(Lscala/collection/IterableOnceOps;Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public <B$> scala.collection.immutable.Set<B$> toSet();
    Code:
       0: aload_0
       1: invokestatic  #632                // InterfaceMethod scala/collection/IterableOnceOps.toSet$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Seq<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #639                // InterfaceMethod scala/collection/IterableOnceOps.toSeq$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/Seq;
       4: areturn

  public scala.collection.immutable.IndexedSeq<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #646                // InterfaceMethod scala/collection/IterableOnceOps.toIndexedSeq$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public final scala.collection.immutable.Stream<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toStream();
    Code:
       0: aload_0
       1: invokestatic  #653                // InterfaceMethod scala/collection/IterableOnceOps.toStream$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/Stream;
       4: areturn

  public final <B$> scala.collection.mutable.Buffer<B$> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #660                // InterfaceMethod scala/collection/IterableOnceOps.toBuffer$:(Lscala/collection/IterableOnceOps;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B$> java.lang.Object toArray(scala.reflect.ClassTag<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #668                // InterfaceMethod scala/collection/IterableOnceOps.toArray$:(Lscala/collection/IterableOnceOps;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterable<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> reversed();
    Code:
       0: aload_0
       1: invokestatic  #676                // InterfaceMethod scala/collection/IterableOnceOps.reversed$:(Lscala/collection/IterableOnceOps;)Lscala/collection/Iterable;
       4: areturn

  public <S extends scala.collection.Stepper<?>> S stepper(scala.collection.StepperShape<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #686                // InterfaceMethod scala/collection/IterableOnce.stepper$:(Lscala/collection/IterableOnce;Lscala/collection/StepperShape;)Lscala/collection/Stepper;
       5: areturn

  public int knownSize();
    Code:
       0: aload_0
       1: invokestatic  #692                // InterfaceMethod scala/collection/IterableOnce.knownSize$:(Lscala/collection/IterableOnce;)I
       4: ireturn

  public scala.Option<scalaz.StrictTree$AlignStackElem<A, B, C>> parent();
    Code:
       0: aload_0
       1: getfield      #695                // Field parent:Lscala/Option;
       4: areturn

  public scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>> trees();
    Code:
       0: aload_0
       1: getfield      #699                // Field trees:Lscalaz/$bslash$amp$div;
       4: areturn

  public scala.collection.mutable.Buffer<scalaz.StrictTree<C>> mappedSubForest();
    Code:
       0: aload_0
       1: getfield      #702                // Field mappedSubForest:Lscala/collection/mutable/Buffer;
       4: areturn

  public scalaz.$bslash$amp$div<java.lang.Object, java.lang.Object> whichHasNext();
    Code:
       0: aload_0
       1: getfield      #706                // Field iterators:Lscalaz/$bslash$amp$div;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_1
      11: aload_1
      12: instanceof    #25                 // class scalaz/$bslash$amp$div$This
      15: ifeq          46
      18: aload_1
      19: checkcast     #25                 // class scalaz/$bslash$amp$div$This
      22: invokevirtual #710                // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
      25: astore_2
      26: new           #25                 // class scalaz/$bslash$amp$div$This
      29: dup
      30: aload_2
      31: checkcast     #7                  // class scala/collection/Iterator
      34: invokeinterface #713,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      39: invokestatic  #719                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      42: invokespecial #723                // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
      45: areturn
      46: aload_1
      47: instanceof    #22                 // class scalaz/$bslash$amp$div$That
      50: ifeq          81
      53: aload_1
      54: checkcast     #22                 // class scalaz/$bslash$amp$div$That
      57: invokevirtual #726                // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
      60: astore_3
      61: new           #22                 // class scalaz/$bslash$amp$div$That
      64: dup
      65: aload_3
      66: checkcast     #7                  // class scala/collection/Iterator
      69: invokeinterface #713,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      74: invokestatic  #719                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      77: invokespecial #727                // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
      80: areturn
      81: aload_1
      82: instanceof    #17                 // class scalaz/$bslash$amp$div$Both
      85: ifeq          142
      88: aload_1
      89: checkcast     #17                 // class scalaz/$bslash$amp$div$Both
      92: astore        4
      94: aload         4
      96: invokevirtual #728                // Method scalaz/$bslash$amp$div$Both.aa:()Ljava/lang/Object;
      99: astore        5
     101: aload         4
     103: invokevirtual #729                // Method scalaz/$bslash$amp$div$Both.bb:()Ljava/lang/Object;
     106: astore        6
     108: new           #17                 // class scalaz/$bslash$amp$div$Both
     111: dup
     112: aload         5
     114: checkcast     #7                  // class scala/collection/Iterator
     117: invokeinterface #713,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
     122: invokestatic  #719                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     125: aload         6
     127: checkcast     #7                  // class scala/collection/Iterator
     130: invokeinterface #713,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
     135: invokestatic  #719                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     138: invokespecial #732                // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     141: areturn
     142: new           #734                // class scala/MatchError
     145: dup
     146: aload_1
     147: invokespecial #735                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     150: athrow

  public boolean hasNext();
    Code:
       0: aload_0
       1: invokevirtual #740                // Method whichHasNext:()Lscalaz/$bslash$amp$div;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_1
      11: aload_1
      12: instanceof    #25                 // class scalaz/$bslash$amp$div$This
      15: ifeq          45
      18: aload_1
      19: checkcast     #25                 // class scalaz/$bslash$amp$div$This
      22: invokevirtual #710                // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
      25: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      28: istore        5
      30: getstatic     #749                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      33: iload         5
      35: invokestatic  #719                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      38: invokevirtual #753                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
      41: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      44: ireturn
      45: aload_1
      46: instanceof    #22                 // class scalaz/$bslash$amp$div$That
      49: ifeq          79
      52: aload_1
      53: checkcast     #22                 // class scalaz/$bslash$amp$div$That
      56: invokevirtual #726                // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
      59: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      62: istore        6
      64: getstatic     #749                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      67: iload         6
      69: invokestatic  #719                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      72: invokevirtual #753                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
      75: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      78: ireturn
      79: aload_1
      80: instanceof    #17                 // class scalaz/$bslash$amp$div$Both
      83: ifeq          115
      86: aload_1
      87: checkcast     #17                 // class scalaz/$bslash$amp$div$Both
      90: astore_2
      91: aload_2
      92: invokevirtual #728                // Method scalaz/$bslash$amp$div$Both.aa:()Ljava/lang/Object;
      95: astore_3
      96: aload_2
      97: invokevirtual #729                // Method scalaz/$bslash$amp$div$Both.bb:()Ljava/lang/Object;
     100: astore        4
     102: aload_3
     103: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     106: aload         4
     108: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     111: invokestatic  #757                // Method $anonfun$hasNext$3:(ZZ)Z
     114: ireturn
     115: new           #734                // class scala/MatchError
     118: dup
     119: aload_1
     120: invokespecial #735                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     123: athrow

  public scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>> next();
    Code:
       0: aload_0
       1: invokevirtual #740                // Method whichHasNext:()Lscalaz/$bslash$amp$div;
       4: astore_1
       5: aload_1
       6: instanceof    #17                 // class scalaz/$bslash$amp$div$Both
       9: ifeq          237
      12: aload_1
      13: checkcast     #17                 // class scalaz/$bslash$amp$div$Both
      16: astore_2
      17: getstatic     #768                // Field scalaz/$bslash$amp$div$.MODULE$:Lscalaz/$bslash$amp$div$;
      20: aload_2
      21: invokevirtual #772                // Method scalaz/$bslash$amp$div$.unapply:(Lscalaz/$bslash$amp$div$Both;)Lscala/Some;
      24: astore_3
      25: aload_3
      26: invokevirtual #776                // Method scala/Some.isEmpty:()Z
      29: ifne          237
      32: aload_3
      33: invokevirtual #779                // Method scala/Some.get:()Ljava/lang/Object;
      36: checkcast     #781                // class scala/Tuple2
      39: invokevirtual #784                // Method scala/Tuple2._1:()Ljava/lang/Object;
      42: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      45: istore        4
      47: aload_3
      48: invokevirtual #779                // Method scala/Some.get:()Ljava/lang/Object;
      51: checkcast     #781                // class scala/Tuple2
      54: invokevirtual #787                // Method scala/Tuple2._2:()Ljava/lang/Object;
      57: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      60: istore        5
      62: iconst_1
      63: iload         4
      65: if_icmpne     237
      68: iconst_1
      69: iload         5
      71: if_icmpne     237
      74: aload_0
      75: getfield      #706                // Field iterators:Lscalaz/$bslash$amp$div;
      78: dup
      79: ifnonnull     84
      82: aconst_null
      83: athrow
      84: astore        16
      86: aload         16
      88: instanceof    #25                 // class scalaz/$bslash$amp$div$This
      91: ifeq          125
      94: aload         16
      96: checkcast     #25                 // class scalaz/$bslash$amp$div$This
      99: invokevirtual #710                // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
     102: astore        17
     104: new           #25                 // class scalaz/$bslash$amp$div$This
     107: dup
     108: aload         17
     110: checkcast     #7                  // class scala/collection/Iterator
     113: invokeinterface #789,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
     118: checkcast     #28                 // class scalaz/StrictTree
     121: invokespecial #723                // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
     124: areturn
     125: aload         16
     127: instanceof    #22                 // class scalaz/$bslash$amp$div$That
     130: ifeq          164
     133: aload         16
     135: checkcast     #22                 // class scalaz/$bslash$amp$div$That
     138: invokevirtual #726                // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
     141: astore        18
     143: new           #22                 // class scalaz/$bslash$amp$div$That
     146: dup
     147: aload         18
     149: checkcast     #7                  // class scala/collection/Iterator
     152: invokeinterface #789,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
     157: checkcast     #28                 // class scalaz/StrictTree
     160: invokespecial #727                // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
     163: areturn
     164: aload         16
     166: instanceof    #17                 // class scalaz/$bslash$amp$div$Both
     169: ifeq          227
     172: aload         16
     174: checkcast     #17                 // class scalaz/$bslash$amp$div$Both
     177: astore        19
     179: aload         19
     181: invokevirtual #728                // Method scalaz/$bslash$amp$div$Both.aa:()Ljava/lang/Object;
     184: astore        20
     186: aload         19
     188: invokevirtual #729                // Method scalaz/$bslash$amp$div$Both.bb:()Ljava/lang/Object;
     191: astore        21
     193: new           #17                 // class scalaz/$bslash$amp$div$Both
     196: dup
     197: aload         20
     199: checkcast     #7                  // class scala/collection/Iterator
     202: invokeinterface #789,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
     207: checkcast     #28                 // class scalaz/StrictTree
     210: aload         21
     212: checkcast     #7                  // class scala/collection/Iterator
     215: invokeinterface #789,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
     220: checkcast     #28                 // class scalaz/StrictTree
     223: invokespecial #732                // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     226: areturn
     227: new           #734                // class scala/MatchError
     230: dup
     231: aload         16
     233: invokespecial #735                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     236: athrow
     237: aload_1
     238: instanceof    #17                 // class scalaz/$bslash$amp$div$Both
     241: ifeq          316
     244: aload_1
     245: checkcast     #17                 // class scalaz/$bslash$amp$div$Both
     248: astore        6
     250: getstatic     #768                // Field scalaz/$bslash$amp$div$.MODULE$:Lscalaz/$bslash$amp$div$;
     253: aload         6
     255: invokevirtual #772                // Method scalaz/$bslash$amp$div$.unapply:(Lscalaz/$bslash$amp$div$Both;)Lscala/Some;
     258: astore        7
     260: aload         7
     262: invokevirtual #776                // Method scala/Some.isEmpty:()Z
     265: ifne          316
     268: aload         7
     270: invokevirtual #779                // Method scala/Some.get:()Ljava/lang/Object;
     273: checkcast     #781                // class scala/Tuple2
     276: invokevirtual #784                // Method scala/Tuple2._1:()Ljava/lang/Object;
     279: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     282: istore        8
     284: aload         7
     286: invokevirtual #779                // Method scala/Some.get:()Ljava/lang/Object;
     289: checkcast     #781                // class scala/Tuple2
     292: invokevirtual #787                // Method scala/Tuple2._2:()Ljava/lang/Object;
     295: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     298: istore        9
     300: iconst_1
     301: iload         8
     303: if_icmpne     316
     306: iconst_0
     307: iload         9
     309: if_icmpne     316
     312: iconst_1
     313: goto          346
     316: aload_1
     317: instanceof    #25                 // class scalaz/$bslash$amp$div$This
     320: ifeq          345
     323: aload_1
     324: checkcast     #25                 // class scalaz/$bslash$amp$div$This
     327: invokevirtual #710                // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
     330: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     333: istore        10
     335: iconst_1
     336: iload         10
     338: if_icmpne     345
     341: iconst_1
     342: goto          346
     345: iconst_0
     346: ifeq          375
     349: new           #25                 // class scalaz/$bslash$amp$div$This
     352: dup
     353: aload_0
     354: getfield      #706                // Field iterators:Lscalaz/$bslash$amp$div;
     357: invokevirtual #792                // Method scalaz/$bslash$amp$div.onlyThis:()Lscala/Option;
     360: invokevirtual #795                // Method scala/Option.get:()Ljava/lang/Object;
     363: checkcast     #7                  // class scala/collection/Iterator
     366: invokeinterface #789,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
     371: invokespecial #723                // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
     374: areturn
     375: aload_1
     376: instanceof    #17                 // class scalaz/$bslash$amp$div$Both
     379: ifeq          454
     382: aload_1
     383: checkcast     #17                 // class scalaz/$bslash$amp$div$Both
     386: astore        11
     388: getstatic     #768                // Field scalaz/$bslash$amp$div$.MODULE$:Lscalaz/$bslash$amp$div$;
     391: aload         11
     393: invokevirtual #772                // Method scalaz/$bslash$amp$div$.unapply:(Lscalaz/$bslash$amp$div$Both;)Lscala/Some;
     396: astore        12
     398: aload         12
     400: invokevirtual #776                // Method scala/Some.isEmpty:()Z
     403: ifne          454
     406: aload         12
     408: invokevirtual #779                // Method scala/Some.get:()Ljava/lang/Object;
     411: checkcast     #781                // class scala/Tuple2
     414: invokevirtual #784                // Method scala/Tuple2._1:()Ljava/lang/Object;
     417: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     420: istore        13
     422: aload         12
     424: invokevirtual #779                // Method scala/Some.get:()Ljava/lang/Object;
     427: checkcast     #781                // class scala/Tuple2
     430: invokevirtual #787                // Method scala/Tuple2._2:()Ljava/lang/Object;
     433: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     436: istore        14
     438: iconst_0
     439: iload         13
     441: if_icmpne     454
     444: iconst_1
     445: iload         14
     447: if_icmpne     454
     450: iconst_1
     451: goto          484
     454: aload_1
     455: instanceof    #22                 // class scalaz/$bslash$amp$div$That
     458: ifeq          483
     461: aload_1
     462: checkcast     #22                 // class scalaz/$bslash$amp$div$That
     465: invokevirtual #726                // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
     468: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     471: istore        15
     473: iconst_1
     474: iload         15
     476: if_icmpne     483
     479: iconst_1
     480: goto          484
     483: iconst_0
     484: ifeq          513
     487: new           #22                 // class scalaz/$bslash$amp$div$That
     490: dup
     491: aload_0
     492: getfield      #706                // Field iterators:Lscalaz/$bslash$amp$div;
     495: invokevirtual #798                // Method scalaz/$bslash$amp$div.onlyThat:()Lscala/Option;
     498: invokevirtual #795                // Method scala/Option.get:()Ljava/lang/Object;
     501: checkcast     #7                  // class scala/collection/Iterator
     504: invokeinterface #789,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
     509: invokespecial #727                // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
     512: areturn
     513: new           #800                // class java/util/NoSuchElementException
     516: dup
     517: ldc_w         #802                // String reached iterator end
     520: invokespecial #805                // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
     523: athrow

  public <A, B, C> scalaz.StrictTree$AlignStackElem<A, B, C> copy(scala.Option<scalaz.StrictTree$AlignStackElem<A, B, C>>, scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>);
    Code:
       0: new           #2                  // class scalaz/StrictTree$AlignStackElem
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #811                // Method "<init>":(Lscala/Option;Lscalaz/$bslash$amp$div;)V
       9: areturn

  public <A, B, C> scala.Option<scalaz.StrictTree$AlignStackElem<A, B, C>> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #815                // Method parent:()Lscala/Option;
       4: areturn

  public <A, B, C> scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #819                // Method trees:()Lscalaz/$bslash$amp$div;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #821                // String AlignStackElem
       3: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 1
                     0: 24
                     1: 29
               default: 34
          }
      24: aload_0
      25: invokevirtual #815                // Method parent:()Lscala/Option;
      28: areturn
      29: aload_0
      30: invokevirtual #819                // Method trees:()Lscalaz/$bslash$amp$div;
      33: areturn
      34: iload_1
      35: invokestatic  #830                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      38: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #837                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #840                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/StrictTree$AlignStackElem
       4: ireturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 1
                     0: 24
                     1: 28
               default: 32
          }
      24: ldc_w         #844                // String parent
      27: areturn
      28: ldc_w         #845                // String trees
      31: areturn
      32: iload_1
      33: invokestatic  #830                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      36: checkcast     #847                // class java/lang/String
      39: areturn

  public int hashCode();
    Code:
       0: getstatic     #837                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #852                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     92
       5: aload_1
       6: instanceof    #2                  // class scalaz/StrictTree$AlignStackElem
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ifeq          94
      20: aload_1
      21: checkcast     #2                  // class scalaz/StrictTree$AlignStackElem
      24: astore_2
      25: aload_0
      26: invokevirtual #815                // Method parent:()Lscala/Option;
      29: aload_2
      30: invokevirtual #815                // Method parent:()Lscala/Option;
      33: astore_3
      34: dup
      35: ifnonnull     46
      38: pop
      39: aload_3
      40: ifnull        53
      43: goto          94
      46: aload_3
      47: invokevirtual #855                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifeq          94
      53: aload_0
      54: invokevirtual #819                // Method trees:()Lscalaz/$bslash$amp$div;
      57: aload_2
      58: invokevirtual #819                // Method trees:()Lscalaz/$bslash$amp$div;
      61: astore        4
      63: dup
      64: ifnonnull     76
      67: pop
      68: aload         4
      70: ifnull        84
      73: goto          94
      76: aload         4
      78: invokevirtual #855                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      81: ifeq          94
      84: aload_2
      85: aload_0
      86: invokevirtual #857                // Method canEqual:(Ljava/lang/Object;)Z
      89: ifeq          94
      92: iconst_1
      93: ireturn
      94: iconst_0
      95: ireturn

  public java.lang.Object tapEach(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #860                // Method tapEach:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object zipWithIndex();
    Code:
       0: aload_0
       1: invokevirtual #862                // Method zipWithIndex:()Lscala/collection/Iterator;
       4: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #865                // Method slice:(II)Lscala/collection/Iterator;
       6: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #867                // Method dropWhile:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #869                // Method drop:(I)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #871                // Method takeWhile:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #873                // Method take:(I)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #876                // Method flatten:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object flatMap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #878                // Method flatMap:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object map(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #880                // Method map:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object collect(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #883                // Method collect:(Lscala/PartialFunction;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #886                // Method filterNot:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #888                // Method filter:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object scanLeft(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #890                // Method scanLeft:(Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #892                // Method next:()Lscalaz/$bslash$amp$div;
       4: areturn

  public static final scala.collection.Iterator $anonfun$iterators$1(scalaz.StrictTree);
    Code:
       0: aload_0
       1: invokevirtual #898                // Method scalaz/StrictTree.subForest:()Lscala/collection/immutable/Vector;
       4: invokevirtual #902                // Method scala/collection/immutable/Vector.iterator:()Lscala/collection/Iterator;
       7: areturn

  public static final scala.collection.Iterator $anonfun$iterators$2(scalaz.StrictTree);
    Code:
       0: aload_0
       1: invokevirtual #898                // Method scalaz/StrictTree.subForest:()Lscala/collection/immutable/Vector;
       4: invokevirtual #902                // Method scala/collection/immutable/Vector.iterator:()Lscala/collection/Iterator;
       7: areturn

  public static final boolean $anonfun$whichHasNext$1(scala.collection.Iterator);
    Code:
       0: aload_0
       1: invokeinterface #713,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
       6: ireturn

  public static final boolean $anonfun$whichHasNext$2(scala.collection.Iterator);
    Code:
       0: aload_0
       1: invokeinterface #713,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
       6: ireturn

  public static final boolean $anonfun$hasNext$1(boolean);
    Code:
       0: getstatic     #749                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: iload_0
       4: invokestatic  #719                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: invokevirtual #753                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ireturn

  public static final boolean $anonfun$hasNext$2(boolean);
    Code:
       0: getstatic     #749                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: iload_0
       4: invokestatic  #719                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: invokevirtual #753                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ireturn

  public static final boolean $anonfun$hasNext$3(boolean, boolean);
    Code:
       0: iload_0
       1: ifne          8
       4: iload_1
       5: ifeq          10
       8: iconst_1
       9: ireturn
      10: iconst_0
      11: ireturn

  public static final scalaz.StrictTree $anonfun$next$1(scala.collection.Iterator);
    Code:
       0: aload_0
       1: invokeinterface #789,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
       6: checkcast     #28                 // class scalaz/StrictTree
       9: areturn

  public static final scalaz.StrictTree $anonfun$next$2(scala.collection.Iterator);
    Code:
       0: aload_0
       1: invokeinterface #789,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
       6: checkcast     #28                 // class scalaz/StrictTree
       9: areturn

  public scalaz.StrictTree$AlignStackElem(scala.Option<scalaz.StrictTree$AlignStackElem<A, B, C>>, scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #695                // Field parent:Lscala/Option;
       5: aload_0
       6: aload_2
       7: putfield      #699                // Field trees:Lscalaz/$bslash$amp$div;
      10: aload_0
      11: invokespecial #924                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #928                // InterfaceMethod scala/collection/IterableOnce.$init$:(Lscala/collection/IterableOnce;)V
      18: aload_0
      19: invokestatic  #931                // InterfaceMethod scala/collection/IterableOnceOps.$init$:(Lscala/collection/IterableOnceOps;)V
      22: aload_0
      23: invokestatic  #934                // InterfaceMethod scala/collection/Iterator.$init$:(Lscala/collection/Iterator;)V
      26: aload_0
      27: invokestatic  #937                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      30: aload_0
      31: aload_2
      32: ifnonnull     37
      35: aconst_null
      36: athrow
      37: aload_2
      38: instanceof    #25                 // class scalaz/$bslash$amp$div$This
      41: ifeq          69
      44: aload_2
      45: checkcast     #25                 // class scalaz/$bslash$amp$div$This
      48: invokevirtual #710                // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
      51: astore_3
      52: new           #25                 // class scalaz/$bslash$amp$div$This
      55: dup
      56: aload_3
      57: checkcast     #28                 // class scalaz/StrictTree
      60: invokestatic  #939                // Method $anonfun$iterators$1:(Lscalaz/StrictTree;)Lscala/collection/Iterator;
      63: invokespecial #723                // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
      66: goto          165
      69: aload_2
      70: instanceof    #22                 // class scalaz/$bslash$amp$div$That
      73: ifeq          103
      76: aload_2
      77: checkcast     #22                 // class scalaz/$bslash$amp$div$That
      80: invokevirtual #726                // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
      83: astore        4
      85: new           #22                 // class scalaz/$bslash$amp$div$That
      88: dup
      89: aload         4
      91: checkcast     #28                 // class scalaz/StrictTree
      94: invokestatic  #941                // Method $anonfun$iterators$2:(Lscalaz/StrictTree;)Lscala/collection/Iterator;
      97: invokespecial #727                // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
     100: goto          165
     103: aload_2
     104: instanceof    #17                 // class scalaz/$bslash$amp$div$Both
     107: ifeq          156
     110: aload_2
     111: checkcast     #17                 // class scalaz/$bslash$amp$div$Both
     114: astore        5
     116: aload         5
     118: invokevirtual #728                // Method scalaz/$bslash$amp$div$Both.aa:()Ljava/lang/Object;
     121: astore        6
     123: aload         5
     125: invokevirtual #729                // Method scalaz/$bslash$amp$div$Both.bb:()Ljava/lang/Object;
     128: astore        7
     130: new           #17                 // class scalaz/$bslash$amp$div$Both
     133: dup
     134: aload         6
     136: checkcast     #28                 // class scalaz/StrictTree
     139: invokestatic  #939                // Method $anonfun$iterators$1:(Lscalaz/StrictTree;)Lscala/collection/Iterator;
     142: aload         7
     144: checkcast     #28                 // class scalaz/StrictTree
     147: invokestatic  #941                // Method $anonfun$iterators$2:(Lscalaz/StrictTree;)Lscala/collection/Iterator;
     150: invokespecial #732                // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     153: goto          165
     156: new           #734                // class scala/MatchError
     159: dup
     160: aload_2
     161: invokespecial #735                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     164: athrow
     165: aconst_null
     166: astore_3
     167: aconst_null
     168: astore        4
     170: aconst_null
     171: astore        5
     173: aconst_null
     174: astore        6
     176: aconst_null
     177: astore        7
     179: putfield      #706                // Field iterators:Lscalaz/$bslash$amp$div;
     182: aload_0
     183: getstatic     #946                // Field scala/collection/mutable/Buffer$.MODULE$:Lscala/collection/mutable/Buffer$;
     186: invokevirtual #950                // Method scala/collection/mutable/Buffer$.empty:()Lscala/collection/SeqOps;
     189: checkcast     #952                // class scala/collection/mutable/Buffer
     192: putfield      #702                // Field mappedSubForest:Lscala/collection/mutable/Buffer;
     195: return

  public static final java.lang.Object $anonfun$whichHasNext$1$adapted(scala.collection.Iterator);
    Code:
       0: aload_0
       1: invokestatic  #956                // Method $anonfun$whichHasNext$1:(Lscala/collection/Iterator;)Z
       4: invokestatic  #719                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$whichHasNext$2$adapted(scala.collection.Iterator);
    Code:
       0: aload_0
       1: invokestatic  #959                // Method $anonfun$whichHasNext$2:(Lscala/collection/Iterator;)Z
       4: invokestatic  #719                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$hasNext$1$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #962                // Method $anonfun$hasNext$1:(Z)Z
       7: invokestatic  #719                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  public static final java.lang.Object $anonfun$hasNext$2$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #965                // Method $anonfun$hasNext$2:(Z)Z
       7: invokestatic  #719                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  public static final java.lang.Object $anonfun$hasNext$3$adapted(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: aload_1
       5: invokestatic  #743                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       8: invokestatic  #757                // Method $anonfun$hasNext$3:(ZZ)Z
      11: invokestatic  #719                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      14: areturn
}
