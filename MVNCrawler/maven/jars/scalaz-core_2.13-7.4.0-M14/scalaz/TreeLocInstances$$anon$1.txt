Compiled from "TreeLoc.scala"
public final class scalaz.TreeLocInstances$$anon$1 implements scalaz.Comonad<scalaz.TreeLoc>, scalaz.Traverse1<scalaz.TreeLoc> {
  public final scalaz.Traverse<scalaz.EphemeralStream> scalaz$TreeLocInstances$$anon$$ForestT;

  public final scalaz.Traverse1<?> scalaz$TreeLocInstances$$anon$$ForestT1;

  private final scalaz.Traverse1<scala.Tuple3> ParentT;

  private final scalaz.Traverse<scalaz.EphemeralStream> ParentsT;

  private final scalaz.Traverse1<?> ParentsT1;

  private scalaz.syntax.Traverse1Syntax<scalaz.TreeLoc> traverse1Syntax;

  private scalaz.syntax.Foldable1Syntax<scalaz.TreeLoc> foldable1Syntax;

  private scalaz.syntax.TraverseSyntax<scalaz.TreeLoc> traverseSyntax;

  private scalaz.syntax.FoldableSyntax<scalaz.TreeLoc> foldableSyntax;

  private scalaz.syntax.ComonadSyntax<scalaz.TreeLoc> comonadSyntax;

  private scalaz.syntax.CobindSyntax<scalaz.TreeLoc> cobindSyntax;

  private scalaz.syntax.FunctorSyntax<scalaz.TreeLoc> functorSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<scalaz.TreeLoc> invariantFunctorSyntax;

  public <G> scalaz.Traverse1<?> product(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // InterfaceMethod scalaz/Traverse1.product$:(Lscalaz/Traverse1;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #142                // InterfaceMethod scalaz/Traverse1.product0$:(Lscalaz/Traverse1;Lscalaz/Traverse;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse1<?> compose(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #147                // InterfaceMethod scalaz/Traverse1.compose$:(Lscalaz/Traverse1;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #156                // InterfaceMethod scalaz/Traverse1.traverseImpl$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #166                // InterfaceMethod scalaz/Traverse1.traverse1$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object traverse1M(java.lang.Object, scala.Function1, scalaz.Apply, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #175                // InterfaceMethod scalaz/Traverse1.traverse1M$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object traverse1U(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #182                // InterfaceMethod scalaz/Traverse1.traverse1U$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #191                // InterfaceMethod scalaz/Traverse1.sequence1$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Apply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequence1M(java.lang.Object, scalaz.Apply, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #198                // InterfaceMethod scalaz/Traverse1.sequence1M$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Apply;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object sequence1U(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #204                // InterfaceMethod scalaz/Traverse1.sequence1U$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public scalaz.Traverse1<scalaz.TreeLoc>.Traverse1Law traverse1Law();
    Code:
       0: aload_0
       1: invokestatic  #211                // InterfaceMethod scalaz/Traverse1.traverse1Law$:(Lscalaz/Traverse1;)Lscalaz/Traverse1$Traverse1Law;
       4: areturn

  public <G> scalaz.Foldable1<?> product(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // InterfaceMethod scalaz/Foldable1.product$:(Lscalaz/Foldable1;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public <G> scalaz.Foldable1<?> compose(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #219                // InterfaceMethod scalaz/Foldable1.compose$:(Lscalaz/Foldable1;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #225                // InterfaceMethod scalaz/Foldable1.foldMap1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public java.lang.Object foldRight1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #232                // InterfaceMethod scalaz/Foldable1.foldRight1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #240                // InterfaceMethod scalaz/Foldable1.foldRight$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object foldLeft1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #245                // InterfaceMethod scalaz/Foldable1.foldLeft1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object foldr1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #251                // InterfaceMethod scalaz/Foldable1.foldr1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #257                // InterfaceMethod scalaz/Foldable1.foldMapRight1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #263                // InterfaceMethod scalaz/Foldable1.foldr1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #267                // InterfaceMethod scalaz/Foldable1.foldl1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #271                // InterfaceMethod scalaz/Foldable1.foldMapLeft1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #275                // InterfaceMethod scalaz/Foldable1.foldl1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public java.lang.Object fold1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #283                // InterfaceMethod scalaz/Foldable1.fold1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object foldLeftM1(java.lang.Object, scala.Function1, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #289                // InterfaceMethod scalaz/Foldable1.foldLeftM1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldRightM1(java.lang.Object, scala.Function1, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #294                // InterfaceMethod scalaz/Foldable1.foldRightM1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM1(java.lang.Object, scala.Function1, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #300                // InterfaceMethod scalaz/Foldable1.foldlM1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldrM1(java.lang.Object, scala.Function1, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #304                // InterfaceMethod scalaz/Foldable1.foldrM1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object maximum1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #311                // InterfaceMethod scalaz/Foldable1.maximum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object maximumOf1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #319                // InterfaceMethod scalaz/Foldable1.maximumOf1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object maximumBy1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #324                // InterfaceMethod scalaz/Foldable1.maximumBy1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object minimum1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #329                // InterfaceMethod scalaz/Foldable1.minimum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minimumOf1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #334                // InterfaceMethod scalaz/Foldable1.minimumOf1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object minimumBy1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #339                // InterfaceMethod scalaz/Foldable1.minimumBy1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #346                // InterfaceMethod scalaz/Foldable1.maximum$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #353                // InterfaceMethod scalaz/Foldable1.maximumOf$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #358                // InterfaceMethod scalaz/Foldable1.maximumBy$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #363                // InterfaceMethod scalaz/Foldable1.minimum$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #368                // InterfaceMethod scalaz/Foldable1.minimumOf$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #373                // InterfaceMethod scalaz/Foldable1.minimumBy$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scalaz.NonEmptyList distinct1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #380                // InterfaceMethod scalaz/Foldable1.distinct1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.NonEmptyList distinctE1(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #386                // InterfaceMethod scalaz/Foldable1.distinctE1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/NonEmptyList;
       6: areturn

  public java.lang.Object sumr1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #391                // InterfaceMethod scalaz/Foldable1.sumr1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object suml1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #395                // InterfaceMethod scalaz/Foldable1.suml1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object psum1(java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #401                // InterfaceMethod scalaz/Foldable1.psum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object psumMap1(java.lang.Object, scala.Function1, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #408                // InterfaceMethod scalaz/Foldable1.psumMap1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Plus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object msuml1(java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #412                // InterfaceMethod scalaz/Foldable1.msuml1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object intercalate1(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #418                // InterfaceMethod scalaz/Foldable1.intercalate1$:(Lscalaz/Foldable1;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #425                // InterfaceMethod scalaz/Foldable1.intercalate$:(Lscalaz/Foldable1;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object traverse1_(java.lang.Object, scala.Function1, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #433                // InterfaceMethod scalaz/Foldable1.traverse1_$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object sequence1_(java.lang.Object, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #439                // InterfaceMethod scalaz/Foldable1.sequence1_$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public final boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #445                // InterfaceMethod scalaz/Foldable1.empty$:(Lscalaz/Foldable1;Ljava/lang/Object;)Z
       5: ireturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #450                // InterfaceMethod scalaz/Foldable1.product0$:(Lscalaz/Foldable1;Lscalaz/Foldable;)Lscalaz/Foldable1;
       5: areturn

  public scalaz.NonEmptyList toNel(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #457                // InterfaceMethod scalaz/Foldable1.toNel$:(Lscalaz/Foldable1;Ljava/lang/Object;)Lscalaz/NonEmptyList;
       5: areturn

  public scalaz.NonEmptyList scanLeft1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #463                // InterfaceMethod scalaz/Foldable1.scanLeft1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.NonEmptyList scanRight1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #467                // InterfaceMethod scalaz/Foldable1.scanRight1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.Foldable1<scalaz.TreeLoc>.Foldable1Law foldable1Law();
    Code:
       0: aload_0
       1: invokestatic  #474                // InterfaceMethod scalaz/Foldable1.foldable1Law$:(Lscalaz/Foldable1;)Lscalaz/Foldable1$Foldable1Law;
       4: areturn

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #479                // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #486                // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #489                // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #492                // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<scalaz.TreeLoc>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #499                // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<scalaz.TreeLoc>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #506                // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #511                // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #516                // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #522                // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #528                // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #535                // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #541                // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #547                // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #553                // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #559                // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #565                // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #571                // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #577                // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #583                // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #588                // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #594                // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #598                // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #602                // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #608                // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #612                // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #616                // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #620                // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<scalaz.TreeLoc>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #627                // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #632                // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #637                // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #640                // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #643                // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #650                // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #656                // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #663                // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #669                // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #675                // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #680                // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #685                // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #690                // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #695                // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #700                // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #707                // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #713                // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #719                // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #725                // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #729                // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #735                // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #739                // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #745                // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #750                // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #754                // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #760                // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #764                // InterfaceMethod scalaz/Foldable.length$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #771                // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #779                // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #785                // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #791                // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #797                // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #803                // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scala.collection.immutable.LazyList toLazyList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #809                // InterfaceMethod scalaz/Foldable.toLazyList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/LazyList;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #815                // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #821                // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #826                // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #830                // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #836                // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #841                // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #846                // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #850                // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #854                // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #858                // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #862                // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #866                // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #872                // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #879                // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #883                // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #890                // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/$less$colon$less;)J
       6: lreturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #897                // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #903                // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #909                // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #916                // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #920                // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #926                // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #932                // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #936                // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #942                // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scalaz.TreeLoc>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #950                // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public final java.lang.Object copure(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #955                // InterfaceMethod scalaz/Comonad.copure$:(Lscalaz/Comonad;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Comonad<scalaz.TreeLoc>.ComonadLaws comonadLaw();
    Code:
       0: aload_0
       1: invokestatic  #962                // InterfaceMethod scalaz/Comonad.comonadLaw$:(Lscalaz/Comonad;)Lscalaz/Comonad$ComonadLaws;
       4: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #967                // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.Cobind<scalaz.TreeLoc>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #974                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #981                // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #986                // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.TreeLoc<A>, scalaz.TreeLoc<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #993                // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #998                // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1003               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1007               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1012               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1016               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1020               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1026               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G$> scalaz.Functor<?> compose(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1032               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G$> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1040               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G$> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1046               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G$> scalaz.Functor<?> product(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1049               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1056               // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<scalaz.TreeLoc>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1064               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1071               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1079               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scalaz.TreeLoc>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1087               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.Traverse1Syntax<scalaz.TreeLoc> traverse1Syntax();
    Code:
       0: aload_0
       1: getfield      #1091               // Field traverse1Syntax:Lscalaz/syntax/Traverse1Syntax;
       4: areturn

  public void scalaz$Traverse1$_setter_$traverse1Syntax_$eq(scalaz.syntax.Traverse1Syntax<scalaz.TreeLoc>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1091               // Field traverse1Syntax:Lscalaz/syntax/Traverse1Syntax;
       5: return

  public scalaz.syntax.Foldable1Syntax<scalaz.TreeLoc> foldable1Syntax();
    Code:
       0: aload_0
       1: getfield      #1099               // Field foldable1Syntax:Lscalaz/syntax/Foldable1Syntax;
       4: areturn

  public void scalaz$Foldable1$_setter_$foldable1Syntax_$eq(scalaz.syntax.Foldable1Syntax<scalaz.TreeLoc>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1099               // Field foldable1Syntax:Lscalaz/syntax/Foldable1Syntax;
       5: return

  public scalaz.syntax.TraverseSyntax<scalaz.TreeLoc> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #1106               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<scalaz.TreeLoc>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1106               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scalaz.TreeLoc> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #1113               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scalaz.TreeLoc>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1113               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.ComonadSyntax<scalaz.TreeLoc> comonadSyntax();
    Code:
       0: aload_0
       1: getfield      #1120               // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       4: areturn

  public void scalaz$Comonad$_setter_$comonadSyntax_$eq(scalaz.syntax.ComonadSyntax<scalaz.TreeLoc>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1120               // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       5: return

  public scalaz.syntax.CobindSyntax<scalaz.TreeLoc> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #1127               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<scalaz.TreeLoc>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1127               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scalaz.TreeLoc> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #1134               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scalaz.TreeLoc>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1134               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scalaz.TreeLoc> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #1141               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scalaz.TreeLoc>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1141               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A> A copoint(scalaz.TreeLoc<A>);
    Code:
       0: aload_1
       1: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
       4: invokevirtual #1157               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
       7: areturn

  public <A, B> scalaz.TreeLoc<B> map(scalaz.TreeLoc<A>, scala.Function1<A, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_2
       7: invokedynamic #1180,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      12: astore_3
      13: getstatic     #1186               // Field scalaz/TreeLoc$.MODULE$:Lscalaz/TreeLoc$;
      16: pop
      17: aload_1
      18: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
      21: dup
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: astore        14
      29: getstatic     #1189               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      32: pop
      33: aload         14
      35: aload_2
      36: invokedynamic #1197,  0           // InvokeDynamic #1:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      41: aload         14
      43: aload_2
      44: invokedynamic #1205,  0           // InvokeDynamic #2:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      49: astore        16
      51: astore        15
      53: new           #89                 // class scalaz/Tree$Node$$anon$4
      56: dup
      57: aload         15
      59: aload         16
      61: invokespecial #1209               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      64: aconst_null
      65: astore        15
      67: aconst_null
      68: astore        16
      70: aconst_null
      71: astore        14
      73: aload_1
      74: invokevirtual #1212               // Method scalaz/TreeLoc.lefts:()Lscalaz/EphemeralStream;
      77: dup
      78: ifnonnull     83
      81: aconst_null
      82: athrow
      83: astore        4
      85: invokedynamic #1218,  0           // InvokeDynamic #3:apply:()Lscala/Function0;
      90: aload_3
      91: invokedynamic #1228,  0           // InvokeDynamic #4:apply:(Lscala/Function1;)Lscala/Function2;
      96: astore        6
      98: astore        5
     100: aload         4
     102: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
     105: ifeq          122
     108: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     111: pop
     112: new           #27                 // class scalaz/EphemeralStream$$anon$4
     115: dup
     116: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
     119: goto          172
     122: aload         4
     124: invokedynamic #1248,  0           // InvokeDynamic #5:apply:(Lscalaz/EphemeralStream;)Lscala/Function0;
     129: aload         4
     131: aload         5
     133: aload         6
     135: invokedynamic #1256,  0           // InvokeDynamic #6:apply:(Lscalaz/EphemeralStream;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     140: astore        22
     142: astore        21
     144: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     147: pop
     148: aload_3
     149: aload         21
     151: invokedynamic #1264,  0           // InvokeDynamic #7:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
     156: astore        27
     158: new           #29                 // class scalaz/EphemeralStream$$anon$5
     161: dup
     162: aload         27
     164: aload         22
     166: invokespecial #1265               // Method scalaz/EphemeralStream$$anon$5."<init>":(Lscala/Function0;Lscala/Function0;)V
     169: aconst_null
     170: astore        27
     172: aconst_null
     173: astore        5
     175: aconst_null
     176: astore        6
     178: checkcast     #33                 // class scalaz/EphemeralStream
     181: aconst_null
     182: astore        4
     184: aload_1
     185: invokevirtual #1268               // Method scalaz/TreeLoc.rights:()Lscalaz/EphemeralStream;
     188: dup
     189: ifnonnull     194
     192: aconst_null
     193: athrow
     194: astore        7
     196: invokedynamic #1218,  0           // InvokeDynamic #3:apply:()Lscala/Function0;
     201: aload_3
     202: invokedynamic #1228,  0           // InvokeDynamic #4:apply:(Lscala/Function1;)Lscala/Function2;
     207: astore        9
     209: astore        8
     211: aload         7
     213: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
     216: ifeq          233
     219: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     222: pop
     223: new           #27                 // class scalaz/EphemeralStream$$anon$4
     226: dup
     227: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
     230: goto          283
     233: aload         7
     235: invokedynamic #1248,  0           // InvokeDynamic #5:apply:(Lscalaz/EphemeralStream;)Lscala/Function0;
     240: aload         7
     242: aload         8
     244: aload         9
     246: invokedynamic #1256,  0           // InvokeDynamic #6:apply:(Lscalaz/EphemeralStream;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     251: astore        24
     253: astore        23
     255: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     258: pop
     259: aload_3
     260: aload         23
     262: invokedynamic #1264,  0           // InvokeDynamic #7:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
     267: astore        28
     269: new           #29                 // class scalaz/EphemeralStream$$anon$5
     272: dup
     273: aload         28
     275: aload         24
     277: invokespecial #1265               // Method scalaz/EphemeralStream$$anon$5."<init>":(Lscala/Function0;Lscala/Function0;)V
     280: aconst_null
     281: astore        28
     283: aconst_null
     284: astore        8
     286: aconst_null
     287: astore        9
     289: checkcast     #33                 // class scalaz/EphemeralStream
     292: aconst_null
     293: astore        7
     295: aload_1
     296: invokevirtual #1271               // Method scalaz/TreeLoc.parents:()Lscalaz/EphemeralStream;
     299: aload_3
     300: aload_2
     301: invokedynamic #1280,  0           // InvokeDynamic #8:apply:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
     306: astore        11
     308: dup
     309: ifnonnull     314
     312: aconst_null
     313: athrow
     314: astore        10
     316: invokedynamic #1218,  0           // InvokeDynamic #3:apply:()Lscala/Function0;
     321: aload         11
     323: invokedynamic #1228,  0           // InvokeDynamic #4:apply:(Lscala/Function1;)Lscala/Function2;
     328: astore        13
     330: astore        12
     332: aload         10
     334: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
     337: ifeq          354
     340: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     343: pop
     344: new           #27                 // class scalaz/EphemeralStream$$anon$4
     347: dup
     348: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
     351: goto          405
     354: aload         10
     356: invokedynamic #1248,  0           // InvokeDynamic #5:apply:(Lscalaz/EphemeralStream;)Lscala/Function0;
     361: aload         10
     363: aload         12
     365: aload         13
     367: invokedynamic #1256,  0           // InvokeDynamic #6:apply:(Lscalaz/EphemeralStream;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     372: astore        26
     374: astore        25
     376: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     379: pop
     380: aload         11
     382: aload         25
     384: invokedynamic #1264,  0           // InvokeDynamic #7:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
     389: astore        29
     391: new           #29                 // class scalaz/EphemeralStream$$anon$5
     394: dup
     395: aload         29
     397: aload         26
     399: invokespecial #1265               // Method scalaz/EphemeralStream$$anon$5."<init>":(Lscala/Function0;Lscala/Function0;)V
     402: aconst_null
     403: astore        29
     405: aconst_null
     406: astore        12
     408: aconst_null
     409: astore        13
     411: checkcast     #33                 // class scalaz/EphemeralStream
     414: aconst_null
     415: astore        10
     417: aconst_null
     418: astore        11
     420: astore        20
     422: astore        19
     424: astore        18
     426: astore        17
     428: new           #1149               // class scalaz/TreeLoc
     431: dup
     432: aload         17
     434: aload         18
     436: aload         19
     438: aload         20
     440: invokespecial #1283               // Method scalaz/TreeLoc."<init>":(Lscalaz/Tree;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;)V
     443: areturn

  public <A, B> scalaz.TreeLoc<B> cobind(scalaz.TreeLoc<A>, scala.Function1<scalaz.TreeLoc<A>, B>);
    Code:
       0: aload_1
       1: invokevirtual #1309               // Method scalaz/TreeLoc.cojoin:()Lscalaz/TreeLoc;
       4: astore_3
       5: aload_3
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_2
      12: invokedynamic #1180,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      17: astore        4
      19: getstatic     #1186               // Field scalaz/TreeLoc$.MODULE$:Lscalaz/TreeLoc$;
      22: pop
      23: aload_3
      24: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
      27: dup
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: astore        15
      35: getstatic     #1189               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      38: pop
      39: aload         15
      41: aload_2
      42: invokedynamic #1197,  0           // InvokeDynamic #1:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      47: aload         15
      49: aload_2
      50: invokedynamic #1205,  0           // InvokeDynamic #2:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      55: astore        17
      57: astore        16
      59: new           #89                 // class scalaz/Tree$Node$$anon$4
      62: dup
      63: aload         16
      65: aload         17
      67: invokespecial #1209               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      70: aconst_null
      71: astore        16
      73: aconst_null
      74: astore        17
      76: aconst_null
      77: astore        15
      79: aload_3
      80: invokevirtual #1212               // Method scalaz/TreeLoc.lefts:()Lscalaz/EphemeralStream;
      83: dup
      84: ifnonnull     89
      87: aconst_null
      88: athrow
      89: astore        5
      91: invokedynamic #1218,  0           // InvokeDynamic #3:apply:()Lscala/Function0;
      96: aload         4
      98: invokedynamic #1228,  0           // InvokeDynamic #4:apply:(Lscala/Function1;)Lscala/Function2;
     103: astore        7
     105: astore        6
     107: aload         5
     109: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
     112: ifeq          129
     115: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     118: pop
     119: new           #27                 // class scalaz/EphemeralStream$$anon$4
     122: dup
     123: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
     126: goto          180
     129: aload         5
     131: invokedynamic #1248,  0           // InvokeDynamic #5:apply:(Lscalaz/EphemeralStream;)Lscala/Function0;
     136: aload         5
     138: aload         6
     140: aload         7
     142: invokedynamic #1256,  0           // InvokeDynamic #6:apply:(Lscalaz/EphemeralStream;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     147: astore        23
     149: astore        22
     151: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     154: pop
     155: aload         4
     157: aload         22
     159: invokedynamic #1264,  0           // InvokeDynamic #7:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
     164: astore        28
     166: new           #29                 // class scalaz/EphemeralStream$$anon$5
     169: dup
     170: aload         28
     172: aload         23
     174: invokespecial #1265               // Method scalaz/EphemeralStream$$anon$5."<init>":(Lscala/Function0;Lscala/Function0;)V
     177: aconst_null
     178: astore        28
     180: aconst_null
     181: astore        6
     183: aconst_null
     184: astore        7
     186: checkcast     #33                 // class scalaz/EphemeralStream
     189: aconst_null
     190: astore        5
     192: aload_3
     193: invokevirtual #1268               // Method scalaz/TreeLoc.rights:()Lscalaz/EphemeralStream;
     196: dup
     197: ifnonnull     202
     200: aconst_null
     201: athrow
     202: astore        8
     204: invokedynamic #1218,  0           // InvokeDynamic #3:apply:()Lscala/Function0;
     209: aload         4
     211: invokedynamic #1228,  0           // InvokeDynamic #4:apply:(Lscala/Function1;)Lscala/Function2;
     216: astore        10
     218: astore        9
     220: aload         8
     222: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
     225: ifeq          242
     228: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     231: pop
     232: new           #27                 // class scalaz/EphemeralStream$$anon$4
     235: dup
     236: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
     239: goto          293
     242: aload         8
     244: invokedynamic #1248,  0           // InvokeDynamic #5:apply:(Lscalaz/EphemeralStream;)Lscala/Function0;
     249: aload         8
     251: aload         9
     253: aload         10
     255: invokedynamic #1256,  0           // InvokeDynamic #6:apply:(Lscalaz/EphemeralStream;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     260: astore        25
     262: astore        24
     264: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     267: pop
     268: aload         4
     270: aload         24
     272: invokedynamic #1264,  0           // InvokeDynamic #7:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
     277: astore        29
     279: new           #29                 // class scalaz/EphemeralStream$$anon$5
     282: dup
     283: aload         29
     285: aload         25
     287: invokespecial #1265               // Method scalaz/EphemeralStream$$anon$5."<init>":(Lscala/Function0;Lscala/Function0;)V
     290: aconst_null
     291: astore        29
     293: aconst_null
     294: astore        9
     296: aconst_null
     297: astore        10
     299: checkcast     #33                 // class scalaz/EphemeralStream
     302: aconst_null
     303: astore        8
     305: aload_3
     306: invokevirtual #1271               // Method scalaz/TreeLoc.parents:()Lscalaz/EphemeralStream;
     309: aload         4
     311: aload_2
     312: invokedynamic #1280,  0           // InvokeDynamic #8:apply:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
     317: astore        12
     319: dup
     320: ifnonnull     325
     323: aconst_null
     324: athrow
     325: astore        11
     327: invokedynamic #1218,  0           // InvokeDynamic #3:apply:()Lscala/Function0;
     332: aload         12
     334: invokedynamic #1228,  0           // InvokeDynamic #4:apply:(Lscala/Function1;)Lscala/Function2;
     339: astore        14
     341: astore        13
     343: aload         11
     345: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
     348: ifeq          365
     351: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     354: pop
     355: new           #27                 // class scalaz/EphemeralStream$$anon$4
     358: dup
     359: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
     362: goto          416
     365: aload         11
     367: invokedynamic #1248,  0           // InvokeDynamic #5:apply:(Lscalaz/EphemeralStream;)Lscala/Function0;
     372: aload         11
     374: aload         13
     376: aload         14
     378: invokedynamic #1256,  0           // InvokeDynamic #6:apply:(Lscalaz/EphemeralStream;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     383: astore        27
     385: astore        26
     387: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     390: pop
     391: aload         12
     393: aload         26
     395: invokedynamic #1264,  0           // InvokeDynamic #7:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
     400: astore        30
     402: new           #29                 // class scalaz/EphemeralStream$$anon$5
     405: dup
     406: aload         30
     408: aload         27
     410: invokespecial #1265               // Method scalaz/EphemeralStream$$anon$5."<init>":(Lscala/Function0;Lscala/Function0;)V
     413: aconst_null
     414: astore        30
     416: aconst_null
     417: astore        13
     419: aconst_null
     420: astore        14
     422: checkcast     #33                 // class scalaz/EphemeralStream
     425: aconst_null
     426: astore        11
     428: aconst_null
     429: astore        12
     431: astore        21
     433: astore        20
     435: astore        19
     437: astore        18
     439: new           #1149               // class scalaz/TreeLoc
     442: dup
     443: aload         18
     445: aload         19
     447: aload         20
     449: aload         21
     451: invokespecial #1283               // Method scalaz/TreeLoc."<init>":(Lscalaz/Tree;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;)V
     454: areturn

  public <A> scalaz.TreeLoc<scalaz.TreeLoc<A>> cojoin(scalaz.TreeLoc<A>);
    Code:
       0: aload_1
       1: invokevirtual #1309               // Method scalaz/TreeLoc.cojoin:()Lscalaz/TreeLoc;
       4: areturn

  public <A> boolean all(scalaz.TreeLoc<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: getstatic     #1331               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: pop
       4: getstatic     #1336               // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
       7: invokevirtual #1340               // Method scalaz/Tree$.treeInstance:()Lscalaz/Traverse1;
      10: aload_1
      11: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
      14: aload_2
      15: invokeinterface #1343,  3         // InterfaceMethod scalaz/Foldable.all:(Ljava/lang/Object;Lscala/Function1;)Z
      20: ifeq          76
      23: aload_0
      24: getfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
      27: aload_1
      28: invokevirtual #1212               // Method scalaz/TreeLoc.lefts:()Lscalaz/EphemeralStream;
      31: aload_2
      32: invokeinterface #1346,  3         // InterfaceMethod scalaz/Traverse.all:(Ljava/lang/Object;Lscala/Function1;)Z
      37: ifeq          76
      40: aload_0
      41: getfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
      44: aload_1
      45: invokevirtual #1268               // Method scalaz/TreeLoc.rights:()Lscalaz/EphemeralStream;
      48: aload_2
      49: invokeinterface #1346,  3         // InterfaceMethod scalaz/Traverse.all:(Ljava/lang/Object;Lscala/Function1;)Z
      54: ifeq          76
      57: aload_0
      58: getfield      #1348               // Field ParentsT:Lscalaz/Traverse;
      61: aload_1
      62: invokevirtual #1271               // Method scalaz/TreeLoc.parents:()Lscalaz/EphemeralStream;
      65: aload_2
      66: invokeinterface #1346,  3         // InterfaceMethod scalaz/Traverse.all:(Ljava/lang/Object;Lscala/Function1;)Z
      71: ifeq          76
      74: iconst_1
      75: ireturn
      76: iconst_0
      77: ireturn

  public <A> boolean any(scalaz.TreeLoc<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: getstatic     #1331               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: pop
       4: getstatic     #1336               // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
       7: invokevirtual #1340               // Method scalaz/Tree$.treeInstance:()Lscalaz/Traverse1;
      10: aload_1
      11: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
      14: aload_2
      15: invokeinterface #1351,  3         // InterfaceMethod scalaz/Foldable.any:(Ljava/lang/Object;Lscala/Function1;)Z
      20: ifne          74
      23: aload_0
      24: getfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
      27: aload_1
      28: invokevirtual #1212               // Method scalaz/TreeLoc.lefts:()Lscalaz/EphemeralStream;
      31: aload_2
      32: invokeinterface #1352,  3         // InterfaceMethod scalaz/Traverse.any:(Ljava/lang/Object;Lscala/Function1;)Z
      37: ifne          74
      40: aload_0
      41: getfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
      44: aload_1
      45: invokevirtual #1268               // Method scalaz/TreeLoc.rights:()Lscalaz/EphemeralStream;
      48: aload_2
      49: invokeinterface #1352,  3         // InterfaceMethod scalaz/Traverse.any:(Ljava/lang/Object;Lscala/Function1;)Z
      54: ifne          74
      57: aload_0
      58: getfield      #1348               // Field ParentsT:Lscalaz/Traverse;
      61: aload_1
      62: invokevirtual #1271               // Method scalaz/TreeLoc.parents:()Lscalaz/EphemeralStream;
      65: aload_2
      66: invokeinterface #1352,  3         // InterfaceMethod scalaz/Traverse.any:(Ljava/lang/Object;Lscala/Function1;)Z
      71: ifeq          76
      74: iconst_1
      75: ireturn
      76: iconst_0
      77: ireturn

  public <A, B> B foldMap1(scalaz.TreeLoc<A>, scala.Function1<A, B>, scalaz.Semigroup<B>);
    Code:
       0: aload_3
       1: aload_2
       2: invokedynamic #1363,  0           // InvokeDynamic #9:apply:(Lscalaz/Semigroup;Lscala/Function1;)Lscala/Function2;
       7: astore        4
       9: aload_0
      10: getfield      #1348               // Field ParentsT:Lscalaz/Traverse;
      13: aload_1
      14: invokevirtual #1271               // Method scalaz/TreeLoc.parents:()Lscalaz/EphemeralStream;
      17: aload_0
      18: getfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
      21: aload_1
      22: invokevirtual #1268               // Method scalaz/TreeLoc.rights:()Lscalaz/EphemeralStream;
      25: aload_0
      26: getfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
      29: aload_1
      30: invokevirtual #1212               // Method scalaz/TreeLoc.lefts:()Lscalaz/EphemeralStream;
      33: getstatic     #1368               // Field scalaz/Foldable1$.MODULE$:Lscalaz/Foldable1$;
      36: pop
      37: getstatic     #1336               // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
      40: invokevirtual #1340               // Method scalaz/Tree$.treeInstance:()Lscalaz/Traverse1;
      43: aload_1
      44: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
      47: aload_2
      48: aload         4
      50: invokeinterface #1372,  4         // InterfaceMethod scalaz/Foldable1.foldMapLeft1:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      55: aload         4
      57: invokeinterface #1375,  4         // InterfaceMethod scalaz/Traverse.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      62: aload         4
      64: invokeinterface #1375,  4         // InterfaceMethod scalaz/Traverse.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      69: aload         4
      71: invokeinterface #1375,  4         // InterfaceMethod scalaz/Traverse.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      76: areturn

  public <A, B> B foldMap(scalaz.TreeLoc<A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_3
       1: aload_3
       2: getstatic     #1331               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       5: pop
       6: getstatic     #1336               // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
       9: invokevirtual #1340               // Method scalaz/Tree$.treeInstance:()Lscalaz/Traverse1;
      12: aload_1
      13: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
      16: aload_2
      17: aload_3
      18: invokeinterface #1382,  4         // InterfaceMethod scalaz/Foldable.foldMap:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      23: aload_0
      24: aload_1
      25: aload_2
      26: aload_3
      27: invokedynamic #1390,  0           // InvokeDynamic #10:apply:(Lscalaz/TreeLocInstances$$anon$1;Lscalaz/TreeLoc;Lscala/Function1;Lscalaz/Monoid;)Lscala/Function0;
      32: invokeinterface #1396,  3         // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      37: aload_0
      38: aload_3
      39: aload_1
      40: aload_2
      41: invokedynamic #1404,  0           // InvokeDynamic #11:apply:(Lscalaz/TreeLocInstances$$anon$1;Lscalaz/Monoid;Lscalaz/TreeLoc;Lscala/Function1;)Lscala/Function0;
      46: invokeinterface #1396,  3         // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      51: areturn

  public <A, B> B foldLeft(scalaz.TreeLoc<A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: getfield      #1348               // Field ParentsT:Lscalaz/Traverse;
       4: aload_1
       5: invokevirtual #1271               // Method scalaz/TreeLoc.parents:()Lscalaz/EphemeralStream;
       8: aload_0
       9: getfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
      12: aload_1
      13: invokevirtual #1268               // Method scalaz/TreeLoc.rights:()Lscalaz/EphemeralStream;
      16: aload_0
      17: getfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
      20: aload_1
      21: invokevirtual #1212               // Method scalaz/TreeLoc.lefts:()Lscalaz/EphemeralStream;
      24: getstatic     #1331               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
      27: pop
      28: getstatic     #1336               // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
      31: invokevirtual #1340               // Method scalaz/Tree$.treeInstance:()Lscalaz/Traverse1;
      34: aload_1
      35: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
      38: aload_2
      39: aload_3
      40: invokeinterface #1407,  4         // InterfaceMethod scalaz/Foldable.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      45: aload_3
      46: invokeinterface #1375,  4         // InterfaceMethod scalaz/Traverse.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      51: aload_3
      52: invokeinterface #1375,  4         // InterfaceMethod scalaz/Traverse.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      57: aload_3
      58: invokeinterface #1375,  4         // InterfaceMethod scalaz/Traverse.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      63: areturn

  public <A, B> B foldMapLeft1(scalaz.TreeLoc<A>, scala.Function1<A, B>, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: getfield      #1348               // Field ParentsT:Lscalaz/Traverse;
       4: aload_1
       5: invokevirtual #1271               // Method scalaz/TreeLoc.parents:()Lscalaz/EphemeralStream;
       8: aload_0
       9: getfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
      12: aload_1
      13: invokevirtual #1268               // Method scalaz/TreeLoc.rights:()Lscalaz/EphemeralStream;
      16: aload_0
      17: getfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
      20: aload_1
      21: invokevirtual #1212               // Method scalaz/TreeLoc.lefts:()Lscalaz/EphemeralStream;
      24: getstatic     #1368               // Field scalaz/Foldable1$.MODULE$:Lscalaz/Foldable1$;
      27: pop
      28: getstatic     #1336               // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
      31: invokevirtual #1340               // Method scalaz/Tree$.treeInstance:()Lscalaz/Traverse1;
      34: aload_1
      35: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
      38: aload_2
      39: aload_3
      40: invokeinterface #1372,  4         // InterfaceMethod scalaz/Foldable1.foldMapLeft1:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      45: aload_3
      46: invokeinterface #1375,  4         // InterfaceMethod scalaz/Traverse.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      51: aload_3
      52: invokeinterface #1375,  4         // InterfaceMethod scalaz/Traverse.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      57: aload_3
      58: invokeinterface #1375,  4         // InterfaceMethod scalaz/Traverse.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      63: areturn

  public <G, A, B> G traverse1Impl(scalaz.TreeLoc<A>, scala.Function1<A, G>, scalaz.Apply<G>);
    Code:
       0: aload_1
       1: invokevirtual #1212               // Method scalaz/TreeLoc.lefts:()Lscalaz/EphemeralStream;
       4: astore        4
       6: aload         4
       8: ifnull        498
      11: getstatic     #1415               // Field scalaz/EphemeralStream$$hash$hash$colon$colon$.MODULE$:Lscalaz/EphemeralStream$$hash$hash$colon$colon$;
      14: aload         4
      16: invokevirtual #1419               // Method scalaz/EphemeralStream$$hash$hash$colon$colon$.unapply:(Lscalaz/EphemeralStream;)Lscala/Option;
      19: astore        5
      21: aload         5
      23: invokevirtual #1422               // Method scala/Option.isEmpty:()Z
      26: ifne          498
      29: aload         5
      31: invokevirtual #1425               // Method scala/Option.get:()Ljava/lang/Object;
      34: checkcast     #1427               // class scala/Tuple2
      37: invokevirtual #1430               // Method scala/Tuple2._1:()Ljava/lang/Object;
      40: checkcast     #86                 // class scalaz/Tree
      43: astore        6
      45: aload         5
      47: invokevirtual #1425               // Method scala/Option.get:()Ljava/lang/Object;
      50: checkcast     #1427               // class scala/Tuple2
      53: invokevirtual #1433               // Method scala/Tuple2._2:()Ljava/lang/Object;
      56: checkcast     #33                 // class scalaz/EphemeralStream
      59: astore        7
      61: aload_0
      62: getfield      #1435               // Field scalaz$TreeLocInstances$$anon$$ForestT1:Lscalaz/Traverse1;
      65: getstatic     #1440               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
      68: pop
      69: getstatic     #1443               // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
      72: aload         6
      74: aload         7
      76: invokevirtual #1446               // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
      79: aload_2
      80: aload_3
      81: invokeinterface #1448,  4         // InterfaceMethod scalaz/Traverse1.traverse1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      86: astore        8
      88: aload_1
      89: invokevirtual #1268               // Method scalaz/TreeLoc.rights:()Lscalaz/EphemeralStream;
      92: astore        9
      94: aload         9
      96: ifnull        335
      99: getstatic     #1415               // Field scalaz/EphemeralStream$$hash$hash$colon$colon$.MODULE$:Lscalaz/EphemeralStream$$hash$hash$colon$colon$;
     102: aload         9
     104: invokevirtual #1419               // Method scalaz/EphemeralStream$$hash$hash$colon$colon$.unapply:(Lscalaz/EphemeralStream;)Lscala/Option;
     107: astore        10
     109: aload         10
     111: invokevirtual #1422               // Method scala/Option.isEmpty:()Z
     114: ifne          335
     117: aload         10
     119: invokevirtual #1425               // Method scala/Option.get:()Ljava/lang/Object;
     122: checkcast     #1427               // class scala/Tuple2
     125: invokevirtual #1430               // Method scala/Tuple2._1:()Ljava/lang/Object;
     128: checkcast     #86                 // class scalaz/Tree
     131: astore        11
     133: aload         10
     135: invokevirtual #1425               // Method scala/Option.get:()Ljava/lang/Object;
     138: checkcast     #1427               // class scala/Tuple2
     141: invokevirtual #1433               // Method scala/Tuple2._2:()Ljava/lang/Object;
     144: checkcast     #33                 // class scalaz/EphemeralStream
     147: astore        12
     149: aload_0
     150: getfield      #1435               // Field scalaz$TreeLocInstances$$anon$$ForestT1:Lscalaz/Traverse1;
     153: getstatic     #1440               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
     156: pop
     157: getstatic     #1443               // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
     160: aload         11
     162: aload         12
     164: invokevirtual #1446               // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
     167: aload_2
     168: aload_3
     169: invokeinterface #1448,  4         // InterfaceMethod scalaz/Traverse1.traverse1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
     174: astore        13
     176: aload_1
     177: invokevirtual #1271               // Method scalaz/TreeLoc.parents:()Lscalaz/EphemeralStream;
     180: astore        14
     182: aload         14
     184: ifnull        283
     187: getstatic     #1415               // Field scalaz/EphemeralStream$$hash$hash$colon$colon$.MODULE$:Lscalaz/EphemeralStream$$hash$hash$colon$colon$;
     190: aload         14
     192: invokevirtual #1419               // Method scalaz/EphemeralStream$$hash$hash$colon$colon$.unapply:(Lscalaz/EphemeralStream;)Lscala/Option;
     195: astore        15
     197: aload         15
     199: invokevirtual #1422               // Method scala/Option.isEmpty:()Z
     202: ifne          283
     205: aload         15
     207: invokevirtual #1425               // Method scala/Option.get:()Ljava/lang/Object;
     210: checkcast     #1427               // class scala/Tuple2
     213: invokevirtual #1430               // Method scala/Tuple2._1:()Ljava/lang/Object;
     216: checkcast     #1450               // class scala/Tuple3
     219: astore        16
     221: aload         15
     223: invokevirtual #1425               // Method scala/Option.get:()Ljava/lang/Object;
     226: checkcast     #1427               // class scala/Tuple2
     229: invokevirtual #1433               // Method scala/Tuple2._2:()Ljava/lang/Object;
     232: checkcast     #33                 // class scalaz/EphemeralStream
     235: astore        17
     237: aload_3
     238: aload_1
     239: aload_2
     240: aload_3
     241: invokedynamic #1457,  0           // InvokeDynamic #12:apply:(Lscalaz/TreeLoc;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     246: aload         8
     248: invokedynamic #1464,  0           // InvokeDynamic #13:apply:(Ljava/lang/Object;)Lscala/Function0;
     253: aload         13
     255: invokedynamic #1469,  0           // InvokeDynamic #14:apply:(Ljava/lang/Object;)Lscala/Function0;
     260: aload_0
     261: aload         16
     263: aload         17
     265: aload_2
     266: aload_3
     267: invokedynamic #1477,  0           // InvokeDynamic #15:apply:(Lscalaz/TreeLocInstances$$anon$1;Lscala/Tuple3;Lscalaz/EphemeralStream;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     272: invokedynamic #1488,  0           // InvokeDynamic #16:apply:()Lscala/Function4;
     277: invokeinterface #1494,  6         // InterfaceMethod scalaz/Apply.apply4:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
     282: areturn
     283: aload         14
     285: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
     288: ifeq          325
     291: aload_3
     292: aload_1
     293: aload_2
     294: aload_3
     295: invokedynamic #1499,  0           // InvokeDynamic #17:apply:(Lscalaz/TreeLoc;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     300: aload         8
     302: invokedynamic #1504,  0           // InvokeDynamic #18:apply:(Ljava/lang/Object;)Lscala/Function0;
     307: aload         13
     309: invokedynamic #1509,  0           // InvokeDynamic #19:apply:(Ljava/lang/Object;)Lscala/Function0;
     314: invokedynamic #1520,  0           // InvokeDynamic #20:apply:()Lscala/Function3;
     319: invokeinterface #1524,  5         // InterfaceMethod scalaz/Apply.apply3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
     324: areturn
     325: new           #1526               // class scala/MatchError
     328: dup
     329: aload         14
     331: invokespecial #1529               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     334: athrow
     335: aload         9
     337: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
     340: ifeq          488
     343: aload_1
     344: invokevirtual #1271               // Method scalaz/TreeLoc.parents:()Lscalaz/EphemeralStream;
     347: astore        18
     349: aload         18
     351: ifnull        443
     354: getstatic     #1415               // Field scalaz/EphemeralStream$$hash$hash$colon$colon$.MODULE$:Lscalaz/EphemeralStream$$hash$hash$colon$colon$;
     357: aload         18
     359: invokevirtual #1419               // Method scalaz/EphemeralStream$$hash$hash$colon$colon$.unapply:(Lscalaz/EphemeralStream;)Lscala/Option;
     362: astore        19
     364: aload         19
     366: invokevirtual #1422               // Method scala/Option.isEmpty:()Z
     369: ifne          443
     372: aload         19
     374: invokevirtual #1425               // Method scala/Option.get:()Ljava/lang/Object;
     377: checkcast     #1427               // class scala/Tuple2
     380: invokevirtual #1430               // Method scala/Tuple2._1:()Ljava/lang/Object;
     383: checkcast     #1450               // class scala/Tuple3
     386: astore        20
     388: aload         19
     390: invokevirtual #1425               // Method scala/Option.get:()Ljava/lang/Object;
     393: checkcast     #1427               // class scala/Tuple2
     396: invokevirtual #1433               // Method scala/Tuple2._2:()Ljava/lang/Object;
     399: checkcast     #33                 // class scalaz/EphemeralStream
     402: astore        21
     404: aload_3
     405: aload_1
     406: aload_2
     407: aload_3
     408: invokedynamic #1534,  0           // InvokeDynamic #21:apply:(Lscalaz/TreeLoc;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     413: aload         8
     415: invokedynamic #1539,  0           // InvokeDynamic #22:apply:(Ljava/lang/Object;)Lscala/Function0;
     420: aload_0
     421: aload         20
     423: aload         21
     425: aload_2
     426: aload_3
     427: invokedynamic #1544,  0           // InvokeDynamic #23:apply:(Lscalaz/TreeLocInstances$$anon$1;Lscala/Tuple3;Lscalaz/EphemeralStream;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     432: invokedynamic #1549,  0           // InvokeDynamic #24:apply:()Lscala/Function3;
     437: invokeinterface #1524,  5         // InterfaceMethod scalaz/Apply.apply3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
     442: areturn
     443: aload         18
     445: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
     448: ifeq          478
     451: aload_3
     452: aload_1
     453: aload_2
     454: aload_3
     455: invokedynamic #1554,  0           // InvokeDynamic #25:apply:(Lscalaz/TreeLoc;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     460: aload         8
     462: invokedynamic #1559,  0           // InvokeDynamic #26:apply:(Ljava/lang/Object;)Lscala/Function0;
     467: invokedynamic #1568,  0           // InvokeDynamic #27:apply:()Lscala/Function2;
     472: invokeinterface #1572,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     477: areturn
     478: new           #1526               // class scala/MatchError
     481: dup
     482: aload         18
     484: invokespecial #1529               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     487: athrow
     488: new           #1526               // class scala/MatchError
     491: dup
     492: aload         9
     494: invokespecial #1529               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     497: athrow
     498: aload         4
     500: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
     503: ifeq          967
     506: aload_1
     507: invokevirtual #1268               // Method scalaz/TreeLoc.rights:()Lscalaz/EphemeralStream;
     510: astore        22
     512: aload         22
     514: ifnull        739
     517: getstatic     #1415               // Field scalaz/EphemeralStream$$hash$hash$colon$colon$.MODULE$:Lscalaz/EphemeralStream$$hash$hash$colon$colon$;
     520: aload         22
     522: invokevirtual #1419               // Method scalaz/EphemeralStream$$hash$hash$colon$colon$.unapply:(Lscalaz/EphemeralStream;)Lscala/Option;
     525: astore        23
     527: aload         23
     529: invokevirtual #1422               // Method scala/Option.isEmpty:()Z
     532: ifne          739
     535: aload         23
     537: invokevirtual #1425               // Method scala/Option.get:()Ljava/lang/Object;
     540: checkcast     #1427               // class scala/Tuple2
     543: invokevirtual #1430               // Method scala/Tuple2._1:()Ljava/lang/Object;
     546: checkcast     #86                 // class scalaz/Tree
     549: astore        24
     551: aload         23
     553: invokevirtual #1425               // Method scala/Option.get:()Ljava/lang/Object;
     556: checkcast     #1427               // class scala/Tuple2
     559: invokevirtual #1433               // Method scala/Tuple2._2:()Ljava/lang/Object;
     562: checkcast     #33                 // class scalaz/EphemeralStream
     565: astore        25
     567: aload_0
     568: getfield      #1435               // Field scalaz$TreeLocInstances$$anon$$ForestT1:Lscalaz/Traverse1;
     571: getstatic     #1440               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
     574: pop
     575: getstatic     #1443               // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
     578: aload         24
     580: aload         25
     582: invokevirtual #1446               // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
     585: aload_2
     586: aload_3
     587: invokeinterface #1448,  4         // InterfaceMethod scalaz/Traverse1.traverse1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
     592: astore        26
     594: aload_1
     595: invokevirtual #1271               // Method scalaz/TreeLoc.parents:()Lscalaz/EphemeralStream;
     598: astore        27
     600: aload         27
     602: ifnull        694
     605: getstatic     #1415               // Field scalaz/EphemeralStream$$hash$hash$colon$colon$.MODULE$:Lscalaz/EphemeralStream$$hash$hash$colon$colon$;
     608: aload         27
     610: invokevirtual #1419               // Method scalaz/EphemeralStream$$hash$hash$colon$colon$.unapply:(Lscalaz/EphemeralStream;)Lscala/Option;
     613: astore        28
     615: aload         28
     617: invokevirtual #1422               // Method scala/Option.isEmpty:()Z
     620: ifne          694
     623: aload         28
     625: invokevirtual #1425               // Method scala/Option.get:()Ljava/lang/Object;
     628: checkcast     #1427               // class scala/Tuple2
     631: invokevirtual #1430               // Method scala/Tuple2._1:()Ljava/lang/Object;
     634: checkcast     #1450               // class scala/Tuple3
     637: astore        29
     639: aload         28
     641: invokevirtual #1425               // Method scala/Option.get:()Ljava/lang/Object;
     644: checkcast     #1427               // class scala/Tuple2
     647: invokevirtual #1433               // Method scala/Tuple2._2:()Ljava/lang/Object;
     650: checkcast     #33                 // class scalaz/EphemeralStream
     653: astore        30
     655: aload_3
     656: aload_1
     657: aload_2
     658: aload_3
     659: invokedynamic #1577,  0           // InvokeDynamic #28:apply:(Lscalaz/TreeLoc;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     664: aload         26
     666: invokedynamic #1582,  0           // InvokeDynamic #29:apply:(Ljava/lang/Object;)Lscala/Function0;
     671: aload_0
     672: aload         29
     674: aload         30
     676: aload_2
     677: aload_3
     678: invokedynamic #1587,  0           // InvokeDynamic #30:apply:(Lscalaz/TreeLocInstances$$anon$1;Lscala/Tuple3;Lscalaz/EphemeralStream;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     683: invokedynamic #1592,  0           // InvokeDynamic #31:apply:()Lscala/Function3;
     688: invokeinterface #1524,  5         // InterfaceMethod scalaz/Apply.apply3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
     693: areturn
     694: aload         27
     696: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
     699: ifeq          729
     702: aload_3
     703: aload_1
     704: aload_2
     705: aload_3
     706: invokedynamic #1597,  0           // InvokeDynamic #32:apply:(Lscalaz/TreeLoc;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     711: aload         26
     713: invokedynamic #1602,  0           // InvokeDynamic #33:apply:(Ljava/lang/Object;)Lscala/Function0;
     718: invokedynamic #1607,  0           // InvokeDynamic #34:apply:()Lscala/Function2;
     723: invokeinterface #1572,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     728: areturn
     729: new           #1526               // class scala/MatchError
     732: dup
     733: aload         27
     735: invokespecial #1529               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     738: athrow
     739: aload         22
     741: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
     744: ifeq          957
     747: aload_1
     748: invokevirtual #1271               // Method scalaz/TreeLoc.parents:()Lscalaz/EphemeralStream;
     751: astore        31
     753: aload         31
     755: ifnull        840
     758: getstatic     #1415               // Field scalaz/EphemeralStream$$hash$hash$colon$colon$.MODULE$:Lscalaz/EphemeralStream$$hash$hash$colon$colon$;
     761: aload         31
     763: invokevirtual #1419               // Method scalaz/EphemeralStream$$hash$hash$colon$colon$.unapply:(Lscalaz/EphemeralStream;)Lscala/Option;
     766: astore        32
     768: aload         32
     770: invokevirtual #1422               // Method scala/Option.isEmpty:()Z
     773: ifne          840
     776: aload         32
     778: invokevirtual #1425               // Method scala/Option.get:()Ljava/lang/Object;
     781: checkcast     #1427               // class scala/Tuple2
     784: invokevirtual #1430               // Method scala/Tuple2._1:()Ljava/lang/Object;
     787: checkcast     #1450               // class scala/Tuple3
     790: astore        33
     792: aload         32
     794: invokevirtual #1425               // Method scala/Option.get:()Ljava/lang/Object;
     797: checkcast     #1427               // class scala/Tuple2
     800: invokevirtual #1433               // Method scala/Tuple2._2:()Ljava/lang/Object;
     803: checkcast     #33                 // class scalaz/EphemeralStream
     806: astore        34
     808: aload_3
     809: aload_1
     810: aload_2
     811: aload_3
     812: invokedynamic #1612,  0           // InvokeDynamic #35:apply:(Lscalaz/TreeLoc;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     817: aload_0
     818: aload         33
     820: aload         34
     822: aload_2
     823: aload_3
     824: invokedynamic #1617,  0           // InvokeDynamic #36:apply:(Lscalaz/TreeLocInstances$$anon$1;Lscala/Tuple3;Lscalaz/EphemeralStream;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     829: invokedynamic #1622,  0           // InvokeDynamic #37:apply:()Lscala/Function2;
     834: invokeinterface #1572,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     839: areturn
     840: aload         31
     842: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
     845: ifeq          947
     848: aload_3
     849: aload_1
     850: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
     853: dup
     854: ifnonnull     859
     857: aconst_null
     858: athrow
     859: astore        35
     861: getstatic     #1627               // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
     864: pop
     865: getstatic     #1632               // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
     868: pop
     869: aload         35
     871: invokevirtual #1635               // Method scalaz/Tree.subForest:()Lscalaz/EphemeralStream;
     874: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
     877: ifeq          905
     880: aload_3
     881: aload_2
     882: aload         35
     884: invokevirtual #1157               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
     887: invokeinterface #1637,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     892: invokedynamic #1646,  0           // InvokeDynamic #38:apply:()Lscala/Function1;
     897: invokeinterface #1648,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     902: goto          933
     905: aload_3
     906: aload         35
     908: aload_2
     909: invokedynamic #1653,  0           // InvokeDynamic #39:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
     914: aload         35
     916: aload_2
     917: aload_3
     918: invokedynamic #1661,  0           // InvokeDynamic #40:apply:(Lscalaz/Tree;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     923: invokedynamic #1668,  0           // InvokeDynamic #41:apply:()Lscala/Function2;
     928: invokeinterface #1572,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     933: aconst_null
     934: astore        35
     936: invokedynamic #1675,  0           // InvokeDynamic #42:apply:()Lscala/Function1;
     941: invokeinterface #1648,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     946: areturn
     947: new           #1526               // class scala/MatchError
     950: dup
     951: aload         31
     953: invokespecial #1529               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     956: athrow
     957: new           #1526               // class scala/MatchError
     960: dup
     961: aload         22
     963: invokespecial #1529               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     966: athrow
     967: new           #1526               // class scala/MatchError
     970: dup
     971: aload         4
     973: invokespecial #1529               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     976: athrow

  public <A, B> B foldMapRight1(scalaz.TreeLoc<A>, scala.Function1<A, B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_0
       1: getfield      #1348               // Field ParentsT:Lscalaz/Traverse;
       4: aload_1
       5: invokevirtual #1271               // Method scalaz/TreeLoc.parents:()Lscalaz/EphemeralStream;
       8: aload_2
       9: aload_3
      10: invokeinterface #1687,  4         // InterfaceMethod scalaz/Traverse.foldMapRight1Opt:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
      15: astore        4
      17: aload         4
      19: instanceof    #1689               // class scala/Some
      22: ifeq          86
      25: aload         4
      27: checkcast     #1689               // class scala/Some
      30: invokevirtual #1692               // Method scala/Some.value:()Ljava/lang/Object;
      33: astore        5
      35: aload_1
      36: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
      39: aload_0
      40: aload_1
      41: aload         5
      43: aload_3
      44: invokedynamic #1700,  0           // InvokeDynamic #43:apply:(Lscalaz/TreeLocInstances$$anon$1;Lscalaz/TreeLoc;Ljava/lang/Object;Lscala/Function2;)Lscala/Function0;
      49: astore        11
      51: dup
      52: ifnonnull     57
      55: aconst_null
      56: athrow
      57: astore        10
      59: getstatic     #1331               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
      62: pop
      63: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      66: invokevirtual #1704               // Method scalaz/EphemeralStream$.ephemeralStreamInstance:()Lscalaz/MonadPlus;
      69: checkcast     #41                 // class scalaz/Foldable
      72: aload         10
      74: invokevirtual #1707               // Method scalaz/Tree.flatten:()Lscalaz/EphemeralStream;
      77: aload         11
      79: aload_3
      80: invokeinterface #1709,  4         // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      85: areturn
      86: getstatic     #1714               // Field scala/None$.MODULE$:Lscala/None$;
      89: aload         4
      91: invokevirtual #1717               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      94: ifeq          330
      97: aload_0
      98: getfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
     101: aload_1
     102: invokevirtual #1268               // Method scalaz/TreeLoc.rights:()Lscalaz/EphemeralStream;
     105: aload_2
     106: aload_3
     107: invokeinterface #1687,  4         // InterfaceMethod scalaz/Traverse.foldMapRight1Opt:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
     112: astore        6
     114: aload         6
     116: instanceof    #1689               // class scala/Some
     119: ifeq          183
     122: aload         6
     124: checkcast     #1689               // class scala/Some
     127: invokevirtual #1692               // Method scala/Some.value:()Ljava/lang/Object;
     130: astore        7
     132: aload_1
     133: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
     136: aload_0
     137: aload_1
     138: aload         7
     140: aload_3
     141: invokedynamic #1722,  0           // InvokeDynamic #44:apply:(Lscalaz/TreeLocInstances$$anon$1;Lscalaz/TreeLoc;Ljava/lang/Object;Lscala/Function2;)Lscala/Function0;
     146: astore        13
     148: dup
     149: ifnonnull     154
     152: aconst_null
     153: athrow
     154: astore        12
     156: getstatic     #1331               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
     159: pop
     160: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     163: invokevirtual #1704               // Method scalaz/EphemeralStream$.ephemeralStreamInstance:()Lscalaz/MonadPlus;
     166: checkcast     #41                 // class scalaz/Foldable
     169: aload         12
     171: invokevirtual #1707               // Method scalaz/Tree.flatten:()Lscalaz/EphemeralStream;
     174: aload         13
     176: aload_3
     177: invokeinterface #1709,  4         // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     182: areturn
     183: getstatic     #1714               // Field scala/None$.MODULE$:Lscala/None$;
     186: aload         6
     188: invokevirtual #1717               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     191: ifeq          320
     194: aload_0
     195: getfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
     198: aload_1
     199: invokevirtual #1212               // Method scalaz/TreeLoc.lefts:()Lscalaz/EphemeralStream;
     202: aload_2
     203: aload_3
     204: invokeinterface #1687,  4         // InterfaceMethod scalaz/Traverse.foldMapRight1Opt:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
     209: astore        8
     211: aload         8
     213: instanceof    #1689               // class scala/Some
     216: ifeq          277
     219: aload         8
     221: checkcast     #1689               // class scala/Some
     224: invokevirtual #1692               // Method scala/Some.value:()Ljava/lang/Object;
     227: astore        9
     229: aload_1
     230: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
     233: aload         9
     235: invokedynamic #1727,  0           // InvokeDynamic #45:apply:(Ljava/lang/Object;)Lscala/Function0;
     240: astore        15
     242: dup
     243: ifnonnull     248
     246: aconst_null
     247: athrow
     248: astore        14
     250: getstatic     #1331               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
     253: pop
     254: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     257: invokevirtual #1704               // Method scalaz/EphemeralStream$.ephemeralStreamInstance:()Lscalaz/MonadPlus;
     260: checkcast     #41                 // class scalaz/Foldable
     263: aload         14
     265: invokevirtual #1707               // Method scalaz/Tree.flatten:()Lscalaz/EphemeralStream;
     268: aload         15
     270: aload_3
     271: invokeinterface #1709,  4         // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     276: areturn
     277: getstatic     #1714               // Field scala/None$.MODULE$:Lscala/None$;
     280: aload         8
     282: invokevirtual #1717               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     285: ifeq          310
     288: getstatic     #1368               // Field scalaz/Foldable1$.MODULE$:Lscalaz/Foldable1$;
     291: pop
     292: getstatic     #1336               // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
     295: invokevirtual #1340               // Method scalaz/Tree$.treeInstance:()Lscalaz/Traverse1;
     298: aload_1
     299: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
     302: aload_2
     303: aload_3
     304: invokeinterface #1729,  4         // InterfaceMethod scalaz/Foldable1.foldMapRight1:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
     309: areturn
     310: new           #1526               // class scala/MatchError
     313: dup
     314: aload         8
     316: invokespecial #1529               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     319: athrow
     320: new           #1526               // class scala/MatchError
     323: dup
     324: aload         6
     326: invokespecial #1529               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     329: athrow
     330: new           #1526               // class scala/MatchError
     333: dup
     334: aload         4
     336: invokespecial #1529               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     339: athrow

  public java.lang.Object foldMapRight1(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1149               // class scalaz/TreeLoc
       5: aload_2
       6: aload_3
       7: invokevirtual #1733               // Method foldMapRight1:(Lscalaz/TreeLoc;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object traverse1Impl(java.lang.Object, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1149               // class scalaz/TreeLoc
       5: aload_2
       6: aload_3
       7: invokevirtual #1735               // Method traverse1Impl:(Lscalaz/TreeLoc;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldMapLeft1(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1149               // class scalaz/TreeLoc
       5: aload_2
       6: aload_3
       7: invokevirtual #1737               // Method foldMapLeft1:(Lscalaz/TreeLoc;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1149               // class scalaz/TreeLoc
       5: aload_2
       6: aload_3
       7: invokevirtual #1739               // Method foldLeft:(Lscalaz/TreeLoc;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1149               // class scalaz/TreeLoc
       5: aload_2
       6: aload_3
       7: invokevirtual #1741               // Method foldMap:(Lscalaz/TreeLoc;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldMap1(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1149               // class scalaz/TreeLoc
       5: aload_2
       6: aload_3
       7: invokevirtual #1744               // Method foldMap1:(Lscalaz/TreeLoc;Lscala/Function1;Lscalaz/Semigroup;)Ljava/lang/Object;
      10: areturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1149               // class scalaz/TreeLoc
       5: aload_2
       6: invokevirtual #1746               // Method any:(Lscalaz/TreeLoc;Lscala/Function1;)Z
       9: ireturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1149               // class scalaz/TreeLoc
       5: aload_2
       6: invokevirtual #1748               // Method all:(Lscalaz/TreeLoc;Lscala/Function1;)Z
       9: ireturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1149               // class scalaz/TreeLoc
       5: invokevirtual #1750               // Method cojoin:(Lscalaz/TreeLoc;)Lscalaz/TreeLoc;
       8: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1149               // class scalaz/TreeLoc
       5: aload_2
       6: invokevirtual #1752               // Method cobind:(Lscalaz/TreeLoc;Lscala/Function1;)Lscalaz/TreeLoc;
       9: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1149               // class scalaz/TreeLoc
       5: aload_2
       6: invokevirtual #1754               // Method map:(Lscalaz/TreeLoc;Lscala/Function1;)Lscalaz/TreeLoc;
       9: areturn

  public java.lang.Object copoint(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1149               // class scalaz/TreeLoc
       5: invokevirtual #1756               // Method copoint:(Lscalaz/TreeLoc;)Ljava/lang/Object;
       8: areturn

  public static final java.lang.Object $anonfun$foldMap1$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1637,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$foldMap1$1(scalaz.Semigroup, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload_3
       4: invokedynamic #1767,  0           // InvokeDynamic #46:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
       9: invokeinterface #1770,  3         // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static final java.lang.Object $anonfun$foldMap$1(scalaz.TreeLocInstances$$anon$1, scalaz.TreeLoc, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: getfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
       4: aload_1
       5: invokevirtual #1212               // Method scalaz/TreeLoc.lefts:()Lscalaz/EphemeralStream;
       8: aload_2
       9: aload_3
      10: invokeinterface #1775,  4         // InterfaceMethod scalaz/Traverse.foldMap:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      15: areturn

  public static final java.lang.Object $anonfun$foldMap$3(scalaz.TreeLocInstances$$anon$1, scalaz.TreeLoc, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: getfield      #1348               // Field ParentsT:Lscalaz/Traverse;
       4: aload_1
       5: invokevirtual #1271               // Method scalaz/TreeLoc.parents:()Lscalaz/EphemeralStream;
       8: aload_2
       9: aload_3
      10: invokeinterface #1775,  4         // InterfaceMethod scalaz/Traverse.foldMap:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      15: areturn

  public static final java.lang.Object $anonfun$foldMap$2(scalaz.TreeLocInstances$$anon$1, scalaz.Monoid, scalaz.TreeLoc, scala.Function1);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
       5: aload_2
       6: invokevirtual #1268               // Method scalaz/TreeLoc.rights:()Lscalaz/EphemeralStream;
       9: aload_3
      10: aload_1
      11: invokeinterface #1775,  4         // InterfaceMethod scalaz/Traverse.foldMap:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      16: aload_0
      17: aload_2
      18: aload_3
      19: aload_1
      20: invokedynamic #1780,  0           // InvokeDynamic #47:apply:(Lscalaz/TreeLocInstances$$anon$1;Lscalaz/TreeLoc;Lscala/Function1;Lscalaz/Monoid;)Lscala/Function0;
      25: invokeinterface #1396,  3         // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      30: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$1(scalaz.TreeLoc, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_3
      11: getstatic     #1627               // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
      14: pop
      15: getstatic     #1632               // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
      18: pop
      19: aload_3
      20: invokevirtual #1635               // Method scalaz/Tree.subForest:()Lscalaz/EphemeralStream;
      23: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
      26: ifeq          51
      29: aload_2
      30: aload_1
      31: aload_3
      32: invokevirtual #1157               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
      35: invokeinterface #1637,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: invokedynamic #1646,  0           // InvokeDynamic #38:apply:()Lscala/Function1;
      45: invokeinterface #1648,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      50: areturn
      51: aload_2
      52: aload_3
      53: aload_1
      54: invokedynamic #1653,  0           // InvokeDynamic #39:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      59: aload_3
      60: aload_1
      61: aload_2
      62: invokedynamic #1661,  0           // InvokeDynamic #40:apply:(Lscalaz/Tree;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
      67: invokedynamic #1668,  0           // InvokeDynamic #41:apply:()Lscala/Function2;
      72: invokeinterface #1572,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      77: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$4(scalaz.TreeLocInstances$$anon$1, scala.Tuple3, scalaz.EphemeralStream, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: getfield      #1789               // Field ParentsT1:Lscalaz/Traverse1;
       4: getstatic     #1440               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       7: pop
       8: getstatic     #1443               // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
      11: aload_1
      12: aload_2
      13: invokevirtual #1446               // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
      16: aload_3
      17: aload         4
      19: invokeinterface #1448,  4         // InterfaceMethod scalaz/Traverse1.traverse1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      24: areturn

  public static final scalaz.EphemeralStream $anonfun$traverse1Impl$6(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #1795               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #33                 // class scalaz/EphemeralStream
       7: areturn

  public static final scalaz.EphemeralStream $anonfun$traverse1Impl$7(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #1795               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #33                 // class scalaz/EphemeralStream
       7: areturn

  public static final scalaz.EphemeralStream $anonfun$traverse1Impl$8(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #1795               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #33                 // class scalaz/EphemeralStream
       7: areturn

  public static final scalaz.TreeLoc $anonfun$traverse1Impl$5(scalaz.Tree, scalaz.OneAnd, scalaz.OneAnd, scalaz.OneAnd);
    Code:
       0: new           #1149               // class scalaz/TreeLoc
       3: dup
       4: aload_0
       5: aload_1
       6: invokevirtual #1803               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       9: checkcast     #86                 // class scalaz/Tree
      12: astore        4
      14: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      17: pop
      18: aload_1
      19: invokedynamic #1809,  0           // InvokeDynamic #48:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      24: astore        7
      26: new           #36                 // class scalaz/EphemeralStream$ConsWrap
      29: dup
      30: aload         7
      32: invokespecial #1812               // Method scalaz/EphemeralStream$ConsWrap."<init>":(Lscala/Function0;)V
      35: aconst_null
      36: astore        7
      38: aload         4
      40: invokevirtual #1815               // Method scalaz/EphemeralStream$ConsWrap.$hash$hash$colon$colon:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
      43: aload_2
      44: invokevirtual #1803               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      47: checkcast     #86                 // class scalaz/Tree
      50: astore        5
      52: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      55: pop
      56: aload_2
      57: invokedynamic #1819,  0           // InvokeDynamic #49:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      62: astore        8
      64: new           #36                 // class scalaz/EphemeralStream$ConsWrap
      67: dup
      68: aload         8
      70: invokespecial #1812               // Method scalaz/EphemeralStream$ConsWrap."<init>":(Lscala/Function0;)V
      73: aconst_null
      74: astore        8
      76: aload         5
      78: invokevirtual #1815               // Method scalaz/EphemeralStream$ConsWrap.$hash$hash$colon$colon:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
      81: aload_3
      82: invokevirtual #1803               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      85: checkcast     #1450               // class scala/Tuple3
      88: astore        6
      90: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      93: pop
      94: aload_3
      95: invokedynamic #1823,  0           // InvokeDynamic #50:apply:(Lscalaz/OneAnd;)Lscala/Function0;
     100: astore        9
     102: new           #36                 // class scalaz/EphemeralStream$ConsWrap
     105: dup
     106: aload         9
     108: invokespecial #1812               // Method scalaz/EphemeralStream$ConsWrap."<init>":(Lscala/Function0;)V
     111: aconst_null
     112: astore        9
     114: aload         6
     116: invokevirtual #1815               // Method scalaz/EphemeralStream$ConsWrap.$hash$hash$colon$colon:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
     119: invokespecial #1283               // Method scalaz/TreeLoc."<init>":(Lscalaz/Tree;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;)V
     122: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$9(scalaz.TreeLoc, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_3
      11: getstatic     #1627               // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
      14: pop
      15: getstatic     #1632               // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
      18: pop
      19: aload_3
      20: invokevirtual #1635               // Method scalaz/Tree.subForest:()Lscalaz/EphemeralStream;
      23: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
      26: ifeq          51
      29: aload_2
      30: aload_1
      31: aload_3
      32: invokevirtual #1157               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
      35: invokeinterface #1637,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: invokedynamic #1646,  0           // InvokeDynamic #38:apply:()Lscala/Function1;
      45: invokeinterface #1648,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      50: areturn
      51: aload_2
      52: aload_3
      53: aload_1
      54: invokedynamic #1653,  0           // InvokeDynamic #39:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      59: aload_3
      60: aload_1
      61: aload_2
      62: invokedynamic #1661,  0           // InvokeDynamic #40:apply:(Lscalaz/Tree;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
      67: invokedynamic #1668,  0           // InvokeDynamic #41:apply:()Lscala/Function2;
      72: invokeinterface #1572,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      77: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$10(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$11(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.EphemeralStream $anonfun$traverse1Impl$13(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #1795               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #33                 // class scalaz/EphemeralStream
       7: areturn

  public static final scalaz.EphemeralStream $anonfun$traverse1Impl$14(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #1795               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #33                 // class scalaz/EphemeralStream
       7: areturn

  public static final scalaz.TreeLoc $anonfun$traverse1Impl$12(scalaz.Tree, scalaz.OneAnd, scalaz.OneAnd);
    Code:
       0: new           #1149               // class scalaz/TreeLoc
       3: dup
       4: aload_0
       5: aload_1
       6: invokevirtual #1803               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       9: checkcast     #86                 // class scalaz/Tree
      12: astore_3
      13: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      16: pop
      17: aload_1
      18: invokedynamic #1832,  0           // InvokeDynamic #51:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      23: astore        5
      25: new           #36                 // class scalaz/EphemeralStream$ConsWrap
      28: dup
      29: aload         5
      31: invokespecial #1812               // Method scalaz/EphemeralStream$ConsWrap."<init>":(Lscala/Function0;)V
      34: aconst_null
      35: astore        5
      37: aload_3
      38: invokevirtual #1815               // Method scalaz/EphemeralStream$ConsWrap.$hash$hash$colon$colon:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
      41: aload_2
      42: invokevirtual #1803               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      45: checkcast     #86                 // class scalaz/Tree
      48: astore        4
      50: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      53: pop
      54: aload_2
      55: invokedynamic #1836,  0           // InvokeDynamic #52:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      60: astore        6
      62: new           #36                 // class scalaz/EphemeralStream$ConsWrap
      65: dup
      66: aload         6
      68: invokespecial #1812               // Method scalaz/EphemeralStream$ConsWrap."<init>":(Lscala/Function0;)V
      71: aconst_null
      72: astore        6
      74: aload         4
      76: invokevirtual #1815               // Method scalaz/EphemeralStream$ConsWrap.$hash$hash$colon$colon:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
      79: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      82: pop
      83: new           #27                 // class scalaz/EphemeralStream$$anon$4
      86: dup
      87: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
      90: invokespecial #1283               // Method scalaz/TreeLoc."<init>":(Lscalaz/Tree;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;)V
      93: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$15(scalaz.TreeLoc, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_3
      11: getstatic     #1627               // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
      14: pop
      15: getstatic     #1632               // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
      18: pop
      19: aload_3
      20: invokevirtual #1635               // Method scalaz/Tree.subForest:()Lscalaz/EphemeralStream;
      23: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
      26: ifeq          51
      29: aload_2
      30: aload_1
      31: aload_3
      32: invokevirtual #1157               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
      35: invokeinterface #1637,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: invokedynamic #1646,  0           // InvokeDynamic #38:apply:()Lscala/Function1;
      45: invokeinterface #1648,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      50: areturn
      51: aload_2
      52: aload_3
      53: aload_1
      54: invokedynamic #1653,  0           // InvokeDynamic #39:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      59: aload_3
      60: aload_1
      61: aload_2
      62: invokedynamic #1661,  0           // InvokeDynamic #40:apply:(Lscalaz/Tree;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
      67: invokedynamic #1668,  0           // InvokeDynamic #41:apply:()Lscala/Function2;
      72: invokeinterface #1572,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      77: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$16(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$17(scalaz.TreeLocInstances$$anon$1, scala.Tuple3, scalaz.EphemeralStream, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: getfield      #1789               // Field ParentsT1:Lscalaz/Traverse1;
       4: getstatic     #1440               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       7: pop
       8: getstatic     #1443               // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
      11: aload_1
      12: aload_2
      13: invokevirtual #1446               // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
      16: aload_3
      17: aload         4
      19: invokeinterface #1448,  4         // InterfaceMethod scalaz/Traverse1.traverse1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      24: areturn

  public static final scalaz.EphemeralStream $anonfun$traverse1Impl$19(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #1795               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #33                 // class scalaz/EphemeralStream
       7: areturn

  public static final scalaz.EphemeralStream $anonfun$traverse1Impl$20(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #1795               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #33                 // class scalaz/EphemeralStream
       7: areturn

  public static final scalaz.TreeLoc $anonfun$traverse1Impl$18(scalaz.Tree, scalaz.OneAnd, scalaz.OneAnd);
    Code:
       0: new           #1149               // class scalaz/TreeLoc
       3: dup
       4: aload_0
       5: aload_1
       6: invokevirtual #1803               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       9: checkcast     #86                 // class scalaz/Tree
      12: astore_3
      13: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      16: pop
      17: aload_1
      18: invokedynamic #1846,  0           // InvokeDynamic #53:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      23: astore        5
      25: new           #36                 // class scalaz/EphemeralStream$ConsWrap
      28: dup
      29: aload         5
      31: invokespecial #1812               // Method scalaz/EphemeralStream$ConsWrap."<init>":(Lscala/Function0;)V
      34: aconst_null
      35: astore        5
      37: aload_3
      38: invokevirtual #1815               // Method scalaz/EphemeralStream$ConsWrap.$hash$hash$colon$colon:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
      41: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      44: pop
      45: new           #27                 // class scalaz/EphemeralStream$$anon$4
      48: dup
      49: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
      52: aload_2
      53: invokevirtual #1803               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      56: checkcast     #1450               // class scala/Tuple3
      59: astore        4
      61: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      64: pop
      65: aload_2
      66: invokedynamic #1850,  0           // InvokeDynamic #54:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      71: astore        6
      73: new           #36                 // class scalaz/EphemeralStream$ConsWrap
      76: dup
      77: aload         6
      79: invokespecial #1812               // Method scalaz/EphemeralStream$ConsWrap."<init>":(Lscala/Function0;)V
      82: aconst_null
      83: astore        6
      85: aload         4
      87: invokevirtual #1815               // Method scalaz/EphemeralStream$ConsWrap.$hash$hash$colon$colon:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
      90: invokespecial #1283               // Method scalaz/TreeLoc."<init>":(Lscalaz/Tree;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;)V
      93: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$21(scalaz.TreeLoc, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_3
      11: getstatic     #1627               // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
      14: pop
      15: getstatic     #1632               // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
      18: pop
      19: aload_3
      20: invokevirtual #1635               // Method scalaz/Tree.subForest:()Lscalaz/EphemeralStream;
      23: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
      26: ifeq          51
      29: aload_2
      30: aload_1
      31: aload_3
      32: invokevirtual #1157               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
      35: invokeinterface #1637,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: invokedynamic #1646,  0           // InvokeDynamic #38:apply:()Lscala/Function1;
      45: invokeinterface #1648,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      50: areturn
      51: aload_2
      52: aload_3
      53: aload_1
      54: invokedynamic #1653,  0           // InvokeDynamic #39:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      59: aload_3
      60: aload_1
      61: aload_2
      62: invokedynamic #1661,  0           // InvokeDynamic #40:apply:(Lscalaz/Tree;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
      67: invokedynamic #1668,  0           // InvokeDynamic #41:apply:()Lscala/Function2;
      72: invokeinterface #1572,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      77: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$22(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.EphemeralStream $anonfun$traverse1Impl$24(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #1795               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #33                 // class scalaz/EphemeralStream
       7: areturn

  public static final scalaz.TreeLoc $anonfun$traverse1Impl$23(scalaz.Tree, scalaz.OneAnd);
    Code:
       0: new           #1149               // class scalaz/TreeLoc
       3: dup
       4: aload_0
       5: aload_1
       6: invokevirtual #1803               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       9: checkcast     #86                 // class scalaz/Tree
      12: astore_2
      13: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      16: pop
      17: aload_1
      18: invokedynamic #1856,  0           // InvokeDynamic #55:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      23: astore_3
      24: new           #36                 // class scalaz/EphemeralStream$ConsWrap
      27: dup
      28: aload_3
      29: invokespecial #1812               // Method scalaz/EphemeralStream$ConsWrap."<init>":(Lscala/Function0;)V
      32: aconst_null
      33: astore_3
      34: aload_2
      35: invokevirtual #1815               // Method scalaz/EphemeralStream$ConsWrap.$hash$hash$colon$colon:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
      38: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      41: pop
      42: new           #27                 // class scalaz/EphemeralStream$$anon$4
      45: dup
      46: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
      49: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      52: pop
      53: new           #27                 // class scalaz/EphemeralStream$$anon$4
      56: dup
      57: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
      60: invokespecial #1283               // Method scalaz/TreeLoc."<init>":(Lscalaz/Tree;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;)V
      63: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$25(scalaz.TreeLoc, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_3
      11: getstatic     #1627               // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
      14: pop
      15: getstatic     #1632               // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
      18: pop
      19: aload_3
      20: invokevirtual #1635               // Method scalaz/Tree.subForest:()Lscalaz/EphemeralStream;
      23: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
      26: ifeq          51
      29: aload_2
      30: aload_1
      31: aload_3
      32: invokevirtual #1157               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
      35: invokeinterface #1637,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: invokedynamic #1646,  0           // InvokeDynamic #38:apply:()Lscala/Function1;
      45: invokeinterface #1648,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      50: areturn
      51: aload_2
      52: aload_3
      53: aload_1
      54: invokedynamic #1653,  0           // InvokeDynamic #39:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      59: aload_3
      60: aload_1
      61: aload_2
      62: invokedynamic #1661,  0           // InvokeDynamic #40:apply:(Lscalaz/Tree;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
      67: invokedynamic #1668,  0           // InvokeDynamic #41:apply:()Lscala/Function2;
      72: invokeinterface #1572,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      77: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$26(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$27(scalaz.TreeLocInstances$$anon$1, scala.Tuple3, scalaz.EphemeralStream, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: getfield      #1789               // Field ParentsT1:Lscalaz/Traverse1;
       4: getstatic     #1440               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       7: pop
       8: getstatic     #1443               // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
      11: aload_1
      12: aload_2
      13: invokevirtual #1446               // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
      16: aload_3
      17: aload         4
      19: invokeinterface #1448,  4         // InterfaceMethod scalaz/Traverse1.traverse1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      24: areturn

  public static final scalaz.EphemeralStream $anonfun$traverse1Impl$29(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #1795               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #33                 // class scalaz/EphemeralStream
       7: areturn

  public static final scalaz.EphemeralStream $anonfun$traverse1Impl$30(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #1795               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #33                 // class scalaz/EphemeralStream
       7: areturn

  public static final scalaz.TreeLoc $anonfun$traverse1Impl$28(scalaz.Tree, scalaz.OneAnd, scalaz.OneAnd);
    Code:
       0: new           #1149               // class scalaz/TreeLoc
       3: dup
       4: aload_0
       5: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
       8: pop
       9: new           #27                 // class scalaz/EphemeralStream$$anon$4
      12: dup
      13: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
      16: aload_1
      17: invokevirtual #1803               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      20: checkcast     #86                 // class scalaz/Tree
      23: astore_3
      24: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      27: pop
      28: aload_1
      29: invokedynamic #1867,  0           // InvokeDynamic #56:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      34: astore        5
      36: new           #36                 // class scalaz/EphemeralStream$ConsWrap
      39: dup
      40: aload         5
      42: invokespecial #1812               // Method scalaz/EphemeralStream$ConsWrap."<init>":(Lscala/Function0;)V
      45: aconst_null
      46: astore        5
      48: aload_3
      49: invokevirtual #1815               // Method scalaz/EphemeralStream$ConsWrap.$hash$hash$colon$colon:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
      52: aload_2
      53: invokevirtual #1803               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      56: checkcast     #1450               // class scala/Tuple3
      59: astore        4
      61: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      64: pop
      65: aload_2
      66: invokedynamic #1871,  0           // InvokeDynamic #57:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      71: astore        6
      73: new           #36                 // class scalaz/EphemeralStream$ConsWrap
      76: dup
      77: aload         6
      79: invokespecial #1812               // Method scalaz/EphemeralStream$ConsWrap."<init>":(Lscala/Function0;)V
      82: aconst_null
      83: astore        6
      85: aload         4
      87: invokevirtual #1815               // Method scalaz/EphemeralStream$ConsWrap.$hash$hash$colon$colon:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
      90: invokespecial #1283               // Method scalaz/TreeLoc."<init>":(Lscalaz/Tree;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;)V
      93: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$31(scalaz.TreeLoc, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_3
      11: getstatic     #1627               // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
      14: pop
      15: getstatic     #1632               // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
      18: pop
      19: aload_3
      20: invokevirtual #1635               // Method scalaz/Tree.subForest:()Lscalaz/EphemeralStream;
      23: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
      26: ifeq          51
      29: aload_2
      30: aload_1
      31: aload_3
      32: invokevirtual #1157               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
      35: invokeinterface #1637,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: invokedynamic #1646,  0           // InvokeDynamic #38:apply:()Lscala/Function1;
      45: invokeinterface #1648,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      50: areturn
      51: aload_2
      52: aload_3
      53: aload_1
      54: invokedynamic #1653,  0           // InvokeDynamic #39:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      59: aload_3
      60: aload_1
      61: aload_2
      62: invokedynamic #1661,  0           // InvokeDynamic #40:apply:(Lscalaz/Tree;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
      67: invokedynamic #1668,  0           // InvokeDynamic #41:apply:()Lscala/Function2;
      72: invokeinterface #1572,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      77: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$32(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.EphemeralStream $anonfun$traverse1Impl$34(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #1795               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #33                 // class scalaz/EphemeralStream
       7: areturn

  public static final scalaz.TreeLoc $anonfun$traverse1Impl$33(scalaz.Tree, scalaz.OneAnd);
    Code:
       0: new           #1149               // class scalaz/TreeLoc
       3: dup
       4: aload_0
       5: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
       8: pop
       9: new           #27                 // class scalaz/EphemeralStream$$anon$4
      12: dup
      13: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
      16: aload_1
      17: invokevirtual #1803               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      20: checkcast     #86                 // class scalaz/Tree
      23: astore_2
      24: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      27: pop
      28: aload_1
      29: invokedynamic #1877,  0           // InvokeDynamic #58:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      34: astore_3
      35: new           #36                 // class scalaz/EphemeralStream$ConsWrap
      38: dup
      39: aload_3
      40: invokespecial #1812               // Method scalaz/EphemeralStream$ConsWrap."<init>":(Lscala/Function0;)V
      43: aconst_null
      44: astore_3
      45: aload_2
      46: invokevirtual #1815               // Method scalaz/EphemeralStream$ConsWrap.$hash$hash$colon$colon:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
      49: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      52: pop
      53: new           #27                 // class scalaz/EphemeralStream$$anon$4
      56: dup
      57: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
      60: invokespecial #1283               // Method scalaz/TreeLoc."<init>":(Lscalaz/Tree;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;)V
      63: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$35(scalaz.TreeLoc, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: invokevirtual #1153               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_3
      11: getstatic     #1627               // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
      14: pop
      15: getstatic     #1632               // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
      18: pop
      19: aload_3
      20: invokevirtual #1635               // Method scalaz/Tree.subForest:()Lscalaz/EphemeralStream;
      23: invokevirtual #1232               // Method scalaz/EphemeralStream.isEmpty:()Z
      26: ifeq          51
      29: aload_2
      30: aload_1
      31: aload_3
      32: invokevirtual #1157               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
      35: invokeinterface #1637,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: invokedynamic #1646,  0           // InvokeDynamic #38:apply:()Lscala/Function1;
      45: invokeinterface #1648,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      50: areturn
      51: aload_2
      52: aload_3
      53: aload_1
      54: invokedynamic #1653,  0           // InvokeDynamic #39:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      59: aload_3
      60: aload_1
      61: aload_2
      62: invokedynamic #1661,  0           // InvokeDynamic #40:apply:(Lscalaz/Tree;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
      67: invokedynamic #1668,  0           // InvokeDynamic #41:apply:()Lscala/Function2;
      72: invokeinterface #1572,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      77: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$36(scalaz.TreeLocInstances$$anon$1, scala.Tuple3, scalaz.EphemeralStream, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: getfield      #1789               // Field ParentsT1:Lscalaz/Traverse1;
       4: getstatic     #1440               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       7: pop
       8: getstatic     #1443               // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
      11: aload_1
      12: aload_2
      13: invokevirtual #1446               // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
      16: aload_3
      17: aload         4
      19: invokeinterface #1448,  4         // InterfaceMethod scalaz/Traverse1.traverse1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      24: areturn

  public static final scalaz.EphemeralStream $anonfun$traverse1Impl$38(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #1795               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #33                 // class scalaz/EphemeralStream
       7: areturn

  public static final scalaz.TreeLoc $anonfun$traverse1Impl$37(scalaz.Tree, scalaz.OneAnd);
    Code:
       0: new           #1149               // class scalaz/TreeLoc
       3: dup
       4: aload_0
       5: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
       8: pop
       9: new           #27                 // class scalaz/EphemeralStream$$anon$4
      12: dup
      13: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
      16: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      19: pop
      20: new           #27                 // class scalaz/EphemeralStream$$anon$4
      23: dup
      24: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
      27: aload_1
      28: invokevirtual #1803               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      31: checkcast     #1450               // class scala/Tuple3
      34: astore_2
      35: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      38: pop
      39: aload_1
      40: invokedynamic #1885,  0           // InvokeDynamic #59:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      45: astore_3
      46: new           #36                 // class scalaz/EphemeralStream$ConsWrap
      49: dup
      50: aload_3
      51: invokespecial #1812               // Method scalaz/EphemeralStream$ConsWrap."<init>":(Lscala/Function0;)V
      54: aconst_null
      55: astore_3
      56: aload_2
      57: invokevirtual #1815               // Method scalaz/EphemeralStream$ConsWrap.$hash$hash$colon$colon:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
      60: invokespecial #1283               // Method scalaz/TreeLoc."<init>":(Lscalaz/Tree;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;)V
      63: areturn

  public static final scalaz.TreeLoc $anonfun$traverse1Impl$39(scalaz.Tree);
    Code:
       0: new           #1149               // class scalaz/TreeLoc
       3: dup
       4: aload_0
       5: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
       8: pop
       9: new           #27                 // class scalaz/EphemeralStream$$anon$4
      12: dup
      13: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
      16: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      19: pop
      20: new           #27                 // class scalaz/EphemeralStream$$anon$4
      23: dup
      24: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
      27: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      30: pop
      31: new           #27                 // class scalaz/EphemeralStream$$anon$4
      34: dup
      35: invokespecial #1240               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
      38: invokespecial #1283               // Method scalaz/TreeLoc."<init>":(Lscalaz/Tree;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;)V
      41: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$2(scalaz.TreeLocInstances$$anon$1, scalaz.TreeLoc, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: getfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
       4: aload_1
       5: invokevirtual #1268               // Method scalaz/TreeLoc.rights:()Lscalaz/EphemeralStream;
       8: aload_2
       9: invokedynamic #1894,  0           // InvokeDynamic #60:apply:(Ljava/lang/Object;)Lscala/Function0;
      14: aload_3
      15: invokeinterface #1895,  4         // InterfaceMethod scalaz/Traverse.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      20: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$1(scalaz.TreeLocInstances$$anon$1, scalaz.TreeLoc, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: getfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
       4: aload_1
       5: invokevirtual #1212               // Method scalaz/TreeLoc.lefts:()Lscalaz/EphemeralStream;
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokedynamic #1899,  0           // InvokeDynamic #61:apply:(Lscalaz/TreeLocInstances$$anon$1;Lscalaz/TreeLoc;Ljava/lang/Object;Lscala/Function2;)Lscala/Function0;
      17: aload_3
      18: invokeinterface #1895,  4         // InterfaceMethod scalaz/Traverse.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      23: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$5(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$4(scalaz.TreeLocInstances$$anon$1, scalaz.TreeLoc, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: getfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
       4: aload_1
       5: invokevirtual #1212               // Method scalaz/TreeLoc.lefts:()Lscalaz/EphemeralStream;
       8: aload_2
       9: invokedynamic #1905,  0           // InvokeDynamic #62:apply:(Ljava/lang/Object;)Lscala/Function0;
      14: aload_3
      15: invokeinterface #1895,  4         // InterfaceMethod scalaz/Traverse.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      20: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$6(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public scalaz.TreeLocInstances$$anon$1(scalaz.TreeLocInstances);
    Code:
       0: aload_0
       1: invokespecial #1909               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #1913               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #1916               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #1919               // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      16: aload_0
      17: invokestatic  #1922               // InterfaceMethod scalaz/Comonad.$init$:(Lscalaz/Comonad;)V
      20: aload_0
      21: invokestatic  #1925               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      24: aload_0
      25: invokestatic  #1928               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      28: aload_0
      29: invokestatic  #1931               // InterfaceMethod scalaz/Foldable1.$init$:(Lscalaz/Foldable1;)V
      32: aload_0
      33: invokestatic  #1934               // InterfaceMethod scalaz/Traverse1.$init$:(Lscalaz/Traverse1;)V
      36: aload_0
      37: getstatic     #1939               // Field scalaz/Traverse$.MODULE$:Lscalaz/Traverse$;
      40: pop
      41: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      44: invokevirtual #1704               // Method scalaz/EphemeralStream$.ephemeralStreamInstance:()Lscalaz/MonadPlus;
      47: checkcast     #73                 // class scalaz/Traverse
      50: getstatic     #1336               // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
      53: invokevirtual #1340               // Method scalaz/Tree$.treeInstance:()Lscalaz/Traverse1;
      56: invokeinterface #1941,  2         // InterfaceMethod scalaz/Traverse.compose:(Lscalaz/Traverse;)Lscalaz/Traverse;
      61: putfield      #1345               // Field scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
      64: aload_0
      65: getstatic     #1946               // Field scalaz/Traverse1$.MODULE$:Lscalaz/Traverse1$;
      68: pop
      69: getstatic     #1440               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
      72: pop
      73: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      76: invokevirtual #1704               // Method scalaz/EphemeralStream$.ephemeralStreamInstance:()Lscalaz/MonadPlus;
      79: checkcast     #73                 // class scalaz/Traverse
      82: astore_2
      83: new           #69                 // class scalaz/OneAndInstances0$$anon$11
      86: dup
      87: aconst_null
      88: aload_2
      89: invokespecial #1949               // Method scalaz/OneAndInstances0$$anon$11."<init>":(Lscalaz/OneAndInstances0;Lscalaz/Traverse;)V
      92: aconst_null
      93: astore_2
      94: getstatic     #1336               // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
      97: invokevirtual #1340               // Method scalaz/Tree$.treeInstance:()Lscalaz/Traverse1;
     100: astore        5
     102: astore        4
     104: new           #79                 // class scalaz/Traverse1$$anon$3
     107: dup
     108: aload         4
     110: aload         5
     112: invokespecial #1952               // Method scalaz/Traverse1$$anon$3."<init>":(Lscalaz/Traverse1;Lscalaz/Traverse1;)V
     115: aconst_null
     116: astore        4
     118: aconst_null
     119: astore        5
     121: putfield      #1435               // Field scalaz$TreeLocInstances$$anon$$ForestT1:Lscalaz/Traverse1;
     124: aload_0
     125: new           #91                 // class scalaz/TreeLocInstances$$anon$1$$anon$2
     128: dup
     129: aload_0
     130: invokespecial #1955               // Method scalaz/TreeLocInstances$$anon$1$$anon$2."<init>":(Lscalaz/TreeLocInstances$$anon$1;)V
     133: putfield      #1957               // Field ParentT:Lscalaz/Traverse1;
     136: aload_0
     137: getstatic     #1939               // Field scalaz/Traverse$.MODULE$:Lscalaz/Traverse$;
     140: pop
     141: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     144: invokevirtual #1704               // Method scalaz/EphemeralStream$.ephemeralStreamInstance:()Lscalaz/MonadPlus;
     147: checkcast     #73                 // class scalaz/Traverse
     150: aload_0
     151: getfield      #1957               // Field ParentT:Lscalaz/Traverse1;
     154: invokeinterface #1941,  2         // InterfaceMethod scalaz/Traverse.compose:(Lscalaz/Traverse;)Lscalaz/Traverse;
     159: putfield      #1348               // Field ParentsT:Lscalaz/Traverse;
     162: aload_0
     163: getstatic     #1946               // Field scalaz/Traverse1$.MODULE$:Lscalaz/Traverse1$;
     166: pop
     167: getstatic     #1440               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
     170: pop
     171: getstatic     #1237               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     174: invokevirtual #1704               // Method scalaz/EphemeralStream$.ephemeralStreamInstance:()Lscalaz/MonadPlus;
     177: checkcast     #73                 // class scalaz/Traverse
     180: astore_3
     181: new           #69                 // class scalaz/OneAndInstances0$$anon$11
     184: dup
     185: aconst_null
     186: aload_3
     187: invokespecial #1949               // Method scalaz/OneAndInstances0$$anon$11."<init>":(Lscalaz/OneAndInstances0;Lscalaz/Traverse;)V
     190: aconst_null
     191: astore_3
     192: aload_0
     193: getfield      #1957               // Field ParentT:Lscalaz/Traverse1;
     196: astore        7
     198: astore        6
     200: new           #79                 // class scalaz/Traverse1$$anon$3
     203: dup
     204: aload         6
     206: aload         7
     208: invokespecial #1952               // Method scalaz/Traverse1$$anon$3."<init>":(Lscalaz/Traverse1;Lscalaz/Traverse1;)V
     211: aconst_null
     212: astore        6
     214: aconst_null
     215: astore        7
     217: putfield      #1789               // Field ParentsT1:Lscalaz/Traverse1;
     220: invokestatic  #1962               // Method scala/runtime/Statics.releaseFence:()V
     223: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #1979,  0           // InvokeDynamic #63:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
