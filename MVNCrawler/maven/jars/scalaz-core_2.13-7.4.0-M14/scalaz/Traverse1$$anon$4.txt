Compiled from "Traverse1.scala"
public final class scalaz.Traverse1$$anon$4 implements scalaz.Traverse1<F>.Traverse1Law {
  private final scalaz.Traverse1 $outer;

  public <A, B> boolean identityTraverse1(F, scala.Function1<A, B>, scalaz.Equal<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #41                 // InterfaceMethod scalaz/Traverse1$Traverse1Law.identityTraverse1$:(Lscalaz/Traverse1$Traverse1Law;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Z
       7: ireturn

  public <N, M, A, B, C> boolean sequentialFusion1(F, scala.Function1<A, M>, scala.Function1<B, N>, scalaz.Apply<N>, scalaz.Apply<M>, scalaz.Equal<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #58                 // InterfaceMethod scalaz/Traverse1$Traverse1Law.sequentialFusion1$:(Lscalaz/Traverse1$Traverse1Law;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Apply;Lscalaz/Apply;Lscalaz/Equal;)Z
      13: ireturn

  public <N, M, A> boolean naturality1(scalaz.NaturalTransformation<M, N>, F, scalaz.Apply<N>, scalaz.Apply<M>, scalaz.Equal<N>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #69                 // InterfaceMethod scalaz/Traverse1$Traverse1Law.naturality1$:(Lscalaz/Traverse1$Traverse1Law;Lscalaz/NaturalTransformation;Ljava/lang/Object;Lscalaz/Apply;Lscalaz/Apply;Lscalaz/Equal;)Z
      11: ireturn

  public <N, M, A, B> boolean parallelFusion1(F, scala.Function1<A, M>, scala.Function1<A, N>, scalaz.Apply<N>, scalaz.Apply<M>, scalaz.Equal<scala.Tuple2<M, N>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #76                 // InterfaceMethod scalaz/Traverse1$Traverse1Law.parallelFusion1$:(Lscalaz/Traverse1$Traverse1Law;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Apply;Lscalaz/Apply;Lscalaz/Equal;)Z
      13: ireturn

  public <A, B> boolean identityTraverse(java.lang.Object, scala.Function1<A, B>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #82                 // InterfaceMethod scalaz/Traverse$TraverseLaw.identityTraverse$:(Lscalaz/Traverse$TraverseLaw;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Z
       7: ireturn

  public <N, M, A, B, C> boolean sequentialFusion(java.lang.Object, scala.Function1<A, M>, scala.Function1<B, N>, scalaz.Applicative<N>, scalaz.Applicative<M>, scalaz.Equal<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #89                 // InterfaceMethod scalaz/Traverse$TraverseLaw.sequentialFusion$:(Lscalaz/Traverse$TraverseLaw;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Applicative;Lscalaz/Equal;)Z
      13: ireturn

  public <G, A> boolean purity(java.lang.Object, scalaz.Applicative<G>, scalaz.Equal<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #99                 // InterfaceMethod scalaz/Traverse$TraverseLaw.purity$:(Lscalaz/Traverse$TraverseLaw;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Equal;)Z
       7: ireturn

  public <N, M, A> boolean naturality(scalaz.NaturalTransformation<M, N>, java.lang.Object, scalaz.Applicative<N>, scalaz.Applicative<M>, scalaz.Equal<N>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #106                // InterfaceMethod scalaz/Traverse$TraverseLaw.naturality$:(Lscalaz/Traverse$TraverseLaw;Lscalaz/NaturalTransformation;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Applicative;Lscalaz/Equal;)Z
      11: ireturn

  public <N, M, A, B> boolean parallelFusion(java.lang.Object, scala.Function1<A, M>, scala.Function1<A, N>, scalaz.Applicative<N>, scalaz.Applicative<M>, scalaz.Equal<scala.Tuple2<M, N>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #111                // InterfaceMethod scalaz/Traverse$TraverseLaw.parallelFusion$:(Lscalaz/Traverse$TraverseLaw;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Applicative;Lscalaz/Equal;)Z
      13: ireturn

  public <A> boolean identity(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #119                // InterfaceMethod scalaz/Functor$FunctorLaw.identity$:(Lscalaz/Functor$FunctorLaw;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B, C> boolean composite(java.lang.Object, scala.Function1<A, B>, scala.Function1<B, C>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #129                // InterfaceMethod scalaz/Functor$FunctorLaw.composite$:(Lscalaz/Functor$FunctorLaw;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Equal;)Z
       9: ireturn

  public <A> boolean invariantIdentity(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #134                // InterfaceMethod scalaz/InvariantFunctor$InvariantFunctorLaw.invariantIdentity$:(Lscalaz/InvariantFunctor$InvariantFunctorLaw;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B, C> boolean invariantComposite(java.lang.Object, scala.Function1<A, B>, scala.Function1<B, A>, scala.Function1<B, C>, scala.Function1<C, B>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #143                // InterfaceMethod scalaz/InvariantFunctor$InvariantFunctorLaw.invariantComposite$:(Lscalaz/InvariantFunctor$InvariantFunctorLaw;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscalaz/Equal;)Z
      13: ireturn

  public scalaz.Traverse1 scalaz$Traverse1$Traverse1Law$$$outer();
    Code:
       0: aload_0
       1: getfield      #147                // Field $outer:Lscalaz/Traverse1;
       4: areturn

  public scalaz.Traverse scalaz$Traverse$TraverseLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #147                // Field $outer:Lscalaz/Traverse1;
       4: areturn

  public scalaz.Functor scalaz$Functor$FunctorLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #147                // Field $outer:Lscalaz/Traverse1;
       4: areturn

  public scalaz.InvariantFunctor scalaz$InvariantFunctor$InvariantFunctorLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #147                // Field $outer:Lscalaz/Traverse1;
       4: areturn

  public scalaz.Traverse1$$anon$4(scalaz.Traverse1);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #147                // Field $outer:Lscalaz/Traverse1;
      11: aload_0
      12: invokespecial #158                // Method java/lang/Object."<init>":()V
      15: return
}
