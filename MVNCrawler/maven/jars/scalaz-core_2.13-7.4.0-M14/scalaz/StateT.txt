Compiled from "toplevel.scala"
public final class scalaz.StateT {
  public static <F, S> scalaz.IndexedStateT<S, S, F, scala.runtime.BoxedUnit> modify(scala.Function1<S, S>, scalaz.Monad<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #21                 // Method scalaz/StateT$.modify:(Lscala/Function1;Lscalaz/Monad;)Lscalaz/IndexedStateT;
       8: areturn

  public static <F, S> scalaz.IndexedStateT<S, S, F, scala.runtime.BoxedUnit> put(S, scalaz.Monad<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #30                 // Method scalaz/StateT$.put:(Ljava/lang/Object;Lscalaz/Monad;)Lscalaz/IndexedStateT;
       8: areturn

  public static <F, S, A> scalaz.IndexedStateT<S, S, F, A> gets(scala.Function1<S, A>, scalaz.Monad<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #36                 // Method scalaz/StateT$.gets:(Lscala/Function1;Lscalaz/Monad;)Lscalaz/IndexedStateT;
       8: areturn

  public static <F, S> scalaz.IndexedStateT<S, S, F, S> get(scalaz.Monad<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: invokevirtual #42                 // Method scalaz/StateT$.get:(Lscalaz/Monad;)Lscalaz/IndexedStateT;
       7: areturn

  public static <F, G, S, A> scalaz.NaturalTransformation<?, ?> hoist(scalaz.NaturalTransformation<F, G>, scalaz.Monad<F>, scalaz.Monad<G>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #50                 // Method scalaz/StateT$.hoist:(Lscalaz/NaturalTransformation;Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/NaturalTransformation;
       9: areturn

  public static <F, S, A> scalaz.IndexedStateT<S, S, F, A> liftM(F, scalaz.Monad<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #57                 // Method scalaz/StateT$.liftM:(Ljava/lang/Object;Lscalaz/Monad;)Lscalaz/IndexedStateT;
       8: areturn

  public static <S, F, A> scalaz.IndexedStateT<S, S, F, A> apply(scala.Function1<S, F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: invokevirtual #62                 // Method scalaz/StateT$.apply:(Lscala/Function1;)Lscalaz/IndexedStateT;
       7: areturn

  public static <S, F, A> scalaz.IndexedStateT<S, S, F, A> stateT(A, scalaz.Applicative<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #69                 // Method scalaz/StateT$.stateT:(Ljava/lang/Object;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       8: areturn

  public static <S, F, A> scalaz.IndexedStateT<S, S, F, A> constantStateT(A, scala.Function0<S>, scalaz.Applicative<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #75                 // Method scalaz/StateT$.constantStateT:(Ljava/lang/Object;Lscala/Function0;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       9: areturn

  public static <S1, S2, F, A> scalaz.IndexedStateT<S1, S2, F, A> constantIndexedStateT(A, scala.Function0<S2>, scalaz.Applicative<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #80                 // Method scalaz/StateT$.constantIndexedStateT:(Ljava/lang/Object;Lscala/Function0;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       9: areturn

  public static <S2, F, A> scalaz.IsContravariant<?> contravariantS1();
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: invokevirtual #85                 // Method scalaz/StateT$.contravariantS1:()Lscalaz/IsContravariant;
       6: areturn

  public static <S> scalaz.MonadState<?, S> stateMonad();
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: invokevirtual #90                 // Method scalaz/StateT$.stateMonad:()Lscalaz/MonadState;
       6: areturn

  public static <S> scalaz.Comonad<?> stateComonad(scalaz.Monoid<S>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: invokevirtual #96                 // Method scalaz/StateT$.stateComonad:(Lscalaz/Monoid;)Lscalaz/Comonad;
       7: areturn

  public static <S> scalaz.Hoist<?> StateMonadTrans();
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: invokevirtual #102                // Method scalaz/StateT$.StateMonadTrans:()Lscalaz/Hoist;
       6: areturn

  public static <S, F> scalaz.MonadPlus<?> stateTMonadPlus(scalaz.MonadPlus<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: invokevirtual #108                // Method scalaz/StateT$.stateTMonadPlus:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus;
       7: areturn

  public static <S, F> scalaz.MonadState<?, S> stateTMonadState(scalaz.Applicative<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: invokevirtual #114                // Method scalaz/StateT$.stateTMonadState:(Lscalaz/Applicative;)Lscalaz/MonadState;
       7: areturn

  public static <S, F> scalaz.Decidable<?> stateTDecidable(scalaz.Decidable<F>, scalaz.Bind<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #120                // Method scalaz/StateT$.stateTDecidable:(Lscalaz/Decidable;Lscalaz/Bind;)Lscalaz/Decidable;
       8: areturn

  public static <S, F, E> scalaz.MonadError<?, E> stateTMonadError(scalaz.MonadError<F, E>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: invokevirtual #127                // Method scalaz/StateT$.stateTMonadError:(Lscalaz/MonadError;)Lscalaz/MonadError;
       7: areturn

  public static <S, F> scalaz.BindRec<?> stateTBindRec(scalaz.Applicative<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: invokevirtual #133                // Method scalaz/StateT$.stateTBindRec:(Lscalaz/Applicative;)Lscalaz/BindRec;
       7: areturn

  public static <S, F> scalaz.Divisible<?> stateTDivisible(scalaz.Divisible<F>, scalaz.Bind<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #138                // Method scalaz/StateT$.stateTDivisible:(Lscalaz/Divisible;Lscalaz/Bind;)Lscalaz/Divisible;
       8: areturn

  public static <F, S1, S2> scalaz.Plus<?> indexedStateTPlus(scalaz.Bind<F>, scalaz.Plus<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #144                // Method scalaz/StateT$.indexedStateTPlus:(Lscalaz/Bind;Lscalaz/Plus;)Lscalaz/Plus;
       8: areturn

  public static <S1, S2, F> scalaz.Functor<?> indexedStateTFunctorRight(scalaz.Applicative<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: invokevirtual #150                // Method scalaz/StateT$.indexedStateTFunctorRight:(Lscalaz/Applicative;)Lscalaz/Functor;
       7: areturn

  public static <S1, F> scalaz.Bifunctor<?> indexedStateTBifunctor(scalaz.Applicative<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: invokevirtual #155                // Method scalaz/StateT$.indexedStateTBifunctor:(Lscalaz/Applicative;)Lscalaz/Bifunctor;
       7: areturn

  public static <S1, A0, F> scalaz.Functor<?> indexedStateTFunctorLeft(scalaz.Applicative<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: invokevirtual #159                // Method scalaz/StateT$.indexedStateTFunctorLeft:(Lscalaz/Applicative;)Lscalaz/Functor;
       7: areturn

  public static <S2, A0, F> scalaz.Contravariant<?> indexedStateTContravariant(scalaz.Applicative<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: invokevirtual #164                // Method scalaz/StateT$.indexedStateTContravariant:(Lscalaz/Applicative;)Lscalaz/Contravariant;
       7: areturn

  public static <S2, F> scalaz.Profunctor<?> indexedStateProfunctor(scalaz.Applicative<F>);
    Code:
       0: getstatic     #19                 // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: aload_0
       4: invokevirtual #169                // Method scalaz/StateT$.indexedStateProfunctor:(Lscalaz/Applicative;)Lscalaz/Profunctor;
       7: areturn
}
