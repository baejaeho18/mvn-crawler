Compiled from "CaseInsensitive.scala"
public final class scalaz.CaseInsensitiveInstances$$anon$2 implements scalaz.Monoid<scalaz.CaseInsensitive<A>> {
  private scalaz.syntax.MonoidSyntax<scalaz.CaseInsensitive<A>> monoidSyntax;

  private scalaz.syntax.SemigroupSyntax<scalaz.CaseInsensitive<A>> semigroupSyntax;

  private final scalaz.Monoid evidence$3$1;

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #44                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #65                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #74                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #78                 // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #85                 // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #90                 // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #97                 // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #104                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scalaz.CaseInsensitive<A>>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #111                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #116                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<scalaz.CaseInsensitive<A>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.CaseInsensitive<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #123                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.CaseInsensitive<A>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.CaseInsensitive<A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #128                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #135                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #142                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.CaseInsensitive<A>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #149                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<scalaz.CaseInsensitive<A>> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #153                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scalaz.CaseInsensitive<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.CaseInsensitive<A>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #161                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.CaseInsensitive<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #161                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.CaseInsensitive<A> zero();
    Code:
       0: getstatic     #173                // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       3: pop
       4: getstatic     #178                // Field scalaz/Monoid$.MODULE$:Lscalaz/Monoid$;
       7: pop
       8: aload_0
       9: getfield      #180                // Field evidence$3$1:Lscalaz/Monoid;
      12: invokeinterface #183,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      17: aload_0
      18: invokedynamic #200,  0            // InvokeDynamic #0:apply:(Lscalaz/CaseInsensitiveInstances$$anon$2;)Lscala/Function0;
      23: astore_2
      24: astore_1
      25: new           #20                 // class scalaz/CaseInsensitive$$anon$1
      28: dup
      29: aload_1
      30: aload_2
      31: invokespecial #204                // Method scalaz/CaseInsensitive$$anon$1."<init>":(Ljava/lang/Object;Lscala/Function0;)V
      34: areturn

  public scalaz.CaseInsensitive<A> append(scalaz.CaseInsensitive<A>, scala.Function0<scalaz.CaseInsensitive<A>>);
    Code:
       0: getstatic     #173                // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       3: pop
       4: getstatic     #215                // Field scalaz/Semigroup$.MODULE$:Lscalaz/Semigroup$;
       7: pop
       8: aload_0
       9: getfield      #180                // Field evidence$3$1:Lscalaz/Monoid;
      12: aload_1
      13: invokevirtual #220                // Method scalaz/CaseInsensitive.original:()Ljava/lang/Object;
      16: aload_2
      17: invokedynamic #228,  0            // InvokeDynamic #1:apply:(Lscala/Function0;)Lscala/Function0;
      22: invokeinterface #231,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokedynamic #239,  0            // InvokeDynamic #2:apply:(Lscalaz/CaseInsensitiveInstances$$anon$2;Lscalaz/CaseInsensitive;Lscala/Function0;)Lscala/Function0;
      35: astore        4
      37: astore_3
      38: new           #20                 // class scalaz/CaseInsensitive$$anon$1
      41: dup
      42: aload_3
      43: aload         4
      45: invokespecial #204                // Method scalaz/CaseInsensitive$$anon$1."<init>":(Ljava/lang/Object;Lscala/Function0;)V
      48: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #217                // class scalaz/CaseInsensitive
       5: aload_2
       6: invokevirtual #244                // Method append:(Lscalaz/CaseInsensitive;Lscala/Function0;)Lscalaz/CaseInsensitive;
       9: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #246                // Method zero:()Lscalaz/CaseInsensitive;
       4: areturn

  public static final java.lang.Object $anonfun$zero$1(scalaz.CaseInsensitiveInstances$$anon$2);
    Code:
       0: getstatic     #178                // Field scalaz/Monoid$.MODULE$:Lscalaz/Monoid$;
       3: pop
       4: aload_0
       5: getfield      #180                // Field evidence$3$1:Lscalaz/Monoid;
       8: invokeinterface #183,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      13: areturn

  public static final java.lang.Object $anonfun$append$1(scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #252,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #217                // class scalaz/CaseInsensitive
       9: invokevirtual #220                // Method scalaz/CaseInsensitive.original:()Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$append$3(scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #252,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #217                // class scalaz/CaseInsensitive
       9: invokevirtual #256                // Method scalaz/CaseInsensitive.foldedCase:()Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$append$2(scalaz.CaseInsensitiveInstances$$anon$2, scalaz.CaseInsensitive, scala.Function0);
    Code:
       0: getstatic     #215                // Field scalaz/Semigroup$.MODULE$:Lscalaz/Semigroup$;
       3: pop
       4: aload_0
       5: getfield      #180                // Field evidence$3$1:Lscalaz/Monoid;
       8: aload_1
       9: invokevirtual #256                // Method scalaz/CaseInsensitive.foldedCase:()Ljava/lang/Object;
      12: aload_2
      13: invokedynamic #261,  0            // InvokeDynamic #3:apply:(Lscala/Function0;)Lscala/Function0;
      18: invokeinterface #231,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      23: areturn

  public scalaz.CaseInsensitiveInstances$$anon$2(scalaz.CaseInsensitiveInstances, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #180                // Field evidence$3$1:Lscalaz/Monoid;
       5: aload_0
       6: invokespecial #266                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #270                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      13: aload_0
      14: invokestatic  #273                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      17: invokestatic  #278                // Method scala/runtime/Statics.releaseFence:()V
      20: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #291,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
