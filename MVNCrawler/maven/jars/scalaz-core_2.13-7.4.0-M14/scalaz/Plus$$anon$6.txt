Compiled from "Plus.scala"
public final class scalaz.Plus$$anon$6 implements scalaz.IsomorphismPlus<F, G> {
  private scalaz.syntax.PlusSyntax<F> plusSyntax;

  private final scalaz.Plus E$1;

  private final scalaz.Isomorphisms$Iso2 D$1;

  public <A> F plus(F, scala.Function0<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #39                 // InterfaceMethod scalaz/IsomorphismPlus.plus$:(Lscalaz/IsomorphismPlus;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <S$, A> scalaz.Maybe<F> unfoldlPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<S$, F>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #52                 // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S$, A> scalaz.Maybe<F> unfoldrPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<F, S$>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #58                 // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #65                 // InterfaceMethod scalaz/Plus.compose$:(Lscalaz/Plus;)Lscalaz/Plus;
       4: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #72                 // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<F> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #79                 // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<F>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #86                 // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public scalaz.syntax.PlusSyntax<F> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #90                 // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #90                 // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.Plus<G> G();
    Code:
       0: aload_0
       1: getfield      #98                 // Field E$1:Lscalaz/Plus;
       4: areturn

  public scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, F, G> iso();
    Code:
       0: aload_0
       1: getfield      #103                // Field D$1:Lscalaz/Isomorphisms$Iso2;
       4: areturn

  public scalaz.Plus$$anon$6(scalaz.Plus, scalaz.Isomorphisms$Iso2);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #98                 // Field E$1:Lscalaz/Plus;
       5: aload_0
       6: aload_2
       7: putfield      #103                // Field D$1:Lscalaz/Isomorphisms$Iso2;
      10: aload_0
      11: invokespecial #108                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #112                // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      18: invokestatic  #117                // Method scala/runtime/Statics.releaseFence:()V
      21: return
}
