Compiled from "Split.scala"
public final class scalaz.Split$$anon$1 implements scalaz.syntax.SplitSyntax<$eq$greater$colon> {
  private final scalaz.Split $outer;

  public <A, B> scalaz.syntax.SplitOps<$eq$greater$colon, A, B> ToSplitOps($eq$greater$colon);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #20                 // InterfaceMethod scalaz/syntax/SplitSyntax.ToSplitOps$:(Lscalaz/syntax/SplitSyntax;Ljava/lang/Object;)Lscalaz/syntax/SplitOps;
       5: areturn

  public <A, B> scalaz.syntax.ComposeOps<$eq$greater$colon, A, B> ToComposeOps($eq$greater$colon);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #32                 // InterfaceMethod scalaz/syntax/ComposeSyntax.ToComposeOps$:(Lscalaz/syntax/ComposeSyntax;Ljava/lang/Object;)Lscalaz/syntax/ComposeOps;
       5: areturn

  public scalaz.Split<$eq$greater$colon> F();
    Code:
       0: aload_0
       1: getfield      #37                 // Field $outer:Lscalaz/Split;
       4: areturn

  public scalaz.Compose F();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method F:()Lscalaz/Split;
       4: areturn

  public scalaz.Split$$anon$1(scalaz.Split);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #37                 // Field $outer:Lscalaz/Split;
      11: aload_0
      12: invokespecial #45                 // Method java/lang/Object."<init>":()V
      15: return
}
