Compiled from "Tags.scala"
public final class scalaz.Tags$ {
  public static final scalaz.Tags$ MODULE$;

  private static final scalaz.Tag$TagOf<scalaz.Tags$FirstVal> FirstVal;

  private static final scalaz.Tag$TagOf<scalaz.Tags$LastVal> LastVal;

  private static final scalaz.Tag$TagOf<scalaz.Tags$MinVal> MinVal;

  private static final scalaz.Tag$TagOf<scalaz.Tags$MaxVal> MaxVal;

  private static final scalaz.Tag$TagOf<scalaz.Tags$First> First;

  private static final scalaz.Tag$TagOf<scalaz.Tags$Last> Last;

  private static final scalaz.Tag$TagOf<scalaz.Tags$Min> Min;

  private static final scalaz.Tag$TagOf<scalaz.Tags$Max> Max;

  private static final scalaz.Tag$TagOf<scalaz.Tags$Multiplication> Multiplication;

  private static final scalaz.Tag$TagOf<scalaz.Tags$Dual> Dual;

  private static final scalaz.Tag$TagOf<scalaz.Tags$Zip> Zip;

  private static final scalaz.Tag$TagOf<scalaz.Tags$Disjunction> Disjunction;

  private static final scalaz.Tag$TagOf<scalaz.Tags$Conjunction> Conjunction;

  private static final scalaz.Tag$TagOf<scalaz.Tags$Parallel> Parallel;

  public static {};
    Code:
       0: new           #2                  // class scalaz/Tags$
       3: dup
       4: invokespecial #76                 // Method "<init>":()V
       7: putstatic     #78                 // Field MODULE$:Lscalaz/Tags$;
      10: getstatic     #83                 // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      13: pop
      14: new           #7                  // class scalaz/Tag$TagOf
      17: dup
      18: invokespecial #84                 // Method scalaz/Tag$TagOf."<init>":()V
      21: putstatic     #86                 // Field FirstVal:Lscalaz/Tag$TagOf;
      24: getstatic     #83                 // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      27: pop
      28: new           #7                  // class scalaz/Tag$TagOf
      31: dup
      32: invokespecial #84                 // Method scalaz/Tag$TagOf."<init>":()V
      35: putstatic     #88                 // Field LastVal:Lscalaz/Tag$TagOf;
      38: getstatic     #83                 // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      41: pop
      42: new           #7                  // class scalaz/Tag$TagOf
      45: dup
      46: invokespecial #84                 // Method scalaz/Tag$TagOf."<init>":()V
      49: putstatic     #90                 // Field MinVal:Lscalaz/Tag$TagOf;
      52: getstatic     #83                 // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      55: pop
      56: new           #7                  // class scalaz/Tag$TagOf
      59: dup
      60: invokespecial #84                 // Method scalaz/Tag$TagOf."<init>":()V
      63: putstatic     #92                 // Field MaxVal:Lscalaz/Tag$TagOf;
      66: getstatic     #83                 // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      69: pop
      70: new           #7                  // class scalaz/Tag$TagOf
      73: dup
      74: invokespecial #84                 // Method scalaz/Tag$TagOf."<init>":()V
      77: putstatic     #94                 // Field First:Lscalaz/Tag$TagOf;
      80: getstatic     #83                 // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      83: pop
      84: new           #7                  // class scalaz/Tag$TagOf
      87: dup
      88: invokespecial #84                 // Method scalaz/Tag$TagOf."<init>":()V
      91: putstatic     #96                 // Field Last:Lscalaz/Tag$TagOf;
      94: getstatic     #83                 // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      97: pop
      98: new           #7                  // class scalaz/Tag$TagOf
     101: dup
     102: invokespecial #84                 // Method scalaz/Tag$TagOf."<init>":()V
     105: putstatic     #98                 // Field Min:Lscalaz/Tag$TagOf;
     108: getstatic     #83                 // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     111: pop
     112: new           #7                  // class scalaz/Tag$TagOf
     115: dup
     116: invokespecial #84                 // Method scalaz/Tag$TagOf."<init>":()V
     119: putstatic     #100                // Field Max:Lscalaz/Tag$TagOf;
     122: getstatic     #83                 // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     125: pop
     126: new           #7                  // class scalaz/Tag$TagOf
     129: dup
     130: invokespecial #84                 // Method scalaz/Tag$TagOf."<init>":()V
     133: putstatic     #102                // Field Multiplication:Lscalaz/Tag$TagOf;
     136: getstatic     #83                 // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     139: pop
     140: new           #7                  // class scalaz/Tag$TagOf
     143: dup
     144: invokespecial #84                 // Method scalaz/Tag$TagOf."<init>":()V
     147: putstatic     #104                // Field Dual:Lscalaz/Tag$TagOf;
     150: getstatic     #83                 // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     153: pop
     154: new           #7                  // class scalaz/Tag$TagOf
     157: dup
     158: invokespecial #84                 // Method scalaz/Tag$TagOf."<init>":()V
     161: putstatic     #106                // Field Zip:Lscalaz/Tag$TagOf;
     164: getstatic     #83                 // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     167: pop
     168: new           #7                  // class scalaz/Tag$TagOf
     171: dup
     172: invokespecial #84                 // Method scalaz/Tag$TagOf."<init>":()V
     175: putstatic     #108                // Field Disjunction:Lscalaz/Tag$TagOf;
     178: getstatic     #83                 // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     181: pop
     182: new           #7                  // class scalaz/Tag$TagOf
     185: dup
     186: invokespecial #84                 // Method scalaz/Tag$TagOf."<init>":()V
     189: putstatic     #110                // Field Conjunction:Lscalaz/Tag$TagOf;
     192: getstatic     #83                 // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     195: pop
     196: new           #7                  // class scalaz/Tag$TagOf
     199: dup
     200: invokespecial #84                 // Method scalaz/Tag$TagOf."<init>":()V
     203: putstatic     #112                // Field Parallel:Lscalaz/Tag$TagOf;
     206: return

  public scalaz.Tag$TagOf<scalaz.Tags$FirstVal> FirstVal();
    Code:
       0: getstatic     #86                 // Field FirstVal:Lscalaz/Tag$TagOf;
       3: areturn

  public scalaz.Tag$TagOf<scalaz.Tags$LastVal> LastVal();
    Code:
       0: getstatic     #88                 // Field LastVal:Lscalaz/Tag$TagOf;
       3: areturn

  public scalaz.Tag$TagOf<scalaz.Tags$MinVal> MinVal();
    Code:
       0: getstatic     #90                 // Field MinVal:Lscalaz/Tag$TagOf;
       3: areturn

  public scalaz.Tag$TagOf<scalaz.Tags$MaxVal> MaxVal();
    Code:
       0: getstatic     #92                 // Field MaxVal:Lscalaz/Tag$TagOf;
       3: areturn

  public scalaz.Tag$TagOf<scalaz.Tags$First> First();
    Code:
       0: getstatic     #94                 // Field First:Lscalaz/Tag$TagOf;
       3: areturn

  public scalaz.Tag$TagOf<scalaz.Tags$Last> Last();
    Code:
       0: getstatic     #96                 // Field Last:Lscalaz/Tag$TagOf;
       3: areturn

  public scalaz.Tag$TagOf<scalaz.Tags$Min> Min();
    Code:
       0: getstatic     #98                 // Field Min:Lscalaz/Tag$TagOf;
       3: areturn

  public scalaz.Tag$TagOf<scalaz.Tags$Max> Max();
    Code:
       0: getstatic     #100                // Field Max:Lscalaz/Tag$TagOf;
       3: areturn

  public scalaz.Tag$TagOf<scalaz.Tags$Multiplication> Multiplication();
    Code:
       0: getstatic     #102                // Field Multiplication:Lscalaz/Tag$TagOf;
       3: areturn

  public scalaz.Tag$TagOf<scalaz.Tags$Dual> Dual();
    Code:
       0: getstatic     #104                // Field Dual:Lscalaz/Tag$TagOf;
       3: areturn

  public scalaz.Tag$TagOf<scalaz.Tags$Zip> Zip();
    Code:
       0: getstatic     #106                // Field Zip:Lscalaz/Tag$TagOf;
       3: areturn

  public scalaz.Tag$TagOf<scalaz.Tags$Disjunction> Disjunction();
    Code:
       0: getstatic     #108                // Field Disjunction:Lscalaz/Tag$TagOf;
       3: areturn

  public scalaz.Tag$TagOf<scalaz.Tags$Conjunction> Conjunction();
    Code:
       0: getstatic     #110                // Field Conjunction:Lscalaz/Tag$TagOf;
       3: areturn

  public scalaz.Tag$TagOf<scalaz.Tags$Parallel> Parallel();
    Code:
       0: getstatic     #112                // Field Parallel:Lscalaz/Tag$TagOf;
       3: areturn

  private scalaz.Tags$();
    Code:
       0: aload_0
       1: invokespecial #129                // Method java/lang/Object."<init>":()V
       4: return
}
