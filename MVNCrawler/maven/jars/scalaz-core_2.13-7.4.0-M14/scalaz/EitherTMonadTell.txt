Compiled from "EitherT.scala"
public interface scalaz.EitherTMonadTell<F, W, A> extends scalaz.MonadTell<?, W>, scalaz.EitherTMonad<F, A>, scalaz.EitherTHoist<A> {
  public abstract scalaz.MonadTell<F, W> MT();

  public static scalaz.MonadTell F$(scalaz.EitherTMonadTell);
    Code:
       0: aload_0
       1: invokespecial #24                 // InterfaceMethod F:()Lscalaz/MonadTell;
       4: areturn

  public default scalaz.MonadTell<F, W> F();
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod MT:()Lscalaz/MonadTell;
       6: areturn

  public static scalaz.EitherT writer$(scalaz.EitherTMonadTell, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #36                 // InterfaceMethod writer:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/EitherT;
       6: areturn

  public default <B> scalaz.EitherT<A, F, B> writer(W, B);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #27,  1           // InterfaceMethod MT:()Lscalaz/MonadTell;
       7: aload_1
       8: aload_2
       9: invokeinterface #41,  3           // InterfaceMethod scalaz/MonadTell.writer:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: aload_0
      15: invokeinterface #24,  1           // InterfaceMethod F:()Lscalaz/MonadTell;
      20: invokeinterface #45,  3           // InterfaceMethod liftM:(Ljava/lang/Object;Lscalaz/Monad;)Lscalaz/EitherT;
      25: areturn

  public static scalaz.EitherT left$(scalaz.EitherTMonadTell, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #51                 // InterfaceMethod left:(Lscala/Function0;)Lscalaz/EitherT;
       5: areturn

  public default <B> scalaz.EitherT<A, F, B> left(scala.Function0<A>);
    Code:
       0: getstatic     #59                 // Field scalaz/EitherT$.MODULE$:Lscalaz/EitherT$;
       3: aload_0
       4: invokeinterface #27,  1           // InterfaceMethod MT:()Lscalaz/MonadTell;
       9: aload_1
      10: invokeinterface #63,  2           // InterfaceMethod scalaz/MonadTell.point:(Lscala/Function0;)Ljava/lang/Object;
      15: aload_0
      16: invokeinterface #24,  1           // InterfaceMethod F:()Lscalaz/MonadTell;
      21: invokevirtual #67                 // Method scalaz/EitherT$.leftT:(Ljava/lang/Object;Lscalaz/Functor;)Lscalaz/EitherT;
      24: areturn

  public static scalaz.EitherT right$(scalaz.EitherTMonadTell, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #71                 // InterfaceMethod right:(Lscala/Function0;)Lscalaz/EitherT;
       5: areturn

  public default <B> scalaz.EitherT<A, F, B> right(scala.Function0<B>);
    Code:
       0: getstatic     #59                 // Field scalaz/EitherT$.MODULE$:Lscalaz/EitherT$;
       3: aload_0
       4: invokeinterface #27,  1           // InterfaceMethod MT:()Lscalaz/MonadTell;
       9: aload_1
      10: invokeinterface #63,  2           // InterfaceMethod scalaz/MonadTell.point:(Lscala/Function0;)Ljava/lang/Object;
      15: aload_0
      16: invokeinterface #24,  1           // InterfaceMethod F:()Lscalaz/MonadTell;
      21: invokevirtual #75                 // Method scalaz/EitherT$.rightT:(Ljava/lang/Object;Lscalaz/Functor;)Lscalaz/EitherT;
      24: areturn

  public static void $init$(scalaz.EitherTMonadTell);
    Code:
       0: return
}
