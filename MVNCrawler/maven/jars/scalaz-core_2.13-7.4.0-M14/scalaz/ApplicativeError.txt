Compiled from "ApplicativeError.scala"
public interface scalaz.ApplicativeError<F, S> extends scalaz.Applicative<F> {
  public static <F, G, E> scalaz.ApplicativeError<F, E> fromIso(scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, F, G>, scalaz.ApplicativeError<G, E>);
    Code:
       0: getstatic     #36                 // Field scalaz/ApplicativeError$.MODULE$:Lscalaz/ApplicativeError$;
       3: pop
       4: new           #17                 // class scalaz/ApplicativeError$$anon$3
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #40                 // Method scalaz/ApplicativeError$$anon$3."<init>":(Lscalaz/ApplicativeError;Lscalaz/Isomorphisms$Iso2;)V
      13: areturn

  public abstract void scalaz$ApplicativeError$_setter_$applicativeErrorSyntax_$eq(scalaz.syntax.ApplicativeErrorSyntax<F, S>);

  public abstract <A> F raiseError(S);

  public abstract <A> F handleError(F, scala.Function1<S, F>);

  public static scalaz.ApplicativeError$ApplicativeErrorLaws applicativeErrorLaws$(scalaz.ApplicativeError);
    Code:
       0: aload_0
       1: invokespecial #62                 // InterfaceMethod applicativeErrorLaws:()Lscalaz/ApplicativeError$ApplicativeErrorLaws;
       4: areturn

  public default scalaz.ApplicativeError<F, S>.ApplicativeErrorLaws applicativeErrorLaws();
    Code:
       0: new           #13                 // class scalaz/ApplicativeError$$anon$1
       3: dup
       4: aload_0
       5: invokespecial #66                 // Method scalaz/ApplicativeError$$anon$1."<init>":(Lscalaz/ApplicativeError;)V
       8: areturn

  public abstract scalaz.syntax.ApplicativeErrorSyntax<F, S> applicativeErrorSyntax();

  public static void $init$(scalaz.ApplicativeError);
    Code:
       0: aload_0
       1: new           #15                 // class scalaz/ApplicativeError$$anon$2
       4: dup
       5: aload_0
       6: invokespecial #72                 // Method scalaz/ApplicativeError$$anon$2."<init>":(Lscalaz/ApplicativeError;)V
       9: invokeinterface #74,  2           // InterfaceMethod scalaz$ApplicativeError$_setter_$applicativeErrorSyntax_$eq:(Lscalaz/syntax/ApplicativeErrorSyntax;)V
      14: return
}
