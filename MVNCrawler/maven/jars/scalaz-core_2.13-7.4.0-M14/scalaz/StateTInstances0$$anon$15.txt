Compiled from "StateT.scala"
public final class scalaz.StateTInstances0$$anon$15 implements scalaz.Comonad<?> {
  private scalaz.syntax.ComonadSyntax<?> comonadSyntax;

  private scalaz.syntax.CobindSyntax<?> cobindSyntax;

  private scalaz.syntax.FunctorSyntax<?> functorSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  private final scalaz.Monoid S$1;

  public final java.lang.Object copure(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #70                 // InterfaceMethod scalaz/Comonad.copure$:(Lscalaz/Comonad;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Comonad<?>.ComonadLaws comonadLaw();
    Code:
       0: aload_0
       1: invokestatic  #80                 // InterfaceMethod scalaz/Comonad.comonadLaw$:(Lscalaz/Comonad;)Lscalaz/Comonad$ComonadLaws;
       4: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #88                 // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.Cobind<?>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #96                 // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #103                // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #108                // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.IndexedStateT<S, S, ?, A>, scalaz.IndexedStateT<S, S, ?, B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #115                // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #122                // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #127                // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #131                // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #136                // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #140                // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #144                // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #150                // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G$> scalaz.Functor<?> compose(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #159                // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G$> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #167                // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G$> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #176                // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G$> scalaz.Functor<?> product(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #181                // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #188                // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<?>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #196                // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #203                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #211                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #219                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.ComonadSyntax<?> comonadSyntax();
    Code:
       0: aload_0
       1: getfield      #223                // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       4: areturn

  public void scalaz$Comonad$_setter_$comonadSyntax_$eq(scalaz.syntax.ComonadSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #223                // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       5: return

  public scalaz.syntax.CobindSyntax<?> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #231                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #231                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<?> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #238                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #238                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #245                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #245                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A> A copoint(scalaz.IndexedStateT<S, S, java.lang.Object, A>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #253                // Field S$1:Lscalaz/Monoid;
       5: invokeinterface #259,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      10: getstatic     #265                // Field scalaz/Bind$.MODULE$:Lscalaz/Bind$;
      13: pop
      14: getstatic     #270                // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      17: invokevirtual #274                // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      20: checkcast     #276                // class scalaz/Bind
      23: invokevirtual #280                // Method scalaz/IndexedStateT.eval:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      26: areturn

  public <A> scalaz.IndexedStateT<S, S, java.lang.Object, scalaz.IndexedStateT<S, S, java.lang.Object, A>> cojoin(scalaz.IndexedStateT<S, S, java.lang.Object, A>);
    Code:
       0: getstatic     #289                // Field scalaz/State$.MODULE$:Lscalaz/State$;
       3: pop
       4: aload_0
       5: aload_1
       6: invokedynamic #309,  0            // InvokeDynamic #0:apply:(Lscalaz/StateTInstances0$$anon$15;Lscalaz/IndexedStateT;)Lscala/Function1;
      11: astore_2
      12: getstatic     #314                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
      15: pop
      16: getstatic     #319                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      19: pop
      20: new           #38                 // class scalaz/IndexedStateT$Wrap
      23: dup
      24: aload_2
      25: invokespecial #323                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      28: areturn

  public <A, B> scalaz.IndexedStateT<S, S, java.lang.Object, B> map(scalaz.IndexedStateT<S, S, java.lang.Object, A>, scala.Function1<A, B>);
    Code:
       0: aload_1
       1: getstatic     #332                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       4: pop
       5: getstatic     #270                // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
       8: invokevirtual #274                // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      11: checkcast     #334                // class scalaz/Applicative
      14: astore_3
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: aload_3
      21: aload_2
      22: invokedynamic #344,  0            // InvokeDynamic #1:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      27: invokedynamic #355,  0            // InvokeDynamic #2:apply:(Lscala/Function1;)Lscala/Function2;
      32: astore        4
      34: new           #33                 // class scalaz/IndexedStateT$FlatMap
      37: dup
      38: aload_1
      39: aload         4
      41: invokespecial #358                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
      44: areturn

  public <A, B> scalaz.IndexedStateT<S, S, java.lang.Object, B> cobind(scalaz.IndexedStateT<S, S, java.lang.Object, A>, scala.Function1<scalaz.IndexedStateT<S, S, ?, A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #366                // Method cojoin:(Lscalaz/IndexedStateT;)Lscalaz/IndexedStateT;
       5: getstatic     #332                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       8: pop
       9: getstatic     #270                // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      12: invokevirtual #274                // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      15: checkcast     #334                // class scalaz/Applicative
      18: astore        4
      20: dup
      21: ifnonnull     26
      24: aconst_null
      25: athrow
      26: astore_3
      27: aload         4
      29: aload_2
      30: invokedynamic #344,  0            // InvokeDynamic #1:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      35: invokedynamic #355,  0            // InvokeDynamic #2:apply:(Lscala/Function1;)Lscala/Function2;
      40: astore        5
      42: new           #33                 // class scalaz/IndexedStateT$FlatMap
      45: dup
      46: aload_3
      47: aload         5
      49: invokespecial #358                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
      52: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #35                 // class scalaz/IndexedStateT
       5: aload_2
       6: invokevirtual #371                // Method cobind:(Lscalaz/IndexedStateT;Lscala/Function1;)Lscalaz/IndexedStateT;
       9: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #35                 // class scalaz/IndexedStateT
       5: aload_2
       6: invokevirtual #373                // Method map:(Lscalaz/IndexedStateT;Lscala/Function1;)Lscalaz/IndexedStateT;
       9: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #35                 // class scalaz/IndexedStateT
       5: invokevirtual #366                // Method cojoin:(Lscalaz/IndexedStateT;)Lscalaz/IndexedStateT;
       8: areturn

  public java.lang.Object copoint(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #35                 // class scalaz/IndexedStateT
       5: invokevirtual #375                // Method copoint:(Lscalaz/IndexedStateT;)Ljava/lang/Object;
       8: areturn

  public static final java.lang.Object $anonfun$cojoin$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final scala.Tuple2 $anonfun$cojoin$2(scalaz.StateTInstances0$$anon$15, scalaz.IndexedStateT, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #253                // Field S$1:Lscalaz/Monoid;
       5: aload_2
       6: aload_3
       7: invokedynamic #390,  0            // InvokeDynamic #3:apply:(Ljava/lang/Object;)Lscala/Function0;
      12: invokeinterface #394,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      17: getstatic     #265                // Field scalaz/Bind$.MODULE$:Lscalaz/Bind$;
      20: pop
      21: getstatic     #270                // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      24: invokevirtual #274                // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      27: checkcast     #276                // class scalaz/Bind
      30: astore        5
      32: astore        4
      34: ifnonnull     39
      37: aconst_null
      38: athrow
      39: aload_1
      40: aload         4
      42: aload         5
      44: invokevirtual #396                // Method scalaz/IndexedStateT.apply:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      47: checkcast     #398                // class scala/Tuple2
      50: areturn

  public static final scala.Tuple2 $anonfun$cojoin$1(scalaz.StateTInstances0$$anon$15, scalaz.IndexedStateT, java.lang.Object);
    Code:
       0: new           #398                // class scala/Tuple2
       3: dup
       4: aload_1
       5: aload_2
       6: getstatic     #265                // Field scalaz/Bind$.MODULE$:Lscalaz/Bind$;
       9: pop
      10: getstatic     #270                // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      13: invokevirtual #274                // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      16: checkcast     #276                // class scalaz/Bind
      19: invokevirtual #405                // Method scalaz/IndexedStateT.exec:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      22: getstatic     #289                // Field scalaz/State$.MODULE$:Lscalaz/State$;
      25: pop
      26: aload_0
      27: aload_1
      28: aload_2
      29: invokedynamic #411,  0            // InvokeDynamic #4:apply:(Lscalaz/StateTInstances0$$anon$15;Lscalaz/IndexedStateT;Ljava/lang/Object;)Lscala/Function1;
      34: astore_3
      35: getstatic     #314                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
      38: pop
      39: getstatic     #319                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      42: pop
      43: new           #38                 // class scalaz/IndexedStateT$Wrap
      46: dup
      47: aload_3
      48: invokespecial #323                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      51: aconst_null
      52: astore_3
      53: invokespecial #414                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      56: areturn

  public scalaz.StateTInstances0$$anon$15(scalaz.StateTInstances0, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #253                // Field S$1:Lscalaz/Monoid;
       5: aload_0
       6: invokespecial #419                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #423                // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      13: aload_0
      14: invokestatic  #426                // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      17: aload_0
      18: invokestatic  #429                // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      21: aload_0
      22: invokestatic  #432                // InterfaceMethod scalaz/Comonad.$init$:(Lscalaz/Comonad;)V
      25: invokestatic  #437                // Method scala/runtime/Statics.releaseFence:()V
      28: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #450,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
