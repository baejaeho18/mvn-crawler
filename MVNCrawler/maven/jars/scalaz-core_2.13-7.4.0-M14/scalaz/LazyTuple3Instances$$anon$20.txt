Compiled from "LazyTuple.scala"
public final class scalaz.LazyTuple3Instances$$anon$20 implements scalaz.LazyTuple3Monoid<A1, A2, A3> {
  private scalaz.syntax.MonoidSyntax<scalaz.LazyTuple3<A1, A2, A3>> monoidSyntax;

  private scalaz.syntax.SemigroupSyntax<scalaz.LazyTuple3<A1, A2, A3>> semigroupSyntax;

  private final scalaz.Monoid A1$10;

  private final scalaz.Monoid A2$9;

  private final scalaz.Monoid A3$5;

  public scalaz.LazyTuple3<A1, A2, A3> zero();
    Code:
       0: aload_0
       1: invokestatic  #40                 // InterfaceMethod scalaz/LazyTuple3Monoid.zero$:(Lscalaz/LazyTuple3Monoid;)Lscalaz/LazyTuple3;
       4: areturn

  public scalaz.LazyTuple3<A1, A2, A3> append(scalaz.LazyTuple3<A1, A2, A3>, scala.Function0<scalaz.LazyTuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #53                 // InterfaceMethod scalaz/LazyTuple3Semigroup.append$:(Lscalaz/LazyTuple3Semigroup;Lscalaz/LazyTuple3;Lscala/Function0;)Lscalaz/LazyTuple3;
       6: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #63                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #73                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #82                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #90                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #94                 // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #101                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #106                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #113                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #120                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scalaz.LazyTuple3<A1, A2, A3>>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #127                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #132                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<scalaz.LazyTuple3<A1, A2, A3>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.LazyTuple3<A1, A2, A3>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #139                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.LazyTuple3<A1, A2, A3>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.LazyTuple3<A1, A2, A3>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #144                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #151                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #158                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.LazyTuple3<A1, A2, A3>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #165                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<scalaz.LazyTuple3<A1, A2, A3>> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #169                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scalaz.LazyTuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #169                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.LazyTuple3<A1, A2, A3>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #177                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.LazyTuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #177                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.Monoid<A1> _1();
    Code:
       0: aload_0
       1: getfield      #185                // Field A1$10:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<A2> _2();
    Code:
       0: aload_0
       1: getfield      #189                // Field A2$9:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<A3> _3();
    Code:
       0: aload_0
       1: getfield      #193                // Field A3$5:Lscalaz/Monoid;
       4: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #196                // class scalaz/LazyTuple3
       5: aload_2
       6: invokevirtual #198                // Method append:(Lscalaz/LazyTuple3;Lscala/Function0;)Lscalaz/LazyTuple3;
       9: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #201                // Method zero:()Lscalaz/LazyTuple3;
       4: areturn

  public scalaz.Semigroup _3();
    Code:
       0: aload_0
       1: invokevirtual #204                // Method _3:()Lscalaz/Monoid;
       4: areturn

  public scalaz.Semigroup _2();
    Code:
       0: aload_0
       1: invokevirtual #206                // Method _2:()Lscalaz/Monoid;
       4: areturn

  public scalaz.Semigroup _1();
    Code:
       0: aload_0
       1: invokevirtual #208                // Method _1:()Lscalaz/Monoid;
       4: areturn

  public scalaz.LazyTuple3Instances$$anon$20(scalaz.LazyTuple3Instances, scalaz.Monoid, scalaz.Monoid, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #185                // Field A1$10:Lscalaz/Monoid;
       5: aload_0
       6: aload_3
       7: putfield      #189                // Field A2$9:Lscalaz/Monoid;
      10: aload_0
      11: aload         4
      13: putfield      #193                // Field A3$5:Lscalaz/Monoid;
      16: aload_0
      17: invokespecial #214                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #218                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      24: aload_0
      25: invokestatic  #221                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      28: invokestatic  #226                // Method scala/runtime/Statics.releaseFence:()V
      31: return
}
