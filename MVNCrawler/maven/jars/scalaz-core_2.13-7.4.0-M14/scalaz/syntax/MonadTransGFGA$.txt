Compiled from "MonadTransSyntax.scala"
public final class scalaz.syntax.MonadTransGFGA$ {
  public static final scalaz.syntax.MonadTransGFGA$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scalaz/syntax/MonadTransGFGA$
       3: dup
       4: invokespecial #12                 // Method "<init>":()V
       7: putstatic     #14                 // Field MODULE$:Lscalaz/syntax/MonadTransGFGA$;
      10: return

  public final <F, G, A> F wrapEffect$extension(G, scalaz.MonadTrans<F>, scalaz.Monad<G>);
    Code:
       0: aload_2
       1: aload_1
       2: aload_3
       3: invokeinterface #26,  3           // InterfaceMethod scalaz/MonadTrans.wrapEffect:(Ljava/lang/Object;Lscalaz/Monad;)Ljava/lang/Object;
       8: areturn

  public final <F, G, A> int hashCode$extension(G);
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method java/lang/Object.hashCode:()I
       4: ireturn

  public final <F, G, A> boolean equals$extension(G, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #43                 // class scalaz/syntax/MonadTransGFGA
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ifeq          41
      15: aload_2
      16: ifnonnull     23
      19: aconst_null
      20: goto          30
      23: aload_2
      24: checkcast     #43                 // class scalaz/syntax/MonadTransGFGA
      27: invokevirtual #47                 // Method scalaz/syntax/MonadTransGFGA.scalaz$syntax$MonadTransGFGA$$self:()Ljava/lang/Object;
      30: astore_3
      31: aload_1
      32: aload_3
      33: invokestatic  #52                 // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: iconst_0
      42: ireturn

  private scalaz.syntax.MonadTransGFGA$();
    Code:
       0: aload_0
       1: invokespecial #53                 // Method java/lang/Object."<init>":()V
       4: return
}
