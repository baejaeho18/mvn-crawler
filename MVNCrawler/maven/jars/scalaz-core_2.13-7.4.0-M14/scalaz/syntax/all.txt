Compiled from "Syntax.scala"
public final class scalaz.syntax.all {
  public static java.lang.Object ToConstOps(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #37                 // Method scalaz/syntax/all$.ToConstOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToContTOps(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #42                 // Method scalaz/syntax/all$.ToContTOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToMaybeOps(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #45                 // Method scalaz/syntax/all$.ToMaybeOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static scala.Tuple2 ToThesePairOps(scala.Tuple2);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #49                 // Method scalaz/syntax/all$.ToThesePairOps:(Lscala/Tuple2;)Lscala/Tuple2;
       7: areturn

  public static java.lang.Object ToTheseOps(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #53                 // Method scalaz/syntax/all$.ToTheseOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToNelOps(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #56                 // Method scalaz/syntax/all$.ToNelOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToEitherTOps(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #59                 // Method scalaz/syntax/all$.ToEitherTOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToEitherOps(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #62                 // Method scalaz/syntax/all$.ToEitherOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToKleisliFAOps(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #66                 // Method scalaz/syntax/all$.ToKleisliFAOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToKleisliIdOps(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #69                 // Method scalaz/syntax/all$.ToKleisliIdOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToKleisliOpsUnapply(java.lang.Object, scalaz.Unapply);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #75                 // Method scalaz/syntax/all$.ToKleisliOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       8: areturn

  public static java.lang.Object ToValidationOps(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #79                 // Method scalaz/syntax/all$.ToValidationOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToStateOps(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #82                 // Method scalaz/syntax/all$.ToStateOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToWriterOps(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #85                 // Method scalaz/syntax/all$.ToWriterOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToReducerOps(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #88                 // Method scalaz/syntax/all$.ToReducerOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToStrictTreeOps(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #91                 // Method scalaz/syntax/all$.ToStrictTreeOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToTreeOps(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #94                 // Method scalaz/syntax/all$.ToTreeOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToIdOps(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #97                 // Method scalaz/syntax/all$.ToIdOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static <G, F, A, B> scalaz.syntax.ProChoiceOps<?, A, B> ToProChoiceVFromKleisliLike(F, scalaz.ProChoice<?>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #102                // Method scalaz/syntax/all$.ToProChoiceVFromKleisliLike:(Ljava/lang/Object;Lscalaz/ProChoice;)Lscalaz/syntax/ProChoiceOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.ProChoiceOps<F, A, B> ToProChoiceOps(F, scalaz.ProChoice<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #107                // Method scalaz/syntax/all$.ToProChoiceOps:(Ljava/lang/Object;Lscalaz/ProChoice;)Lscalaz/syntax/ProChoiceOps;
       8: areturn

  public static <FA> scalaz.syntax.ProChoiceOps<java.lang.Object, java.lang.Object, java.lang.Object> ToProChoiceOpsUnapply(FA, scalaz.Unapply2<scalaz.ProChoice, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #112                // Method scalaz/syntax/all$.ToProChoiceOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ProChoiceOps;
       8: areturn

  public static java.lang.Object MonadTransGFGA(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #117                // Method scalaz/syntax/all$.MonadTransGFGA:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static <F, A> scalaz.syntax.AlignOps<F, A> ToAlignOps(F, scalaz.Align<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #122                // Method scalaz/syntax/all$.ToAlignOps:(Ljava/lang/Object;Lscalaz/Align;)Lscalaz/syntax/AlignOps;
       8: areturn

  public static <FA> scalaz.syntax.AlignOps<java.lang.Object, java.lang.Object> ToAlignOpsUnapply(FA, scalaz.Unapply<scalaz.Align, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #128                // Method scalaz/syntax/all$.ToAlignOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/AlignOps;
       8: areturn

  public static <F, A> scalaz.syntax.OptionalOps<F, A> ToOptionalOps(F, scalaz.Optional<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #133                // Method scalaz/syntax/all$.ToOptionalOps:(Ljava/lang/Object;Lscalaz/Optional;)Lscalaz/syntax/OptionalOps;
       8: areturn

  public static <FA> scalaz.syntax.OptionalOps<java.lang.Object, java.lang.Object> ToOptionalOpsUnapply(FA, scalaz.Unapply<scalaz.Optional, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #139                // Method scalaz/syntax/all$.ToOptionalOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/OptionalOps;
       8: areturn

  public static <F, A> scalaz.syntax.Traverse1Ops<F, A> ToTraverse1Ops(F, scalaz.Traverse1<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #144                // Method scalaz/syntax/all$.ToTraverse1Ops:(Ljava/lang/Object;Lscalaz/Traverse1;)Lscalaz/syntax/Traverse1Ops;
       8: areturn

  public static <FA> scalaz.syntax.Traverse1Ops<java.lang.Object, java.lang.Object> ToTraverse1OpsUnapply(FA, scalaz.Unapply<scalaz.Traverse1, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #150                // Method scalaz/syntax/all$.ToTraverse1OpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/Traverse1Ops;
       8: areturn

  public static <F, A> scalaz.syntax.Foldable1Ops<F, A> ToFoldable1Ops(F, scalaz.Foldable1<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #155                // Method scalaz/syntax/all$.ToFoldable1Ops:(Ljava/lang/Object;Lscalaz/Foldable1;)Lscalaz/syntax/Foldable1Ops;
       8: areturn

  public static <FA> scalaz.syntax.Foldable1Ops<java.lang.Object, java.lang.Object> ToFoldable1OpsUnapply(FA, scalaz.Unapply<scalaz.Foldable1, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #161                // Method scalaz/syntax/all$.ToFoldable1OpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/Foldable1Ops;
       8: areturn

  public static <F, S, A> scalaz.syntax.ApplicativeErrorOps<F, S, A> ToApplicativeErrorOps(F, scalaz.ApplicativeError<F, S>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #166                // Method scalaz/syntax/all$.ToApplicativeErrorOps:(Ljava/lang/Object;Lscalaz/ApplicativeError;)Lscalaz/syntax/ApplicativeErrorOps;
       8: areturn

  public static java.lang.Object ToMonadErrorIdOps(java.lang.Object);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #170                // Method scalaz/syntax/all$.ToMonadErrorIdOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static <F, S, A> scalaz.syntax.MonadErrorOps<F, S, A> ToMonadErrorOps(F, scalaz.MonadError<F, S>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #175                // Method scalaz/syntax/all$.ToMonadErrorOps:(Ljava/lang/Object;Lscalaz/MonadError;)Lscalaz/syntax/MonadErrorOps;
       8: areturn

  public static <F, A, W> scalaz.syntax.MonadListenOps<F, W, A> ToMonadListenOps(F, scalaz.MonadListen<F, W>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #181                // Method scalaz/syntax/all$.ToMonadListenOps:(Ljava/lang/Object;Lscalaz/MonadListen;)Lscalaz/syntax/MonadListenOps;
       8: areturn

  public static <F, S, A> scalaz.syntax.MonadTellOps<F, S, A> ToMonadTellOps(F, scalaz.MonadTell<F, S>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #187                // Method scalaz/syntax/all$.ToMonadTellOps:(Ljava/lang/Object;Lscalaz/MonadTell;)Lscalaz/syntax/MonadTellOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.ToUnzipOps0<scalaz.Unzip>.UnzipPairOps<F, A, B> ToUnzipPairOps(F, scalaz.Unzip<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #193                // Method scalaz/syntax/all$.ToUnzipPairOps:(Ljava/lang/Object;Lscalaz/Unzip;)Lscalaz/syntax/ToUnzipOps0$UnzipPairOps;
       8: areturn

  public static <F, A> scalaz.syntax.UnzipOps<F, A> ToUnzipOps(F, scalaz.Unzip<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #199                // Method scalaz/syntax/all$.ToUnzipOps:(Ljava/lang/Object;Lscalaz/Unzip;)Lscalaz/syntax/UnzipOps;
       8: areturn

  public static <FA> scalaz.syntax.UnzipOps<java.lang.Object, java.lang.Object> ToUnzipOpsUnapply(FA, scalaz.Unapply<scalaz.Unzip, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #204                // Method scalaz/syntax/all$.ToUnzipOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/UnzipOps;
       8: areturn

  public static <F, A> scalaz.syntax.ZipOps<F, A> ToZipOps(F, scalaz.Zip<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #209                // Method scalaz/syntax/all$.ToZipOps:(Ljava/lang/Object;Lscalaz/Zip;)Lscalaz/syntax/ZipOps;
       8: areturn

  public static <FA> scalaz.syntax.ZipOps<java.lang.Object, java.lang.Object> ToZipOpsUnapply(FA, scalaz.Unapply<scalaz.Zip, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #215                // Method scalaz/syntax/all$.ToZipOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ZipOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.SplitOps<?, A, B> ToSplitVFromKleisliLike(F, scalaz.Split<?>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #220                // Method scalaz/syntax/all$.ToSplitVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Split;)Lscalaz/syntax/SplitOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.SplitOps<F, A, B> ToSplitOps(F, scalaz.Split<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #225                // Method scalaz/syntax/all$.ToSplitOps:(Ljava/lang/Object;Lscalaz/Split;)Lscalaz/syntax/SplitOps;
       8: areturn

  public static <FA> scalaz.syntax.SplitOps<java.lang.Object, java.lang.Object, java.lang.Object> ToSplitOpsUnapply(FA, scalaz.Unapply2<scalaz.Split, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #230                // Method scalaz/syntax/all$.ToSplitOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/SplitOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.ChoiceOps<?, A, B> ToChoiceVFromKleisliLike(F, scalaz.Choice<?>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #235                // Method scalaz/syntax/all$.ToChoiceVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Choice;)Lscalaz/syntax/ChoiceOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.ChoiceOps<F, A, B> ToChoiceOps(F, scalaz.Choice<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #240                // Method scalaz/syntax/all$.ToChoiceOps:(Ljava/lang/Object;Lscalaz/Choice;)Lscalaz/syntax/ChoiceOps;
       8: areturn

  public static <FA> scalaz.syntax.ChoiceOps<java.lang.Object, java.lang.Object, java.lang.Object> ToChoiceOpsUnapply(FA, scalaz.Unapply2<scalaz.Choice, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #245                // Method scalaz/syntax/all$.ToChoiceOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ChoiceOps;
       8: areturn

  public static <F, A> scalaz.syntax.FoldableOps<F, A> ToFoldableOps(F, scalaz.Foldable<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #250                // Method scalaz/syntax/all$.ToFoldableOps:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/syntax/FoldableOps;
       8: areturn

  public static <FA> scalaz.syntax.FoldableOps<java.lang.Object, java.lang.Object> ToFoldableOpsUnapply(FA, scalaz.Unapply<scalaz.Foldable, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #256                // Method scalaz/syntax/all$.ToFoldableOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/FoldableOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.StrongOps<?, A, B> ToStrongVFromKleisliLike(F, scalaz.Strong<?>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #261                // Method scalaz/syntax/all$.ToStrongVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Strong;)Lscalaz/syntax/StrongOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.StrongOps<F, A, B> ToStrongOps(F, scalaz.Strong<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #266                // Method scalaz/syntax/all$.ToStrongOps:(Ljava/lang/Object;Lscalaz/Strong;)Lscalaz/syntax/StrongOps;
       8: areturn

  public static <FA> scalaz.syntax.StrongOps<java.lang.Object, java.lang.Object, java.lang.Object> ToStrongOpsUnapply(FA, scalaz.Unapply2<scalaz.Strong, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #271                // Method scalaz/syntax/all$.ToStrongOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/StrongOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.ProfunctorOps<?, A, B> ToProfunctorVFromKleisliLike(F, scalaz.Profunctor<?>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #276                // Method scalaz/syntax/all$.ToProfunctorVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Profunctor;)Lscalaz/syntax/ProfunctorOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.ProfunctorOps<F, A, B> ToProfunctorOps(F, scalaz.Profunctor<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #281                // Method scalaz/syntax/all$.ToProfunctorOps:(Ljava/lang/Object;Lscalaz/Profunctor;)Lscalaz/syntax/ProfunctorOps;
       8: areturn

  public static <FA> scalaz.syntax.ProfunctorOps<java.lang.Object, java.lang.Object, java.lang.Object> ToProfunctorOpsUnapply(FA, scalaz.Unapply2<scalaz.Profunctor, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #286                // Method scalaz/syntax/all$.ToProfunctorOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ProfunctorOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.ArrowOps<?, A, B> ToArrowVFromKleisliLike(F, scalaz.Arrow<?>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #291                // Method scalaz/syntax/all$.ToArrowVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Arrow;)Lscalaz/syntax/ArrowOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.ArrowOps<F, A, B> ToArrowOps(F, scalaz.Arrow<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #296                // Method scalaz/syntax/all$.ToArrowOps:(Ljava/lang/Object;Lscalaz/Arrow;)Lscalaz/syntax/ArrowOps;
       8: areturn

  public static <FA> scalaz.syntax.ArrowOps<java.lang.Object, java.lang.Object, java.lang.Object> ToArrowOpsUnapply(FA, scalaz.Unapply2<scalaz.Arrow, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #301                // Method scalaz/syntax/all$.ToArrowOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ArrowOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.CategoryOps<?, A, B> ToCategoryVFromKleisliLike(F, scalaz.Category<?>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #306                // Method scalaz/syntax/all$.ToCategoryVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Category;)Lscalaz/syntax/CategoryOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.CategoryOps<F, A, B> ToCategoryOps(F, scalaz.Category<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #311                // Method scalaz/syntax/all$.ToCategoryOps:(Ljava/lang/Object;Lscalaz/Category;)Lscalaz/syntax/CategoryOps;
       8: areturn

  public static <FA> scalaz.syntax.CategoryOps<java.lang.Object, java.lang.Object, java.lang.Object> ToCategoryOpsUnapply(FA, scalaz.Unapply2<scalaz.Category, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #316                // Method scalaz/syntax/all$.ToCategoryOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/CategoryOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.ComposeOps<?, A, B> ToComposeVFromKleisliLike(F, scalaz.Compose<?>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #321                // Method scalaz/syntax/all$.ToComposeVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Compose;)Lscalaz/syntax/ComposeOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.ComposeOps<F, A, B> ToComposeOps(F, scalaz.Compose<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #326                // Method scalaz/syntax/all$.ToComposeOps:(Ljava/lang/Object;Lscalaz/Compose;)Lscalaz/syntax/ComposeOps;
       8: areturn

  public static <FA> scalaz.syntax.ComposeOps<java.lang.Object, java.lang.Object, java.lang.Object> ToComposeOpsUnapply(FA, scalaz.Unapply2<scalaz.Compose, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #331                // Method scalaz/syntax/all$.ToComposeOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ComposeOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.BitraverseOps<?, A, B> ToBitraverseVFromKleisliLike(F, scalaz.Bitraverse<?>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #336                // Method scalaz/syntax/all$.ToBitraverseVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Bitraverse;)Lscalaz/syntax/BitraverseOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.BitraverseOps<F, A, B> ToBitraverseOps(F, scalaz.Bitraverse<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #341                // Method scalaz/syntax/all$.ToBitraverseOps:(Ljava/lang/Object;Lscalaz/Bitraverse;)Lscalaz/syntax/BitraverseOps;
       8: areturn

  public static <FA> scalaz.syntax.BitraverseOps<java.lang.Object, java.lang.Object, java.lang.Object> ToBitraverseOpsUnapply(FA, scalaz.Unapply2<scalaz.Bitraverse, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #346                // Method scalaz/syntax/all$.ToBitraverseOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/BitraverseOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.AssociativeOps<?, A, B> ToAssociativeVFromKleisliLike(F, scalaz.Associative<?>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #351                // Method scalaz/syntax/all$.ToAssociativeVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Associative;)Lscalaz/syntax/AssociativeOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.AssociativeOps<F, A, B> ToAssociativeOps(F, scalaz.Associative<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #356                // Method scalaz/syntax/all$.ToAssociativeOps:(Ljava/lang/Object;Lscalaz/Associative;)Lscalaz/syntax/AssociativeOps;
       8: areturn

  public static <FA> scalaz.syntax.AssociativeOps<java.lang.Object, java.lang.Object, java.lang.Object> ToAssociativeOpsUnapply(FA, scalaz.Unapply2<scalaz.Associative, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #361                // Method scalaz/syntax/all$.ToAssociativeOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/AssociativeOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.BifunctorOps<?, A, B> ToBifunctorVFromKleisliLike(F, scalaz.Bifunctor<?>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #366                // Method scalaz/syntax/all$.ToBifunctorVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Bifunctor;)Lscalaz/syntax/BifunctorOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.BifunctorOps<F, A, B> ToBifunctorOps(F, scalaz.Bifunctor<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #371                // Method scalaz/syntax/all$.ToBifunctorOps:(Ljava/lang/Object;Lscalaz/Bifunctor;)Lscalaz/syntax/BifunctorOps;
       8: areturn

  public static <FA> scalaz.syntax.BifunctorOps<java.lang.Object, java.lang.Object, java.lang.Object> ToBifunctorOpsUnapply(FA, scalaz.Unapply2<scalaz.Bifunctor, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #376                // Method scalaz/syntax/all$.ToBifunctorOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/BifunctorOps;
       8: areturn

  public static <F, A> scalaz.syntax.TraverseOps<F, A> ToTraverseOps(F, scalaz.Traverse<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #381                // Method scalaz/syntax/all$.ToTraverseOps:(Ljava/lang/Object;Lscalaz/Traverse;)Lscalaz/syntax/TraverseOps;
       8: areturn

  public static <FA> scalaz.syntax.TraverseOps<java.lang.Object, java.lang.Object> ToTraverseOpsUnapply(FA, scalaz.Unapply<scalaz.Traverse, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #387                // Method scalaz/syntax/all$.ToTraverseOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/TraverseOps;
       8: areturn

  public static <F, A> scalaz.syntax.MonadPlusOps<F, A> ToMonadPlusOps(F, scalaz.MonadPlus<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #392                // Method scalaz/syntax/all$.ToMonadPlusOps:(Ljava/lang/Object;Lscalaz/MonadPlus;)Lscalaz/syntax/MonadPlusOps;
       8: areturn

  public static <FA> scalaz.syntax.MonadPlusOps<java.lang.Object, java.lang.Object> ToMonadPlusOpsUnapply(FA, scalaz.Unapply<scalaz.MonadPlus, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #398                // Method scalaz/syntax/all$.ToMonadPlusOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/MonadPlusOps;
       8: areturn

  public static <F, A> scalaz.syntax.AltOps<F, A> ToAltOps(F, scalaz.Alt<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #403                // Method scalaz/syntax/all$.ToAltOps:(Ljava/lang/Object;Lscalaz/Alt;)Lscalaz/syntax/AltOps;
       8: areturn

  public static <FA> scalaz.syntax.AltOps<java.lang.Object, java.lang.Object> ToAltOpsUnapply(FA, scalaz.Unapply<scalaz.Alt, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #409                // Method scalaz/syntax/all$.ToAltOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/AltOps;
       8: areturn

  public static <F, A> scalaz.syntax.ApplicativePlusOps<F, A> ToApplicativePlusOps(F, scalaz.ApplicativePlus<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #414                // Method scalaz/syntax/all$.ToApplicativePlusOps:(Ljava/lang/Object;Lscalaz/ApplicativePlus;)Lscalaz/syntax/ApplicativePlusOps;
       8: areturn

  public static <FA> scalaz.syntax.ApplicativePlusOps<java.lang.Object, java.lang.Object> ToApplicativePlusOpsUnapply(FA, scalaz.Unapply<scalaz.ApplicativePlus, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #420                // Method scalaz/syntax/all$.ToApplicativePlusOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ApplicativePlusOps;
       8: areturn

  public static <F, A> scalaz.syntax.PlusOps<F, A> ToPlusOps(F, scalaz.Plus<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #425                // Method scalaz/syntax/all$.ToPlusOps:(Ljava/lang/Object;Lscalaz/Plus;)Lscalaz/syntax/PlusOps;
       8: areturn

  public static <FA> scalaz.syntax.PlusOps<java.lang.Object, java.lang.Object> ToPlusOpsUnapply(FA, scalaz.Unapply<scalaz.Plus, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #431                // Method scalaz/syntax/all$.ToPlusOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/PlusOps;
       8: areturn

  public static <F, A> scalaz.syntax.CozipOps<F, A> ToCozipOps(F, scalaz.Cozip<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #436                // Method scalaz/syntax/all$.ToCozipOps:(Ljava/lang/Object;Lscalaz/Cozip;)Lscalaz/syntax/CozipOps;
       8: areturn

  public static <FA> scalaz.syntax.CozipOps<java.lang.Object, java.lang.Object> ToCozipOpsUnapply(FA, scalaz.Unapply<scalaz.Cozip, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #442                // Method scalaz/syntax/all$.ToCozipOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/CozipOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.BifoldableOps<?, A, B> ToBifoldableVFromKleisliLike(F, scalaz.Bifoldable<?>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #447                // Method scalaz/syntax/all$.ToBifoldableVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Bifoldable;)Lscalaz/syntax/BifoldableOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.BifoldableOps<F, A, B> ToBifoldableOps(F, scalaz.Bifoldable<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #452                // Method scalaz/syntax/all$.ToBifoldableOps:(Ljava/lang/Object;Lscalaz/Bifoldable;)Lscalaz/syntax/BifoldableOps;
       8: areturn

  public static <FA> scalaz.syntax.BifoldableOps<java.lang.Object, java.lang.Object, java.lang.Object> ToBifoldableOpsUnapply(FA, scalaz.Unapply2<scalaz.Bifoldable, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #457                // Method scalaz/syntax/all$.ToBifoldableOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/BifoldableOps;
       8: areturn

  public static <F, A> scalaz.syntax.ComonadOps<F, A> ToComonadOps(F, scalaz.Comonad<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #462                // Method scalaz/syntax/all$.ToComonadOps:(Ljava/lang/Object;Lscalaz/Comonad;)Lscalaz/syntax/ComonadOps;
       8: areturn

  public static <FA> scalaz.syntax.ComonadOps<java.lang.Object, java.lang.Object> ToComonadOpsUnapply(FA, scalaz.Unapply<scalaz.Comonad, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #468                // Method scalaz/syntax/all$.ToComonadOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ComonadOps;
       8: areturn

  public static <F, A> scalaz.syntax.MonadOps<F, A> ToMonadOps(F, scalaz.Monad<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #473                // Method scalaz/syntax/all$.ToMonadOps:(Ljava/lang/Object;Lscalaz/Monad;)Lscalaz/syntax/MonadOps;
       8: areturn

  public static <FA> scalaz.syntax.MonadOps<java.lang.Object, java.lang.Object> ToMonadOpsUnapply(FA, scalaz.Unapply<scalaz.Monad, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #479                // Method scalaz/syntax/all$.ToMonadOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/MonadOps;
       8: areturn

  public static <F, A> scalaz.syntax.BindOps<F, A> ToBindOps(F, scalaz.Bind<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #484                // Method scalaz/syntax/all$.ToBindOps:(Ljava/lang/Object;Lscalaz/Bind;)Lscalaz/syntax/BindOps;
       8: areturn

  public static <FA> scalaz.syntax.BindOps<java.lang.Object, java.lang.Object> ToBindOpsUnapply(FA, scalaz.Unapply<scalaz.Bind, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #490                // Method scalaz/syntax/all$.ToBindOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/BindOps;
       8: areturn

  public static <A> scalaz.syntax.ToApplicativeOps0<scalaz.Applicative>.ApplicativeIdV<A> ApplicativeIdV(scala.Function0<A>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #494                // Method scalaz/syntax/all$.ApplicativeIdV:(Lscala/Function0;)Lscalaz/syntax/ToApplicativeOps0$ApplicativeIdV;
       7: areturn

  public static <F, A> scalaz.syntax.ApplicativeOps<F, A> ToApplicativeOps(F, scalaz.Applicative<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #500                // Method scalaz/syntax/all$.ToApplicativeOps:(Ljava/lang/Object;Lscalaz/Applicative;)Lscalaz/syntax/ApplicativeOps;
       8: areturn

  public static <FA> scalaz.syntax.ApplicativeOps<java.lang.Object, java.lang.Object> ToApplicativeOpsUnapply(FA, scalaz.Unapply<scalaz.Applicative, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #506                // Method scalaz/syntax/all$.ToApplicativeOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ApplicativeOps;
       8: areturn

  public static <F, A, B, C, D, E, I, J, K> F $up$up$up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function7<A, B, C, D, E, I, J, K>, scalaz.Apply<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: aload         8
      17: invokevirtual #519                // Method scalaz/syntax/all$.$up$up$up$up$up$up:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;Lscalaz/Apply;)Ljava/lang/Object;
      20: areturn

  public static <F, A, B, C, D, E, I, J> F $up$up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function6<A, B, C, D, E, I, J>, scalaz.Apply<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: invokevirtual #526                // Method scalaz/syntax/all$.$up$up$up$up$up:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;Lscalaz/Apply;)Ljava/lang/Object;
      18: areturn

  public static <F, A, B, C, D, E, I> F $up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function5<A, B, C, D, E, I>, scalaz.Apply<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #532                // Method scalaz/syntax/all$.$up$up$up$up:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;Lscalaz/Apply;)Ljava/lang/Object;
      16: areturn

  public static <F, A, B, C, D, E> F $up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function4<A, B, C, D, E>, scalaz.Apply<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #538                // Method scalaz/syntax/all$.$up$up$up:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscalaz/Apply;)Ljava/lang/Object;
      14: areturn

  public static <F, A, B, C, D> F $up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function3<A, B, C, D>, scalaz.Apply<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #544                // Method scalaz/syntax/all$.$up$up:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscalaz/Apply;)Ljava/lang/Object;
      12: areturn

  public static <F, A, B, C> F $up(scala.Function0<F>, scala.Function0<F>, scala.Function2<A, B, C>, scalaz.Apply<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #550                // Method scalaz/syntax/all$.$up:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Apply;)Ljava/lang/Object;
      10: areturn

  public static <F, A> scalaz.syntax.ApplyOps<F, A> ToApplyOps(F, scalaz.Apply<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #556                // Method scalaz/syntax/all$.ToApplyOps:(Ljava/lang/Object;Lscalaz/Apply;)Lscalaz/syntax/ApplyOps;
       8: areturn

  public static <FA> scalaz.syntax.ApplyOps<java.lang.Object, java.lang.Object> ToApplyOpsUnapply(FA, scalaz.Unapply<scalaz.Apply, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #561                // Method scalaz/syntax/all$.ToApplyOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ApplyOps;
       8: areturn

  public static <F, A> scalaz.syntax.ContravariantOps<F, A> ToContravariantOps(F, scalaz.Contravariant<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #566                // Method scalaz/syntax/all$.ToContravariantOps:(Ljava/lang/Object;Lscalaz/Contravariant;)Lscalaz/syntax/ContravariantOps;
       8: areturn

  public static <FA> scalaz.syntax.ContravariantOps<java.lang.Object, java.lang.Object> ToContravariantOpsUnapply(FA, scalaz.Unapply<scalaz.Contravariant, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #572                // Method scalaz/syntax/all$.ToContravariantOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ContravariantOps;
       8: areturn

  public static <A> scalaz.syntax.ToFunctorOps0<scalaz.Functor>.FunctorIdV<A> ToFunctorIdV(A);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #577                // Method scalaz/syntax/all$.ToFunctorIdV:(Ljava/lang/Object;)Lscalaz/syntax/ToFunctorOps0$FunctorIdV;
       7: areturn

  public static <F$, A, B> scalaz.syntax.ToFunctorOps0<scalaz.Functor>.LiftV<F$, A, B> ToLiftV(scala.Function1<A, B>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #582                // Method scalaz/syntax/all$.ToLiftV:(Lscala/Function1;)Lscalaz/syntax/ToFunctorOps0$LiftV;
       7: areturn

  public static <F, A> scalaz.syntax.FunctorOps<F, A> ToFunctorOps(F, scalaz.Functor<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #588                // Method scalaz/syntax/all$.ToFunctorOps:(Ljava/lang/Object;Lscalaz/Functor;)Lscalaz/syntax/FunctorOps;
       8: areturn

  public static <FA> scalaz.syntax.FunctorOps<java.lang.Object, java.lang.Object> ToFunctorOpsUnapply(FA, scalaz.Unapply<scalaz.Functor, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #594                // Method scalaz/syntax/all$.ToFunctorOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/FunctorOps;
       8: areturn

  public static <F, A> F mempty(scalaz.PlusEmpty<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #599                // Method scalaz/syntax/all$.mempty:(Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public static <F, A> scalaz.syntax.PlusEmptyOps<F, A> ToPlusEmptyOps(F, scalaz.PlusEmpty<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #605                // Method scalaz/syntax/all$.ToPlusEmptyOps:(Ljava/lang/Object;Lscalaz/PlusEmpty;)Lscalaz/syntax/PlusEmptyOps;
       8: areturn

  public static <FA> scalaz.syntax.PlusEmptyOps<java.lang.Object, java.lang.Object> ToPlusEmptyOpsUnapply(FA, scalaz.Unapply<scalaz.PlusEmpty, FA>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #610                // Method scalaz/syntax/all$.ToPlusEmptyOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/PlusEmptyOps;
       8: areturn

  public static <F> scalaz.syntax.EnumOps<F> ToEnumOps(F, scalaz.Enum<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #615                // Method scalaz/syntax/all$.ToEnumOps:(Ljava/lang/Object;Lscalaz/Enum;)Lscalaz/syntax/EnumOps;
       8: areturn

  public static <F> scalaz.syntax.OrderOps<F> ToOrderOps(F, scalaz.Order<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #621                // Method scalaz/syntax/all$.ToOrderOps:(Ljava/lang/Object;Lscalaz/Order;)Lscalaz/syntax/OrderOps;
       8: areturn

  public static scala.StringContext cordInterpolator(scala.StringContext);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #627                // Method scalaz/syntax/all$.cordInterpolator:(Lscala/StringContext;)Lscala/StringContext;
       7: areturn

  public static scala.StringContext showInterpolator(scala.StringContext);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #631                // Method scalaz/syntax/all$.showInterpolator:(Lscala/StringContext;)Lscala/StringContext;
       7: areturn

  public static <F> scalaz.syntax.ShowOps<F> ToShowOps(F, scalaz.Show<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #636                // Method scalaz/syntax/all$.ToShowOps:(Ljava/lang/Object;Lscalaz/Show;)Lscalaz/syntax/ShowOps;
       8: areturn

  public static <F> scalaz.syntax.EqualOps<F> ToEqualOps(F, scalaz.Equal<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #642                // Method scalaz/syntax/all$.ToEqualOps:(Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/syntax/EqualOps;
       8: areturn

  public static <F> scalaz.syntax.BandOps<F> ToBandOps(F, scalaz.Band<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #648                // Method scalaz/syntax/all$.ToBandOps:(Ljava/lang/Object;Lscalaz/Band;)Lscalaz/syntax/BandOps;
       8: areturn

  public static <F> F $u2205(scalaz.Monoid<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #654                // Method scalaz/syntax/all$.$u2205:(Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public static <F> F mzero(scalaz.Monoid<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: invokevirtual #658                // Method scalaz/syntax/all$.mzero:(Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public static <F> scalaz.syntax.MonoidOps<F> ToMonoidOps(F, scalaz.Monoid<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #663                // Method scalaz/syntax/all$.ToMonoidOps:(Ljava/lang/Object;Lscalaz/Monoid;)Lscalaz/syntax/MonoidOps;
       8: areturn

  public static <F> scalaz.syntax.SemigroupOps<F> ToSemigroupOps(F, scalaz.Semigroup<F>);
    Code:
       0: getstatic     #35                 // Field scalaz/syntax/all$.MODULE$:Lscalaz/syntax/all$;
       3: aload_0
       4: aload_1
       5: invokevirtual #668                // Method scalaz/syntax/all$.ToSemigroupOps:(Ljava/lang/Object;Lscalaz/Semigroup;)Lscalaz/syntax/SemigroupOps;
       8: areturn
}
