Compiled from "Syntax.scala"
public final class scalaz.syntax.compose0$ implements scalaz.syntax.ToComposeOps0<scalaz.Compose> {
  public static final scalaz.syntax.compose0$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scalaz/syntax/compose0$
       3: dup
       4: invokespecial #15                 // Method "<init>":()V
       7: putstatic     #17                 // Field MODULE$:Lscalaz/syntax/compose0$;
      10: getstatic     #17                 // Field MODULE$:Lscalaz/syntax/compose0$;
      13: pop
      14: getstatic     #17                 // Field MODULE$:Lscalaz/syntax/compose0$;
      17: pop
      18: return

  public <F, A, B> scalaz.syntax.ComposeOps<F, A, B> ToComposeOps(F, scalaz.Compose<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #26                 // InterfaceMethod scalaz/syntax/ToComposeOps0.ToComposeOps$:(Lscalaz/syntax/ToComposeOps0;Ljava/lang/Object;Lscalaz/Compose;)Lscalaz/syntax/ComposeOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.ComposeOps<?, A, B> ToComposeVFromKleisliLike(F, scalaz.Compose<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #34                 // InterfaceMethod scalaz/syntax/ToComposeOps0.ToComposeVFromKleisliLike$:(Lscalaz/syntax/ToComposeOps0;Ljava/lang/Object;Lscalaz/Compose;)Lscalaz/syntax/ComposeOps;
       6: areturn

  public <FA> scalaz.syntax.ComposeOps<java.lang.Object, java.lang.Object, java.lang.Object> ToComposeOpsUnapply(FA, scalaz.Unapply2<scalaz.Compose, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #43                 // InterfaceMethod scalaz/syntax/ToComposeOpsU.ToComposeOpsUnapply$:(Lscalaz/syntax/ToComposeOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ComposeOps;
       6: areturn

  private scalaz.syntax.compose0$();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method java/lang/Object."<init>":()V
       4: return
}
