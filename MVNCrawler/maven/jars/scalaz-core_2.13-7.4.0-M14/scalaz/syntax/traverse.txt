Compiled from "Syntax.scala"
public final class scalaz.syntax.traverse {
  public static scalaz.syntax.FoldableOps ToFoldableOps(java.lang.Object, scalaz.Foldable);
    Code:
       0: getstatic     #26                 // Field scalaz/syntax/traverse$.MODULE$:Lscalaz/syntax/traverse$;
       3: aload_0
       4: aload_1
       5: invokevirtual #28                 // Method scalaz/syntax/traverse$.ToFoldableOps:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/syntax/FoldableOps;
       8: areturn

  public static <FA> scalaz.syntax.FoldableOps<java.lang.Object, java.lang.Object> ToFoldableOpsUnapply(FA, scalaz.Unapply<scalaz.Traverse, FA>);
    Code:
       0: getstatic     #26                 // Field scalaz/syntax/traverse$.MODULE$:Lscalaz/syntax/traverse$;
       3: aload_0
       4: aload_1
       5: invokevirtual #35                 // Method scalaz/syntax/traverse$.ToFoldableOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/FoldableOps;
       8: areturn

  public static scalaz.syntax.InvariantFunctorOps ToInvariantFunctorOps(java.lang.Object, scalaz.InvariantFunctor);
    Code:
       0: getstatic     #26                 // Field scalaz/syntax/traverse$.MODULE$:Lscalaz/syntax/traverse$;
       3: aload_0
       4: aload_1
       5: invokevirtual #40                 // Method scalaz/syntax/traverse$.ToInvariantFunctorOps:(Ljava/lang/Object;Lscalaz/InvariantFunctor;)Lscalaz/syntax/InvariantFunctorOps;
       8: areturn

  public static <FA> scalaz.syntax.InvariantFunctorOps<java.lang.Object, java.lang.Object> ToInvariantFunctorOpsUnapply(FA, scalaz.Unapply<scalaz.Traverse, FA>);
    Code:
       0: getstatic     #26                 // Field scalaz/syntax/traverse$.MODULE$:Lscalaz/syntax/traverse$;
       3: aload_0
       4: aload_1
       5: invokevirtual #46                 // Method scalaz/syntax/traverse$.ToInvariantFunctorOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/InvariantFunctorOps;
       8: areturn

  public static <A> scalaz.syntax.ToFunctorOps0<scalaz.Traverse>.FunctorIdV<A> ToFunctorIdV(A);
    Code:
       0: getstatic     #26                 // Field scalaz/syntax/traverse$.MODULE$:Lscalaz/syntax/traverse$;
       3: aload_0
       4: invokevirtual #51                 // Method scalaz/syntax/traverse$.ToFunctorIdV:(Ljava/lang/Object;)Lscalaz/syntax/ToFunctorOps0$FunctorIdV;
       7: areturn

  public static <F$, A, B> scalaz.syntax.ToFunctorOps0<scalaz.Traverse>.LiftV<F$, A, B> ToLiftV(scala.Function1<A, B>);
    Code:
       0: getstatic     #26                 // Field scalaz/syntax/traverse$.MODULE$:Lscalaz/syntax/traverse$;
       3: aload_0
       4: invokevirtual #56                 // Method scalaz/syntax/traverse$.ToLiftV:(Lscala/Function1;)Lscalaz/syntax/ToFunctorOps0$LiftV;
       7: areturn

  public static scalaz.syntax.FunctorOps ToFunctorOps(java.lang.Object, scalaz.Functor);
    Code:
       0: getstatic     #26                 // Field scalaz/syntax/traverse$.MODULE$:Lscalaz/syntax/traverse$;
       3: aload_0
       4: aload_1
       5: invokevirtual #61                 // Method scalaz/syntax/traverse$.ToFunctorOps:(Ljava/lang/Object;Lscalaz/Functor;)Lscalaz/syntax/FunctorOps;
       8: areturn

  public static <FA> scalaz.syntax.FunctorOps<java.lang.Object, java.lang.Object> ToFunctorOpsUnapply(FA, scalaz.Unapply<scalaz.Traverse, FA>);
    Code:
       0: getstatic     #26                 // Field scalaz/syntax/traverse$.MODULE$:Lscalaz/syntax/traverse$;
       3: aload_0
       4: aload_1
       5: invokevirtual #67                 // Method scalaz/syntax/traverse$.ToFunctorOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/FunctorOps;
       8: areturn

  public static <F, A> scalaz.syntax.TraverseOps<F, A> ToTraverseOps(F, scalaz.Traverse<F>);
    Code:
       0: getstatic     #26                 // Field scalaz/syntax/traverse$.MODULE$:Lscalaz/syntax/traverse$;
       3: aload_0
       4: aload_1
       5: invokevirtual #72                 // Method scalaz/syntax/traverse$.ToTraverseOps:(Ljava/lang/Object;Lscalaz/Traverse;)Lscalaz/syntax/TraverseOps;
       8: areturn

  public static <FA> scalaz.syntax.TraverseOps<java.lang.Object, java.lang.Object> ToTraverseOpsUnapply(FA, scalaz.Unapply<scalaz.Traverse, FA>);
    Code:
       0: getstatic     #26                 // Field scalaz/syntax/traverse$.MODULE$:Lscalaz/syntax/traverse$;
       3: aload_0
       4: aload_1
       5: invokevirtual #78                 // Method scalaz/syntax/traverse$.ToTraverseOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/TraverseOps;
       8: areturn
}
