Compiled from "VectorOps.scala"
public final class scalaz.syntax.std.VectorOps$ {
  public static final scalaz.syntax.std.VectorOps$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scalaz/syntax/std/VectorOps$
       3: dup
       4: invokespecial #27                 // Method "<init>":()V
       7: putstatic     #29                 // Field MODULE$:Lscalaz/syntax/std/VectorOps$;
      10: return

  public final <A> scala.collection.immutable.Vector<A> intersperse$extension(scala.collection.immutable.Vector<A>, A);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: aload_2
       5: invokestatic  #45                 // InterfaceMethod scalaz/std/VectorFunctions.intersperse$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       8: areturn

  public final <A> scalaz.Maybe<scalaz.NonEmptyList<A>> toNel$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: invokestatic  #55                 // InterfaceMethod scalaz/std/VectorFunctions.toNel$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
       7: areturn

  public final <A> scalaz.Maybe<scalaz.Zipper<A>> toZipper$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: invokestatic  #60                 // InterfaceMethod scalaz/std/VectorFunctions.toZipper$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
       7: areturn

  public final <A> scalaz.Maybe<scalaz.Zipper<A>> zipperEnd$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: invokestatic  #64                 // InterfaceMethod scalaz/std/VectorFunctions.zipperEnd$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
       7: areturn

  public final <B, A> B $less$up$greater$extension(scala.collection.immutable.Vector<A>, scala.Function1<scalaz.NonEmptyList<A>, B>, scalaz.Monoid<B>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: pop
       4: aload_1
       5: invokevirtual #75                 // Method scala/collection/immutable/Vector.isEmpty:()Z
       8: ifeq          22
      11: getstatic     #80                 // Field scalaz/Monoid$.MODULE$:Lscalaz/Monoid$;
      14: pop
      15: aload_3
      16: invokeinterface #86,  1           // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      21: areturn
      22: aload_2
      23: getstatic     #91                 // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      26: pop
      27: aload_1
      28: invokevirtual #94                 // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      31: getstatic     #99                 // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      34: aload_1
      35: invokevirtual #103                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      38: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      41: invokevirtual #107                // Method scalaz/std/vector$.vectorInstance:()Lscalaz/Traverse;
      44: invokevirtual #111                // Method scalaz/IList$.fromFoldable:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/IList;
      47: astore        5
      49: astore        4
      51: new           #113                // class scalaz/NonEmptyList
      54: dup
      55: aload         4
      57: aload         5
      59: invokespecial #116                // Method scalaz/NonEmptyList."<init>":(Ljava/lang/Object;Lscalaz/IList;)V
      62: aconst_null
      63: astore        4
      65: aconst_null
      66: astore        5
      68: invokeinterface #122,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      73: areturn

  public final <M, A> M takeWhileM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: astore        4
       5: aload         4
       7: aload_3
       8: invokedynamic #149,  0            // InvokeDynamic #0:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      13: aload         4
      15: aload_3
      16: aload_2
      17: invokedynamic #162,  0            // InvokeDynamic #1:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      22: astore        6
      24: astore        5
      26: iconst_m1
      27: istore        7
      29: iload         7
      31: aload_1
      32: invokevirtual #166                // Method scala/collection/immutable/Vector.length:()I
      35: iconst_1
      36: isub
      37: if_icmplt     47
      40: aload         4
      42: aload_3
      43: invokestatic  #137                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      46: areturn
      47: aload_1
      48: iload         7
      50: iconst_1
      51: iadd
      52: invokevirtual #169                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      55: iload         7
      57: aload_1
      58: aload         5
      60: aload         6
      62: invokedynamic #177,  0            // InvokeDynamic #2:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      67: astore        9
      69: astore        8
      71: getstatic     #182                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      74: pop
      75: aload_3
      76: aload_2
      77: aload         8
      79: invokeinterface #122,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      84: aload         4
      86: aload_3
      87: aload         9
      89: aload         8
      91: invokedynamic #191,  0            // InvokeDynamic #3:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
      96: invokeinterface #197,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     101: areturn

  public final <M, A> M takeUntilM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: astore        4
       5: aload_3
       6: aload_2
       7: invokedynamic #219,  0            // InvokeDynamic #4:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      12: astore        5
      14: aload         4
      16: aload_3
      17: invokedynamic #149,  0            // InvokeDynamic #0:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      22: aload         4
      24: aload_3
      25: aload         5
      27: invokedynamic #162,  0            // InvokeDynamic #1:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      32: astore        7
      34: astore        6
      36: iconst_m1
      37: istore        8
      39: iload         8
      41: aload_1
      42: invokevirtual #166                // Method scala/collection/immutable/Vector.length:()I
      45: iconst_1
      46: isub
      47: if_icmplt     57
      50: aload         4
      52: aload_3
      53: invokestatic  #137                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      56: areturn
      57: aload_1
      58: iload         8
      60: iconst_1
      61: iadd
      62: invokevirtual #169                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      65: iload         8
      67: aload_1
      68: aload         6
      70: aload         7
      72: invokedynamic #177,  0            // InvokeDynamic #2:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      77: astore        10
      79: astore        9
      81: getstatic     #182                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      84: pop
      85: aload_3
      86: getstatic     #182                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      89: pop
      90: aload_3
      91: aload_2
      92: aload         9
      94: invokeinterface #122,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      99: invokedynamic #226,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
     104: invokeinterface #229,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     109: aload         4
     111: aload_3
     112: aload         10
     114: aload         9
     116: invokedynamic #191,  0            // InvokeDynamic #3:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
     121: invokeinterface #197,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     126: areturn

  public final <M, A> M filterM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: astore        4
       5: aload         4
       7: aload_3
       8: invokedynamic #246,  0            // InvokeDynamic #6:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
      13: aload_3
      14: aload_2
      15: invokedynamic #254,  0            // InvokeDynamic #7:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      20: astore        6
      22: astore        5
      24: iconst_m1
      25: istore        7
      27: iload         7
      29: aload_1
      30: invokevirtual #166                // Method scala/collection/immutable/Vector.length:()I
      33: iconst_1
      34: isub
      35: if_icmplt     45
      38: aload         4
      40: aload_3
      41: invokestatic  #242                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$filterM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      44: areturn
      45: aload_1
      46: iload         7
      48: iconst_1
      49: iadd
      50: invokevirtual #169                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      53: iload         7
      55: aload_1
      56: aload         5
      58: aload         6
      60: invokedynamic #177,  0            // InvokeDynamic #2:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      65: astore        9
      67: astore        8
      69: aload_3
      70: aload         9
      72: aload_3
      73: aload_2
      74: aload         8
      76: invokedynamic #262,  0            // InvokeDynamic #8:apply:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      81: invokeinterface #268,  3          // InterfaceMethod scalaz/Applicative.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      86: areturn

  public final <M, A> M findM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: pop
       4: aload_3
       5: invokedynamic #283,  0            // InvokeDynamic #9:apply:(Lscalaz/Monad;)Lscala/Function0;
      10: aload_3
      11: aload_2
      12: invokedynamic #291,  0            // InvokeDynamic #10:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      17: astore        5
      19: astore        4
      21: iconst_m1
      22: istore        6
      24: iload         6
      26: aload_1
      27: invokevirtual #166                // Method scala/collection/immutable/Vector.length:()I
      30: iconst_1
      31: isub
      32: if_icmplt     40
      35: aload_3
      36: invokestatic  #279                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$findM$1:(Lscalaz/Monad;)Ljava/lang/Object;
      39: areturn
      40: aload_1
      41: iload         6
      43: iconst_1
      44: iadd
      45: invokevirtual #169                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      48: iload         6
      50: aload_1
      51: aload         4
      53: aload         5
      55: invokedynamic #177,  0            // InvokeDynamic #2:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      60: astore        8
      62: astore        7
      64: getstatic     #182                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      67: pop
      68: aload_3
      69: aload_2
      70: aload         7
      72: invokeinterface #122,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      77: aload_3
      78: aload         7
      80: aload         8
      82: invokedynamic #299,  0            // InvokeDynamic #11:apply:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Lscala/Function1;
      87: invokeinterface #197,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      92: areturn

  public final <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> powerset$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: invokestatic  #309                // InterfaceMethod scalaz/std/VectorFunctions.powerset$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: areturn

  public final <M, A> M partitionM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: astore        4
       5: aload         4
       7: aload_3
       8: invokedynamic #316,  0            // InvokeDynamic #12:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
      13: aload_3
      14: aload_2
      15: invokedynamic #321,  0            // InvokeDynamic #13:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      20: astore        6
      22: astore        5
      24: iconst_m1
      25: istore        7
      27: iload         7
      29: aload_1
      30: invokevirtual #166                // Method scala/collection/immutable/Vector.length:()I
      33: iconst_1
      34: isub
      35: if_icmplt     45
      38: aload         4
      40: aload_3
      41: invokestatic  #314                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$partitionM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      44: areturn
      45: aload_1
      46: iload         7
      48: iconst_1
      49: iadd
      50: invokevirtual #169                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      53: iload         7
      55: aload_1
      56: aload         5
      58: aload         6
      60: invokedynamic #177,  0            // InvokeDynamic #2:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      65: astore        9
      67: astore        8
      69: aload_3
      70: aload         9
      72: aload_3
      73: aload_2
      74: aload         8
      76: invokedynamic #326,  0            // InvokeDynamic #14:apply:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      81: invokeinterface #268,  3          // InterfaceMethod scalaz/Applicative.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      86: areturn

  public final <M, A> M spanM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: astore        4
       5: getstatic     #182                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       8: pop
       9: aload_3
      10: aload         4
      12: aload_3
      13: invokedynamic #149,  0            // InvokeDynamic #0:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      18: aload         4
      20: aload_3
      21: aload_2
      22: invokedynamic #162,  0            // InvokeDynamic #1:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      27: astore        6
      29: astore        5
      31: iconst_m1
      32: istore        7
      34: iload         7
      36: aload_1
      37: invokevirtual #166                // Method scala/collection/immutable/Vector.length:()I
      40: iconst_1
      41: isub
      42: if_icmplt     54
      45: aload         4
      47: aload_3
      48: invokestatic  #137                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      51: goto          108
      54: aload_1
      55: iload         7
      57: iconst_1
      58: iadd
      59: invokevirtual #169                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      62: iload         7
      64: aload_1
      65: aload         5
      67: aload         6
      69: invokedynamic #177,  0            // InvokeDynamic #2:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      74: astore        9
      76: astore        8
      78: getstatic     #182                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      81: pop
      82: aload_3
      83: aload_2
      84: aload         8
      86: invokeinterface #122,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      91: aload         4
      93: aload_3
      94: aload         9
      96: aload         8
      98: invokedynamic #191,  0            // InvokeDynamic #3:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
     103: invokeinterface #197,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     108: aconst_null
     109: astore        5
     111: aconst_null
     112: astore        6
     114: aload_1
     115: invokedynamic #342,  0            // InvokeDynamic #15:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     120: invokeinterface #229,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     125: areturn

  public final <M, A> M breakM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: astore        4
       5: aload_3
       6: aload_2
       7: invokedynamic #353,  0            // InvokeDynamic #16:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      12: astore        5
      14: getstatic     #182                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      17: pop
      18: aload_3
      19: aload         4
      21: aload_3
      22: invokedynamic #149,  0            // InvokeDynamic #0:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      27: aload         4
      29: aload_3
      30: aload         5
      32: invokedynamic #162,  0            // InvokeDynamic #1:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      37: astore        7
      39: astore        6
      41: iconst_m1
      42: istore        8
      44: iload         8
      46: aload_1
      47: invokevirtual #166                // Method scala/collection/immutable/Vector.length:()I
      50: iconst_1
      51: isub
      52: if_icmplt     64
      55: aload         4
      57: aload_3
      58: invokestatic  #137                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      61: goto          133
      64: aload_1
      65: iload         8
      67: iconst_1
      68: iadd
      69: invokevirtual #169                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      72: iload         8
      74: aload_1
      75: aload         6
      77: aload         7
      79: invokedynamic #177,  0            // InvokeDynamic #2:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      84: astore        10
      86: astore        9
      88: getstatic     #182                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      91: pop
      92: aload_3
      93: getstatic     #182                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      96: pop
      97: aload_3
      98: aload_2
      99: aload         9
     101: invokeinterface #122,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     106: invokedynamic #358,  0            // InvokeDynamic #17:apply:()Lscala/Function1;
     111: invokeinterface #229,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     116: aload         4
     118: aload_3
     119: aload         10
     121: aload         9
     123: invokedynamic #191,  0            // InvokeDynamic #3:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
     128: invokeinterface #197,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     133: aconst_null
     134: astore        6
     136: aconst_null
     137: astore        7
     139: aload_1
     140: invokedynamic #342,  0            // InvokeDynamic #15:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     145: invokeinterface #229,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     150: areturn

  public final <M, A> M groupWhenM$extension(scala.collection.immutable.Vector<A>, scala.Function2<A, A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: astore        4
       5: aload_1
       6: invokevirtual #75                 // Method scala/collection/immutable/Vector.isEmpty:()Z
       9: ifeq          30
      12: getstatic     #182                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      15: pop
      16: aload_3
      17: aload         4
      19: invokedynamic #376,  0            // InvokeDynamic #18:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
      24: invokeinterface #380,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      29: areturn
      30: aload_3
      31: aload_2
      32: invokedynamic #390,  0            // InvokeDynamic #19:apply:(Lscalaz/Monad;Lscala/Function2;)Lscala/Function1;
      37: astore        5
      39: getstatic     #182                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      42: pop
      43: aload_3
      44: aload_1
      45: invokevirtual #103                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      48: getstatic     #395                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      51: pop
      52: new           #20                 // class scalaz/StateTInstances2$$anon$12
      55: dup
      56: aconst_null
      57: aload_3
      58: invokespecial #398                // Method scalaz/StateTInstances2$$anon$12."<init>":(Lscalaz/StateTInstances2;Lscalaz/Applicative;)V
      61: astore        7
      63: astore        6
      65: getstatic     #182                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      68: pop
      69: aload         4
      71: aload         7
      73: invokedynamic #149,  0            // InvokeDynamic #0:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      78: aload         4
      80: aload         7
      82: aload         5
      84: invokedynamic #162,  0            // InvokeDynamic #1:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      89: astore        9
      91: astore        8
      93: iconst_m1
      94: istore        10
      96: iload         10
      98: aload         6
     100: invokevirtual #166                // Method scala/collection/immutable/Vector.length:()I
     103: iconst_1
     104: isub
     105: if_icmplt     118
     108: aload         4
     110: aload         7
     112: invokestatic  #137                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
     115: goto          225
     118: aload         6
     120: iload         10
     122: iconst_1
     123: iadd
     124: invokevirtual #169                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
     127: iload         10
     129: aload         6
     131: aload         8
     133: aload         9
     135: invokedynamic #177,  0            // InvokeDynamic #2:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     140: astore        16
     142: astore        15
     144: getstatic     #182                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
     147: pop
     148: getstatic     #403                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
     151: pop
     152: aload_3
     153: aload_2
     154: aload         15
     156: invokedynamic #411,  0            // InvokeDynamic #20:apply:(Lscalaz/Monad;Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
     161: astore        20
     163: getstatic     #395                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
     166: pop
     167: new           #17                 // class scalaz/IndexedStateT$Wrap
     170: dup
     171: aload         20
     173: invokespecial #414                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
     176: aconst_null
     177: astore        20
     179: aload         4
     181: aload         7
     183: aload         16
     185: aload         15
     187: invokedynamic #191,  0            // InvokeDynamic #3:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
     192: astore        18
     194: astore        17
     196: aload         18
     198: invokedynamic #424,  0            // InvokeDynamic #21:apply:(Lscala/Function1;)Lscala/Function2;
     203: astore        19
     205: new           #12                 // class scalaz/IndexedStateT$FlatMap
     208: dup
     209: aload         17
     211: aload         19
     213: invokespecial #427                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
     216: aconst_null
     217: astore        19
     219: aconst_null
     220: astore        17
     222: aconst_null
     223: astore        18
     225: aconst_null
     226: astore        8
     228: aconst_null
     229: astore        9
     231: aload         6
     233: invokedynamic #342,  0            // InvokeDynamic #15:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     238: astore        11
     240: checkcast     #14                 // class scalaz/IndexedStateT
     243: astore        12
     245: aload         12
     247: aload         7
     249: invokeinterface #433,  1          // InterfaceMethod scalaz/StateTBind.F:()Lscalaz/Applicative;
     254: astore        13
     256: ifnonnull     261
     259: aconst_null
     260: athrow
     261: aload         13
     263: aload         11
     265: invokedynamic #441,  0            // InvokeDynamic #22:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
     270: invokedynamic #424,  0            // InvokeDynamic #21:apply:(Lscala/Function1;)Lscala/Function2;
     275: astore        14
     277: new           #12                 // class scalaz/IndexedStateT$FlatMap
     280: dup
     281: aload         12
     283: aload         14
     285: invokespecial #427                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
     288: aconst_null
     289: astore        14
     291: aconst_null
     292: astore        13
     294: aconst_null
     295: astore        12
     297: aconst_null
     298: astore        11
     300: aconst_null
     301: astore        6
     303: aconst_null
     304: astore        7
     306: aload_1
     307: invokevirtual #94                 // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     310: aload_3
     311: invokevirtual #445                // Method scalaz/IndexedStateT.eval:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
     314: aload         4
     316: aload_3
     317: aload_2
     318: aload_1
     319: invokedynamic #455,  0            // InvokeDynamic #23:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function2;Lscala/collection/immutable/Vector;)Lscala/Function1;
     324: invokeinterface #197,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     329: areturn

  public final <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> groupWhen$extension(scala.collection.immutable.Vector<A>, scala.Function2<A, A, java.lang.Object>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: astore_3
       4: aload_1
       5: aload_3
       6: invokestatic  #477                // InterfaceMethod scalaz/std/VectorFunctions.empty$:(Lscalaz/std/VectorFunctions;)Lscala/collection/immutable/Vector;
       9: astore        5
      11: astore        4
      13: aload         4
      15: invokevirtual #75                 // Method scala/collection/immutable/Vector.isEmpty:()Z
      18: ifeq          24
      21: aload         5
      23: areturn
      24: aload         4
      26: invokevirtual #103                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      29: aload         4
      31: invokevirtual #94                 // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      34: aload_3
      35: invokestatic  #477                // InterfaceMethod scalaz/std/VectorFunctions.empty$:(Lscalaz/std/VectorFunctions;)Lscala/collection/immutable/Vector;
      38: astore        10
      40: astore        9
      42: astore        8
      44: aload         8
      46: invokevirtual #75                 // Method scala/collection/immutable/Vector.isEmpty:()Z
      49: ifeq          61
      52: aload         10
      54: aload_3
      55: invokestatic  #477                // InterfaceMethod scalaz/std/VectorFunctions.empty$:(Lscalaz/std/VectorFunctions;)Lscala/collection/immutable/Vector;
      58: goto          118
      61: aload         8
      63: invokevirtual #94                 // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      66: astore        11
      68: aload         8
      70: invokevirtual #103                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      73: astore        12
      75: aload_2
      76: aload         9
      78: aload         11
      80: invokeinterface #479,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: invokestatic  #485                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      88: ifeq          114
      91: aload         12
      93: aload         11
      95: aload         10
      97: aload         11
      99: invokevirtual #488                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
     102: checkcast     #71                 // class scala/collection/immutable/Vector
     105: astore        10
     107: astore        9
     109: astore        8
     111: goto          44
     114: aload         10
     116: aload         8
     118: aconst_null
     119: astore        8
     121: aconst_null
     122: astore        9
     124: aconst_null
     125: astore        10
     127: aconst_null
     128: astore        11
     130: aconst_null
     131: astore        12
     133: astore        13
     135: astore        6
     137: aload         13
     139: aload         5
     141: aload         4
     143: invokevirtual #94                 // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     146: astore        7
     148: aload         6
     150: aload         7
     152: invokevirtual #491                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
     155: invokevirtual #488                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
     158: checkcast     #71                 // class scala/collection/immutable/Vector
     161: astore        5
     163: astore        4
     165: goto          13

  public final <B, C, A> scala.Tuple2<C, scala.collection.immutable.Vector<B>> mapAccumLeft$extension(scala.collection.immutable.Vector<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: astore        4
       5: aload_1
       6: new           #506                // class scala/Tuple2
       9: dup
      10: aload_2
      11: aload         4
      13: invokestatic  #477                // InterfaceMethod scalaz/std/VectorFunctions.empty$:(Lscalaz/std/VectorFunctions;)Lscala/collection/immutable/Vector;
      16: invokespecial #509                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      19: aload_3
      20: invokedynamic #519,  0            // InvokeDynamic #24:apply:(Lscala/Function2;)Lscala/Function2;
      25: invokevirtual #523                // Method scala/collection/immutable/Vector.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      28: checkcast     #506                // class scala/Tuple2
      31: areturn

  public final <B, C, A> scala.Tuple2<C, scala.collection.immutable.Vector<B>> mapAccumRight$extension(scala.collection.immutable.Vector<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: astore        4
       5: aload_1
       6: new           #506                // class scala/Tuple2
       9: dup
      10: aload_2
      11: aload         4
      13: invokestatic  #477                // InterfaceMethod scalaz/std/VectorFunctions.empty$:(Lscalaz/std/VectorFunctions;)Lscala/collection/immutable/Vector;
      16: invokespecial #509                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      19: aload_3
      20: invokedynamic #533,  0            // InvokeDynamic #25:apply:(Lscala/Function2;)Lscala/Function2;
      25: invokevirtual #536                // Method scala/collection/immutable/Vector.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      28: checkcast     #506                // class scala/Tuple2
      31: areturn

  public final <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> tailz$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: invokestatic  #541                // InterfaceMethod scalaz/std/VectorFunctions.tailz$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: areturn

  public final <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> initz$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: invokestatic  #545                // InterfaceMethod scalaz/std/VectorFunctions.initz$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: areturn

  public final <A> scala.collection.immutable.Vector<scala.Tuple2<A, A>> allPairs$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: invokestatic  #550                // InterfaceMethod scalaz/std/VectorFunctions.allPairs$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: areturn

  public final <A> scala.collection.immutable.Vector<scala.Tuple2<A, A>> adjacentPairs$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #39                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: invokestatic  #554                // InterfaceMethod scalaz/std/VectorFunctions.adjacentPairs$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: areturn

  public final <A> int hashCode$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_1
       1: invokevirtual #560                // Method scala/collection/immutable/Vector.hashCode:()I
       4: ireturn

  public final <A> boolean equals$extension(scala.collection.immutable.Vector<A>, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #566                // class scalaz/syntax/std/VectorOps
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ifeq          53
      15: aload_2
      16: ifnonnull     23
      19: aconst_null
      20: goto          30
      23: aload_2
      24: checkcast     #566                // class scalaz/syntax/std/VectorOps
      27: invokevirtual #569                // Method scalaz/syntax/std/VectorOps.scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
      30: astore_3
      31: aload_1
      32: dup
      33: ifnonnull     44
      36: pop
      37: aload_3
      38: ifnull        51
      41: goto          53
      44: aload_3
      45: invokevirtual #572                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      48: ifeq          53
      51: iconst_1
      52: ireturn
      53: iconst_0
      54: ireturn

  private scalaz.syntax.std.VectorOps$();
    Code:
       0: aload_0
       1: invokespecial #573                // Method java/lang/Object."<init>":()V
       4: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #585,  0            // InvokeDynamic #26:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
