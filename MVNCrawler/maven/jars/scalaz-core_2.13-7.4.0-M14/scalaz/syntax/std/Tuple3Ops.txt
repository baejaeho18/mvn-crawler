Compiled from "TupleOps.scala"
public final class scalaz.syntax.std.Tuple3Ops<A, B, C> {
  private final scala.Tuple3<A, B, C> scalaz$syntax$std$Tuple3Ops$$value;

  public static <A, B, C> boolean equals$extension(scala.Tuple3<A, B, C>, java.lang.Object);
    Code:
       0: getstatic     #23                 // Field scalaz/syntax/std/Tuple3Ops$.MODULE$:Lscalaz/syntax/std/Tuple3Ops$;
       3: aload_0
       4: aload_1
       5: invokevirtual #25                 // Method scalaz/syntax/std/Tuple3Ops$.equals$extension:(Lscala/Tuple3;Ljava/lang/Object;)Z
       8: ireturn

  public static <A, B, C> int hashCode$extension(scala.Tuple3<A, B, C>);
    Code:
       0: getstatic     #23                 // Field scalaz/syntax/std/Tuple3Ops$.MODULE$:Lscalaz/syntax/std/Tuple3Ops$;
       3: pop
       4: aload_0
       5: invokevirtual #35                 // Method scala/Tuple3.hashCode:()I
       8: ireturn

  public static <AA, BB, CC, A, B, C> scala.Function1<C, C> mapElements$default$3$extension(scala.Tuple3<A, B, C>);
    Code:
       0: getstatic     #23                 // Field scalaz/syntax/std/Tuple3Ops$.MODULE$:Lscalaz/syntax/std/Tuple3Ops$;
       3: aload_0
       4: invokevirtual #40                 // Method scalaz/syntax/std/Tuple3Ops$.mapElements$default$3$extension:(Lscala/Tuple3;)Lscala/Function1;
       7: areturn

  public static <AA, BB, CC, A, B, C> scala.Function1<B, B> mapElements$default$2$extension(scala.Tuple3<A, B, C>);
    Code:
       0: getstatic     #23                 // Field scalaz/syntax/std/Tuple3Ops$.MODULE$:Lscalaz/syntax/std/Tuple3Ops$;
       3: aload_0
       4: invokevirtual #44                 // Method scalaz/syntax/std/Tuple3Ops$.mapElements$default$2$extension:(Lscala/Tuple3;)Lscala/Function1;
       7: areturn

  public static <AA, BB, CC, A, B, C> scala.Function1<A, A> mapElements$default$1$extension(scala.Tuple3<A, B, C>);
    Code:
       0: getstatic     #23                 // Field scalaz/syntax/std/Tuple3Ops$.MODULE$:Lscalaz/syntax/std/Tuple3Ops$;
       3: aload_0
       4: invokevirtual #48                 // Method scalaz/syntax/std/Tuple3Ops$.mapElements$default$1$extension:(Lscala/Tuple3;)Lscala/Function1;
       7: areturn

  public static <AA, BB, CC, A, B, C> scala.Tuple3<AA, BB, CC> mapElements$extension(scala.Tuple3<A, B, C>, scala.Function1<A, AA>, scala.Function1<B, BB>, scala.Function1<C, CC>);
    Code:
       0: getstatic     #23                 // Field scalaz/syntax/std/Tuple3Ops$.MODULE$:Lscalaz/syntax/std/Tuple3Ops$;
       3: pop
       4: new           #31                 // class scala/Tuple3
       7: dup
       8: aload_1
       9: aload_0
      10: invokevirtual #57                 // Method scala/Tuple3._1:()Ljava/lang/Object;
      13: invokeinterface #63,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: aload_2
      19: aload_0
      20: invokevirtual #65                 // Method scala/Tuple3._2:()Ljava/lang/Object;
      23: invokeinterface #63,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: aload_3
      29: aload_0
      30: invokevirtual #67                 // Method scala/Tuple3._3:()Ljava/lang/Object;
      33: invokeinterface #63,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      38: invokespecial #71                 // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      41: areturn

  public static <Z, A, B, C> scala.collection.immutable.IndexedSeq<Z> toIndexedSeq$extension(scala.Tuple3<A, B, C>, scala.$less$colon$less<scala.Tuple3<A, B, C>, scala.Tuple3<Z, Z, Z>>);
    Code:
       0: getstatic     #23                 // Field scalaz/syntax/std/Tuple3Ops$.MODULE$:Lscalaz/syntax/std/Tuple3Ops$;
       3: aload_0
       4: aload_1
       5: invokevirtual #78                 // Method scalaz/syntax/std/Tuple3Ops$.toIndexedSeq$extension:(Lscala/Tuple3;Lscala/$less$colon$less;)Lscala/collection/immutable/IndexedSeq;
       8: areturn

  public static <Z, A, B, C> Z fold$extension(scala.Tuple3<A, B, C>, scala.Function0<scala.Function3<A, B, C, Z>>);
    Code:
       0: getstatic     #23                 // Field scalaz/syntax/std/Tuple3Ops$.MODULE$:Lscalaz/syntax/std/Tuple3Ops$;
       3: pop
       4: aload_1
       5: invokeinterface #87,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: checkcast     #89                 // class scala/Function3
      13: aload_0
      14: invokevirtual #57                 // Method scala/Tuple3._1:()Ljava/lang/Object;
      17: aload_0
      18: invokevirtual #65                 // Method scala/Tuple3._2:()Ljava/lang/Object;
      21: aload_0
      22: invokevirtual #67                 // Method scala/Tuple3._3:()Ljava/lang/Object;
      25: invokeinterface #92,  4           // InterfaceMethod scala/Function3.apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: areturn

  public scala.Tuple3<A, B, C> scalaz$syntax$std$Tuple3Ops$$value();
    Code:
       0: aload_0
       1: getfield      #97                 // Field scalaz$syntax$std$Tuple3Ops$$value:Lscala/Tuple3;
       4: areturn

  public <Z> Z fold(scala.Function0<scala.Function3<A, B, C, Z>>);
    Code:
       0: getstatic     #23                 // Field scalaz/syntax/std/Tuple3Ops$.MODULE$:Lscalaz/syntax/std/Tuple3Ops$;
       3: pop
       4: aload_0
       5: invokevirtual #104                // Method scalaz$syntax$std$Tuple3Ops$$value:()Lscala/Tuple3;
       8: astore_2
       9: aload_1
      10: invokeinterface #87,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      15: checkcast     #89                 // class scala/Function3
      18: aload_2
      19: invokevirtual #57                 // Method scala/Tuple3._1:()Ljava/lang/Object;
      22: aload_2
      23: invokevirtual #65                 // Method scala/Tuple3._2:()Ljava/lang/Object;
      26: aload_2
      27: invokevirtual #67                 // Method scala/Tuple3._3:()Ljava/lang/Object;
      30: invokeinterface #92,  4           // InterfaceMethod scala/Function3.apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: areturn

  public <Z> scala.collection.immutable.IndexedSeq<Z> toIndexedSeq(scala.$less$colon$less<scala.Tuple3<A, B, C>, scala.Tuple3<Z, Z, Z>>);
    Code:
       0: getstatic     #23                 // Field scalaz/syntax/std/Tuple3Ops$.MODULE$:Lscalaz/syntax/std/Tuple3Ops$;
       3: aload_0
       4: invokevirtual #104                // Method scalaz$syntax$std$Tuple3Ops$$value:()Lscala/Tuple3;
       7: aload_1
       8: invokevirtual #78                 // Method scalaz/syntax/std/Tuple3Ops$.toIndexedSeq$extension:(Lscala/Tuple3;Lscala/$less$colon$less;)Lscala/collection/immutable/IndexedSeq;
      11: areturn

  public <AA, BB, CC> scala.Tuple3<AA, BB, CC> mapElements(scala.Function1<A, AA>, scala.Function1<B, BB>, scala.Function1<C, CC>);
    Code:
       0: getstatic     #23                 // Field scalaz/syntax/std/Tuple3Ops$.MODULE$:Lscalaz/syntax/std/Tuple3Ops$;
       3: pop
       4: aload_0
       5: invokevirtual #104                // Method scalaz$syntax$std$Tuple3Ops$$value:()Lscala/Tuple3;
       8: astore        4
      10: new           #31                 // class scala/Tuple3
      13: dup
      14: aload_1
      15: aload         4
      17: invokevirtual #57                 // Method scala/Tuple3._1:()Ljava/lang/Object;
      20: invokeinterface #63,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      25: aload_2
      26: aload         4
      28: invokevirtual #65                 // Method scala/Tuple3._2:()Ljava/lang/Object;
      31: invokeinterface #63,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: aload_3
      37: aload         4
      39: invokevirtual #67                 // Method scala/Tuple3._3:()Ljava/lang/Object;
      42: invokeinterface #63,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      47: invokespecial #71                 // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      50: areturn

  public <AA, BB, CC> scala.Function1<A, A> mapElements$default$1();
    Code:
       0: getstatic     #23                 // Field scalaz/syntax/std/Tuple3Ops$.MODULE$:Lscalaz/syntax/std/Tuple3Ops$;
       3: aload_0
       4: invokevirtual #104                // Method scalaz$syntax$std$Tuple3Ops$$value:()Lscala/Tuple3;
       7: invokevirtual #48                 // Method scalaz/syntax/std/Tuple3Ops$.mapElements$default$1$extension:(Lscala/Tuple3;)Lscala/Function1;
      10: areturn

  public <AA, BB, CC> scala.Function1<B, B> mapElements$default$2();
    Code:
       0: getstatic     #23                 // Field scalaz/syntax/std/Tuple3Ops$.MODULE$:Lscalaz/syntax/std/Tuple3Ops$;
       3: aload_0
       4: invokevirtual #104                // Method scalaz$syntax$std$Tuple3Ops$$value:()Lscala/Tuple3;
       7: invokevirtual #44                 // Method scalaz/syntax/std/Tuple3Ops$.mapElements$default$2$extension:(Lscala/Tuple3;)Lscala/Function1;
      10: areturn

  public <AA, BB, CC> scala.Function1<C, C> mapElements$default$3();
    Code:
       0: getstatic     #23                 // Field scalaz/syntax/std/Tuple3Ops$.MODULE$:Lscalaz/syntax/std/Tuple3Ops$;
       3: aload_0
       4: invokevirtual #104                // Method scalaz$syntax$std$Tuple3Ops$$value:()Lscala/Tuple3;
       7: invokevirtual #40                 // Method scalaz/syntax/std/Tuple3Ops$.mapElements$default$3$extension:(Lscala/Tuple3;)Lscala/Function1;
      10: areturn

  public int hashCode();
    Code:
       0: getstatic     #23                 // Field scalaz/syntax/std/Tuple3Ops$.MODULE$:Lscalaz/syntax/std/Tuple3Ops$;
       3: pop
       4: aload_0
       5: invokevirtual #104                // Method scalaz$syntax$std$Tuple3Ops$$value:()Lscala/Tuple3;
       8: invokevirtual #35                 // Method scala/Tuple3.hashCode:()I
      11: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: getstatic     #23                 // Field scalaz/syntax/std/Tuple3Ops$.MODULE$:Lscalaz/syntax/std/Tuple3Ops$;
       3: aload_0
       4: invokevirtual #104                // Method scalaz$syntax$std$Tuple3Ops$$value:()Lscala/Tuple3;
       7: aload_1
       8: invokevirtual #25                 // Method scalaz/syntax/std/Tuple3Ops$.equals$extension:(Lscala/Tuple3;Ljava/lang/Object;)Z
      11: ireturn

  public scalaz.syntax.std.Tuple3Ops(scala.Tuple3<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #97                 // Field scalaz$syntax$std$Tuple3Ops$$value:Lscala/Tuple3;
       5: aload_0
       6: invokespecial #127                // Method java/lang/Object."<init>":()V
       9: return
}
