Compiled from "VectorOps.scala"
public final class scalaz.syntax.std.VectorOps<A> {
  private final scala.collection.immutable.Vector<A> scalaz$syntax$std$VectorOps$$self;

  public static <A> boolean equals$extension(scala.collection.immutable.Vector<A>, java.lang.Object);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: aload_1
       5: invokevirtual #40                 // Method scalaz/syntax/std/VectorOps$.equals$extension:(Lscala/collection/immutable/Vector;Ljava/lang/Object;)Z
       8: ireturn

  public static <A> int hashCode$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #50                 // Method scala/collection/immutable/Vector.hashCode:()I
       8: ireturn

  public static <A> scala.collection.immutable.Vector<scala.Tuple2<A, A>> adjacentPairs$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: aload_0
       8: invokestatic  #64                 // InterfaceMethod scalaz/std/VectorFunctions.adjacentPairs$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      11: areturn

  public static <A> scala.collection.immutable.Vector<scala.Tuple2<A, A>> allPairs$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: aload_0
       8: invokestatic  #68                 // InterfaceMethod scalaz/std/VectorFunctions.allPairs$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      11: areturn

  public static <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> initz$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: aload_0
       8: invokestatic  #73                 // InterfaceMethod scalaz/std/VectorFunctions.initz$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      11: areturn

  public static <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> tailz$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: aload_0
       8: invokestatic  #77                 // InterfaceMethod scalaz/std/VectorFunctions.tailz$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      11: areturn

  public static <B, C, A> scala.Tuple2<C, scala.collection.immutable.Vector<B>> mapAccumRight$extension(scala.collection.immutable.Vector<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: astore_3
       8: aload_0
       9: new           #84                 // class scala/Tuple2
      12: dup
      13: aload_1
      14: aload_3
      15: invokestatic  #88                 // InterfaceMethod scalaz/std/VectorFunctions.empty$:(Lscalaz/std/VectorFunctions;)Lscala/collection/immutable/Vector;
      18: invokespecial #92                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      21: aload_2
      22: invokedynamic #114,  0            // InvokeDynamic #0:apply:(Lscala/Function2;)Lscala/Function2;
      27: invokevirtual #118                // Method scala/collection/immutable/Vector.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      30: checkcast     #84                 // class scala/Tuple2
      33: areturn

  public static <B, C, A> scala.Tuple2<C, scala.collection.immutable.Vector<B>> mapAccumLeft$extension(scala.collection.immutable.Vector<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: astore_3
       8: aload_0
       9: new           #84                 // class scala/Tuple2
      12: dup
      13: aload_1
      14: aload_3
      15: invokestatic  #88                 // InterfaceMethod scalaz/std/VectorFunctions.empty$:(Lscalaz/std/VectorFunctions;)Lscala/collection/immutable/Vector;
      18: invokespecial #92                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      21: aload_2
      22: invokedynamic #129,  0            // InvokeDynamic #1:apply:(Lscala/Function2;)Lscala/Function2;
      27: invokevirtual #132                // Method scala/collection/immutable/Vector.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      30: checkcast     #84                 // class scala/Tuple2
      33: areturn

  public static <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> groupWhen$extension(scala.collection.immutable.Vector<A>, scala.Function2<A, A, java.lang.Object>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: astore_2
       8: aload_0
       9: aload_2
      10: invokestatic  #88                 // InterfaceMethod scalaz/std/VectorFunctions.empty$:(Lscalaz/std/VectorFunctions;)Lscala/collection/immutable/Vector;
      13: astore        4
      15: astore_3
      16: aload_3
      17: invokevirtual #141                // Method scala/collection/immutable/Vector.isEmpty:()Z
      20: ifeq          26
      23: aload         4
      25: areturn
      26: aload_3
      27: invokevirtual #145                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      30: aload_3
      31: invokevirtual #149                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      34: aload_2
      35: invokestatic  #88                 // InterfaceMethod scalaz/std/VectorFunctions.empty$:(Lscalaz/std/VectorFunctions;)Lscala/collection/immutable/Vector;
      38: astore        9
      40: astore        8
      42: astore        7
      44: aload         7
      46: invokevirtual #141                // Method scala/collection/immutable/Vector.isEmpty:()Z
      49: ifeq          61
      52: aload         9
      54: aload_2
      55: invokestatic  #88                 // InterfaceMethod scalaz/std/VectorFunctions.empty$:(Lscalaz/std/VectorFunctions;)Lscala/collection/immutable/Vector;
      58: goto          118
      61: aload         7
      63: invokevirtual #149                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      66: astore        10
      68: aload         7
      70: invokevirtual #145                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      73: astore        11
      75: aload_1
      76: aload         8
      78: aload         10
      80: invokeinterface #153,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: invokestatic  #159                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      88: ifeq          114
      91: aload         11
      93: aload         10
      95: aload         9
      97: aload         10
      99: invokevirtual #163                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
     102: checkcast     #46                 // class scala/collection/immutable/Vector
     105: astore        9
     107: astore        8
     109: astore        7
     111: goto          44
     114: aload         9
     116: aload         7
     118: aconst_null
     119: astore        7
     121: aconst_null
     122: astore        8
     124: aconst_null
     125: astore        9
     127: aconst_null
     128: astore        10
     130: aconst_null
     131: astore        11
     133: astore        12
     135: astore        5
     137: aload         12
     139: aload         4
     141: aload_3
     142: invokevirtual #149                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     145: astore        6
     147: aload         5
     149: aload         6
     151: invokevirtual #166                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
     154: invokevirtual #163                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
     157: checkcast     #46                 // class scala/collection/immutable/Vector
     160: astore        4
     162: astore_3
     163: goto          16

  public static <M, A> M groupWhenM$extension(scala.collection.immutable.Vector<A>, scala.Function2<A, A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: astore_3
       8: aload_0
       9: invokevirtual #141                // Method scala/collection/immutable/Vector.isEmpty:()Z
      12: ifeq          32
      15: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      18: pop
      19: aload_2
      20: aload_3
      21: invokedynamic #193,  0            // InvokeDynamic #2:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
      26: invokeinterface #199,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      31: areturn
      32: aload_2
      33: aload_1
      34: invokedynamic #210,  0            // InvokeDynamic #3:apply:(Lscalaz/Monad;Lscala/Function2;)Lscala/Function1;
      39: astore        4
      41: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      44: pop
      45: aload_2
      46: aload_0
      47: invokevirtual #145                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      50: getstatic     #215                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      53: pop
      54: new           #24                 // class scalaz/StateTInstances2$$anon$12
      57: dup
      58: aconst_null
      59: aload_2
      60: invokespecial #218                // Method scalaz/StateTInstances2$$anon$12."<init>":(Lscalaz/StateTInstances2;Lscalaz/Applicative;)V
      63: astore        6
      65: astore        5
      67: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      70: pop
      71: aload_3
      72: aload         6
      74: invokedynamic #226,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      79: aload_3
      80: aload         6
      82: aload         4
      84: invokedynamic #236,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      89: astore        8
      91: astore        7
      93: iconst_m1
      94: istore        9
      96: iload         9
      98: aload         5
     100: invokevirtual #239                // Method scala/collection/immutable/Vector.length:()I
     103: iconst_1
     104: isub
     105: if_icmplt     117
     108: aload_3
     109: aload         6
     111: invokestatic  #222                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
     114: goto          223
     117: aload         5
     119: iload         9
     121: iconst_1
     122: iadd
     123: invokevirtual #242                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
     126: iload         9
     128: aload         5
     130: aload         7
     132: aload         8
     134: invokedynamic #250,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     139: astore        15
     141: astore        14
     143: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
     146: pop
     147: getstatic     #255                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
     150: pop
     151: aload_2
     152: aload_1
     153: aload         14
     155: invokedynamic #263,  0            // InvokeDynamic #7:apply:(Lscalaz/Monad;Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
     160: astore        19
     162: getstatic     #215                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
     165: pop
     166: new           #21                 // class scalaz/IndexedStateT$Wrap
     169: dup
     170: aload         19
     172: invokespecial #266                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
     175: aconst_null
     176: astore        19
     178: aload_3
     179: aload         6
     181: aload         15
     183: aload         14
     185: invokedynamic #274,  0            // InvokeDynamic #8:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
     190: astore        17
     192: astore        16
     194: aload         17
     196: invokedynamic #284,  0            // InvokeDynamic #9:apply:(Lscala/Function1;)Lscala/Function2;
     201: astore        18
     203: new           #16                 // class scalaz/IndexedStateT$FlatMap
     206: dup
     207: aload         16
     209: aload         18
     211: invokespecial #287                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
     214: aconst_null
     215: astore        18
     217: aconst_null
     218: astore        16
     220: aconst_null
     221: astore        17
     223: aconst_null
     224: astore        7
     226: aconst_null
     227: astore        8
     229: aload         5
     231: invokedynamic #297,  0            // InvokeDynamic #10:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     236: astore        10
     238: checkcast     #18                 // class scalaz/IndexedStateT
     241: astore        11
     243: aload         11
     245: aload         6
     247: invokeinterface #303,  1          // InterfaceMethod scalaz/StateTBind.F:()Lscalaz/Applicative;
     252: astore        12
     254: ifnonnull     259
     257: aconst_null
     258: athrow
     259: aload         12
     261: aload         10
     263: invokedynamic #311,  0            // InvokeDynamic #11:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
     268: invokedynamic #284,  0            // InvokeDynamic #9:apply:(Lscala/Function1;)Lscala/Function2;
     273: astore        13
     275: new           #16                 // class scalaz/IndexedStateT$FlatMap
     278: dup
     279: aload         11
     281: aload         13
     283: invokespecial #287                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
     286: aconst_null
     287: astore        13
     289: aconst_null
     290: astore        12
     292: aconst_null
     293: astore        11
     295: aconst_null
     296: astore        10
     298: aconst_null
     299: astore        5
     301: aconst_null
     302: astore        6
     304: aload_0
     305: invokevirtual #149                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     308: aload_2
     309: invokevirtual #315                // Method scalaz/IndexedStateT.eval:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
     312: aload_3
     313: aload_2
     314: aload_1
     315: aload_0
     316: invokedynamic #325,  0            // InvokeDynamic #12:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function2;Lscala/collection/immutable/Vector;)Lscala/Function1;
     321: invokeinterface #329,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     326: areturn

  public static <M, A> M breakM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: astore_3
       8: aload_2
       9: aload_1
      10: invokedynamic #368,  0            // InvokeDynamic #13:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      15: astore        4
      17: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      20: pop
      21: aload_2
      22: aload_3
      23: aload_2
      24: invokedynamic #226,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      29: aload_3
      30: aload_2
      31: aload         4
      33: invokedynamic #236,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      38: astore        6
      40: astore        5
      42: iconst_m1
      43: istore        7
      45: iload         7
      47: aload_0
      48: invokevirtual #239                // Method scala/collection/immutable/Vector.length:()I
      51: iconst_1
      52: isub
      53: if_icmplt     64
      56: aload_3
      57: aload_2
      58: invokestatic  #222                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      61: goto          132
      64: aload_0
      65: iload         7
      67: iconst_1
      68: iadd
      69: invokevirtual #242                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      72: iload         7
      74: aload_0
      75: aload         5
      77: aload         6
      79: invokedynamic #250,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      84: astore        9
      86: astore        8
      88: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      91: pop
      92: aload_2
      93: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      96: pop
      97: aload_2
      98: aload_1
      99: aload         8
     101: invokeinterface #370,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     106: invokedynamic #377,  0            // InvokeDynamic #14:apply:()Lscala/Function1;
     111: invokeinterface #380,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     116: aload_3
     117: aload_2
     118: aload         9
     120: aload         8
     122: invokedynamic #274,  0            // InvokeDynamic #8:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
     127: invokeinterface #329,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     132: aconst_null
     133: astore        5
     135: aconst_null
     136: astore        6
     138: aload_0
     139: invokedynamic #297,  0            // InvokeDynamic #10:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     144: invokeinterface #380,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     149: areturn

  public static <M, A> M spanM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: astore_3
       8: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      11: pop
      12: aload_2
      13: aload_3
      14: aload_2
      15: invokedynamic #226,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      20: aload_3
      21: aload_2
      22: aload_1
      23: invokedynamic #236,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      28: astore        5
      30: astore        4
      32: iconst_m1
      33: istore        6
      35: iload         6
      37: aload_0
      38: invokevirtual #239                // Method scala/collection/immutable/Vector.length:()I
      41: iconst_1
      42: isub
      43: if_icmplt     54
      46: aload_3
      47: aload_2
      48: invokestatic  #222                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      51: goto          107
      54: aload_0
      55: iload         6
      57: iconst_1
      58: iadd
      59: invokevirtual #242                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      62: iload         6
      64: aload_0
      65: aload         4
      67: aload         5
      69: invokedynamic #250,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      74: astore        8
      76: astore        7
      78: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      81: pop
      82: aload_2
      83: aload_1
      84: aload         7
      86: invokeinterface #370,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      91: aload_3
      92: aload_2
      93: aload         8
      95: aload         7
      97: invokedynamic #274,  0            // InvokeDynamic #8:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
     102: invokeinterface #329,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     107: aconst_null
     108: astore        4
     110: aconst_null
     111: astore        5
     113: aload_0
     114: invokedynamic #297,  0            // InvokeDynamic #10:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     119: invokeinterface #380,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     124: areturn

  public static <M, A> M partitionM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: astore_3
       8: aload_3
       9: aload_2
      10: invokedynamic #403,  0            // InvokeDynamic #15:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
      15: aload_2
      16: aload_1
      17: invokedynamic #411,  0            // InvokeDynamic #16:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      22: astore        5
      24: astore        4
      26: iconst_m1
      27: istore        6
      29: iload         6
      31: aload_0
      32: invokevirtual #239                // Method scala/collection/immutable/Vector.length:()I
      35: iconst_1
      36: isub
      37: if_icmplt     46
      40: aload_3
      41: aload_2
      42: invokestatic  #399                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$partitionM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      45: areturn
      46: aload_0
      47: iload         6
      49: iconst_1
      50: iadd
      51: invokevirtual #242                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      54: iload         6
      56: aload_0
      57: aload         4
      59: aload         5
      61: invokedynamic #250,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      66: astore        8
      68: astore        7
      70: aload_2
      71: aload         8
      73: aload_2
      74: aload_1
      75: aload         7
      77: invokedynamic #419,  0            // InvokeDynamic #17:apply:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      82: invokeinterface #423,  3          // InterfaceMethod scalaz/Applicative.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      87: areturn

  public static <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> powerset$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: aload_0
       8: invokestatic  #431                // InterfaceMethod scalaz/std/VectorFunctions.powerset$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      11: areturn

  public static <M, A> M findM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: pop
       8: aload_2
       9: invokedynamic #441,  0            // InvokeDynamic #18:apply:(Lscalaz/Monad;)Lscala/Function0;
      14: aload_2
      15: aload_1
      16: invokedynamic #449,  0            // InvokeDynamic #19:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      21: astore        4
      23: astore_3
      24: iconst_m1
      25: istore        5
      27: iload         5
      29: aload_0
      30: invokevirtual #239                // Method scala/collection/immutable/Vector.length:()I
      33: iconst_1
      34: isub
      35: if_icmplt     43
      38: aload_2
      39: invokestatic  #437                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$findM$1:(Lscalaz/Monad;)Ljava/lang/Object;
      42: areturn
      43: aload_0
      44: iload         5
      46: iconst_1
      47: iadd
      48: invokevirtual #242                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      51: iload         5
      53: aload_0
      54: aload_3
      55: aload         4
      57: invokedynamic #250,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      62: astore        7
      64: astore        6
      66: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      69: pop
      70: aload_2
      71: aload_1
      72: aload         6
      74: invokeinterface #370,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      79: aload_2
      80: aload         6
      82: aload         7
      84: invokedynamic #457,  0            // InvokeDynamic #20:apply:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Lscala/Function1;
      89: invokeinterface #329,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      94: areturn

  public static <M, A> M filterM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: astore_3
       8: aload_3
       9: aload_2
      10: invokedynamic #467,  0            // InvokeDynamic #21:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
      15: aload_2
      16: aload_1
      17: invokedynamic #472,  0            // InvokeDynamic #22:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      22: astore        5
      24: astore        4
      26: iconst_m1
      27: istore        6
      29: iload         6
      31: aload_0
      32: invokevirtual #239                // Method scala/collection/immutable/Vector.length:()I
      35: iconst_1
      36: isub
      37: if_icmplt     46
      40: aload_3
      41: aload_2
      42: invokestatic  #465                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$filterM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      45: areturn
      46: aload_0
      47: iload         6
      49: iconst_1
      50: iadd
      51: invokevirtual #242                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      54: iload         6
      56: aload_0
      57: aload         4
      59: aload         5
      61: invokedynamic #250,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      66: astore        8
      68: astore        7
      70: aload_2
      71: aload         8
      73: aload_2
      74: aload_1
      75: aload         7
      77: invokedynamic #477,  0            // InvokeDynamic #23:apply:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      82: invokeinterface #423,  3          // InterfaceMethod scalaz/Applicative.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      87: areturn

  public static <M, A> M takeUntilM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: astore_3
       8: aload_2
       9: aload_1
      10: invokedynamic #488,  0            // InvokeDynamic #24:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      15: astore        4
      17: aload_3
      18: aload_2
      19: invokedynamic #226,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      24: aload_3
      25: aload_2
      26: aload         4
      28: invokedynamic #236,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      33: astore        6
      35: astore        5
      37: iconst_m1
      38: istore        7
      40: iload         7
      42: aload_0
      43: invokevirtual #239                // Method scala/collection/immutable/Vector.length:()I
      46: iconst_1
      47: isub
      48: if_icmplt     57
      51: aload_3
      52: aload_2
      53: invokestatic  #222                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      56: areturn
      57: aload_0
      58: iload         7
      60: iconst_1
      61: iadd
      62: invokevirtual #242                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      65: iload         7
      67: aload_0
      68: aload         5
      70: aload         6
      72: invokedynamic #250,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      77: astore        9
      79: astore        8
      81: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      84: pop
      85: aload_2
      86: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      89: pop
      90: aload_2
      91: aload_1
      92: aload         8
      94: invokeinterface #370,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      99: invokedynamic #493,  0            // InvokeDynamic #25:apply:()Lscala/Function1;
     104: invokeinterface #380,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     109: aload_3
     110: aload_2
     111: aload         9
     113: aload         8
     115: invokedynamic #274,  0            // InvokeDynamic #8:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
     120: invokeinterface #329,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     125: areturn

  public static <M, A> M takeWhileM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: astore_3
       8: aload_3
       9: aload_2
      10: invokedynamic #226,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      15: aload_3
      16: aload_2
      17: aload_1
      18: invokedynamic #236,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      23: astore        5
      25: astore        4
      27: iconst_m1
      28: istore        6
      30: iload         6
      32: aload_0
      33: invokevirtual #239                // Method scala/collection/immutable/Vector.length:()I
      36: iconst_1
      37: isub
      38: if_icmplt     47
      41: aload_3
      42: aload_2
      43: invokestatic  #222                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      46: areturn
      47: aload_0
      48: iload         6
      50: iconst_1
      51: iadd
      52: invokevirtual #242                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      55: iload         6
      57: aload_0
      58: aload         4
      60: aload         5
      62: invokedynamic #250,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      67: astore        8
      69: astore        7
      71: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      74: pop
      75: aload_2
      76: aload_1
      77: aload         7
      79: invokeinterface #370,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      84: aload_3
      85: aload_2
      86: aload         8
      88: aload         7
      90: invokedynamic #274,  0            // InvokeDynamic #8:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
      95: invokeinterface #329,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     100: areturn

  public static <B, A> B $less$up$greater$extension(scala.collection.immutable.Vector<A>, scala.Function1<scalaz.NonEmptyList<A>, B>, scalaz.Monoid<B>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: pop
       8: aload_0
       9: invokevirtual #141                // Method scala/collection/immutable/Vector.isEmpty:()Z
      12: ifeq          26
      15: getstatic     #513                // Field scalaz/Monoid$.MODULE$:Lscalaz/Monoid$;
      18: pop
      19: aload_2
      20: invokeinterface #518,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      25: areturn
      26: aload_1
      27: getstatic     #523                // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      30: pop
      31: aload_0
      32: invokevirtual #149                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      35: getstatic     #528                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      38: aload_0
      39: invokevirtual #145                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      42: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      45: invokevirtual #532                // Method scalaz/std/vector$.vectorInstance:()Lscalaz/Traverse;
      48: invokevirtual #536                // Method scalaz/IList$.fromFoldable:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/IList;
      51: astore        4
      53: astore_3
      54: new           #538                // class scalaz/NonEmptyList
      57: dup
      58: aload_3
      59: aload         4
      61: invokespecial #541                // Method scalaz/NonEmptyList."<init>":(Ljava/lang/Object;Lscalaz/IList;)V
      64: aconst_null
      65: astore_3
      66: aconst_null
      67: astore        4
      69: invokeinterface #370,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      74: areturn

  public static <A> scalaz.Maybe<scalaz.Zipper<A>> zipperEnd$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: aload_0
       8: invokestatic  #552                // InterfaceMethod scalaz/std/VectorFunctions.zipperEnd$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
      11: areturn

  public static <A> scalaz.Maybe<scalaz.Zipper<A>> toZipper$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: aload_0
       8: invokestatic  #556                // InterfaceMethod scalaz/std/VectorFunctions.toZipper$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
      11: areturn

  public static <A> scalaz.Maybe<scalaz.NonEmptyList<A>> toNel$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: aload_0
       8: invokestatic  #561                // InterfaceMethod scalaz/std/VectorFunctions.toNel$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
      11: areturn

  public static <A> scala.collection.immutable.Vector<A> intersperse$extension(scala.collection.immutable.Vector<A>, A);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: aload_0
       8: aload_1
       9: invokestatic  #569                // InterfaceMethod scalaz/std/VectorFunctions.intersperse$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
      12: areturn

  public scala.collection.immutable.Vector<A> scalaz$syntax$std$VectorOps$$self();
    Code:
       0: aload_0
       1: getfield      #572                // Field scalaz$syntax$std$VectorOps$$self:Lscala/collection/immutable/Vector;
       4: areturn

  public final scala.collection.immutable.Vector<A> intersperse(A);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_2
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: aload_2
      13: aload_1
      14: invokestatic  #569                // InterfaceMethod scalaz/std/VectorFunctions.intersperse$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
      17: areturn

  public final scalaz.Maybe<scalaz.NonEmptyList<A>> toNel();
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_1
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: aload_1
      13: invokestatic  #561                // InterfaceMethod scalaz/std/VectorFunctions.toNel$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
      16: areturn

  public final scalaz.Maybe<scalaz.Zipper<A>> toZipper();
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_1
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: aload_1
      13: invokestatic  #556                // InterfaceMethod scalaz/std/VectorFunctions.toZipper$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
      16: areturn

  public final scalaz.Maybe<scalaz.Zipper<A>> zipperEnd();
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_1
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: aload_1
      13: invokestatic  #552                // InterfaceMethod scalaz/std/VectorFunctions.zipperEnd$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
      16: areturn

  public final <B> B $less$up$greater(scala.Function1<scalaz.NonEmptyList<A>, B>, scalaz.Monoid<B>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_3
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: pop
      13: aload_3
      14: invokevirtual #141                // Method scala/collection/immutable/Vector.isEmpty:()Z
      17: ifeq          31
      20: getstatic     #513                // Field scalaz/Monoid$.MODULE$:Lscalaz/Monoid$;
      23: pop
      24: aload_2
      25: invokeinterface #518,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      30: areturn
      31: aload_1
      32: getstatic     #523                // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      35: pop
      36: aload_3
      37: invokevirtual #149                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      40: getstatic     #528                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      43: aload_3
      44: invokevirtual #145                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      47: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      50: invokevirtual #532                // Method scalaz/std/vector$.vectorInstance:()Lscalaz/Traverse;
      53: invokevirtual #536                // Method scalaz/IList$.fromFoldable:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/IList;
      56: astore        5
      58: astore        4
      60: new           #538                // class scalaz/NonEmptyList
      63: dup
      64: aload         4
      66: aload         5
      68: invokespecial #541                // Method scalaz/NonEmptyList."<init>":(Ljava/lang/Object;Lscalaz/IList;)V
      71: aconst_null
      72: astore        4
      74: aconst_null
      75: astore        5
      77: invokeinterface #370,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      82: areturn

  public final <M> M takeWhileM(scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_3
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: astore        4
      14: aload         4
      16: aload_2
      17: invokedynamic #226,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      22: aload         4
      24: aload_2
      25: aload_1
      26: invokedynamic #236,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      31: astore        6
      33: astore        5
      35: iconst_m1
      36: istore        7
      38: iload         7
      40: aload_3
      41: invokevirtual #239                // Method scala/collection/immutable/Vector.length:()I
      44: iconst_1
      45: isub
      46: if_icmplt     56
      49: aload         4
      51: aload_2
      52: invokestatic  #222                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      55: areturn
      56: aload_3
      57: iload         7
      59: iconst_1
      60: iadd
      61: invokevirtual #242                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      64: iload         7
      66: aload_3
      67: aload         5
      69: aload         6
      71: invokedynamic #250,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      76: astore        9
      78: astore        8
      80: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      83: pop
      84: aload_2
      85: aload_1
      86: aload         8
      88: invokeinterface #370,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      93: aload         4
      95: aload_2
      96: aload         9
      98: aload         8
     100: invokedynamic #274,  0            // InvokeDynamic #8:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
     105: invokeinterface #329,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     110: areturn

  public final <M> M takeUntilM(scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_3
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: astore        4
      14: aload_2
      15: aload_1
      16: invokedynamic #488,  0            // InvokeDynamic #24:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      21: astore        5
      23: aload         4
      25: aload_2
      26: invokedynamic #226,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      31: aload         4
      33: aload_2
      34: aload         5
      36: invokedynamic #236,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      41: astore        7
      43: astore        6
      45: iconst_m1
      46: istore        8
      48: iload         8
      50: aload_3
      51: invokevirtual #239                // Method scala/collection/immutable/Vector.length:()I
      54: iconst_1
      55: isub
      56: if_icmplt     66
      59: aload         4
      61: aload_2
      62: invokestatic  #222                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      65: areturn
      66: aload_3
      67: iload         8
      69: iconst_1
      70: iadd
      71: invokevirtual #242                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      74: iload         8
      76: aload_3
      77: aload         6
      79: aload         7
      81: invokedynamic #250,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      86: astore        10
      88: astore        9
      90: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      93: pop
      94: aload_2
      95: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      98: pop
      99: aload_2
     100: aload_1
     101: aload         9
     103: invokeinterface #370,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     108: invokedynamic #493,  0            // InvokeDynamic #25:apply:()Lscala/Function1;
     113: invokeinterface #380,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     118: aload         4
     120: aload_2
     121: aload         10
     123: aload         9
     125: invokedynamic #274,  0            // InvokeDynamic #8:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
     130: invokeinterface #329,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     135: areturn

  public final <M> M filterM(scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_3
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: astore        4
      14: aload         4
      16: aload_2
      17: invokedynamic #467,  0            // InvokeDynamic #21:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
      22: aload_2
      23: aload_1
      24: invokedynamic #472,  0            // InvokeDynamic #22:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      29: astore        6
      31: astore        5
      33: iconst_m1
      34: istore        7
      36: iload         7
      38: aload_3
      39: invokevirtual #239                // Method scala/collection/immutable/Vector.length:()I
      42: iconst_1
      43: isub
      44: if_icmplt     54
      47: aload         4
      49: aload_2
      50: invokestatic  #465                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$filterM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      53: areturn
      54: aload_3
      55: iload         7
      57: iconst_1
      58: iadd
      59: invokevirtual #242                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      62: iload         7
      64: aload_3
      65: aload         5
      67: aload         6
      69: invokedynamic #250,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      74: astore        9
      76: astore        8
      78: aload_2
      79: aload         9
      81: aload_2
      82: aload_1
      83: aload         8
      85: invokedynamic #477,  0            // InvokeDynamic #23:apply:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      90: invokeinterface #423,  3          // InterfaceMethod scalaz/Applicative.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      95: areturn

  public final <M> M findM(scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_3
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: pop
      13: aload_2
      14: invokedynamic #441,  0            // InvokeDynamic #18:apply:(Lscalaz/Monad;)Lscala/Function0;
      19: aload_2
      20: aload_1
      21: invokedynamic #449,  0            // InvokeDynamic #19:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      26: astore        5
      28: astore        4
      30: iconst_m1
      31: istore        6
      33: iload         6
      35: aload_3
      36: invokevirtual #239                // Method scala/collection/immutable/Vector.length:()I
      39: iconst_1
      40: isub
      41: if_icmplt     49
      44: aload_2
      45: invokestatic  #437                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$findM$1:(Lscalaz/Monad;)Ljava/lang/Object;
      48: areturn
      49: aload_3
      50: iload         6
      52: iconst_1
      53: iadd
      54: invokevirtual #242                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      57: iload         6
      59: aload_3
      60: aload         4
      62: aload         5
      64: invokedynamic #250,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      69: astore        8
      71: astore        7
      73: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      76: pop
      77: aload_2
      78: aload_1
      79: aload         7
      81: invokeinterface #370,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      86: aload_2
      87: aload         7
      89: aload         8
      91: invokedynamic #457,  0            // InvokeDynamic #20:apply:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Lscala/Function1;
      96: invokeinterface #329,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     101: areturn

  public final scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> powerset();
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_1
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: aload_1
      13: invokestatic  #431                // InterfaceMethod scalaz/std/VectorFunctions.powerset$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      16: areturn

  public final <M> M partitionM(scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_3
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: astore        4
      14: aload         4
      16: aload_2
      17: invokedynamic #403,  0            // InvokeDynamic #15:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
      22: aload_2
      23: aload_1
      24: invokedynamic #411,  0            // InvokeDynamic #16:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      29: astore        6
      31: astore        5
      33: iconst_m1
      34: istore        7
      36: iload         7
      38: aload_3
      39: invokevirtual #239                // Method scala/collection/immutable/Vector.length:()I
      42: iconst_1
      43: isub
      44: if_icmplt     54
      47: aload         4
      49: aload_2
      50: invokestatic  #399                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$partitionM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      53: areturn
      54: aload_3
      55: iload         7
      57: iconst_1
      58: iadd
      59: invokevirtual #242                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      62: iload         7
      64: aload_3
      65: aload         5
      67: aload         6
      69: invokedynamic #250,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      74: astore        9
      76: astore        8
      78: aload_2
      79: aload         9
      81: aload_2
      82: aload_1
      83: aload         8
      85: invokedynamic #419,  0            // InvokeDynamic #17:apply:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      90: invokeinterface #423,  3          // InterfaceMethod scalaz/Applicative.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      95: areturn

  public final <M> M spanM(scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_3
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: astore        4
      14: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      17: pop
      18: aload_2
      19: aload         4
      21: aload_2
      22: invokedynamic #226,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      27: aload         4
      29: aload_2
      30: aload_1
      31: invokedynamic #236,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      36: astore        6
      38: astore        5
      40: iconst_m1
      41: istore        7
      43: iload         7
      45: aload_3
      46: invokevirtual #239                // Method scala/collection/immutable/Vector.length:()I
      49: iconst_1
      50: isub
      51: if_icmplt     63
      54: aload         4
      56: aload_2
      57: invokestatic  #222                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      60: goto          117
      63: aload_3
      64: iload         7
      66: iconst_1
      67: iadd
      68: invokevirtual #242                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      71: iload         7
      73: aload_3
      74: aload         5
      76: aload         6
      78: invokedynamic #250,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      83: astore        9
      85: astore        8
      87: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      90: pop
      91: aload_2
      92: aload_1
      93: aload         8
      95: invokeinterface #370,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     100: aload         4
     102: aload_2
     103: aload         9
     105: aload         8
     107: invokedynamic #274,  0            // InvokeDynamic #8:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
     112: invokeinterface #329,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     117: aconst_null
     118: astore        5
     120: aconst_null
     121: astore        6
     123: aload_3
     124: invokedynamic #297,  0            // InvokeDynamic #10:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     129: invokeinterface #380,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     134: areturn

  public final <M> M breakM(scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_3
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: astore        4
      14: aload_2
      15: aload_1
      16: invokedynamic #368,  0            // InvokeDynamic #13:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      21: astore        5
      23: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      26: pop
      27: aload_2
      28: aload         4
      30: aload_2
      31: invokedynamic #226,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      36: aload         4
      38: aload_2
      39: aload         5
      41: invokedynamic #236,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      46: astore        7
      48: astore        6
      50: iconst_m1
      51: istore        8
      53: iload         8
      55: aload_3
      56: invokevirtual #239                // Method scala/collection/immutable/Vector.length:()I
      59: iconst_1
      60: isub
      61: if_icmplt     73
      64: aload         4
      66: aload_2
      67: invokestatic  #222                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      70: goto          142
      73: aload_3
      74: iload         8
      76: iconst_1
      77: iadd
      78: invokevirtual #242                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      81: iload         8
      83: aload_3
      84: aload         6
      86: aload         7
      88: invokedynamic #250,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      93: astore        10
      95: astore        9
      97: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
     100: pop
     101: aload_2
     102: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
     105: pop
     106: aload_2
     107: aload_1
     108: aload         9
     110: invokeinterface #370,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     115: invokedynamic #377,  0            // InvokeDynamic #14:apply:()Lscala/Function1;
     120: invokeinterface #380,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     125: aload         4
     127: aload_2
     128: aload         10
     130: aload         9
     132: invokedynamic #274,  0            // InvokeDynamic #8:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
     137: invokeinterface #329,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     142: aconst_null
     143: astore        6
     145: aconst_null
     146: astore        7
     148: aload_3
     149: invokedynamic #297,  0            // InvokeDynamic #10:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     154: invokeinterface #380,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     159: areturn

  public final <M> M groupWhenM(scala.Function2<A, A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_3
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: astore        4
      14: aload_3
      15: invokevirtual #141                // Method scala/collection/immutable/Vector.isEmpty:()Z
      18: ifeq          39
      21: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      24: pop
      25: aload_2
      26: aload         4
      28: invokedynamic #193,  0            // InvokeDynamic #2:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
      33: invokeinterface #199,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      38: areturn
      39: aload_2
      40: aload_1
      41: invokedynamic #210,  0            // InvokeDynamic #3:apply:(Lscalaz/Monad;Lscala/Function2;)Lscala/Function1;
      46: astore        5
      48: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      51: pop
      52: aload_2
      53: aload_3
      54: invokevirtual #145                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      57: getstatic     #215                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      60: pop
      61: new           #24                 // class scalaz/StateTInstances2$$anon$12
      64: dup
      65: aconst_null
      66: aload_2
      67: invokespecial #218                // Method scalaz/StateTInstances2$$anon$12."<init>":(Lscalaz/StateTInstances2;Lscalaz/Applicative;)V
      70: astore        7
      72: astore        6
      74: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      77: pop
      78: aload         4
      80: aload         7
      82: invokedynamic #226,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      87: aload         4
      89: aload         7
      91: aload         5
      93: invokedynamic #236,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      98: astore        9
     100: astore        8
     102: iconst_m1
     103: istore        10
     105: iload         10
     107: aload         6
     109: invokevirtual #239                // Method scala/collection/immutable/Vector.length:()I
     112: iconst_1
     113: isub
     114: if_icmplt     127
     117: aload         4
     119: aload         7
     121: invokestatic  #222                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
     124: goto          234
     127: aload         6
     129: iload         10
     131: iconst_1
     132: iadd
     133: invokevirtual #242                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
     136: iload         10
     138: aload         6
     140: aload         8
     142: aload         9
     144: invokedynamic #250,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     149: astore        16
     151: astore        15
     153: getstatic     #184                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
     156: pop
     157: getstatic     #255                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
     160: pop
     161: aload_2
     162: aload_1
     163: aload         15
     165: invokedynamic #263,  0            // InvokeDynamic #7:apply:(Lscalaz/Monad;Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
     170: astore        20
     172: getstatic     #215                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
     175: pop
     176: new           #21                 // class scalaz/IndexedStateT$Wrap
     179: dup
     180: aload         20
     182: invokespecial #266                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
     185: aconst_null
     186: astore        20
     188: aload         4
     190: aload         7
     192: aload         16
     194: aload         15
     196: invokedynamic #274,  0            // InvokeDynamic #8:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
     201: astore        18
     203: astore        17
     205: aload         18
     207: invokedynamic #284,  0            // InvokeDynamic #9:apply:(Lscala/Function1;)Lscala/Function2;
     212: astore        19
     214: new           #16                 // class scalaz/IndexedStateT$FlatMap
     217: dup
     218: aload         17
     220: aload         19
     222: invokespecial #287                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
     225: aconst_null
     226: astore        19
     228: aconst_null
     229: astore        17
     231: aconst_null
     232: astore        18
     234: aconst_null
     235: astore        8
     237: aconst_null
     238: astore        9
     240: aload         6
     242: invokedynamic #297,  0            // InvokeDynamic #10:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     247: astore        11
     249: checkcast     #18                 // class scalaz/IndexedStateT
     252: astore        12
     254: aload         12
     256: aload         7
     258: invokeinterface #303,  1          // InterfaceMethod scalaz/StateTBind.F:()Lscalaz/Applicative;
     263: astore        13
     265: ifnonnull     270
     268: aconst_null
     269: athrow
     270: aload         13
     272: aload         11
     274: invokedynamic #311,  0            // InvokeDynamic #11:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
     279: invokedynamic #284,  0            // InvokeDynamic #9:apply:(Lscala/Function1;)Lscala/Function2;
     284: astore        14
     286: new           #16                 // class scalaz/IndexedStateT$FlatMap
     289: dup
     290: aload         12
     292: aload         14
     294: invokespecial #287                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
     297: aconst_null
     298: astore        14
     300: aconst_null
     301: astore        13
     303: aconst_null
     304: astore        12
     306: aconst_null
     307: astore        11
     309: aconst_null
     310: astore        6
     312: aconst_null
     313: astore        7
     315: aload_3
     316: invokevirtual #149                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     319: aload_2
     320: invokevirtual #315                // Method scalaz/IndexedStateT.eval:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
     323: aload         4
     325: aload_2
     326: aload_1
     327: aload_3
     328: invokedynamic #325,  0            // InvokeDynamic #12:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function2;Lscala/collection/immutable/Vector;)Lscala/Function1;
     333: invokeinterface #329,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     338: areturn

  public final scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> groupWhen(scala.Function2<A, A, java.lang.Object>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_2
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: astore_3
      13: aload_2
      14: aload_3
      15: invokestatic  #88                 // InterfaceMethod scalaz/std/VectorFunctions.empty$:(Lscalaz/std/VectorFunctions;)Lscala/collection/immutable/Vector;
      18: astore        5
      20: astore        4
      22: aload         4
      24: invokevirtual #141                // Method scala/collection/immutable/Vector.isEmpty:()Z
      27: ifeq          33
      30: aload         5
      32: areturn
      33: aload         4
      35: invokevirtual #145                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      38: aload         4
      40: invokevirtual #149                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      43: aload_3
      44: invokestatic  #88                 // InterfaceMethod scalaz/std/VectorFunctions.empty$:(Lscalaz/std/VectorFunctions;)Lscala/collection/immutable/Vector;
      47: astore        10
      49: astore        9
      51: astore        8
      53: aload         8
      55: invokevirtual #141                // Method scala/collection/immutable/Vector.isEmpty:()Z
      58: ifeq          70
      61: aload         10
      63: aload_3
      64: invokestatic  #88                 // InterfaceMethod scalaz/std/VectorFunctions.empty$:(Lscalaz/std/VectorFunctions;)Lscala/collection/immutable/Vector;
      67: goto          127
      70: aload         8
      72: invokevirtual #149                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      75: astore        11
      77: aload         8
      79: invokevirtual #145                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      82: astore        12
      84: aload_1
      85: aload         9
      87: aload         11
      89: invokeinterface #153,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      94: invokestatic  #159                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      97: ifeq          123
     100: aload         12
     102: aload         11
     104: aload         10
     106: aload         11
     108: invokevirtual #163                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
     111: checkcast     #46                 // class scala/collection/immutable/Vector
     114: astore        10
     116: astore        9
     118: astore        8
     120: goto          53
     123: aload         10
     125: aload         8
     127: aconst_null
     128: astore        8
     130: aconst_null
     131: astore        9
     133: aconst_null
     134: astore        10
     136: aconst_null
     137: astore        11
     139: aconst_null
     140: astore        12
     142: astore        13
     144: astore        6
     146: aload         13
     148: aload         5
     150: aload         4
     152: invokevirtual #149                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     155: astore        7
     157: aload         6
     159: aload         7
     161: invokevirtual #166                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
     164: invokevirtual #163                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
     167: checkcast     #46                 // class scala/collection/immutable/Vector
     170: astore        5
     172: astore        4
     174: goto          22

  public final <B, C> scala.Tuple2<C, scala.collection.immutable.Vector<B>> mapAccumLeft(C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_3
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: astore        4
      14: aload_3
      15: new           #84                 // class scala/Tuple2
      18: dup
      19: aload_1
      20: aload         4
      22: invokestatic  #88                 // InterfaceMethod scalaz/std/VectorFunctions.empty$:(Lscalaz/std/VectorFunctions;)Lscala/collection/immutable/Vector;
      25: invokespecial #92                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      28: aload_2
      29: invokedynamic #129,  0            // InvokeDynamic #1:apply:(Lscala/Function2;)Lscala/Function2;
      34: invokevirtual #132                // Method scala/collection/immutable/Vector.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      37: checkcast     #84                 // class scala/Tuple2
      40: areturn

  public final <B, C> scala.Tuple2<C, scala.collection.immutable.Vector<B>> mapAccumRight(C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_3
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: astore        4
      14: aload_3
      15: new           #84                 // class scala/Tuple2
      18: dup
      19: aload_1
      20: aload         4
      22: invokestatic  #88                 // InterfaceMethod scalaz/std/VectorFunctions.empty$:(Lscalaz/std/VectorFunctions;)Lscala/collection/immutable/Vector;
      25: invokespecial #92                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      28: aload_2
      29: invokedynamic #114,  0            // InvokeDynamic #0:apply:(Lscala/Function2;)Lscala/Function2;
      34: invokevirtual #118                // Method scala/collection/immutable/Vector.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      37: checkcast     #84                 // class scala/Tuple2
      40: areturn

  public final scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> tailz();
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_1
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: aload_1
      13: invokestatic  #77                 // InterfaceMethod scalaz/std/VectorFunctions.tailz$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      16: areturn

  public final scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> initz();
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_1
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: aload_1
      13: invokestatic  #73                 // InterfaceMethod scalaz/std/VectorFunctions.initz$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      16: areturn

  public final scala.collection.immutable.Vector<scala.Tuple2<A, A>> allPairs();
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_1
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: aload_1
      13: invokestatic  #68                 // InterfaceMethod scalaz/std/VectorFunctions.allPairs$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      16: areturn

  public final scala.collection.immutable.Vector<scala.Tuple2<A, A>> adjacentPairs();
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: astore_1
       9: getstatic     #58                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: aload_1
      13: invokestatic  #64                 // InterfaceMethod scalaz/std/VectorFunctions.adjacentPairs$:(Lscalaz/std/VectorFunctions;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      16: areturn

  public int hashCode();
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: pop
       4: aload_0
       5: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       8: invokevirtual #50                 // Method scala/collection/immutable/Vector.hashCode:()I
      11: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: getstatic     #38                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #579                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: aload_1
       8: invokevirtual #40                 // Method scalaz/syntax/std/VectorOps$.equals$extension:(Lscala/collection/immutable/Vector;Ljava/lang/Object;)Z
      11: ireturn

  public scalaz.syntax.std.VectorOps(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #572                // Field scalaz$syntax$std$VectorOps$$self:Lscala/collection/immutable/Vector;
       5: aload_0
       6: invokespecial #644                // Method java/lang/Object."<init>":()V
       9: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #656,  0            // InvokeDynamic #26:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
