Compiled from "TraverseSyntax.scala"
public final class scalaz.syntax.TraverseOps<F, A> implements scalaz.syntax.Ops<F> {
  private final F self;

  private final scalaz.Traverse<F> F;

  public F self();
    Code:
       0: aload_0
       1: getfield      #26                 // Field self:Ljava/lang/Object;
       4: areturn

  public scalaz.Traverse<F> F();
    Code:
       0: aload_0
       1: getfield      #32                 // Field F:Lscalaz/Traverse;
       4: areturn

  public final <B> F tmap(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
       4: aload_0
       5: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       8: aload_1
       9: invokeinterface #46,  3           // InterfaceMethod scalaz/Traverse.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      14: areturn

  public final <G, B> G traverse(scala.Function1<A, G>, scalaz.Applicative<G>);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       5: aload_1
       6: aload_0
       7: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
      10: invokeinterface #56,  4           // InterfaceMethod scalaz/Applicative.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
      15: areturn

  public final <GB> java.lang.Object traverseU(scala.Function1<A, GB>, scalaz.Unapply<scalaz.Applicative, GB>);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
       4: aload_0
       5: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       8: astore        4
      10: dup
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: astore_3
      17: aload_2
      18: invokeinterface #65,  1           // InterfaceMethod scalaz/Unapply.TC:()Ljava/lang/Object;
      23: checkcast     #53                 // class scalaz/Applicative
      26: aload         4
      28: aload_2
      29: invokeinterface #69,  1           // InterfaceMethod scalaz/Unapply.leibniz:()Lscalaz/Leibniz;
      34: dup
      35: ifnonnull     40
      38: aconst_null
      39: athrow
      40: aload_1
      41: invokevirtual #75                 // Method scalaz/Leibniz.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #77                 // class scala/Function1
      47: aload_3
      48: invokeinterface #56,  4           // InterfaceMethod scalaz/Applicative.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
      53: areturn

  public final <G, B> G traverseM(scala.Function1<A, G>, scalaz.Applicative<G>, scalaz.Bind<F>);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
       4: aload_0
       5: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       8: astore        5
      10: dup
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: astore        4
      18: aload_2
      19: aload_2
      20: aload         5
      22: aload_1
      23: aload         4
      25: invokeinterface #56,  4           // InterfaceMethod scalaz/Applicative.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
      30: aload_3
      31: invokedynamic #102,  0            // InvokeDynamic #0:apply:(Lscalaz/Bind;)Lscala/Function1;
      36: invokeinterface #103,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      41: areturn

  public final <G, B> G sequence(scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, A, G>, scalaz.Applicative<G>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       5: invokevirtual #75                 // Method scalaz/Leibniz.subst:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_3
       9: aload_0
      10: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
      13: aload_3
      14: aload_2
      15: invokeinterface #115,  3          // InterfaceMethod scalaz/Traverse.sequence:(Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
      20: areturn

  public final java.lang.Object sequenceU(scalaz.Unapply<scalaz.Applicative, A>);
    Code:
       0: aload_1
       1: invokeinterface #65,  1           // InterfaceMethod scalaz/Unapply.TC:()Ljava/lang/Object;
       6: checkcast     #53                 // class scalaz/Applicative
       9: aload_0
      10: invokevirtual #40                 // Method self:()Ljava/lang/Object;
      13: aload_1
      14: invokedynamic #128,  0            // InvokeDynamic #1:apply:(Lscalaz/Unapply;)Lscala/Function1;
      19: aload_0
      20: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
      23: invokeinterface #56,  4           // InterfaceMethod scalaz/Applicative.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
      28: areturn

  public final <G, B> G sequenceM(scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, A, G>, scalaz.Applicative<G>, scalaz.Bind<F>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       5: invokevirtual #75                 // Method scalaz/Leibniz.subst:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore        4
      10: aload_0
      11: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
      14: aload         4
      16: aload_2
      17: aload_3
      18: invokeinterface #134,  4          // InterfaceMethod scalaz/Traverse.sequenceM:(Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
      23: areturn

  public final <S, B> scalaz.IndexedStateT<S, S, java.lang.Object, F> traverseS(scala.Function1<A, scalaz.IndexedStateT<S, S, java.lang.Object, B>>);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
       4: aload_0
       5: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       8: aload_1
       9: invokeinterface #141,  3          // InterfaceMethod scalaz/Traverse.traverseS:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
      14: areturn

  public final <G, S, B> scalaz.IndexedStateT<S, S, java.lang.Object, G> traverseSTrampoline(scala.Function1<A, scalaz.IndexedStateT<S, S, java.lang.Object, G>>, scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
       4: aload_0
       5: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       8: aload_1
       9: aload_2
      10: invokeinterface #148,  4          // InterfaceMethod scalaz/Traverse.traverseSTrampoline:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
      15: areturn

  public final <G, S, B> scalaz.Kleisli<G, S, F> traverseKTrampoline(scala.Function1<A, scalaz.Kleisli<G, S, B>>, scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
       4: aload_0
       5: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       8: aload_1
       9: aload_2
      10: invokeinterface #155,  4          // InterfaceMethod scalaz/Traverse.traverseKTrampoline:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
      15: areturn

  public final <S, B> scala.Tuple2<S, F> runTraverseS(S, scala.Function1<A, scalaz.IndexedStateT<S, S, ?, B>>);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
       4: aload_0
       5: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       8: aload_1
       9: aload_2
      10: invokeinterface #162,  4          // InterfaceMethod scalaz/Traverse.runTraverseS:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
      15: areturn

  public final F reverse();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
       4: aload_0
       5: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       8: invokeinterface #165,  2          // InterfaceMethod scalaz/Traverse.reverse:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public final <B, C> scala.Tuple2<scala.collection.immutable.List<B>, F> zipWith(F, scala.Function2<A, scala.Option<B>, C>);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
       4: aload_0
       5: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       8: aload_1
       9: aload_2
      10: invokeinterface #172,  4          // InterfaceMethod scalaz/Traverse.zipWith:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
      15: areturn

  public final <B, C> F zipWithL(F, scala.Function2<A, scala.Option<B>, C>);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
       4: aload_0
       5: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       8: aload_1
       9: aload_2
      10: invokeinterface #179,  4          // InterfaceMethod scalaz/Traverse.zipWithL:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      15: areturn

  public final <B, C> F zipWithR(F, scala.Function2<scala.Option<A>, B, C>);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
       4: aload_0
       5: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       8: aload_1
       9: aload_2
      10: invokeinterface #183,  4          // InterfaceMethod scalaz/Traverse.zipWithR:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      15: areturn

  public final F indexed();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
       4: aload_0
       5: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       8: invokeinterface #186,  2          // InterfaceMethod scalaz/Traverse.indexed:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public final <B> F zipL(F);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
       4: aload_0
       5: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       8: aload_1
       9: invokeinterface #191,  3          // InterfaceMethod scalaz/Traverse.zipL:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public final <B> F zipR(F);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
       4: aload_0
       5: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       8: aload_1
       9: invokeinterface #194,  3          // InterfaceMethod scalaz/Traverse.zipR:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public final <S, B> scala.Tuple2<S, F> mapAccumL(S, scala.Function2<S, A, scala.Tuple2<S, B>>);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
       4: aload_0
       5: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       8: aload_1
       9: aload_2
      10: invokeinterface #199,  4          // InterfaceMethod scalaz/Traverse.mapAccumL:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
      15: areturn

  public final <S, B> scala.Tuple2<S, F> mapAccumR(S, scala.Function2<S, A, scala.Tuple2<S, B>>);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method F:()Lscalaz/Traverse;
       4: aload_0
       5: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       8: aload_1
       9: aload_2
      10: invokeinterface #202,  4          // InterfaceMethod scalaz/Traverse.mapAccumR:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
      15: areturn

  public final <G, B> G parTraverse(scala.Function1<A, G>, scalaz.Traverse<F>, scalaz.Applicative<?>);
    Code:
       0: getstatic     #211                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: aload_2
       4: aload_0
       5: invokevirtual #40                 // Method self:()Ljava/lang/Object;
       8: aload_1
       9: invokedynamic #219,  0            // InvokeDynamic #2:apply:(Lscala/Function1;)Lscala/Function1;
      14: aload_3
      15: invokeinterface #222,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      20: astore        4
      22: invokevirtual #226                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      25: aload         4
      27: invokevirtual #231                // Method scalaz/TagKind.unwrap:(Ljava/lang/Object;)Ljava/lang/Object;
      30: areturn

  public static final java.lang.Object $anonfun$sequenceU$1(scalaz.Unapply, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #236,  2          // InterfaceMethod scalaz/Unapply.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$parTraverse$1(scala.Function1, java.lang.Object);
    Code:
       0: getstatic     #211                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: aload_0
       4: aload_1
       5: invokeinterface #239,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: invokevirtual #226                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      14: aload_2
      15: invokevirtual #240                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: areturn

  public scalaz.syntax.TraverseOps(F, scalaz.Traverse<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field self:Ljava/lang/Object;
       5: aload_0
       6: aload_2
       7: putfield      #32                 // Field F:Lscalaz/Traverse;
      10: aload_0
      11: invokespecial #247                // Method java/lang/Object."<init>":()V
      14: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #259,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
