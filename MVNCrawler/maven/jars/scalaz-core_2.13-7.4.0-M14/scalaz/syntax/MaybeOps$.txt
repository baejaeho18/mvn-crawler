Compiled from "MaybeOps.scala"
public final class scalaz.syntax.MaybeOps$ {
  public static final scalaz.syntax.MaybeOps$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scalaz/syntax/MaybeOps$
       3: dup
       4: invokespecial #17                 // Method "<init>":()V
       7: putstatic     #19                 // Field MODULE$:Lscalaz/syntax/MaybeOps$;
      10: return

  public final <A> scalaz.Maybe<A> just$extension(A);
    Code:
       0: getstatic     #28                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: pop
       4: new           #7                  // class scalaz/Maybe$Just
       7: dup
       8: aload_1
       9: invokespecial #31                 // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      12: areturn

  public final <A> int hashCode$extension(A);
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method java/lang/Object.hashCode:()I
       4: ireturn

  public final <A> boolean equals$extension(A, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #46                 // class scalaz/syntax/MaybeOps
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ifeq          41
      15: aload_2
      16: ifnonnull     23
      19: aconst_null
      20: goto          30
      23: aload_2
      24: checkcast     #46                 // class scalaz/syntax/MaybeOps
      27: invokevirtual #50                 // Method scalaz/syntax/MaybeOps.scalaz$syntax$MaybeOps$$self:()Ljava/lang/Object;
      30: astore_3
      31: aload_1
      32: aload_3
      33: invokestatic  #55                 // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: iconst_0
      42: ireturn

  private scalaz.syntax.MaybeOps$();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method java/lang/Object."<init>":()V
       4: return
}
