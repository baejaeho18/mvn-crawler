Compiled from "Syntax.scala"
public final class scalaz.syntax.all$ implements scalaz.syntax.ToTypeClassOps,scalaz.syntax.ToDataOps {
  public static final scalaz.syntax.all$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scalaz/syntax/all$
       3: dup
       4: invokespecial #34                 // Method "<init>":()V
       7: putstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      10: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      13: pop
      14: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      17: pop
      18: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      21: pop
      22: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      25: pop
      26: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      29: pop
      30: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      33: pop
      34: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      37: pop
      38: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      41: pop
      42: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      45: pop
      46: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      49: pop
      50: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      53: pop
      54: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      57: pop
      58: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      61: pop
      62: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      65: pop
      66: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      69: pop
      70: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      73: pop
      74: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      77: pop
      78: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      81: pop
      82: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      85: pop
      86: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      89: pop
      90: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      93: pop
      94: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
      97: pop
      98: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     101: pop
     102: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     105: pop
     106: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     109: pop
     110: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     113: pop
     114: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     117: pop
     118: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     121: pop
     122: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     125: pop
     126: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     129: pop
     130: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     133: pop
     134: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     137: pop
     138: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     141: pop
     142: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     145: pop
     146: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     149: pop
     150: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     153: pop
     154: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     157: pop
     158: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     161: pop
     162: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     165: pop
     166: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     169: pop
     170: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     173: pop
     174: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     177: pop
     178: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     181: pop
     182: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     185: pop
     186: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     189: pop
     190: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     193: pop
     194: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     197: pop
     198: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     201: pop
     202: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     205: pop
     206: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     209: pop
     210: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     213: pop
     214: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     217: pop
     218: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     221: pop
     222: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     225: pop
     226: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     229: pop
     230: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     233: pop
     234: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     237: pop
     238: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     241: pop
     242: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     245: pop
     246: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     249: pop
     250: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     253: pop
     254: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     257: pop
     258: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     261: pop
     262: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     265: pop
     266: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     269: pop
     270: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     273: pop
     274: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     277: pop
     278: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     281: pop
     282: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     285: pop
     286: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     289: pop
     290: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     293: pop
     294: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     297: pop
     298: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     301: pop
     302: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     305: pop
     306: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     309: pop
     310: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     313: pop
     314: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     317: pop
     318: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     321: pop
     322: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     325: pop
     326: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     329: pop
     330: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     333: pop
     334: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     337: pop
     338: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     341: pop
     342: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     345: pop
     346: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     349: pop
     350: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     353: pop
     354: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     357: pop
     358: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     361: pop
     362: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     365: pop
     366: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     369: pop
     370: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     373: pop
     374: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     377: pop
     378: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     381: pop
     382: getstatic     #36                 // Field MODULE$:Lscalaz/syntax/all$;
     385: pop
     386: return

  public <A> A ToConstOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #46                 // InterfaceMethod scalaz/syntax/ToConstOps.ToConstOps$:(Lscalaz/syntax/ToConstOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <M, A> M ToContTOps(M);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #57                 // InterfaceMethod scalaz/syntax/ToContTOps.ToContTOps$:(Lscalaz/syntax/ToContTOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToMaybeOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #64                 // InterfaceMethod scalaz/syntax/ToMaybeOps.ToMaybeOps$:(Lscalaz/syntax/ToMaybeOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToTheseOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // InterfaceMethod scalaz/syntax/ToTheseOps.ToTheseOps$:(Lscalaz/syntax/ToTheseOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A, B> scala.Tuple2<A, B> ToThesePairOps(scala.Tuple2<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // InterfaceMethod scalaz/syntax/ToTheseOps.ToThesePairOps$:(Lscalaz/syntax/ToTheseOps;Lscala/Tuple2;)Lscala/Tuple2;
       5: areturn

  public <A> A ToNelOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #86                 // InterfaceMethod scalaz/syntax/ToNelOps.ToNelOps$:(Lscalaz/syntax/ToNelOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToEitherTOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #93                 // InterfaceMethod scalaz/syntax/ToEitherTOps.ToEitherTOps$:(Lscalaz/syntax/ToEitherTOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToEitherOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #100                // InterfaceMethod scalaz/syntax/ToEitherOps.ToEitherOps$:(Lscalaz/syntax/ToEitherOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToKleisliIdOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #107                // InterfaceMethod scalaz/syntax/ToKleisliOps.ToKleisliIdOps$:(Lscalaz/syntax/ToKleisliOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <F, A> F ToKleisliFAOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #113                // InterfaceMethod scalaz/syntax/ToKleisliOps.ToKleisliFAOps$:(Lscalaz/syntax/ToKleisliOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <FA> java.lang.Object ToKleisliOpsUnapply(FA, scalaz.Unapply<scalaz.Monad, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #124                // InterfaceMethod scalaz/syntax/ToKleisliOps0.ToKleisliOpsUnapply$:(Lscalaz/syntax/ToKleisliOps0;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public <A> A ToValidationOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #132                // InterfaceMethod scalaz/syntax/ToValidationOps.ToValidationOps$:(Lscalaz/syntax/ToValidationOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToStateOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #139                // InterfaceMethod scalaz/syntax/ToStateOps.ToStateOps$:(Lscalaz/syntax/ToStateOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToWriterOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #146                // InterfaceMethod scalaz/syntax/ToWriterOps.ToWriterOps$:(Lscalaz/syntax/ToWriterOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToReducerOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #153                // InterfaceMethod scalaz/syntax/ToReducerOps.ToReducerOps$:(Lscalaz/syntax/ToReducerOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToStrictTreeOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #160                // InterfaceMethod scalaz/syntax/ToStrictTreeOps.ToStrictTreeOps$:(Lscalaz/syntax/ToStrictTreeOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToTreeOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #167                // InterfaceMethod scalaz/syntax/ToTreeOps.ToTreeOps$:(Lscalaz/syntax/ToTreeOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToIdOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #174                // InterfaceMethod scalaz/syntax/ToIdOps.ToIdOps$:(Lscalaz/syntax/ToIdOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <F, A, B> scalaz.syntax.ProChoiceOps<F, A, B> ToProChoiceOps(F, scalaz.ProChoice<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #183                // InterfaceMethod scalaz/syntax/ToProChoiceOps0.ToProChoiceOps$:(Lscalaz/syntax/ToProChoiceOps0;Ljava/lang/Object;Lscalaz/ProChoice;)Lscalaz/syntax/ProChoiceOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.ProChoiceOps<?, A, B> ToProChoiceVFromKleisliLike(F, scalaz.ProChoice<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #189                // InterfaceMethod scalaz/syntax/ToProChoiceOps0.ToProChoiceVFromKleisliLike$:(Lscalaz/syntax/ToProChoiceOps0;Ljava/lang/Object;Lscalaz/ProChoice;)Lscalaz/syntax/ProChoiceOps;
       6: areturn

  public <FA> scalaz.syntax.ProChoiceOps<java.lang.Object, java.lang.Object, java.lang.Object> ToProChoiceOpsUnapply(FA, scalaz.Unapply2<scalaz.ProChoice, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #198                // InterfaceMethod scalaz/syntax/ToProChoiceOpsU.ToProChoiceOpsUnapply$:(Lscalaz/syntax/ToProChoiceOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ProChoiceOps;
       6: areturn

  public <F, G, A> G MonadTransGFGA(G);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #208                // InterfaceMethod scalaz/syntax/ToMonadTransOps.MonadTransGFGA$:(Lscalaz/syntax/ToMonadTransOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <F, A> scalaz.syntax.AlignOps<F, A> ToAlignOps(F, scalaz.Align<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #217                // InterfaceMethod scalaz/syntax/ToAlignOps0.ToAlignOps$:(Lscalaz/syntax/ToAlignOps0;Ljava/lang/Object;Lscalaz/Align;)Lscalaz/syntax/AlignOps;
       6: areturn

  public <FA> scalaz.syntax.AlignOps<java.lang.Object, java.lang.Object> ToAlignOpsUnapply(FA, scalaz.Unapply<scalaz.Align, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #227                // InterfaceMethod scalaz/syntax/ToAlignOpsU.ToAlignOpsUnapply$:(Lscalaz/syntax/ToAlignOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/AlignOps;
       6: areturn

  public <F, A> scalaz.syntax.OptionalOps<F, A> ToOptionalOps(F, scalaz.Optional<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #236                // InterfaceMethod scalaz/syntax/ToOptionalOps0.ToOptionalOps$:(Lscalaz/syntax/ToOptionalOps0;Ljava/lang/Object;Lscalaz/Optional;)Lscalaz/syntax/OptionalOps;
       6: areturn

  public <FA> scalaz.syntax.OptionalOps<java.lang.Object, java.lang.Object> ToOptionalOpsUnapply(FA, scalaz.Unapply<scalaz.Optional, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #246                // InterfaceMethod scalaz/syntax/ToOptionalOpsU.ToOptionalOpsUnapply$:(Lscalaz/syntax/ToOptionalOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/OptionalOps;
       6: areturn

  public <F, A> scalaz.syntax.Traverse1Ops<F, A> ToTraverse1Ops(F, scalaz.Traverse1<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #255                // InterfaceMethod scalaz/syntax/ToTraverse1Ops0.ToTraverse1Ops$:(Lscalaz/syntax/ToTraverse1Ops0;Ljava/lang/Object;Lscalaz/Traverse1;)Lscalaz/syntax/Traverse1Ops;
       6: areturn

  public <FA> scalaz.syntax.Traverse1Ops<java.lang.Object, java.lang.Object> ToTraverse1OpsUnapply(FA, scalaz.Unapply<scalaz.Traverse1, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #265                // InterfaceMethod scalaz/syntax/ToTraverse1OpsU.ToTraverse1OpsUnapply$:(Lscalaz/syntax/ToTraverse1OpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/Traverse1Ops;
       6: areturn

  public <F, A> scalaz.syntax.Foldable1Ops<F, A> ToFoldable1Ops(F, scalaz.Foldable1<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #274                // InterfaceMethod scalaz/syntax/ToFoldable1Ops0.ToFoldable1Ops$:(Lscalaz/syntax/ToFoldable1Ops0;Ljava/lang/Object;Lscalaz/Foldable1;)Lscalaz/syntax/Foldable1Ops;
       6: areturn

  public <FA> scalaz.syntax.Foldable1Ops<java.lang.Object, java.lang.Object> ToFoldable1OpsUnapply(FA, scalaz.Unapply<scalaz.Foldable1, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #284                // InterfaceMethod scalaz/syntax/ToFoldable1OpsU.ToFoldable1OpsUnapply$:(Lscalaz/syntax/ToFoldable1OpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/Foldable1Ops;
       6: areturn

  public <F, S, A> scalaz.syntax.ApplicativeErrorOps<F, S, A> ToApplicativeErrorOps(F, scalaz.ApplicativeError<F, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #293                // InterfaceMethod scalaz/syntax/ToApplicativeErrorOps0.ToApplicativeErrorOps$:(Lscalaz/syntax/ToApplicativeErrorOps0;Ljava/lang/Object;Lscalaz/ApplicativeError;)Lscalaz/syntax/ApplicativeErrorOps;
       6: areturn

  public <F, S, A> scalaz.syntax.MonadErrorOps<F, S, A> ToMonadErrorOps(F, scalaz.MonadError<F, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #303                // InterfaceMethod scalaz/syntax/ToMonadErrorOps0.ToMonadErrorOps$:(Lscalaz/syntax/ToMonadErrorOps0;Ljava/lang/Object;Lscalaz/MonadError;)Lscalaz/syntax/MonadErrorOps;
       6: areturn

  public <E> E ToMonadErrorIdOps(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #310                // InterfaceMethod scalaz/syntax/ToMonadErrorOps0.ToMonadErrorIdOps$:(Lscalaz/syntax/ToMonadErrorOps0;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <F, A, W> scalaz.syntax.MonadListenOps<F, W, A> ToMonadListenOps(F, scalaz.MonadListen<F, W>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #319                // InterfaceMethod scalaz/syntax/ToMonadListenOps0.ToMonadListenOps$:(Lscalaz/syntax/ToMonadListenOps0;Ljava/lang/Object;Lscalaz/MonadListen;)Lscalaz/syntax/MonadListenOps;
       6: areturn

  public <F, S, A> scalaz.syntax.MonadTellOps<F, S, A> ToMonadTellOps(F, scalaz.MonadTell<F, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #329                // InterfaceMethod scalaz/syntax/ToMonadTellOps0.ToMonadTellOps$:(Lscalaz/syntax/ToMonadTellOps0;Ljava/lang/Object;Lscalaz/MonadTell;)Lscalaz/syntax/MonadTellOps;
       6: areturn

  public <F, A> scalaz.syntax.UnzipOps<F, A> ToUnzipOps(F, scalaz.Unzip<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #337                // InterfaceMethod scalaz/syntax/ToUnzipOps0.ToUnzipOps$:(Lscalaz/syntax/ToUnzipOps0;Ljava/lang/Object;Lscalaz/Unzip;)Lscalaz/syntax/UnzipOps;
       6: areturn

  public <F, A, B> scalaz.syntax.ToUnzipOps0<scalaz.Unzip>.UnzipPairOps<F, A, B> ToUnzipPairOps(F, scalaz.Unzip<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #345                // InterfaceMethod scalaz/syntax/ToUnzipOps0.ToUnzipPairOps$:(Lscalaz/syntax/ToUnzipOps0;Ljava/lang/Object;Lscalaz/Unzip;)Lscalaz/syntax/ToUnzipOps0$UnzipPairOps;
       6: areturn

  public <FA> scalaz.syntax.UnzipOps<java.lang.Object, java.lang.Object> ToUnzipOpsUnapply(FA, scalaz.Unapply<scalaz.Unzip, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #354                // InterfaceMethod scalaz/syntax/ToUnzipOpsU.ToUnzipOpsUnapply$:(Lscalaz/syntax/ToUnzipOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/UnzipOps;
       6: areturn

  public <F, A> scalaz.syntax.ZipOps<F, A> ToZipOps(F, scalaz.Zip<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #363                // InterfaceMethod scalaz/syntax/ToZipOps0.ToZipOps$:(Lscalaz/syntax/ToZipOps0;Ljava/lang/Object;Lscalaz/Zip;)Lscalaz/syntax/ZipOps;
       6: areturn

  public <FA> scalaz.syntax.ZipOps<java.lang.Object, java.lang.Object> ToZipOpsUnapply(FA, scalaz.Unapply<scalaz.Zip, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #373                // InterfaceMethod scalaz/syntax/ToZipOpsU.ToZipOpsUnapply$:(Lscalaz/syntax/ToZipOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ZipOps;
       6: areturn

  public <F, A, B> scalaz.syntax.SplitOps<F, A, B> ToSplitOps(F, scalaz.Split<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #382                // InterfaceMethod scalaz/syntax/ToSplitOps0.ToSplitOps$:(Lscalaz/syntax/ToSplitOps0;Ljava/lang/Object;Lscalaz/Split;)Lscalaz/syntax/SplitOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.SplitOps<?, A, B> ToSplitVFromKleisliLike(F, scalaz.Split<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #388                // InterfaceMethod scalaz/syntax/ToSplitOps0.ToSplitVFromKleisliLike$:(Lscalaz/syntax/ToSplitOps0;Ljava/lang/Object;Lscalaz/Split;)Lscalaz/syntax/SplitOps;
       6: areturn

  public <FA> scalaz.syntax.SplitOps<java.lang.Object, java.lang.Object, java.lang.Object> ToSplitOpsUnapply(FA, scalaz.Unapply2<scalaz.Split, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #397                // InterfaceMethod scalaz/syntax/ToSplitOpsU.ToSplitOpsUnapply$:(Lscalaz/syntax/ToSplitOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/SplitOps;
       6: areturn

  public <F, A, B> scalaz.syntax.ChoiceOps<F, A, B> ToChoiceOps(F, scalaz.Choice<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #406                // InterfaceMethod scalaz/syntax/ToChoiceOps0.ToChoiceOps$:(Lscalaz/syntax/ToChoiceOps0;Ljava/lang/Object;Lscalaz/Choice;)Lscalaz/syntax/ChoiceOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.ChoiceOps<?, A, B> ToChoiceVFromKleisliLike(F, scalaz.Choice<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #412                // InterfaceMethod scalaz/syntax/ToChoiceOps0.ToChoiceVFromKleisliLike$:(Lscalaz/syntax/ToChoiceOps0;Ljava/lang/Object;Lscalaz/Choice;)Lscalaz/syntax/ChoiceOps;
       6: areturn

  public <FA> scalaz.syntax.ChoiceOps<java.lang.Object, java.lang.Object, java.lang.Object> ToChoiceOpsUnapply(FA, scalaz.Unapply2<scalaz.Choice, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #421                // InterfaceMethod scalaz/syntax/ToChoiceOpsU.ToChoiceOpsUnapply$:(Lscalaz/syntax/ToChoiceOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ChoiceOps;
       6: areturn

  public <F, A> scalaz.syntax.FoldableOps<F, A> ToFoldableOps(F, scalaz.Foldable<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #430                // InterfaceMethod scalaz/syntax/ToFoldableOps0.ToFoldableOps$:(Lscalaz/syntax/ToFoldableOps0;Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/syntax/FoldableOps;
       6: areturn

  public <FA> scalaz.syntax.FoldableOps<java.lang.Object, java.lang.Object> ToFoldableOpsUnapply(FA, scalaz.Unapply<scalaz.Foldable, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #440                // InterfaceMethod scalaz/syntax/ToFoldableOpsU.ToFoldableOpsUnapply$:(Lscalaz/syntax/ToFoldableOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/FoldableOps;
       6: areturn

  public <F, A, B> scalaz.syntax.StrongOps<F, A, B> ToStrongOps(F, scalaz.Strong<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #449                // InterfaceMethod scalaz/syntax/ToStrongOps0.ToStrongOps$:(Lscalaz/syntax/ToStrongOps0;Ljava/lang/Object;Lscalaz/Strong;)Lscalaz/syntax/StrongOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.StrongOps<?, A, B> ToStrongVFromKleisliLike(F, scalaz.Strong<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #455                // InterfaceMethod scalaz/syntax/ToStrongOps0.ToStrongVFromKleisliLike$:(Lscalaz/syntax/ToStrongOps0;Ljava/lang/Object;Lscalaz/Strong;)Lscalaz/syntax/StrongOps;
       6: areturn

  public <FA> scalaz.syntax.StrongOps<java.lang.Object, java.lang.Object, java.lang.Object> ToStrongOpsUnapply(FA, scalaz.Unapply2<scalaz.Strong, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #464                // InterfaceMethod scalaz/syntax/ToStrongOpsU.ToStrongOpsUnapply$:(Lscalaz/syntax/ToStrongOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/StrongOps;
       6: areturn

  public <F, A, B> scalaz.syntax.ProfunctorOps<F, A, B> ToProfunctorOps(F, scalaz.Profunctor<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #473                // InterfaceMethod scalaz/syntax/ToProfunctorOps0.ToProfunctorOps$:(Lscalaz/syntax/ToProfunctorOps0;Ljava/lang/Object;Lscalaz/Profunctor;)Lscalaz/syntax/ProfunctorOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.ProfunctorOps<?, A, B> ToProfunctorVFromKleisliLike(F, scalaz.Profunctor<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #479                // InterfaceMethod scalaz/syntax/ToProfunctorOps0.ToProfunctorVFromKleisliLike$:(Lscalaz/syntax/ToProfunctorOps0;Ljava/lang/Object;Lscalaz/Profunctor;)Lscalaz/syntax/ProfunctorOps;
       6: areturn

  public <FA> scalaz.syntax.ProfunctorOps<java.lang.Object, java.lang.Object, java.lang.Object> ToProfunctorOpsUnapply(FA, scalaz.Unapply2<scalaz.Profunctor, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #488                // InterfaceMethod scalaz/syntax/ToProfunctorOpsU.ToProfunctorOpsUnapply$:(Lscalaz/syntax/ToProfunctorOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ProfunctorOps;
       6: areturn

  public <F, A, B> scalaz.syntax.ArrowOps<F, A, B> ToArrowOps(F, scalaz.Arrow<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #497                // InterfaceMethod scalaz/syntax/ToArrowOps0.ToArrowOps$:(Lscalaz/syntax/ToArrowOps0;Ljava/lang/Object;Lscalaz/Arrow;)Lscalaz/syntax/ArrowOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.ArrowOps<?, A, B> ToArrowVFromKleisliLike(F, scalaz.Arrow<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #503                // InterfaceMethod scalaz/syntax/ToArrowOps0.ToArrowVFromKleisliLike$:(Lscalaz/syntax/ToArrowOps0;Ljava/lang/Object;Lscalaz/Arrow;)Lscalaz/syntax/ArrowOps;
       6: areturn

  public <FA> scalaz.syntax.ArrowOps<java.lang.Object, java.lang.Object, java.lang.Object> ToArrowOpsUnapply(FA, scalaz.Unapply2<scalaz.Arrow, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #512                // InterfaceMethod scalaz/syntax/ToArrowOpsU.ToArrowOpsUnapply$:(Lscalaz/syntax/ToArrowOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ArrowOps;
       6: areturn

  public <F, A, B> scalaz.syntax.CategoryOps<F, A, B> ToCategoryOps(F, scalaz.Category<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #521                // InterfaceMethod scalaz/syntax/ToCategoryOps0.ToCategoryOps$:(Lscalaz/syntax/ToCategoryOps0;Ljava/lang/Object;Lscalaz/Category;)Lscalaz/syntax/CategoryOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.CategoryOps<?, A, B> ToCategoryVFromKleisliLike(F, scalaz.Category<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #527                // InterfaceMethod scalaz/syntax/ToCategoryOps0.ToCategoryVFromKleisliLike$:(Lscalaz/syntax/ToCategoryOps0;Ljava/lang/Object;Lscalaz/Category;)Lscalaz/syntax/CategoryOps;
       6: areturn

  public <FA> scalaz.syntax.CategoryOps<java.lang.Object, java.lang.Object, java.lang.Object> ToCategoryOpsUnapply(FA, scalaz.Unapply2<scalaz.Category, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #536                // InterfaceMethod scalaz/syntax/ToCategoryOpsU.ToCategoryOpsUnapply$:(Lscalaz/syntax/ToCategoryOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/CategoryOps;
       6: areturn

  public <F, A, B> scalaz.syntax.ComposeOps<F, A, B> ToComposeOps(F, scalaz.Compose<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #545                // InterfaceMethod scalaz/syntax/ToComposeOps0.ToComposeOps$:(Lscalaz/syntax/ToComposeOps0;Ljava/lang/Object;Lscalaz/Compose;)Lscalaz/syntax/ComposeOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.ComposeOps<?, A, B> ToComposeVFromKleisliLike(F, scalaz.Compose<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #551                // InterfaceMethod scalaz/syntax/ToComposeOps0.ToComposeVFromKleisliLike$:(Lscalaz/syntax/ToComposeOps0;Ljava/lang/Object;Lscalaz/Compose;)Lscalaz/syntax/ComposeOps;
       6: areturn

  public <FA> scalaz.syntax.ComposeOps<java.lang.Object, java.lang.Object, java.lang.Object> ToComposeOpsUnapply(FA, scalaz.Unapply2<scalaz.Compose, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #560                // InterfaceMethod scalaz/syntax/ToComposeOpsU.ToComposeOpsUnapply$:(Lscalaz/syntax/ToComposeOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ComposeOps;
       6: areturn

  public <F, A, B> scalaz.syntax.BitraverseOps<F, A, B> ToBitraverseOps(F, scalaz.Bitraverse<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #569                // InterfaceMethod scalaz/syntax/ToBitraverseOps0.ToBitraverseOps$:(Lscalaz/syntax/ToBitraverseOps0;Ljava/lang/Object;Lscalaz/Bitraverse;)Lscalaz/syntax/BitraverseOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.BitraverseOps<?, A, B> ToBitraverseVFromKleisliLike(F, scalaz.Bitraverse<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #575                // InterfaceMethod scalaz/syntax/ToBitraverseOps0.ToBitraverseVFromKleisliLike$:(Lscalaz/syntax/ToBitraverseOps0;Ljava/lang/Object;Lscalaz/Bitraverse;)Lscalaz/syntax/BitraverseOps;
       6: areturn

  public <FA> scalaz.syntax.BitraverseOps<java.lang.Object, java.lang.Object, java.lang.Object> ToBitraverseOpsUnapply(FA, scalaz.Unapply2<scalaz.Bitraverse, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #584                // InterfaceMethod scalaz/syntax/ToBitraverseOpsU.ToBitraverseOpsUnapply$:(Lscalaz/syntax/ToBitraverseOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/BitraverseOps;
       6: areturn

  public <F, A, B> scalaz.syntax.AssociativeOps<F, A, B> ToAssociativeOps(F, scalaz.Associative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #593                // InterfaceMethod scalaz/syntax/ToAssociativeOps0.ToAssociativeOps$:(Lscalaz/syntax/ToAssociativeOps0;Ljava/lang/Object;Lscalaz/Associative;)Lscalaz/syntax/AssociativeOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.AssociativeOps<?, A, B> ToAssociativeVFromKleisliLike(F, scalaz.Associative<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #599                // InterfaceMethod scalaz/syntax/ToAssociativeOps0.ToAssociativeVFromKleisliLike$:(Lscalaz/syntax/ToAssociativeOps0;Ljava/lang/Object;Lscalaz/Associative;)Lscalaz/syntax/AssociativeOps;
       6: areturn

  public <FA> scalaz.syntax.AssociativeOps<java.lang.Object, java.lang.Object, java.lang.Object> ToAssociativeOpsUnapply(FA, scalaz.Unapply2<scalaz.Associative, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #608                // InterfaceMethod scalaz/syntax/ToAssociativeOpsU.ToAssociativeOpsUnapply$:(Lscalaz/syntax/ToAssociativeOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/AssociativeOps;
       6: areturn

  public <F, A, B> scalaz.syntax.BifunctorOps<F, A, B> ToBifunctorOps(F, scalaz.Bifunctor<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #617                // InterfaceMethod scalaz/syntax/ToBifunctorOps0.ToBifunctorOps$:(Lscalaz/syntax/ToBifunctorOps0;Ljava/lang/Object;Lscalaz/Bifunctor;)Lscalaz/syntax/BifunctorOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.BifunctorOps<?, A, B> ToBifunctorVFromKleisliLike(F, scalaz.Bifunctor<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #623                // InterfaceMethod scalaz/syntax/ToBifunctorOps0.ToBifunctorVFromKleisliLike$:(Lscalaz/syntax/ToBifunctorOps0;Ljava/lang/Object;Lscalaz/Bifunctor;)Lscalaz/syntax/BifunctorOps;
       6: areturn

  public <FA> scalaz.syntax.BifunctorOps<java.lang.Object, java.lang.Object, java.lang.Object> ToBifunctorOpsUnapply(FA, scalaz.Unapply2<scalaz.Bifunctor, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #632                // InterfaceMethod scalaz/syntax/ToBifunctorOpsU.ToBifunctorOpsUnapply$:(Lscalaz/syntax/ToBifunctorOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/BifunctorOps;
       6: areturn

  public <F, A> scalaz.syntax.TraverseOps<F, A> ToTraverseOps(F, scalaz.Traverse<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #641                // InterfaceMethod scalaz/syntax/ToTraverseOps0.ToTraverseOps$:(Lscalaz/syntax/ToTraverseOps0;Ljava/lang/Object;Lscalaz/Traverse;)Lscalaz/syntax/TraverseOps;
       6: areturn

  public <FA> scalaz.syntax.TraverseOps<java.lang.Object, java.lang.Object> ToTraverseOpsUnapply(FA, scalaz.Unapply<scalaz.Traverse, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #651                // InterfaceMethod scalaz/syntax/ToTraverseOpsU.ToTraverseOpsUnapply$:(Lscalaz/syntax/ToTraverseOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/TraverseOps;
       6: areturn

  public <F, A> scalaz.syntax.MonadPlusOps<F, A> ToMonadPlusOps(F, scalaz.MonadPlus<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #660                // InterfaceMethod scalaz/syntax/ToMonadPlusOps0.ToMonadPlusOps$:(Lscalaz/syntax/ToMonadPlusOps0;Ljava/lang/Object;Lscalaz/MonadPlus;)Lscalaz/syntax/MonadPlusOps;
       6: areturn

  public <FA> scalaz.syntax.MonadPlusOps<java.lang.Object, java.lang.Object> ToMonadPlusOpsUnapply(FA, scalaz.Unapply<scalaz.MonadPlus, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #670                // InterfaceMethod scalaz/syntax/ToMonadPlusOpsU.ToMonadPlusOpsUnapply$:(Lscalaz/syntax/ToMonadPlusOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/MonadPlusOps;
       6: areturn

  public <F, A> scalaz.syntax.AltOps<F, A> ToAltOps(F, scalaz.Alt<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #679                // InterfaceMethod scalaz/syntax/ToAltOps0.ToAltOps$:(Lscalaz/syntax/ToAltOps0;Ljava/lang/Object;Lscalaz/Alt;)Lscalaz/syntax/AltOps;
       6: areturn

  public <FA> scalaz.syntax.AltOps<java.lang.Object, java.lang.Object> ToAltOpsUnapply(FA, scalaz.Unapply<scalaz.Alt, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #689                // InterfaceMethod scalaz/syntax/ToAltOpsU.ToAltOpsUnapply$:(Lscalaz/syntax/ToAltOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/AltOps;
       6: areturn

  public <F, A> scalaz.syntax.ApplicativePlusOps<F, A> ToApplicativePlusOps(F, scalaz.ApplicativePlus<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #698                // InterfaceMethod scalaz/syntax/ToApplicativePlusOps0.ToApplicativePlusOps$:(Lscalaz/syntax/ToApplicativePlusOps0;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Lscalaz/syntax/ApplicativePlusOps;
       6: areturn

  public <FA> scalaz.syntax.ApplicativePlusOps<java.lang.Object, java.lang.Object> ToApplicativePlusOpsUnapply(FA, scalaz.Unapply<scalaz.ApplicativePlus, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #708                // InterfaceMethod scalaz/syntax/ToApplicativePlusOpsU.ToApplicativePlusOpsUnapply$:(Lscalaz/syntax/ToApplicativePlusOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ApplicativePlusOps;
       6: areturn

  public <F, A> scalaz.syntax.PlusOps<F, A> ToPlusOps(F, scalaz.Plus<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #717                // InterfaceMethod scalaz/syntax/ToPlusOps0.ToPlusOps$:(Lscalaz/syntax/ToPlusOps0;Ljava/lang/Object;Lscalaz/Plus;)Lscalaz/syntax/PlusOps;
       6: areturn

  public <FA> scalaz.syntax.PlusOps<java.lang.Object, java.lang.Object> ToPlusOpsUnapply(FA, scalaz.Unapply<scalaz.Plus, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #727                // InterfaceMethod scalaz/syntax/ToPlusOpsU.ToPlusOpsUnapply$:(Lscalaz/syntax/ToPlusOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/PlusOps;
       6: areturn

  public <F, A> scalaz.syntax.CozipOps<F, A> ToCozipOps(F, scalaz.Cozip<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #736                // InterfaceMethod scalaz/syntax/ToCozipOps0.ToCozipOps$:(Lscalaz/syntax/ToCozipOps0;Ljava/lang/Object;Lscalaz/Cozip;)Lscalaz/syntax/CozipOps;
       6: areturn

  public <FA> scalaz.syntax.CozipOps<java.lang.Object, java.lang.Object> ToCozipOpsUnapply(FA, scalaz.Unapply<scalaz.Cozip, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #746                // InterfaceMethod scalaz/syntax/ToCozipOpsU.ToCozipOpsUnapply$:(Lscalaz/syntax/ToCozipOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/CozipOps;
       6: areturn

  public <F, A, B> scalaz.syntax.BifoldableOps<F, A, B> ToBifoldableOps(F, scalaz.Bifoldable<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #755                // InterfaceMethod scalaz/syntax/ToBifoldableOps0.ToBifoldableOps$:(Lscalaz/syntax/ToBifoldableOps0;Ljava/lang/Object;Lscalaz/Bifoldable;)Lscalaz/syntax/BifoldableOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.BifoldableOps<?, A, B> ToBifoldableVFromKleisliLike(F, scalaz.Bifoldable<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #761                // InterfaceMethod scalaz/syntax/ToBifoldableOps0.ToBifoldableVFromKleisliLike$:(Lscalaz/syntax/ToBifoldableOps0;Ljava/lang/Object;Lscalaz/Bifoldable;)Lscalaz/syntax/BifoldableOps;
       6: areturn

  public <FA> scalaz.syntax.BifoldableOps<java.lang.Object, java.lang.Object, java.lang.Object> ToBifoldableOpsUnapply(FA, scalaz.Unapply2<scalaz.Bifoldable, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #770                // InterfaceMethod scalaz/syntax/ToBifoldableOpsU.ToBifoldableOpsUnapply$:(Lscalaz/syntax/ToBifoldableOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/BifoldableOps;
       6: areturn

  public <F, A> scalaz.syntax.ComonadOps<F, A> ToComonadOps(F, scalaz.Comonad<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #779                // InterfaceMethod scalaz/syntax/ToComonadOps0.ToComonadOps$:(Lscalaz/syntax/ToComonadOps0;Ljava/lang/Object;Lscalaz/Comonad;)Lscalaz/syntax/ComonadOps;
       6: areturn

  public <FA> scalaz.syntax.ComonadOps<java.lang.Object, java.lang.Object> ToComonadOpsUnapply(FA, scalaz.Unapply<scalaz.Comonad, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #789                // InterfaceMethod scalaz/syntax/ToComonadOpsU.ToComonadOpsUnapply$:(Lscalaz/syntax/ToComonadOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ComonadOps;
       6: areturn

  public <F, A> scalaz.syntax.MonadOps<F, A> ToMonadOps(F, scalaz.Monad<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #798                // InterfaceMethod scalaz/syntax/ToMonadOps0.ToMonadOps$:(Lscalaz/syntax/ToMonadOps0;Ljava/lang/Object;Lscalaz/Monad;)Lscalaz/syntax/MonadOps;
       6: areturn

  public <FA> scalaz.syntax.MonadOps<java.lang.Object, java.lang.Object> ToMonadOpsUnapply(FA, scalaz.Unapply<scalaz.Monad, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #808                // InterfaceMethod scalaz/syntax/ToMonadOpsU.ToMonadOpsUnapply$:(Lscalaz/syntax/ToMonadOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/MonadOps;
       6: areturn

  public <F, A> scalaz.syntax.BindOps<F, A> ToBindOps(F, scalaz.Bind<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #817                // InterfaceMethod scalaz/syntax/ToBindOps0.ToBindOps$:(Lscalaz/syntax/ToBindOps0;Ljava/lang/Object;Lscalaz/Bind;)Lscalaz/syntax/BindOps;
       6: areturn

  public <FA> scalaz.syntax.BindOps<java.lang.Object, java.lang.Object> ToBindOpsUnapply(FA, scalaz.Unapply<scalaz.Bind, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #827                // InterfaceMethod scalaz/syntax/ToBindOpsU.ToBindOpsUnapply$:(Lscalaz/syntax/ToBindOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/BindOps;
       6: areturn

  public <F, A> scalaz.syntax.ApplicativeOps<F, A> ToApplicativeOps(F, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #834                // InterfaceMethod scalaz/syntax/ToApplicativeOps0.ToApplicativeOps$:(Lscalaz/syntax/ToApplicativeOps0;Ljava/lang/Object;Lscalaz/Applicative;)Lscalaz/syntax/ApplicativeOps;
       6: areturn

  public <A> scalaz.syntax.ToApplicativeOps0<scalaz.Applicative>.ApplicativeIdV<A> ApplicativeIdV(scala.Function0<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #841                // InterfaceMethod scalaz/syntax/ToApplicativeOps0.ApplicativeIdV$:(Lscalaz/syntax/ToApplicativeOps0;Lscala/Function0;)Lscalaz/syntax/ToApplicativeOps0$ApplicativeIdV;
       5: areturn

  public <FA> scalaz.syntax.ApplicativeOps<java.lang.Object, java.lang.Object> ToApplicativeOpsUnapply(FA, scalaz.Unapply<scalaz.Applicative, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #851                // InterfaceMethod scalaz/syntax/ToApplicativeOpsU.ToApplicativeOpsUnapply$:(Lscalaz/syntax/ToApplicativeOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ApplicativeOps;
       6: areturn

  public <F, A> scalaz.syntax.ApplyOps<F, A> ToApplyOps(F, scalaz.Apply<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #860                // InterfaceMethod scalaz/syntax/ToApplyOps0.ToApplyOps$:(Lscalaz/syntax/ToApplyOps0;Ljava/lang/Object;Lscalaz/Apply;)Lscalaz/syntax/ApplyOps;
       6: areturn

  public <F, A, B, C> F $up(scala.Function0<F>, scala.Function0<F>, scala.Function2<A, B, C>, scalaz.Apply<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #871                // InterfaceMethod scalaz/syntax/ToApplyOps0.$up$:(Lscalaz/syntax/ToApplyOps0;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Apply;)Ljava/lang/Object;
       9: areturn

  public <F, A, B, C, D> F $up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function3<A, B, C, D>, scalaz.Apply<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #880                // InterfaceMethod scalaz/syntax/ToApplyOps0.$up$up$:(Lscalaz/syntax/ToApplyOps0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscalaz/Apply;)Ljava/lang/Object;
      11: areturn

  public <F, A, B, C, D, E> F $up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function4<A, B, C, D, E>, scalaz.Apply<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #889                // InterfaceMethod scalaz/syntax/ToApplyOps0.$up$up$up$:(Lscalaz/syntax/ToApplyOps0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscalaz/Apply;)Ljava/lang/Object;
      13: areturn

  public <F, A, B, C, D, E, I> F $up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function5<A, B, C, D, E, I>, scalaz.Apply<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #898                // InterfaceMethod scalaz/syntax/ToApplyOps0.$up$up$up$up$:(Lscalaz/syntax/ToApplyOps0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;Lscalaz/Apply;)Ljava/lang/Object;
      15: areturn

  public <F, A, B, C, D, E, I, J> F $up$up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function6<A, B, C, D, E, I, J>, scalaz.Apply<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #907                // InterfaceMethod scalaz/syntax/ToApplyOps0.$up$up$up$up$up$:(Lscalaz/syntax/ToApplyOps0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;Lscalaz/Apply;)Ljava/lang/Object;
      17: areturn

  public <F, A, B, C, D, E, I, J, K> F $up$up$up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function7<A, B, C, D, E, I, J, K>, scalaz.Apply<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #916                // InterfaceMethod scalaz/syntax/ToApplyOps0.$up$up$up$up$up$up$:(Lscalaz/syntax/ToApplyOps0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;Lscalaz/Apply;)Ljava/lang/Object;
      19: areturn

  public <FA> scalaz.syntax.ApplyOps<java.lang.Object, java.lang.Object> ToApplyOpsUnapply(FA, scalaz.Unapply<scalaz.Apply, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #926                // InterfaceMethod scalaz/syntax/ToApplyOpsU.ToApplyOpsUnapply$:(Lscalaz/syntax/ToApplyOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ApplyOps;
       6: areturn

  public <F, A> scalaz.syntax.ContravariantOps<F, A> ToContravariantOps(F, scalaz.Contravariant<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #935                // InterfaceMethod scalaz/syntax/ToContravariantOps0.ToContravariantOps$:(Lscalaz/syntax/ToContravariantOps0;Ljava/lang/Object;Lscalaz/Contravariant;)Lscalaz/syntax/ContravariantOps;
       6: areturn

  public <FA> scalaz.syntax.ContravariantOps<java.lang.Object, java.lang.Object> ToContravariantOpsUnapply(FA, scalaz.Unapply<scalaz.Contravariant, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #945                // InterfaceMethod scalaz/syntax/ToContravariantOpsU.ToContravariantOpsUnapply$:(Lscalaz/syntax/ToContravariantOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ContravariantOps;
       6: areturn

  public <F, A> scalaz.syntax.FunctorOps<F, A> ToFunctorOps(F, scalaz.Functor<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #952                // InterfaceMethod scalaz/syntax/ToFunctorOps0.ToFunctorOps$:(Lscalaz/syntax/ToFunctorOps0;Ljava/lang/Object;Lscalaz/Functor;)Lscalaz/syntax/FunctorOps;
       6: areturn

  public <F$, A, B> scalaz.syntax.ToFunctorOps0<scalaz.Functor>.LiftV<F$, A, B> ToLiftV(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #960                // InterfaceMethod scalaz/syntax/ToFunctorOps0.ToLiftV$:(Lscalaz/syntax/ToFunctorOps0;Lscala/Function1;)Lscalaz/syntax/ToFunctorOps0$LiftV;
       5: areturn

  public <A> scalaz.syntax.ToFunctorOps0<scalaz.Functor>.FunctorIdV<A> ToFunctorIdV(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #968                // InterfaceMethod scalaz/syntax/ToFunctorOps0.ToFunctorIdV$:(Lscalaz/syntax/ToFunctorOps0;Ljava/lang/Object;)Lscalaz/syntax/ToFunctorOps0$FunctorIdV;
       5: areturn

  public <FA> scalaz.syntax.FunctorOps<java.lang.Object, java.lang.Object> ToFunctorOpsUnapply(FA, scalaz.Unapply<scalaz.Functor, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #977                // InterfaceMethod scalaz/syntax/ToFunctorOpsU.ToFunctorOpsUnapply$:(Lscalaz/syntax/ToFunctorOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/FunctorOps;
       6: areturn

  public <F, A> scalaz.syntax.PlusEmptyOps<F, A> ToPlusEmptyOps(F, scalaz.PlusEmpty<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #986                // InterfaceMethod scalaz/syntax/ToPlusEmptyOps0.ToPlusEmptyOps$:(Lscalaz/syntax/ToPlusEmptyOps0;Ljava/lang/Object;Lscalaz/PlusEmpty;)Lscalaz/syntax/PlusEmptyOps;
       6: areturn

  public <F, A> F mempty(scalaz.PlusEmpty<F>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #994                // InterfaceMethod scalaz/syntax/ToPlusEmptyOps0.mempty$:(Lscalaz/syntax/ToPlusEmptyOps0;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       5: areturn

  public <FA> scalaz.syntax.PlusEmptyOps<java.lang.Object, java.lang.Object> ToPlusEmptyOpsUnapply(FA, scalaz.Unapply<scalaz.PlusEmpty, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1003               // InterfaceMethod scalaz/syntax/ToPlusEmptyOpsU.ToPlusEmptyOpsUnapply$:(Lscalaz/syntax/ToPlusEmptyOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/PlusEmptyOps;
       6: areturn

  public <F> scalaz.syntax.EnumOps<F> ToEnumOps(F, scalaz.Enum<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1012               // InterfaceMethod scalaz/syntax/ToEnumOps.ToEnumOps$:(Lscalaz/syntax/ToEnumOps;Ljava/lang/Object;Lscalaz/Enum;)Lscalaz/syntax/EnumOps;
       6: areturn

  public <F> scalaz.syntax.OrderOps<F> ToOrderOps(F, scalaz.Order<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1022               // InterfaceMethod scalaz/syntax/ToOrderOps.ToOrderOps$:(Lscalaz/syntax/ToOrderOps;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/syntax/OrderOps;
       6: areturn

  public <F> scalaz.syntax.ShowOps<F> ToShowOps(F, scalaz.Show<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1032               // InterfaceMethod scalaz/syntax/ToShowOps.ToShowOps$:(Lscalaz/syntax/ToShowOps;Ljava/lang/Object;Lscalaz/Show;)Lscalaz/syntax/ShowOps;
       6: areturn

  public final scala.StringContext showInterpolator(scala.StringContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1040               // InterfaceMethod scalaz/syntax/ToShowOps.showInterpolator$:(Lscalaz/syntax/ToShowOps;Lscala/StringContext;)Lscala/StringContext;
       5: areturn

  public final scala.StringContext cordInterpolator(scala.StringContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1045               // InterfaceMethod scalaz/syntax/ToShowOps.cordInterpolator$:(Lscalaz/syntax/ToShowOps;Lscala/StringContext;)Lscala/StringContext;
       5: areturn

  public <F> scalaz.syntax.EqualOps<F> ToEqualOps(F, scalaz.Equal<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1054               // InterfaceMethod scalaz/syntax/ToEqualOps.ToEqualOps$:(Lscalaz/syntax/ToEqualOps;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/syntax/EqualOps;
       6: areturn

  public <F> scalaz.syntax.BandOps<F> ToBandOps(F, scalaz.Band<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1064               // InterfaceMethod scalaz/syntax/ToBandOps.ToBandOps$:(Lscalaz/syntax/ToBandOps;Ljava/lang/Object;Lscalaz/Band;)Lscalaz/syntax/BandOps;
       6: areturn

  public <F> scalaz.syntax.MonoidOps<F> ToMonoidOps(F, scalaz.Monoid<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1074               // InterfaceMethod scalaz/syntax/ToMonoidOps.ToMonoidOps$:(Lscalaz/syntax/ToMonoidOps;Ljava/lang/Object;Lscalaz/Monoid;)Lscalaz/syntax/MonoidOps;
       6: areturn

  public <F> F mzero(scalaz.Monoid<F>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1082               // InterfaceMethod scalaz/syntax/ToMonoidOps.mzero$:(Lscalaz/syntax/ToMonoidOps;Lscalaz/Monoid;)Ljava/lang/Object;
       5: areturn

  public <F> F $u2205(scalaz.Monoid<F>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1086               // InterfaceMethod scalaz/syntax/ToMonoidOps.$u2205$:(Lscalaz/syntax/ToMonoidOps;Lscalaz/Monoid;)Ljava/lang/Object;
       5: areturn

  public <F> scalaz.syntax.SemigroupOps<F> ToSemigroupOps(F, scalaz.Semigroup<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1095               // InterfaceMethod scalaz/syntax/ToSemigroupOps.ToSemigroupOps$:(Lscalaz/syntax/ToSemigroupOps;Ljava/lang/Object;Lscalaz/Semigroup;)Lscalaz/syntax/SemigroupOps;
       6: areturn

  private scalaz.syntax.all$();
    Code:
       0: aload_0
       1: invokespecial #1097               // Method java/lang/Object."<init>":()V
       4: return
}
