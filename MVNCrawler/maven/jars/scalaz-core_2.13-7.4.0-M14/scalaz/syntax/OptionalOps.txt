Compiled from "OptionalSyntax.scala"
public final class scalaz.syntax.OptionalOps<F, A> implements scalaz.syntax.Ops<F> {
  private final F self;

  private final scalaz.Optional<F> F;

  public F self();
    Code:
       0: aload_0
       1: getfield      #24                 // Field self:Ljava/lang/Object;
       4: areturn

  public scalaz.Optional<F> F();
    Code:
       0: aload_0
       1: getfield      #30                 // Field F:Lscalaz/Optional;
       4: areturn

  public final <B> scalaz.$bslash$div<F, A> pextract();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method F:()Lscalaz/Optional;
       4: aload_0
       5: invokevirtual #37                 // Method self:()Ljava/lang/Object;
       8: invokeinterface #42,  2           // InterfaceMethod scalaz/Optional.pextract:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      13: areturn

  public A getOrElse(scala.Function0<A>);
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method F:()Lscalaz/Optional;
       4: aload_0
       5: invokevirtual #37                 // Method self:()Ljava/lang/Object;
       8: aload_1
       9: invokeinterface #49,  3           // InterfaceMethod scalaz/Optional.getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public boolean isDefined();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method F:()Lscalaz/Optional;
       4: aload_0
       5: invokevirtual #37                 // Method self:()Ljava/lang/Object;
       8: invokeinterface #55,  2           // InterfaceMethod scalaz/Optional.isDefined:(Ljava/lang/Object;)Z
      13: ireturn

  public F orElse(scala.Function0<F>);
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method F:()Lscalaz/Optional;
       4: aload_0
       5: invokevirtual #37                 // Method self:()Ljava/lang/Object;
       8: aload_1
       9: invokeinterface #60,  3           // InterfaceMethod scalaz/Optional.orElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method F:()Lscalaz/Optional;
       4: aload_0
       5: invokevirtual #37                 // Method self:()Ljava/lang/Object;
       8: astore_1
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: aload_1
      16: invokeinterface #55,  2           // InterfaceMethod scalaz/Optional.isDefined:(Ljava/lang/Object;)Z
      21: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method F:()Lscalaz/Optional;
       4: aload_0
       5: invokevirtual #37                 // Method self:()Ljava/lang/Object;
       8: invokeinterface #65,  2           // InterfaceMethod scalaz/Optional.isEmpty:(Ljava/lang/Object;)Z
      13: ireturn

  public <X> scalaz.syntax.OptionalOps<F, A>.Conditional<X> $qmark(scala.Function0<X>);
    Code:
       0: new           #13                 // class scalaz/syntax/OptionalOps$Conditional
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #73                 // Method scalaz/syntax/OptionalOps$Conditional."<init>":(Lscalaz/syntax/OptionalOps;Lscala/Function0;)V
       9: areturn

  public scala.Option<A> toOption();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method F:()Lscalaz/Optional;
       4: aload_0
       5: invokevirtual #37                 // Method self:()Ljava/lang/Object;
       8: invokeinterface #79,  2           // InterfaceMethod scalaz/Optional.toOption:(Ljava/lang/Object;)Lscala/Option;
      13: areturn

  public scalaz.Maybe<A> toMaybe();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method F:()Lscalaz/Optional;
       4: aload_0
       5: invokevirtual #37                 // Method self:()Ljava/lang/Object;
       8: invokeinterface #85,  2           // InterfaceMethod scalaz/Optional.toMaybe:(Ljava/lang/Object;)Lscalaz/Maybe;
      13: areturn

  public scalaz.syntax.OptionalOps(F, scalaz.Optional<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field self:Ljava/lang/Object;
       5: aload_0
       6: aload_2
       7: putfield      #30                 // Field F:Lscalaz/Optional;
      10: aload_0
      11: invokespecial #90                 // Method java/lang/Object."<init>":()V
      14: return
}
