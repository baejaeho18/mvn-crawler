Compiled from "TreeLoc.scala"
public final class scalaz.TreeLocInstances$$anon$4 implements scalaz.Order<scalaz.TreeLoc<A>>, scalaz.TreeLocEqual<A> {
  private scalaz.syntax.OrderSyntax<scalaz.TreeLoc<A>> orderSyntax;

  private scalaz.syntax.EqualSyntax<scalaz.TreeLoc<A>> equalSyntax;

  private final scalaz.Order A$2;

  public final boolean equal(scalaz.TreeLoc<A>, scalaz.TreeLoc<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #51                 // InterfaceMethod scalaz/TreeLocEqual.equal$:(Lscalaz/TreeLocEqual;Lscalaz/TreeLoc;Lscalaz/TreeLoc;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #62                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #69                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #73                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #77                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #81                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #87                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #91                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #97                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scalaz.TreeLoc<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #105                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scalaz.TreeLoc<A>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #113                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scalaz.TreeLoc<A>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #119                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scalaz.TreeLoc<A>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #126                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #132                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.TreeLoc<A>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #139                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<scalaz.TreeLoc<A>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #143                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scalaz.TreeLoc<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #143                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scalaz.TreeLoc<A>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #151                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.TreeLoc<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #151                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<A> E();
    Code:
       0: aload_0
       1: getfield      #158                // Field A$2:Lscalaz/Order;
       4: areturn

  public scalaz.Ordering order(scalaz.TreeLoc<A>, scalaz.TreeLoc<A>);
    Code:
       0: getstatic     #167                // Field scalaz/Divide$.MODULE$:Lscalaz/Divide$;
       3: pop
       4: getstatic     #172                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       7: invokevirtual #176                // Method scalaz/Order$.orderInstance:()Lscalaz/Decidable;
      10: invokedynamic #196,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      15: getstatic     #201                // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
      18: aload_0
      19: getfield      #158                // Field A$2:Lscalaz/Order;
      22: astore        12
      24: astore        11
      26: new           #32                 // class scalaz/TreeInstances$$anon$3
      29: dup
      30: aload         11
      32: aload         12
      34: invokespecial #205                // Method scalaz/TreeInstances$$anon$3."<init>":(Lscalaz/TreeInstances;Lscalaz/Order;)V
      37: aconst_null
      38: astore        11
      40: aconst_null
      41: astore        12
      43: getstatic     #210                // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      46: pop
      47: getstatic     #201                // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
      50: aload_0
      51: getfield      #158                // Field A$2:Lscalaz/Order;
      54: astore        14
      56: astore        13
      58: new           #32                 // class scalaz/TreeInstances$$anon$3
      61: dup
      62: aload         13
      64: aload         14
      66: invokespecial #205                // Method scalaz/TreeInstances$$anon$3."<init>":(Lscalaz/TreeInstances;Lscalaz/Order;)V
      69: aconst_null
      70: astore        13
      72: aconst_null
      73: astore        14
      75: astore        15
      77: new           #22                 // class scalaz/EphemeralStreamInstances$$anon$2
      80: dup
      81: aconst_null
      82: aload         15
      84: invokespecial #213                // Method scalaz/EphemeralStreamInstances$$anon$2."<init>":(Lscalaz/EphemeralStreamInstances;Lscalaz/Order;)V
      87: aconst_null
      88: astore        15
      90: getstatic     #210                // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      93: pop
      94: getstatic     #201                // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
      97: aload_0
      98: getfield      #158                // Field A$2:Lscalaz/Order;
     101: astore        17
     103: astore        16
     105: new           #32                 // class scalaz/TreeInstances$$anon$3
     108: dup
     109: aload         16
     111: aload         17
     113: invokespecial #205                // Method scalaz/TreeInstances$$anon$3."<init>":(Lscalaz/TreeInstances;Lscalaz/Order;)V
     116: aconst_null
     117: astore        16
     119: aconst_null
     120: astore        17
     122: astore        18
     124: new           #22                 // class scalaz/EphemeralStreamInstances$$anon$2
     127: dup
     128: aconst_null
     129: aload         18
     131: invokespecial #213                // Method scalaz/EphemeralStreamInstances$$anon$2."<init>":(Lscalaz/EphemeralStreamInstances;Lscalaz/Order;)V
     134: aconst_null
     135: astore        18
     137: getstatic     #210                // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     140: pop
     141: getstatic     #218                // Field scalaz/std/tuple$.MODULE$:Lscalaz/std/tuple$;
     144: pop
     145: getstatic     #210                // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     148: pop
     149: getstatic     #201                // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
     152: aload_0
     153: getfield      #158                // Field A$2:Lscalaz/Order;
     156: astore        20
     158: astore        19
     160: new           #32                 // class scalaz/TreeInstances$$anon$3
     163: dup
     164: aload         19
     166: aload         20
     168: invokespecial #205                // Method scalaz/TreeInstances$$anon$3."<init>":(Lscalaz/TreeInstances;Lscalaz/Order;)V
     171: aconst_null
     172: astore        19
     174: aconst_null
     175: astore        20
     177: astore        21
     179: new           #22                 // class scalaz/EphemeralStreamInstances$$anon$2
     182: dup
     183: aconst_null
     184: aload         21
     186: invokespecial #213                // Method scalaz/EphemeralStreamInstances$$anon$2."<init>":(Lscalaz/EphemeralStreamInstances;Lscalaz/Order;)V
     189: aconst_null
     190: astore        21
     192: aload_0
     193: getfield      #158                // Field A$2:Lscalaz/Order;
     196: getstatic     #210                // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
     199: pop
     200: getstatic     #201                // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
     203: aload_0
     204: getfield      #158                // Field A$2:Lscalaz/Order;
     207: astore        23
     209: astore        22
     211: new           #32                 // class scalaz/TreeInstances$$anon$3
     214: dup
     215: aload         22
     217: aload         23
     219: invokespecial #205                // Method scalaz/TreeInstances$$anon$3."<init>":(Lscalaz/TreeInstances;Lscalaz/Order;)V
     222: aconst_null
     223: astore        22
     225: aconst_null
     226: astore        23
     228: astore        24
     230: new           #22                 // class scalaz/EphemeralStreamInstances$$anon$2
     233: dup
     234: aconst_null
     235: aload         24
     237: invokespecial #213                // Method scalaz/EphemeralStreamInstances$$anon$2."<init>":(Lscalaz/EphemeralStreamInstances;Lscalaz/Order;)V
     240: aconst_null
     241: astore        24
     243: astore        5
     245: astore        4
     247: astore_3
     248: new           #34                 // class scalaz/std/TupleInstances3$$anon$60
     251: dup
     252: aconst_null
     253: aload_3
     254: aload         4
     256: aload         5
     258: invokespecial #221                // Method scalaz/std/TupleInstances3$$anon$60."<init>":(Lscalaz/std/TupleInstances3;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;)V
     261: aconst_null
     262: astore_3
     263: aconst_null
     264: astore        4
     266: aconst_null
     267: astore        5
     269: astore        25
     271: new           #22                 // class scalaz/EphemeralStreamInstances$$anon$2
     274: dup
     275: aconst_null
     276: aload         25
     278: invokespecial #213                // Method scalaz/EphemeralStreamInstances$$anon$2."<init>":(Lscalaz/EphemeralStreamInstances;Lscalaz/Order;)V
     281: aconst_null
     282: astore        25
     284: astore        10
     286: astore        9
     288: astore        8
     290: astore        7
     292: astore        6
     294: dup
     295: ifnonnull     300
     298: aconst_null
     299: athrow
     300: aload         7
     302: invokedynamic #232,  0            // InvokeDynamic #1:apply:(Ljava/lang/Object;)Lscala/Function0;
     307: aload         8
     309: invokedynamic #237,  0            // InvokeDynamic #2:apply:(Ljava/lang/Object;)Lscala/Function0;
     314: aload         9
     316: invokedynamic #242,  0            // InvokeDynamic #3:apply:(Ljava/lang/Object;)Lscala/Function0;
     321: aload         10
     323: invokedynamic #247,  0            // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
     328: aload         6
     330: invokeinterface #251,  6          // InterfaceMethod scalaz/Divide.divide4:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
     335: aconst_null
     336: astore        6
     338: aconst_null
     339: astore        7
     341: aconst_null
     342: astore        8
     344: aconst_null
     345: astore        9
     347: aconst_null
     348: astore        10
     350: checkcast     #7                  // class scalaz/Order
     353: aload_1
     354: aload_2
     355: invokeinterface #253,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
     360: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #274                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #267                // class scalaz/TreeLoc
       5: aload_2
       6: checkcast     #267                // class scalaz/TreeLoc
       9: invokevirtual #276                // Method equal:(Lscalaz/TreeLoc;Lscalaz/TreeLoc;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #267                // class scalaz/TreeLoc
       5: aload_2
       6: checkcast     #267                // class scalaz/TreeLoc
       9: invokevirtual #278                // Method order:(Lscalaz/TreeLoc;Lscalaz/TreeLoc;)Lscalaz/Ordering;
      12: areturn

  public scalaz.Equal E();
    Code:
       0: aload_0
       1: invokevirtual #281                // Method E:()Lscalaz/Order;
       4: areturn

  public static final scala.Tuple4 $anonfun$order$1(scalaz.TreeLoc);
    Code:
       0: new           #283                // class scala/Tuple4
       3: dup
       4: aload_0
       5: invokevirtual #287                // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
       8: aload_0
       9: invokevirtual #291                // Method scalaz/TreeLoc.lefts:()Lscalaz/EphemeralStream;
      12: aload_0
      13: invokevirtual #294                // Method scalaz/TreeLoc.rights:()Lscalaz/EphemeralStream;
      16: aload_0
      17: invokevirtual #297                // Method scalaz/TreeLoc.parents:()Lscalaz/EphemeralStream;
      20: invokespecial #300                // Method scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      23: areturn

  public scalaz.TreeLocInstances$$anon$4(scalaz.TreeLocInstances, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #158                // Field A$2:Lscalaz/Order;
       5: aload_0
       6: invokespecial #305                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #309                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      13: aload_0
      14: invokestatic  #312                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      17: invokestatic  #317                // Method scala/runtime/Statics.releaseFence:()V
      20: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #330,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
