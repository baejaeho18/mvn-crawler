Compiled from "toplevel.scala"
public final class scalaz.ContT {
  public static <M, R, A> scalaz.IndexedContsT<java.lang.Object, R, R, M, A> apply(scala.Function1<scala.Function1<A, M>, M>);
    Code:
       0: getstatic     #18                 // Field scalaz/ContT$.MODULE$:Lscalaz/ContT$;
       3: aload_0
       4: invokevirtual #20                 // Method scalaz/ContT$.apply:(Lscala/Function1;)Lscalaz/IndexedContsT;
       7: areturn

  public static <W, R, O, M, A, B> scalaz.IndexedContsT<W, R, O, M, A> callCC(scala.Function1<scala.Function1<A, scalaz.IndexedContsT<W, O, O, M, B>>, scalaz.IndexedContsT<W, R, O, M, A>>, scalaz.Comonad<W>);
    Code:
       0: getstatic     #18                 // Field scalaz/ContT$.MODULE$:Lscalaz/ContT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #27                 // Method scalaz/ContT$.callCC:(Lscala/Function1;Lscalaz/Comonad;)Lscalaz/IndexedContsT;
       8: areturn

  public static <W, R, O, M, A> scalaz.IndexedContsT<W, R, R, M, A> reset(scalaz.IndexedContsT<W, A, O, M, O>, scalaz.Comonad<W>, scalaz.Applicative<W>, scalaz.Monad<M>);
    Code:
       0: getstatic     #18                 // Field scalaz/ContT$.MODULE$:Lscalaz/ContT$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #36                 // Method scalaz/ContT$.reset:(Lscalaz/IndexedContsT;Lscalaz/Comonad;Lscalaz/Applicative;Lscalaz/Monad;)Lscalaz/IndexedContsT;
      10: areturn

  public static <W, I, R, J, O, M, A> scalaz.IndexedContsT<W, R, O, M, A> shift(scala.Function1<scala.Function1<A, scalaz.IndexedContsT<W, I, I, M, O>>, scalaz.IndexedContsT<W, R, J, M, J>>, scalaz.Comonad<W>, scalaz.Applicative<W>, scalaz.Monad<M>);
    Code:
       0: getstatic     #18                 // Field scalaz/ContT$.MODULE$:Lscalaz/ContT$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #44                 // Method scalaz/ContT$.shift:(Lscala/Function1;Lscalaz/Comonad;Lscalaz/Applicative;Lscalaz/Monad;)Lscalaz/IndexedContsT;
      10: areturn

  public static <W, V, R, O, M> scalaz.NaturalTransformation<?, ?> contracohoist(scalaz.NaturalTransformation<V, W>);
    Code:
       0: getstatic     #18                 // Field scalaz/ContT$.MODULE$:Lscalaz/ContT$;
       3: aload_0
       4: invokevirtual #49                 // Method scalaz/ContT$.contracohoist:(Lscalaz/NaturalTransformation;)Lscalaz/NaturalTransformation;
       7: areturn

  public static <W, R, O, M, N> scalaz.NaturalTransformation<?, ?> xhoist(scalaz.NaturalTransformation<M, N>, scalaz.NaturalTransformation<N, M>, scalaz.Functor<W>);
    Code:
       0: getstatic     #18                 // Field scalaz/ContT$.MODULE$:Lscalaz/ContT$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #56                 // Method scalaz/ContT$.xhoist:(Lscalaz/NaturalTransformation;Lscalaz/NaturalTransformation;Lscalaz/Functor;)Lscalaz/NaturalTransformation;
       9: areturn

  public static <W, R, M, A> scalaz.IndexedContsT<W, R, R, M, A> liftM(scala.Function0<M>, scalaz.Comonad<W>, scalaz.Bind<M>);
    Code:
       0: getstatic     #18                 // Field scalaz/ContT$.MODULE$:Lscalaz/ContT$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #63                 // Method scalaz/ContT$.liftM:(Lscala/Function0;Lscalaz/Comonad;Lscalaz/Bind;)Lscalaz/IndexedContsT;
       9: areturn

  public static <W, R, M, A> scalaz.IndexedContsT<W, R, R, M, A> empty(scalaz.PlusEmpty<M>);
    Code:
       0: getstatic     #18                 // Field scalaz/ContT$.MODULE$:Lscalaz/ContT$;
       3: aload_0
       4: invokevirtual #70                 // Method scalaz/ContT$.empty:(Lscalaz/PlusEmpty;)Lscalaz/IndexedContsT;
       7: areturn

  public static <W, R, M, A> scalaz.IndexedContsT<W, R, R, M, A> point(scala.Function0<A>, scalaz.Comonad<W>);
    Code:
       0: getstatic     #18                 // Field scalaz/ContT$.MODULE$:Lscalaz/ContT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #76                 // Method scalaz/ContT$.point:(Lscala/Function0;Lscalaz/Comonad;)Lscalaz/IndexedContsT;
       8: areturn

  public static <W, R, M> scalaz.MonadPlus<?> ContsTMonadPlusAlt(scalaz.Comonad<W>, scalaz.PlusEmpty<M>);
    Code:
       0: getstatic     #18                 // Field scalaz/ContT$.MODULE$:Lscalaz/ContT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #83                 // Method scalaz/ContT$.ContsTMonadPlusAlt:(Lscalaz/Comonad;Lscalaz/PlusEmpty;)Lscalaz/MonadPlus;
       8: areturn

  public static <W, O, M> scalaz.Bifunctor<?> IndexedContsTBifunctor(scalaz.Functor<W>, scalaz.Functor<M>);
    Code:
       0: getstatic     #18                 // Field scalaz/ContT$.MODULE$:Lscalaz/ContT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #88                 // Method scalaz/ContT$.IndexedContsTBifunctor:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       8: areturn

  public static <W, R, M, A> scalaz.Contravariant<?> IndexedContsTContravariant(scalaz.Functor<W>, scalaz.Functor<M>);
    Code:
       0: getstatic     #18                 // Field scalaz/ContT$.MODULE$:Lscalaz/ContT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #93                 // Method scalaz/ContT$.IndexedContsTContravariant:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Contravariant;
       8: areturn

  public static <W, O, M, A> scalaz.Functor<?> IndexedContsTFunctorLeft(scalaz.Functor<M>);
    Code:
       0: getstatic     #18                 // Field scalaz/ContT$.MODULE$:Lscalaz/ContT$;
       3: aload_0
       4: invokevirtual #98                 // Method scalaz/ContT$.IndexedContsTFunctorLeft:(Lscalaz/Functor;)Lscalaz/Functor;
       7: areturn

  public static <W, R, M> scalaz.Monad<?> ContsTMonad(scalaz.Comonad<W>);
    Code:
       0: getstatic     #18                 // Field scalaz/ContT$.MODULE$:Lscalaz/ContT$;
       3: aload_0
       4: invokevirtual #103                // Method scalaz/ContT$.ContsTMonad:(Lscalaz/Comonad;)Lscalaz/Monad;
       7: areturn

  public static <W, R, M> scalaz.Bind<?> ContsTBind(scalaz.Cobind<W>);
    Code:
       0: getstatic     #18                 // Field scalaz/ContT$.MODULE$:Lscalaz/ContT$;
       3: aload_0
       4: invokevirtual #108                // Method scalaz/ContT$.ContsTBind:(Lscalaz/Cobind;)Lscalaz/Bind;
       7: areturn

  public static <W, R, M, O> scalaz.Functor<?> IndexedContsTFunctorRight(scalaz.Functor<W>);
    Code:
       0: getstatic     #18                 // Field scalaz/ContT$.MODULE$:Lscalaz/ContT$;
       3: aload_0
       4: invokevirtual #113                // Method scalaz/ContT$.IndexedContsTFunctorRight:(Lscalaz/Functor;)Lscalaz/Functor;
       7: areturn
}
