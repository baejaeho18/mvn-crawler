Compiled from "Divisible.scala"
public final class scalaz.Divisible$$anon$2 implements scalaz.syntax.DivisibleSyntax<F> {
  private final scalaz.Divisible $outer;

  public <A> scalaz.syntax.DivisibleOps<F, A> ToDivisibleOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #20                 // InterfaceMethod scalaz/syntax/DivisibleSyntax.ToDivisibleOps$:(Lscalaz/syntax/DivisibleSyntax;Ljava/lang/Object;)Lscalaz/syntax/DivisibleOps;
       5: areturn

  public <A> scalaz.syntax.InvariantApplicativeOps<F, A> ToInvariantApplicativeOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #32                 // InterfaceMethod scalaz/syntax/InvariantApplicativeSyntax.ToInvariantApplicativeOps$:(Lscalaz/syntax/InvariantApplicativeSyntax;Ljava/lang/Object;)Lscalaz/syntax/InvariantApplicativeOps;
       5: areturn

  public <A> scalaz.syntax.DivideOps<F, A> ToDivideOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #41                 // InterfaceMethod scalaz/syntax/DivideSyntax.ToDivideOps$:(Lscalaz/syntax/DivideSyntax;Ljava/lang/Object;)Lscalaz/syntax/DivideOps;
       5: areturn

  public <A> scalaz.syntax.ContravariantOps<F, A> ToContravariantOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #50                 // InterfaceMethod scalaz/syntax/ContravariantSyntax.ToContravariantOps$:(Lscalaz/syntax/ContravariantSyntax;Ljava/lang/Object;)Lscalaz/syntax/ContravariantOps;
       5: areturn

  public <A> scalaz.syntax.InvariantFunctorOps<F, A> ToInvariantFunctorOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #59                 // InterfaceMethod scalaz/syntax/InvariantFunctorSyntax.ToInvariantFunctorOps$:(Lscalaz/syntax/InvariantFunctorSyntax;Ljava/lang/Object;)Lscalaz/syntax/InvariantFunctorOps;
       5: areturn

  public scalaz.Divisible<F> F();
    Code:
       0: aload_0
       1: getfield      #64                 // Field $outer:Lscalaz/Divisible;
       4: areturn

  public scalaz.InvariantFunctor F();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method F:()Lscalaz/Divisible;
       4: areturn

  public scalaz.Contravariant F();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method F:()Lscalaz/Divisible;
       4: areturn

  public scalaz.Divide F();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method F:()Lscalaz/Divisible;
       4: areturn

  public scalaz.InvariantApplicative F();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method F:()Lscalaz/Divisible;
       4: areturn

  public scalaz.Divisible$$anon$2(scalaz.Divisible);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #64                 // Field $outer:Lscalaz/Divisible;
      11: aload_0
      12: invokespecial #75                 // Method java/lang/Object."<init>":()V
      15: return
}
