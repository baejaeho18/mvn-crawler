Compiled from "Dequeue.scala"
public final class scalaz.DequeueInstances$$anon$3 implements scalaz.Traverse<scalaz.Dequeue>, scalaz.IsEmpty<scalaz.Dequeue>, scalaz.MonadPlus<scalaz.Dequeue>, scalaz.Alt<scalaz.Dequeue> {
  private scalaz.syntax.AltSyntax<scalaz.Dequeue> altSyntax;

  private scalaz.syntax.InvariantAltSyntax<scalaz.Dequeue> invariantAltSyntax;

  private scalaz.syntax.MonadPlusSyntax<scalaz.Dequeue> monadPlusSyntax;

  private scalaz.syntax.ApplicativePlusSyntax<scalaz.Dequeue> applicativePlusSyntax;

  private scalaz.syntax.MonadSyntax<scalaz.Dequeue> monadSyntax;

  private scalaz.syntax.BindSyntax<scalaz.Dequeue> bindSyntax;

  private scalaz.syntax.ApplicativeSyntax<scalaz.Dequeue> applicativeSyntax;

  private scalaz.syntax.InvariantApplicativeSyntax<scalaz.Dequeue> invariantApplicativeSyntax;

  private scalaz.syntax.ApplySyntax<scalaz.Dequeue> applySyntax;

  private scalaz.syntax.IsEmptySyntax<scalaz.Dequeue> isEmptySyntax;

  private scalaz.syntax.PlusEmptySyntax<scalaz.Dequeue> plusEmptySyntax;

  private scalaz.syntax.PlusSyntax<scalaz.Dequeue> plusSyntax;

  private scalaz.syntax.TraverseSyntax<scalaz.Dequeue> traverseSyntax;

  private scalaz.syntax.FoldableSyntax<scalaz.Dequeue> foldableSyntax;

  private scalaz.syntax.FunctorSyntax<scalaz.Dequeue> functorSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<scalaz.Dequeue> invariantFunctorSyntax;

  private final scalaz.DequeueInstances $outer;

  public java.lang.Object optional(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #148                // InterfaceMethod scalaz/Alt.optional$:(Lscalaz/Alt;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object altly1(scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #159                // InterfaceMethod scalaz/Alt.altly1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object altly2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #168                // InterfaceMethod scalaz/Alt.altly2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object altly3(scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #175                // InterfaceMethod scalaz/Alt.altly3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object altly4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #182                // InterfaceMethod scalaz/Alt.altly4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object either2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #188                // InterfaceMethod scalaz/Alt.either2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #194                // InterfaceMethod scalaz/Alt.altlying1$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #200                // InterfaceMethod scalaz/Alt.altlying2$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object altlying3(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #206                // InterfaceMethod scalaz/Alt.altlying3$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object altlying4(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #212                // InterfaceMethod scalaz/Alt.altlying4$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #219                // InterfaceMethod scalaz/Alt.xcoproduct1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xcoproduct2(scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #225                // InterfaceMethod scalaz/Alt.xcoproduct2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xcoproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #231                // InterfaceMethod scalaz/Alt.xcoproduct3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #237                // InterfaceMethod scalaz/Alt.xcoproduct4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public scalaz.Alt<scalaz.Dequeue>.AltLaw altLaw();
    Code:
       0: aload_0
       1: invokestatic  #244                // InterfaceMethod scalaz/Alt.altLaw$:(Lscalaz/Alt;)Lscalaz/Alt$AltLaw;
       4: areturn

  public final java.lang.Object xcoderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #252                // InterfaceMethod scalaz/InvariantAlt.xcoderiving1$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xcoderiving2(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #258                // InterfaceMethod scalaz/InvariantAlt.xcoderiving2$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xcoderiving3(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #264                // InterfaceMethod scalaz/InvariantAlt.xcoderiving3$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xcoderiving4(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #270                // InterfaceMethod scalaz/InvariantAlt.xcoderiving4$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object filter(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #276                // InterfaceMethod scalaz/MonadPlus.filter$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unite(java.lang.Object, scalaz.Foldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #284                // InterfaceMethod scalaz/MonadPlus.unite$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Foldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object lefts(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #292                // InterfaceMethod scalaz/MonadPlus.lefts$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object rights(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #297                // InterfaceMethod scalaz/MonadPlus.rights$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 separate(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #303                // InterfaceMethod scalaz/MonadPlus.separate$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Lscala/Tuple2;
       6: areturn

  public final java.lang.Object uniteU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #309                // InterfaceMethod scalaz/MonadPlus.uniteU$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.MonadPlus<?> product(scalaz.MonadPlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #318                // InterfaceMethod scalaz/MonadPlus.product$:(Lscalaz/MonadPlus;Lscalaz/MonadPlus;)Lscalaz/MonadPlus;
       5: areturn

  public scalaz.MonadPlus<scalaz.Dequeue>.MonadPlusLaw monadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #326                // InterfaceMethod scalaz/MonadPlus.monadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$MonadPlusLaw;
       4: areturn

  public scalaz.MonadPlus<scalaz.Dequeue>.StrongMonadPlusLaw strongMonadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #333                // InterfaceMethod scalaz/MonadPlus.strongMonadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$StrongMonadPlusLaw;
       4: areturn

  public <G> scalaz.ApplicativePlus<?> compose(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #342                // InterfaceMethod scalaz/ApplicativePlus.compose$:(Lscalaz/ApplicativePlus;Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public <G> scalaz.ApplicativePlus<?> product(scalaz.ApplicativePlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #348                // InterfaceMethod scalaz/ApplicativePlus.product$:(Lscalaz/ApplicativePlus;Lscalaz/ApplicativePlus;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object whileM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #357                // InterfaceMethod scalaz/Monad.whileM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object whileM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #363                // InterfaceMethod scalaz/Monad.whileM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object untilM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #368                // InterfaceMethod scalaz/Monad.untilM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object untilM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #372                // InterfaceMethod scalaz/Monad.untilM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateWhile(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #377                // InterfaceMethod scalaz/Monad.iterateWhile$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateUntil(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #381                // InterfaceMethod scalaz/Monad.iterateUntil$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Monad<?> product(scalaz.Monad<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #386                // InterfaceMethod scalaz/Monad.product$:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public scalaz.Monad<scalaz.Dequeue>.MonadLaw monadLaw();
    Code:
       0: aload_0
       1: invokestatic  #394                // InterfaceMethod scalaz/Monad.monadLaw$:(Lscalaz/Monad;)Lscalaz/Monad$MonadLaw;
       4: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #399                // InterfaceMethod scalaz/Bind.ap$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #406                // InterfaceMethod scalaz/Bind.apply2$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #413                // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #421                // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #426                // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Bind<?> product(scalaz.Bind<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #431                // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<scalaz.Dequeue>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #439                // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #446                // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #452                // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #461                // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #468                // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #473                // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #478                // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #484                // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #490                // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #497                // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #505                // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #510                // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.$eq$eq$greater$greater, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #518                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #525                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #530                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #537                // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #542                // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Applicative<?> product(scalaz.Applicative<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #546                // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scalaz.Dequeue> flip();
    Code:
       0: aload_0
       1: invokestatic  #551                // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #560                // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scalaz.Dequeue>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #568                // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #575                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #580                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #586                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #592                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #598                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #604                // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #611                // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #616                // InterfaceMethod scalaz/Apply.forever$:(Lscalaz/Apply;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <S$, A, B> scalaz.Maybe<scalaz.Dequeue<B>> unfoldrOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scalaz.Dequeue<A>, S$>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #625                // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G$> scalaz.Apply<?> compose(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #631                // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G$> scalaz.Apply<?> product(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #634                // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scalaz.Dequeue<A>, scalaz.Dequeue<B>> apF(scala.Function0<scalaz.Dequeue<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #641                // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #647                // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #654                // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #661                // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #668                // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #675                // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #682                // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #689                // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #695                // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #701                // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #707                // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #714                // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #721                // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #728                // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #736                // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #744                // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #752                // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #760                // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #766                // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #772                // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #778                // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #784                // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #789                // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #795                // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #801                // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #807                // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scalaz.Dequeue<A>, scalaz.Dequeue<B>, scalaz.Dequeue<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #814                // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scalaz.Dequeue<A>, scalaz.Dequeue<B>, scalaz.Dequeue<C>, scalaz.Dequeue<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #821                // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scalaz.Dequeue<A>, scalaz.Dequeue<B>, scalaz.Dequeue<C>, scalaz.Dequeue<D>, scalaz.Dequeue<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #828                // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R$> scala.Function5<scalaz.Dequeue<A>, scalaz.Dequeue<B>, scalaz.Dequeue<C>, scalaz.Dequeue<D>, scalaz.Dequeue<E>, scalaz.Dequeue<R$>> lift5(scala.Function5<A, B, C, D, E, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #835                // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R$> scala.Function6<scalaz.Dequeue<A>, scalaz.Dequeue<B>, scalaz.Dequeue<C>, scalaz.Dequeue<D>, scalaz.Dequeue<E>, scalaz.Dequeue<FF>, scalaz.Dequeue<R$>> lift6(scala.Function6<A, B, C, D, E, FF, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #842                // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G$, R$> scala.Function7<scalaz.Dequeue<A>, scalaz.Dequeue<B>, scalaz.Dequeue<C>, scalaz.Dequeue<D>, scalaz.Dequeue<E>, scalaz.Dequeue<FF>, scalaz.Dequeue<G$>, scalaz.Dequeue<R$>> lift7(scala.Function7<A, B, C, D, E, FF, G$, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #849                // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, R$> scala.Function8<scalaz.Dequeue<A>, scalaz.Dequeue<B>, scalaz.Dequeue<C>, scalaz.Dequeue<D>, scalaz.Dequeue<E>, scalaz.Dequeue<FF>, scalaz.Dequeue<G$>, scalaz.Dequeue<H>, scalaz.Dequeue<R$>> lift8(scala.Function8<A, B, C, D, E, FF, G$, H, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #856                // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, R$> scala.Function9<scalaz.Dequeue<A>, scalaz.Dequeue<B>, scalaz.Dequeue<C>, scalaz.Dequeue<D>, scalaz.Dequeue<E>, scalaz.Dequeue<FF>, scalaz.Dequeue<G$>, scalaz.Dequeue<H>, scalaz.Dequeue<I>, scalaz.Dequeue<R$>> lift9(scala.Function9<A, B, C, D, E, FF, G$, H, I, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #863                // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, R$> scala.Function10<scalaz.Dequeue<A>, scalaz.Dequeue<B>, scalaz.Dequeue<C>, scalaz.Dequeue<D>, scalaz.Dequeue<E>, scalaz.Dequeue<FF>, scalaz.Dequeue<G$>, scalaz.Dequeue<H>, scalaz.Dequeue<I>, scalaz.Dequeue<J>, scalaz.Dequeue<R$>> lift10(scala.Function10<A, B, C, D, E, FF, G$, H, I, J, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #870                // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, R$> scala.Function11<scalaz.Dequeue<A>, scalaz.Dequeue<B>, scalaz.Dequeue<C>, scalaz.Dequeue<D>, scalaz.Dequeue<E>, scalaz.Dequeue<FF>, scalaz.Dequeue<G$>, scalaz.Dequeue<H>, scalaz.Dequeue<I>, scalaz.Dequeue<J>, scalaz.Dequeue<K>, scalaz.Dequeue<R$>> lift11(scala.Function11<A, B, C, D, E, FF, G$, H, I, J, K, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #877                // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, L, R$> scala.Function12<scalaz.Dequeue<A>, scalaz.Dequeue<B>, scalaz.Dequeue<C>, scalaz.Dequeue<D>, scalaz.Dequeue<E>, scalaz.Dequeue<FF>, scalaz.Dequeue<G$>, scalaz.Dequeue<H>, scalaz.Dequeue<I>, scalaz.Dequeue<J>, scalaz.Dequeue<K>, scalaz.Dequeue<L>, scalaz.Dequeue<R$>> lift12(scala.Function12<A, B, C, D, E, FF, G$, H, I, J, K, L, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #884                // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #888                // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #892                // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #897                // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scalaz.Dequeue<A>, scalaz.Dequeue<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #905                // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scalaz.Dequeue>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #912                // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public scalaz.IsEmpty<scalaz.Dequeue>.IsEmptyLaw isEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #919                // InterfaceMethod scalaz/IsEmpty.isEmptyLaw$:(Lscalaz/IsEmpty;)Lscalaz/IsEmpty$IsEmptyLaw;
       4: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #924                // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #928                // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #933                // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #937                // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<scalaz.Dequeue<A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #945                // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<scalaz.Dequeue>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #952                // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S$, A> scalaz.Maybe<scalaz.Dequeue<A>> unfoldlPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<S$, scalaz.Dequeue<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #959                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S$, A> scalaz.Maybe<scalaz.Dequeue<A>> unfoldrPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scalaz.Dequeue<A>, S$>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #964                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #969                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.Dequeue<A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #977                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<scalaz.Dequeue>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #984                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #989                // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #997                // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1000               // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1007               // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<scalaz.Dequeue>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1015               // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<scalaz.Dequeue>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #1022               // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1027               // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1033               // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1040               // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1046               // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1053               // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1060               // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1067               // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1073               // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1079               // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1085               // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1092               // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1098               // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1103               // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1107               // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1113               // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1117               // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1121               // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1127               // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1131               // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1135               // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1139               // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<scalaz.Dequeue>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #1146               // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1152               // InterfaceMethod scalaz/Foldable.foldMap1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1157               // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1162               // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1164               // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1169               // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1177               // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1183               // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1190               // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1198               // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1204               // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1209               // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1214               // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1219               // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1224               // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1229               // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1235               // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1241               // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1247               // InterfaceMethod scalaz/Foldable.foldMapRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1253               // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1259               // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1265               // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1269               // InterfaceMethod scalaz/Foldable.foldMapLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1273               // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1277               // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1283               // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1287               // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1293               // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1297               // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1301               // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1307               // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1314               // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #1321               // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1327               // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1333               // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1339               // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1345               // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scala.collection.immutable.LazyList toLazyList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1351               // InterfaceMethod scalaz/Foldable.toLazyList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/LazyList;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1357               // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1363               // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1369               // InterfaceMethod scalaz/Foldable.all$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1373               // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1377               // InterfaceMethod scalaz/Foldable.any$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1381               // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1387               // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1393               // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1399               // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1403               // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1408               // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1413               // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1418               // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1423               // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1428               // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1433               // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1438               // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1442               // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1446               // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1450               // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1456               // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1462               // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1466               // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1473               // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/$less$colon$less;)J
       6: lreturn

  public boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1480               // InterfaceMethod scalaz/Foldable.empty$:(Lscalaz/Foldable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1487               // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1494               // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1500               // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1507               // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1513               // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1517               // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1523               // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1529               // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1534               // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1540               // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scalaz.Dequeue>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #1547               // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1553               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1558               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.Dequeue<A>, scalaz.Dequeue<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1565               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1570               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1575               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1579               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1584               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1588               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1592               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1598               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G$> scalaz.Functor<?> compose(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1604               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G$> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1612               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G$> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1618               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G$> scalaz.Functor<?> product(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1621               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1628               // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<scalaz.Dequeue>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1636               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1643               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1651               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scalaz.Dequeue>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1659               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.AltSyntax<scalaz.Dequeue> altSyntax();
    Code:
       0: aload_0
       1: getfield      #1663               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       4: areturn

  public void scalaz$Alt$_setter_$altSyntax_$eq(scalaz.syntax.AltSyntax<scalaz.Dequeue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1663               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       5: return

  public scalaz.syntax.InvariantAltSyntax<scalaz.Dequeue> invariantAltSyntax();
    Code:
       0: aload_0
       1: getfield      #1671               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       4: areturn

  public void scalaz$InvariantAlt$_setter_$invariantAltSyntax_$eq(scalaz.syntax.InvariantAltSyntax<scalaz.Dequeue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1671               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       5: return

  public scalaz.syntax.MonadPlusSyntax<scalaz.Dequeue> monadPlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1678               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       4: areturn

  public void scalaz$MonadPlus$_setter_$monadPlusSyntax_$eq(scalaz.syntax.MonadPlusSyntax<scalaz.Dequeue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1678               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       5: return

  public scalaz.syntax.ApplicativePlusSyntax<scalaz.Dequeue> applicativePlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1685               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       4: areturn

  public void scalaz$ApplicativePlus$_setter_$applicativePlusSyntax_$eq(scalaz.syntax.ApplicativePlusSyntax<scalaz.Dequeue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1685               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       5: return

  public scalaz.syntax.MonadSyntax<scalaz.Dequeue> monadSyntax();
    Code:
       0: aload_0
       1: getfield      #1692               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       4: areturn

  public void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<scalaz.Dequeue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1692               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       5: return

  public scalaz.syntax.BindSyntax<scalaz.Dequeue> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #1699               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<scalaz.Dequeue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1699               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scalaz.Dequeue> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1706               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scalaz.Dequeue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1706               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scalaz.Dequeue> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1713               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scalaz.Dequeue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1713               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scalaz.Dequeue> applySyntax();
    Code:
       0: aload_0
       1: getfield      #1720               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scalaz.Dequeue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1720               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.IsEmptySyntax<scalaz.Dequeue> isEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1727               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       4: areturn

  public void scalaz$IsEmpty$_setter_$isEmptySyntax_$eq(scalaz.syntax.IsEmptySyntax<scalaz.Dequeue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1727               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       5: return

  public scalaz.syntax.PlusEmptySyntax<scalaz.Dequeue> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1734               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<scalaz.Dequeue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1734               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<scalaz.Dequeue> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #1741               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<scalaz.Dequeue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1741               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.syntax.TraverseSyntax<scalaz.Dequeue> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #1748               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<scalaz.Dequeue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1748               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scalaz.Dequeue> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #1755               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scalaz.Dequeue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1755               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scalaz.Dequeue> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #1762               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scalaz.Dequeue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1762               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scalaz.Dequeue> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #1769               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scalaz.Dequeue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1769               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A, B> B foldRight(scalaz.Dequeue<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1780,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: astore        4
       9: ifnonnull     14
      12: aconst_null
      13: athrow
      14: aload_1
      15: instanceof    #1782               // class scalaz/EmptyDequeue
      18: ifeq          24
      21: aload         4
      23: areturn
      24: aload_1
      25: instanceof    #1784               // class scalaz/SingletonDequeue
      28: ifeq          56
      31: aload_1
      32: checkcast     #1784               // class scalaz/SingletonDequeue
      35: invokevirtual #1787               // Method scalaz/SingletonDequeue.single:()Ljava/lang/Object;
      38: astore        5
      40: aload_3
      41: aload         5
      43: aload         4
      45: invokedynamic #1803,  0           // InvokeDynamic #0:apply:(Ljava/lang/Object;)Lscala/Function0;
      50: invokeinterface #1807,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: areturn
      56: aload_1
      57: instanceof    #1809               // class scalaz/FullDequeue
      60: ifeq          362
      63: aload_1
      64: checkcast     #1809               // class scalaz/FullDequeue
      67: astore        6
      69: aload         6
      71: invokevirtual #1813               // Method scalaz/FullDequeue.front:()Lscalaz/NonEmptyList;
      74: astore        7
      76: aload         6
      78: invokevirtual #1816               // Method scalaz/FullDequeue.back:()Lscalaz/NonEmptyList;
      81: astore        8
      83: aload         8
      85: invokevirtual #1822               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      88: aload         8
      90: invokevirtual #1825               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      93: astore        22
      95: aload_3
      96: aload         22
      98: aload         4
     100: invokedynamic #1803,  0           // InvokeDynamic #0:apply:(Ljava/lang/Object;)Lscala/Function0;
     105: invokeinterface #1807,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     110: astore        12
     112: dup
     113: ifnonnull     118
     116: aconst_null
     117: athrow
     118: astore        11
     120: aload         11
     122: aload         12
     124: astore        14
     126: astore        13
     128: aload         13
     130: instanceof    #1827               // class scalaz/INil
     133: ifeq          141
     136: aload         14
     138: goto          200
     141: aload         13
     143: instanceof    #1829               // class scalaz/ICons
     146: ifeq          190
     149: aload         13
     151: checkcast     #1829               // class scalaz/ICons
     154: astore        15
     156: aload         15
     158: invokevirtual #1830               // Method scalaz/ICons.head:()Ljava/lang/Object;
     161: astore        16
     163: aload         15
     165: invokevirtual #1831               // Method scalaz/ICons.tail:()Lscalaz/IList;
     168: aload_3
     169: aload         16
     171: aload         14
     173: invokedynamic #1803,  0           // InvokeDynamic #0:apply:(Ljava/lang/Object;)Lscala/Function0;
     178: invokeinterface #1807,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     183: astore        14
     185: astore        13
     187: goto          128
     190: new           #1833               // class scala/MatchError
     193: dup
     194: aload         13
     196: invokespecial #1837               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     199: athrow
     200: aconst_null
     201: astore        13
     203: aconst_null
     204: astore        14
     206: aconst_null
     207: astore        15
     209: aconst_null
     210: astore        16
     212: aconst_null
     213: astore        11
     215: aconst_null
     216: astore        12
     218: astore        9
     220: aload         7
     222: invokevirtual #1822               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
     225: dup
     226: ifnonnull     231
     229: aconst_null
     230: athrow
     231: astore        17
     233: aload         17
     235: invokevirtual #1841               // Method scalaz/IList.reverse:()Lscalaz/IList;
     238: dup
     239: ifnonnull     244
     242: aconst_null
     243: athrow
     244: aload         9
     246: astore        19
     248: astore        18
     250: aload         18
     252: instanceof    #1827               // class scalaz/INil
     255: ifeq          263
     258: aload         19
     260: goto          322
     263: aload         18
     265: instanceof    #1829               // class scalaz/ICons
     268: ifeq          312
     271: aload         18
     273: checkcast     #1829               // class scalaz/ICons
     276: astore        20
     278: aload         20
     280: invokevirtual #1830               // Method scalaz/ICons.head:()Ljava/lang/Object;
     283: astore        21
     285: aload         20
     287: invokevirtual #1831               // Method scalaz/ICons.tail:()Lscalaz/IList;
     290: aload_3
     291: aload         21
     293: aload         19
     295: invokedynamic #1803,  0           // InvokeDynamic #0:apply:(Ljava/lang/Object;)Lscala/Function0;
     300: invokeinterface #1807,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     305: astore        19
     307: astore        18
     309: goto          250
     312: new           #1833               // class scala/MatchError
     315: dup
     316: aload         18
     318: invokespecial #1837               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     321: athrow
     322: aconst_null
     323: astore        18
     325: aconst_null
     326: astore        19
     328: aconst_null
     329: astore        20
     331: aconst_null
     332: astore        21
     334: aconst_null
     335: astore        17
     337: astore        10
     339: aload         7
     341: invokevirtual #1825               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
     344: astore        22
     346: aload_3
     347: aload         22
     349: aload         10
     351: invokedynamic #1803,  0           // InvokeDynamic #0:apply:(Ljava/lang/Object;)Lscala/Function0;
     356: invokeinterface #1807,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     361: areturn
     362: new           #1833               // class scala/MatchError
     365: dup
     366: aload_1
     367: invokespecial #1837               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     370: athrow

  public <A, B> B foldLeft(scalaz.Dequeue<A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #1782               // class scalaz/EmptyDequeue
      10: ifeq          15
      13: aload_2
      14: areturn
      15: aload_1
      16: instanceof    #1784               // class scalaz/SingletonDequeue
      19: ifeq          41
      22: aload_1
      23: checkcast     #1784               // class scalaz/SingletonDequeue
      26: invokevirtual #1787               // Method scalaz/SingletonDequeue.single:()Ljava/lang/Object;
      29: astore        4
      31: aload_3
      32: aload_2
      33: aload         4
      35: invokeinterface #1807,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: areturn
      41: aload_1
      42: instanceof    #1809               // class scalaz/FullDequeue
      45: ifeq          318
      48: aload_1
      49: checkcast     #1809               // class scalaz/FullDequeue
      52: astore        5
      54: aload         5
      56: invokevirtual #1813               // Method scalaz/FullDequeue.front:()Lscalaz/NonEmptyList;
      59: astore        6
      61: aload         5
      63: invokevirtual #1816               // Method scalaz/FullDequeue.back:()Lscalaz/NonEmptyList;
      66: astore        7
      68: aload         6
      70: invokevirtual #1822               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      73: aload_3
      74: aload_2
      75: aload         6
      77: invokevirtual #1825               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      80: invokeinterface #1807,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: astore        16
      87: dup
      88: ifnonnull     93
      91: aconst_null
      92: athrow
      93: astore        15
      95: aload         15
      97: aload         16
      99: astore        18
     101: astore        17
     103: aload         17
     105: instanceof    #1827               // class scalaz/INil
     108: ifeq          116
     111: aload         18
     113: goto          170
     116: aload         17
     118: instanceof    #1829               // class scalaz/ICons
     121: ifeq          160
     124: aload         17
     126: checkcast     #1829               // class scalaz/ICons
     129: astore        19
     131: aload         19
     133: invokevirtual #1830               // Method scalaz/ICons.head:()Ljava/lang/Object;
     136: astore        20
     138: aload         19
     140: invokevirtual #1831               // Method scalaz/ICons.tail:()Lscalaz/IList;
     143: aload_3
     144: aload         18
     146: aload         20
     148: invokeinterface #1807,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     153: astore        18
     155: astore        17
     157: goto          103
     160: new           #1833               // class scala/MatchError
     163: dup
     164: aload         17
     166: invokespecial #1837               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     169: athrow
     170: aconst_null
     171: astore        17
     173: aconst_null
     174: astore        18
     176: aconst_null
     177: astore        19
     179: aconst_null
     180: astore        20
     182: aconst_null
     183: astore        15
     185: aconst_null
     186: astore        16
     188: astore        8
     190: aload         7
     192: invokevirtual #1822               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
     195: dup
     196: ifnonnull     201
     199: aconst_null
     200: athrow
     201: astore        10
     203: aload         10
     205: invokevirtual #1841               // Method scalaz/IList.reverse:()Lscalaz/IList;
     208: dup
     209: ifnonnull     214
     212: aconst_null
     213: athrow
     214: aload         8
     216: astore        12
     218: astore        11
     220: aload         11
     222: instanceof    #1827               // class scalaz/INil
     225: ifeq          233
     228: aload         12
     230: goto          287
     233: aload         11
     235: instanceof    #1829               // class scalaz/ICons
     238: ifeq          277
     241: aload         11
     243: checkcast     #1829               // class scalaz/ICons
     246: astore        13
     248: aload         13
     250: invokevirtual #1830               // Method scalaz/ICons.head:()Ljava/lang/Object;
     253: astore        14
     255: aload         13
     257: invokevirtual #1831               // Method scalaz/ICons.tail:()Lscalaz/IList;
     260: aload_3
     261: aload         12
     263: aload         14
     265: invokeinterface #1807,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     270: astore        12
     272: astore        11
     274: goto          220
     277: new           #1833               // class scala/MatchError
     280: dup
     281: aload         11
     283: invokespecial #1837               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     286: athrow
     287: aconst_null
     288: astore        11
     290: aconst_null
     291: astore        12
     293: aconst_null
     294: astore        13
     296: aconst_null
     297: astore        14
     299: aconst_null
     300: astore        10
     302: astore        9
     304: aload_3
     305: aload         9
     307: aload         7
     309: invokevirtual #1825               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
     312: invokeinterface #1807,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     317: areturn
     318: new           #1833               // class scala/MatchError
     321: dup
     322: aload_1
     323: invokespecial #1837               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     326: athrow

  public <A, B> B foldMap(scalaz.Dequeue<A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_1
       1: aload_3
       2: invokeinterface #1885,  1         // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
       7: astore        4
       9: ifnonnull     14
      12: aconst_null
      13: athrow
      14: aload_1
      15: instanceof    #1782               // class scalaz/EmptyDequeue
      18: ifeq          24
      21: aload         4
      23: areturn
      24: aload_1
      25: instanceof    #1784               // class scalaz/SingletonDequeue
      28: ifeq          57
      31: aload_1
      32: checkcast     #1784               // class scalaz/SingletonDequeue
      35: invokevirtual #1787               // Method scalaz/SingletonDequeue.single:()Ljava/lang/Object;
      38: astore        5
      40: aload_3
      41: aload         4
      43: aload_2
      44: aload         5
      46: invokedynamic #1892,  0           // InvokeDynamic #1:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      51: invokeinterface #1895,  3         // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      56: areturn
      57: aload_1
      58: instanceof    #1809               // class scalaz/FullDequeue
      61: ifeq          370
      64: aload_1
      65: checkcast     #1809               // class scalaz/FullDequeue
      68: astore        6
      70: aload         6
      72: invokevirtual #1813               // Method scalaz/FullDequeue.front:()Lscalaz/NonEmptyList;
      75: astore        7
      77: aload         6
      79: invokevirtual #1816               // Method scalaz/FullDequeue.back:()Lscalaz/NonEmptyList;
      82: astore        8
      84: aload         7
      86: invokevirtual #1822               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      89: aload         7
      91: invokevirtual #1825               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      94: astore        22
      96: aload_3
      97: aload         4
      99: aload_2
     100: aload         22
     102: invokedynamic #1892,  0           // InvokeDynamic #1:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
     107: invokeinterface #1895,  3         // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     112: astore        17
     114: dup
     115: ifnonnull     120
     118: aconst_null
     119: athrow
     120: astore        16
     122: aload         16
     124: aload         17
     126: astore        19
     128: astore        18
     130: aload         18
     132: instanceof    #1827               // class scalaz/INil
     135: ifeq          143
     138: aload         19
     140: goto          206
     143: aload         18
     145: instanceof    #1829               // class scalaz/ICons
     148: ifeq          196
     151: aload         18
     153: checkcast     #1829               // class scalaz/ICons
     156: astore        20
     158: aload         20
     160: invokevirtual #1830               // Method scalaz/ICons.head:()Ljava/lang/Object;
     163: astore        21
     165: aload         20
     167: invokevirtual #1831               // Method scalaz/ICons.tail:()Lscalaz/IList;
     170: aconst_null
     171: astore        22
     173: aload_3
     174: aload         19
     176: aload_2
     177: aload         21
     179: invokedynamic #1892,  0           // InvokeDynamic #1:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
     184: invokeinterface #1895,  3         // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     189: astore        19
     191: astore        18
     193: goto          130
     196: new           #1833               // class scala/MatchError
     199: dup
     200: aload         18
     202: invokespecial #1837               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     205: athrow
     206: aconst_null
     207: astore        18
     209: aconst_null
     210: astore        19
     212: aconst_null
     213: astore        20
     215: aconst_null
     216: astore        21
     218: aconst_null
     219: astore        16
     221: aconst_null
     222: astore        17
     224: astore        9
     226: aload         8
     228: invokevirtual #1822               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
     231: dup
     232: ifnonnull     237
     235: aconst_null
     236: athrow
     237: astore        11
     239: aload         11
     241: invokevirtual #1841               // Method scalaz/IList.reverse:()Lscalaz/IList;
     244: dup
     245: ifnonnull     250
     248: aconst_null
     249: athrow
     250: aload         9
     252: astore        13
     254: astore        12
     256: aload         12
     258: instanceof    #1827               // class scalaz/INil
     261: ifeq          269
     264: aload         13
     266: goto          329
     269: aload         12
     271: instanceof    #1829               // class scalaz/ICons
     274: ifeq          319
     277: aload         12
     279: checkcast     #1829               // class scalaz/ICons
     282: astore        14
     284: aload         14
     286: invokevirtual #1830               // Method scalaz/ICons.head:()Ljava/lang/Object;
     289: astore        15
     291: aload         14
     293: invokevirtual #1831               // Method scalaz/ICons.tail:()Lscalaz/IList;
     296: aload_3
     297: aload         13
     299: aload_2
     300: aload         15
     302: invokedynamic #1892,  0           // InvokeDynamic #1:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
     307: invokeinterface #1895,  3         // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     312: astore        13
     314: astore        12
     316: goto          256
     319: new           #1833               // class scala/MatchError
     322: dup
     323: aload         12
     325: invokespecial #1837               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     328: athrow
     329: aconst_null
     330: astore        12
     332: aconst_null
     333: astore        13
     335: aconst_null
     336: astore        14
     338: aconst_null
     339: astore        15
     341: aconst_null
     342: astore        11
     344: astore        10
     346: aload         8
     348: invokevirtual #1825               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
     351: astore        22
     353: aload_3
     354: aload         10
     356: aload_2
     357: aload         22
     359: invokedynamic #1892,  0           // InvokeDynamic #1:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
     364: invokeinterface #1895,  3         // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     369: areturn
     370: new           #1833               // class scala/MatchError
     373: dup
     374: aload_1
     375: invokespecial #1837               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     378: athrow

  public <A> scalaz.Dequeue<A> empty();
    Code:
       0: getstatic     #1906               // Field scalaz/Dequeue$.MODULE$:Lscalaz/Dequeue$;
       3: pop
       4: getstatic     #1911               // Field scalaz/EmptyDequeue$.MODULE$:Lscalaz/EmptyDequeue$;
       7: invokevirtual #1913               // Method scalaz/EmptyDequeue$.apply:()Lscalaz/Dequeue;
      10: areturn

  public <A> scalaz.Dequeue<A> plus(scalaz.Dequeue<A>, scala.Function0<scalaz.Dequeue<A>>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1780,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: checkcast     #1860               // class scalaz/Dequeue
      10: invokevirtual #1920               // Method scalaz/Dequeue.$plus$plus:(Lscalaz/Dequeue;)Lscalaz/Dequeue;
      13: areturn

  public <A> scalaz.Dequeue<A> alt(scala.Function0<scalaz.Dequeue<A>>, scala.Function0<scalaz.Dequeue<A>>);
    Code:
       0: aload_1
       1: invokeinterface #1780,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #1860               // class scalaz/Dequeue
       9: aload_2
      10: invokeinterface #1780,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      15: checkcast     #1860               // class scalaz/Dequeue
      18: invokevirtual #1920               // Method scalaz/Dequeue.$plus$plus:(Lscalaz/Dequeue;)Lscalaz/Dequeue;
      21: areturn

  public <A> boolean isEmpty(scalaz.Dequeue<A>);
    Code:
       0: aload_1
       1: invokevirtual #1929               // Method scalaz/Dequeue.isEmpty:()Z
       4: ireturn

  public <A> int length(scalaz.Dequeue<A>);
    Code:
       0: aload_1
       1: invokevirtual #1936               // Method scalaz/Dequeue.size:()I
       4: ireturn

  public <A, B> scalaz.Dequeue<B> map(scalaz.Dequeue<A>, scala.Function1<A, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #1782               // class scalaz/EmptyDequeue
      10: ifeq          20
      13: getstatic     #1911               // Field scalaz/EmptyDequeue$.MODULE$:Lscalaz/EmptyDequeue$;
      16: invokevirtual #1913               // Method scalaz/EmptyDequeue$.apply:()Lscalaz/Dequeue;
      19: areturn
      20: aload_1
      21: instanceof    #1784               // class scalaz/SingletonDequeue
      24: ifeq          50
      27: aload_1
      28: checkcast     #1784               // class scalaz/SingletonDequeue
      31: invokevirtual #1787               // Method scalaz/SingletonDequeue.single:()Ljava/lang/Object;
      34: astore_3
      35: new           #1784               // class scalaz/SingletonDequeue
      38: dup
      39: aload_2
      40: aload_3
      41: invokeinterface #1940,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      46: invokespecial #1941               // Method scalaz/SingletonDequeue."<init>":(Ljava/lang/Object;)V
      49: areturn
      50: aload_1
      51: instanceof    #1809               // class scalaz/FullDequeue
      54: ifeq          148
      57: aload_1
      58: checkcast     #1809               // class scalaz/FullDequeue
      61: astore        4
      63: aload         4
      65: invokevirtual #1813               // Method scalaz/FullDequeue.front:()Lscalaz/NonEmptyList;
      68: astore        5
      70: aload         4
      72: invokevirtual #1944               // Method scalaz/FullDequeue.fsize:()I
      75: istore        6
      77: aload         4
      79: invokevirtual #1816               // Method scalaz/FullDequeue.back:()Lscalaz/NonEmptyList;
      82: astore        7
      84: aload         4
      86: invokevirtual #1947               // Method scalaz/FullDequeue.backSize:()I
      89: istore        8
      91: getstatic     #1952               // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
      94: pop
      95: getstatic     #1957               // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      98: invokevirtual #1961               // Method scalaz/NonEmptyList$.nonEmptyList:()Lscalaz/Traverse1;
     101: astore        10
     103: aload         10
     105: aconst_null
     106: astore        10
     108: astore        9
     110: new           #1809               // class scalaz/FullDequeue
     113: dup
     114: aload         9
     116: aload         5
     118: aload_2
     119: invokeinterface #1963,  3         // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     124: checkcast     #1818               // class scalaz/NonEmptyList
     127: iload         6
     129: aload         9
     131: aload         7
     133: aload_2
     134: invokeinterface #1963,  3         // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     139: checkcast     #1818               // class scalaz/NonEmptyList
     142: iload         8
     144: invokespecial #1966               // Method scalaz/FullDequeue."<init>":(Lscalaz/NonEmptyList;ILscalaz/NonEmptyList;I)V
     147: areturn
     148: new           #1833               // class scala/MatchError
     151: dup
     152: aload_1
     153: invokespecial #1837               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     156: athrow

  public <A> scalaz.Dequeue<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #1906               // Field scalaz/Dequeue$.MODULE$:Lscalaz/Dequeue$;
       3: getstatic     #1981               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       6: iconst_1
       7: anewarray     #5                  // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: invokeinterface #1780,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      18: aastore
      19: invokevirtual #1985               // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      22: invokevirtual #1988               // Method scalaz/Dequeue$.apply:(Lscala/collection/immutable/Seq;)Lscalaz/Dequeue;
      25: areturn

  public <A, B> scalaz.Dequeue<B> bind(scalaz.Dequeue<A>, scala.Function1<A, scalaz.Dequeue<B>>);
    Code:
       0: aload_0
       1: getfield      #1992               // Field $outer:Lscalaz/DequeueInstances;
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: new           #41                 // class scalaz/DequeueInstances$$anon$2
      12: dup
      13: aconst_null
      14: invokespecial #1995               // Method scalaz/DequeueInstances$$anon$2."<init>":(Lscalaz/DequeueInstances;)V
      17: astore_3
      18: aload_1
      19: aload_3
      20: invokevirtual #1997               // Method scalaz/DequeueInstances$$anon$2.zero:()Lscalaz/Dequeue;
      23: astore        4
      25: ifnonnull     30
      28: aconst_null
      29: athrow
      30: aload_1
      31: instanceof    #1782               // class scalaz/EmptyDequeue
      34: ifeq          40
      37: aload         4
      39: areturn
      40: aload_1
      41: instanceof    #1784               // class scalaz/SingletonDequeue
      44: ifeq          73
      47: aload_1
      48: checkcast     #1784               // class scalaz/SingletonDequeue
      51: invokevirtual #1787               // Method scalaz/SingletonDequeue.single:()Ljava/lang/Object;
      54: astore        5
      56: aload         4
      58: aload_2
      59: aload         5
      61: invokeinterface #1940,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      66: checkcast     #1860               // class scalaz/Dequeue
      69: invokevirtual #1920               // Method scalaz/Dequeue.$plus$plus:(Lscalaz/Dequeue;)Lscalaz/Dequeue;
      72: areturn
      73: aload_1
      74: instanceof    #1809               // class scalaz/FullDequeue
      77: ifeq          386
      80: aload_1
      81: checkcast     #1809               // class scalaz/FullDequeue
      84: astore        6
      86: aload         6
      88: invokevirtual #1813               // Method scalaz/FullDequeue.front:()Lscalaz/NonEmptyList;
      91: astore        7
      93: aload         6
      95: invokevirtual #1816               // Method scalaz/FullDequeue.back:()Lscalaz/NonEmptyList;
      98: astore        8
     100: aload         7
     102: invokevirtual #1822               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
     105: aload         7
     107: invokevirtual #1825               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
     110: astore        22
     112: aload         4
     114: aload_2
     115: aload         22
     117: invokeinterface #1940,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     122: checkcast     #1860               // class scalaz/Dequeue
     125: invokevirtual #1920               // Method scalaz/Dequeue.$plus$plus:(Lscalaz/Dequeue;)Lscalaz/Dequeue;
     128: astore        17
     130: dup
     131: ifnonnull     136
     134: aconst_null
     135: athrow
     136: astore        16
     138: aload         16
     140: aload         17
     142: astore        19
     144: astore        18
     146: aload         18
     148: instanceof    #1827               // class scalaz/INil
     151: ifeq          159
     154: aload         19
     156: goto          222
     159: aload         18
     161: instanceof    #1829               // class scalaz/ICons
     164: ifeq          212
     167: aload         18
     169: checkcast     #1829               // class scalaz/ICons
     172: astore        20
     174: aload         20
     176: invokevirtual #1830               // Method scalaz/ICons.head:()Ljava/lang/Object;
     179: astore        21
     181: aload         20
     183: invokevirtual #1831               // Method scalaz/ICons.tail:()Lscalaz/IList;
     186: aconst_null
     187: astore        22
     189: aload         19
     191: aload_2
     192: aload         21
     194: invokeinterface #1940,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     199: checkcast     #1860               // class scalaz/Dequeue
     202: invokevirtual #1920               // Method scalaz/Dequeue.$plus$plus:(Lscalaz/Dequeue;)Lscalaz/Dequeue;
     205: astore        19
     207: astore        18
     209: goto          146
     212: new           #1833               // class scala/MatchError
     215: dup
     216: aload         18
     218: invokespecial #1837               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     221: athrow
     222: aconst_null
     223: astore        18
     225: aconst_null
     226: astore        19
     228: aconst_null
     229: astore        20
     231: aconst_null
     232: astore        21
     234: aconst_null
     235: astore        16
     237: aconst_null
     238: astore        17
     240: astore        9
     242: aload         8
     244: invokevirtual #1822               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
     247: dup
     248: ifnonnull     253
     251: aconst_null
     252: athrow
     253: astore        11
     255: aload         11
     257: invokevirtual #1841               // Method scalaz/IList.reverse:()Lscalaz/IList;
     260: dup
     261: ifnonnull     266
     264: aconst_null
     265: athrow
     266: aload         9
     268: astore        13
     270: astore        12
     272: aload         12
     274: instanceof    #1827               // class scalaz/INil
     277: ifeq          285
     280: aload         13
     282: goto          345
     285: aload         12
     287: instanceof    #1829               // class scalaz/ICons
     290: ifeq          335
     293: aload         12
     295: checkcast     #1829               // class scalaz/ICons
     298: astore        14
     300: aload         14
     302: invokevirtual #1830               // Method scalaz/ICons.head:()Ljava/lang/Object;
     305: astore        15
     307: aload         14
     309: invokevirtual #1831               // Method scalaz/ICons.tail:()Lscalaz/IList;
     312: aload         13
     314: aload_2
     315: aload         15
     317: invokeinterface #1940,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     322: checkcast     #1860               // class scalaz/Dequeue
     325: invokevirtual #1920               // Method scalaz/Dequeue.$plus$plus:(Lscalaz/Dequeue;)Lscalaz/Dequeue;
     328: astore        13
     330: astore        12
     332: goto          272
     335: new           #1833               // class scala/MatchError
     338: dup
     339: aload         12
     341: invokespecial #1837               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     344: athrow
     345: aconst_null
     346: astore        12
     348: aconst_null
     349: astore        13
     351: aconst_null
     352: astore        14
     354: aconst_null
     355: astore        15
     357: aconst_null
     358: astore        11
     360: astore        10
     362: aload         8
     364: invokevirtual #1825               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
     367: astore        22
     369: aload         10
     371: aload_2
     372: aload         22
     374: invokeinterface #1940,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     379: checkcast     #1860               // class scalaz/Dequeue
     382: invokevirtual #1920               // Method scalaz/Dequeue.$plus$plus:(Lscalaz/Dequeue;)Lscalaz/Dequeue;
     385: areturn
     386: new           #1833               // class scala/MatchError
     389: dup
     390: aload_1
     391: invokespecial #1837               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     394: athrow

  public <F, A, B> F traverseImpl(scalaz.Dequeue<A>, scala.Function1<A, F>, scalaz.Applicative<F>);
    Code:
       0: aload_1
       1: aload_3
       2: invokedynamic #2025,  0           // InvokeDynamic #2:apply:()Lscala/Function0;
       7: invokeinterface #2027,  2         // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      12: astore        4
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: aload_1
      20: instanceof    #1782               // class scalaz/EmptyDequeue
      23: ifeq          29
      26: aload         4
      28: areturn
      29: aload_1
      30: instanceof    #1784               // class scalaz/SingletonDequeue
      33: ifeq          72
      36: aload_1
      37: checkcast     #1784               // class scalaz/SingletonDequeue
      40: invokevirtual #1787               // Method scalaz/SingletonDequeue.single:()Ljava/lang/Object;
      43: astore        5
      45: aload_3
      46: aload_2
      47: aload         5
      49: invokedynamic #2032,  0           // InvokeDynamic #3:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      54: aload         4
      56: invokedynamic #2037,  0           // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
      61: invokedynamic #2047,  0           // InvokeDynamic #5:apply:()Lscala/Function2;
      66: invokeinterface #2049,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      71: areturn
      72: aload_1
      73: instanceof    #1809               // class scalaz/FullDequeue
      76: ifeq          422
      79: aload_1
      80: checkcast     #1809               // class scalaz/FullDequeue
      83: astore        6
      85: aload         6
      87: invokevirtual #1813               // Method scalaz/FullDequeue.front:()Lscalaz/NonEmptyList;
      90: astore        7
      92: aload         6
      94: invokevirtual #1816               // Method scalaz/FullDequeue.back:()Lscalaz/NonEmptyList;
      97: astore        8
      99: aload         8
     101: invokevirtual #1822               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
     104: aload         8
     106: invokevirtual #1825               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
     109: astore        22
     111: aload_3
     112: aload_2
     113: aload         22
     115: invokedynamic #2032,  0           // InvokeDynamic #3:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
     120: aload         4
     122: invokedynamic #2037,  0           // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
     127: invokedynamic #2047,  0           // InvokeDynamic #5:apply:()Lscala/Function2;
     132: invokeinterface #2049,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     137: astore        12
     139: dup
     140: ifnonnull     145
     143: aconst_null
     144: athrow
     145: astore        11
     147: aload         11
     149: aload         12
     151: astore        14
     153: astore        13
     155: aload         13
     157: instanceof    #1827               // class scalaz/INil
     160: ifeq          168
     163: aload         14
     165: goto          238
     168: aload         13
     170: instanceof    #1829               // class scalaz/ICons
     173: ifeq          228
     176: aload         13
     178: checkcast     #1829               // class scalaz/ICons
     181: astore        15
     183: aload         15
     185: invokevirtual #1830               // Method scalaz/ICons.head:()Ljava/lang/Object;
     188: astore        16
     190: aload         15
     192: invokevirtual #1831               // Method scalaz/ICons.tail:()Lscalaz/IList;
     195: aload_3
     196: aload_2
     197: aload         16
     199: invokedynamic #2032,  0           // InvokeDynamic #3:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
     204: aload         14
     206: invokedynamic #2037,  0           // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
     211: invokedynamic #2047,  0           // InvokeDynamic #5:apply:()Lscala/Function2;
     216: invokeinterface #2049,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     221: astore        14
     223: astore        13
     225: goto          155
     228: new           #1833               // class scala/MatchError
     231: dup
     232: aload         13
     234: invokespecial #1837               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     237: athrow
     238: aconst_null
     239: astore        13
     241: aconst_null
     242: astore        14
     244: aconst_null
     245: astore        15
     247: aconst_null
     248: astore        16
     250: aconst_null
     251: astore        11
     253: aconst_null
     254: astore        12
     256: astore        9
     258: aload         7
     260: invokevirtual #1822               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
     263: dup
     264: ifnonnull     269
     267: aconst_null
     268: athrow
     269: astore        17
     271: aload         17
     273: invokevirtual #1841               // Method scalaz/IList.reverse:()Lscalaz/IList;
     276: dup
     277: ifnonnull     282
     280: aconst_null
     281: athrow
     282: aload         9
     284: astore        19
     286: astore        18
     288: aload         18
     290: instanceof    #1827               // class scalaz/INil
     293: ifeq          301
     296: aload         19
     298: goto          371
     301: aload         18
     303: instanceof    #1829               // class scalaz/ICons
     306: ifeq          361
     309: aload         18
     311: checkcast     #1829               // class scalaz/ICons
     314: astore        20
     316: aload         20
     318: invokevirtual #1830               // Method scalaz/ICons.head:()Ljava/lang/Object;
     321: astore        21
     323: aload         20
     325: invokevirtual #1831               // Method scalaz/ICons.tail:()Lscalaz/IList;
     328: aload_3
     329: aload_2
     330: aload         21
     332: invokedynamic #2032,  0           // InvokeDynamic #3:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
     337: aload         19
     339: invokedynamic #2037,  0           // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
     344: invokedynamic #2047,  0           // InvokeDynamic #5:apply:()Lscala/Function2;
     349: invokeinterface #2049,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     354: astore        19
     356: astore        18
     358: goto          288
     361: new           #1833               // class scala/MatchError
     364: dup
     365: aload         18
     367: invokespecial #1837               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     370: athrow
     371: aconst_null
     372: astore        18
     374: aconst_null
     375: astore        19
     377: aconst_null
     378: astore        20
     380: aconst_null
     381: astore        21
     383: aconst_null
     384: astore        17
     386: astore        10
     388: aload         7
     390: invokevirtual #1825               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
     393: astore        22
     395: aload_3
     396: aload_2
     397: aload         22
     399: invokedynamic #2032,  0           // InvokeDynamic #3:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
     404: aload         10
     406: invokedynamic #2037,  0           // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
     411: invokedynamic #2047,  0           // InvokeDynamic #5:apply:()Lscala/Function2;
     416: invokeinterface #2049,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     421: areturn
     422: new           #1833               // class scala/MatchError
     425: dup
     426: aload_1
     427: invokespecial #1837               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     430: athrow

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #2052               // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #2055               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public scalaz.Applicative compose(scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2057               // Method compose:(Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1860               // class scalaz/Dequeue
       5: aload_2
       6: aload_3
       7: invokevirtual #2059               // Method traverseImpl:(Lscalaz/Dequeue;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1860               // class scalaz/Dequeue
       5: aload_2
       6: invokevirtual #2061               // Method bind:(Lscalaz/Dequeue;Lscala/Function1;)Lscalaz/Dequeue;
       9: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2063               // Method point:(Lscala/Function0;)Lscalaz/Dequeue;
       5: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1860               // class scalaz/Dequeue
       5: aload_2
       6: invokevirtual #2065               // Method map:(Lscalaz/Dequeue;Lscala/Function1;)Lscalaz/Dequeue;
       9: areturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1860               // class scalaz/Dequeue
       5: invokevirtual #2067               // Method length:(Lscalaz/Dequeue;)I
       8: ireturn

  public boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1860               // class scalaz/Dequeue
       5: invokevirtual #2069               // Method isEmpty:(Lscalaz/Dequeue;)Z
       8: ireturn

  public java.lang.Object alt(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2071               // Method alt:(Lscala/Function0;Lscala/Function0;)Lscalaz/Dequeue;
       6: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1860               // class scalaz/Dequeue
       5: aload_2
       6: invokevirtual #2073               // Method plus:(Lscalaz/Dequeue;Lscala/Function0;)Lscalaz/Dequeue;
       9: areturn

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #2075               // Method empty:()Lscalaz/Dequeue;
       4: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1860               // class scalaz/Dequeue
       5: aload_2
       6: aload_3
       7: invokevirtual #2078               // Method foldMap:(Lscalaz/Dequeue;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1860               // class scalaz/Dequeue
       5: aload_2
       6: aload_3
       7: invokevirtual #2080               // Method foldLeft:(Lscalaz/Dequeue;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1860               // class scalaz/Dequeue
       5: aload_2
       6: aload_3
       7: invokevirtual #2083               // Method foldRight:(Lscalaz/Dequeue;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public static final java.lang.Object $anonfun$foldRight$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$foldRight$2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #1803,  0           // InvokeDynamic #0:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #1807,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public static final java.lang.Object $anonfun$foldMap$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1940,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$foldMap$1(scalaz.Monoid, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload_3
       4: invokedynamic #1892,  0           // InvokeDynamic #1:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
       9: invokeinterface #1895,  3         // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static final scalaz.Dequeue $anonfun$traverseImpl$1();
    Code:
       0: getstatic     #1906               // Field scalaz/Dequeue$.MODULE$:Lscalaz/Dequeue$;
       3: invokevirtual #2092               // Method scalaz/Dequeue$.empty:()Lscalaz/Dequeue;
       6: areturn

  public static final java.lang.Object $anonfun$traverseImpl$3(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1940,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$traverseImpl$4(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.Dequeue $anonfun$traverseImpl$5(java.lang.Object, scalaz.Dequeue);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #2101               // Method scalaz/Dequeue.$plus$colon:(Ljava/lang/Object;)Lscalaz/Dequeue;
       5: areturn

  public static final java.lang.Object $anonfun$traverseImpl$2(scalaz.Applicative, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #2032,  0           // InvokeDynamic #3:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
       8: aload_3
       9: invokedynamic #2037,  0           // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
      14: invokedynamic #2047,  0           // InvokeDynamic #5:apply:()Lscala/Function2;
      19: invokeinterface #2049,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      24: areturn

  public scalaz.DequeueInstances$$anon$3(scalaz.DequeueInstances);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #1992               // Field $outer:Lscalaz/DequeueInstances;
      11: aload_0
      12: invokespecial #2108               // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #2112               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      19: aload_0
      20: invokestatic  #2115               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      23: aload_0
      24: invokestatic  #2118               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      27: aload_0
      28: invokestatic  #2121               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      31: aload_0
      32: invokestatic  #2124               // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      35: aload_0
      36: invokestatic  #2127               // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      39: aload_0
      40: invokestatic  #2130               // InterfaceMethod scalaz/IsEmpty.$init$:(Lscalaz/IsEmpty;)V
      43: aload_0
      44: invokestatic  #2133               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      47: aload_0
      48: invokestatic  #2136               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      51: aload_0
      52: invokestatic  #2139               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      55: aload_0
      56: invokestatic  #2142               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      59: aload_0
      60: invokestatic  #2145               // InterfaceMethod scalaz/Monad.$init$:(Lscalaz/Monad;)V
      63: aload_0
      64: invokestatic  #2148               // InterfaceMethod scalaz/ApplicativePlus.$init$:(Lscalaz/ApplicativePlus;)V
      67: aload_0
      68: invokestatic  #2151               // InterfaceMethod scalaz/MonadPlus.$init$:(Lscalaz/MonadPlus;)V
      71: aload_0
      72: invokestatic  #2154               // InterfaceMethod scalaz/InvariantAlt.$init$:(Lscalaz/InvariantAlt;)V
      75: aload_0
      76: invokestatic  #2157               // InterfaceMethod scalaz/Alt.$init$:(Lscalaz/Alt;)V
      79: invokestatic  #2162               // Method scala/runtime/Statics.releaseFence:()V
      82: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2174,  0           // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
