Compiled from "FingerTree.scala"
public final class scalaz.FingerTreeInstances$$anon$6 implements scalaz.Monoid<scalaz.FingerTree<V, A>> {
  private scalaz.syntax.MonoidSyntax<scalaz.FingerTree<V, A>> monoidSyntax;

  private scalaz.syntax.SemigroupSyntax<scalaz.FingerTree<V, A>> semigroupSyntax;

  private final scalaz.Reducer evidence$8$1;

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #49                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #61                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #70                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #79                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #84                 // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #91                 // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #96                 // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #103                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #110                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scalaz.FingerTree<V, A>>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #117                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #122                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<scalaz.FingerTree<V, A>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.FingerTree<V, A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #129                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.FingerTree<V, A>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.FingerTree<V, A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #134                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #141                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #148                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.FingerTree<V, A>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #155                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<scalaz.FingerTree<V, A>> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #159                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scalaz.FingerTree<V, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #159                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.FingerTree<V, A>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #167                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.FingerTree<V, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #167                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.FingerTree<V, A> append(scalaz.FingerTree<V, A>, scala.Function0<scalaz.FingerTree<V, A>>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: getstatic     #181                // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
       9: pop
      10: new           #183                // class scalaz/Need
      13: dup
      14: aload_2
      15: invokespecial #187                // Method scalaz/Need."<init>":(Lscala/Function0;)V
      18: astore_3
      19: aload_1
      20: aload_3
      21: invokedynamic #208,  0            // InvokeDynamic #0:apply:(Lscalaz/Need;)Lscala/Function0;
      26: aload_3
      27: invokedynamic #220,  0            // InvokeDynamic #1:apply:(Lscalaz/Need;)Lscala/Function2;
      32: aload_1
      33: aload_3
      34: invokedynamic #232,  0            // InvokeDynamic #2:apply:(Lscalaz/FingerTree;Lscalaz/Need;)Lscala/Function4;
      39: invokevirtual #236                // Method scalaz/FingerTree.fold:(Lscala/Function0;Lscala/Function2;Lscala/Function4;)Ljava/lang/Object;
      42: checkcast     #24                 // class scalaz/FingerTree
      45: areturn

  public scalaz.FingerTree<V, A> zero();
    Code:
       0: getstatic     #246                // Field scalaz/FingerTree$.MODULE$:Lscalaz/FingerTree$;
       3: pop
       4: aload_0
       5: getfield      #248                // Field evidence$8$1:Lscalaz/Reducer;
       8: astore_1
       9: new           #20                 // class scalaz/FingerTree$$anon$15
      12: dup
      13: aload_1
      14: invokespecial #251                // Method scalaz/FingerTree$$anon$15."<init>":(Lscalaz/Reducer;)V
      17: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #254                // Method zero:()Lscalaz/FingerTree;
       4: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #24                 // class scalaz/FingerTree
       5: aload_2
       6: invokevirtual #257                // Method append:(Lscalaz/FingerTree;Lscala/Function0;)Lscalaz/FingerTree;
       9: areturn

  public scalaz.FingerTreeInstances$$anon$6(scalaz.FingerTreeInstances, scalaz.Reducer);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #248                // Field evidence$8$1:Lscalaz/Reducer;
       5: aload_0
       6: invokespecial #262                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #266                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      13: aload_0
      14: invokestatic  #269                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      17: invokestatic  #274                // Method scala/runtime/Statics.releaseFence:()V
      20: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #287,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
