Compiled from "ImmutableArray.scala"
public abstract class scalaz.ImmutableArray$WrappedImmutableArray<A> implements scala.collection.immutable.IndexedSeq<A> {
  private final scalaz.ImmutableArray<A> value;

  public boolean scala$collection$immutable$IndexedSeq$$super$canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #28                 // InterfaceMethod scala/collection/Seq.canEqual$:(Lscala/collection/Seq;Ljava/lang/Object;)Z
       5: ireturn

  public boolean scala$collection$immutable$IndexedSeq$$super$sameElements(scala.collection.IterableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #39                 // InterfaceMethod scala/collection/SeqOps.sameElements$:(Lscala/collection/SeqOps;Lscala/collection/IterableOnce;)Z
       5: ireturn

  public final scala.collection.immutable.IndexedSeq<A> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #47                 // InterfaceMethod scala/collection/immutable/IndexedSeq.toIndexedSeq$:(Lscala/collection/immutable/IndexedSeq;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #51                 // InterfaceMethod scala/collection/immutable/IndexedSeq.canEqual$:(Lscala/collection/immutable/IndexedSeq;Ljava/lang/Object;)Z
       5: ireturn

  public <B> boolean sameElements(scala.collection.IterableOnce<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #57                 // InterfaceMethod scala/collection/immutable/IndexedSeq.sameElements$:(Lscala/collection/immutable/IndexedSeq;Lscala/collection/IterableOnce;)Z
       5: ireturn

  public int applyPreferredMaxLength();
    Code:
       0: aload_0
       1: invokestatic  #63                 // InterfaceMethod scala/collection/immutable/IndexedSeq.applyPreferredMaxLength$:(Lscala/collection/immutable/IndexedSeq;)I
       4: ireturn

  public scala.collection.SeqFactory<scala.collection.immutable.IndexedSeq> iterableFactory();
    Code:
       0: aload_0
       1: invokestatic  #70                 // InterfaceMethod scala/collection/immutable/IndexedSeq.iterableFactory$:(Lscala/collection/immutable/IndexedSeq;)Lscala/collection/SeqFactory;
       4: areturn

  public java.lang.Object scala$collection$immutable$IndexedSeqOps$$super$slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #80                 // InterfaceMethod scala/collection/IndexedSeqOps.slice$:(Lscala/collection/IndexedSeqOps;II)Ljava/lang/Object;
       6: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #87                 // InterfaceMethod scala/collection/immutable/IndexedSeqOps.slice$:(Lscala/collection/immutable/IndexedSeqOps;II)Ljava/lang/Object;
       6: areturn

  public java.lang.String stringPrefix();
    Code:
       0: aload_0
       1: invokestatic  #95                 // InterfaceMethod scala/collection/IndexedSeq.stringPrefix$:(Lscala/collection/IndexedSeq;)Ljava/lang/String;
       4: areturn

  public scala.collection.Iterator<A> iterator();
    Code:
       0: aload_0
       1: invokestatic  #102                // InterfaceMethod scala/collection/IndexedSeqOps.iterator$:(Lscala/collection/IndexedSeqOps;)Lscala/collection/Iterator;
       4: areturn

  public <S extends scala.collection.Stepper<?>> S stepper(scala.collection.StepperShape<A, S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #110                // InterfaceMethod scala/collection/IndexedSeqOps.stepper$:(Lscala/collection/IndexedSeqOps;Lscala/collection/StepperShape;)Lscala/collection/Stepper;
       5: areturn

  public scala.collection.Iterator<A> reverseIterator();
    Code:
       0: aload_0
       1: invokestatic  #115                // InterfaceMethod scala/collection/IndexedSeqOps.reverseIterator$:(Lscala/collection/IndexedSeqOps;)Lscala/collection/Iterator;
       4: areturn

  public <B> B foldRight(B, scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #124                // InterfaceMethod scala/collection/IndexedSeqOps.foldRight$:(Lscala/collection/IndexedSeqOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public scala.collection.IndexedSeqView<A> view();
    Code:
       0: aload_0
       1: invokestatic  #132                // InterfaceMethod scala/collection/IndexedSeqOps.view$:(Lscala/collection/IndexedSeqOps;)Lscala/collection/IndexedSeqView;
       4: areturn

  public scala.collection.IndexedSeqView<A> view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #137                // InterfaceMethod scala/collection/IndexedSeqOps.view$:(Lscala/collection/IndexedSeqOps;II)Lscala/collection/IndexedSeqView;
       6: areturn

  public scala.collection.Iterable<A> reversed();
    Code:
       0: aload_0
       1: invokestatic  #144                // InterfaceMethod scala/collection/IndexedSeqOps.reversed$:(Lscala/collection/IndexedSeqOps;)Lscala/collection/Iterable;
       4: areturn

  public java.lang.Object prepended(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #151                // InterfaceMethod scala/collection/IndexedSeqOps.prepended$:(Lscala/collection/IndexedSeqOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #158                // InterfaceMethod scala/collection/IndexedSeqOps.take$:(Lscala/collection/IndexedSeqOps;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object takeRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #162                // InterfaceMethod scala/collection/IndexedSeqOps.takeRight$:(Lscala/collection/IndexedSeqOps;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #166                // InterfaceMethod scala/collection/IndexedSeqOps.drop$:(Lscala/collection/IndexedSeqOps;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object dropRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #170                // InterfaceMethod scala/collection/IndexedSeqOps.dropRight$:(Lscala/collection/IndexedSeqOps;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object map(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #177                // InterfaceMethod scala/collection/IndexedSeqOps.map$:(Lscala/collection/IndexedSeqOps;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object reverse();
    Code:
       0: aload_0
       1: invokestatic  #184                // InterfaceMethod scala/collection/IndexedSeqOps.reverse$:(Lscala/collection/IndexedSeqOps;)Ljava/lang/Object;
       4: areturn

  public A head();
    Code:
       0: aload_0
       1: invokestatic  #189                // InterfaceMethod scala/collection/IndexedSeqOps.head$:(Lscala/collection/IndexedSeqOps;)Ljava/lang/Object;
       4: areturn

  public scala.Option<A> headOption();
    Code:
       0: aload_0
       1: invokestatic  #196                // InterfaceMethod scala/collection/IndexedSeqOps.headOption$:(Lscala/collection/IndexedSeqOps;)Lscala/Option;
       4: areturn

  public A last();
    Code:
       0: aload_0
       1: invokestatic  #200                // InterfaceMethod scala/collection/IndexedSeqOps.last$:(Lscala/collection/IndexedSeqOps;)Ljava/lang/Object;
       4: areturn

  public final int lengthCompare(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #207                // InterfaceMethod scala/collection/IndexedSeqOps.lengthCompare$:(Lscala/collection/IndexedSeqOps;I)I
       5: ireturn

  public int knownSize();
    Code:
       0: aload_0
       1: invokestatic  #212                // InterfaceMethod scala/collection/IndexedSeqOps.knownSize$:(Lscala/collection/IndexedSeqOps;)I
       4: ireturn

  public final int lengthCompare(scala.collection.Iterable<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #217                // InterfaceMethod scala/collection/IndexedSeqOps.lengthCompare$:(Lscala/collection/IndexedSeqOps;Lscala/collection/Iterable;)I
       5: ireturn

  public <B> scala.collection.Searching$SearchResult search(B, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #226                // InterfaceMethod scala/collection/IndexedSeqOps.search$:(Lscala/collection/IndexedSeqOps;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/Searching$SearchResult;
       6: areturn

  public <B> scala.collection.Searching$SearchResult search(B, int, int, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: invokestatic  #233                // InterfaceMethod scala/collection/IndexedSeqOps.search$:(Lscala/collection/IndexedSeqOps;Ljava/lang/Object;IILscala/math/Ordering;)Lscala/collection/Searching$SearchResult;
       9: areturn

  public final scala.collection.immutable.Seq<A> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #242                // InterfaceMethod scala/collection/immutable/Seq.toSeq$:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #246                // InterfaceMethod scala/collection/Seq.equals$:(Lscala/collection/Seq;Ljava/lang/Object;)Z
       5: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #251                // InterfaceMethod scala/collection/Seq.hashCode$:(Lscala/collection/Seq;)I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #256                // InterfaceMethod scala/collection/Seq.toString$:(Lscala/collection/Seq;)Ljava/lang/String;
       4: areturn

  public java.lang.Object scala$collection$SeqOps$$super$concat(scala.collection.IterableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #265                // InterfaceMethod scala/collection/IterableOps.concat$:(Lscala/collection/IterableOps;Lscala/collection/IterableOnce;)Ljava/lang/Object;
       5: areturn

  public int scala$collection$SeqOps$$super$sizeCompare(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #271                // InterfaceMethod scala/collection/IterableOps.sizeCompare$:(Lscala/collection/IterableOps;I)I
       5: ireturn

  public int scala$collection$SeqOps$$super$sizeCompare(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #274                // InterfaceMethod scala/collection/IterableOps.sizeCompare$:(Lscala/collection/IterableOps;Lscala/collection/Iterable;)I
       5: ireturn

  public final java.lang.Object $plus$colon(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #279                // InterfaceMethod scala/collection/SeqOps.$plus$colon$:(Lscala/collection/SeqOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object appended(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #283                // InterfaceMethod scala/collection/SeqOps.appended$:(Lscala/collection/SeqOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object $colon$plus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #287                // InterfaceMethod scala/collection/SeqOps.$colon$plus$:(Lscala/collection/SeqOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object prependedAll(scala.collection.IterableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #293                // InterfaceMethod scala/collection/SeqOps.prependedAll$:(Lscala/collection/SeqOps;Lscala/collection/IterableOnce;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object $plus$plus$colon(scala.collection.IterableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #297                // InterfaceMethod scala/collection/SeqOps.$plus$plus$colon$:(Lscala/collection/SeqOps;Lscala/collection/IterableOnce;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object appendedAll(scala.collection.IterableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #301                // InterfaceMethod scala/collection/SeqOps.appendedAll$:(Lscala/collection/SeqOps;Lscala/collection/IterableOnce;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object $colon$plus$plus(scala.collection.IterableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #305                // InterfaceMethod scala/collection/SeqOps.$colon$plus$plus$:(Lscala/collection/SeqOps;Lscala/collection/IterableOnce;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object concat(scala.collection.IterableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #308                // InterfaceMethod scala/collection/SeqOps.concat$:(Lscala/collection/SeqOps;Lscala/collection/IterableOnce;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object union(scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #314                // InterfaceMethod scala/collection/SeqOps.union$:(Lscala/collection/SeqOps;Lscala/collection/Seq;)Ljava/lang/Object;
       5: areturn

  public final int size();
    Code:
       0: aload_0
       1: invokestatic  #320                // InterfaceMethod scala/collection/SeqOps.size$:(Lscala/collection/SeqOps;)I
       4: ireturn

  public java.lang.Object distinct();
    Code:
       0: aload_0
       1: invokestatic  #325                // InterfaceMethod scala/collection/SeqOps.distinct$:(Lscala/collection/SeqOps;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object distinctBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #330                // InterfaceMethod scala/collection/SeqOps.distinctBy$:(Lscala/collection/SeqOps;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public <B> boolean startsWith(scala.collection.IterableOnce<B>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #338                // InterfaceMethod scala/collection/SeqOps.startsWith$:(Lscala/collection/SeqOps;Lscala/collection/IterableOnce;I)Z
       6: ireturn

  public <B> int startsWith$default$2();
    Code:
       0: aload_0
       1: invokestatic  #343                // InterfaceMethod scala/collection/SeqOps.startsWith$default$2$:(Lscala/collection/SeqOps;)I
       4: ireturn

  public <B> boolean endsWith(scala.collection.Iterable<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #350                // InterfaceMethod scala/collection/SeqOps.endsWith$:(Lscala/collection/SeqOps;Lscala/collection/Iterable;)Z
       5: ireturn

  public boolean isDefinedAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #357                // InterfaceMethod scala/collection/SeqOps.isDefinedAt$:(Lscala/collection/SeqOps;I)Z
       5: ireturn

  public java.lang.Object padTo(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #363                // InterfaceMethod scala/collection/SeqOps.padTo$:(Lscala/collection/SeqOps;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final int segmentLength(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #371                // InterfaceMethod scala/collection/SeqOps.segmentLength$:(Lscala/collection/SeqOps;Lscala/Function1;)I
       5: ireturn

  public int segmentLength(scala.Function1<A, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #376                // InterfaceMethod scala/collection/SeqOps.segmentLength$:(Lscala/collection/SeqOps;Lscala/Function1;I)I
       6: ireturn

  public final int prefixLength(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #380                // InterfaceMethod scala/collection/SeqOps.prefixLength$:(Lscala/collection/SeqOps;Lscala/Function1;)I
       5: ireturn

  public int indexWhere(scala.Function1<A, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #384                // InterfaceMethod scala/collection/SeqOps.indexWhere$:(Lscala/collection/SeqOps;Lscala/Function1;I)I
       6: ireturn

  public int indexWhere(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #386                // InterfaceMethod scala/collection/SeqOps.indexWhere$:(Lscala/collection/SeqOps;Lscala/Function1;)I
       5: ireturn

  public <B> int indexOf(B, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #393                // InterfaceMethod scala/collection/SeqOps.indexOf$:(Lscala/collection/SeqOps;Ljava/lang/Object;I)I
       6: ireturn

  public <B> int indexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #398                // InterfaceMethod scala/collection/SeqOps.indexOf$:(Lscala/collection/SeqOps;Ljava/lang/Object;)I
       5: ireturn

  public <B> int lastIndexOf(B, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #403                // InterfaceMethod scala/collection/SeqOps.lastIndexOf$:(Lscala/collection/SeqOps;Ljava/lang/Object;I)I
       6: ireturn

  public <B> int lastIndexOf$default$2();
    Code:
       0: aload_0
       1: invokestatic  #407                // InterfaceMethod scala/collection/SeqOps.lastIndexOf$default$2$:(Lscala/collection/SeqOps;)I
       4: ireturn

  public int lastIndexWhere(scala.Function1<A, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #411                // InterfaceMethod scala/collection/SeqOps.lastIndexWhere$:(Lscala/collection/SeqOps;Lscala/Function1;I)I
       6: ireturn

  public int lastIndexWhere(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #413                // InterfaceMethod scala/collection/SeqOps.lastIndexWhere$:(Lscala/collection/SeqOps;Lscala/Function1;)I
       5: ireturn

  public <B> int indexOfSlice(scala.collection.Seq<B>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #420                // InterfaceMethod scala/collection/SeqOps.indexOfSlice$:(Lscala/collection/SeqOps;Lscala/collection/Seq;I)I
       6: ireturn

  public <B> int indexOfSlice(scala.collection.Seq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #424                // InterfaceMethod scala/collection/SeqOps.indexOfSlice$:(Lscala/collection/SeqOps;Lscala/collection/Seq;)I
       5: ireturn

  public <B> int lastIndexOfSlice(scala.collection.Seq<B>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #428                // InterfaceMethod scala/collection/SeqOps.lastIndexOfSlice$:(Lscala/collection/SeqOps;Lscala/collection/Seq;I)I
       6: ireturn

  public <B> int lastIndexOfSlice(scala.collection.Seq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #430                // InterfaceMethod scala/collection/SeqOps.lastIndexOfSlice$:(Lscala/collection/SeqOps;Lscala/collection/Seq;)I
       5: ireturn

  public scala.Option<A> findLast(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #437                // InterfaceMethod scala/collection/SeqOps.findLast$:(Lscala/collection/SeqOps;Lscala/Function1;)Lscala/Option;
       5: areturn

  public <B> boolean containsSlice(scala.collection.Seq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #444                // InterfaceMethod scala/collection/SeqOps.containsSlice$:(Lscala/collection/SeqOps;Lscala/collection/Seq;)Z
       5: ireturn

  public <A1> boolean contains(A1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #450                // InterfaceMethod scala/collection/SeqOps.contains$:(Lscala/collection/SeqOps;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.Object reverseMap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #454                // InterfaceMethod scala/collection/SeqOps.reverseMap$:(Lscala/collection/SeqOps;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.IndexedSeq<A>> permutations();
    Code:
       0: aload_0
       1: invokestatic  #460                // InterfaceMethod scala/collection/SeqOps.permutations$:(Lscala/collection/SeqOps;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.collection.immutable.IndexedSeq<A>> combinations(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #467                // InterfaceMethod scala/collection/SeqOps.combinations$:(Lscala/collection/SeqOps;I)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object sorted(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #473                // InterfaceMethod scala/collection/SeqOps.sorted$:(Lscala/collection/SeqOps;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object sortWith(scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #480                // InterfaceMethod scala/collection/SeqOps.sortWith$:(Lscala/collection/SeqOps;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object sortBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #486                // InterfaceMethod scala/collection/SeqOps.sortBy$:(Lscala/collection/SeqOps;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public scala.collection.immutable.Range indices();
    Code:
       0: aload_0
       1: invokestatic  #492                // InterfaceMethod scala/collection/SeqOps.indices$:(Lscala/collection/SeqOps;)Lscala/collection/immutable/Range;
       4: areturn

  public final int sizeCompare(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #496                // InterfaceMethod scala/collection/SeqOps.sizeCompare$:(Lscala/collection/SeqOps;I)I
       5: ireturn

  public final int sizeCompare(scala.collection.Iterable<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #499                // InterfaceMethod scala/collection/SeqOps.sizeCompare$:(Lscala/collection/SeqOps;Lscala/collection/Iterable;)I
       5: ireturn

  public final scala.collection.IterableOps lengthIs();
    Code:
       0: aload_0
       1: invokestatic  #505                // InterfaceMethod scala/collection/SeqOps.lengthIs$:(Lscala/collection/SeqOps;)Lscala/collection/IterableOps;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #511                // InterfaceMethod scala/collection/SeqOps.isEmpty$:(Lscala/collection/SeqOps;)Z
       4: ireturn

  public <B> boolean corresponds(scala.collection.Seq<B>, scala.Function2<A, B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #518                // InterfaceMethod scala/collection/SeqOps.corresponds$:(Lscala/collection/SeqOps;Lscala/collection/Seq;Lscala/Function2;)Z
       6: ireturn

  public java.lang.Object diff(scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #522                // InterfaceMethod scala/collection/SeqOps.diff$:(Lscala/collection/SeqOps;Lscala/collection/Seq;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object intersect(scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #526                // InterfaceMethod scala/collection/SeqOps.intersect$:(Lscala/collection/SeqOps;Lscala/collection/Seq;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object patch(int, scala.collection.IterableOnce, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #534                // InterfaceMethod scala/collection/SeqOps.patch$:(Lscala/collection/SeqOps;ILscala/collection/IterableOnce;I)Ljava/lang/Object;
       7: areturn

  public java.lang.Object updated(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #539                // InterfaceMethod scala/collection/SeqOps.updated$:(Lscala/collection/SeqOps;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public <B> scala.collection.mutable.Map<B, java.lang.Object> occCounts(scala.collection.Seq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #547                // InterfaceMethod scala/collection/SeqOps.occCounts$:(Lscala/collection/SeqOps;Lscala/collection/Seq;)Lscala/collection/mutable/Map;
       5: areturn

  public scala.Option unapply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #556                // InterfaceMethod scala/PartialFunction.unapply$:(Lscala/PartialFunction;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public scala.PartialFunction<java.lang.Object, A> elementWise();
    Code:
       0: aload_0
       1: invokestatic  #563                // InterfaceMethod scala/PartialFunction.elementWise$:(Lscala/PartialFunction;)Lscala/PartialFunction;
       4: areturn

  public <A1, B1> scala.PartialFunction<A1, B1> orElse(scala.PartialFunction<A1, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #569                // InterfaceMethod scala/PartialFunction.orElse$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
       5: areturn

  public <C> scala.PartialFunction<java.lang.Object, C> andThen(scala.Function1<A, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #578                // InterfaceMethod scala/PartialFunction.andThen$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public <C> scala.PartialFunction<java.lang.Object, C> andThen(scala.PartialFunction<A, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #581                // InterfaceMethod scala/PartialFunction.andThen$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
       5: areturn

  public <R$> scala.PartialFunction<R$, A> compose(scala.PartialFunction<R$, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #586                // InterfaceMethod scala/PartialFunction.compose$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
       5: areturn

  public scala.Function1<java.lang.Object, scala.Option<A>> lift();
    Code:
       0: aload_0
       1: invokestatic  #593                // InterfaceMethod scala/PartialFunction.lift$:(Lscala/PartialFunction;)Lscala/Function1;
       4: areturn

  public java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #601                // InterfaceMethod scala/PartialFunction.applyOrElse$:(Lscala/PartialFunction;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <U> scala.Function1<java.lang.Object, java.lang.Object> runWith(scala.Function1<A, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #609                // InterfaceMethod scala/PartialFunction.runWith$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public boolean apply$mcZD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #618                // InterfaceMethod scala/Function1.apply$mcZD$sp$:(Lscala/Function1;D)Z
       5: ireturn

  public double apply$mcDD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #625                // InterfaceMethod scala/Function1.apply$mcDD$sp$:(Lscala/Function1;D)D
       5: dreturn

  public float apply$mcFD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #631                // InterfaceMethod scala/Function1.apply$mcFD$sp$:(Lscala/Function1;D)F
       5: freturn

  public int apply$mcID$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #637                // InterfaceMethod scala/Function1.apply$mcID$sp$:(Lscala/Function1;D)I
       5: ireturn

  public long apply$mcJD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #643                // InterfaceMethod scala/Function1.apply$mcJD$sp$:(Lscala/Function1;D)J
       5: lreturn

  public void apply$mcVD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #649                // InterfaceMethod scala/Function1.apply$mcVD$sp$:(Lscala/Function1;D)V
       5: return

  public boolean apply$mcZF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #655                // InterfaceMethod scala/Function1.apply$mcZF$sp$:(Lscala/Function1;F)Z
       5: ireturn

  public double apply$mcDF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #662                // InterfaceMethod scala/Function1.apply$mcDF$sp$:(Lscala/Function1;F)D
       5: dreturn

  public float apply$mcFF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #668                // InterfaceMethod scala/Function1.apply$mcFF$sp$:(Lscala/Function1;F)F
       5: freturn

  public int apply$mcIF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #674                // InterfaceMethod scala/Function1.apply$mcIF$sp$:(Lscala/Function1;F)I
       5: ireturn

  public long apply$mcJF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #680                // InterfaceMethod scala/Function1.apply$mcJF$sp$:(Lscala/Function1;F)J
       5: lreturn

  public void apply$mcVF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #686                // InterfaceMethod scala/Function1.apply$mcVF$sp$:(Lscala/Function1;F)V
       5: return

  public boolean apply$mcZI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #691                // InterfaceMethod scala/Function1.apply$mcZI$sp$:(Lscala/Function1;I)Z
       5: ireturn

  public double apply$mcDI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #697                // InterfaceMethod scala/Function1.apply$mcDI$sp$:(Lscala/Function1;I)D
       5: dreturn

  public float apply$mcFI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #703                // InterfaceMethod scala/Function1.apply$mcFI$sp$:(Lscala/Function1;I)F
       5: freturn

  public int apply$mcII$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #707                // InterfaceMethod scala/Function1.apply$mcII$sp$:(Lscala/Function1;I)I
       5: ireturn

  public long apply$mcJI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #713                // InterfaceMethod scala/Function1.apply$mcJI$sp$:(Lscala/Function1;I)J
       5: lreturn

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #719                // InterfaceMethod scala/Function1.apply$mcVI$sp$:(Lscala/Function1;I)V
       5: return

  public boolean apply$mcZJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #725                // InterfaceMethod scala/Function1.apply$mcZJ$sp$:(Lscala/Function1;J)Z
       5: ireturn

  public double apply$mcDJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #732                // InterfaceMethod scala/Function1.apply$mcDJ$sp$:(Lscala/Function1;J)D
       5: dreturn

  public float apply$mcFJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #738                // InterfaceMethod scala/Function1.apply$mcFJ$sp$:(Lscala/Function1;J)F
       5: freturn

  public int apply$mcIJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #744                // InterfaceMethod scala/Function1.apply$mcIJ$sp$:(Lscala/Function1;J)I
       5: ireturn

  public long apply$mcJJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #750                // InterfaceMethod scala/Function1.apply$mcJJ$sp$:(Lscala/Function1;J)J
       5: lreturn

  public void apply$mcVJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #756                // InterfaceMethod scala/Function1.apply$mcVJ$sp$:(Lscala/Function1;J)V
       5: return

  public <A$> scala.Function1<A$, A> compose(scala.Function1<A$, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #761                // InterfaceMethod scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public final scala.collection.Iterable<A> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #768                // InterfaceMethod scala/collection/Iterable.toIterable$:(Lscala/collection/Iterable;)Lscala/collection/Iterable;
       4: areturn

  public final scala.collection.Iterable<A> coll();
    Code:
       0: aload_0
       1: invokestatic  #772                // InterfaceMethod scala/collection/Iterable.coll$:(Lscala/collection/Iterable;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterable<A> seq();
    Code:
       0: aload_0
       1: invokestatic  #776                // InterfaceMethod scala/collection/Iterable.seq$:(Lscala/collection/Iterable;)Lscala/collection/Iterable;
       4: areturn

  public java.lang.String className();
    Code:
       0: aload_0
       1: invokestatic  #781                // InterfaceMethod scala/collection/Iterable.className$:(Lscala/collection/Iterable;)Ljava/lang/String;
       4: areturn

  public final java.lang.String collectionClassName();
    Code:
       0: aload_0
       1: invokestatic  #785                // InterfaceMethod scala/collection/Iterable.collectionClassName$:(Lscala/collection/Iterable;)Ljava/lang/String;
       4: areturn

  public <B> scala.collection.LazyZip2<A, B, scala.collection.Iterable> lazyZip(scala.collection.Iterable<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #792                // InterfaceMethod scala/collection/Iterable.lazyZip$:(Lscala/collection/Iterable;Lscala/collection/Iterable;)Lscala/collection/LazyZip2;
       5: areturn

  public scala.collection.IterableOps fromSpecific(scala.collection.IterableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #800                // InterfaceMethod scala/collection/IterableFactoryDefaults.fromSpecific$:(Lscala/collection/IterableFactoryDefaults;Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
       5: areturn

  public scala.collection.mutable.Builder<A, scala.collection.immutable.IndexedSeq<A>> newSpecificBuilder();
    Code:
       0: aload_0
       1: invokestatic  #807                // InterfaceMethod scala/collection/IterableFactoryDefaults.newSpecificBuilder$:(Lscala/collection/IterableFactoryDefaults;)Lscala/collection/mutable/Builder;
       4: areturn

  public scala.collection.IterableOps empty();
    Code:
       0: aload_0
       1: invokestatic  #812                // InterfaceMethod scala/collection/IterableFactoryDefaults.empty$:(Lscala/collection/IterableFactoryDefaults;)Lscala/collection/IterableOps;
       4: areturn

  public final scala.collection.Iterable<A> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #817                // InterfaceMethod scala/collection/IterableOps.toTraversable$:(Lscala/collection/IterableOps;)Lscala/collection/Iterable;
       4: areturn

  public boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #822                // InterfaceMethod scala/collection/IterableOps.isTraversableAgain$:(Lscala/collection/IterableOps;)Z
       4: ireturn

  public final java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #827                // InterfaceMethod scala/collection/IterableOps.repr$:(Lscala/collection/IterableOps;)Ljava/lang/Object;
       4: areturn

  public scala.collection.IterableFactory<?> companion();
    Code:
       0: aload_0
       1: invokestatic  #834                // InterfaceMethod scala/collection/IterableOps.companion$:(Lscala/collection/IterableOps;)Lscala/collection/IterableFactory;
       4: areturn

  public scala.Option<A> lastOption();
    Code:
       0: aload_0
       1: invokestatic  #839                // InterfaceMethod scala/collection/IterableOps.lastOption$:(Lscala/collection/IterableOps;)Lscala/Option;
       4: areturn

  public final scala.collection.IterableOps sizeIs();
    Code:
       0: aload_0
       1: invokestatic  #844                // InterfaceMethod scala/collection/IterableOps.sizeIs$:(Lscala/collection/IterableOps;)Lscala/collection/IterableOps;
       4: areturn

  public java.lang.Object transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #850                // InterfaceMethod scala/collection/IterableOps.transpose$:(Lscala/collection/IterableOps;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #855                // InterfaceMethod scala/collection/IterableOps.filter$:(Lscala/collection/IterableOps;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #859                // InterfaceMethod scala/collection/IterableOps.filterNot$:(Lscala/collection/IterableOps;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public scala.collection.WithFilter<A, ?> withFilter(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #866                // InterfaceMethod scala/collection/IterableOps.withFilter$:(Lscala/collection/IterableOps;Lscala/Function1;)Lscala/collection/WithFilter;
       5: areturn

  public scala.Tuple2<scala.collection.immutable.IndexedSeq<A>, scala.collection.immutable.IndexedSeq<A>> partition(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #873                // InterfaceMethod scala/collection/IterableOps.partition$:(Lscala/collection/IterableOps;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.immutable.IndexedSeq<A>, scala.collection.immutable.IndexedSeq<A>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #880                // InterfaceMethod scala/collection/IterableOps.splitAt$:(Lscala/collection/IterableOps;I)Lscala/Tuple2;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #884                // InterfaceMethod scala/collection/IterableOps.takeWhile$:(Lscala/collection/IterableOps;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2<scala.collection.immutable.IndexedSeq<A>, scala.collection.immutable.IndexedSeq<A>> span(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #888                // InterfaceMethod scala/collection/IterableOps.span$:(Lscala/collection/IterableOps;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #892                // InterfaceMethod scala/collection/IterableOps.dropWhile$:(Lscala/collection/IterableOps;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.IndexedSeq<A>> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #897                // InterfaceMethod scala/collection/IterableOps.grouped$:(Lscala/collection/IterableOps;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.IndexedSeq<A>> sliding(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #901                // InterfaceMethod scala/collection/IterableOps.sliding$:(Lscala/collection/IterableOps;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.IndexedSeq<A>> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #907                // InterfaceMethod scala/collection/IterableOps.sliding$:(Lscala/collection/IterableOps;II)Lscala/collection/Iterator;
       6: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokestatic  #911                // InterfaceMethod scala/collection/IterableOps.tail$:(Lscala/collection/IterableOps;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokestatic  #915                // InterfaceMethod scala/collection/IterableOps.init$:(Lscala/collection/IterableOps;)Ljava/lang/Object;
       4: areturn

  public <K> scala.collection.immutable.Map<K, scala.collection.immutable.IndexedSeq<A>> groupBy(scala.Function1<A, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #922                // InterfaceMethod scala/collection/IterableOps.groupBy$:(Lscala/collection/IterableOps;Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public <K, B> scala.collection.immutable.Map<K, scala.collection.immutable.IndexedSeq<B>> groupMap(scala.Function1<A, K>, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #930                // InterfaceMethod scala/collection/IterableOps.groupMap$:(Lscala/collection/IterableOps;Lscala/Function1;Lscala/Function1;)Lscala/collection/immutable/Map;
       6: areturn

  public <K, B> scala.collection.immutable.Map<K, B> groupMapReduce(scala.Function1<A, K>, scala.Function1<A, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #938                // InterfaceMethod scala/collection/IterableOps.groupMapReduce$:(Lscala/collection/IterableOps;Lscala/Function1;Lscala/Function1;Lscala/Function2;)Lscala/collection/immutable/Map;
       7: areturn

  public java.lang.Object scan(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #943                // InterfaceMethod scala/collection/IterableOps.scan$:(Lscala/collection/IterableOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object scanLeft(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #947                // InterfaceMethod scala/collection/IterableOps.scanLeft$:(Lscala/collection/IterableOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object scanRight(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #951                // InterfaceMethod scala/collection/IterableOps.scanRight$:(Lscala/collection/IterableOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object flatMap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #955                // InterfaceMethod scala/collection/IterableOps.flatMap$:(Lscala/collection/IterableOps;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #959                // InterfaceMethod scala/collection/IterableOps.flatten$:(Lscala/collection/IterableOps;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object collect(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #966                // InterfaceMethod scala/collection/IterableOps.collect$:(Lscala/collection/IterableOps;Lscala/PartialFunction;)Ljava/lang/Object;
       5: areturn

  public <A1, A2> scala.Tuple2<scala.collection.immutable.IndexedSeq<A1>, scala.collection.immutable.IndexedSeq<A2>> partitionMap(scala.Function1<A, scala.util.Either<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #971                // InterfaceMethod scala/collection/IterableOps.partitionMap$:(Lscala/collection/IterableOps;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public final java.lang.Object $plus$plus(scala.collection.IterableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #975                // InterfaceMethod scala/collection/IterableOps.$plus$plus$:(Lscala/collection/IterableOps;Lscala/collection/IterableOnce;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zip(scala.collection.IterableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #979                // InterfaceMethod scala/collection/IterableOps.zip$:(Lscala/collection/IterableOps;Lscala/collection/IterableOnce;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipWithIndex();
    Code:
       0: aload_0
       1: invokestatic  #983                // InterfaceMethod scala/collection/IterableOps.zipWithIndex$:(Lscala/collection/IterableOps;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object zipAll(scala.collection.Iterable, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #991                // InterfaceMethod scala/collection/IterableOps.zipAll$:(Lscala/collection/IterableOps;Lscala/collection/Iterable;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public <A1, A2> scala.Tuple2<scala.collection.immutable.IndexedSeq<A1>, scala.collection.immutable.IndexedSeq<A2>> unzip(scala.Function1<A, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #997                // InterfaceMethod scala/collection/IterableOps.unzip$:(Lscala/collection/IterableOps;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.immutable.IndexedSeq<A1>, scala.collection.immutable.IndexedSeq<A2>, scala.collection.immutable.IndexedSeq<A3>> unzip3(scala.Function1<A, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1005               // InterfaceMethod scala/collection/IterableOps.unzip3$:(Lscala/collection/IterableOps;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.IndexedSeq<A>> tails();
    Code:
       0: aload_0
       1: invokestatic  #1010               // InterfaceMethod scala/collection/IterableOps.tails$:(Lscala/collection/IterableOps;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.collection.immutable.IndexedSeq<A>> inits();
    Code:
       0: aload_0
       1: invokestatic  #1014               // InterfaceMethod scala/collection/IterableOps.inits$:(Lscala/collection/IterableOps;)Lscala/collection/Iterator;
       4: areturn

  public java.lang.Object tapEach(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1018               // InterfaceMethod scala/collection/IterableOps.tapEach$:(Lscala/collection/IterableOps;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #1025               // InterfaceMethod scala/collection/IterableOnceOps.hasDefiniteSize$:(Lscala/collection/IterableOnceOps;)Z
       4: ireturn

  public <U> void foreach(scala.Function1<A, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1032               // InterfaceMethod scala/collection/IterableOnceOps.foreach$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)V
       5: return

  public boolean forall(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1039               // InterfaceMethod scala/collection/IterableOnceOps.forall$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1043               // InterfaceMethod scala/collection/IterableOnceOps.exists$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)Z
       5: ireturn

  public int count(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1048               // InterfaceMethod scala/collection/IterableOnceOps.count$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)I
       5: ireturn

  public scala.Option<A> find(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1053               // InterfaceMethod scala/collection/IterableOnceOps.find$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)Lscala/Option;
       5: areturn

  public <B$> B$ foldLeft(B$, scala.Function2<B$, A, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1059               // InterfaceMethod scala/collection/IterableOnceOps.foldLeft$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public final <B$> B$ $div$colon(B$, scala.Function2<B$, A, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1063               // InterfaceMethod scala/collection/IterableOnceOps.$div$colon$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public final <B$> B$ $colon$bslash(B$, scala.Function2<A, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1068               // InterfaceMethod scala/collection/IterableOnceOps.$colon$bslash$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1073               // InterfaceMethod scala/collection/IterableOnceOps.fold$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduce(scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1078               // InterfaceMethod scala/collection/IterableOnceOps.reduce$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceOption(scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1085               // InterfaceMethod scala/collection/IterableOnceOps.reduceOption$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> B reduceLeft(scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1090               // InterfaceMethod scala/collection/IterableOnceOps.reduceLeft$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> B reduceRight(scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1095               // InterfaceMethod scala/collection/IterableOnceOps.reduceRight$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1100               // InterfaceMethod scala/collection/IterableOnceOps.reduceLeftOption$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1105               // InterfaceMethod scala/collection/IterableOnceOps.reduceRightOption$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Lscala/Option;
       5: areturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #1109               // InterfaceMethod scala/collection/IterableOnceOps.nonEmpty$:(Lscala/collection/IterableOnceOps;)Z
       4: ireturn

  public final <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1117               // InterfaceMethod scala/collection/IterableOnceOps.copyToBuffer$:(Lscala/collection/IterableOnceOps;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> int copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1125               // InterfaceMethod scala/collection/IterableOnceOps.copyToArray$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;)I
       5: ireturn

  public <B> int copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1130               // InterfaceMethod scala/collection/IterableOnceOps.copyToArray$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;I)I
       6: ireturn

  public <B> int copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #1135               // InterfaceMethod scala/collection/IterableOnceOps.copyToArray$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;II)I
       7: ireturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1143               // InterfaceMethod scala/collection/IterableOnceOps.sum$:(Lscala/collection/IterableOnceOps;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1148               // InterfaceMethod scala/collection/IterableOnceOps.product$:(Lscala/collection/IterableOnceOps;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> A min(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1154               // InterfaceMethod scala/collection/IterableOnceOps.min$:(Lscala/collection/IterableOnceOps;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<A> minOption(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1161               // InterfaceMethod scala/collection/IterableOnceOps.minOption$:(Lscala/collection/IterableOnceOps;Lscala/math/Ordering;)Lscala/Option;
       5: areturn

  public <B> A max(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1165               // InterfaceMethod scala/collection/IterableOnceOps.max$:(Lscala/collection/IterableOnceOps;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<A> maxOption(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1169               // InterfaceMethod scala/collection/IterableOnceOps.maxOption$:(Lscala/collection/IterableOnceOps;Lscala/math/Ordering;)Lscala/Option;
       5: areturn

  public <B> A maxBy(scala.Function1<A, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1175               // InterfaceMethod scala/collection/IterableOnceOps.maxBy$:(Lscala/collection/IterableOnceOps;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B$> scala.Option<A> maxByOption(scala.Function1<A, B$>, scala.math.Ordering<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1182               // InterfaceMethod scala/collection/IterableOnceOps.maxByOption$:(Lscala/collection/IterableOnceOps;Lscala/Function1;Lscala/math/Ordering;)Lscala/Option;
       6: areturn

  public <B> A minBy(scala.Function1<A, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1186               // InterfaceMethod scala/collection/IterableOnceOps.minBy$:(Lscala/collection/IterableOnceOps;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B$> scala.Option<A> minByOption(scala.Function1<A, B$>, scala.math.Ordering<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1190               // InterfaceMethod scala/collection/IterableOnceOps.minByOption$:(Lscala/collection/IterableOnceOps;Lscala/Function1;Lscala/math/Ordering;)Lscala/Option;
       6: areturn

  public <B$> scala.Option<B$> collectFirst(scala.PartialFunction<A, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1197               // InterfaceMethod scala/collection/IterableOnceOps.collectFirst$:(Lscala/collection/IterableOnceOps;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B$> B$ aggregate(scala.Function0<B$>, scala.Function2<B$, A, B$>, scala.Function2<B$, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1206               // InterfaceMethod scala/collection/IterableOnceOps.aggregate$:(Lscala/collection/IterableOnceOps;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B$> boolean corresponds(scala.collection.IterableOnce<B$>, scala.Function2<A, B$, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1212               // InterfaceMethod scala/collection/IterableOnceOps.corresponds$:(Lscala/collection/IterableOnceOps;Lscala/collection/IterableOnce;Lscala/Function2;)Z
       6: ireturn

  public final java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1219               // InterfaceMethod scala/collection/IterableOnceOps.mkString$:(Lscala/collection/IterableOnceOps;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public final java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1224               // InterfaceMethod scala/collection/IterableOnceOps.mkString$:(Lscala/collection/IterableOnceOps;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public final java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #1227               // InterfaceMethod scala/collection/IterableOnceOps.mkString$:(Lscala/collection/IterableOnceOps;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1234               // InterfaceMethod scala/collection/IterableOnceOps.addString$:(Lscala/collection/IterableOnceOps;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public final scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1239               // InterfaceMethod scala/collection/IterableOnceOps.addString$:(Lscala/collection/IterableOnceOps;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public final scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1243               // InterfaceMethod scala/collection/IterableOnceOps.addString$:(Lscala/collection/IterableOnceOps;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public <C1> C1 to(scala.collection.Factory<A, C1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1250               // InterfaceMethod scala/collection/IterableOnceOps.to$:(Lscala/collection/IterableOnceOps;Lscala/collection/Factory;)Ljava/lang/Object;
       5: areturn

  public final scala.collection.Iterator<A> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #1256               // InterfaceMethod scala/collection/IterableOnceOps.toIterator$:(Lscala/collection/IterableOnceOps;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.immutable.List<A> toList();
    Code:
       0: aload_0
       1: invokestatic  #1263               // InterfaceMethod scala/collection/IterableOnceOps.toList$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.Vector<A> toVector();
    Code:
       0: aload_0
       1: invokestatic  #1270               // InterfaceMethod scala/collection/IterableOnceOps.toVector$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/Vector;
       4: areturn

  public <K, V> scala.collection.immutable.Map<K, V> toMap(scala.$less$colon$less<A, scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1278               // InterfaceMethod scala/collection/IterableOnceOps.toMap$:(Lscala/collection/IterableOnceOps;Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #1286               // InterfaceMethod scala/collection/IterableOnceOps.toSet$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/Set;
       4: areturn

  public final scala.collection.immutable.Stream<A> toStream();
    Code:
       0: aload_0
       1: invokestatic  #1293               // InterfaceMethod scala/collection/IterableOnceOps.toStream$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/Stream;
       4: areturn

  public final <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #1300               // InterfaceMethod scala/collection/IterableOnceOps.toBuffer$:(Lscala/collection/IterableOnceOps;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1308               // InterfaceMethod scala/collection/IterableOnceOps.toArray$:(Lscala/collection/IterableOnceOps;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scalaz.ImmutableArray<A> value();
    Code:
       0: aload_0
       1: getfield      #1313               // Field value:Lscalaz/ImmutableArray;
       4: areturn

  public A apply(int);
    Code:
       0: aload_0
       1: invokevirtual #1317               // Method value:()Lscalaz/ImmutableArray;
       4: iload_1
       5: invokevirtual #1319               // Method scalaz/ImmutableArray.apply:(I)Ljava/lang/Object;
       8: areturn

  public int length();
    Code:
       0: aload_0
       1: invokevirtual #1317               // Method value:()Lscalaz/ImmutableArray;
       4: invokevirtual #1322               // Method scalaz/ImmutableArray.length:()I
       7: ireturn

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #1324               // Method empty:()Lscala/collection/IterableOps;
       4: areturn

  public java.lang.Object fromSpecific(scala.collection.IterableOnce);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1326               // Method fromSpecific:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
       5: areturn

  public java.lang.Object coll();
    Code:
       0: aload_0
       1: invokevirtual #1328               // Method coll:()Lscala/collection/Iterable;
       4: areturn

  public scala.Function1 andThen(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1330               // Method andThen:(Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1335               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #1337               // Method isDefinedAt:(I)Z
       8: ireturn

  public scala.collection.View view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1340               // Method view:(II)Lscala/collection/IndexedSeqView;
       6: areturn

  public scala.collection.View view();
    Code:
       0: aload_0
       1: invokevirtual #1343               // Method view:()Lscala/collection/IndexedSeqView;
       4: areturn

  public scala.collection.SeqView view();
    Code:
       0: aload_0
       1: invokevirtual #1343               // Method view:()Lscala/collection/IndexedSeqView;
       4: areturn

  public scala.collection.IterableFactory iterableFactory();
    Code:
       0: aload_0
       1: invokevirtual #1346               // Method iterableFactory:()Lscala/collection/SeqFactory;
       4: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1335               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #1347               // Method apply:(I)Ljava/lang/Object;
       8: areturn

  public scalaz.ImmutableArray$WrappedImmutableArray(scalaz.ImmutableArray<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1313               // Field value:Lscalaz/ImmutableArray;
       5: aload_0
       6: invokespecial #1353               // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #1359               // InterfaceMethod scala/collection/IterableOnce.$init$:(Lscala/collection/IterableOnce;)V
      13: aload_0
      14: invokestatic  #1362               // InterfaceMethod scala/collection/IterableOnceOps.$init$:(Lscala/collection/IterableOnceOps;)V
      17: aload_0
      18: invokestatic  #1365               // InterfaceMethod scala/collection/IterableOps.$init$:(Lscala/collection/IterableOps;)V
      21: aload_0
      22: invokestatic  #1368               // InterfaceMethod scala/collection/IterableFactoryDefaults.$init$:(Lscala/collection/IterableFactoryDefaults;)V
      25: aload_0
      26: invokestatic  #1371               // InterfaceMethod scala/collection/Iterable.$init$:(Lscala/collection/Iterable;)V
      29: aload_0
      30: invokestatic  #1376               // InterfaceMethod scala/collection/immutable/Iterable.$init$:(Lscala/collection/immutable/Iterable;)V
      33: aload_0
      34: invokestatic  #1378               // InterfaceMethod scala/Function1.$init$:(Lscala/Function1;)V
      37: aload_0
      38: invokestatic  #1381               // InterfaceMethod scala/PartialFunction.$init$:(Lscala/PartialFunction;)V
      41: aload_0
      42: invokestatic  #1384               // InterfaceMethod scala/collection/SeqOps.$init$:(Lscala/collection/SeqOps;)V
      45: aload_0
      46: invokestatic  #1387               // InterfaceMethod scala/collection/Seq.$init$:(Lscala/collection/Seq;)V
      49: aload_0
      50: invokestatic  #1390               // InterfaceMethod scala/collection/immutable/Seq.$init$:(Lscala/collection/immutable/Seq;)V
      53: aload_0
      54: invokestatic  #1393               // InterfaceMethod scala/collection/IndexedSeqOps.$init$:(Lscala/collection/IndexedSeqOps;)V
      57: aload_0
      58: invokestatic  #1396               // InterfaceMethod scala/collection/IndexedSeq.$init$:(Lscala/collection/IndexedSeq;)V
      61: aload_0
      62: invokestatic  #1399               // InterfaceMethod scala/collection/immutable/IndexedSeqOps.$init$:(Lscala/collection/immutable/IndexedSeqOps;)V
      65: aload_0
      66: invokestatic  #1402               // InterfaceMethod scala/collection/immutable/IndexedSeq.$init$:(Lscala/collection/immutable/IndexedSeq;)V
      69: return
}
