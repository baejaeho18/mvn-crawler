Compiled from "Diev.scala"
public abstract class scalaz.DievInstances implements scalaz.DievImplementation {
  private volatile scalaz.DievImplementation$DieVector$ DieVector$module;

  public scalaz.DievImplementation$DieVector$ DieVector();
    Code:
       0: aload_0
       1: getfield      #36                 // Field DieVector$module:Lscalaz/DievImplementation$DieVector$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #40                 // Method DieVector$lzycompute$1:()V
      11: aload_0
      12: getfield      #36                 // Field DieVector$module:Lscalaz/DievImplementation$DieVector$;
      15: areturn

  public <A> scalaz.Equal<scalaz.Diev<A>> dievEqual(scalaz.Equal<A>);
    Code:
       0: getstatic     #52                 // Field scalaz/Equal$.MODULE$:Lscalaz/Equal$;
       3: pop
       4: invokedynamic #73,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
       9: getstatic     #78                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      12: pop
      13: getstatic     #83                 // Field scalaz/std/tuple$.MODULE$:Lscalaz/std/tuple$;
      16: pop
      17: new           #26                 // class scalaz/std/TupleInstances2$$anon$43
      20: dup
      21: aconst_null
      22: aload_1
      23: aload_1
      24: invokespecial #87                 // Method scalaz/std/TupleInstances2$$anon$43."<init>":(Lscalaz/std/TupleInstances2;Lscalaz/Equal;Lscalaz/Equal;)V
      27: astore_2
      28: new           #30                 // class scalaz/std/VectorInstances0$$anon$1
      31: dup
      32: aconst_null
      33: aload_2
      34: invokespecial #90                 // Method scalaz/std/VectorInstances0$$anon$1."<init>":(Lscalaz/std/VectorInstances0;Lscalaz/Equal;)V
      37: aconst_null
      38: astore_2
      39: astore        4
      41: astore_3
      42: new           #24                 // class scalaz/Equal$$anonfun$contramap$2
      45: dup
      46: aload         4
      48: aload_3
      49: invokespecial #93                 // Method scalaz/Equal$$anonfun$contramap$2."<init>":(Lscalaz/Equal;Lscala/Function1;)V
      52: areturn

  public <A> scalaz.Monoid<scalaz.Diev<A>> dievMonoid(scalaz.Enum<A>);
    Code:
       0: new           #20                 // class scalaz/DievInstances$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #105                // Method scalaz/DievInstances$$anon$1."<init>":(Lscalaz/DievInstances;Lscalaz/Enum;)V
       9: areturn

  public <A> scalaz.Show<scalaz.Diev<A>> dievShow(scalaz.Show<A>);
    Code:
       0: new           #22                 // class scalaz/DievInstances$$anonfun$dievShow$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #113                // Method scalaz/DievInstances$$anonfun$dievShow$2."<init>":(Lscalaz/DievInstances;Lscalaz/Show;)V
       9: areturn

  private final void DieVector$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #36                 // Field DieVector$module:Lscalaz/DievImplementation$DieVector$;
       6: ifnonnull     21
       9: aload_0
      10: new           #17                 // class scalaz/DievImplementation$DieVector$
      13: dup
      14: aload_0
      15: invokespecial #117                // Method scalaz/DievImplementation$DieVector$."<init>":(Lscalaz/DievImplementation;)V
      18: putfield      #36                 // Field DieVector$module:Lscalaz/DievImplementation$DieVector$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  public static final scala.collection.immutable.Vector $anonfun$dievEqual$1(scalaz.Diev);
    Code:
       0: aload_0
       1: invokevirtual #126                // Method scalaz/Diev.intervals:()Lscala/collection/immutable/Vector;
       4: areturn

  public static final scalaz.Cord scalaz$DievInstances$$$anonfun$dievShow$1(scalaz.Diev, scalaz.Show);
    Code:
       0: getstatic     #136                // Field scalaz/Show$.MODULE$:Lscalaz/Show$;
       3: pop
       4: getstatic     #78                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: getstatic     #83                 // Field scalaz/std/tuple$.MODULE$:Lscalaz/std/tuple$;
      10: pop
      11: new           #28                 // class scalaz/std/TupleInstances3$$anon$51
      14: dup
      15: aconst_null
      16: aload_1
      17: aload_1
      18: invokespecial #139                // Method scalaz/std/TupleInstances3$$anon$51."<init>":(Lscalaz/std/TupleInstances3;Lscalaz/Show;Lscalaz/Show;)V
      21: invokestatic  #145                // InterfaceMethod scalaz/std/VectorInstances.vectorShow$:(Lscalaz/std/VectorInstances;Lscalaz/Show;)Lscalaz/Show;
      24: aload_0
      25: invokevirtual #126                // Method scalaz/Diev.intervals:()Lscala/collection/immutable/Vector;
      28: invokeinterface #151,  2          // InterfaceMethod scalaz/Show.show:(Ljava/lang/Object;)Lscalaz/Cord;
      33: areturn

  public scalaz.DievInstances();
    Code:
       0: aload_0
       1: invokespecial #153                // Method java/lang/Object."<init>":()V
       4: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #165,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
