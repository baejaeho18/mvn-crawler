Compiled from "ISet.scala"
public final class scalaz.ISetInstances$$anon$2 implements scalaz.Order<scalaz.ISet<A>>, scalaz.ISetEqual<A> {
  private scalaz.syntax.OrderSyntax<scalaz.ISet<A>> orderSyntax;

  private scalaz.syntax.EqualSyntax<scalaz.ISet<A>> equalSyntax;

  private final scalaz.Order evidence$3$1;

  public final boolean equal(scalaz.ISet<A>, scalaz.ISet<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #42                 // InterfaceMethod scalaz/ISetEqual.equal$:(Lscalaz/ISetEqual;Lscalaz/ISet;Lscalaz/ISet;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #53                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #60                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #64                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #68                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #72                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #78                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #82                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #88                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scalaz.ISet<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #96                 // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scalaz.ISet<A>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #104                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scalaz.ISet<A>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #110                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scalaz.ISet<A>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #117                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #123                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.ISet<A>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #130                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<scalaz.ISet<A>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #134                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scalaz.ISet<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #134                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scalaz.ISet<A>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #142                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.ISet<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #142                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Equal<A> A();
    Code:
       0: getstatic     #154                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #156                // Field evidence$3$1:Lscalaz/Order;
       7: invokevirtual #160                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #19                 // class scalaz/Equal
      13: areturn

  public scalaz.Ordering order(scalaz.ISet<A>, scalaz.ISet<A>);
    Code:
       0: getstatic     #168                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: pop
       4: getstatic     #173                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
       7: pop
       8: aload_0
       9: getfield      #156                // Field evidence$3$1:Lscalaz/Order;
      12: astore_3
      13: new           #22                 // class scalaz/IListInstances$$anon$4
      16: dup
      17: aconst_null
      18: aload_3
      19: invokespecial #177                // Method scalaz/IListInstances$$anon$4."<init>":(Lscalaz/IListInstances;Lscalaz/Order;)V
      22: aconst_null
      23: astore_3
      24: aload_1
      25: invokevirtual #183                // Method scalaz/ISet.toAscIList:()Lscalaz/IList;
      28: aload_2
      29: invokevirtual #183                // Method scalaz/ISet.toAscIList:()Lscalaz/IList;
      32: invokestatic  #189                // InterfaceMethod scalaz/IListOrder.order$:(Lscalaz/IListOrder;Lscalaz/IList;Lscalaz/IList;)Lscalaz/Ordering;
      35: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #193                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #179                // class scalaz/ISet
       5: aload_2
       6: checkcast     #179                // class scalaz/ISet
       9: invokevirtual #195                // Method equal:(Lscalaz/ISet;Lscalaz/ISet;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #179                // class scalaz/ISet
       5: aload_2
       6: checkcast     #179                // class scalaz/ISet
       9: invokevirtual #197                // Method order:(Lscalaz/ISet;Lscalaz/ISet;)Lscalaz/Ordering;
      12: areturn

  public scalaz.ISetInstances$$anon$2(scalaz.ISetInstances, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #156                // Field evidence$3$1:Lscalaz/Order;
       5: aload_0
       6: invokespecial #202                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #206                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      13: aload_0
      14: invokestatic  #209                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      17: invokestatic  #214                // Method scala/runtime/Statics.releaseFence:()V
      20: return
}
