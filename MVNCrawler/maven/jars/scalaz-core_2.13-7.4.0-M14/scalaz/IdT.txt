Compiled from "IdT.scala"
public final class scalaz.IdT<F, A> implements scala.Product, java.io.Serializable {
  private final F run;

  public static <F, A> scala.Option<F> unapply(scalaz.IdT<F, A>);
    Code:
       0: getstatic     #38                 // Field scalaz/IdT$.MODULE$:Lscalaz/IdT$;
       3: aload_0
       4: invokevirtual #40                 // Method scalaz/IdT$.unapply:(Lscalaz/IdT;)Lscala/Option;
       7: areturn

  public static <F, A> scalaz.IdT<F, A> apply(F);
    Code:
       0: getstatic     #38                 // Field scalaz/IdT$.MODULE$:Lscalaz/IdT$;
       3: pop
       4: new           #2                  // class scalaz/IdT
       7: dup
       8: aload_0
       9: invokespecial #48                 // Method "<init>":(Ljava/lang/Object;)V
      12: areturn

  public static <F> scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, ?, F> iso();
    Code:
       0: getstatic     #38                 // Field scalaz/IdT$.MODULE$:Lscalaz/IdT$;
       3: pop
       4: new           #20                 // class scalaz/IdT$$anon$3
       7: dup
       8: invokespecial #54                 // Method scalaz/IdT$$anon$3."<init>":()V
      11: areturn

  public static scalaz.Cohoist<scalaz.IdT> idTCohoist();
    Code:
       0: getstatic     #38                 // Field scalaz/IdT$.MODULE$:Lscalaz/IdT$;
       3: invokevirtual #59                 // Method scalaz/IdT$.idTCohoist:()Lscalaz/Cohoist;
       6: areturn

  public static <F> scalaz.BindRec<?> idTBindRec(scalaz.BindRec<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/IdT$.MODULE$:Lscalaz/IdT$;
       3: aload_0
       4: invokevirtual #65                 // Method scalaz/IdT$.idTBindRec:(Lscalaz/BindRec;)Lscalaz/BindRec;
       7: areturn

  public static scalaz.Hoist<scalaz.IdT> idTHoist();
    Code:
       0: getstatic     #38                 // Field scalaz/IdT$.MODULE$:Lscalaz/IdT$;
       3: invokevirtual #71                 // Method scalaz/IdT$.idTHoist:()Lscalaz/Hoist;
       6: areturn

  public static <F> scalaz.Traverse<?> idTTraverse(scalaz.Traverse<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/IdT$.MODULE$:Lscalaz/IdT$;
       3: aload_0
       4: invokevirtual #76                 // Method scalaz/IdT$.idTTraverse:(Lscalaz/Traverse;)Lscalaz/Traverse;
       7: areturn

  public static <F, A> scalaz.Order<scalaz.IdT<F, A>> idTOrder(scalaz.Order<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/IdT$.MODULE$:Lscalaz/IdT$;
       3: aload_0
       4: invokevirtual #83                 // Method scalaz/IdT$.idTOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <F> scalaz.Monad<?> idTMonad(scalaz.Monad<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/IdT$.MODULE$:Lscalaz/IdT$;
       3: aload_0
       4: invokevirtual #89                 // Method scalaz/IdT$.idTMonad:(Lscalaz/Monad;)Lscalaz/Monad;
       7: areturn

  public static <F, A> scalaz.Equal<scalaz.IdT<F, A>> idTEqual(scalaz.Equal<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/IdT$.MODULE$:Lscalaz/IdT$;
       3: aload_0
       4: invokevirtual #95                 // Method scalaz/IdT$.idTEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <F> scalaz.Foldable<?> idTFoldable(scalaz.Foldable<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/IdT$.MODULE$:Lscalaz/IdT$;
       3: aload_0
       4: invokevirtual #101                // Method scalaz/IdT$.idTFoldable:(Lscalaz/Foldable;)Lscalaz/Foldable;
       7: areturn

  public static <F> scalaz.Applicative<?> idTApplicative(scalaz.Applicative<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/IdT$.MODULE$:Lscalaz/IdT$;
       3: aload_0
       4: invokevirtual #107                // Method scalaz/IdT$.idTApplicative:(Lscalaz/Applicative;)Lscalaz/Applicative;
       7: areturn

  public static <F> scalaz.Apply<?> idTApply(scalaz.Apply<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/IdT$.MODULE$:Lscalaz/IdT$;
       3: aload_0
       4: invokevirtual #113                // Method scalaz/IdT$.idTApply:(Lscalaz/Apply;)Lscalaz/Apply;
       7: areturn

  public static <F> scalaz.Functor<?> idTFunctor(scalaz.Functor<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/IdT$.MODULE$:Lscalaz/IdT$;
       3: aload_0
       4: invokevirtual #119                // Method scalaz/IdT$.idTFunctor:(Lscalaz/Functor;)Lscalaz/Functor;
       7: areturn

  public static <F> scalaz.Decidable<?> idTDecidable(scalaz.Decidable<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/IdT$.MODULE$:Lscalaz/IdT$;
       3: aload_0
       4: invokevirtual #125                // Method scalaz/IdT$.idTDecidable:(Lscalaz/Decidable;)Lscalaz/Decidable;
       7: areturn

  public static <F> scalaz.Divisible<?> idTDivisible(scalaz.Divisible<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/IdT$.MODULE$:Lscalaz/IdT$;
       3: aload_0
       4: invokevirtual #131                // Method scalaz/IdT$.idTDivisible:(Lscalaz/Divisible;)Lscalaz/Divisible;
       7: areturn

  public scala.collection.Iterator<java.lang.String> productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #139                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public F run();
    Code:
       0: aload_0
       1: getfield      #144                // Field run:Ljava/lang/Object;
       4: areturn

  public <B> scalaz.IdT<F, B> map(scala.Function1<A, B>, scalaz.Functor<F>);
    Code:
       0: new           #2                  // class scalaz/IdT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #150                // Method run:()Ljava/lang/Object;
       9: aload_1
      10: invokeinterface #155,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      15: invokespecial #48                 // Method "<init>":(Ljava/lang/Object;)V
      18: areturn

  public <B> scalaz.IdT<F, B> flatMap(scala.Function1<A, scalaz.IdT<F, B>>, scalaz.Bind<F>);
    Code:
       0: new           #2                  // class scalaz/IdT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #150                // Method run:()Ljava/lang/Object;
       9: aload_1
      10: invokedynamic #179,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      15: invokeinterface #185,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      20: invokeinterface #190,  3          // InterfaceMethod scalaz/Bind.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      25: invokespecial #48                 // Method "<init>":(Ljava/lang/Object;)V
      28: areturn

  public <B> scalaz.IdT<F, B> flatMapF(scala.Function1<A, F>, scalaz.Bind<F>);
    Code:
       0: new           #2                  // class scalaz/IdT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #150                // Method run:()Ljava/lang/Object;
       9: aload_1
      10: invokeinterface #190,  3          // InterfaceMethod scalaz/Bind.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      15: invokespecial #48                 // Method "<init>":(Ljava/lang/Object;)V
      18: areturn

  public <Z> Z foldRight(scala.Function0<Z>, scala.Function2<A, scala.Function0<Z>, Z>, scalaz.Foldable<F>);
    Code:
       0: aload_3
       1: aload_0
       2: invokevirtual #150                // Method run:()Ljava/lang/Object;
       5: aload_1
       6: aload_2
       7: invokeinterface #202,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      12: areturn

  public <G, B> G traverse(scala.Function1<A, G>, scalaz.Traverse<F>, scalaz.Applicative<G>);
    Code:
       0: aload_3
       1: aload_2
       2: aload_0
       3: invokevirtual #150                // Method run:()Ljava/lang/Object;
       6: aload_1
       7: aload_3
       8: invokeinterface #213,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      13: invokedynamic #219,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      18: invokeinterface #222,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      23: areturn

  public <B> scalaz.IdT<F, B> ap(scala.Function0<scalaz.IdT<F, scala.Function1<A, B>>>, scalaz.Apply<F>);
    Code:
       0: new           #2                  // class scalaz/IdT
       3: dup
       4: aload_2
       5: aload_0
       6: invokedynamic #233,  0            // InvokeDynamic #2:apply:(Lscalaz/IdT;)Lscala/Function0;
      11: aload_1
      12: invokedynamic #241,  0            // InvokeDynamic #3:apply:(Lscala/Function0;)Lscala/Function0;
      17: invokeinterface #246,  3          // InterfaceMethod scalaz/Apply.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      22: invokespecial #48                 // Method "<init>":(Ljava/lang/Object;)V
      25: areturn

  public <F, A> scalaz.IdT<F, A> copy(F);
    Code:
       0: new           #2                  // class scalaz/IdT
       3: dup
       4: aload_1
       5: invokespecial #48                 // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  public <F, A> F copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #150                // Method run:()Ljava/lang/Object;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #253                // String IdT
       2: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 0
                     0: 20
               default: 25
          }
      20: aload_0
      21: invokevirtual #150                // Method run:()Ljava/lang/Object;
      24: areturn
      25: iload_1
      26: invokestatic  #263                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      29: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #271                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #274                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/IdT
       4: ireturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 0
                     0: 20
               default: 24
          }
      20: ldc_w         #279                // String run
      23: areturn
      24: iload_1
      25: invokestatic  #263                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      28: checkcast     #281                // class java/lang/String
      31: areturn

  public int hashCode();
    Code:
       0: getstatic     #271                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #286                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #271                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #291                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     39
       5: aload_1
       6: instanceof    #2                  // class scalaz/IdT
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ifeq          41
      20: aload_1
      21: checkcast     #2                  // class scalaz/IdT
      24: astore_2
      25: aload_0
      26: invokevirtual #150                // Method run:()Ljava/lang/Object;
      29: aload_2
      30: invokevirtual #150                // Method run:()Ljava/lang/Object;
      33: invokestatic  #297                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: iconst_0
      42: ireturn

  public static final java.lang.Object $anonfun$flatMap$1(scalaz.IdT);
    Code:
       0: aload_0
       1: invokevirtual #150                // Method run:()Ljava/lang/Object;
       4: areturn

  public static final scalaz.IdT $anonfun$traverse$1(java.lang.Object);
    Code:
       0: new           #2                  // class scalaz/IdT
       3: dup
       4: aload_0
       5: invokespecial #48                 // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  public static final java.lang.Object $anonfun$ap$1(scalaz.IdT);
    Code:
       0: aload_0
       1: invokevirtual #150                // Method run:()Ljava/lang/Object;
       4: areturn

  public static final java.lang.Object $anonfun$ap$2(scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #304,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2                  // class scalaz/IdT
       9: invokevirtual #150                // Method run:()Ljava/lang/Object;
      12: areturn

  public scalaz.IdT(F);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #144                // Field run:Ljava/lang/Object;
       5: aload_0
       6: invokespecial #306                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #310                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      13: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #322,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
