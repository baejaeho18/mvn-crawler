Compiled from "toplevel.scala"
public final class scalaz.StoreT {
  public static <F, A, B> scalaz.IndexedStoreT<F, A, A, B> apply(scala.Tuple2<F, A>);
    Code:
       0: getstatic     #18                 // Field scalaz/StoreT$.MODULE$:Lscalaz/StoreT$;
       3: aload_0
       4: invokevirtual #20                 // Method scalaz/StoreT$.apply:(Lscala/Tuple2;)Lscalaz/IndexedStoreT;
       7: areturn

  public static <A, B> scalaz.IndexedStoreT<java.lang.Object, A, A, B> store(A, scala.Function1<A, B>);
    Code:
       0: getstatic     #18                 // Field scalaz/StoreT$.MODULE$:Lscalaz/StoreT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #28                 // Method scalaz/StoreT$.store:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStoreT;
       8: areturn

  public static <F, A, B> scalaz.IndexedStoreT<F, A, A, B> storeT(scala.Tuple2<F, A>);
    Code:
       0: getstatic     #18                 // Field scalaz/StoreT$.MODULE$:Lscalaz/StoreT$;
       3: aload_0
       4: invokevirtual #33                 // Method scalaz/StoreT$.storeT:(Lscala/Tuple2;)Lscalaz/IndexedStoreT;
       7: areturn

  public static <I, A, B> scalaz.IndexedStoreT<java.lang.Object, I, A, B> indexedStore(I, scala.Function1<A, B>);
    Code:
       0: getstatic     #18                 // Field scalaz/StoreT$.MODULE$:Lscalaz/StoreT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #38                 // Method scalaz/StoreT$.indexedStore:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStoreT;
       8: areturn

  public static <F, I, A, B> scalaz.IndexedStoreT<F, I, A, B> indexedStoreT(scala.Tuple2<F, I>);
    Code:
       0: getstatic     #18                 // Field scalaz/StoreT$.MODULE$:Lscalaz/StoreT$;
       3: aload_0
       4: invokevirtual #42                 // Method scalaz/StoreT$.indexedStoreT:(Lscala/Tuple2;)Lscalaz/IndexedStoreT;
       7: areturn

  public static <F, A, B> scalaz.IsCovariant<?> covariantI();
    Code:
       0: getstatic     #18                 // Field scalaz/StoreT$.MODULE$:Lscalaz/StoreT$;
       3: invokevirtual #47                 // Method scalaz/StoreT$.covariantI:()Lscalaz/IsCovariant;
       6: areturn

  public static <S> scalaz.Monad<?> storeMonad(scalaz.Monoid<S>);
    Code:
       0: getstatic     #18                 // Field scalaz/StoreT$.MODULE$:Lscalaz/StoreT$;
       3: aload_0
       4: invokevirtual #53                 // Method scalaz/StoreT$.storeMonad:(Lscalaz/Monoid;)Lscalaz/Monad;
       7: areturn

  public static <S> scalaz.Cohoist<?> storeTCohoist();
    Code:
       0: getstatic     #18                 // Field scalaz/StoreT$.MODULE$:Lscalaz/StoreT$;
       3: invokevirtual #59                 // Method scalaz/StoreT$.storeTCohoist:()Lscalaz/Cohoist;
       6: areturn

  public static <F, A> scalaz.ComonadStore<?, A> storeTComonadStore(scalaz.Comonad<F>);
    Code:
       0: getstatic     #18                 // Field scalaz/StoreT$.MODULE$:Lscalaz/StoreT$;
       3: aload_0
       4: invokevirtual #65                 // Method scalaz/StoreT$.storeTComonadStore:(Lscalaz/Comonad;)Lscalaz/ComonadStore;
       7: areturn

  public static <F, A> scalaz.Comonad<?> storeTComonad(scalaz.Comonad<F>);
    Code:
       0: getstatic     #18                 // Field scalaz/StoreT$.MODULE$:Lscalaz/StoreT$;
       3: aload_0
       4: invokevirtual #71                 // Method scalaz/StoreT$.storeTComonad:(Lscalaz/Comonad;)Lscalaz/Comonad;
       7: areturn

  public static <F, A> scalaz.Cobind<?> storeTCobind(scalaz.Cobind<F>);
    Code:
       0: getstatic     #18                 // Field scalaz/StoreT$.MODULE$:Lscalaz/StoreT$;
       3: aload_0
       4: invokevirtual #76                 // Method scalaz/StoreT$.storeTCobind:(Lscalaz/Cobind;)Lscalaz/Cobind;
       7: areturn

  public static <F, I, A> scalaz.Functor<?> indexedStoreTFunctorRight(scalaz.Functor<F>);
    Code:
       0: getstatic     #18                 // Field scalaz/StoreT$.MODULE$:Lscalaz/StoreT$;
       3: aload_0
       4: invokevirtual #82                 // Method scalaz/StoreT$.indexedStoreTFunctorRight:(Lscalaz/Functor;)Lscalaz/Functor;
       7: areturn

  public static <F, A> scalaz.Bifunctor<?> indexedStoreTBifunctor(scalaz.Functor<F>);
    Code:
       0: getstatic     #18                 // Field scalaz/StoreT$.MODULE$:Lscalaz/StoreT$;
       3: aload_0
       4: invokevirtual #88                 // Method scalaz/StoreT$.indexedStoreTBifunctor:(Lscalaz/Functor;)Lscalaz/Bifunctor;
       7: areturn

  public static <F, A, B> scalaz.Functor<?> indexedStoreTFunctorLeft();
    Code:
       0: getstatic     #18                 // Field scalaz/StoreT$.MODULE$:Lscalaz/StoreT$;
       3: invokevirtual #93                 // Method scalaz/StoreT$.indexedStoreTFunctorLeft:()Lscalaz/Functor;
       6: areturn

  public static <F, I, B> scalaz.Contravariant<?> indexedStoreTContravariant(scalaz.Functor<F>);
    Code:
       0: getstatic     #18                 // Field scalaz/StoreT$.MODULE$:Lscalaz/StoreT$;
       3: aload_0
       4: invokevirtual #98                 // Method scalaz/StoreT$.indexedStoreTContravariant:(Lscalaz/Functor;)Lscalaz/Contravariant;
       7: areturn
}
