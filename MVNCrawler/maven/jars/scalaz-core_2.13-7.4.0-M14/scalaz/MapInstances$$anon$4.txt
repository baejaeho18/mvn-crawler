Compiled from "Map.scala"
public final class scalaz.MapInstances$$anon$4 implements scalaz.MapEqual<A, B> {
  private scalaz.syntax.EqualSyntax<scalaz.$eq$eq$greater$greater<A, B>> equalSyntax;

  private final scalaz.Equal evidence$4$1;

  private final scalaz.Equal evidence$5$1;

  public final boolean equal(scalaz.$eq$eq$greater$greater<A, B>, scalaz.$eq$eq$greater$greater<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #33                 // InterfaceMethod scalaz/MapEqual.equal$:(Lscalaz/MapEqual;Lscalaz/$eq$eq$greater$greater;Lscalaz/$eq$eq$greater$greater;)Z
       6: ireturn

  public <G> scalaz.Equal<G> contramap(scala.Function1<G, scalaz.$eq$eq$greater$greater<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #44                 // InterfaceMethod scalaz/Equal.contramap$:(Lscalaz/Equal;Lscala/Function1;)Lscalaz/Equal;
       5: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #51                 // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.$eq$eq$greater$greater<A, B>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #58                 // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.EqualSyntax<scalaz.$eq$eq$greater$greater<A, B>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #62                 // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.$eq$eq$greater$greater<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #62                 // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Equal<A> A();
    Code:
       0: getstatic     #75                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #77                 // Field evidence$4$1:Lscalaz/Equal;
       7: invokevirtual #81                 // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #17                 // class scalaz/Equal
      13: areturn

  public scalaz.Equal<B> B();
    Code:
       0: getstatic     #75                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #85                 // Field evidence$5$1:Lscalaz/Equal;
       7: invokevirtual #81                 // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #17                 // class scalaz/Equal
      13: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #88                 // class scalaz/$eq$eq$greater$greater
       5: aload_2
       6: checkcast     #88                 // class scalaz/$eq$eq$greater$greater
       9: invokevirtual #90                 // Method equal:(Lscalaz/$eq$eq$greater$greater;Lscalaz/$eq$eq$greater$greater;)Z
      12: ireturn

  public scalaz.MapInstances$$anon$4(scalaz.MapInstances, scalaz.Equal, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #77                 // Field evidence$4$1:Lscalaz/Equal;
       5: aload_0
       6: aload_3
       7: putfield      #85                 // Field evidence$5$1:Lscalaz/Equal;
      10: aload_0
      11: invokespecial #97                 // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #101                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      18: invokestatic  #106                // Method scala/runtime/Statics.releaseFence:()V
      21: return
}
