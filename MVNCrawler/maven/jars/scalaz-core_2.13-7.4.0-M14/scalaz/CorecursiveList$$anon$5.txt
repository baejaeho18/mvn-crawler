Compiled from "CorecursiveList.scala"
public final class scalaz.CorecursiveList$$anon$5 implements scalaz.MonadPlus<scalaz.CorecursiveList>, scalaz.Alt<scalaz.CorecursiveList>, scalaz.Foldable$FromFoldr<scalaz.CorecursiveList>, scalaz.IsEmpty<scalaz.CorecursiveList>, scalaz.Align<scalaz.CorecursiveList>, scalaz.Zip<scalaz.CorecursiveList> {
  private scalaz.syntax.ZipSyntax<scalaz.CorecursiveList> zipSyntax;

  private scalaz.syntax.AlignSyntax<scalaz.CorecursiveList> alignSyntax;

  private scalaz.syntax.IsEmptySyntax<scalaz.CorecursiveList> isEmptySyntax;

  private scalaz.syntax.FoldableSyntax<scalaz.CorecursiveList> foldableSyntax;

  private scalaz.syntax.AltSyntax<scalaz.CorecursiveList> altSyntax;

  private scalaz.syntax.InvariantAltSyntax<scalaz.CorecursiveList> invariantAltSyntax;

  private scalaz.syntax.MonadPlusSyntax<scalaz.CorecursiveList> monadPlusSyntax;

  private scalaz.syntax.ApplicativePlusSyntax<scalaz.CorecursiveList> applicativePlusSyntax;

  private scalaz.syntax.PlusEmptySyntax<scalaz.CorecursiveList> plusEmptySyntax;

  private scalaz.syntax.PlusSyntax<scalaz.CorecursiveList> plusSyntax;

  private scalaz.syntax.MonadSyntax<scalaz.CorecursiveList> monadSyntax;

  private scalaz.syntax.BindSyntax<scalaz.CorecursiveList> bindSyntax;

  private scalaz.syntax.ApplicativeSyntax<scalaz.CorecursiveList> applicativeSyntax;

  private scalaz.syntax.InvariantApplicativeSyntax<scalaz.CorecursiveList> invariantApplicativeSyntax;

  private scalaz.syntax.ApplySyntax<scalaz.CorecursiveList> applySyntax;

  private scalaz.syntax.FunctorSyntax<scalaz.CorecursiveList> functorSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<scalaz.CorecursiveList> invariantFunctorSyntax;

  public <G> scalaz.Zip<?> compose(scalaz.Functor<scalaz.CorecursiveList>, scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #181                // InterfaceMethod scalaz/Zip.compose$:(Lscalaz/Zip;Lscalaz/Functor;Lscalaz/Zip;)Lscalaz/Zip;
       6: areturn

  public <G> scalaz.Zip<?> product(scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #192                // InterfaceMethod scalaz/Zip.product$:(Lscalaz/Zip;Lscalaz/Zip;)Lscalaz/Zip;
       5: areturn

  public java.lang.Object zipWith(scala.Function0, scala.Function0, scala.Function2, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #202                // InterfaceMethod scalaz/Zip.zipWith$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Functor;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apzip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #211                // InterfaceMethod scalaz/Zip.apzip$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apzipPL(scala.Function0, scala.Function0, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #218                // InterfaceMethod scalaz/Zip.apzipPL$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scalaz.Apply<scalaz.CorecursiveList> ap(scalaz.Functor<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #226                // InterfaceMethod scalaz/Zip.ap$:(Lscalaz/Zip;Lscalaz/Functor;)Lscalaz/Apply;
       5: areturn

  public scalaz.Zip<scalaz.CorecursiveList>.ZipLaw zipLaw();
    Code:
       0: aload_0
       1: invokestatic  #233                // InterfaceMethod scalaz/Zip.zipLaw$:(Lscalaz/Zip;)Lscalaz/Zip$ZipLaw;
       4: areturn

  public <G> scalaz.Align<?> product(scalaz.Align<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #238                // InterfaceMethod scalaz/Align.product$:(Lscalaz/Align;Lscalaz/Align;)Lscalaz/Align;
       5: areturn

  public java.lang.Object align(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #246                // InterfaceMethod scalaz/Align.align$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public <A, B, C> scala.Function2<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>> padWith(scala.Function2<scala.Option<A>, scala.Option<B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #254                // InterfaceMethod scalaz/Align.padWith$:(Lscalaz/Align;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B> scala.Function2<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<scala.Tuple2<scala.Option<A>, scala.Option<B>>>> pad();
    Code:
       0: aload_0
       1: invokestatic  #261                // InterfaceMethod scalaz/Align.pad$:(Lscalaz/Align;)Lscala/Function2;
       4: areturn

  public java.lang.Object merge(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #270                // InterfaceMethod scalaz/Align.merge$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object alignSwap(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #275                // InterfaceMethod scalaz/Align.alignSwap$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignA(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #279                // InterfaceMethod scalaz/Align.alignA$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignB(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #283                // InterfaceMethod scalaz/Align.alignB$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThis(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #287                // InterfaceMethod scalaz/Align.alignThis$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThat(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #291                // InterfaceMethod scalaz/Align.alignThat$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignBoth(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #295                // InterfaceMethod scalaz/Align.alignBoth$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scalaz.Align<scalaz.CorecursiveList>.AlignLaw alignLaw();
    Code:
       0: aload_0
       1: invokestatic  #302                // InterfaceMethod scalaz/Align.alignLaw$:(Lscalaz/Align;)Lscalaz/Align$AlignLaw;
       4: areturn

  public scalaz.IsEmpty<scalaz.CorecursiveList>.IsEmptyLaw isEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #309                // InterfaceMethod scalaz/IsEmpty.isEmptyLaw$:(Lscalaz/IsEmpty;)Lscalaz/IsEmpty$IsEmptyLaw;
       4: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #315                // InterfaceMethod scalaz/Foldable$FromFoldr.foldMap$:(Lscalaz/Foldable$FromFoldr;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #322                // InterfaceMethod scalaz/Foldable.foldMap1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #327                // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #336                // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #339                // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #346                // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #354                // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #361                // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #369                // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #377                // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #384                // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #390                // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #397                // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #404                // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #410                // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #417                // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #424                // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #430                // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #436                // InterfaceMethod scalaz/Foldable.foldMapRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #442                // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #448                // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #454                // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #458                // InterfaceMethod scalaz/Foldable.foldMapLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #462                // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #466                // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #472                // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #476                // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #483                // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #487                // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #491                // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #497                // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #501                // InterfaceMethod scalaz/Foldable.length$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #509                // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #516                // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #522                // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #528                // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #534                // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scala.collection.immutable.LazyList toLazyList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #540                // InterfaceMethod scalaz/Foldable.toLazyList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/LazyList;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #546                // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #552                // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #559                // InterfaceMethod scalaz/Foldable.all$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #563                // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #567                // InterfaceMethod scalaz/Foldable.any$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #571                // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #577                // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #584                // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #592                // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #597                // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #602                // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #607                // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #612                // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #617                // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #622                // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #627                // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #632                // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #636                // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #640                // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #644                // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #650                // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #657                // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #661                // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #668                // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/$less$colon$less;)J
       6: lreturn

  public boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #675                // InterfaceMethod scalaz/Foldable.empty$:(Lscalaz/Foldable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #682                // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #689                // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #695                // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #702                // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #709                // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #713                // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #719                // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #725                // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #730                // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #737                // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scalaz.CorecursiveList>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #745                // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object optional(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #751                // InterfaceMethod scalaz/Alt.optional$:(Lscalaz/Alt;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object altly1(scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #757                // InterfaceMethod scalaz/Alt.altly1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object altly2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #763                // InterfaceMethod scalaz/Alt.altly2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object altly3(scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #770                // InterfaceMethod scalaz/Alt.altly3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object altly4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #777                // InterfaceMethod scalaz/Alt.altly4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object either2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #782                // InterfaceMethod scalaz/Alt.either2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #788                // InterfaceMethod scalaz/Alt.altlying1$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #794                // InterfaceMethod scalaz/Alt.altlying2$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object altlying3(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #800                // InterfaceMethod scalaz/Alt.altlying3$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object altlying4(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #806                // InterfaceMethod scalaz/Alt.altlying4$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #813                // InterfaceMethod scalaz/Alt.xcoproduct1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xcoproduct2(scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #819                // InterfaceMethod scalaz/Alt.xcoproduct2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xcoproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #825                // InterfaceMethod scalaz/Alt.xcoproduct3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #831                // InterfaceMethod scalaz/Alt.xcoproduct4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public scalaz.Alt<scalaz.CorecursiveList>.AltLaw altLaw();
    Code:
       0: aload_0
       1: invokestatic  #838                // InterfaceMethod scalaz/Alt.altLaw$:(Lscalaz/Alt;)Lscalaz/Alt$AltLaw;
       4: areturn

  public final java.lang.Object xcoderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #846                // InterfaceMethod scalaz/InvariantAlt.xcoderiving1$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xcoderiving2(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #852                // InterfaceMethod scalaz/InvariantAlt.xcoderiving2$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xcoderiving3(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #858                // InterfaceMethod scalaz/InvariantAlt.xcoderiving3$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xcoderiving4(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #864                // InterfaceMethod scalaz/InvariantAlt.xcoderiving4$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object unite(java.lang.Object, scalaz.Foldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #872                // InterfaceMethod scalaz/MonadPlus.unite$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Foldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object lefts(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #878                // InterfaceMethod scalaz/MonadPlus.lefts$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object rights(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #882                // InterfaceMethod scalaz/MonadPlus.rights$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 separate(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #888                // InterfaceMethod scalaz/MonadPlus.separate$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Lscala/Tuple2;
       6: areturn

  public final java.lang.Object uniteU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #894                // InterfaceMethod scalaz/MonadPlus.uniteU$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.MonadPlus<?> product(scalaz.MonadPlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #899                // InterfaceMethod scalaz/MonadPlus.product$:(Lscalaz/MonadPlus;Lscalaz/MonadPlus;)Lscalaz/MonadPlus;
       5: areturn

  public scalaz.MonadPlus<scalaz.CorecursiveList>.MonadPlusLaw monadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #907                // InterfaceMethod scalaz/MonadPlus.monadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$MonadPlusLaw;
       4: areturn

  public scalaz.MonadPlus<scalaz.CorecursiveList>.StrongMonadPlusLaw strongMonadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #914                // InterfaceMethod scalaz/MonadPlus.strongMonadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$StrongMonadPlusLaw;
       4: areturn

  public <G> scalaz.ApplicativePlus<?> compose(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #921                // InterfaceMethod scalaz/ApplicativePlus.compose$:(Lscalaz/ApplicativePlus;Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public <G> scalaz.ApplicativePlus<?> product(scalaz.ApplicativePlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #926                // InterfaceMethod scalaz/ApplicativePlus.product$:(Lscalaz/ApplicativePlus;Lscalaz/ApplicativePlus;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #933                // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #937                // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #942                // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #946                // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<scalaz.CorecursiveList<A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #953                // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<scalaz.CorecursiveList>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #960                // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S$, A> scalaz.Maybe<scalaz.CorecursiveList<A>> unfoldlPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<S$, scalaz.CorecursiveList<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #967                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S$, A> scalaz.Maybe<scalaz.CorecursiveList<A>> unfoldrPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scalaz.CorecursiveList<A>, S$>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #972                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #977                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.CorecursiveList<A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #985                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<scalaz.CorecursiveList>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #992                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public java.lang.Object whileM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #999                // InterfaceMethod scalaz/Monad.whileM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object whileM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1005               // InterfaceMethod scalaz/Monad.whileM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object untilM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1010               // InterfaceMethod scalaz/Monad.untilM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object untilM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1014               // InterfaceMethod scalaz/Monad.untilM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateWhile(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1019               // InterfaceMethod scalaz/Monad.iterateWhile$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateUntil(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1023               // InterfaceMethod scalaz/Monad.iterateUntil$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Monad<?> product(scalaz.Monad<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1028               // InterfaceMethod scalaz/Monad.product$:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public scalaz.Monad<scalaz.CorecursiveList>.MonadLaw monadLaw();
    Code:
       0: aload_0
       1: invokestatic  #1035               // InterfaceMethod scalaz/Monad.monadLaw$:(Lscalaz/Monad;)Lscalaz/Monad$MonadLaw;
       4: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1041               // InterfaceMethod scalaz/Bind.apply2$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1046               // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1054               // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1059               // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Bind<?> product(scalaz.Bind<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1064               // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<scalaz.CorecursiveList>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #1072               // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1078               // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1084               // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1092               // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #1099               // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1103               // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1108               // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1114               // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1120               // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1127               // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #1135               // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #1139               // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.$eq$eq$greater$greater, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1147               // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1153               // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1158               // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #1165               // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #1170               // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Applicative<?> product(scalaz.Applicative<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1174               // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scalaz.CorecursiveList> flip();
    Code:
       0: aload_0
       1: invokestatic  #1179               // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1187               // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scalaz.CorecursiveList>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #1194               // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1201               // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1206               // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1212               // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1218               // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1224               // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1230               // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1237               // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1242               // InterfaceMethod scalaz/Apply.forever$:(Lscalaz/Apply;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <S$, A, B> scalaz.Maybe<scalaz.CorecursiveList<B>> unfoldrOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scalaz.CorecursiveList<A>, S$>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1250               // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G$> scalaz.Apply<?> compose(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1256               // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G$> scalaz.Apply<?> product(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1259               // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>> apF(scala.Function0<scalaz.CorecursiveList<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1266               // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1272               // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1279               // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1286               // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1293               // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1300               // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1307               // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1314               // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1320               // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1326               // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1332               // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1339               // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1346               // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1353               // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #1361               // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #1369               // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #1377               // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #1385               // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1391               // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1397               // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1403               // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1409               // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1414               // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1420               // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1426               // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1432               // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1438               // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1445               // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1452               // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R$> scala.Function5<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>, scalaz.CorecursiveList<R$>> lift5(scala.Function5<A, B, C, D, E, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1459               // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R$> scala.Function6<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>, scalaz.CorecursiveList<FF>, scalaz.CorecursiveList<R$>> lift6(scala.Function6<A, B, C, D, E, FF, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1466               // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G$, R$> scala.Function7<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>, scalaz.CorecursiveList<FF>, scalaz.CorecursiveList<G$>, scalaz.CorecursiveList<R$>> lift7(scala.Function7<A, B, C, D, E, FF, G$, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1473               // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, R$> scala.Function8<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>, scalaz.CorecursiveList<FF>, scalaz.CorecursiveList<G$>, scalaz.CorecursiveList<H>, scalaz.CorecursiveList<R$>> lift8(scala.Function8<A, B, C, D, E, FF, G$, H, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1480               // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, R$> scala.Function9<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>, scalaz.CorecursiveList<FF>, scalaz.CorecursiveList<G$>, scalaz.CorecursiveList<H>, scalaz.CorecursiveList<I>, scalaz.CorecursiveList<R$>> lift9(scala.Function9<A, B, C, D, E, FF, G$, H, I, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1487               // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, R$> scala.Function10<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>, scalaz.CorecursiveList<FF>, scalaz.CorecursiveList<G$>, scalaz.CorecursiveList<H>, scalaz.CorecursiveList<I>, scalaz.CorecursiveList<J>, scalaz.CorecursiveList<R$>> lift10(scala.Function10<A, B, C, D, E, FF, G$, H, I, J, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1494               // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, R$> scala.Function11<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>, scalaz.CorecursiveList<FF>, scalaz.CorecursiveList<G$>, scalaz.CorecursiveList<H>, scalaz.CorecursiveList<I>, scalaz.CorecursiveList<J>, scalaz.CorecursiveList<K>, scalaz.CorecursiveList<R$>> lift11(scala.Function11<A, B, C, D, E, FF, G$, H, I, J, K, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1501               // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, L, R$> scala.Function12<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>, scalaz.CorecursiveList<FF>, scalaz.CorecursiveList<G$>, scalaz.CorecursiveList<H>, scalaz.CorecursiveList<I>, scalaz.CorecursiveList<J>, scalaz.CorecursiveList<K>, scalaz.CorecursiveList<L>, scalaz.CorecursiveList<R$>> lift12(scala.Function12<A, B, C, D, E, FF, G$, H, I, J, K, L, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1508               // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1512               // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1516               // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #1521               // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1528               // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scalaz.CorecursiveList>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #1535               // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1541               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1546               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1553               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1558               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1562               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1566               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1571               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1575               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1579               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1585               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G$> scalaz.Functor<?> compose(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1591               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G$> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1598               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G$> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1604               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G$> scalaz.Functor<?> product(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1607               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1614               // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<scalaz.CorecursiveList>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1622               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1629               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1637               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scalaz.CorecursiveList>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1645               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.ZipSyntax<scalaz.CorecursiveList> zipSyntax();
    Code:
       0: aload_0
       1: getfield      #1649               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       4: areturn

  public void scalaz$Zip$_setter_$zipSyntax_$eq(scalaz.syntax.ZipSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1649               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       5: return

  public scalaz.syntax.AlignSyntax<scalaz.CorecursiveList> alignSyntax();
    Code:
       0: aload_0
       1: getfield      #1657               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       4: areturn

  public void scalaz$Align$_setter_$alignSyntax_$eq(scalaz.syntax.AlignSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1657               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       5: return

  public scalaz.syntax.IsEmptySyntax<scalaz.CorecursiveList> isEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1664               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       4: areturn

  public void scalaz$IsEmpty$_setter_$isEmptySyntax_$eq(scalaz.syntax.IsEmptySyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1664               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scalaz.CorecursiveList> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #1671               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1671               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.AltSyntax<scalaz.CorecursiveList> altSyntax();
    Code:
       0: aload_0
       1: getfield      #1678               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       4: areturn

  public void scalaz$Alt$_setter_$altSyntax_$eq(scalaz.syntax.AltSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1678               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       5: return

  public scalaz.syntax.InvariantAltSyntax<scalaz.CorecursiveList> invariantAltSyntax();
    Code:
       0: aload_0
       1: getfield      #1685               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       4: areturn

  public void scalaz$InvariantAlt$_setter_$invariantAltSyntax_$eq(scalaz.syntax.InvariantAltSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1685               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       5: return

  public scalaz.syntax.MonadPlusSyntax<scalaz.CorecursiveList> monadPlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1692               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       4: areturn

  public void scalaz$MonadPlus$_setter_$monadPlusSyntax_$eq(scalaz.syntax.MonadPlusSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1692               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       5: return

  public scalaz.syntax.ApplicativePlusSyntax<scalaz.CorecursiveList> applicativePlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1699               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       4: areturn

  public void scalaz$ApplicativePlus$_setter_$applicativePlusSyntax_$eq(scalaz.syntax.ApplicativePlusSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1699               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       5: return

  public scalaz.syntax.PlusEmptySyntax<scalaz.CorecursiveList> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1706               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1706               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<scalaz.CorecursiveList> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #1713               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1713               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.syntax.MonadSyntax<scalaz.CorecursiveList> monadSyntax();
    Code:
       0: aload_0
       1: getfield      #1720               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       4: areturn

  public void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1720               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       5: return

  public scalaz.syntax.BindSyntax<scalaz.CorecursiveList> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #1727               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1727               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scalaz.CorecursiveList> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1734               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1734               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scalaz.CorecursiveList> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1741               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1741               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scalaz.CorecursiveList> applySyntax();
    Code:
       0: aload_0
       1: getfield      #1748               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1748               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scalaz.CorecursiveList> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #1755               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1755               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scalaz.CorecursiveList> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #1762               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1762               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A, B> scalaz.CorecursiveList<B> map(scalaz.CorecursiveList<A>, scala.Function1<A, B>);
    Code:
       0: getstatic     #1771               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: pop
       4: aload_1
       5: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
       8: aload_1
       9: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      12: aload_2
      13: invokedynamic #1798,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      18: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      23: astore        4
      25: astore_3
      26: new           #59                 // class scalaz/CorecursiveList$CorecursiveListImpl
      29: dup
      30: aload_3
      31: aload         4
      33: invokespecial #1807               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      36: areturn

  public <A, B> scalaz.CorecursiveList<B> ap(scala.Function0<scalaz.CorecursiveList<A>>, scala.Function0<scalaz.CorecursiveList<scala.Function1<A, B>>>);
    Code:
       0: aload_1
       1: invokeinterface #1818,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #61                 // class scalaz/CorecursiveList
       9: astore_3
      10: aload_2
      11: invokeinterface #1818,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: checkcast     #61                 // class scalaz/CorecursiveList
      19: astore        4
      21: getstatic     #1771               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
      24: pop
      25: new           #1820               // class scala/Tuple2
      28: dup
      29: aload_3
      30: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      33: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      36: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      39: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      42: aload         4
      44: aload_3
      45: invokedynamic #1840,  0           // InvokeDynamic #1:apply:(Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Lscala/Function2;
      50: invokeinterface #1845,  1         // InterfaceMethod scala/Function2.tupled:()Lscala/Function1;
      55: astore        6
      57: astore        5
      59: new           #59                 // class scalaz/CorecursiveList$CorecursiveListImpl
      62: dup
      63: aload         5
      65: aload         6
      67: invokespecial #1807               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      70: areturn

  public <A, B> scalaz.CorecursiveList<B> bind(scalaz.CorecursiveList<A>, scala.Function1<A, scalaz.CorecursiveList<B>>);
    Code:
       0: getstatic     #1771               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: pop
       4: new           #1820               // class scala/Tuple2
       7: dup
       8: aload_1
       9: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      12: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      15: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      18: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      21: aload_1
      22: aload_2
      23: invokedynamic #1857,  0           // InvokeDynamic #2:apply:(Lscalaz/CorecursiveList;Lscala/Function1;)Lscala/Function1;
      28: astore        4
      30: astore_3
      31: new           #59                 // class scalaz/CorecursiveList$CorecursiveListImpl
      34: dup
      35: aload_3
      36: aload         4
      38: invokespecial #1807               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      41: areturn

  public <A> scalaz.CorecursiveList<A> filter(scalaz.CorecursiveList<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: getstatic     #1771               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: pop
       4: aload_1
       5: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokedynamic #1869,  0           // InvokeDynamic #3:apply:(Lscalaz/CorecursiveList$$anon$5;Lscalaz/CorecursiveList;Lscala/Function1;)Lscala/Function1;
      16: astore        4
      18: astore_3
      19: new           #59                 // class scalaz/CorecursiveList$CorecursiveListImpl
      22: dup
      23: aload_3
      24: aload         4
      26: invokespecial #1807               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      29: areturn

  public <A> scalaz.CorecursiveList<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #1771               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: pop
       4: iconst_0
       5: invokestatic  #1878               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: aload_1
       9: invokedynamic #1885,  0           // InvokeDynamic #4:apply:(Lscala/Function0;)Lscala/Function1;
      14: astore_3
      15: astore_2
      16: new           #59                 // class scalaz/CorecursiveList$CorecursiveListImpl
      19: dup
      20: aload_2
      21: aload_3
      22: invokespecial #1807               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      25: areturn

  public <A, B> B foldRight(scalaz.CorecursiveList<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
       4: astore        4
       6: aload_1
       7: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      10: aload         4
      12: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #90                 // class scalaz/Maybe
      20: dup
      21: ifnonnull     26
      24: aconst_null
      25: athrow
      26: astore        5
      28: aload         5
      30: instanceof    #96                 // class scalaz/Maybe$Just
      33: ifeq          96
      36: aload         5
      38: checkcast     #96                 // class scalaz/Maybe$Just
      41: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      44: checkcast     #1820               // class scala/Tuple2
      47: astore        6
      49: aload         6
      51: ifnull        87
      54: aload         6
      56: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
      59: astore        7
      61: aload         6
      63: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      66: astore        8
      68: aload_3
      69: aload         8
      71: aload         7
      73: aload_1
      74: aload_3
      75: aload_2
      76: invokedynamic #1908,  0           // InvokeDynamic #5:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscala/Function2;Lscala/Function0;)Lscala/Function0;
      81: invokeinterface #1910,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: areturn
      87: new           #1912               // class scala/MatchError
      90: dup
      91: aconst_null
      92: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      95: athrow
      96: aload         5
      98: instanceof    #88                 // class scalaz/Maybe$Empty
     101: ifeq          111
     104: aload_2
     105: invokeinterface #1818,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
     110: areturn
     111: new           #1912               // class scala/MatchError
     114: dup
     115: aload         5
     117: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     120: athrow

  public <A, B> B foldLeft(scalaz.CorecursiveList<A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
       5: astore        5
       7: astore        4
       9: aload_1
      10: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      13: aload         5
      15: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #90                 // class scalaz/Maybe
      23: astore        6
      25: aload         6
      27: instanceof    #88                 // class scalaz/Maybe$Empty
      30: ifeq          36
      33: aload         4
      35: areturn
      36: aload         6
      38: instanceof    #96                 // class scalaz/Maybe$Just
      41: ifeq          95
      44: aload         6
      46: checkcast     #96                 // class scalaz/Maybe$Just
      49: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      52: checkcast     #1820               // class scala/Tuple2
      55: astore        7
      57: aload         7
      59: ifnull        95
      62: aload         7
      64: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
      67: astore        8
      69: aload         7
      71: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      74: astore        9
      76: aload_3
      77: aload         4
      79: aload         9
      81: invokeinterface #1910,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: aload         8
      88: astore        5
      90: astore        4
      92: goto          9
      95: new           #1912               // class scala/MatchError
      98: dup
      99: aload         6
     101: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     104: athrow

  public <A> scala.Option<A> index(scalaz.CorecursiveList<A>, int);
    Code:
       0: iload_2
       1: iconst_0
       2: if_icmpge     9
       5: getstatic     #1934               // Field scala/None$.MODULE$:Lscala/None$;
       8: areturn
       9: aload_0
      10: iload_2
      11: aload_1
      12: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      15: aload_1
      16: invokespecial #1938               // Method loop$1:(ILjava/lang/Object;Lscalaz/CorecursiveList;)Lscala/Option;
      19: areturn

  public <A> scalaz.CorecursiveList<A> empty();
    Code:
       0: getstatic     #1771               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: pop
       4: getstatic     #1946               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       7: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      10: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      13: invokedynamic #1956,  0           // InvokeDynamic #6:apply:(Lscalaz/Maybe;)Lscala/Function1;
      18: astore_2
      19: astore_1
      20: new           #59                 // class scalaz/CorecursiveList$CorecursiveListImpl
      23: dup
      24: aload_1
      25: aload_2
      26: invokespecial #1807               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      29: areturn

  public <A> scalaz.CorecursiveList<A> plus(scalaz.CorecursiveList<A>, scala.Function0<scalaz.CorecursiveList<A>>);
    Code:
       0: getstatic     #1966               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
       3: pop
       4: new           #1968               // class scalaz/Need
       7: dup
       8: aload_2
       9: invokespecial #1971               // Method scalaz/Need."<init>":(Lscala/Function0;)V
      12: astore_3
      13: getstatic     #1771               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
      16: pop
      17: getstatic     #1976               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      20: pop
      21: aload_1
      22: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      25: astore        6
      27: new           #1978               // class scalaz/$minus$bslash$div
      30: dup
      31: aload         6
      33: invokespecial #1979               // Method scalaz/$minus$bslash$div."<init>":(Ljava/lang/Object;)V
      36: aconst_null
      37: astore        6
      39: aload_1
      40: aload_3
      41: invokedynamic #1989,  0           // InvokeDynamic #7:apply:(Lscalaz/CorecursiveList;Lscalaz/Need;)Lscala/Function1;
      46: astore        5
      48: astore        4
      50: new           #59                 // class scalaz/CorecursiveList$CorecursiveListImpl
      53: dup
      54: aload         4
      56: aload         5
      58: invokespecial #1807               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      61: areturn

  public <A> scalaz.CorecursiveList<A> alt(scala.Function0<scalaz.CorecursiveList<A>>, scala.Function0<scalaz.CorecursiveList<A>>);
    Code:
       0: aload_1
       1: invokeinterface #1818,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #61                 // class scalaz/CorecursiveList
       9: astore_3
      10: getstatic     #1966               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
      13: pop
      14: new           #1968               // class scalaz/Need
      17: dup
      18: aload_2
      19: invokespecial #1971               // Method scalaz/Need."<init>":(Lscala/Function0;)V
      22: astore        4
      24: getstatic     #1771               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
      27: pop
      28: getstatic     #1976               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      31: pop
      32: aload_3
      33: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      36: astore        7
      38: new           #1978               // class scalaz/$minus$bslash$div
      41: dup
      42: aload         7
      44: invokespecial #1979               // Method scalaz/$minus$bslash$div."<init>":(Ljava/lang/Object;)V
      47: aconst_null
      48: astore        7
      50: aload_3
      51: aload         4
      53: invokedynamic #1989,  0           // InvokeDynamic #7:apply:(Lscalaz/CorecursiveList;Lscalaz/Need;)Lscala/Function1;
      58: astore        6
      60: astore        5
      62: new           #59                 // class scalaz/CorecursiveList$CorecursiveListImpl
      65: dup
      66: aload         5
      68: aload         6
      70: invokespecial #1807               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      73: areturn

  public <A> boolean isEmpty(scalaz.CorecursiveList<A>);
    Code:
       0: aload_1
       1: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_1
       5: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
       8: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #90                 // class scalaz/Maybe
      16: invokevirtual #2005               // Method scalaz/Maybe.isEmpty:()Z
      19: ireturn

  public <A, B, C> scala.Function2<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>> alignWith(scala.Function1<scalaz.$bslash$amp$div<A, B>, C>);
    Code:
       0: aload_1
       1: invokedynamic #2017,  0           // InvokeDynamic #8:apply:(Lscala/Function1;)Lscala/Function2;
       6: areturn

  public <A, B> scalaz.CorecursiveList<scala.Tuple2<A, B>> zip(scala.Function0<scalaz.CorecursiveList<A>>, scala.Function0<scalaz.CorecursiveList<B>>);
    Code:
       0: aload_1
       1: invokeinterface #1818,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #61                 // class scalaz/CorecursiveList
       9: astore_3
      10: aload_2
      11: invokeinterface #1818,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: checkcast     #61                 // class scalaz/CorecursiveList
      19: astore        4
      21: getstatic     #1771               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
      24: pop
      25: new           #1820               // class scala/Tuple2
      28: dup
      29: aload_3
      30: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      33: aload         4
      35: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      38: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      41: aload_3
      42: aload         4
      44: invokedynamic #2027,  0           // InvokeDynamic #9:apply:(Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Lscala/Function1;
      49: astore        6
      51: astore        5
      53: new           #59                 // class scalaz/CorecursiveList$CorecursiveListImpl
      56: dup
      57: aload         5
      59: aload         6
      61: invokespecial #1807               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      64: areturn

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #2032               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #2035               // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.Applicative compose(scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2037               // Method compose:(Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object zip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2039               // Method zip:(Lscala/Function0;Lscala/Function0;)Lscalaz/CorecursiveList;
       6: areturn

  public boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #61                 // class scalaz/CorecursiveList
       5: invokevirtual #2041               // Method isEmpty:(Lscalaz/CorecursiveList;)Z
       8: ireturn

  public java.lang.Object alt(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2043               // Method alt:(Lscala/Function0;Lscala/Function0;)Lscalaz/CorecursiveList;
       6: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #61                 // class scalaz/CorecursiveList
       5: aload_2
       6: invokevirtual #2045               // Method plus:(Lscalaz/CorecursiveList;Lscala/Function0;)Lscalaz/CorecursiveList;
       9: areturn

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #2047               // Method empty:()Lscalaz/CorecursiveList;
       4: areturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #61                 // class scalaz/CorecursiveList
       5: iload_2
       6: invokevirtual #2050               // Method index:(Lscalaz/CorecursiveList;I)Lscala/Option;
       9: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #61                 // class scalaz/CorecursiveList
       5: aload_2
       6: aload_3
       7: invokevirtual #2053               // Method foldLeft:(Lscalaz/CorecursiveList;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #61                 // class scalaz/CorecursiveList
       5: aload_2
       6: aload_3
       7: invokevirtual #2056               // Method foldRight:(Lscalaz/CorecursiveList;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2058               // Method point:(Lscala/Function0;)Lscalaz/CorecursiveList;
       5: areturn

  public java.lang.Object filter(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #61                 // class scalaz/CorecursiveList
       5: aload_2
       6: invokevirtual #2060               // Method filter:(Lscalaz/CorecursiveList;Lscala/Function1;)Lscalaz/CorecursiveList;
       9: areturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #61                 // class scalaz/CorecursiveList
       5: aload_2
       6: invokevirtual #2062               // Method bind:(Lscalaz/CorecursiveList;Lscala/Function1;)Lscalaz/CorecursiveList;
       9: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2064               // Method ap:(Lscala/Function0;Lscala/Function0;)Lscalaz/CorecursiveList;
       6: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #61                 // class scalaz/CorecursiveList
       5: aload_2
       6: invokevirtual #2066               // Method map:(Lscalaz/CorecursiveList;Lscala/Function1;)Lscalaz/CorecursiveList;
       9: areturn

  public static final scala.Tuple2 $anonfun$map$2(scala.Function1, scala.Tuple2);
    Code:
       0: aload_1
       1: ifnull        30
       4: aload_1
       5: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_2
       9: aload_1
      10: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore_3
      14: new           #1820               // class scala/Tuple2
      17: dup
      18: aload_2
      19: aload_0
      20: aload_3
      21: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      29: areturn
      30: new           #1912               // class scala/MatchError
      33: dup
      34: aconst_null
      35: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      38: athrow

  public static final scalaz.Maybe $anonfun$map$1(scala.Function1, scalaz.Maybe);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #2078,  0           // InvokeDynamic #10:apply:(Lscala/Function1;)Lscala/Function1;
       7: astore_2
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: aload_2
      14: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
      19: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      24: astore_3
      25: aload_1
      26: instanceof    #96                 // class scalaz/Maybe$Just
      29: ifeq          52
      32: aload_1
      33: checkcast     #96                 // class scalaz/Maybe$Just
      36: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      39: astore        4
      41: aload_3
      42: aload         4
      44: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      49: goto          81
      52: aload_1
      53: instanceof    #88                 // class scalaz/Maybe$Empty
      56: ifeq          72
      59: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      62: pop
      63: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      66: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      69: goto          81
      72: new           #1912               // class scala/MatchError
      75: dup
      76: aload_1
      77: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      80: athrow
      81: checkcast     #90                 // class scalaz/Maybe
      84: areturn

  public static final scalaz.Maybe $anonfun$ap$1(java.lang.Object, scalaz.CorecursiveList, scalaz.CorecursiveList, scala.Tuple2);
    Code:
       0: aload_0
       1: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       4: pop
       5: new           #96                 // class scalaz/Maybe$Just
       8: dup
       9: aload_3
      10: invokespecial #2098               // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      13: aload_1
      14: aload_2
      15: invokestatic  #2102               // Method bstep$1:(Ljava/lang/Object;Lscalaz/Maybe;Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Lscalaz/Maybe;
      18: areturn

  public static final scala.Tuple2 $anonfun$ap$2(scalaz.Maybe, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        40
       4: aload_2
       5: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_2
      10: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore        4
      15: new           #1820               // class scala/Tuple2
      18: dup
      19: new           #1820               // class scala/Tuple2
      22: dup
      23: aload_3
      24: aload_0
      25: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      28: aload_1
      29: aload         4
      31: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      39: areturn
      40: new           #1912               // class scala/MatchError
      43: dup
      44: aconst_null
      45: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      48: athrow

  public static final scalaz.Maybe $anonfun$ap$4(scalaz.CorecursiveList, scalaz.CorecursiveList, scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
       4: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       7: pop
       8: new           #96                 // class scalaz/Maybe$Just
      11: dup
      12: aload_2
      13: invokespecial #2098               // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      16: aload_1
      17: aload_0
      18: invokestatic  #2102               // Method bstep$1:(Ljava/lang/Object;Lscalaz/Maybe;Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Lscalaz/Maybe;
      21: areturn

  public static final scalaz.Maybe $anonfun$ap$3(scalaz.CorecursiveList, java.lang.Object, scalaz.CorecursiveList);
    Code:
       0: aload_0
       1: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_1
       5: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #90                 // class scalaz/Maybe
      13: dup
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: astore_3
      20: aload_3
      21: instanceof    #96                 // class scalaz/Maybe$Just
      24: ifeq          47
      27: aload_3
      28: checkcast     #96                 // class scalaz/Maybe$Just
      31: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      34: checkcast     #1820               // class scala/Tuple2
      37: astore        4
      39: aload_2
      40: aload_0
      41: aload         4
      43: invokestatic  #2112               // Method $anonfun$ap$4:(Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;Lscala/Tuple2;)Lscalaz/Maybe;
      46: areturn
      47: aload_3
      48: instanceof    #88                 // class scalaz/Maybe$Empty
      51: ifeq          65
      54: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      57: pop
      58: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      61: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      64: areturn
      65: new           #1912               // class scala/MatchError
      68: dup
      69: aload_3
      70: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      73: athrow

  private static final scalaz.Maybe bstep$1(java.lang.Object, scalaz.Maybe, scalaz.CorecursiveList, scalaz.CorecursiveList);
    Code:
       0: aload_1
       1: instanceof    #88                 // class scalaz/Maybe$Empty
       4: ifeq          90
       7: aload_2
       8: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      11: aload_2
      12: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      15: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #90                 // class scalaz/Maybe
      23: dup
      24: ifnonnull     29
      27: aconst_null
      28: athrow
      29: astore        7
      31: aload         7
      33: instanceof    #96                 // class scalaz/Maybe$Just
      36: ifeq          61
      39: aload         7
      41: checkcast     #96                 // class scalaz/Maybe$Just
      44: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      47: checkcast     #1820               // class scala/Tuple2
      50: astore        13
      52: aload_0
      53: aload_2
      54: aload_3
      55: aload         13
      57: invokestatic  #2116               // Method $anonfun$ap$1:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;Lscala/Tuple2;)Lscalaz/Maybe;
      60: areturn
      61: aload         7
      63: instanceof    #88                 // class scalaz/Maybe$Empty
      66: ifeq          80
      69: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      72: pop
      73: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      76: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      79: areturn
      80: new           #1912               // class scala/MatchError
      83: dup
      84: aload         7
      86: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      89: athrow
      90: aload_1
      91: instanceof    #96                 // class scalaz/Maybe$Just
      94: ifeq          306
      97: aload_1
      98: checkcast     #96                 // class scalaz/Maybe$Just
     101: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     104: checkcast     #1820               // class scala/Tuple2
     107: astore        4
     109: aload         4
     111: ifnull        306
     114: aload         4
     116: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
     119: astore        5
     121: aload         4
     123: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
     126: checkcast     #1800               // class scala/Function1
     129: astore        6
     131: aload_3
     132: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     135: aload_0
     136: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     141: checkcast     #90                 // class scalaz/Maybe
     144: aload_1
     145: aload         6
     147: invokedynamic #2122,  0           // InvokeDynamic #12:apply:(Lscalaz/Maybe;Lscala/Function1;)Lscala/Function1;
     152: astore        9
     154: dup
     155: ifnonnull     160
     158: aconst_null
     159: athrow
     160: astore        8
     162: aload         9
     164: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
     169: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     174: astore        10
     176: aload         8
     178: instanceof    #96                 // class scalaz/Maybe$Just
     181: ifeq          206
     184: aload         8
     186: checkcast     #96                 // class scalaz/Maybe$Just
     189: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     192: astore        11
     194: aload         10
     196: aload         11
     198: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     203: goto          237
     206: aload         8
     208: instanceof    #88                 // class scalaz/Maybe$Empty
     211: ifeq          227
     214: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     217: pop
     218: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
     221: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
     224: goto          237
     227: new           #1912               // class scala/MatchError
     230: dup
     231: aload         8
     233: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     236: athrow
     237: aconst_null
     238: astore        10
     240: aconst_null
     241: astore        11
     243: checkcast     #90                 // class scalaz/Maybe
     246: aconst_null
     247: astore        8
     249: aconst_null
     250: astore        9
     252: dup
     253: ifnonnull     258
     256: aconst_null
     257: athrow
     258: astore        12
     260: aload         12
     262: instanceof    #96                 // class scalaz/Maybe$Just
     265: ifeq          280
     268: aload         12
     270: checkcast     #96                 // class scalaz/Maybe$Just
     273: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     276: pop
     277: aload         12
     279: areturn
     280: aload         12
     282: instanceof    #88                 // class scalaz/Maybe$Empty
     285: ifeq          296
     288: aload_2
     289: aload         5
     291: aload_3
     292: invokestatic  #2124               // Method $anonfun$ap$3:(Lscalaz/CorecursiveList;Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscalaz/Maybe;
     295: areturn
     296: new           #1912               // class scala/MatchError
     299: dup
     300: aload         12
     302: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     305: athrow
     306: new           #1912               // class scala/MatchError
     309: dup
     310: aload_1
     311: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     314: athrow

  public static final scalaz.Maybe $anonfun$ap$5(scalaz.CorecursiveList, scalaz.CorecursiveList, java.lang.Object, scalaz.Maybe);
    Code:
       0: aload_2
       1: aload_3
       2: aload_0
       3: aload_1
       4: invokestatic  #2102               // Method bstep$1:(Ljava/lang/Object;Lscalaz/Maybe;Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Lscalaz/Maybe;
       7: areturn

  public static final scalaz.Maybe $anonfun$bind$1(scala.Function1, scalaz.CorecursiveList, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        514
       4: aload_2
       5: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_2
      10: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore        4
      15: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      18: pop
      19: aload_0
      20: aload         4
      22: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      27: astore        11
      29: new           #96                 // class scalaz/Maybe$Just
      32: dup
      33: aload         11
      35: invokespecial #2098               // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      38: aconst_null
      39: astore        11
      41: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      44: checkcast     #61                 // class scalaz/CorecursiveList
      47: astore        5
      49: aload         5
      51: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      54: aload         5
      56: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      59: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      64: checkcast     #90                 // class scalaz/Maybe
      67: aload_3
      68: aload         5
      70: invokedynamic #2139,  0           // InvokeDynamic #13:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscala/Function1;
      75: astore        7
      77: dup
      78: ifnonnull     83
      81: aconst_null
      82: athrow
      83: astore        6
      85: aload         7
      87: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
      92: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      97: astore        8
      99: aload         6
     101: instanceof    #96                 // class scalaz/Maybe$Just
     104: ifeq          129
     107: aload         6
     109: checkcast     #96                 // class scalaz/Maybe$Just
     112: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     115: astore        9
     117: aload         8
     119: aload         9
     121: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     126: goto          156
     129: aload         6
     131: instanceof    #88                 // class scalaz/Maybe$Empty
     134: ifeq          146
     137: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     140: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     143: goto          156
     146: new           #1912               // class scala/MatchError
     149: dup
     150: aload         6
     152: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     155: athrow
     156: aconst_null
     157: astore        8
     159: aconst_null
     160: astore        9
     162: checkcast     #90                 // class scalaz/Maybe
     165: aconst_null
     166: astore        6
     168: aconst_null
     169: astore        7
     171: dup
     172: ifnonnull     177
     175: aconst_null
     176: athrow
     177: astore        10
     179: aload         10
     181: instanceof    #96                 // class scalaz/Maybe$Just
     184: ifeq          199
     187: aload         10
     189: checkcast     #96                 // class scalaz/Maybe$Just
     192: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     195: pop
     196: aload         10
     198: areturn
     199: aload         10
     201: instanceof    #88                 // class scalaz/Maybe$Empty
     204: ifeq          504
     207: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
     210: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
     213: astore        12
     215: aload         12
     217: instanceof    #88                 // class scalaz/Maybe$Empty
     220: ifeq          298
     223: aload_1
     224: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     227: aload_3
     228: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     233: checkcast     #90                 // class scalaz/Maybe
     236: dup
     237: ifnonnull     242
     240: aconst_null
     241: athrow
     242: astore        14
     244: aload         14
     246: instanceof    #96                 // class scalaz/Maybe$Just
     249: ifeq          273
     252: aload         14
     254: checkcast     #96                 // class scalaz/Maybe$Just
     257: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     260: checkcast     #1820               // class scala/Tuple2
     263: astore        20
     265: aload_0
     266: aload_1
     267: aload         20
     269: invokestatic  #2143               // Method $anonfun$bind$1:(Lscala/Function1;Lscalaz/CorecursiveList;Lscala/Tuple2;)Lscalaz/Maybe;
     272: areturn
     273: aload         14
     275: instanceof    #88                 // class scalaz/Maybe$Empty
     278: ifeq          288
     281: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     284: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     287: areturn
     288: new           #1912               // class scala/MatchError
     291: dup
     292: aload         14
     294: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     297: athrow
     298: aload         12
     300: instanceof    #96                 // class scalaz/Maybe$Just
     303: ifeq          494
     306: aload         12
     308: checkcast     #96                 // class scalaz/Maybe$Just
     311: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     314: checkcast     #61                 // class scalaz/CorecursiveList
     317: astore        13
     319: aload         13
     321: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     324: aload         13
     326: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
     329: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     334: checkcast     #90                 // class scalaz/Maybe
     337: aload_3
     338: aload         13
     340: invokedynamic #2139,  0           // InvokeDynamic #13:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscala/Function1;
     345: astore        16
     347: dup
     348: ifnonnull     353
     351: aconst_null
     352: athrow
     353: astore        15
     355: aload         16
     357: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
     362: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     367: astore        17
     369: aload         15
     371: instanceof    #96                 // class scalaz/Maybe$Just
     374: ifeq          399
     377: aload         15
     379: checkcast     #96                 // class scalaz/Maybe$Just
     382: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     385: astore        18
     387: aload         17
     389: aload         18
     391: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     396: goto          426
     399: aload         15
     401: instanceof    #88                 // class scalaz/Maybe$Empty
     404: ifeq          416
     407: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     410: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     413: goto          426
     416: new           #1912               // class scala/MatchError
     419: dup
     420: aload         15
     422: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     425: athrow
     426: aconst_null
     427: astore        17
     429: aconst_null
     430: astore        18
     432: checkcast     #90                 // class scalaz/Maybe
     435: aconst_null
     436: astore        15
     438: aconst_null
     439: astore        16
     441: dup
     442: ifnonnull     447
     445: aconst_null
     446: athrow
     447: astore        19
     449: aload         19
     451: instanceof    #96                 // class scalaz/Maybe$Just
     454: ifeq          469
     457: aload         19
     459: checkcast     #96                 // class scalaz/Maybe$Just
     462: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     465: pop
     466: aload         19
     468: areturn
     469: aload         19
     471: instanceof    #88                 // class scalaz/Maybe$Empty
     474: ifeq          484
     477: aload_3
     478: aload_1
     479: aload_0
     480: invokestatic  #2147               // Method $anonfun$bind$3:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscala/Function1;)Lscalaz/Maybe;
     483: areturn
     484: new           #1912               // class scala/MatchError
     487: dup
     488: aload         19
     490: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     493: athrow
     494: new           #1912               // class scala/MatchError
     497: dup
     498: aload         12
     500: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     503: athrow
     504: new           #1912               // class scala/MatchError
     507: dup
     508: aload         10
     510: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     513: athrow
     514: new           #1912               // class scala/MatchError
     517: dup
     518: aconst_null
     519: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     522: athrow

  public static final scala.Tuple2 $anonfun$bind$2(java.lang.Object, scalaz.CorecursiveList, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        74
       4: aload_2
       5: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_2
      10: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore        4
      15: new           #1820               // class scala/Tuple2
      18: dup
      19: new           #1820               // class scala/Tuple2
      22: dup
      23: aload_0
      24: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      27: pop
      28: getstatic     #1771               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
      31: pop
      32: aload_1
      33: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      36: astore        5
      38: new           #59                 // class scalaz/CorecursiveList$CorecursiveListImpl
      41: dup
      42: aload_3
      43: aload         5
      45: invokespecial #1807               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      48: aconst_null
      49: astore        5
      51: astore        6
      53: new           #96                 // class scalaz/Maybe$Just
      56: dup
      57: aload         6
      59: invokespecial #2098               // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      62: aconst_null
      63: astore        6
      65: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      68: aload         4
      70: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      73: areturn
      74: new           #1912               // class scala/MatchError
      77: dup
      78: aconst_null
      79: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      82: athrow

  public static final scalaz.Maybe $anonfun$bind$3(java.lang.Object, scalaz.CorecursiveList, scala.Function1);
    Code:
       0: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
       3: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
       6: astore_3
       7: aload_3
       8: instanceof    #88                 // class scalaz/Maybe$Empty
      11: ifeq          612
      14: aload_1
      15: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      18: aload_0
      19: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #90                 // class scalaz/Maybe
      27: dup
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: astore        5
      35: aload         5
      37: instanceof    #96                 // class scalaz/Maybe$Just
      40: ifeq          587
      43: aload         5
      45: checkcast     #96                 // class scalaz/Maybe$Just
      48: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      51: checkcast     #1820               // class scala/Tuple2
      54: astore        11
      56: aload         11
      58: ifnull        578
      61: aload         11
      63: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
      66: astore        12
      68: aload         11
      70: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      73: astore        13
      75: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      78: pop
      79: aload_2
      80: aload         13
      82: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      87: astore        20
      89: new           #96                 // class scalaz/Maybe$Just
      92: dup
      93: aload         20
      95: invokespecial #2098               // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      98: aconst_null
      99: astore        20
     101: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     104: checkcast     #61                 // class scalaz/CorecursiveList
     107: astore        14
     109: aload         14
     111: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     114: aload         14
     116: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
     119: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     124: checkcast     #90                 // class scalaz/Maybe
     127: aload         12
     129: aload         14
     131: invokedynamic #2139,  0           // InvokeDynamic #13:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscala/Function1;
     136: astore        16
     138: dup
     139: ifnonnull     144
     142: aconst_null
     143: athrow
     144: astore        15
     146: aload         16
     148: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
     153: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     158: astore        17
     160: aload         15
     162: instanceof    #96                 // class scalaz/Maybe$Just
     165: ifeq          190
     168: aload         15
     170: checkcast     #96                 // class scalaz/Maybe$Just
     173: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     176: astore        18
     178: aload         17
     180: aload         18
     182: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     187: goto          217
     190: aload         15
     192: instanceof    #88                 // class scalaz/Maybe$Empty
     195: ifeq          207
     198: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     201: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     204: goto          217
     207: new           #1912               // class scala/MatchError
     210: dup
     211: aload         15
     213: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     216: athrow
     217: aconst_null
     218: astore        17
     220: aconst_null
     221: astore        18
     223: checkcast     #90                 // class scalaz/Maybe
     226: aconst_null
     227: astore        15
     229: aconst_null
     230: astore        16
     232: dup
     233: ifnonnull     238
     236: aconst_null
     237: athrow
     238: astore        19
     240: aload         19
     242: instanceof    #96                 // class scalaz/Maybe$Just
     245: ifeq          260
     248: aload         19
     250: checkcast     #96                 // class scalaz/Maybe$Just
     253: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     256: pop
     257: aload         19
     259: areturn
     260: aload         19
     262: instanceof    #88                 // class scalaz/Maybe$Empty
     265: ifeq          568
     268: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
     271: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
     274: astore        21
     276: aload         21
     278: instanceof    #88                 // class scalaz/Maybe$Empty
     281: ifeq          360
     284: aload_1
     285: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     288: aload         12
     290: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     295: checkcast     #90                 // class scalaz/Maybe
     298: dup
     299: ifnonnull     304
     302: aconst_null
     303: athrow
     304: astore        23
     306: aload         23
     308: instanceof    #96                 // class scalaz/Maybe$Just
     311: ifeq          335
     314: aload         23
     316: checkcast     #96                 // class scalaz/Maybe$Just
     319: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     322: checkcast     #1820               // class scala/Tuple2
     325: astore        29
     327: aload_2
     328: aload_1
     329: aload         29
     331: invokestatic  #2143               // Method $anonfun$bind$1:(Lscala/Function1;Lscalaz/CorecursiveList;Lscala/Tuple2;)Lscalaz/Maybe;
     334: areturn
     335: aload         23
     337: instanceof    #88                 // class scalaz/Maybe$Empty
     340: ifeq          350
     343: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     346: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     349: areturn
     350: new           #1912               // class scala/MatchError
     353: dup
     354: aload         23
     356: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     359: athrow
     360: aload         21
     362: instanceof    #96                 // class scalaz/Maybe$Just
     365: ifeq          558
     368: aload         21
     370: checkcast     #96                 // class scalaz/Maybe$Just
     373: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     376: checkcast     #61                 // class scalaz/CorecursiveList
     379: astore        22
     381: aload         22
     383: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     386: aload         22
     388: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
     391: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     396: checkcast     #90                 // class scalaz/Maybe
     399: aload         12
     401: aload         22
     403: invokedynamic #2139,  0           // InvokeDynamic #13:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscala/Function1;
     408: astore        25
     410: dup
     411: ifnonnull     416
     414: aconst_null
     415: athrow
     416: astore        24
     418: aload         25
     420: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
     425: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     430: astore        26
     432: aload         24
     434: instanceof    #96                 // class scalaz/Maybe$Just
     437: ifeq          462
     440: aload         24
     442: checkcast     #96                 // class scalaz/Maybe$Just
     445: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     448: astore        27
     450: aload         26
     452: aload         27
     454: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     459: goto          489
     462: aload         24
     464: instanceof    #88                 // class scalaz/Maybe$Empty
     467: ifeq          479
     470: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     473: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     476: goto          489
     479: new           #1912               // class scala/MatchError
     482: dup
     483: aload         24
     485: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     488: athrow
     489: aconst_null
     490: astore        26
     492: aconst_null
     493: astore        27
     495: checkcast     #90                 // class scalaz/Maybe
     498: aconst_null
     499: astore        24
     501: aconst_null
     502: astore        25
     504: dup
     505: ifnonnull     510
     508: aconst_null
     509: athrow
     510: astore        28
     512: aload         28
     514: instanceof    #96                 // class scalaz/Maybe$Just
     517: ifeq          532
     520: aload         28
     522: checkcast     #96                 // class scalaz/Maybe$Just
     525: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     528: pop
     529: aload         28
     531: areturn
     532: aload         28
     534: instanceof    #88                 // class scalaz/Maybe$Empty
     537: ifeq          548
     540: aload         12
     542: aload_1
     543: aload_2
     544: invokestatic  #2147               // Method $anonfun$bind$3:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscala/Function1;)Lscalaz/Maybe;
     547: areturn
     548: new           #1912               // class scala/MatchError
     551: dup
     552: aload         28
     554: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     557: athrow
     558: new           #1912               // class scala/MatchError
     561: dup
     562: aload         21
     564: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     567: athrow
     568: new           #1912               // class scala/MatchError
     571: dup
     572: aload         19
     574: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     577: athrow
     578: new           #1912               // class scala/MatchError
     581: dup
     582: aconst_null
     583: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     586: athrow
     587: aload         5
     589: instanceof    #88                 // class scalaz/Maybe$Empty
     592: ifeq          602
     595: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     598: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     601: areturn
     602: new           #1912               // class scala/MatchError
     605: dup
     606: aload         5
     608: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     611: athrow
     612: aload_3
     613: instanceof    #96                 // class scalaz/Maybe$Just
     616: ifeq          806
     619: aload_3
     620: checkcast     #96                 // class scalaz/Maybe$Just
     623: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     626: checkcast     #61                 // class scalaz/CorecursiveList
     629: astore        4
     631: aload         4
     633: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     636: aload         4
     638: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
     641: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     646: checkcast     #90                 // class scalaz/Maybe
     649: aload_0
     650: aload         4
     652: invokedynamic #2139,  0           // InvokeDynamic #13:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscala/Function1;
     657: astore        7
     659: dup
     660: ifnonnull     665
     663: aconst_null
     664: athrow
     665: astore        6
     667: aload         7
     669: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
     674: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     679: astore        8
     681: aload         6
     683: instanceof    #96                 // class scalaz/Maybe$Just
     686: ifeq          711
     689: aload         6
     691: checkcast     #96                 // class scalaz/Maybe$Just
     694: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     697: astore        9
     699: aload         8
     701: aload         9
     703: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     708: goto          738
     711: aload         6
     713: instanceof    #88                 // class scalaz/Maybe$Empty
     716: ifeq          728
     719: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     722: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     725: goto          738
     728: new           #1912               // class scala/MatchError
     731: dup
     732: aload         6
     734: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     737: athrow
     738: aconst_null
     739: astore        8
     741: aconst_null
     742: astore        9
     744: checkcast     #90                 // class scalaz/Maybe
     747: aconst_null
     748: astore        6
     750: aconst_null
     751: astore        7
     753: dup
     754: ifnonnull     759
     757: aconst_null
     758: athrow
     759: astore        10
     761: aload         10
     763: instanceof    #96                 // class scalaz/Maybe$Just
     766: ifeq          781
     769: aload         10
     771: checkcast     #96                 // class scalaz/Maybe$Just
     774: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     777: pop
     778: aload         10
     780: areturn
     781: aload         10
     783: instanceof    #88                 // class scalaz/Maybe$Empty
     786: ifeq          796
     789: aload_0
     790: aload_1
     791: aload_2
     792: invokestatic  #2147               // Method $anonfun$bind$3:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscala/Function1;)Lscalaz/Maybe;
     795: areturn
     796: new           #1912               // class scala/MatchError
     799: dup
     800: aload         10
     802: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     805: athrow
     806: new           #1912               // class scala/MatchError
     809: dup
     810: aload_3
     811: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     814: athrow

  private static final scalaz.Maybe bstep$2(java.lang.Object, scalaz.Maybe, scalaz.CorecursiveList, scala.Function1);
    Code:
       0: aload_1
       1: instanceof    #88                 // class scalaz/Maybe$Empty
       4: ifeq          605
       7: aload_2
       8: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      11: aload_0
      12: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #90                 // class scalaz/Maybe
      20: dup
      21: ifnonnull     26
      24: aconst_null
      25: athrow
      26: astore        5
      28: aload         5
      30: instanceof    #96                 // class scalaz/Maybe$Just
      33: ifeq          580
      36: aload         5
      38: checkcast     #96                 // class scalaz/Maybe$Just
      41: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      44: checkcast     #1820               // class scala/Tuple2
      47: astore        11
      49: aload         11
      51: ifnull        571
      54: aload         11
      56: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
      59: astore        12
      61: aload         11
      63: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      66: astore        13
      68: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      71: pop
      72: aload_3
      73: aload         13
      75: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      80: astore        20
      82: new           #96                 // class scalaz/Maybe$Just
      85: dup
      86: aload         20
      88: invokespecial #2098               // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      91: aconst_null
      92: astore        20
      94: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      97: checkcast     #61                 // class scalaz/CorecursiveList
     100: astore        14
     102: aload         14
     104: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     107: aload         14
     109: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
     112: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     117: checkcast     #90                 // class scalaz/Maybe
     120: aload         12
     122: aload         14
     124: invokedynamic #2139,  0           // InvokeDynamic #13:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscala/Function1;
     129: astore        16
     131: dup
     132: ifnonnull     137
     135: aconst_null
     136: athrow
     137: astore        15
     139: aload         16
     141: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
     146: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     151: astore        17
     153: aload         15
     155: instanceof    #96                 // class scalaz/Maybe$Just
     158: ifeq          183
     161: aload         15
     163: checkcast     #96                 // class scalaz/Maybe$Just
     166: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     169: astore        18
     171: aload         17
     173: aload         18
     175: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     180: goto          210
     183: aload         15
     185: instanceof    #88                 // class scalaz/Maybe$Empty
     188: ifeq          200
     191: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     194: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     197: goto          210
     200: new           #1912               // class scala/MatchError
     203: dup
     204: aload         15
     206: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     209: athrow
     210: aconst_null
     211: astore        17
     213: aconst_null
     214: astore        18
     216: checkcast     #90                 // class scalaz/Maybe
     219: aconst_null
     220: astore        15
     222: aconst_null
     223: astore        16
     225: dup
     226: ifnonnull     231
     229: aconst_null
     230: athrow
     231: astore        19
     233: aload         19
     235: instanceof    #96                 // class scalaz/Maybe$Just
     238: ifeq          253
     241: aload         19
     243: checkcast     #96                 // class scalaz/Maybe$Just
     246: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     249: pop
     250: aload         19
     252: areturn
     253: aload         19
     255: instanceof    #88                 // class scalaz/Maybe$Empty
     258: ifeq          561
     261: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
     264: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
     267: astore        21
     269: aload         21
     271: instanceof    #88                 // class scalaz/Maybe$Empty
     274: ifeq          353
     277: aload_2
     278: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     281: aload         12
     283: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     288: checkcast     #90                 // class scalaz/Maybe
     291: dup
     292: ifnonnull     297
     295: aconst_null
     296: athrow
     297: astore        23
     299: aload         23
     301: instanceof    #96                 // class scalaz/Maybe$Just
     304: ifeq          328
     307: aload         23
     309: checkcast     #96                 // class scalaz/Maybe$Just
     312: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     315: checkcast     #1820               // class scala/Tuple2
     318: astore        29
     320: aload_3
     321: aload_2
     322: aload         29
     324: invokestatic  #2143               // Method $anonfun$bind$1:(Lscala/Function1;Lscalaz/CorecursiveList;Lscala/Tuple2;)Lscalaz/Maybe;
     327: areturn
     328: aload         23
     330: instanceof    #88                 // class scalaz/Maybe$Empty
     333: ifeq          343
     336: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     339: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     342: areturn
     343: new           #1912               // class scala/MatchError
     346: dup
     347: aload         23
     349: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     352: athrow
     353: aload         21
     355: instanceof    #96                 // class scalaz/Maybe$Just
     358: ifeq          551
     361: aload         21
     363: checkcast     #96                 // class scalaz/Maybe$Just
     366: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     369: checkcast     #61                 // class scalaz/CorecursiveList
     372: astore        22
     374: aload         22
     376: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     379: aload         22
     381: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
     384: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     389: checkcast     #90                 // class scalaz/Maybe
     392: aload         12
     394: aload         22
     396: invokedynamic #2139,  0           // InvokeDynamic #13:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscala/Function1;
     401: astore        25
     403: dup
     404: ifnonnull     409
     407: aconst_null
     408: athrow
     409: astore        24
     411: aload         25
     413: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
     418: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     423: astore        26
     425: aload         24
     427: instanceof    #96                 // class scalaz/Maybe$Just
     430: ifeq          455
     433: aload         24
     435: checkcast     #96                 // class scalaz/Maybe$Just
     438: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     441: astore        27
     443: aload         26
     445: aload         27
     447: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     452: goto          482
     455: aload         24
     457: instanceof    #88                 // class scalaz/Maybe$Empty
     460: ifeq          472
     463: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     466: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     469: goto          482
     472: new           #1912               // class scala/MatchError
     475: dup
     476: aload         24
     478: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     481: athrow
     482: aconst_null
     483: astore        26
     485: aconst_null
     486: astore        27
     488: checkcast     #90                 // class scalaz/Maybe
     491: aconst_null
     492: astore        24
     494: aconst_null
     495: astore        25
     497: dup
     498: ifnonnull     503
     501: aconst_null
     502: athrow
     503: astore        28
     505: aload         28
     507: instanceof    #96                 // class scalaz/Maybe$Just
     510: ifeq          525
     513: aload         28
     515: checkcast     #96                 // class scalaz/Maybe$Just
     518: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     521: pop
     522: aload         28
     524: areturn
     525: aload         28
     527: instanceof    #88                 // class scalaz/Maybe$Empty
     530: ifeq          541
     533: aload         12
     535: aload_2
     536: aload_3
     537: invokestatic  #2147               // Method $anonfun$bind$3:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscala/Function1;)Lscalaz/Maybe;
     540: areturn
     541: new           #1912               // class scala/MatchError
     544: dup
     545: aload         28
     547: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     550: athrow
     551: new           #1912               // class scala/MatchError
     554: dup
     555: aload         21
     557: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     560: athrow
     561: new           #1912               // class scala/MatchError
     564: dup
     565: aload         19
     567: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     570: athrow
     571: new           #1912               // class scala/MatchError
     574: dup
     575: aconst_null
     576: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     579: athrow
     580: aload         5
     582: instanceof    #88                 // class scalaz/Maybe$Empty
     585: ifeq          595
     588: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     591: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     594: areturn
     595: new           #1912               // class scala/MatchError
     598: dup
     599: aload         5
     601: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     604: athrow
     605: aload_1
     606: instanceof    #96                 // class scalaz/Maybe$Just
     609: ifeq          799
     612: aload_1
     613: checkcast     #96                 // class scalaz/Maybe$Just
     616: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     619: checkcast     #61                 // class scalaz/CorecursiveList
     622: astore        4
     624: aload         4
     626: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     629: aload         4
     631: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
     634: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     639: checkcast     #90                 // class scalaz/Maybe
     642: aload_0
     643: aload         4
     645: invokedynamic #2139,  0           // InvokeDynamic #13:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscala/Function1;
     650: astore        7
     652: dup
     653: ifnonnull     658
     656: aconst_null
     657: athrow
     658: astore        6
     660: aload         7
     662: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
     667: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     672: astore        8
     674: aload         6
     676: instanceof    #96                 // class scalaz/Maybe$Just
     679: ifeq          704
     682: aload         6
     684: checkcast     #96                 // class scalaz/Maybe$Just
     687: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     690: astore        9
     692: aload         8
     694: aload         9
     696: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     701: goto          731
     704: aload         6
     706: instanceof    #88                 // class scalaz/Maybe$Empty
     709: ifeq          721
     712: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     715: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     718: goto          731
     721: new           #1912               // class scala/MatchError
     724: dup
     725: aload         6
     727: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     730: athrow
     731: aconst_null
     732: astore        8
     734: aconst_null
     735: astore        9
     737: checkcast     #90                 // class scalaz/Maybe
     740: aconst_null
     741: astore        6
     743: aconst_null
     744: astore        7
     746: dup
     747: ifnonnull     752
     750: aconst_null
     751: athrow
     752: astore        10
     754: aload         10
     756: instanceof    #96                 // class scalaz/Maybe$Just
     759: ifeq          774
     762: aload         10
     764: checkcast     #96                 // class scalaz/Maybe$Just
     767: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     770: pop
     771: aload         10
     773: areturn
     774: aload         10
     776: instanceof    #88                 // class scalaz/Maybe$Empty
     779: ifeq          789
     782: aload_0
     783: aload_2
     784: aload_3
     785: invokestatic  #2147               // Method $anonfun$bind$3:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscala/Function1;)Lscalaz/Maybe;
     788: areturn
     789: new           #1912               // class scala/MatchError
     792: dup
     793: aload         10
     795: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     798: athrow
     799: new           #1912               // class scala/MatchError
     802: dup
     803: aload_1
     804: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     807: athrow

  public static final scalaz.Maybe $anonfun$bind$4(scalaz.CorecursiveList, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        830
       4: aload_2
       5: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_2
      10: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: checkcast     #90                 // class scalaz/Maybe
      16: astore        4
      18: aload         4
      20: instanceof    #88                 // class scalaz/Maybe$Empty
      23: ifeq          624
      26: aload_0
      27: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      30: aload_3
      31: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #90                 // class scalaz/Maybe
      39: dup
      40: ifnonnull     45
      43: aconst_null
      44: athrow
      45: astore        6
      47: aload         6
      49: instanceof    #96                 // class scalaz/Maybe$Just
      52: ifeq          599
      55: aload         6
      57: checkcast     #96                 // class scalaz/Maybe$Just
      60: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      63: checkcast     #1820               // class scala/Tuple2
      66: astore        12
      68: aload         12
      70: ifnull        590
      73: aload         12
      75: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
      78: astore        13
      80: aload         12
      82: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      85: astore        14
      87: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      90: pop
      91: aload_1
      92: aload         14
      94: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      99: astore        21
     101: new           #96                 // class scalaz/Maybe$Just
     104: dup
     105: aload         21
     107: invokespecial #2098               // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
     110: aconst_null
     111: astore        21
     113: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     116: checkcast     #61                 // class scalaz/CorecursiveList
     119: astore        15
     121: aload         15
     123: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     126: aload         15
     128: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
     131: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     136: checkcast     #90                 // class scalaz/Maybe
     139: aload         13
     141: aload         15
     143: invokedynamic #2139,  0           // InvokeDynamic #13:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscala/Function1;
     148: astore        17
     150: dup
     151: ifnonnull     156
     154: aconst_null
     155: athrow
     156: astore        16
     158: aload         17
     160: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
     165: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     170: astore        18
     172: aload         16
     174: instanceof    #96                 // class scalaz/Maybe$Just
     177: ifeq          202
     180: aload         16
     182: checkcast     #96                 // class scalaz/Maybe$Just
     185: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     188: astore        19
     190: aload         18
     192: aload         19
     194: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     199: goto          229
     202: aload         16
     204: instanceof    #88                 // class scalaz/Maybe$Empty
     207: ifeq          219
     210: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     213: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     216: goto          229
     219: new           #1912               // class scala/MatchError
     222: dup
     223: aload         16
     225: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     228: athrow
     229: aconst_null
     230: astore        18
     232: aconst_null
     233: astore        19
     235: checkcast     #90                 // class scalaz/Maybe
     238: aconst_null
     239: astore        16
     241: aconst_null
     242: astore        17
     244: dup
     245: ifnonnull     250
     248: aconst_null
     249: athrow
     250: astore        20
     252: aload         20
     254: instanceof    #96                 // class scalaz/Maybe$Just
     257: ifeq          272
     260: aload         20
     262: checkcast     #96                 // class scalaz/Maybe$Just
     265: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     268: pop
     269: aload         20
     271: areturn
     272: aload         20
     274: instanceof    #88                 // class scalaz/Maybe$Empty
     277: ifeq          580
     280: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
     283: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
     286: astore        22
     288: aload         22
     290: instanceof    #88                 // class scalaz/Maybe$Empty
     293: ifeq          372
     296: aload_0
     297: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     300: aload         13
     302: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     307: checkcast     #90                 // class scalaz/Maybe
     310: dup
     311: ifnonnull     316
     314: aconst_null
     315: athrow
     316: astore        24
     318: aload         24
     320: instanceof    #96                 // class scalaz/Maybe$Just
     323: ifeq          347
     326: aload         24
     328: checkcast     #96                 // class scalaz/Maybe$Just
     331: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     334: checkcast     #1820               // class scala/Tuple2
     337: astore        30
     339: aload_1
     340: aload_0
     341: aload         30
     343: invokestatic  #2143               // Method $anonfun$bind$1:(Lscala/Function1;Lscalaz/CorecursiveList;Lscala/Tuple2;)Lscalaz/Maybe;
     346: areturn
     347: aload         24
     349: instanceof    #88                 // class scalaz/Maybe$Empty
     352: ifeq          362
     355: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     358: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     361: areturn
     362: new           #1912               // class scala/MatchError
     365: dup
     366: aload         24
     368: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     371: athrow
     372: aload         22
     374: instanceof    #96                 // class scalaz/Maybe$Just
     377: ifeq          570
     380: aload         22
     382: checkcast     #96                 // class scalaz/Maybe$Just
     385: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     388: checkcast     #61                 // class scalaz/CorecursiveList
     391: astore        23
     393: aload         23
     395: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     398: aload         23
     400: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
     403: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     408: checkcast     #90                 // class scalaz/Maybe
     411: aload         13
     413: aload         23
     415: invokedynamic #2139,  0           // InvokeDynamic #13:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscala/Function1;
     420: astore        26
     422: dup
     423: ifnonnull     428
     426: aconst_null
     427: athrow
     428: astore        25
     430: aload         26
     432: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
     437: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     442: astore        27
     444: aload         25
     446: instanceof    #96                 // class scalaz/Maybe$Just
     449: ifeq          474
     452: aload         25
     454: checkcast     #96                 // class scalaz/Maybe$Just
     457: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     460: astore        28
     462: aload         27
     464: aload         28
     466: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     471: goto          501
     474: aload         25
     476: instanceof    #88                 // class scalaz/Maybe$Empty
     479: ifeq          491
     482: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     485: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     488: goto          501
     491: new           #1912               // class scala/MatchError
     494: dup
     495: aload         25
     497: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     500: athrow
     501: aconst_null
     502: astore        27
     504: aconst_null
     505: astore        28
     507: checkcast     #90                 // class scalaz/Maybe
     510: aconst_null
     511: astore        25
     513: aconst_null
     514: astore        26
     516: dup
     517: ifnonnull     522
     520: aconst_null
     521: athrow
     522: astore        29
     524: aload         29
     526: instanceof    #96                 // class scalaz/Maybe$Just
     529: ifeq          544
     532: aload         29
     534: checkcast     #96                 // class scalaz/Maybe$Just
     537: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     540: pop
     541: aload         29
     543: areturn
     544: aload         29
     546: instanceof    #88                 // class scalaz/Maybe$Empty
     549: ifeq          560
     552: aload         13
     554: aload_0
     555: aload_1
     556: invokestatic  #2147               // Method $anonfun$bind$3:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscala/Function1;)Lscalaz/Maybe;
     559: areturn
     560: new           #1912               // class scala/MatchError
     563: dup
     564: aload         29
     566: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     569: athrow
     570: new           #1912               // class scala/MatchError
     573: dup
     574: aload         22
     576: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     579: athrow
     580: new           #1912               // class scala/MatchError
     583: dup
     584: aload         20
     586: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     589: athrow
     590: new           #1912               // class scala/MatchError
     593: dup
     594: aconst_null
     595: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     598: athrow
     599: aload         6
     601: instanceof    #88                 // class scalaz/Maybe$Empty
     604: ifeq          614
     607: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     610: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     613: areturn
     614: new           #1912               // class scala/MatchError
     617: dup
     618: aload         6
     620: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     623: athrow
     624: aload         4
     626: instanceof    #96                 // class scalaz/Maybe$Just
     629: ifeq          820
     632: aload         4
     634: checkcast     #96                 // class scalaz/Maybe$Just
     637: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     640: checkcast     #61                 // class scalaz/CorecursiveList
     643: astore        5
     645: aload         5
     647: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     650: aload         5
     652: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
     655: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     660: checkcast     #90                 // class scalaz/Maybe
     663: aload_3
     664: aload         5
     666: invokedynamic #2139,  0           // InvokeDynamic #13:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscala/Function1;
     671: astore        8
     673: dup
     674: ifnonnull     679
     677: aconst_null
     678: athrow
     679: astore        7
     681: aload         8
     683: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
     688: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     693: astore        9
     695: aload         7
     697: instanceof    #96                 // class scalaz/Maybe$Just
     700: ifeq          725
     703: aload         7
     705: checkcast     #96                 // class scalaz/Maybe$Just
     708: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     711: astore        10
     713: aload         9
     715: aload         10
     717: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     722: goto          752
     725: aload         7
     727: instanceof    #88                 // class scalaz/Maybe$Empty
     730: ifeq          742
     733: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     736: invokevirtual #2141               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     739: goto          752
     742: new           #1912               // class scala/MatchError
     745: dup
     746: aload         7
     748: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     751: athrow
     752: aconst_null
     753: astore        9
     755: aconst_null
     756: astore        10
     758: checkcast     #90                 // class scalaz/Maybe
     761: aconst_null
     762: astore        7
     764: aconst_null
     765: astore        8
     767: dup
     768: ifnonnull     773
     771: aconst_null
     772: athrow
     773: astore        11
     775: aload         11
     777: instanceof    #96                 // class scalaz/Maybe$Just
     780: ifeq          795
     783: aload         11
     785: checkcast     #96                 // class scalaz/Maybe$Just
     788: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     791: pop
     792: aload         11
     794: areturn
     795: aload         11
     797: instanceof    #88                 // class scalaz/Maybe$Empty
     800: ifeq          810
     803: aload_3
     804: aload_0
     805: aload_1
     806: invokestatic  #2147               // Method $anonfun$bind$3:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscala/Function1;)Lscalaz/Maybe;
     809: areturn
     810: new           #1912               // class scala/MatchError
     813: dup
     814: aload         11
     816: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     819: athrow
     820: new           #1912               // class scala/MatchError
     823: dup
     824: aload         4
     826: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     829: athrow
     830: new           #1912               // class scala/MatchError
     833: dup
     834: aconst_null
     835: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     838: athrow

  private final scalaz.Maybe step$1(java.lang.Object, scalaz.CorecursiveList, scala.Function1);
    Code:
       0: aload_2
       1: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_1
       5: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #90                 // class scalaz/Maybe
      13: astore        4
      15: aload         4
      17: instanceof    #88                 // class scalaz/Maybe$Empty
      20: ifeq          30
      23: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      26: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      29: areturn
      30: aload         4
      32: instanceof    #96                 // class scalaz/Maybe$Just
      35: ifeq          97
      38: aload         4
      40: checkcast     #96                 // class scalaz/Maybe$Just
      43: astore        5
      45: aload         5
      47: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      50: checkcast     #1820               // class scala/Tuple2
      53: astore        6
      55: aload         6
      57: ifnull        97
      60: aload         6
      62: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
      65: astore        7
      67: aload         6
      69: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      72: astore        8
      74: aload_3
      75: aload         8
      77: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      82: invokestatic  #2194               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      85: ifeq          91
      88: aload         5
      90: areturn
      91: aload         7
      93: astore_1
      94: goto          0
      97: new           #1912               // class scala/MatchError
     100: dup
     101: aload         4
     103: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     106: athrow

  public static final scalaz.Maybe $anonfun$filter$1(scalaz.CorecursiveList$$anon$5, scalaz.CorecursiveList, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: aload_2
       4: invokespecial #2198               // Method step$1:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscala/Function1;)Lscalaz/Maybe;
       7: areturn

  public static final scalaz.Maybe $anonfun$point$1(scala.Function0, boolean);
    Code:
       0: iload_1
       1: ifeq          11
       4: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
       7: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      10: areturn
      11: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      14: pop
      15: new           #1820               // class scala/Tuple2
      18: dup
      19: iconst_1
      20: invokestatic  #1878               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      23: aload_0
      24: invokeinterface #1818,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      29: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      32: astore_2
      33: new           #96                 // class scalaz/Maybe$Just
      36: dup
      37: aload_2
      38: invokespecial #2098               // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      41: areturn

  public static final java.lang.Object $anonfun$foldRight$2(java.lang.Object, scalaz.CorecursiveList, scala.Function2, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #2208               // Method rec$2:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscala/Function2;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$foldRight$1(scala.Function2, scalaz.CorecursiveList, scala.Function0, scala.Tuple2);
    Code:
       0: aload_3
       1: ifnull        35
       4: aload_3
       5: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore        4
      10: aload_3
      11: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      14: astore        5
      16: aload_0
      17: aload         5
      19: aload         4
      21: aload_1
      22: aload_0
      23: aload_2
      24: invokedynamic #1908,  0           // InvokeDynamic #5:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscala/Function2;Lscala/Function0;)Lscala/Function0;
      29: invokeinterface #1910,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: areturn
      35: new           #1912               // class scala/MatchError
      38: dup
      39: aconst_null
      40: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      43: athrow

  private static final java.lang.Object rec$2(java.lang.Object, scalaz.CorecursiveList, scala.Function2, scala.Function0);
    Code:
       0: aload_1
       1: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_0
       5: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #90                 // class scalaz/Maybe
      13: dup
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: astore        4
      21: aload         4
      23: instanceof    #96                 // class scalaz/Maybe$Just
      26: ifeq          89
      29: aload         4
      31: checkcast     #96                 // class scalaz/Maybe$Just
      34: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      37: checkcast     #1820               // class scala/Tuple2
      40: astore        5
      42: aload         5
      44: ifnull        80
      47: aload         5
      49: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
      52: astore        6
      54: aload         5
      56: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      59: astore        7
      61: aload_2
      62: aload         7
      64: aload         6
      66: aload_1
      67: aload_2
      68: aload_3
      69: invokedynamic #1908,  0           // InvokeDynamic #5:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscala/Function2;Lscala/Function0;)Lscala/Function0;
      74: invokeinterface #1910,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: areturn
      80: new           #1912               // class scala/MatchError
      83: dup
      84: aconst_null
      85: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      88: athrow
      89: aload         4
      91: instanceof    #88                 // class scalaz/Maybe$Empty
      94: ifeq          104
      97: aload_3
      98: invokeinterface #1818,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
     103: areturn
     104: new           #1912               // class scala/MatchError
     107: dup
     108: aload         4
     110: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     113: athrow

  private final java.lang.Object rec$3(java.lang.Object, java.lang.Object, scalaz.CorecursiveList, scala.Function2);
    Code:
       0: aload_3
       1: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_2
       5: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #90                 // class scalaz/Maybe
      13: astore        5
      15: aload         5
      17: instanceof    #88                 // class scalaz/Maybe$Empty
      20: ifeq          25
      23: aload_1
      24: areturn
      25: aload         5
      27: instanceof    #96                 // class scalaz/Maybe$Just
      30: ifeq          82
      33: aload         5
      35: checkcast     #96                 // class scalaz/Maybe$Just
      38: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      41: checkcast     #1820               // class scala/Tuple2
      44: astore        6
      46: aload         6
      48: ifnull        82
      51: aload         6
      53: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
      56: astore        7
      58: aload         6
      60: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      63: astore        8
      65: aload         4
      67: aload_1
      68: aload         8
      70: invokeinterface #1910,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: aload         7
      77: astore_2
      78: astore_1
      79: goto          0
      82: new           #1912               // class scala/MatchError
      85: dup
      86: aload         5
      88: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      91: athrow

  private final scala.Option loop$1(int, java.lang.Object, scalaz.CorecursiveList);
    Code:
       0: aload_3
       1: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_2
       5: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #90                 // class scalaz/Maybe
      13: astore        4
      15: aload         4
      17: instanceof    #96                 // class scalaz/Maybe$Just
      20: ifeq          80
      23: aload         4
      25: checkcast     #96                 // class scalaz/Maybe$Just
      28: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      31: checkcast     #1820               // class scala/Tuple2
      34: astore        5
      36: aload         5
      38: ifnull        80
      41: aload         5
      43: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
      46: astore        6
      48: aload         5
      50: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      53: astore        7
      55: iload_1
      56: iconst_0
      57: if_icmpne     70
      60: new           #2219               // class scala/Some
      63: dup
      64: aload         7
      66: invokespecial #2220               // Method scala/Some."<init>":(Ljava/lang/Object;)V
      69: areturn
      70: iload_1
      71: iconst_1
      72: isub
      73: aload         6
      75: astore_2
      76: istore_1
      77: goto          0
      80: getstatic     #1934               // Field scala/None$.MODULE$:Lscala/None$;
      83: areturn

  public static final scalaz.Maybe $anonfun$empty$1(scalaz.Maybe, scala.runtime.BoxedUnit);
    Code:
       0: getstatic     #2227               // Field scala/Function$.MODULE$:Lscala/Function$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2230               // Method scala/Function$.const:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #90                 // class scalaz/Maybe
      11: areturn

  public static final scala.Tuple2 $anonfun$plus$1(scala.Tuple2);
    Code:
       0: aload_0
       1: ifnull        35
       4: aload_0
       5: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_1
       9: aload_0
      10: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore_2
      14: new           #1820               // class scala/Tuple2
      17: dup
      18: getstatic     #2236               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
      21: pop
      22: new           #2238               // class scalaz/$bslash$div$minus
      25: dup
      26: aload_1
      27: invokespecial #2239               // Method scalaz/$bslash$div$minus."<init>":(Ljava/lang/Object;)V
      30: aload_2
      31: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      34: areturn
      35: new           #1912               // class scala/MatchError
      38: dup
      39: aconst_null
      40: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      43: athrow

  private static final scalaz.Maybe rightStep$1(java.lang.Object, scalaz.Need);
    Code:
       0: aload_1
       1: invokevirtual #2245               // Method scalaz/Need.value:()Ljava/lang/Object;
       4: checkcast     #61                 // class scalaz/CorecursiveList
       7: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      10: aload_0
      11: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #90                 // class scalaz/Maybe
      19: invokedynamic #2249,  0           // InvokeDynamic #14:apply:()Lscala/Function1;
      24: astore_3
      25: dup
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: astore_2
      32: aload_3
      33: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
      38: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      43: astore        4
      45: aload_2
      46: instanceof    #96                 // class scalaz/Maybe$Just
      49: ifeq          73
      52: aload_2
      53: checkcast     #96                 // class scalaz/Maybe$Just
      56: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      59: astore        5
      61: aload         4
      63: aload         5
      65: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      70: goto          102
      73: aload_2
      74: instanceof    #88                 // class scalaz/Maybe$Empty
      77: ifeq          93
      80: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      83: pop
      84: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      87: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      90: goto          102
      93: new           #1912               // class scala/MatchError
      96: dup
      97: aload_2
      98: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     101: athrow
     102: checkcast     #90                 // class scalaz/Maybe
     105: areturn

  public static final scala.Tuple2 $anonfun$plus$3(scala.Tuple2);
    Code:
       0: aload_0
       1: ifnull        35
       4: aload_0
       5: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_1
       9: aload_0
      10: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore_2
      14: new           #1820               // class scala/Tuple2
      17: dup
      18: getstatic     #1976               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      21: pop
      22: new           #1978               // class scalaz/$minus$bslash$div
      25: dup
      26: aload_1
      27: invokespecial #1979               // Method scalaz/$minus$bslash$div."<init>":(Ljava/lang/Object;)V
      30: aload_2
      31: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      34: areturn
      35: new           #1912               // class scala/MatchError
      38: dup
      39: aconst_null
      40: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      43: athrow

  public static final scalaz.Maybe $anonfun$plus$4(scalaz.Need);
    Code:
       0: aload_0
       1: invokevirtual #2245               // Method scalaz/Need.value:()Ljava/lang/Object;
       4: checkcast     #61                 // class scalaz/CorecursiveList
       7: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      10: aload_0
      11: invokestatic  #2255               // Method rightStep$1:(Ljava/lang/Object;Lscalaz/Need;)Lscalaz/Maybe;
      14: areturn

  public static final scalaz.Maybe $anonfun$plus$2(scalaz.CorecursiveList, scalaz.Need, scalaz.$bslash$div);
    Code:
       0: aload_2
       1: instanceof    #1978               // class scalaz/$minus$bslash$div
       4: ifeq          184
       7: aload_2
       8: checkcast     #1978               // class scalaz/$minus$bslash$div
      11: invokevirtual #2258               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      14: astore_3
      15: aload_0
      16: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      19: aload_3
      20: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #90                 // class scalaz/Maybe
      28: invokedynamic #2262,  0           // InvokeDynamic #15:apply:()Lscala/Function1;
      33: astore        5
      35: dup
      36: ifnonnull     41
      39: aconst_null
      40: athrow
      41: astore        4
      43: aload         5
      45: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
      50: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      55: astore        6
      57: aload         4
      59: instanceof    #96                 // class scalaz/Maybe$Just
      62: ifeq          87
      65: aload         4
      67: checkcast     #96                 // class scalaz/Maybe$Just
      70: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      73: astore        7
      75: aload         6
      77: aload         7
      79: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      84: goto          118
      87: aload         4
      89: instanceof    #88                 // class scalaz/Maybe$Empty
      92: ifeq          108
      95: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      98: pop
      99: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
     102: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
     105: goto          118
     108: new           #1912               // class scala/MatchError
     111: dup
     112: aload         4
     114: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     117: athrow
     118: aconst_null
     119: astore        6
     121: aconst_null
     122: astore        7
     124: checkcast     #90                 // class scalaz/Maybe
     127: aconst_null
     128: astore        4
     130: aconst_null
     131: astore        5
     133: dup
     134: ifnonnull     139
     137: aconst_null
     138: athrow
     139: astore        8
     141: aload         8
     143: instanceof    #96                 // class scalaz/Maybe$Just
     146: ifeq          161
     149: aload         8
     151: checkcast     #96                 // class scalaz/Maybe$Just
     154: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     157: pop
     158: aload         8
     160: areturn
     161: aload         8
     163: instanceof    #88                 // class scalaz/Maybe$Empty
     166: ifeq          174
     169: aload_1
     170: invokestatic  #2264               // Method $anonfun$plus$4:(Lscalaz/Need;)Lscalaz/Maybe;
     173: areturn
     174: new           #1912               // class scala/MatchError
     177: dup
     178: aload         8
     180: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     183: athrow
     184: aload_2
     185: instanceof    #2238               // class scalaz/$bslash$div$minus
     188: ifeq          203
     191: aload_2
     192: checkcast     #2238               // class scalaz/$bslash$div$minus
     195: invokevirtual #2266               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
     198: aload_1
     199: invokestatic  #2255               // Method rightStep$1:(Ljava/lang/Object;Lscalaz/Need;)Lscalaz/Maybe;
     202: areturn
     203: new           #1912               // class scala/MatchError
     206: dup
     207: aload_2
     208: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     211: athrow

  public static final java.lang.Object $anonfun$alignWith$4(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: areturn

  public static final java.lang.Object $anonfun$alignWith$5(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: areturn

  public static final java.lang.Object $anonfun$alignWith$6(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  public static final java.lang.Object $anonfun$alignWith$7(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  public static final scala.Tuple2 $anonfun$alignWith$3(scala.Function1, scalaz.$bslash$amp$div);
    Code:
       0: new           #1820               // class scala/Tuple2
       3: dup
       4: aload_1
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: aload_1
      11: instanceof    #35                 // class scalaz/$bslash$amp$div$This
      14: ifeq          42
      17: aload_1
      18: checkcast     #35                 // class scalaz/$bslash$amp$div$This
      21: invokevirtual #2284               // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
      24: astore_2
      25: new           #35                 // class scalaz/$bslash$amp$div$This
      28: dup
      29: aload_2
      30: checkcast     #1820               // class scala/Tuple2
      33: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
      36: invokespecial #2285               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
      39: goto          136
      42: aload_1
      43: instanceof    #32                 // class scalaz/$bslash$amp$div$That
      46: ifeq          74
      49: aload_1
      50: checkcast     #32                 // class scalaz/$bslash$amp$div$That
      53: invokevirtual #2288               // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
      56: astore_3
      57: new           #32                 // class scalaz/$bslash$amp$div$That
      60: dup
      61: aload_3
      62: checkcast     #1820               // class scala/Tuple2
      65: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
      68: invokespecial #2289               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
      71: goto          136
      74: aload_1
      75: instanceof    #27                 // class scalaz/$bslash$amp$div$Both
      78: ifeq          127
      81: aload_1
      82: checkcast     #27                 // class scalaz/$bslash$amp$div$Both
      85: astore        4
      87: aload         4
      89: invokevirtual #2290               // Method scalaz/$bslash$amp$div$Both.aa:()Ljava/lang/Object;
      92: astore        5
      94: aload         4
      96: invokevirtual #2291               // Method scalaz/$bslash$amp$div$Both.bb:()Ljava/lang/Object;
      99: astore        6
     101: new           #27                 // class scalaz/$bslash$amp$div$Both
     104: dup
     105: aload         5
     107: checkcast     #1820               // class scala/Tuple2
     110: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
     113: aload         6
     115: checkcast     #1820               // class scala/Tuple2
     118: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
     121: invokespecial #2292               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     124: goto          136
     127: new           #1912               // class scala/MatchError
     130: dup
     131: aload_1
     132: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     135: athrow
     136: aconst_null
     137: astore_2
     138: aconst_null
     139: astore_3
     140: aconst_null
     141: astore        4
     143: aconst_null
     144: astore        5
     146: aconst_null
     147: astore        6
     149: aload_0
     150: aload_1
     151: instanceof    #35                 // class scalaz/$bslash$amp$div$This
     154: ifeq          184
     157: aload_1
     158: checkcast     #35                 // class scalaz/$bslash$amp$div$This
     161: invokevirtual #2284               // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
     164: astore        7
     166: new           #35                 // class scalaz/$bslash$amp$div$This
     169: dup
     170: aload         7
     172: checkcast     #1820               // class scala/Tuple2
     175: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
     178: invokespecial #2285               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
     181: goto          280
     184: aload_1
     185: instanceof    #32                 // class scalaz/$bslash$amp$div$That
     188: ifeq          218
     191: aload_1
     192: checkcast     #32                 // class scalaz/$bslash$amp$div$That
     195: invokevirtual #2288               // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
     198: astore        8
     200: new           #32                 // class scalaz/$bslash$amp$div$That
     203: dup
     204: aload         8
     206: checkcast     #1820               // class scala/Tuple2
     209: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
     212: invokespecial #2289               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
     215: goto          280
     218: aload_1
     219: instanceof    #27                 // class scalaz/$bslash$amp$div$Both
     222: ifeq          271
     225: aload_1
     226: checkcast     #27                 // class scalaz/$bslash$amp$div$Both
     229: astore        9
     231: aload         9
     233: invokevirtual #2290               // Method scalaz/$bslash$amp$div$Both.aa:()Ljava/lang/Object;
     236: astore        10
     238: aload         9
     240: invokevirtual #2291               // Method scalaz/$bslash$amp$div$Both.bb:()Ljava/lang/Object;
     243: astore        11
     245: new           #27                 // class scalaz/$bslash$amp$div$Both
     248: dup
     249: aload         10
     251: checkcast     #1820               // class scala/Tuple2
     254: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
     257: aload         11
     259: checkcast     #1820               // class scala/Tuple2
     262: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
     265: invokespecial #2292               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     268: goto          280
     271: new           #1912               // class scala/MatchError
     274: dup
     275: aload_1
     276: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     279: athrow
     280: aconst_null
     281: astore        7
     283: aconst_null
     284: astore        8
     286: aconst_null
     287: astore        9
     289: aconst_null
     290: astore        10
     292: aconst_null
     293: astore        11
     295: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     300: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     303: areturn

  public static final scala.Tuple2 $anonfun$alignWith$8(scala.Function1, scala.Tuple2);
    Code:
       0: aload_1
       1: ifnull        44
       4: aload_1
       5: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_2
       9: aload_1
      10: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore_3
      14: new           #1820               // class scala/Tuple2
      17: dup
      18: new           #35                 // class scalaz/$bslash$amp$div$This
      21: dup
      22: aload_2
      23: invokespecial #2285               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
      26: aload_0
      27: new           #35                 // class scalaz/$bslash$amp$div$This
      30: dup
      31: aload_3
      32: invokespecial #2285               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
      35: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      43: areturn
      44: new           #1912               // class scala/MatchError
      47: dup
      48: aconst_null
      49: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      52: athrow

  public static final scala.Tuple2 $anonfun$alignWith$9(scala.Function1, scala.Tuple2);
    Code:
       0: aload_1
       1: ifnull        44
       4: aload_1
       5: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_2
       9: aload_1
      10: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore_3
      14: new           #1820               // class scala/Tuple2
      17: dup
      18: new           #32                 // class scalaz/$bslash$amp$div$That
      21: dup
      22: aload_2
      23: invokespecial #2289               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
      26: aload_0
      27: new           #32                 // class scalaz/$bslash$amp$div$That
      30: dup
      31: aload_3
      32: invokespecial #2289               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
      35: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      43: areturn
      44: new           #1912               // class scala/MatchError
      47: dup
      48: aconst_null
      49: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      52: athrow

  public static final scalaz.Maybe $anonfun$alignWith$2(scalaz.CorecursiveList, scalaz.CorecursiveList, scala.Function1, scalaz.$bslash$amp$div);
    Code:
       0: aload_3
       1: instanceof    #27                 // class scalaz/$bslash$amp$div$Both
       4: ifeq          165
       7: aload_3
       8: checkcast     #27                 // class scalaz/$bslash$amp$div$Both
      11: astore        4
      13: aload         4
      15: invokevirtual #2290               // Method scalaz/$bslash$amp$div$Both.aa:()Ljava/lang/Object;
      18: astore        5
      20: aload         4
      22: invokevirtual #2291               // Method scalaz/$bslash$amp$div$Both.bb:()Ljava/lang/Object;
      25: astore        6
      27: getstatic     #2307               // Field scalaz/Align$.MODULE$:Lscalaz/Align$;
      30: pop
      31: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      34: invokevirtual #2311               // Method scalaz/Maybe$.maybeInstance:()Lscalaz/Traverse;
      37: checkcast     #15                 // class scalaz/Align
      40: aload_0
      41: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      44: aload         5
      46: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      51: aload_1
      52: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      55: aload         6
      57: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      62: invokeinterface #2313,  3         // InterfaceMethod scalaz/Align.align:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #90                 // class scalaz/Maybe
      70: aload_2
      71: invokedynamic #2319,  0           // InvokeDynamic #16:apply:(Lscala/Function1;)Lscala/Function1;
      76: astore        10
      78: dup
      79: ifnonnull     84
      82: aconst_null
      83: athrow
      84: astore        9
      86: aload         10
      88: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
      93: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      98: astore        11
     100: aload         9
     102: instanceof    #96                 // class scalaz/Maybe$Just
     105: ifeq          130
     108: aload         9
     110: checkcast     #96                 // class scalaz/Maybe$Just
     113: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     116: astore        12
     118: aload         11
     120: aload         12
     122: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     127: goto          161
     130: aload         9
     132: instanceof    #88                 // class scalaz/Maybe$Empty
     135: ifeq          151
     138: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     141: pop
     142: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
     145: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
     148: goto          161
     151: new           #1912               // class scala/MatchError
     154: dup
     155: aload         9
     157: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     160: athrow
     161: checkcast     #90                 // class scalaz/Maybe
     164: areturn
     165: aload_3
     166: instanceof    #35                 // class scalaz/$bslash$amp$div$This
     169: ifeq          290
     172: aload_3
     173: checkcast     #35                 // class scalaz/$bslash$amp$div$This
     176: invokevirtual #2284               // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
     179: astore        7
     181: aload_0
     182: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     185: aload         7
     187: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     192: checkcast     #90                 // class scalaz/Maybe
     195: aload_2
     196: invokedynamic #2323,  0           // InvokeDynamic #17:apply:(Lscala/Function1;)Lscala/Function1;
     201: astore        14
     203: dup
     204: ifnonnull     209
     207: aconst_null
     208: athrow
     209: astore        13
     211: aload         14
     213: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
     218: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     223: astore        15
     225: aload         13
     227: instanceof    #96                 // class scalaz/Maybe$Just
     230: ifeq          255
     233: aload         13
     235: checkcast     #96                 // class scalaz/Maybe$Just
     238: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     241: astore        16
     243: aload         15
     245: aload         16
     247: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     252: goto          286
     255: aload         13
     257: instanceof    #88                 // class scalaz/Maybe$Empty
     260: ifeq          276
     263: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     266: pop
     267: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
     270: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
     273: goto          286
     276: new           #1912               // class scala/MatchError
     279: dup
     280: aload         13
     282: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     285: athrow
     286: checkcast     #90                 // class scalaz/Maybe
     289: areturn
     290: aload_3
     291: instanceof    #32                 // class scalaz/$bslash$amp$div$That
     294: ifeq          415
     297: aload_3
     298: checkcast     #32                 // class scalaz/$bslash$amp$div$That
     301: invokevirtual #2288               // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
     304: astore        8
     306: aload_1
     307: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     310: aload         8
     312: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     317: checkcast     #90                 // class scalaz/Maybe
     320: aload_2
     321: invokedynamic #2327,  0           // InvokeDynamic #18:apply:(Lscala/Function1;)Lscala/Function1;
     326: astore        18
     328: dup
     329: ifnonnull     334
     332: aconst_null
     333: athrow
     334: astore        17
     336: aload         18
     338: invokedynamic #2083,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
     343: invokeinterface #1803,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     348: astore        19
     350: aload         17
     352: instanceof    #96                 // class scalaz/Maybe$Just
     355: ifeq          380
     358: aload         17
     360: checkcast     #96                 // class scalaz/Maybe$Just
     363: invokevirtual #1893               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     366: astore        20
     368: aload         19
     370: aload         20
     372: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     377: goto          411
     380: aload         17
     382: instanceof    #88                 // class scalaz/Maybe$Empty
     385: ifeq          401
     388: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     391: pop
     392: getstatic     #1823               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
     395: invokevirtual #1826               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
     398: goto          411
     401: new           #1912               // class scala/MatchError
     404: dup
     405: aload         17
     407: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     410: athrow
     411: checkcast     #90                 // class scalaz/Maybe
     414: areturn
     415: new           #1912               // class scala/MatchError
     418: dup
     419: aload_3
     420: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     423: athrow

  public static final scalaz.CorecursiveList $anonfun$alignWith$1(scala.Function1, scalaz.CorecursiveList, scalaz.CorecursiveList);
    Code:
       0: getstatic     #1771               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: pop
       4: new           #27                 // class scalaz/$bslash$amp$div$Both
       7: dup
       8: aload_1
       9: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      12: aload_2
      13: invokevirtual #1775               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      16: invokespecial #2292               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      19: aload_1
      20: aload_2
      21: aload_0
      22: invokedynamic #2335,  0           // InvokeDynamic #19:apply:(Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;Lscala/Function1;)Lscala/Function1;
      27: astore        4
      29: astore_3
      30: new           #59                 // class scalaz/CorecursiveList$CorecursiveListImpl
      33: dup
      34: aload_3
      35: aload         4
      37: invokespecial #1807               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      40: areturn

  public static final scalaz.Maybe $anonfun$zip$2(scalaz.CorecursiveList, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_1
       5: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #90                 // class scalaz/Maybe
      13: areturn

  public static final scalaz.Maybe $anonfun$zip$3(scalaz.CorecursiveList, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #1779               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_1
       5: invokeinterface #1890,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #90                 // class scalaz/Maybe
      13: areturn

  public static final scala.Tuple2 $anonfun$zip$4(scala.Tuple2, scala.Tuple2);
    Code:
       0: new           #1820               // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: astore_2
      10: aload_0
      11: ifnull        70
      14: aload_0
      15: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
      18: astore_3
      19: aload_0
      20: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      23: astore        4
      25: aload_1
      26: ifnull        70
      29: aload_1
      30: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
      33: astore        5
      35: aload_1
      36: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      39: astore        6
      41: new           #1820               // class scala/Tuple2
      44: dup
      45: new           #1820               // class scala/Tuple2
      48: dup
      49: aload_3
      50: aload         5
      52: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      55: new           #1820               // class scala/Tuple2
      58: dup
      59: aload         4
      61: aload         6
      63: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      66: invokespecial #1829               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      69: areturn
      70: new           #1912               // class scala/MatchError
      73: dup
      74: aload_2
      75: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      78: athrow

  public static final scalaz.Maybe $anonfun$zip$1(scalaz.CorecursiveList, scalaz.CorecursiveList, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        57
       4: aload_2
       5: invokevirtual #1896               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_2
      10: invokevirtual #1899               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore        4
      15: getstatic     #2350               // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
      18: pop
      19: getstatic     #2088               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      22: invokevirtual #2311               // Method scalaz/Maybe$.maybeInstance:()Lscalaz/Traverse;
      25: checkcast     #51                 // class scalaz/Apply
      28: aload_0
      29: aload_3
      30: invokedynamic #2357,  0           // InvokeDynamic #20:apply:(Lscalaz/CorecursiveList;Ljava/lang/Object;)Lscala/Function0;
      35: aload_1
      36: aload         4
      38: invokedynamic #2361,  0           // InvokeDynamic #21:apply:(Lscalaz/CorecursiveList;Ljava/lang/Object;)Lscala/Function0;
      43: invokedynamic #2367,  0           // InvokeDynamic #22:apply:()Lscala/Function2;
      48: invokeinterface #2369,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      53: checkcast     #90                 // class scalaz/Maybe
      56: areturn
      57: new           #1912               // class scala/MatchError
      60: dup
      61: aconst_null
      62: invokespecial #1915               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      65: athrow

  public scalaz.CorecursiveList$$anon$5();
    Code:
       0: aload_0
       1: invokespecial #2372               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2376               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #2379               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #2382               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      16: aload_0
      17: invokestatic  #2385               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      20: aload_0
      21: invokestatic  #2388               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      24: aload_0
      25: invokestatic  #2391               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      28: aload_0
      29: invokestatic  #2394               // InterfaceMethod scalaz/Monad.$init$:(Lscalaz/Monad;)V
      32: aload_0
      33: invokestatic  #2397               // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      36: aload_0
      37: invokestatic  #2400               // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      40: aload_0
      41: invokestatic  #2403               // InterfaceMethod scalaz/ApplicativePlus.$init$:(Lscalaz/ApplicativePlus;)V
      44: aload_0
      45: invokestatic  #2406               // InterfaceMethod scalaz/MonadPlus.$init$:(Lscalaz/MonadPlus;)V
      48: aload_0
      49: invokestatic  #2409               // InterfaceMethod scalaz/InvariantAlt.$init$:(Lscalaz/InvariantAlt;)V
      52: aload_0
      53: invokestatic  #2412               // InterfaceMethod scalaz/Alt.$init$:(Lscalaz/Alt;)V
      56: aload_0
      57: invokestatic  #2415               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      60: aload_0
      61: invokestatic  #2418               // InterfaceMethod scalaz/IsEmpty.$init$:(Lscalaz/IsEmpty;)V
      64: aload_0
      65: invokestatic  #2421               // InterfaceMethod scalaz/Align.$init$:(Lscalaz/Align;)V
      68: aload_0
      69: invokestatic  #2424               // InterfaceMethod scalaz/Zip.$init$:(Lscalaz/Zip;)V
      72: invokestatic  #2429               // Method scala/runtime/Statics.releaseFence:()V
      75: return

  public static final scalaz.Maybe $anonfun$point$1$adapted(scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2194               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokestatic  #2431               // Method $anonfun$point$1:(Lscala/Function0;Z)Lscalaz/Maybe;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2443,  0           // InvokeDynamic #23:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
