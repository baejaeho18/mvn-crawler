Compiled from "StreamT.scala"
public abstract class scalaz.StreamTInstances extends scalaz.StreamTInstances0 {
  private final scalaz.Hoist<scalaz.StreamT> StreamTHoist;

  public <F> scalaz.IsCovariant<?> StreamTIsCovariant(scalaz.IsCovariant<F>);
    Code:
       0: getstatic     #40                 // Field scalaz/IsCovariant$.MODULE$:Lscalaz/IsCovariant$;
       3: pop
       4: new           #15                 // class scalaz/IsCovariant$$anon$3
       7: dup
       8: invokespecial #44                 // Method scalaz/IsCovariant$$anon$3."<init>":()V
      11: areturn

  public <F, A> scalaz.Monoid<scalaz.StreamT<F, A>> StreamTMonoid(scalaz.Applicative<F>);
    Code:
       0: new           #19                 // class scalaz/StreamTInstances$$anon$5
       3: dup
       4: aconst_null
       5: aload_1
       6: invokespecial #54                 // Method scalaz/StreamTInstances$$anon$5."<init>":(Lscalaz/StreamTInstances;Lscalaz/Applicative;)V
       9: areturn

  public <F> scalaz.MonadPlus<?> StreamTMonadPlus(scalaz.Applicative<F>);
    Code:
       0: new           #21                 // class scalaz/StreamTInstances$$anon$6
       3: dup
       4: aconst_null
       5: aload_1
       6: invokespecial #59                 // Method scalaz/StreamTInstances$$anon$6."<init>":(Lscalaz/StreamTInstances;Lscalaz/Applicative;)V
       9: areturn

  public <F, A> scalaz.Equal<scalaz.StreamT<F, A>> StreamTEqual(scalaz.Equal<F>, scalaz.Monad<F>);
    Code:
       0: aload_1
       1: aload_2
       2: invokedynamic #85,  0             // InvokeDynamic #0:apply:(Lscalaz/Monad;)Lscala/Function1;
       7: invokeinterface #91,  2           // InterfaceMethod scalaz/Equal.contramap:(Lscala/Function1;)Lscalaz/Equal;
      12: areturn

  public <F, A> scalaz.Show<scalaz.StreamT<F, A>> StreamTShow(scalaz.Show<F>, scalaz.Monad<F>);
    Code:
       0: getstatic     #101                // Field scalaz/Contravariant$.MODULE$:Lscalaz/Contravariant$;
       3: pop
       4: getstatic     #106                // Field scalaz/Show$.MODULE$:Lscalaz/Show$;
       7: invokevirtual #110                // Method scalaz/Show$.showContravariant:()Lscalaz/Contravariant;
      10: aload_1
      11: aload_2
      12: invokedynamic #115,  0            // InvokeDynamic #1:apply:(Lscalaz/Monad;)Lscala/Function1;
      17: invokeinterface #120,  3          // InterfaceMethod scalaz/Contravariant.contramap:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      22: checkcast     #122                // class scalaz/Show
      25: areturn

  public scalaz.Hoist<scalaz.StreamT> StreamTHoist();
    Code:
       0: aload_0
       1: getfield      #127                // Field StreamTHoist:Lscalaz/Hoist;
       4: areturn

  public <F> scalaz.Foldable<?> StreamTFoldable(scalaz.Foldable<F>);
    Code:
       0: new           #25                 // class scalaz/StreamTInstances$$anon$8
       3: dup
       4: aconst_null
       5: aload_1
       6: invokespecial #134                // Method scalaz/StreamTInstances$$anon$8."<init>":(Lscalaz/StreamTInstances;Lscalaz/Foldable;)V
       9: areturn

  public <F, A> scalaz.Monoid<java.lang.Object> StreamTMergeMonoid(scalaz.Nondeterminism<F>);
    Code:
       0: new           #27                 // class scalaz/StreamTInstances$$anon$9
       3: dup
       4: aconst_null
       5: aload_1
       6: invokespecial #141                // Method scalaz/StreamTInstances$$anon$9."<init>":(Lscalaz/StreamTInstances;Lscalaz/Nondeterminism;)V
       9: areturn

  public <F> scalaz.Monad<?> StreamTMergeMonad(scalaz.Nondeterminism<F>);
    Code:
       0: new           #17                 // class scalaz/StreamTInstances$$anon$10
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #146                // Method scalaz/StreamTInstances$$anon$10."<init>":(Lscalaz/StreamTInstances;Lscalaz/Nondeterminism;)V
       9: areturn

  public static final java.lang.Object $anonfun$StreamTEqual$1(scalaz.Monad, scalaz.StreamT);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #154                // Method scalaz/StreamT.toLazyList:(Lscalaz/Monad;)Ljava/lang/Object;
       5: areturn

  public static final java.lang.Object $anonfun$StreamTShow$1(scalaz.Monad, scalaz.StreamT);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #154                // Method scalaz/StreamT.toLazyList:(Lscalaz/Monad;)Ljava/lang/Object;
       5: areturn

  public scalaz.StreamTInstances();
    Code:
       0: aload_0
       1: invokespecial #158                // Method scalaz/StreamTInstances0."<init>":()V
       4: aload_0
       5: new           #23                 // class scalaz/StreamTInstances$$anon$7
       8: dup
       9: aconst_null
      10: invokespecial #161                // Method scalaz/StreamTInstances$$anon$7."<init>":(Lscalaz/StreamTInstances;)V
      13: putfield      #127                // Field StreamTHoist:Lscalaz/Hoist;
      16: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #173,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
