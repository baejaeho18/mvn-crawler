Compiled from "Split.scala"
public final class scalaz.Split$$anon$2 implements scalaz.IsomorphismSplit<F, G> {
  private scalaz.syntax.SplitSyntax<F> splitSyntax;

  private scalaz.syntax.ComposeSyntax<F> composeSyntax;

  private final scalaz.Split E$1;

  private final scalaz.Isomorphisms$Iso3 D$1;

  public <A, B, C, D> F split(F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #42                 // InterfaceMethod scalaz/IsomorphismSplit.split$:(Lscalaz/IsomorphismSplit;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public <A, B, C> F compose(F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #53                 // InterfaceMethod scalaz/IsomorphismCompose.compose$:(Lscalaz/IsomorphismCompose;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scalaz.Plus<?> plus();
    Code:
       0: aload_0
       1: invokestatic  #60                 // InterfaceMethod scalaz/Compose.plus$:(Lscalaz/Compose;)Lscalaz/Plus;
       4: areturn

  public <A> scalaz.Semigroup<F> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #67                 // InterfaceMethod scalaz/Compose.semigroup$:(Lscalaz/Compose;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Compose<F>.ComposeLaw composeLaw();
    Code:
       0: aload_0
       1: invokestatic  #74                 // InterfaceMethod scalaz/Compose.composeLaw$:(Lscalaz/Compose;)Lscalaz/Compose$ComposeLaw;
       4: areturn

  public scalaz.syntax.SplitSyntax<F> splitSyntax();
    Code:
       0: aload_0
       1: getfield      #78                 // Field splitSyntax:Lscalaz/syntax/SplitSyntax;
       4: areturn

  public void scalaz$Split$_setter_$splitSyntax_$eq(scalaz.syntax.SplitSyntax<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #78                 // Field splitSyntax:Lscalaz/syntax/SplitSyntax;
       5: return

  public scalaz.syntax.ComposeSyntax<F> composeSyntax();
    Code:
       0: aload_0
       1: getfield      #86                 // Field composeSyntax:Lscalaz/syntax/ComposeSyntax;
       4: areturn

  public void scalaz$Compose$_setter_$composeSyntax_$eq(scalaz.syntax.ComposeSyntax<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #86                 // Field composeSyntax:Lscalaz/syntax/ComposeSyntax;
       5: return

  public scalaz.Split<G> G();
    Code:
       0: aload_0
       1: getfield      #94                 // Field E$1:Lscalaz/Split;
       4: areturn

  public scalaz.Isomorphisms$Iso3<scalaz.BiNaturalTransformation, F, G> iso();
    Code:
       0: aload_0
       1: getfield      #99                 // Field D$1:Lscalaz/Isomorphisms$Iso3;
       4: areturn

  public scalaz.Compose G();
    Code:
       0: aload_0
       1: invokevirtual #102                // Method G:()Lscalaz/Split;
       4: areturn

  public scalaz.Split$$anon$2(scalaz.Split, scalaz.Isomorphisms$Iso3);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #94                 // Field E$1:Lscalaz/Split;
       5: aload_0
       6: aload_2
       7: putfield      #99                 // Field D$1:Lscalaz/Isomorphisms$Iso3;
      10: aload_0
      11: invokespecial #107                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #111                // InterfaceMethod scalaz/Compose.$init$:(Lscalaz/Compose;)V
      18: aload_0
      19: invokestatic  #116                // InterfaceMethod scalaz/Split.$init$:(Lscalaz/Split;)V
      22: invokestatic  #121                // Method scala/runtime/Statics.releaseFence:()V
      25: return
}
