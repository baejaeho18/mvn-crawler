Compiled from "Zip.scala"
public interface scalaz.Zip<F> {
  public static scalaz.Zip<java.lang.Object> idInstance();
    Code:
       0: getstatic     #43                 // Field scalaz/Zip$.MODULE$:Lscalaz/Zip$;
       3: pop
       4: getstatic     #48                 // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
       7: invokevirtual #52                 // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      10: checkcast     #2                  // class scalaz/Zip
      13: areturn

  public static <F, A, B> F fzip(scalaz.LazyTuple2<F, F>, scalaz.Zip<F>);
    Code:
       0: getstatic     #43                 // Field scalaz/Zip$.MODULE$:Lscalaz/Zip$;
       3: aload_0
       4: aload_1
       5: invokevirtual #59                 // Method scalaz/Zip$.fzip:(Lscalaz/LazyTuple2;Lscalaz/Zip;)Ljava/lang/Object;
       8: areturn

  public static <F, G> scalaz.Zip<F> fromIso(scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, F, G>, scalaz.Zip<G>);
    Code:
       0: getstatic     #43                 // Field scalaz/Zip$.MODULE$:Lscalaz/Zip$;
       3: pop
       4: new           #31                 // class scalaz/Zip$$anon$6
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #70                 // Method scalaz/Zip$$anon$6."<init>":(Lscalaz/Zip;Lscalaz/Isomorphisms$Iso2;)V
      13: areturn

  public static <F> scalaz.Zip<F> apply(scalaz.Zip<F>);
    Code:
       0: getstatic     #43                 // Field scalaz/Zip$.MODULE$:Lscalaz/Zip$;
       3: pop
       4: aload_0
       5: areturn

  public abstract void scalaz$Zip$_setter_$zipSyntax_$eq(scalaz.syntax.ZipSyntax<F>);

  public abstract <A, B> F zip(scala.Function0<F>, scala.Function0<F>);

  public static scalaz.Zip compose$(scalaz.Zip, scalaz.Functor, scalaz.Zip);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #92                 // InterfaceMethod compose:(Lscalaz/Functor;Lscalaz/Zip;)Lscalaz/Zip;
       6: areturn

  public default <G> scalaz.Zip<?> compose(scalaz.Functor<F>, scalaz.Zip<G>);
    Code:
       0: new           #21                 // class scalaz/Zip$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #97                 // Method scalaz/Zip$$anon$1."<init>":(Lscalaz/Zip;Lscalaz/Functor;Lscalaz/Zip;)V
      10: areturn

  public static scalaz.Zip product$(scalaz.Zip, scalaz.Zip);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #103                // InterfaceMethod product:(Lscalaz/Zip;)Lscalaz/Zip;
       5: areturn

  public default <G> scalaz.Zip<?> product(scalaz.Zip<G>);
    Code:
       0: new           #23                 // class scalaz/Zip$$anon$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #107                // Method scalaz/Zip$$anon$2."<init>":(Lscalaz/Zip;Lscalaz/Zip;)V
       9: areturn

  public static java.lang.Object zipWith$(scalaz.Zip, scala.Function0, scala.Function0, scala.Function2, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #116                // InterfaceMethod zipWith:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Functor;)Ljava/lang/Object;
       9: areturn

  public default <A, B, C> F zipWith(scala.Function0<F>, scala.Function0<F>, scala.Function2<A, B, C>, scalaz.Functor<F>);
    Code:
       0: aload         4
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokeinterface #121,  3          // InterfaceMethod zip:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      10: aload_3
      11: invokedynamic #142,  0            // InvokeDynamic #0:apply:(Lscala/Function2;)Lscala/Function1;
      16: invokeinterface #148,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: areturn

  public static java.lang.Object apzip$(scalaz.Zip, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #153                // InterfaceMethod apzip:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public default <A, B> F apzip(scala.Function0<scala.Function1<F, F>>, scala.Function0<F>);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload_2
       4: invokedynamic #163,  0            // InvokeDynamic #1:apply:(Lscala/Function0;Lscala/Function0;)Lscala/Function0;
       9: invokeinterface #121,  3          // InterfaceMethod zip:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static java.lang.Object apzipPL$(scalaz.Zip, scala.Function0, scala.Function0, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #170                // InterfaceMethod apzipPL:(Lscala/Function0;Lscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public default <A, B> F apzipPL(scala.Function0<scalaz.PLensFamily<F, F, F, F>>, scala.Function0<F>, scalaz.Monoid<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokedynamic #182,  0            // InvokeDynamic #2:apply:(Lscala/Function0;Lscalaz/Monoid;)Lscala/Function0;
       8: aload_2
       9: invokeinterface #153,  3          // InterfaceMethod apzip:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static scalaz.Apply ap$(scalaz.Zip, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #188                // InterfaceMethod ap:(Lscalaz/Functor;)Lscalaz/Apply;
       5: areturn

  public default scalaz.Apply<F> ap(scalaz.Functor<F>);
    Code:
       0: new           #25                 // class scalaz/Zip$$anon$3
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #192                // Method scalaz/Zip$$anon$3."<init>":(Lscalaz/Zip;Lscalaz/Functor;)V
       9: areturn

  public static scalaz.Zip$ZipLaw zipLaw$(scalaz.Zip);
    Code:
       0: aload_0
       1: invokespecial #198                // InterfaceMethod zipLaw:()Lscalaz/Zip$ZipLaw;
       4: areturn

  public default scalaz.Zip<F>.ZipLaw zipLaw();
    Code:
       0: new           #27                 // class scalaz/Zip$$anon$4
       3: dup
       4: aload_0
       5: invokespecial #202                // Method scalaz/Zip$$anon$4."<init>":(Lscalaz/Zip;)V
       8: areturn

  public abstract scalaz.syntax.ZipSyntax<F> zipSyntax();

  public static java.lang.Object $anonfun$zipWith$1(scala.Function2, scala.Tuple2);
    Code:
       0: aload_1
       1: ifnull        23
       4: aload_1
       5: invokevirtual #212                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_2
       9: aload_1
      10: invokevirtual #215                // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore_3
      14: aload_0
      15: aload_2
      16: aload_3
      17: invokeinterface #220,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: areturn
      23: new           #222                // class scala/MatchError
      26: dup
      27: aconst_null
      28: invokespecial #225                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      31: athrow

  public static java.lang.Object $anonfun$apzip$1(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #233,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #235                // class scala/Function1
       9: aload_1
      10: invokeinterface #233,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      15: invokeinterface #237,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn

  public static java.lang.Object $anonfun$apzipPL$2(scalaz.PLensFamily, scalaz.Monoid, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokevirtual #247                // Method scalaz/PLensFamily.getOrZ:(Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public static scala.Function1 $anonfun$apzipPL$1(scala.Function0, scalaz.Monoid);
    Code:
       0: aload_0
       1: invokeinterface #233,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #243                // class scalaz/PLensFamily
       9: aload_1
      10: invokedynamic #255,  0            // InvokeDynamic #3:apply:(Lscalaz/PLensFamily;Lscalaz/Monoid;)Lscala/Function1;
      15: areturn

  public static void $init$(scalaz.Zip);
    Code:
       0: aload_0
       1: new           #29                 // class scalaz/Zip$$anon$5
       4: dup
       5: aload_0
       6: invokespecial #257                // Method scalaz/Zip$$anon$5."<init>":(Lscalaz/Zip;)V
       9: invokeinterface #259,  2          // InterfaceMethod scalaz$Zip$_setter_$zipSyntax_$eq:(Lscalaz/syntax/ZipSyntax;)V
      14: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #271,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
