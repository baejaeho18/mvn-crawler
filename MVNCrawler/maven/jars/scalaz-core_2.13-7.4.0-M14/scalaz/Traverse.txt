Compiled from "Traverse.scala"
public interface scalaz.Traverse<F> extends scalaz.Functor<F>, scalaz.Foldable<F> {
  public static scalaz.Traverse<java.lang.Object> idInstance();
    Code:
       0: getstatic     #74                 // Field scalaz/Traverse$.MODULE$:Lscalaz/Traverse$;
       3: pop
       4: getstatic     #79                 // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
       7: invokevirtual #83                 // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      10: areturn

  public static <F, G> scalaz.Traverse<F> fromIso(scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, F, G>, scalaz.Traverse<G>);
    Code:
       0: getstatic     #74                 // Field scalaz/Traverse$.MODULE$:Lscalaz/Traverse$;
       3: pop
       4: new           #59                 // class scalaz/Traverse$$anon$8
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #92                 // Method scalaz/Traverse$$anon$8."<init>":(Lscalaz/Traverse;Lscalaz/Isomorphisms$Iso2;)V
      13: areturn

  public abstract void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<F>);

  public abstract <G, A, B> G traverseImpl(F, scala.Function1<A, G>, scalaz.Applicative<G>);

  public static scalaz.Traverse compose$(scalaz.Traverse, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #112                // InterfaceMethod compose:(Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public default <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: new           #45                 // class scalaz/Traverse$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #116                // Method scalaz/Traverse$$anon$1."<init>":(Lscalaz/Traverse;Lscalaz/Traverse;)V
       9: areturn

  public static scalaz.Bitraverse bicompose$(scalaz.Traverse, scalaz.Bitraverse);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #124                // InterfaceMethod bicompose:(Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public default <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: new           #47                 // class scalaz/Traverse$$anon$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #129                // Method scalaz/Traverse$$anon$2."<init>":(Lscalaz/Traverse;Lscalaz/Bitraverse;)V
       9: areturn

  public static scalaz.Traverse product$(scalaz.Traverse, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #133                // InterfaceMethod product:(Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public default <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: new           #49                 // class scalaz/Traverse$$anon$3
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #134                // Method scalaz/Traverse$$anon$3."<init>":(Lscalaz/Traverse;Lscalaz/Traverse;)V
       9: areturn

  public static scalaz.Traverse1 product0$(scalaz.Traverse, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #140                // InterfaceMethod product0:(Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public default <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: new           #51                 // class scalaz/Traverse$$anon$4
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #145                // Method scalaz/Traverse$$anon$4."<init>":(Lscalaz/Traverse;Lscalaz/Traverse1;)V
       9: areturn

  public static scalaz.Traverse$Traversal traversal$(scalaz.Traverse, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #152                // InterfaceMethod traversal:(Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public default <G> scalaz.Traverse<F>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: new           #61                 // class scalaz/Traverse$Traversal
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #157                // Method scalaz/Traverse$Traversal."<init>":(Lscalaz/Traverse;Lscalaz/Applicative;)V
       9: areturn

  public static scalaz.Traverse$Traversal traversalS$(scalaz.Traverse);
    Code:
       0: aload_0
       1: invokespecial #163                // InterfaceMethod traversalS:()Lscalaz/Traverse$Traversal;
       4: areturn

  public default <S> scalaz.Traverse<F>.Traversal<?> traversalS();
    Code:
       0: new           #53                 // class scalaz/Traverse$$anon$5
       3: dup
       4: aload_0
       5: invokespecial #167                // Method scalaz/Traverse$$anon$5."<init>":(Lscalaz/Traverse;)V
       8: areturn

  public static java.lang.Object traverse$(scalaz.Traverse, java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #173                // InterfaceMethod traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public default <G, A, B> G traverse(F, scala.Function1<A, G>, scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_3
       2: invokeinterface #152,  2          // InterfaceMethod traversal:(Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       7: aload_1
       8: aload_2
       9: invokevirtual #179                // Method scalaz/Traverse$Traversal.run:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      12: areturn

  public static java.lang.Object traverseU$(scalaz.Traverse, java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #186                // InterfaceMethod traverseU:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public default <A, GB> java.lang.Object traverseU(F, scala.Function1<A, GB>, scalaz.Unapply<scalaz.Applicative, GB>);
    Code:
       0: aload_3
       1: invokeinterface #194,  1          // InterfaceMethod scalaz/Unapply.TC:()Ljava/lang/Object;
       6: checkcast     #196                // class scalaz/Applicative
       9: aload_1
      10: aload_3
      11: invokeinterface #200,  1          // InterfaceMethod scalaz/Unapply.leibniz:()Lscalaz/Leibniz;
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload_2
      23: invokevirtual #206                // Method scalaz/Leibniz.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #208                // class scala/Function1
      29: aload_0
      30: invokeinterface #211,  4          // InterfaceMethod scalaz/Applicative.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
      35: areturn

  public static java.lang.Object traverseM$(scalaz.Traverse, java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #218                // InterfaceMethod traverseM:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public default <A, G, B> G traverseM(F, scala.Function1<A, G>, scalaz.Applicative<G>, scalaz.Bind<F>);
    Code:
       0: aload_3
       1: aload_3
       2: aload_1
       3: aload_2
       4: aload_0
       5: invokeinterface #211,  4          // InterfaceMethod scalaz/Applicative.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
      10: aload         4
      12: invokedynamic #238,  0            // InvokeDynamic #0:apply:(Lscalaz/Bind;)Lscala/Function1;
      17: invokeinterface #241,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      22: areturn

  public static scalaz.IndexedStateT traverseS$(scalaz.Traverse, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #247                // InterfaceMethod traverseS:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public default <S, A, B> scalaz.IndexedStateT<S, S, java.lang.Object, F> traverseS(F, scala.Function1<A, scalaz.IndexedStateT<S, S, ?, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #253                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       6: pop
       7: getstatic     #79                 // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      10: invokevirtual #83                 // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      13: checkcast     #196                // class scalaz/Applicative
      16: invokeinterface #257,  4          // InterfaceMethod traverseSTrampoline:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
      21: areturn

  public static scala.Tuple2 runTraverseS$(scalaz.Traverse, java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #264                // InterfaceMethod runTraverseS:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public default <S, A, B> scala.Tuple2<S, F> runTraverseS(F, S, scala.Function1<A, scalaz.IndexedStateT<S, S, ?, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokeinterface #247,  3          // InterfaceMethod traverseS:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       8: aload_2
       9: getstatic     #270                // Field scalaz/Bind$.MODULE$:Lscalaz/Bind$;
      12: pop
      13: getstatic     #79                 // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      16: invokevirtual #83                 // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      19: checkcast     #272                // class scalaz/Bind
      22: invokevirtual #275                // Method scalaz/IndexedStateT.apply:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      25: checkcast     #277                // class scala/Tuple2
      28: areturn

  public static scalaz.IndexedStateT traverseSTrampoline$(scalaz.Traverse, java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #257                // InterfaceMethod traverseSTrampoline:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public default <S, G, A, B> scalaz.IndexedStateT<S, S, java.lang.Object, G> traverseSTrampoline(F, scala.Function1<A, scalaz.IndexedStateT<S, S, ?, G>>, scalaz.Applicative<G>);
    Code:
       0: getstatic     #286                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: pop
       4: getstatic     #291                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
       7: pop
       8: new           #24                 // class scalaz/FreeInstances$$anon$8
      11: dup
      12: aconst_null
      13: invokespecial #294                // Method scalaz/FreeInstances$$anon$8."<init>":(Lscalaz/FreeInstances;)V
      16: astore        6
      18: new           #43                 // class scalaz/StateTInstances2$$anon$12
      21: dup
      22: aconst_null
      23: aload         6
      25: invokespecial #297                // Method scalaz/StateTInstances2$$anon$12."<init>":(Lscalaz/StateTInstances2;Lscalaz/Applicative;)V
      28: aconst_null
      29: astore        6
      31: getstatic     #253                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      34: pop
      35: astore        7
      37: new           #20                 // class scalaz/Applicative$$anon$1
      40: dup
      41: aload         7
      43: aload_3
      44: invokespecial #300                // Method scalaz/Applicative$$anon$1."<init>":(Lscalaz/Applicative;Lscalaz/Applicative;)V
      47: aconst_null
      48: astore        7
      50: astore        4
      52: getstatic     #305                // Field scalaz/State$.MODULE$:Lscalaz/State$;
      55: pop
      56: aload_0
      57: aload_1
      58: aload_2
      59: aload         4
      61: invokedynamic #316,  0            // InvokeDynamic #1:apply:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
      66: astore        5
      68: getstatic     #286                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
      71: pop
      72: getstatic     #321                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      75: pop
      76: new           #31                 // class scalaz/IndexedStateT$Wrap
      79: dup
      80: aload         5
      82: invokespecial #324                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      85: areturn

  public static scalaz.Kleisli traverseKTrampoline$(scalaz.Traverse, java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #336                // InterfaceMethod traverseKTrampoline:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public default <S, G, A, B> scalaz.Kleisli<G, S, F> traverseKTrampoline(F, scala.Function1<A, scalaz.Kleisli<G, S, B>>, scalaz.Applicative<G>);
    Code:
       0: getstatic     #342                // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: pop
       4: getstatic     #291                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
       7: pop
       8: new           #24                 // class scalaz/FreeInstances$$anon$8
      11: dup
      12: aconst_null
      13: invokespecial #294                // Method scalaz/FreeInstances$$anon$8."<init>":(Lscalaz/FreeInstances;)V
      16: astore        5
      18: new           #39                 // class scalaz/KleisliInstances3$$anon$17
      21: dup
      22: aconst_null
      23: aload         5
      25: invokespecial #345                // Method scalaz/KleisliInstances3$$anon$17."<init>":(Lscalaz/KleisliInstances3;Lscalaz/Monad;)V
      28: aconst_null
      29: astore        5
      31: getstatic     #253                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      34: pop
      35: astore        6
      37: new           #20                 // class scalaz/Applicative$$anon$1
      40: dup
      41: aload         6
      43: aload_3
      44: invokespecial #300                // Method scalaz/Applicative$$anon$1."<init>":(Lscalaz/Applicative;Lscalaz/Applicative;)V
      47: aconst_null
      48: astore        6
      50: astore        4
      52: new           #347                // class scalaz/Kleisli
      55: dup
      56: aload_0
      57: aload_1
      58: aload_2
      59: aload         4
      61: invokedynamic #353,  0            // InvokeDynamic #2:apply:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
      66: invokespecial #354                // Method scalaz/Kleisli."<init>":(Lscala/Function1;)V
      69: areturn

  public static java.lang.Object sequence$(scalaz.Traverse, java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #365                // InterfaceMethod sequence:(Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public default <G, A> G sequence(F, scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #152,  2          // InterfaceMethod traversal:(Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       7: aload_1
       8: invokedynamic #373,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
      13: invokevirtual #179                // Method scalaz/Traverse$Traversal.run:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      16: areturn

  public static scalaz.IndexedStateT sequenceS$(scalaz.Traverse, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #379                // InterfaceMethod sequenceS:(Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public default <S, A> scalaz.IndexedStateT<S, S, java.lang.Object, F> sequenceS(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #387,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
       7: invokeinterface #247,  3          // InterfaceMethod traverseS:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
      12: areturn

  public static java.lang.Object sequenceU$(scalaz.Traverse, java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #394                // InterfaceMethod sequenceU:(Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public default <A> java.lang.Object sequenceU(F, scalaz.Unapply<scalaz.Applicative, A>);
    Code:
       0: aload_2
       1: invokeinterface #194,  1          // InterfaceMethod scalaz/Unapply.TC:()Ljava/lang/Object;
       6: checkcast     #196                // class scalaz/Applicative
       9: aload_1
      10: aload_2
      11: invokedynamic #403,  0            // InvokeDynamic #5:apply:(Lscalaz/Unapply;)Lscala/Function1;
      16: aload_0
      17: invokeinterface #211,  4          // InterfaceMethod scalaz/Applicative.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
      22: areturn

  public static java.lang.Object sequenceM$(scalaz.Traverse, java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #410                // InterfaceMethod sequenceM:(Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public default <A, G> G sequenceM(F, scalaz.Applicative<G>, scalaz.Bind<F>);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokeinterface #365,  3          // InterfaceMethod sequence:(Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       9: aload_3
      10: invokedynamic #416,  0            // InvokeDynamic #6:apply:(Lscalaz/Bind;)Lscala/Function1;
      15: invokeinterface #241,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: areturn

  public static java.lang.Object map$(scalaz.Traverse, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #419                // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <A, B> F map(F, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: getstatic     #79                 // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
       4: invokevirtual #83                 // Method scalaz/Id$.id:()Lscalaz/Traverse1;
       7: checkcast     #196                // class scalaz/Applicative
      10: invokeinterface #152,  2          // InterfaceMethod traversal:(Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
      15: aload_1
      16: aload_2
      17: invokevirtual #179                // Method scalaz/Traverse$Traversal.run:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: areturn

  public static scala.Tuple2 foldLShape$(scalaz.Traverse, java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #427                // InterfaceMethod foldLShape:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public default <A, B> scala.Tuple2<B, F> foldLShape(F, B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #438,  0            // InvokeDynamic #7:apply:(Lscala/Function2;)Lscala/Function1;
       9: invokeinterface #264,  4          // InterfaceMethod runTraverseS:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
      14: areturn

  public static java.lang.Object foldLeft$(scalaz.Traverse, java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #444                // InterfaceMethod foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldLeft(F, B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #427,  4          // InterfaceMethod foldLShape:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       9: invokevirtual #448                // Method scala/Tuple2._1:()Ljava/lang/Object;
      12: areturn

  public static java.lang.Object foldMap$(scalaz.Traverse, java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #454                // InterfaceMethod foldMap:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldMap(F, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokeinterface #461,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
       8: aload_3
       9: aload_2
      10: invokedynamic #471,  0            // InvokeDynamic #8:apply:(Lscalaz/Monoid;Lscala/Function1;)Lscala/Function2;
      15: invokeinterface #427,  4          // InterfaceMethod foldLShape:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
      20: invokevirtual #448                // Method scala/Tuple2._1:()Ljava/lang/Object;
      23: areturn

  public static java.lang.Object foldRight$(scalaz.Traverse, java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #477                // InterfaceMethod foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldRight(F, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokedynamic #487,  0            // InvokeDynamic #9:apply:(Lscala/Function2;)Lscala/Function1;
       8: getstatic     #492                // Field scalaz/EndoByName$.MODULE$:Lscalaz/EndoByName$;
      11: pop
      12: new           #22                 // class scalaz/EndoByNameInstances$$anon$5
      15: dup
      16: aconst_null
      17: invokespecial #495                // Method scalaz/EndoByNameInstances$$anon$5."<init>":(Lscalaz/EndoByNameInstances;)V
      20: invokeinterface #454,  4          // InterfaceMethod foldMap:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      25: checkcast     #497                // class scalaz/EndoByName
      28: dup
      29: ifnonnull     34
      32: aconst_null
      33: athrow
      34: invokevirtual #499                // Method scalaz/EndoByName.run:()Lscala/Function1;
      37: aload_2
      38: invokeinterface #501,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      43: areturn

  public static java.lang.Object reverse$(scalaz.Traverse, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #506                // InterfaceMethod reverse:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public default <A> F reverse(F);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #512                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       5: invokedynamic #521,  0            // InvokeDynamic #10:apply:()Lscala/Function2;
      10: invokeinterface #524,  4          // InterfaceMethod mapAccumL:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
      15: astore_2
      16: aload_2
      17: ifnull        37
      20: aload_2
      21: invokevirtual #448                // Method scala/Tuple2._1:()Ljava/lang/Object;
      24: checkcast     #526                // class scala/collection/immutable/List
      27: astore_3
      28: aload_2
      29: invokevirtual #529                // Method scala/Tuple2._2:()Ljava/lang/Object;
      32: astore        4
      34: goto          46
      37: new           #531                // class scala/MatchError
      40: dup
      41: aconst_null
      42: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      45: athrow
      46: aload_0
      47: aload         4
      49: aload_3
      50: invokedynamic #539,  0            // InvokeDynamic #11:apply:()Lscala/Function1;
      55: invokeinterface #264,  4          // InterfaceMethod runTraverseS:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
      60: invokevirtual #529                // Method scala/Tuple2._2:()Ljava/lang/Object;
      63: areturn

  public static scala.Tuple2 zipWith$(scalaz.Traverse, java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #547                // InterfaceMethod zipWith:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public default <A, B, C> scala.Tuple2<scala.collection.immutable.List<B>, F> zipWith(F, F, scala.Function2<A, scala.Option<B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: invokeinterface #552,  2          // InterfaceMethod toList:(Ljava/lang/Object;)Lscala/collection/immutable/List;
       9: aload_3
      10: invokedynamic #557,  0            // InvokeDynamic #12:apply:(Lscala/Function2;)Lscala/Function1;
      15: invokeinterface #264,  4          // InterfaceMethod runTraverseS:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
      20: areturn

  public static java.lang.Object zipWithL$(scalaz.Traverse, java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #561                // InterfaceMethod zipWithL:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public default <A, B, C> F zipWithL(F, F, scala.Function2<A, scala.Option<B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #547,  4          // InterfaceMethod zipWith:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       9: invokevirtual #529                // Method scala/Tuple2._2:()Ljava/lang/Object;
      12: areturn

  public static java.lang.Object zipWithR$(scalaz.Traverse, java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #566                // InterfaceMethod zipWithR:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public default <A, B, C> F zipWithR(F, F, scala.Function2<scala.Option<A>, B, C>);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload_3
       4: invokedynamic #577,  0            // InvokeDynamic #13:apply:(Lscala/Function2;)Lscala/Function2;
       9: invokeinterface #547,  4          // InterfaceMethod zipWith:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
      14: invokevirtual #529                // Method scala/Tuple2._2:()Ljava/lang/Object;
      17: areturn

  public static java.lang.Object indexed$(scalaz.Traverse, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #581                // InterfaceMethod indexed:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public default <A> F indexed(F);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokestatic  #587                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       6: invokedynamic #594,  0            // InvokeDynamic #14:apply:()Lscala/Function2;
      11: invokeinterface #524,  4          // InterfaceMethod mapAccumL:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
      16: invokevirtual #529                // Method scala/Tuple2._2:()Ljava/lang/Object;
      19: areturn

  public static java.lang.Object zipL$(scalaz.Traverse, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #599                // InterfaceMethod zipL:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public default <A, B> F zipL(F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #607,  0            // InvokeDynamic #15:apply:()Lscala/Function2;
       8: invokeinterface #561,  4          // InterfaceMethod zipWithL:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object zipR$(scalaz.Traverse, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #611                // InterfaceMethod zipR:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public default <A, B> F zipR(F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #618,  0            // InvokeDynamic #16:apply:()Lscala/Function2;
       8: invokeinterface #566,  4          // InterfaceMethod zipWithR:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      13: areturn

  public static scala.Tuple2 mapAccumL$(scalaz.Traverse, java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #524                // InterfaceMethod mapAccumL:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public default <S, A, B> scala.Tuple2<S, F> mapAccumL(F, S, scala.Function2<S, A, scala.Tuple2<S, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #625,  0            // InvokeDynamic #17:apply:(Lscala/Function2;)Lscala/Function1;
       9: invokeinterface #264,  4          // InterfaceMethod runTraverseS:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
      14: areturn

  public static scala.Tuple2 mapAccumR$(scalaz.Traverse, java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #629                // InterfaceMethod mapAccumR:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public default <S, A, B> scala.Tuple2<S, F> mapAccumR(F, S, scala.Function2<S, A, scala.Tuple2<S, B>>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokeinterface #506,  2          // InterfaceMethod reverse:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_2
       9: aload_3
      10: invokeinterface #524,  4          // InterfaceMethod mapAccumL:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
      15: astore        4
      17: aload         4
      19: ifnull        54
      22: aload         4
      24: invokevirtual #448                // Method scala/Tuple2._1:()Ljava/lang/Object;
      27: astore        5
      29: aload         4
      31: invokevirtual #529                // Method scala/Tuple2._2:()Ljava/lang/Object;
      34: astore        6
      36: new           #277                // class scala/Tuple2
      39: dup
      40: aload         5
      42: aload_0
      43: aload         6
      45: invokeinterface #506,  2          // InterfaceMethod reverse:(Ljava/lang/Object;)Ljava/lang/Object;
      50: invokespecial #632                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      53: areturn
      54: new           #531                // class scala/MatchError
      57: dup
      58: aconst_null
      59: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      62: athrow

  public static scalaz.Traverse$TraverseLaw traverseLaw$(scalaz.Traverse);
    Code:
       0: aload_0
       1: invokespecial #638                // InterfaceMethod traverseLaw:()Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public default scalaz.Traverse<F>.TraverseLaw traverseLaw();
    Code:
       0: new           #55                 // class scalaz/Traverse$$anon$6
       3: dup
       4: aload_0
       5: invokespecial #640                // Method scalaz/Traverse$$anon$6."<init>":(Lscalaz/Traverse;)V
       8: areturn

  public abstract scalaz.syntax.TraverseSyntax<F> traverseSyntax();

  public static java.lang.Object $anonfun$traverseM$1(scalaz.Bind, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #648,  2          // InterfaceMethod scalaz/Bind.join:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static scalaz.IndexedStateT $anonfun$traverseSTrampoline$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #501,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #28                 // class scalaz/IndexedStateT
      10: getstatic     #270                // Field scalaz/Bind$.MODULE$:Lscalaz/Bind$;
      13: pop
      14: getstatic     #79                 // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      17: invokevirtual #83                 // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      20: checkcast     #272                // class scalaz/Bind
      23: getstatic     #291                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
      26: pop
      27: new           #24                 // class scalaz/FreeInstances$$anon$8
      30: dup
      31: aconst_null
      32: invokespecial #294                // Method scalaz/FreeInstances$$anon$8."<init>":(Lscalaz/FreeInstances;)V
      35: invokevirtual #655                // Method scalaz/IndexedStateT.lift:(Lscalaz/Bind;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
      38: areturn

  public static scala.Tuple2 $anonfun$traverseSTrampoline$1(scalaz.Traverse, java.lang.Object, scala.Function1, scalaz.Applicative, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #663,  0            // InvokeDynamic #18:apply:(Lscala/Function1;)Lscala/Function1;
       8: aload_3
       9: invokeinterface #173,  4          // InterfaceMethod traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      14: checkcast     #28                 // class scalaz/IndexedStateT
      17: astore        5
      19: aload         5
      21: getstatic     #291                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
      24: pop
      25: new           #24                 // class scalaz/FreeInstances$$anon$8
      28: dup
      29: aconst_null
      30: invokespecial #294                // Method scalaz/FreeInstances$$anon$8."<init>":(Lscalaz/FreeInstances;)V
      33: astore        6
      35: ifnonnull     40
      38: aconst_null
      39: athrow
      40: aload         5
      42: aload         4
      44: aload         6
      46: invokevirtual #275                // Method scalaz/IndexedStateT.apply:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      49: aconst_null
      50: astore        6
      52: checkcast     #665                // class scalaz/Free
      55: getstatic     #670                // Field scalaz/Leibniz$.MODULE$:Lscalaz/Leibniz$;
      58: pop
      59: new           #41                 // class scalaz/Leibniz$$anon$2
      62: dup
      63: invokespecial #673                // Method scalaz/Leibniz$$anon$2."<init>":()V
      66: invokevirtual #676                // Method scalaz/Free.run:(Lscalaz/Leibniz;)Ljava/lang/Object;
      69: checkcast     #277                // class scala/Tuple2
      72: areturn

  public static java.lang.Object $anonfun$traverseKTrampoline$3(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #342                // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: pop
       4: aload_0
       5: aload_1
       6: invokeinterface #501,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #347                // class scalaz/Kleisli
      14: invokevirtual #685                // Method scalaz/Kleisli.run:()Lscala/Function1;
      17: aload_2
      18: invokeinterface #501,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      23: areturn

  public static scalaz.Kleisli $anonfun$traverseKTrampoline$2(scala.Function1, java.lang.Object);
    Code:
       0: new           #347                // class scalaz/Kleisli
       3: dup
       4: aload_0
       5: aload_1
       6: invokedynamic #693,  0            // InvokeDynamic #19:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      11: invokespecial #354                // Method scalaz/Kleisli."<init>":(Lscala/Function1;)V
      14: getstatic     #291                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
      17: pop
      18: new           #24                 // class scalaz/FreeInstances$$anon$8
      21: dup
      22: aconst_null
      23: invokespecial #294                // Method scalaz/FreeInstances$$anon$8."<init>":(Lscalaz/FreeInstances;)V
      26: invokevirtual #696                // Method scalaz/Kleisli.lift:(Lscalaz/Applicative;)Lscalaz/Kleisli;
      29: areturn

  public static java.lang.Object $anonfun$traverseKTrampoline$1(scalaz.Traverse, java.lang.Object, scala.Function1, scalaz.Applicative, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #704,  0            // InvokeDynamic #20:apply:(Lscala/Function1;)Lscala/Function1;
       8: aload_3
       9: invokeinterface #173,  4          // InterfaceMethod traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      14: checkcast     #347                // class scalaz/Kleisli
      17: invokevirtual #685                // Method scalaz/Kleisli.run:()Lscala/Function1;
      20: aload         4
      22: invokeinterface #501,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #665                // class scalaz/Free
      30: getstatic     #670                // Field scalaz/Leibniz$.MODULE$:Lscalaz/Leibniz$;
      33: pop
      34: new           #41                 // class scalaz/Leibniz$$anon$2
      37: dup
      38: invokespecial #673                // Method scalaz/Leibniz$$anon$2."<init>":()V
      41: invokevirtual #676                // Method scalaz/Free.run:(Lscalaz/Leibniz;)Ljava/lang/Object;
      44: areturn

  public static java.lang.Object $anonfun$sequence$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static scalaz.IndexedStateT $anonfun$sequenceS$1(scalaz.IndexedStateT);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$sequenceU$1(scalaz.Unapply, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #708,  2          // InterfaceMethod scalaz/Unapply.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object $anonfun$sequenceM$1(scalaz.Bind, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #648,  2          // InterfaceMethod scalaz/Bind.join:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object $anonfun$foldLShape$2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokeinterface #718,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static scalaz.IndexedStateT $anonfun$foldLShape$1(scala.Function2, java.lang.Object);
    Code:
       0: getstatic     #305                // Field scalaz/State$.MODULE$:Lscalaz/State$;
       3: pop
       4: aload_0
       5: aload_1
       6: invokedynamic #725,  0            // InvokeDynamic #21:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      11: astore_2
      12: getstatic     #305                // Field scalaz/State$.MODULE$:Lscalaz/State$;
      15: pop
      16: aload_2
      17: invokedynamic #733,  0            // InvokeDynamic #22:apply:(Lscala/Function1;)Lscala/Function1;
      22: astore_3
      23: getstatic     #286                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
      26: pop
      27: getstatic     #321                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      30: pop
      31: new           #31                 // class scalaz/IndexedStateT$Wrap
      34: dup
      35: aload_3
      36: invokespecial #324                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      39: areturn

  public static java.lang.Object $anonfun$foldMap$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #501,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object $anonfun$foldMap$1(scalaz.Monoid, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload_3
       4: invokedynamic #748,  0            // InvokeDynamic #23:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
       9: invokeinterface #752,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static java.lang.Object $anonfun$foldRight$2(scala.Function2, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #718,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static scalaz.EndoByName $anonfun$foldRight$1(scala.Function2, java.lang.Object);
    Code:
       0: getstatic     #762                // Field scalaz/Endo$.MODULE$:Lscalaz/Endo$;
       3: pop
       4: aload_0
       5: aload_1
       6: invokedynamic #768,  0            // InvokeDynamic #24:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      11: astore_2
      12: new           #497                // class scalaz/EndoByName
      15: dup
      16: aload_2
      17: invokespecial #769                // Method scalaz/EndoByName."<init>":(Lscala/Function1;)V
      20: areturn

  public static scala.Tuple2 $anonfun$reverse$1(scala.collection.immutable.List, java.lang.Object);
    Code:
       0: new           #277                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokevirtual #775                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
       9: aload_1
      10: invokespecial #632                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      13: areturn

  public static java.lang.Object $anonfun$reverse$4(scala.collection.immutable.List, scala.runtime.BoxedUnit);
    Code:
       0: aload_0
       1: invokevirtual #782                // Method scala/collection/immutable/List.head:()Ljava/lang/Object;
       4: areturn

  public static scalaz.IndexedStateT $anonfun$reverse$3(scala.collection.immutable.List);
    Code:
       0: getstatic     #305                // Field scalaz/State$.MODULE$:Lscalaz/State$;
       3: aload_0
       4: invokevirtual #789                // Method scala/collection/immutable/List.tail:()Ljava/lang/Object;
       7: invokestatic  #793                // InterfaceMethod scalaz/StateFunctions.put$:(Lscalaz/StateFunctions;Ljava/lang/Object;)Lscalaz/IndexedStateT;
      10: aload_0
      11: invokedynamic #801,  0            // InvokeDynamic #25:apply:(Lscala/collection/immutable/List;)Lscala/Function1;
      16: getstatic     #253                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      19: pop
      20: getstatic     #79                 // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      23: invokevirtual #83                 // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      26: checkcast     #196                // class scalaz/Applicative
      29: astore_3
      30: astore_2
      31: dup
      32: ifnonnull     37
      35: aconst_null
      36: athrow
      37: astore_1
      38: aload_3
      39: aload_2
      40: invokedynamic #809,  0            // InvokeDynamic #26:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      45: invokedynamic #819,  0            // InvokeDynamic #27:apply:(Lscala/Function1;)Lscala/Function2;
      50: astore        4
      52: new           #26                 // class scalaz/IndexedStateT$FlatMap
      55: dup
      56: aload_1
      57: aload         4
      59: invokespecial #822                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
      62: areturn

  public static scalaz.IndexedStateT $anonfun$reverse$2(java.lang.Object);
    Code:
       0: getstatic     #305                // Field scalaz/State$.MODULE$:Lscalaz/State$;
       3: invokestatic  #831                // InterfaceMethod scalaz/StateFunctions.init$:(Lscalaz/StateFunctions;)Lscalaz/IndexedStateT;
       6: invokedynamic #836,  0            // InvokeDynamic #28:apply:()Lscala/Function1;
      11: astore_2
      12: dup
      13: ifnonnull     18
      16: aconst_null
      17: athrow
      18: astore_1
      19: aload_2
      20: invokedynamic #819,  0            // InvokeDynamic #27:apply:(Lscala/Function1;)Lscala/Function2;
      25: astore_3
      26: new           #26                 // class scalaz/IndexedStateT$FlatMap
      29: dup
      30: aload_1
      31: aload_3
      32: invokespecial #822                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
      35: areturn

  public static java.lang.Object $anonfun$zipWith$3(scala.Function2, java.lang.Object, scala.collection.immutable.List, scala.runtime.BoxedUnit);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #849                // Method scala/collection/immutable/List.headOption:()Lscala/Option;
       6: invokeinterface #718,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public static scalaz.IndexedStateT $anonfun$zipWith$2(scala.Function2, java.lang.Object, scala.collection.immutable.List);
    Code:
       0: getstatic     #305                // Field scalaz/State$.MODULE$:Lscalaz/State$;
       3: aload_2
       4: invokevirtual #856                // Method scala/collection/immutable/List.isEmpty:()Z
       7: ifeq          14
      10: aload_2
      11: goto          18
      14: aload_2
      15: invokevirtual #789                // Method scala/collection/immutable/List.tail:()Ljava/lang/Object;
      18: invokestatic  #793                // InterfaceMethod scalaz/StateFunctions.put$:(Lscalaz/StateFunctions;Ljava/lang/Object;)Lscalaz/IndexedStateT;
      21: aload_0
      22: aload_1
      23: aload_2
      24: invokedynamic #862,  0            // InvokeDynamic #29:apply:(Lscala/Function2;Ljava/lang/Object;Lscala/collection/immutable/List;)Lscala/Function1;
      29: getstatic     #253                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      32: pop
      33: getstatic     #79                 // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      36: invokevirtual #83                 // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      39: checkcast     #196                // class scalaz/Applicative
      42: astore        5
      44: astore        4
      46: dup
      47: ifnonnull     52
      50: aconst_null
      51: athrow
      52: astore_3
      53: aload         5
      55: aload         4
      57: invokedynamic #809,  0            // InvokeDynamic #26:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      62: invokedynamic #819,  0            // InvokeDynamic #27:apply:(Lscala/Function1;)Lscala/Function2;
      67: astore        6
      69: new           #26                 // class scalaz/IndexedStateT$FlatMap
      72: dup
      73: aload_3
      74: aload         6
      76: invokespecial #822                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
      79: areturn

  public static scalaz.IndexedStateT $anonfun$zipWith$1(scala.Function2, java.lang.Object);
    Code:
       0: getstatic     #305                // Field scalaz/State$.MODULE$:Lscalaz/State$;
       3: invokestatic  #831                // InterfaceMethod scalaz/StateFunctions.init$:(Lscalaz/StateFunctions;)Lscalaz/IndexedStateT;
       6: aload_0
       7: aload_1
       8: invokedynamic #866,  0            // InvokeDynamic #30:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      13: astore_3
      14: dup
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: astore_2
      21: aload_3
      22: invokedynamic #819,  0            // InvokeDynamic #27:apply:(Lscala/Function1;)Lscala/Function2;
      27: astore        4
      29: new           #26                 // class scalaz/IndexedStateT$FlatMap
      32: dup
      33: aload_2
      34: aload         4
      36: invokespecial #822                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
      39: areturn

  public static java.lang.Object $anonfun$zipWithR$1(scala.Function2, java.lang.Object, scala.Option);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokeinterface #718,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static scala.Tuple2 $anonfun$indexed$1(int, java.lang.Object);
    Code:
       0: new           #277                // class scala/Tuple2
       3: dup
       4: iload_0
       5: iconst_1
       6: iadd
       7: invokestatic  #587                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      10: new           #277                // class scala/Tuple2
      13: dup
      14: iload_0
      15: invokestatic  #587                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      18: aload_1
      19: invokespecial #632                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      22: invokespecial #632                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      25: areturn

  public static scala.Tuple2 $anonfun$zipL$1(java.lang.Object, scala.Option);
    Code:
       0: new           #277                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #632                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  public static scala.Tuple2 $anonfun$zipR$1(scala.Option, java.lang.Object);
    Code:
       0: new           #277                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #632                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  public static scala.Tuple2 $anonfun$mapAccumL$2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokeinterface #718,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #277                // class scala/Tuple2
      11: astore_3
      12: aload_3
      13: ifnull        29
      16: aload_3
      17: invokevirtual #448                // Method scala/Tuple2._1:()Ljava/lang/Object;
      20: pop
      21: aload_3
      22: invokevirtual #529                // Method scala/Tuple2._2:()Ljava/lang/Object;
      25: pop
      26: goto          38
      29: new           #531                // class scala/MatchError
      32: dup
      33: aconst_null
      34: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      37: athrow
      38: new           #277                // class scala/Tuple2
      41: dup
      42: aload_2
      43: aload_3
      44: invokespecial #632                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      47: areturn

  public static java.lang.Object $anonfun$mapAccumL$4(java.lang.Object, scala.runtime.BoxedUnit);
    Code:
       0: aload_0
       1: areturn

  public static scalaz.IndexedStateT $anonfun$mapAccumL$3(scala.Tuple2);
    Code:
       0: aload_0
       1: ifnull        92
       4: aload_0
       5: invokevirtual #529                // Method scala/Tuple2._2:()Ljava/lang/Object;
       8: checkcast     #277                // class scala/Tuple2
      11: astore_1
      12: aload_1
      13: ifnull        92
      16: aload_1
      17: invokevirtual #448                // Method scala/Tuple2._1:()Ljava/lang/Object;
      20: astore_2
      21: aload_1
      22: invokevirtual #529                // Method scala/Tuple2._2:()Ljava/lang/Object;
      25: astore_3
      26: getstatic     #305                // Field scalaz/State$.MODULE$:Lscalaz/State$;
      29: aload_2
      30: invokestatic  #793                // InterfaceMethod scalaz/StateFunctions.put$:(Lscalaz/StateFunctions;Ljava/lang/Object;)Lscalaz/IndexedStateT;
      33: aload_3
      34: invokedynamic #896,  0            // InvokeDynamic #31:apply:(Ljava/lang/Object;)Lscala/Function1;
      39: getstatic     #253                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      42: pop
      43: getstatic     #79                 // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      46: invokevirtual #83                 // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      49: checkcast     #196                // class scalaz/Applicative
      52: astore        6
      54: astore        5
      56: dup
      57: ifnonnull     62
      60: aconst_null
      61: athrow
      62: astore        4
      64: aload         6
      66: aload         5
      68: invokedynamic #809,  0            // InvokeDynamic #26:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      73: invokedynamic #819,  0            // InvokeDynamic #27:apply:(Lscala/Function1;)Lscala/Function2;
      78: astore        7
      80: new           #26                 // class scalaz/IndexedStateT$FlatMap
      83: dup
      84: aload         4
      86: aload         7
      88: invokespecial #822                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
      91: areturn
      92: new           #531                // class scala/MatchError
      95: dup
      96: aload_0
      97: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     100: athrow

  public static scalaz.IndexedStateT $anonfun$mapAccumL$1(scala.Function2, java.lang.Object);
    Code:
       0: getstatic     #305                // Field scalaz/State$.MODULE$:Lscalaz/State$;
       3: invokestatic  #831                // InterfaceMethod scalaz/StateFunctions.init$:(Lscalaz/StateFunctions;)Lscalaz/IndexedStateT;
       6: aload_0
       7: aload_1
       8: invokedynamic #902,  0            // InvokeDynamic #32:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      13: getstatic     #253                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      16: pop
      17: getstatic     #79                 // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      20: invokevirtual #83                 // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      23: checkcast     #196                // class scalaz/Applicative
      26: astore        4
      28: astore_3
      29: dup
      30: ifnonnull     35
      33: aconst_null
      34: athrow
      35: astore_2
      36: aload         4
      38: aload_3
      39: invokedynamic #809,  0            // InvokeDynamic #26:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      44: invokedynamic #819,  0            // InvokeDynamic #27:apply:(Lscala/Function1;)Lscala/Function2;
      49: astore        5
      51: new           #26                 // class scalaz/IndexedStateT$FlatMap
      54: dup
      55: aload_2
      56: aload         5
      58: invokespecial #822                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
      61: aconst_null
      62: astore        5
      64: aconst_null
      65: astore_2
      66: aconst_null
      67: astore_3
      68: aconst_null
      69: astore        4
      71: invokedynamic #907,  0            // InvokeDynamic #33:apply:()Lscala/Function1;
      76: astore        7
      78: astore        6
      80: aload         7
      82: invokedynamic #819,  0            // InvokeDynamic #27:apply:(Lscala/Function1;)Lscala/Function2;
      87: astore        8
      89: new           #26                 // class scalaz/IndexedStateT$FlatMap
      92: dup
      93: aload         6
      95: aload         8
      97: invokespecial #822                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
     100: areturn

  public static void $init$(scalaz.Traverse);
    Code:
       0: aload_0
       1: new           #57                 // class scalaz/Traverse$$anon$7
       4: dup
       5: aload_0
       6: invokespecial #909                // Method scalaz/Traverse$$anon$7."<init>":(Lscalaz/Traverse;)V
       9: invokeinterface #911,  2          // InterfaceMethod scalaz$Traverse$_setter_$traverseSyntax_$eq:(Lscalaz/syntax/TraverseSyntax;)V
      14: return

  public static scala.Tuple2 $anonfun$indexed$1$adapted(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #915                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       4: aload_1
       5: invokestatic  #917                // InterfaceMethod $anonfun$indexed$1:(ILjava/lang/Object;)Lscala/Tuple2;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #929,  0            // InvokeDynamic #34:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
