Compiled from "Heap.scala"
public final class scalaz.Heap$ extends scalaz.HeapInstances {
  public static final scalaz.Heap$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scalaz/Heap$
       3: dup
       4: invokespecial #39                 // Method "<init>":()V
       7: putstatic     #41                 // Field MODULE$:Lscalaz/Heap$;
      10: return

  public <F, A> scalaz.Heap<A> fromData(F, scalaz.Foldable<F>, scalaz.Order<A>);
    Code:
       0: getstatic     #52                 // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: pop
       4: aload_2
       5: aload_1
       6: getstatic     #55                 // Field scalaz/Heap$Empty$.MODULE$:Lscalaz/Heap$Empty$;
       9: pop
      10: new           #19                 // class scalaz/Heap$Empty$$anon$1
      13: dup
      14: invokespecial #56                 // Method scalaz/Heap$Empty$$anon$1."<init>":()V
      17: aload_3
      18: invokedynamic #78,  0             // InvokeDynamic #0:apply:(Lscalaz/Order;)Lscala/Function2;
      23: invokeinterface #84,  4           // InterfaceMethod scalaz/Foldable.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      28: checkcast     #16                 // class scalaz/Heap
      31: areturn

  public <F, A> scalaz.Heap<A> fromCodata(F, scalaz.Foldable<F>, scalaz.Order<A>);
    Code:
       0: getstatic     #52                 // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: pop
       4: aload_2
       5: invokedynamic #102,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
      10: aload_3
      11: invokedynamic #114,  0            // InvokeDynamic #2:apply:(Lscalaz/Order;)Lscala/Function1;
      16: astore        5
      18: astore        4
      20: ifnonnull     25
      23: aconst_null
      24: athrow
      25: aload_2
      26: aload_1
      27: aload         4
      29: aload         5
      31: invokedynamic #124,  0            // InvokeDynamic #3:apply:(Lscala/Function1;)Lscala/Function2;
      36: invokeinterface #128,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      41: checkcast     #16                 // class scalaz/Heap
      44: areturn

  public <F, A> scalaz.Heap<A> fromDataWith(scala.Function2<A, A, java.lang.Object>, F, scalaz.Foldable<F>);
    Code:
       0: getstatic     #52                 // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: pop
       4: aload_3
       5: aload_2
       6: getstatic     #55                 // Field scalaz/Heap$Empty$.MODULE$:Lscalaz/Heap$Empty$;
       9: pop
      10: new           #19                 // class scalaz/Heap$Empty$$anon$1
      13: dup
      14: invokespecial #56                 // Method scalaz/Heap$Empty$$anon$1."<init>":()V
      17: aload_1
      18: invokedynamic #149,  0            // InvokeDynamic #4:apply:(Lscala/Function2;)Lscala/Function2;
      23: invokeinterface #84,  4           // InterfaceMethod scalaz/Foldable.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      28: checkcast     #16                 // class scalaz/Heap
      31: areturn

  public <F, A> scalaz.IList<A> sort(F, scalaz.Foldable<F>, scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #158                // Method fromData:(Ljava/lang/Object;Lscalaz/Foldable;Lscalaz/Order;)Lscalaz/Heap;
       7: invokevirtual #162                // Method scalaz/Heap.toIList:()Lscalaz/IList;
      10: areturn

  public <F, A> scalaz.IList<A> sortWith(scala.Function2<A, A, java.lang.Object>, F, scalaz.Foldable<F>);
    Code:
       0: getstatic     #52                 // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: pop
       4: aload_3
       5: aload_2
       6: getstatic     #55                 // Field scalaz/Heap$Empty$.MODULE$:Lscalaz/Heap$Empty$;
       9: pop
      10: new           #19                 // class scalaz/Heap$Empty$$anon$1
      13: dup
      14: invokespecial #56                 // Method scalaz/Heap$Empty$$anon$1."<init>":()V
      17: aload_1
      18: invokedynamic #149,  0            // InvokeDynamic #4:apply:(Lscala/Function2;)Lscala/Function2;
      23: invokeinterface #84,  4           // InterfaceMethod scalaz/Foldable.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      28: checkcast     #16                 // class scalaz/Heap
      31: invokevirtual #162                // Method scalaz/Heap.toIList:()Lscalaz/IList;
      34: areturn

  public <A> scalaz.Heap<A> singleton(A, scalaz.Order<A>);
    Code:
       0: getstatic     #174                // Field scalaz/Heap$impl$.MODULE$:Lscalaz/Heap$impl$;
       3: pop
       4: getstatic     #179                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       7: pop
       8: aload_2
       9: invokedynamic #185,  0            // InvokeDynamic #5:apply:(Lscalaz/Order;)Lscala/Function2;
      14: astore_3
      15: getstatic     #41                 // Field MODULE$:Lscalaz/Heap$;
      18: pop
      19: iconst_1
      20: getstatic     #188                // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      23: pop
      24: aload_1
      25: invokedynamic #198,  0            // InvokeDynamic #6:apply:(Ljava/lang/Object;)Lscala/Function0;
      30: invokedynamic #205,  0            // InvokeDynamic #7:apply:()Lscala/Function0;
      35: astore        5
      37: astore        4
      39: new           #32                 // class scalaz/Tree$Node$$anon$4
      42: dup
      43: aload         4
      45: aload         5
      47: invokespecial #208                // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      50: aconst_null
      51: astore        4
      53: aconst_null
      54: astore        5
      56: astore        7
      58: istore        6
      60: new           #12                 // class scalaz/Heap$$anon$2
      63: dup
      64: iload         6
      66: aload_3
      67: aload         7
      69: invokespecial #211                // Method scalaz/Heap$$anon$2."<init>":(ILscala/Function2;Lscalaz/Tree;)V
      72: areturn

  public <A> scalaz.Heap<A> replicate(A, int, scalaz.Order<A>);
    Code:
       0: iload_2
       1: iconst_0
       2: if_icmpge     14
       5: getstatic     #228                // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
       8: ldc           #230                // String Heap.replicate: negative length
      10: invokevirtual #234                // Method scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
      13: athrow
      14: iload_2
      15: iconst_0
      16: if_icmpne     31
      19: getstatic     #55                 // Field scalaz/Heap$Empty$.MODULE$:Lscalaz/Heap$Empty$;
      22: pop
      23: new           #19                 // class scalaz/Heap$Empty$$anon$1
      26: dup
      27: invokespecial #56                 // Method scalaz/Heap$Empty$$anon$1."<init>":()V
      30: areturn
      31: aload_0
      32: aload_0
      33: aload_1
      34: aload_3
      35: invokevirtual #236                // Method singleton:(Ljava/lang/Object;Lscalaz/Order;)Lscalaz/Heap;
      38: iload_2
      39: invokespecial #240                // Method f$9:(Lscalaz/Heap;I)Lscalaz/Heap;
      42: areturn

  public <A> scalaz.Heap<A> apply(int, scala.Function2<A, A, java.lang.Object>, scalaz.Tree<scalaz.Heap$Ranked<A>>);
    Code:
       0: new           #12                 // class scalaz/Heap$$anon$2
       3: dup
       4: iload_1
       5: aload_2
       6: aload_3
       7: invokespecial #211                // Method scalaz/Heap$$anon$2."<init>":(ILscala/Function2;Lscalaz/Tree;)V
      10: areturn

  public <A> scala.Option<scala.Tuple3<java.lang.Object, scala.Function2<A, A, java.lang.Object>, scalaz.Tree<scalaz.Heap$Ranked<A>>>> unapply(scalaz.Heap<A>);
    Code:
       0: aload_1
       1: invokedynamic #256,  0            // InvokeDynamic #8:apply:()Lscala/Function0;
       6: invokedynamic #267,  0            // InvokeDynamic #9:apply:()Lscala/Function3;
      11: invokevirtual #271                // Method scalaz/Heap.fold:(Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
      14: checkcast     #273                // class scala/Option
      17: areturn

  public static final scalaz.Heap $anonfun$fromData$1(scalaz.Order, scalaz.Heap, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: invokevirtual #279                // Method scalaz/Heap.insert:(Ljava/lang/Object;Lscalaz/Order;)Lscalaz/Heap;
       6: areturn

  public static final scalaz.Heap $anonfun$fromCodata$1();
    Code:
       0: getstatic     #55                 // Field scalaz/Heap$Empty$.MODULE$:Lscalaz/Heap$Empty$;
       3: invokevirtual #281                // Method scalaz/Heap$Empty$.apply:()Lscalaz/Heap;
       6: areturn

  public static final scalaz.Heap $anonfun$fromCodata$3(java.lang.Object, scalaz.Order, scala.Function0);
    Code:
       0: aload_2
       1: invokeinterface #288,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #16                 // class scalaz/Heap
       9: aload_0
      10: aload_1
      11: invokevirtual #279                // Method scalaz/Heap.insert:(Ljava/lang/Object;Lscalaz/Order;)Lscalaz/Heap;
      14: areturn

  public static final scala.Function1 $anonfun$fromCodata$2(scalaz.Order, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #297,  0            // InvokeDynamic #10:apply:(Ljava/lang/Object;Lscalaz/Order;)Lscala/Function1;
       7: areturn

  public static final scalaz.Heap $anonfun$fromDataWith$1(scala.Function2, scalaz.Heap, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokevirtual #302                // Method scalaz/Heap.insertWith:(Lscala/Function2;Ljava/lang/Object;)Lscalaz/Heap;
       6: areturn

  public static final boolean $anonfun$singleton$1(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #311,  3          // InterfaceMethod scalaz/Order.lessThanOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ireturn

  private final scalaz.Heap f$9(scalaz.Heap, int);
    Code:
       0: iload_2
       1: iconst_2
       2: irem
       3: iconst_0
       4: if_icmpne     20
       7: aload_1
       8: aload_1
       9: invokevirtual #315                // Method scalaz/Heap.union:(Lscalaz/Heap;)Lscalaz/Heap;
      12: iload_2
      13: iconst_2
      14: idiv
      15: istore_2
      16: astore_1
      17: goto          0
      20: iload_2
      21: iconst_1
      22: if_icmpne     27
      25: aload_1
      26: areturn
      27: aload_0
      28: aload_1
      29: aload_1
      30: invokevirtual #315                // Method scalaz/Heap.union:(Lscalaz/Heap;)Lscalaz/Heap;
      33: iload_2
      34: iconst_1
      35: isub
      36: iconst_2
      37: idiv
      38: aload_1
      39: invokespecial #319                // Method g$1:(Lscalaz/Heap;ILscalaz/Heap;)Lscalaz/Heap;
      42: areturn

  private final scalaz.Heap g$1(scalaz.Heap, int, scalaz.Heap);
    Code:
       0: iload_2
       1: iconst_2
       2: irem
       3: iconst_0
       4: if_icmpne     22
       7: aload_1
       8: aload_1
       9: invokevirtual #315                // Method scalaz/Heap.union:(Lscalaz/Heap;)Lscalaz/Heap;
      12: iload_2
      13: iconst_2
      14: idiv
      15: aload_3
      16: astore_3
      17: istore_2
      18: astore_1
      19: goto          0
      22: iload_2
      23: iconst_1
      24: if_icmpne     33
      27: aload_1
      28: aload_3
      29: invokevirtual #315                // Method scalaz/Heap.union:(Lscalaz/Heap;)Lscalaz/Heap;
      32: areturn
      33: aload_1
      34: aload_1
      35: invokevirtual #315                // Method scalaz/Heap.union:(Lscalaz/Heap;)Lscalaz/Heap;
      38: iload_2
      39: iconst_1
      40: isub
      41: iconst_2
      42: idiv
      43: aload_1
      44: aload_3
      45: invokevirtual #315                // Method scalaz/Heap.union:(Lscalaz/Heap;)Lscalaz/Heap;
      48: astore_3
      49: istore_2
      50: astore_1
      51: goto          0

  public static final scala.None$ $anonfun$unapply$3();
    Code:
       0: getstatic     #325                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  public static final scala.Some $anonfun$unapply$4(int, scala.Function2, scalaz.Tree);
    Code:
       0: new           #329                // class scala/Some
       3: dup
       4: new           #331                // class scala/Tuple3
       7: dup
       8: iload_0
       9: invokestatic  #337                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      12: aload_1
      13: aload_2
      14: invokespecial #340                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      17: invokespecial #343                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      20: areturn

  private scalaz.Heap$();
    Code:
       0: aload_0
       1: invokespecial #344                // Method scalaz/HeapInstances."<init>":()V
       4: return

  public static final java.lang.Object $anonfun$singleton$1$adapted(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #346                // Method $anonfun$singleton$1:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: invokestatic  #350                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       9: areturn

  public static final scala.Some $anonfun$unapply$4$adapted(java.lang.Object, scala.Function2, scalaz.Tree);
    Code:
       0: aload_0
       1: invokestatic  #354                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       4: aload_1
       5: aload_2
       6: invokestatic  #356                // Method $anonfun$unapply$4:(ILscala/Function2;Lscalaz/Tree;)Lscala/Some;
       9: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #368,  0            // InvokeDynamic #11:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
