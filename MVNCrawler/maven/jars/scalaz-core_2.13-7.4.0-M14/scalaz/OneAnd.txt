Compiled from "OneAnd.scala"
public final class scalaz.OneAnd<F, A> {
  private final scalaz.Name<A> hd;

  private final scalaz.Name<F> tl;

  public static scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, scalaz.NonEmptyList, ?> oneAndNelIso();
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: invokevirtual #71                 // Method scalaz/OneAnd$.oneAndNelIso:()Lscalaz/Isomorphisms$Iso2;
       6: areturn

  public static <F, A> scala.Some<scala.Tuple2<A, F>> unapply(scalaz.OneAnd<F, A>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: aload_0
       4: invokevirtual #77                 // Method scalaz/OneAnd$.unapply:(Lscalaz/OneAnd;)Lscala/Some;
       7: areturn

  public static <F, A> scalaz.OneAnd<F, A> apply(A, F);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: getstatic     #84                 // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
       7: aload_0
       8: aload_1
       9: invokevirtual #86                 // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
      12: areturn

  public static <F> scalaz.Unzip<?> oneAndUnzip(scalaz.Unzip<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: new           #33                 // class scalaz/OneAndInstances$$anon$16
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #95                 // Method scalaz/OneAndInstances$$anon$16."<init>":(Lscalaz/OneAndInstances;Lscalaz/Unzip;)V
      13: areturn

  public static <F> scalaz.Zip<?> oneAndZip(scalaz.Zip<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: new           #31                 // class scalaz/OneAndInstances$$anon$15
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #103                // Method scalaz/OneAndInstances$$anon$15."<init>":(Lscalaz/OneAndInstances;Lscalaz/Zip;)V
      13: areturn

  public static <F, A> scalaz.Semigroup<scalaz.OneAnd<F, A>> oneAndSemigroup(scalaz.Applicative<F>, scalaz.Plus<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: aload_0
       4: aload_1
       5: invokevirtual #111                // Method scalaz/OneAnd$.oneAndSemigroup:(Lscalaz/Applicative;Lscalaz/Plus;)Lscalaz/Semigroup;
       8: areturn

  public static <F, A> scalaz.Order<scalaz.OneAnd<F, A>> oneAndOrder(scalaz.Order<A>, scalaz.Order<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: new           #29                 // class scalaz/OneAndInstances$$anon$14
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: invokespecial #121                // Method scalaz/OneAndInstances$$anon$14."<init>":(Lscalaz/OneAndInstances;Lscalaz/Order;Lscalaz/Order;)V
      14: areturn

  public static <F, A> scalaz.Show<scalaz.OneAnd<F, A>> oneAndShow(scalaz.Show<A>, scalaz.Show<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: aload_0
       4: aload_1
       5: invokevirtual #127                // Method scalaz/OneAnd$.oneAndShow:(Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
       8: areturn

  public static <F> scalaz.Traverse1<?> oneAndTraverse1(scalaz.Traverse1<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: new           #27                 // class scalaz/OneAndInstances$$anon$13
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #135                // Method scalaz/OneAndInstances$$anon$13."<init>":(Lscalaz/OneAndInstances;Lscalaz/Traverse1;)V
      13: areturn

  public static <F> scalaz.Plus<?> oneAndPlus(scalaz.Applicative<F>, scalaz.Plus<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: new           #25                 // class scalaz/OneAndInstances$$anon$12
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: invokespecial #144                // Method scalaz/OneAndInstances$$anon$12."<init>":(Lscalaz/OneAndInstances;Lscalaz/Applicative;Lscalaz/Plus;)V
      14: areturn

  public static <F> scalaz.Traverse1<?> oneAndTraverse(scalaz.Traverse<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: new           #37                 // class scalaz/OneAndInstances0$$anon$11
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #151                // Method scalaz/OneAndInstances0$$anon$11."<init>":(Lscalaz/OneAndInstances0;Lscalaz/Traverse;)V
      13: areturn

  public static <F, A> scalaz.Equal<scalaz.OneAnd<F, A>> oneAndEqual(scalaz.Equal<A>, scalaz.Equal<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: new           #35                 // class scalaz/OneAndInstances0$$anon$10
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: invokespecial #158                // Method scalaz/OneAndInstances0$$anon$10."<init>":(Lscalaz/OneAndInstances0;Lscalaz/Equal;Lscalaz/Equal;)V
      14: areturn

  public static <F> scalaz.Foldable1<?> oneAndFoldable1(scalaz.Foldable1<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: new           #39                 // class scalaz/OneAndInstances0$$anon$9
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #166                // Method scalaz/OneAndInstances0$$anon$9."<init>":(Lscalaz/OneAndInstances0;Lscalaz/Foldable1;)V
      13: areturn

  public static <F> scalaz.Foldable1<?> oneAndFoldable(scalaz.Foldable<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: new           #43                 // class scalaz/OneAndInstances1$$anon$8
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #174                // Method scalaz/OneAndInstances1$$anon$8."<init>":(Lscalaz/OneAndInstances1;Lscalaz/Foldable;)V
      13: areturn

  public static <F> scalaz.Monad<?> oneAndMonad(scalaz.MonadPlus<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: new           #41                 // class scalaz/OneAndInstances1$$anon$7
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #182                // Method scalaz/OneAndInstances1$$anon$7."<init>":(Lscalaz/OneAndInstances1;Lscalaz/MonadPlus;)V
      13: areturn

  public static <F> scalaz.Alt<?> oneAndAlt(scalaz.Alt<F>, scalaz.PlusEmpty<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: new           #47                 // class scalaz/OneAndInstances2$$anon$6
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: invokespecial #191                // Method scalaz/OneAndInstances2$$anon$6."<init>":(Lscalaz/OneAndInstances2;Lscalaz/Alt;Lscalaz/PlusEmpty;)V
      14: areturn

  public static <F> scalaz.Bind<?> oneAndBind(scalaz.Monad<F>, scalaz.Plus<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: new           #45                 // class scalaz/OneAndInstances2$$anon$5
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: invokespecial #201                // Method scalaz/OneAndInstances2$$anon$5."<init>":(Lscalaz/OneAndInstances2;Lscalaz/Monad;Lscalaz/Plus;)V
      14: areturn

  public static <F> scalaz.Applicative<?> oneAndApplicative(scalaz.ApplicativePlus<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: new           #49                 // class scalaz/OneAndInstances3$$anon$4
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #209                // Method scalaz/OneAndInstances3$$anon$4."<init>":(Lscalaz/OneAndInstances3;Lscalaz/ApplicativePlus;)V
      13: areturn

  public static <F> scalaz.Align<?> oneAndAlign(scalaz.Align<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: new           #53                 // class scalaz/OneAndInstances4$$anon$3
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #217                // Method scalaz/OneAndInstances4$$anon$3."<init>":(Lscalaz/OneAndInstances4;Lscalaz/Align;)V
      13: areturn

  public static <F> scalaz.Apply<?> oneAndApply(scalaz.Applicative<F>, scalaz.Plus<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: new           #51                 // class scalaz/OneAndInstances4$$anon$2
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: invokespecial #226                // Method scalaz/OneAndInstances4$$anon$2."<init>":(Lscalaz/OneAndInstances4;Lscalaz/Applicative;Lscalaz/Plus;)V
      14: areturn

  public static <F> scalaz.Functor<?> oneAndFunctor(scalaz.Functor<F>);
    Code:
       0: getstatic     #69                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: new           #55                 // class scalaz/OneAndInstances5$$anon$1
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #233                // Method scalaz/OneAndInstances5$$anon$1."<init>":(Lscalaz/OneAndInstances5;Lscalaz/Functor;)V
      13: areturn

  private scalaz.Name<A> hd();
    Code:
       0: aload_0
       1: getfield      #238                // Field hd:Lscalaz/Name;
       4: areturn

  private scalaz.Name<F> tl();
    Code:
       0: aload_0
       1: getfield      #242                // Field tl:Lscalaz/Name;
       4: areturn

  public A head();
    Code:
       0: aload_0
       1: invokespecial #247                // Method hd:()Lscalaz/Name;
       4: invokevirtual #252                // Method scalaz/Name.value:()Ljava/lang/Object;
       7: areturn

  public F tail();
    Code:
       0: aload_0
       1: invokespecial #256                // Method tl:()Lscalaz/Name;
       4: invokevirtual #252                // Method scalaz/Name.value:()Ljava/lang/Object;
       7: areturn

  public java.lang.String toString();
    Code:
       0: new           #260                // class java/lang/StringBuilder
       3: dup
       4: ldc_w         #261                // int 9
       7: invokespecial #264                // Method java/lang/StringBuilder."<init>":(I)V
      10: ldc_w         #266                // String OneAnd(
      13: invokevirtual #270                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #272                // Method head:()Ljava/lang/Object;
      20: invokevirtual #275                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: ldc_w         #277                // String ,
      26: invokevirtual #270                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: invokevirtual #279                // Method tail:()Ljava/lang/Object;
      33: invokevirtual #275                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: ldc_w         #281                // String )
      39: invokevirtual #270                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #283                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #272                // Method head:()Ljava/lang/Object;
       4: invokevirtual #287                // Method java/lang/Object.hashCode:()I
       7: bipush        13
       9: aload_0
      10: invokevirtual #279                // Method tail:()Ljava/lang/Object;
      13: invokevirtual #287                // Method java/lang/Object.hashCode:()I
      16: imul
      17: iadd
      18: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/OneAnd
       4: ifeq          49
       7: aload_1
       8: checkcast     #2                  // class scalaz/OneAnd
      11: astore_2
      12: aload_0
      13: aload_2
      14: if_acmpeq     45
      17: aload_0
      18: invokevirtual #272                // Method head:()Ljava/lang/Object;
      21: aload_2
      22: invokevirtual #272                // Method head:()Ljava/lang/Object;
      25: invokestatic  #295                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      28: ifeq          47
      31: aload_0
      32: invokevirtual #279                // Method tail:()Ljava/lang/Object;
      35: aload_2
      36: invokevirtual #279                // Method tail:()Ljava/lang/Object;
      39: invokestatic  #295                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      42: ifeq          47
      45: iconst_1
      46: ireturn
      47: iconst_0
      48: ireturn
      49: iconst_0
      50: ireturn

  public scalaz.OneAnd(scalaz.Name<A>, scalaz.Name<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #238                // Field hd:Lscalaz/Name;
       5: aload_0
       6: aload_2
       7: putfield      #242                // Field tl:Lscalaz/Name;
      10: aload_0
      11: invokespecial #300                // Method java/lang/Object."<init>":()V
      14: return
}
