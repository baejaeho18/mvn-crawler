Compiled from "Future.scala"
public class scalaz.std.FutureInstance implements scalaz.Nondeterminism<scala.concurrent.Future>, scalaz.Cobind<scala.concurrent.Future>, scalaz.MonadError<scala.concurrent.Future, java.lang.Throwable>, scalaz.BindRec<scala.concurrent.Future> {
  private final scala.concurrent.ExecutionContext ec;

  private scalaz.syntax.BindRecSyntax<scala.concurrent.Future> bindRecSyntax;

  private scalaz.syntax.MonadErrorSyntax<scala.concurrent.Future, java.lang.Throwable> monadErrorSyntax;

  private scalaz.syntax.ApplicativeErrorSyntax<scala.concurrent.Future, java.lang.Throwable> applicativeErrorSyntax;

  private scalaz.syntax.CobindSyntax<scala.concurrent.Future> cobindSyntax;

  private scalaz.syntax.NondeterminismSyntax<scala.concurrent.Future> nondeterminismSyntax;

  private scalaz.syntax.MonadSyntax<scala.concurrent.Future> monadSyntax;

  private scalaz.syntax.BindSyntax<scala.concurrent.Future> bindSyntax;

  private scalaz.syntax.ApplicativeSyntax<scala.concurrent.Future> applicativeSyntax;

  private scalaz.syntax.InvariantApplicativeSyntax<scala.concurrent.Future> invariantApplicativeSyntax;

  private scalaz.syntax.ApplySyntax<scala.concurrent.Future> applySyntax;

  private scalaz.syntax.FunctorSyntax<scala.concurrent.Future> functorSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<scala.concurrent.Future> invariantFunctorSyntax;

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #125                // InterfaceMethod scalaz/BindRec.forever$:(Lscalaz/BindRec;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.BindRec<?> product(scalaz.BindRec<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #136                // InterfaceMethod scalaz/BindRec.product$:(Lscalaz/BindRec;Lscalaz/BindRec;)Lscalaz/BindRec;
       5: areturn

  public scalaz.BindRec<scala.concurrent.Future>.BindRecLaw bindRecLaw();
    Code:
       0: aload_0
       1: invokestatic  #144                // InterfaceMethod scalaz/BindRec.bindRecLaw$:(Lscalaz/BindRec;)Lscalaz/BindRec$BindRecLaw;
       4: areturn

  public java.lang.Object emap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #151                // InterfaceMethod scalaz/MonadError.emap$:(Lscalaz/MonadError;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.MonadError<scala.concurrent.Future, java.lang.Throwable>.MonadErrorLaw monadErrorLaw();
    Code:
       0: aload_0
       1: invokestatic  #159                // InterfaceMethod scalaz/MonadError.monadErrorLaw$:(Lscalaz/MonadError;)Lscalaz/MonadError$MonadErrorLaw;
       4: areturn

  public scalaz.ApplicativeError<scala.concurrent.Future, java.lang.Throwable>.ApplicativeErrorLaws applicativeErrorLaws();
    Code:
       0: aload_0
       1: invokestatic  #166                // InterfaceMethod scalaz/ApplicativeError.applicativeErrorLaws$:(Lscalaz/ApplicativeError;)Lscalaz/ApplicativeError$ApplicativeErrorLaws;
       4: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #171                // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.Cobind<scala.concurrent.Future>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #178                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public java.lang.Object choose(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #186                // InterfaceMethod scalaz/Nondeterminism.choose$:(Lscalaz/Nondeterminism;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public <A> scala.Option<scala.concurrent.Future<scala.Tuple2<A, scalaz.IList<scala.concurrent.Future<A>>>>> chooseAny(scalaz.IList<scala.concurrent.Future<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #193                // InterfaceMethod scalaz/Nondeterminism.chooseAny$:(Lscalaz/Nondeterminism;Lscalaz/IList;)Lscala/Option;
       5: areturn

  public java.lang.Object nmap2(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #200                // InterfaceMethod scalaz/Nondeterminism.nmap2$:(Lscalaz/Nondeterminism;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object nmap3(java.lang.Object, java.lang.Object, java.lang.Object, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #208                // InterfaceMethod scalaz/Nondeterminism.nmap3$:(Lscalaz/Nondeterminism;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object nmap4(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #216                // InterfaceMethod scalaz/Nondeterminism.nmap4$:(Lscalaz/Nondeterminism;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object nmap5(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #224                // InterfaceMethod scalaz/Nondeterminism.nmap5$:(Lscalaz/Nondeterminism;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object nmap6(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #232                // InterfaceMethod scalaz/Nondeterminism.nmap6$:(Lscalaz/Nondeterminism;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object gatherUnordered(scalaz.IList);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #240                // InterfaceMethod scalaz/Nondeterminism.gatherUnordered$:(Lscalaz/Nondeterminism;Lscalaz/IList;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object gatherUnordered1(scalaz.NonEmptyList);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #246                // InterfaceMethod scalaz/Nondeterminism.gatherUnordered1$:(Lscalaz/Nondeterminism;Lscalaz/NonEmptyList;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object reduceUnordered(scalaz.IList, scalaz.Reducer, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #255                // InterfaceMethod scalaz/Nondeterminism.reduceUnordered$:(Lscalaz/Nondeterminism;Lscalaz/IList;Lscalaz/Reducer;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object gather1(scalaz.NonEmptyList);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #261                // InterfaceMethod scalaz/Nondeterminism.gather1$:(Lscalaz/Nondeterminism;Lscalaz/NonEmptyList;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object aggregate(scalaz.IList, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #268                // InterfaceMethod scalaz/Nondeterminism.aggregate$:(Lscalaz/Nondeterminism;Lscalaz/IList;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object aggregate1(scalaz.NonEmptyList, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #275                // InterfaceMethod scalaz/Nondeterminism.aggregate1$:(Lscalaz/Nondeterminism;Lscalaz/NonEmptyList;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object aggregateCommutative(scalaz.IList, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #281                // InterfaceMethod scalaz/Nondeterminism.aggregateCommutative$:(Lscalaz/Nondeterminism;Lscalaz/IList;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object aggregateCommutative1(scalaz.NonEmptyList, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #286                // InterfaceMethod scalaz/Nondeterminism.aggregateCommutative1$:(Lscalaz/Nondeterminism;Lscalaz/NonEmptyList;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> parallel();
    Code:
       0: aload_0
       1: invokestatic  #293                // InterfaceMethod scalaz/Nondeterminism.parallel$:(Lscalaz/Nondeterminism;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object whileM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #302                // InterfaceMethod scalaz/Monad.whileM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object whileM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #310                // InterfaceMethod scalaz/Monad.whileM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object untilM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #315                // InterfaceMethod scalaz/Monad.untilM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object untilM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #319                // InterfaceMethod scalaz/Monad.untilM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateWhile(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #324                // InterfaceMethod scalaz/Monad.iterateWhile$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateUntil(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #328                // InterfaceMethod scalaz/Monad.iterateUntil$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Monad<?> product(scalaz.Monad<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #333                // InterfaceMethod scalaz/Monad.product$:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public scalaz.Monad<scala.concurrent.Future>.MonadLaw monadLaw();
    Code:
       0: aload_0
       1: invokestatic  #341                // InterfaceMethod scalaz/Monad.monadLaw$:(Lscalaz/Monad;)Lscalaz/Monad$MonadLaw;
       4: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #348                // InterfaceMethod scalaz/Bind.apply2$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #354                // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #363                // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #368                // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Bind<?> product(scalaz.Bind<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #373                // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<scala.concurrent.Future>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #381                // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #387                // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #393                // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #401                // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #406                // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #411                // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #419                // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #426                // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #433                // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #440                // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #447                // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #452                // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.$eq$eq$greater$greater, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #460                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #467                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #472                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #478                // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #483                // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Applicative<?> compose(scalaz.Applicative<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #489                // InterfaceMethod scalaz/Applicative.compose$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public <G$> scalaz.Applicative<?> product(scalaz.Applicative<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #492                // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scala.concurrent.Future> flip();
    Code:
       0: aload_0
       1: invokestatic  #497                // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #506                // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scala.concurrent.Future>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #513                // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #520                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #526                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #532                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #538                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #544                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #550                // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #557                // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public <S$, A, B> scalaz.Maybe<scala.concurrent.Future<B>> unfoldrOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scala.concurrent.Future<A>, S$>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #565                // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G$> scalaz.Apply<?> compose(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #570                // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G$> scalaz.Apply<?> product(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #573                // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scala.concurrent.Future<A>, scala.concurrent.Future<B>> apF(scala.Function0<scala.concurrent.Future<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #580                // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #586                // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #593                // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #600                // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #607                // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #613                // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #620                // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #627                // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #633                // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #639                // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #645                // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #651                // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #657                // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #664                // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #672                // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #680                // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #688                // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #696                // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #703                // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #709                // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #715                // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #721                // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #727                // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #733                // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #739                // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #745                // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #752                // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #759                // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #766                // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R$> scala.Function5<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>, scala.concurrent.Future<R$>> lift5(scala.Function5<A, B, C, D, E, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #773                // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R$> scala.Function6<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>, scala.concurrent.Future<FF>, scala.concurrent.Future<R$>> lift6(scala.Function6<A, B, C, D, E, FF, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #780                // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G$, R$> scala.Function7<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>, scala.concurrent.Future<FF>, scala.concurrent.Future<G$>, scala.concurrent.Future<R$>> lift7(scala.Function7<A, B, C, D, E, FF, G$, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #787                // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, R$> scala.Function8<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>, scala.concurrent.Future<FF>, scala.concurrent.Future<G$>, scala.concurrent.Future<H>, scala.concurrent.Future<R$>> lift8(scala.Function8<A, B, C, D, E, FF, G$, H, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #794                // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, R$> scala.Function9<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>, scala.concurrent.Future<FF>, scala.concurrent.Future<G$>, scala.concurrent.Future<H>, scala.concurrent.Future<I>, scala.concurrent.Future<R$>> lift9(scala.Function9<A, B, C, D, E, FF, G$, H, I, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #801                // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, R$> scala.Function10<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>, scala.concurrent.Future<FF>, scala.concurrent.Future<G$>, scala.concurrent.Future<H>, scala.concurrent.Future<I>, scala.concurrent.Future<J>, scala.concurrent.Future<R$>> lift10(scala.Function10<A, B, C, D, E, FF, G$, H, I, J, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #808                // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, R$> scala.Function11<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>, scala.concurrent.Future<FF>, scala.concurrent.Future<G$>, scala.concurrent.Future<H>, scala.concurrent.Future<I>, scala.concurrent.Future<J>, scala.concurrent.Future<K>, scala.concurrent.Future<R$>> lift11(scala.Function11<A, B, C, D, E, FF, G$, H, I, J, K, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #815                // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, L, R$> scala.Function12<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>, scala.concurrent.Future<FF>, scala.concurrent.Future<G$>, scala.concurrent.Future<H>, scala.concurrent.Future<I>, scala.concurrent.Future<J>, scala.concurrent.Future<K>, scala.concurrent.Future<L>, scala.concurrent.Future<R$>> lift12(scala.Function12<A, B, C, D, E, FF, G$, H, I, J, K, L, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #822                // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #826                // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #830                // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #835                // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scala.concurrent.Future<A>, scala.concurrent.Future<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #843                // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scala.concurrent.Future>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #850                // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #856                // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #861                // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scala.concurrent.Future<A>, scala.concurrent.Future<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #868                // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #873                // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #877                // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #881                // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #886                // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #890                // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #894                // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #900                // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G$> scalaz.Functor<?> compose(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #906                // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G$> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #914                // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G$> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #922                // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G$> scalaz.Functor<?> product(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #925                // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #932                // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<scala.concurrent.Future>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #940                // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #947                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #955                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scala.concurrent.Future>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #963                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.BindRecSyntax<scala.concurrent.Future> bindRecSyntax();
    Code:
       0: aload_0
       1: getfield      #967                // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       4: areturn

  public void scalaz$BindRec$_setter_$bindRecSyntax_$eq(scalaz.syntax.BindRecSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #967                // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       5: return

  public scalaz.syntax.MonadErrorSyntax<scala.concurrent.Future, java.lang.Throwable> monadErrorSyntax();
    Code:
       0: aload_0
       1: getfield      #975                // Field monadErrorSyntax:Lscalaz/syntax/MonadErrorSyntax;
       4: areturn

  public void scalaz$MonadError$_setter_$monadErrorSyntax_$eq(scalaz.syntax.MonadErrorSyntax<scala.concurrent.Future, java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #975                // Field monadErrorSyntax:Lscalaz/syntax/MonadErrorSyntax;
       5: return

  public scalaz.syntax.ApplicativeErrorSyntax<scala.concurrent.Future, java.lang.Throwable> applicativeErrorSyntax();
    Code:
       0: aload_0
       1: getfield      #982                // Field applicativeErrorSyntax:Lscalaz/syntax/ApplicativeErrorSyntax;
       4: areturn

  public void scalaz$ApplicativeError$_setter_$applicativeErrorSyntax_$eq(scalaz.syntax.ApplicativeErrorSyntax<scala.concurrent.Future, java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #982                // Field applicativeErrorSyntax:Lscalaz/syntax/ApplicativeErrorSyntax;
       5: return

  public scalaz.syntax.CobindSyntax<scala.concurrent.Future> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #989                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #989                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.NondeterminismSyntax<scala.concurrent.Future> nondeterminismSyntax();
    Code:
       0: aload_0
       1: getfield      #996                // Field nondeterminismSyntax:Lscalaz/syntax/NondeterminismSyntax;
       4: areturn

  public void scalaz$Nondeterminism$_setter_$nondeterminismSyntax_$eq(scalaz.syntax.NondeterminismSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #996                // Field nondeterminismSyntax:Lscalaz/syntax/NondeterminismSyntax;
       5: return

  public scalaz.syntax.MonadSyntax<scala.concurrent.Future> monadSyntax();
    Code:
       0: aload_0
       1: getfield      #1003               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       4: areturn

  public void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1003               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       5: return

  public scalaz.syntax.BindSyntax<scala.concurrent.Future> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #1010               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1010               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scala.concurrent.Future> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1017               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1017               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scala.concurrent.Future> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1024               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1024               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scala.concurrent.Future> applySyntax();
    Code:
       0: aload_0
       1: getfield      #1031               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1031               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scala.concurrent.Future> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #1038               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1038               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scala.concurrent.Future> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #1045               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1045               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A> scala.concurrent.Future<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #1057               // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
       3: aload_1
       4: aload_0
       5: getfield      #1059               // Field ec:Lscala/concurrent/ExecutionContext;
       8: invokevirtual #1062               // Method scala/concurrent/Future$.apply:(Lscala/Function0;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      11: areturn

  public <A, B> scala.concurrent.Future<B> bind(scala.concurrent.Future<A>, scala.Function1<A, scala.concurrent.Future<B>>);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: getfield      #1059               // Field ec:Lscala/concurrent/ExecutionContext;
       6: invokeinterface #1071,  3         // InterfaceMethod scala/concurrent/Future.flatMap:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      11: areturn

  public <A, B> scala.concurrent.Future<B> map(scala.concurrent.Future<A>, scala.Function1<A, B>);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: getfield      #1059               // Field ec:Lscala/concurrent/ExecutionContext;
       6: invokeinterface #1075,  3         // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      11: areturn

  public <A, B> scala.concurrent.Future<B> cobind(scala.concurrent.Future<A>, scala.Function1<scala.concurrent.Future<A>, B>);
    Code:
       0: getstatic     #1057               // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
       3: aload_2
       4: aload_1
       5: invokedynamic #1095,  0           // InvokeDynamic #0:apply:(Lscala/Function1;Lscala/concurrent/Future;)Lscala/Function0;
      10: aload_0
      11: getfield      #1059               // Field ec:Lscala/concurrent/ExecutionContext;
      14: invokevirtual #1062               // Method scala/concurrent/Future$.apply:(Lscala/Function0;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      17: areturn

  public <A> scala.concurrent.Future<scala.concurrent.Future<A>> cojoin(scala.concurrent.Future<A>);
    Code:
       0: getstatic     #1057               // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
       3: aload_1
       4: invokevirtual #1102               // Method scala/concurrent/Future$.successful:(Ljava/lang/Object;)Lscala/concurrent/Future;
       7: areturn

  public <A> scala.concurrent.Future<scala.Tuple2<A, scalaz.IList<scala.concurrent.Future<A>>>> chooseAny(scala.concurrent.Future<A>, scalaz.IList<scala.concurrent.Future<A>>);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: new           #1108               // class scalaz/ICons
       9: dup
      10: aload_1
      11: aload_2
      12: invokespecial #1112               // Method scalaz/ICons."<init>":(Ljava/lang/Object;Lscalaz/IList;)V
      15: invokevirtual #1118               // Method scalaz/IList.zipWithIndex:()Lscalaz/IList;
      18: astore_3
      19: new           #1120               // class java/util/concurrent/atomic/AtomicInteger
      22: dup
      23: aload_3
      24: invokevirtual #1124               // Method scalaz/IList.length:()I
      27: invokespecial #1127               // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      30: astore        4
      32: getstatic     #1132               // Field scala/concurrent/Promise$.MODULE$:Lscala/concurrent/Promise$;
      35: invokevirtual #1135               // Method scala/concurrent/Promise$.apply:()Lscala/concurrent/Promise;
      38: astore        5
      40: aload         5
      42: invokestatic  #1141               // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
      45: astore        6
      47: aload_3
      48: invokevirtual #1144               // Method scalaz/IList.reverse:()Lscalaz/IList;
      51: dup
      52: ifnonnull     57
      55: aconst_null
      56: athrow
      57: getstatic     #1149               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      60: pop
      61: getstatic     #1154               // Field scalaz/INil$.MODULE$:Lscalaz/INil$;
      64: invokevirtual #1156               // Method scalaz/INil$.apply:()Lscalaz/IList;
      67: astore        8
      69: astore        7
      71: aload         7
      73: instanceof    #1108               // class scalaz/ICons
      76: ifeq          179
      79: aload         7
      81: checkcast     #1108               // class scalaz/ICons
      84: astore        9
      86: aload         9
      88: invokevirtual #1158               // Method scalaz/ICons.tail:()Lscalaz/IList;
      91: new           #1108               // class scalaz/ICons
      94: dup
      95: aload         9
      97: invokevirtual #1160               // Method scalaz/ICons.head:()Ljava/lang/Object;
     100: checkcast     #1162               // class scala/Tuple2
     103: astore        10
     105: aload         10
     107: ifnull        152
     110: aload         10
     112: invokevirtual #1165               // Method scala/Tuple2._1:()Ljava/lang/Object;
     115: checkcast     #1067               // class scala/concurrent/Future
     118: astore        11
     120: aload         10
     122: invokevirtual #1168               // Method scala/Tuple2._2$mcI$sp:()I
     125: istore        12
     127: aload         11
     129: iload         12
     131: aload         4
     133: aload         6
     135: invokedynamic #1180,  0           // InvokeDynamic #1:apply:(ILjava/util/concurrent/atomic/AtomicInteger;Lscala/runtime/ObjectRef;)Lscala/Function1;
     140: aload_0
     141: getfield      #1059               // Field ec:Lscala/concurrent/ExecutionContext;
     144: invokeinterface #1184,  3         // InterfaceMethod scala/concurrent/Future.onComplete:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
     149: goto          161
     152: new           #1186               // class scala/MatchError
     155: dup
     156: aconst_null
     157: invokespecial #1189               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     160: athrow
     161: aconst_null
     162: astore        11
     164: getstatic     #1195               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     167: aload         8
     169: invokespecial #1112               // Method scalaz/ICons."<init>":(Ljava/lang/Object;Lscalaz/IList;)V
     172: astore        8
     174: astore        7
     176: goto          71
     179: aload         7
     181: instanceof    #1197               // class scalaz/INil
     184: ifne          197
     187: new           #1186               // class scala/MatchError
     190: dup
     191: aload         7
     193: invokespecial #1189               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     196: athrow
     197: aconst_null
     198: astore        7
     200: aconst_null
     201: astore        8
     203: aconst_null
     204: astore        9
     206: aload         5
     208: invokeinterface #1203,  1         // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
     213: aload_3
     214: invokedynamic #1213,  0           // InvokeDynamic #2:apply:(Lscalaz/IList;)Lscala/Function1;
     219: aload_0
     220: getfield      #1059               // Field ec:Lscala/concurrent/ExecutionContext;
     223: invokeinterface #1075,  3         // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
     228: areturn

  public <A> scala.Option<scala.concurrent.Future<A>> firstCompletedOf(scala.collection.Iterable<scala.concurrent.Future<A>>);
    Code:
       0: aload_1
       1: invokeinterface #1232,  1         // InterfaceMethod scala/collection/Iterable.isEmpty:()Z
       6: ifeq          13
       9: getstatic     #1237               // Field scala/None$.MODULE$:Lscala/None$;
      12: areturn
      13: new           #1239               // class scala/Some
      16: dup
      17: getstatic     #1057               // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
      20: aload_1
      21: aload_0
      22: getfield      #1059               // Field ec:Lscala/concurrent/ExecutionContext;
      25: invokevirtual #1242               // Method scala/concurrent/Future$.firstCompletedOf:(Lscala/collection/IterableOnce;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      28: invokespecial #1243               // Method scala/Some."<init>":(Ljava/lang/Object;)V
      31: areturn

  public <A, B, C> scala.concurrent.Future<C> mapBoth(scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.Function2<A, B, C>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1250,  2         // InterfaceMethod scala/concurrent/Future.zip:(Lscala/concurrent/Future;)Lscala/concurrent/Future;
       7: aload_3
       8: invokeinterface #1256,  1         // InterfaceMethod scala/Function2.tupled:()Lscala/Function1;
      13: aload_0
      14: getfield      #1059               // Field ec:Lscala/concurrent/ExecutionContext;
      17: invokeinterface #1075,  3         // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      22: areturn

  public <A, B> scala.concurrent.Future<scala.Tuple2<A, B>> both(scala.concurrent.Future<A>, scala.concurrent.Future<B>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1250,  2         // InterfaceMethod scala/concurrent/Future.zip:(Lscala/concurrent/Future;)Lscala/concurrent/Future;
       7: areturn

  public <A> scala.concurrent.Future<scalaz.IList<A>> gather(scalaz.IList<scala.concurrent.Future<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1149               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
       5: invokevirtual #1266               // Method scalaz/IList$.instances:()Lscalaz/Traverse;
       8: invokevirtual #1268               // Method sequence:(Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
      11: checkcast     #1067               // class scala/concurrent/Future
      14: areturn

  public <A, B> scala.concurrent.Future<B> ap(scala.Function0<scala.concurrent.Future<A>>, scala.Function0<scala.concurrent.Future<scala.Function1<A, B>>>);
    Code:
       0: aload_2
       1: invokeinterface #1276,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #1067               // class scala/concurrent/Future
       9: aload_1
      10: invokeinterface #1276,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      15: checkcast     #1067               // class scala/concurrent/Future
      18: invokeinterface #1250,  2         // InterfaceMethod scala/concurrent/Future.zip:(Lscala/concurrent/Future;)Lscala/concurrent/Future;
      23: invokedynamic #1284,  0           // InvokeDynamic #3:apply:()Lscala/Function1;
      28: aload_0
      29: getfield      #1059               // Field ec:Lscala/concurrent/ExecutionContext;
      32: invokeinterface #1075,  3         // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      37: areturn

  public <A> scala.concurrent.Future<A> raiseError(java.lang.Throwable);
    Code:
       0: getstatic     #1057               // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
       3: aload_1
       4: invokevirtual #1290               // Method scala/concurrent/Future$.failed:(Ljava/lang/Throwable;)Lscala/concurrent/Future;
       7: areturn

  public <A> scala.concurrent.Future<A> handleError(scala.concurrent.Future<A>, scala.Function1<java.lang.Throwable, scala.concurrent.Future<A>>);
    Code:
       0: aload_1
       1: new           #80                 // class scalaz/std/FutureInstance$$anonfun$handleError$1
       4: dup
       5: aconst_null
       6: aload_2
       7: invokespecial #1296               // Method scalaz/std/FutureInstance$$anonfun$handleError$1."<init>":(Lscalaz/std/FutureInstance;Lscala/Function1;)V
      10: aload_0
      11: getfield      #1059               // Field ec:Lscala/concurrent/ExecutionContext;
      14: invokeinterface #1300,  3         // InterfaceMethod scala/concurrent/Future.recoverWith:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      19: areturn

  public <A, B> scala.concurrent.Future<B> tailrecM(A, scala.Function1<A, scala.concurrent.Future<scalaz.$bslash$div<A, B>>>);
    Code:
       0: aload_1
       1: astore_3
       2: aload_2
       3: aload_3
       4: invokeinterface #1309,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #1067               // class scala/concurrent/Future
      12: goto          62
      15: astore        5
      17: aload         5
      19: ifnull        59
      22: getstatic     #1314               // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      25: aload         5
      27: invokevirtual #1318               // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      30: astore        6
      32: aload         6
      34: invokevirtual #1321               // Method scala/Option.isEmpty:()Z
      37: ifne          59
      40: aload         6
      42: invokevirtual #1324               // Method scala/Option.get:()Ljava/lang/Object;
      45: checkcast     #1305               // class java/lang/Throwable
      48: astore        7
      50: getstatic     #1057               // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
      53: aload         7
      55: invokevirtual #1290               // Method scala/concurrent/Future$.failed:(Ljava/lang/Throwable;)Lscala/concurrent/Future;
      58: areturn
      59: aload         5
      61: athrow
      62: astore        4
      64: iconst_0
      65: istore        8
      67: aconst_null
      68: astore        9
      70: aload         4
      72: invokeinterface #1327,  1         // InterfaceMethod scala/concurrent/Future.value:()Lscala/Option;
      77: astore        10
      79: aload         10
      81: instanceof    #1239               // class scala/Some
      84: ifeq          148
      87: iconst_1
      88: istore        8
      90: aload         10
      92: checkcast     #1239               // class scala/Some
      95: astore        9
      97: aload         9
      99: invokevirtual #1329               // Method scala/Some.value:()Ljava/lang/Object;
     102: checkcast     #1331               // class scala/util/Try
     105: astore        11
     107: aload         11
     109: instanceof    #1333               // class scala/util/Success
     112: ifeq          148
     115: aload         11
     117: checkcast     #1333               // class scala/util/Success
     120: invokevirtual #1334               // Method scala/util/Success.value:()Ljava/lang/Object;
     123: checkcast     #1336               // class scalaz/$bslash$div
     126: astore        12
     128: aload         12
     130: instanceof    #1338               // class scalaz/$minus$bslash$div
     133: ifeq          148
     136: aload         12
     138: checkcast     #1338               // class scalaz/$minus$bslash$div
     141: invokevirtual #1340               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
     144: astore_3
     145: goto          2
     148: iload         8
     150: ifeq          211
     153: aload         9
     155: invokevirtual #1329               // Method scala/Some.value:()Ljava/lang/Object;
     158: checkcast     #1331               // class scala/util/Try
     161: astore        13
     163: aload         13
     165: instanceof    #1333               // class scala/util/Success
     168: ifeq          211
     171: aload         13
     173: checkcast     #1333               // class scala/util/Success
     176: invokevirtual #1334               // Method scala/util/Success.value:()Ljava/lang/Object;
     179: checkcast     #1336               // class scalaz/$bslash$div
     182: astore        14
     184: aload         14
     186: instanceof    #1342               // class scalaz/$bslash$div$minus
     189: ifeq          211
     192: aload         14
     194: checkcast     #1342               // class scalaz/$bslash$div$minus
     197: invokevirtual #1344               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
     200: astore        15
     202: getstatic     #1057               // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
     205: aload         15
     207: invokevirtual #1102               // Method scala/concurrent/Future$.successful:(Ljava/lang/Object;)Lscala/concurrent/Future;
     210: areturn
     211: iload         8
     213: ifeq          253
     216: aload         9
     218: invokevirtual #1329               // Method scala/Some.value:()Ljava/lang/Object;
     221: checkcast     #1331               // class scala/util/Try
     224: astore        16
     226: aload         16
     228: instanceof    #1346               // class scala/util/Failure
     231: ifeq          253
     234: aload         16
     236: checkcast     #1346               // class scala/util/Failure
     239: invokevirtual #1350               // Method scala/util/Failure.exception:()Ljava/lang/Throwable;
     242: astore        17
     244: getstatic     #1057               // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
     247: aload         17
     249: invokevirtual #1290               // Method scala/concurrent/Future$.failed:(Ljava/lang/Throwable;)Lscala/concurrent/Future;
     252: areturn
     253: getstatic     #1237               // Field scala/None$.MODULE$:Lscala/None$;
     256: aload         10
     258: invokevirtual #1354               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     261: ifeq          283
     264: aload         4
     266: aload_0
     267: aload_2
     268: invokedynamic #1364,  0           // InvokeDynamic #4:apply:(Lscalaz/std/FutureInstance;Lscala/Function1;)Lscala/Function1;
     273: aload_0
     274: getfield      #1059               // Field ec:Lscala/concurrent/ExecutionContext;
     277: invokeinterface #1071,  3         // InterfaceMethod scala/concurrent/Future.flatMap:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
     282: areturn
     283: new           #1186               // class scala/MatchError
     286: dup
     287: aload         10
     289: invokespecial #1189               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     292: athrow
    Exception table:
       from    to  target type
           2    12    15   Class java/lang/Throwable

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #1371               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public java.lang.Object tailrecM(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1373               // Method tailrecM:(Ljava/lang/Object;Lscala/Function1;)Lscala/concurrent/Future;
       6: areturn

  public java.lang.Object handleError(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1067               // class scala/concurrent/Future
       5: aload_2
       6: invokevirtual #1375               // Method handleError:(Lscala/concurrent/Future;Lscala/Function1;)Lscala/concurrent/Future;
       9: areturn

  public java.lang.Object raiseError(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1305               // class java/lang/Throwable
       5: invokevirtual #1377               // Method raiseError:(Ljava/lang/Throwable;)Lscala/concurrent/Future;
       8: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1379               // Method ap:(Lscala/Function0;Lscala/Function0;)Lscala/concurrent/Future;
       6: areturn

  public java.lang.Object gather(scalaz.IList);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1381               // Method gather:(Lscalaz/IList;)Lscala/concurrent/Future;
       5: areturn

  public java.lang.Object both(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1067               // class scala/concurrent/Future
       5: aload_2
       6: checkcast     #1067               // class scala/concurrent/Future
       9: invokevirtual #1383               // Method both:(Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
      12: areturn

  public java.lang.Object mapBoth(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1067               // class scala/concurrent/Future
       5: aload_2
       6: checkcast     #1067               // class scala/concurrent/Future
       9: aload_3
      10: invokevirtual #1385               // Method mapBoth:(Lscala/concurrent/Future;Lscala/concurrent/Future;Lscala/Function2;)Lscala/concurrent/Future;
      13: areturn

  public java.lang.Object chooseAny(java.lang.Object, scalaz.IList);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1067               // class scala/concurrent/Future
       5: aload_2
       6: invokevirtual #1388               // Method chooseAny:(Lscala/concurrent/Future;Lscalaz/IList;)Lscala/concurrent/Future;
       9: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1067               // class scala/concurrent/Future
       5: invokevirtual #1390               // Method cojoin:(Lscala/concurrent/Future;)Lscala/concurrent/Future;
       8: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1067               // class scala/concurrent/Future
       5: aload_2
       6: invokevirtual #1392               // Method cobind:(Lscala/concurrent/Future;Lscala/Function1;)Lscala/concurrent/Future;
       9: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1067               // class scala/concurrent/Future
       5: aload_2
       6: invokevirtual #1394               // Method map:(Lscala/concurrent/Future;Lscala/Function1;)Lscala/concurrent/Future;
       9: areturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1067               // class scala/concurrent/Future
       5: aload_2
       6: invokevirtual #1396               // Method bind:(Lscala/concurrent/Future;Lscala/Function1;)Lscala/concurrent/Future;
       9: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1398               // Method point:(Lscala/Function0;)Lscala/concurrent/Future;
       5: areturn

  public static final java.lang.Object $anonfun$cobind$1(scala.Function1, scala.concurrent.Future);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1309,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  private static final void attemptComplete$1(scala.util.Try, java.util.concurrent.atomic.AtomicInteger, scala.runtime.ObjectRef);
    Code:
       0: aload_1
       1: invokevirtual #1408               // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       4: istore_3
       5: aload_2
       6: getfield      #1411               // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       9: checkcast     #1199               // class scala/concurrent/Promise
      12: astore        4
      14: aload         4
      16: ifnull        62
      19: aload_0
      20: instanceof    #1333               // class scala/util/Success
      23: ifeq          41
      26: aload         4
      28: aload_0
      29: invokeinterface #1415,  2         // InterfaceMethod scala/concurrent/Promise.tryComplete:(Lscala/util/Try;)Z
      34: pop
      35: aload_2
      36: aconst_null
      37: putfield      #1411               // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      40: return
      41: iload_3
      42: iconst_0
      43: if_icmpne     61
      46: aload         4
      48: aload_0
      49: invokeinterface #1415,  2         // InterfaceMethod scala/concurrent/Promise.tryComplete:(Lscala/util/Try;)Z
      54: pop
      55: aload_2
      56: aconst_null
      57: putfield      #1411               // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      60: return
      61: return
      62: return

  public static final scala.Tuple2 $anonfun$chooseAny$3(int, java.lang.Object);
    Code:
       0: getstatic     #1424               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
       3: getstatic     #1429               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: aload_1
       7: invokevirtual #1432               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      10: iload_0
      11: invokestatic  #1438               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      14: invokevirtual #1442               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      17: areturn

  public static final void $anonfun$chooseAny$2(int, java.util.concurrent.atomic.AtomicInteger, scala.runtime.ObjectRef, scala.util.Try);
    Code:
       0: aload_3
       1: iload_0
       2: invokedynamic #1452,  0           // InvokeDynamic #5:apply:(I)Lscala/Function1;
       7: invokevirtual #1455               // Method scala/util/Try.map:(Lscala/Function1;)Lscala/util/Try;
      10: astore        4
      12: aload_1
      13: invokevirtual #1408               // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      16: istore        5
      18: aload_2
      19: getfield      #1411               // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      22: checkcast     #1199               // class scala/concurrent/Promise
      25: astore        6
      27: aload         6
      29: ifnull        78
      32: aload         4
      34: instanceof    #1333               // class scala/util/Success
      37: ifeq          56
      40: aload         6
      42: aload         4
      44: invokeinterface #1415,  2         // InterfaceMethod scala/concurrent/Promise.tryComplete:(Lscala/util/Try;)Z
      49: pop
      50: aload_2
      51: aconst_null
      52: putfield      #1411               // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      55: return
      56: iload         5
      58: iconst_0
      59: if_icmpne     78
      62: aload         6
      64: aload         4
      66: invokeinterface #1415,  2         // InterfaceMethod scala/concurrent/Promise.tryComplete:(Lscala/util/Try;)Z
      71: pop
      72: aload_2
      73: aconst_null
      74: putfield      #1411               // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      77: return
      78: return

  public static final void $anonfun$chooseAny$1(scalaz.std.FutureInstance, java.util.concurrent.atomic.AtomicInteger, scala.runtime.ObjectRef, scala.Tuple2);
    Code:
       0: aload_3
       1: ifnull        40
       4: aload_3
       5: invokevirtual #1165               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: checkcast     #1067               // class scala/concurrent/Future
      11: astore        4
      13: aload_3
      14: invokevirtual #1168               // Method scala/Tuple2._2$mcI$sp:()I
      17: istore        5
      19: aload         4
      21: iload         5
      23: aload_1
      24: aload_2
      25: invokedynamic #1180,  0           // InvokeDynamic #1:apply:(ILjava/util/concurrent/atomic/AtomicInteger;Lscala/runtime/ObjectRef;)Lscala/Function1;
      30: aload_0
      31: getfield      #1059               // Field ec:Lscala/concurrent/ExecutionContext;
      34: invokeinterface #1184,  3         // InterfaceMethod scala/concurrent/Future.onComplete:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
      39: return
      40: new           #1186               // class scala/MatchError
      43: dup
      44: aconst_null
      45: invokespecial #1189               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      48: athrow

  public static final scala.Tuple2 $anonfun$chooseAny$4(scalaz.IList, scala.Tuple2);
    Code:
       0: aload_1
       1: ifnull        36
       4: aload_1
       5: invokevirtual #1165               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_2
       9: aload_1
      10: invokevirtual #1168               // Method scala/Tuple2._2$mcI$sp:()I
      13: istore_3
      14: new           #1162               // class scala/Tuple2
      17: dup
      18: aload_2
      19: aload_0
      20: new           #78                 // class scalaz/std/FutureInstance$$anonfun$$nestedInanonfun$chooseAny$4$1
      23: dup
      24: aconst_null
      25: iload_3
      26: invokespecial #1469               // Method scalaz/std/FutureInstance$$anonfun$$nestedInanonfun$chooseAny$4$1."<init>":(Lscalaz/std/FutureInstance;I)V
      29: invokevirtual #1473               // Method scalaz/IList.collect:(Lscala/PartialFunction;)Lscalaz/IList;
      32: invokespecial #1476               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      35: areturn
      36: new           #1186               // class scala/MatchError
      39: dup
      40: aconst_null
      41: invokespecial #1189               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      44: athrow

  public static final java.lang.Object $anonfun$ap$1(scala.Tuple2);
    Code:
       0: aload_0
       1: ifnull        25
       4: aload_0
       5: invokevirtual #1165               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: checkcast     #1307               // class scala/Function1
      11: astore_1
      12: aload_0
      13: invokevirtual #1479               // Method scala/Tuple2._2:()Ljava/lang/Object;
      16: astore_2
      17: aload_1
      18: aload_2
      19: invokeinterface #1309,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      24: areturn
      25: new           #1186               // class scala/MatchError
      28: dup
      29: aconst_null
      30: invokespecial #1189               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      33: athrow

  public static final scala.concurrent.Future $anonfun$tailrecM$1(scalaz.std.FutureInstance, scala.Function1, scalaz.$bslash$div);
    Code:
       0: aload_2
       1: instanceof    #1342               // class scalaz/$bslash$div$minus
       4: ifeq          23
       7: aload_2
       8: checkcast     #1342               // class scalaz/$bslash$div$minus
      11: invokevirtual #1344               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      14: astore_3
      15: getstatic     #1057               // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
      18: aload_3
      19: invokevirtual #1102               // Method scala/concurrent/Future$.successful:(Ljava/lang/Object;)Lscala/concurrent/Future;
      22: areturn
      23: aload_2
      24: instanceof    #1338               // class scalaz/$minus$bslash$div
      27: ifeq          47
      30: aload_2
      31: checkcast     #1338               // class scalaz/$minus$bslash$div
      34: invokevirtual #1340               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      37: astore        4
      39: aload_0
      40: aload         4
      42: aload_1
      43: invokevirtual #1373               // Method tailrecM:(Ljava/lang/Object;Lscala/Function1;)Lscala/concurrent/Future;
      46: areturn
      47: new           #1186               // class scala/MatchError
      50: dup
      51: aload_2
      52: invokespecial #1189               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      55: athrow

  private final scala.concurrent.Future loop$1(java.lang.Object, scala.Function1);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #1309,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #1067               // class scala/concurrent/Future
      10: goto          60
      13: astore        4
      15: aload         4
      17: ifnull        57
      20: getstatic     #1314               // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      23: aload         4
      25: invokevirtual #1318               // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      28: astore        5
      30: aload         5
      32: invokevirtual #1321               // Method scala/Option.isEmpty:()Z
      35: ifne          57
      38: aload         5
      40: invokevirtual #1324               // Method scala/Option.get:()Ljava/lang/Object;
      43: checkcast     #1305               // class java/lang/Throwable
      46: astore        6
      48: getstatic     #1057               // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
      51: aload         6
      53: invokevirtual #1290               // Method scala/concurrent/Future$.failed:(Ljava/lang/Throwable;)Lscala/concurrent/Future;
      56: areturn
      57: aload         4
      59: athrow
      60: astore_3
      61: iconst_0
      62: istore        7
      64: aconst_null
      65: astore        8
      67: aload_3
      68: invokeinterface #1327,  1         // InterfaceMethod scala/concurrent/Future.value:()Lscala/Option;
      73: astore        9
      75: aload         9
      77: instanceof    #1239               // class scala/Some
      80: ifeq          144
      83: iconst_1
      84: istore        7
      86: aload         9
      88: checkcast     #1239               // class scala/Some
      91: astore        8
      93: aload         8
      95: invokevirtual #1329               // Method scala/Some.value:()Ljava/lang/Object;
      98: checkcast     #1331               // class scala/util/Try
     101: astore        10
     103: aload         10
     105: instanceof    #1333               // class scala/util/Success
     108: ifeq          144
     111: aload         10
     113: checkcast     #1333               // class scala/util/Success
     116: invokevirtual #1334               // Method scala/util/Success.value:()Ljava/lang/Object;
     119: checkcast     #1336               // class scalaz/$bslash$div
     122: astore        11
     124: aload         11
     126: instanceof    #1338               // class scalaz/$minus$bslash$div
     129: ifeq          144
     132: aload         11
     134: checkcast     #1338               // class scalaz/$minus$bslash$div
     137: invokevirtual #1340               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
     140: astore_1
     141: goto          0
     144: iload         7
     146: ifeq          207
     149: aload         8
     151: invokevirtual #1329               // Method scala/Some.value:()Ljava/lang/Object;
     154: checkcast     #1331               // class scala/util/Try
     157: astore        12
     159: aload         12
     161: instanceof    #1333               // class scala/util/Success
     164: ifeq          207
     167: aload         12
     169: checkcast     #1333               // class scala/util/Success
     172: invokevirtual #1334               // Method scala/util/Success.value:()Ljava/lang/Object;
     175: checkcast     #1336               // class scalaz/$bslash$div
     178: astore        13
     180: aload         13
     182: instanceof    #1342               // class scalaz/$bslash$div$minus
     185: ifeq          207
     188: aload         13
     190: checkcast     #1342               // class scalaz/$bslash$div$minus
     193: invokevirtual #1344               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
     196: astore        14
     198: getstatic     #1057               // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
     201: aload         14
     203: invokevirtual #1102               // Method scala/concurrent/Future$.successful:(Ljava/lang/Object;)Lscala/concurrent/Future;
     206: areturn
     207: iload         7
     209: ifeq          249
     212: aload         8
     214: invokevirtual #1329               // Method scala/Some.value:()Ljava/lang/Object;
     217: checkcast     #1331               // class scala/util/Try
     220: astore        15
     222: aload         15
     224: instanceof    #1346               // class scala/util/Failure
     227: ifeq          249
     230: aload         15
     232: checkcast     #1346               // class scala/util/Failure
     235: invokevirtual #1350               // Method scala/util/Failure.exception:()Ljava/lang/Throwable;
     238: astore        16
     240: getstatic     #1057               // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
     243: aload         16
     245: invokevirtual #1290               // Method scala/concurrent/Future$.failed:(Ljava/lang/Throwable;)Lscala/concurrent/Future;
     248: areturn
     249: getstatic     #1237               // Field scala/None$.MODULE$:Lscala/None$;
     252: aload         9
     254: invokevirtual #1354               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     257: ifeq          278
     260: aload_3
     261: aload_0
     262: aload_2
     263: invokedynamic #1364,  0           // InvokeDynamic #4:apply:(Lscalaz/std/FutureInstance;Lscala/Function1;)Lscala/Function1;
     268: aload_0
     269: getfield      #1059               // Field ec:Lscala/concurrent/ExecutionContext;
     272: invokeinterface #1071,  3         // InterfaceMethod scala/concurrent/Future.flatMap:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
     277: areturn
     278: new           #1186               // class scala/MatchError
     281: dup
     282: aload         9
     284: invokespecial #1189               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     287: athrow
    Exception table:
       from    to  target type
           0    10    13   Class java/lang/Throwable

  public scalaz.std.FutureInstance(scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1059               // Field ec:Lscala/concurrent/ExecutionContext;
       5: aload_0
       6: invokespecial #1485               // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #1489               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      13: aload_0
      14: invokestatic  #1492               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      17: aload_0
      18: invokestatic  #1495               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      21: aload_0
      22: invokestatic  #1498               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      25: aload_0
      26: invokestatic  #1501               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      29: aload_0
      30: invokestatic  #1504               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      33: aload_0
      34: invokestatic  #1507               // InterfaceMethod scalaz/Monad.$init$:(Lscalaz/Monad;)V
      37: aload_0
      38: invokestatic  #1510               // InterfaceMethod scalaz/Nondeterminism.$init$:(Lscalaz/Nondeterminism;)V
      41: aload_0
      42: invokestatic  #1513               // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      45: aload_0
      46: invokestatic  #1516               // InterfaceMethod scalaz/ApplicativeError.$init$:(Lscalaz/ApplicativeError;)V
      49: aload_0
      50: invokestatic  #1519               // InterfaceMethod scalaz/MonadError.$init$:(Lscalaz/MonadError;)V
      53: aload_0
      54: invokestatic  #1522               // InterfaceMethod scalaz/BindRec.$init$:(Lscalaz/BindRec;)V
      57: invokestatic  #1527               // Method scala/runtime/Statics.releaseFence:()V
      60: return

  public static final java.lang.Object $anonfun$chooseAny$1$adapted(scalaz.std.FutureInstance, java.util.concurrent.atomic.AtomicInteger, scala.runtime.ObjectRef, scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1531               // Method $anonfun$chooseAny$1:(Lscalaz/std/FutureInstance;Ljava/util/concurrent/atomic/AtomicInteger;Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
       7: getstatic     #1195               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      10: areturn

  public static final java.lang.Object $anonfun$chooseAny$2$adapted(int, java.util.concurrent.atomic.AtomicInteger, scala.runtime.ObjectRef, scala.util.Try);
    Code:
       0: iload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1533               // Method $anonfun$chooseAny$2:(ILjava/util/concurrent/atomic/AtomicInteger;Lscala/runtime/ObjectRef;Lscala/util/Try;)V
       7: getstatic     #1195               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      10: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #1545,  0           // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
