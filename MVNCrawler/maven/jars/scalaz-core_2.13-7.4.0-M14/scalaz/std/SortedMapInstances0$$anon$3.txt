Compiled from "SortedMap.scala"
public final class scalaz.std.SortedMapInstances0$$anon$3 implements scalaz.std.SortedMapInstances0$SortedMapMonoid<K, V>, scalaz.Band<scala.collection.immutable.SortedMap<K, V>> {
  private scalaz.syntax.BandSyntax<scala.collection.immutable.SortedMap<K, V>> bandSyntax;

  private scalaz.syntax.MonoidSyntax<scala.collection.immutable.SortedMap<K, V>> monoidSyntax;

  private scalaz.syntax.SemigroupSyntax<scala.collection.immutable.SortedMap<K, V>> semigroupSyntax;

  private final scalaz.std.SortedMapInstances0 $outer;

  private final scalaz.Band S$1;

  private final scala.math.Ordering K$1;

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #52                 // InterfaceMethod scalaz/Band.multiply1$:(Lscalaz/Band;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public scalaz.Band<scala.collection.immutable.SortedMap<K, V>>.BandLaw bandLaw();
    Code:
       0: aload_0
       1: invokestatic  #63                 // InterfaceMethod scalaz/Band.bandLaw$:(Lscalaz/Band;)Lscalaz/Band$BandLaw;
       4: areturn

  public scala.collection.immutable.SortedMap<K, V> zero();
    Code:
       0: aload_0
       1: invokestatic  #70                 // InterfaceMethod scalaz/std/SortedMapInstances0$SortedMapMonoid.zero$:(Lscalaz/std/SortedMapInstances0$SortedMapMonoid;)Lscala/collection/immutable/SortedMap;
       4: areturn

  public scala.collection.immutable.SortedMap<K, V> append(scala.collection.immutable.SortedMap<K, V>, scala.Function0<scala.collection.immutable.SortedMap<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #79                 // InterfaceMethod scalaz/std/SortedMapInstances0$SortedMapMonoid.append$:(Lscalaz/std/SortedMapInstances0$SortedMapMonoid;Lscala/collection/immutable/SortedMap;Lscala/Function0;)Lscala/collection/immutable/SortedMap;
       6: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #86                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #94                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #103                // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #111                // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #116                // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #123                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #128                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #135                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #142                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scala.collection.immutable.SortedMap<K, V>>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #149                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public <S> scalaz.Maybe<scala.collection.immutable.SortedMap<K, V>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scala.collection.immutable.SortedMap<K, V>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #156                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scala.collection.immutable.SortedMap<K, V>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scala.collection.immutable.SortedMap<K, V>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #161                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #168                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #175                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scala.collection.immutable.SortedMap<K, V>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #182                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.BandSyntax<scala.collection.immutable.SortedMap<K, V>> bandSyntax();
    Code:
       0: aload_0
       1: getfield      #186                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       4: areturn

  public void scalaz$Band$_setter_$bandSyntax_$eq(scalaz.syntax.BandSyntax<scala.collection.immutable.SortedMap<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #186                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       5: return

  public scalaz.syntax.MonoidSyntax<scala.collection.immutable.SortedMap<K, V>> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #194                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scala.collection.immutable.SortedMap<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #194                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scala.collection.immutable.SortedMap<K, V>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #201                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scala.collection.immutable.SortedMap<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #201                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.Band<V> V();
    Code:
       0: aload_0
       1: getfield      #209                // Field S$1:Lscalaz/Band;
       4: areturn

  public scala.math.Ordering<K> O();
    Code:
       0: aload_0
       1: getfield      #214                // Field K$1:Lscala/math/Ordering;
       4: areturn

  public scalaz.std.SortedMapInstances0 scalaz$std$SortedMapInstances0$SortedMapMonoid$$$outer();
    Code:
       0: aload_0
       1: getfield      #218                // Field $outer:Lscalaz/std/SortedMapInstances0;
       4: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #223                // class scala/collection/immutable/SortedMap
       5: aload_2
       6: invokevirtual #225                // Method append:(Lscala/collection/immutable/SortedMap;Lscala/Function0;)Lscala/collection/immutable/SortedMap;
       9: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #228                // Method zero:()Lscala/collection/immutable/SortedMap;
       4: areturn

  public scalaz.Semigroup V();
    Code:
       0: aload_0
       1: invokevirtual #231                // Method V:()Lscalaz/Band;
       4: areturn

  public scalaz.std.SortedMapInstances0$$anon$3(scalaz.std.SortedMapInstances0, scalaz.Band, scala.math.Ordering);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #218                // Field $outer:Lscalaz/std/SortedMapInstances0;
      11: aload_0
      12: aload_2
      13: putfield      #209                // Field S$1:Lscalaz/Band;
      16: aload_0
      17: aload_3
      18: putfield      #214                // Field K$1:Lscala/math/Ordering;
      21: aload_0
      22: invokespecial #236                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #240                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      29: aload_0
      30: invokestatic  #243                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      33: aload_0
      34: invokestatic  #246                // InterfaceMethod scalaz/Band.$init$:(Lscalaz/Band;)V
      37: invokestatic  #251                // Method scala/runtime/Statics.releaseFence:()V
      40: return
}
