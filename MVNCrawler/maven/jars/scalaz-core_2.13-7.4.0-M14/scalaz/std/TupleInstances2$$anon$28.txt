Compiled from "Tuple.scala"
public final class scalaz.std.TupleInstances2$$anon$28 implements scalaz.std.Tuple3Semigroup<A1, A2, A3>, scalaz.Band<scala.Tuple3<A1, A2, A3>> {
  private scalaz.syntax.BandSyntax<scala.Tuple3<A1, A2, A3>> bandSyntax;

  private scalaz.syntax.SemigroupSyntax<scala.Tuple3<A1, A2, A3>> semigroupSyntax;

  private final scalaz.Band A1$19;

  private final scalaz.Band A2$16;

  private final scalaz.Band A3$13;

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #41                 // InterfaceMethod scalaz/Band.multiply1$:(Lscalaz/Band;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public scalaz.Band<scala.Tuple3<A1, A2, A3>>.BandLaw bandLaw();
    Code:
       0: aload_0
       1: invokestatic  #52                 // InterfaceMethod scalaz/Band.bandLaw$:(Lscalaz/Band;)Lscalaz/Band$BandLaw;
       4: areturn

  public scala.Tuple3<A1, A2, A3> append(scala.Tuple3<A1, A2, A3>, scala.Function0<scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #61                 // InterfaceMethod scalaz/std/Tuple3Semigroup.append$:(Lscalaz/std/Tuple3Semigroup;Lscala/Tuple3;Lscala/Function0;)Lscala/Tuple3;
       6: areturn

  public <S> scalaz.Maybe<scala.Tuple3<A1, A2, A3>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scala.Tuple3<A1, A2, A3>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #72                 // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scala.Tuple3<A1, A2, A3>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scala.Tuple3<A1, A2, A3>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #78                 // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #85                 // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #92                 // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scala.Tuple3<A1, A2, A3>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #99                 // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.BandSyntax<scala.Tuple3<A1, A2, A3>> bandSyntax();
    Code:
       0: aload_0
       1: getfield      #103                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       4: areturn

  public void scalaz$Band$_setter_$bandSyntax_$eq(scalaz.syntax.BandSyntax<scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #103                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scala.Tuple3<A1, A2, A3>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #111                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #111                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.Band<A1> _1();
    Code:
       0: aload_0
       1: getfield      #119                // Field A1$19:Lscalaz/Band;
       4: areturn

  public scalaz.Band<A2> _2();
    Code:
       0: aload_0
       1: getfield      #123                // Field A2$16:Lscalaz/Band;
       4: areturn

  public scalaz.Band<A3> _3();
    Code:
       0: aload_0
       1: getfield      #127                // Field A3$13:Lscalaz/Band;
       4: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #131                // class scala/Tuple3
       5: aload_2
       6: invokevirtual #133                // Method append:(Lscala/Tuple3;Lscala/Function0;)Lscala/Tuple3;
       9: areturn

  public scalaz.Semigroup _3();
    Code:
       0: aload_0
       1: invokevirtual #136                // Method _3:()Lscalaz/Band;
       4: areturn

  public scalaz.Semigroup _2();
    Code:
       0: aload_0
       1: invokevirtual #138                // Method _2:()Lscalaz/Band;
       4: areturn

  public scalaz.Semigroup _1();
    Code:
       0: aload_0
       1: invokevirtual #140                // Method _1:()Lscalaz/Band;
       4: areturn

  public scalaz.std.TupleInstances2$$anon$28(scalaz.std.TupleInstances2, scalaz.Band, scalaz.Band, scalaz.Band);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #119                // Field A1$19:Lscalaz/Band;
       5: aload_0
       6: aload_3
       7: putfield      #123                // Field A2$16:Lscalaz/Band;
      10: aload_0
      11: aload         4
      13: putfield      #127                // Field A3$13:Lscalaz/Band;
      16: aload_0
      17: invokespecial #146                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #150                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      24: aload_0
      25: invokestatic  #153                // InterfaceMethod scalaz/Band.$init$:(Lscalaz/Band;)V
      28: invokestatic  #158                // Method scala/runtime/Statics.releaseFence:()V
      31: return
}
