Compiled from "Tuple.scala"
public final class scalaz.std.TupleInstances2$$anon$44 implements scalaz.std.Tuple3Equal<A1, A2, A3> {
  private boolean equalIsNatural;

  private scalaz.syntax.EqualSyntax<scala.Tuple3<A1, A2, A3>> equalSyntax;

  private final scalaz.Equal A1$27;

  private final scalaz.Equal A2$23;

  private final scalaz.Equal A3$19;

  public boolean equal(scala.Tuple3<A1, A2, A3>, scala.Tuple3<A1, A2, A3>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #36                 // InterfaceMethod scalaz/std/Tuple3Equal.equal$:(Lscalaz/std/Tuple3Equal;Lscala/Tuple3;Lscala/Tuple3;)Z
       6: ireturn

  public <G> scalaz.Equal<G> contramap(scala.Function1<G, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #47                 // InterfaceMethod scalaz/Equal.contramap$:(Lscalaz/Equal;Lscala/Function1;)Lscalaz/Equal;
       5: areturn

  public scalaz.Equal<scala.Tuple3<A1, A2, A3>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #55                 // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: getfield      #58                 // Field equalIsNatural:Z
       4: ireturn

  public void scalaz$std$Tuple3Equal$_setter_$equalIsNatural_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #58                 // Field equalIsNatural:Z
       5: return

  public scalaz.syntax.EqualSyntax<scala.Tuple3<A1, A2, A3>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #65                 // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Equal<A1> _1();
    Code:
       0: aload_0
       1: getfield      #73                 // Field A1$27:Lscalaz/Equal;
       4: areturn

  public scalaz.Equal<A2> _2();
    Code:
       0: aload_0
       1: getfield      #77                 // Field A2$23:Lscalaz/Equal;
       4: areturn

  public scalaz.Equal<A3> _3();
    Code:
       0: aload_0
       1: getfield      #81                 // Field A3$19:Lscalaz/Equal;
       4: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #86                 // class scala/Tuple3
       5: aload_2
       6: checkcast     #86                 // class scala/Tuple3
       9: invokevirtual #88                 // Method equal:(Lscala/Tuple3;Lscala/Tuple3;)Z
      12: ireturn

  public scalaz.std.TupleInstances2$$anon$44(scalaz.std.TupleInstances2, scalaz.Equal, scalaz.Equal, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #73                 // Field A1$27:Lscalaz/Equal;
       5: aload_0
       6: aload_3
       7: putfield      #77                 // Field A2$23:Lscalaz/Equal;
      10: aload_0
      11: aload         4
      13: putfield      #81                 // Field A3$19:Lscalaz/Equal;
      16: aload_0
      17: invokespecial #95                 // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #99                 // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      24: aload_0
      25: invokestatic  #102                // InterfaceMethod scalaz/std/Tuple3Equal.$init$:(Lscalaz/std/Tuple3Equal;)V
      28: invokestatic  #107                // Method scala/runtime/Statics.releaseFence:()V
      31: return
}
