Compiled from "AnyVal.scala"
public final class scalaz.std.AnyValInstances$$anon$2 implements scalaz.Monoid<java.lang.Object>, scalaz.Enum<java.lang.Object>, scalaz.Band<java.lang.Object> {
  private scalaz.syntax.BandSyntax<java.lang.Object> bandSyntax;

  private scalaz.syntax.EnumSyntax<java.lang.Object> enumSyntax;

  private scalaz.syntax.OrderSyntax<java.lang.Object> orderSyntax;

  private scalaz.syntax.EqualSyntax<java.lang.Object> equalSyntax;

  private scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax;

  private scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax;

  private final scalaz.std.AnyValInstances $outer;

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #90                 // InterfaceMethod scalaz/Band.multiply1$:(Lscalaz/Band;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public scalaz.Band<java.lang.Object>.BandLaw bandLaw();
    Code:
       0: aload_0
       1: invokestatic  #101                // InterfaceMethod scalaz/Band.bandLaw$:(Lscalaz/Band;)Lscalaz/Band$BandLaw;
       4: areturn

  public scalaz.Kleisli<scala.Option, java.lang.Object, java.lang.Object> succx();
    Code:
       0: aload_0
       1: invokestatic  #108                // InterfaceMethod scalaz/Enum.succx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public scalaz.Kleisli<scala.Option, java.lang.Object, java.lang.Object> predx();
    Code:
       0: aload_0
       1: invokestatic  #112                // InterfaceMethod scalaz/Enum.predx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public <X> scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, X> succState(scala.Function1<java.lang.Object, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #120                // InterfaceMethod scalaz/Enum.succState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y succStateZeroM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #130                // InterfaceMethod scalaz/Enum.succStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y succStateZero(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #136                // InterfaceMethod scalaz/Enum.succStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> succStateMinM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #143                // InterfaceMethod scalaz/Enum.succStateMinM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> succStateMin(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #148                // InterfaceMethod scalaz/Enum.succStateMin$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X> scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, X> predState(scala.Function1<java.lang.Object, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #152                // InterfaceMethod scalaz/Enum.predState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y predStateZeroM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #156                // InterfaceMethod scalaz/Enum.predStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y predStateZero(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #160                // InterfaceMethod scalaz/Enum.predStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> predStateMaxM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #164                // InterfaceMethod scalaz/Enum.predStateMaxM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> predStateMax(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #168                // InterfaceMethod scalaz/Enum.predStateMax$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> from(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #176                // InterfaceMethod scalaz/Enum.from$:(Lscalaz/Enum;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromStep(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #183                // InterfaceMethod scalaz/Enum.fromStep$:(Lscalaz/Enum;ILjava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromTo(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #191                // InterfaceMethod scalaz/Enum.fromTo$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.IList<java.lang.Object> fromToL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #198                // InterfaceMethod scalaz/Enum.fromToL$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromStepTo(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #205                // InterfaceMethod scalaz/Enum.fromStepTo$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       7: areturn

  public scalaz.IList<java.lang.Object> fromStepToL(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #212                // InterfaceMethod scalaz/Enum.fromStepToL$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       7: areturn

  public scalaz.Enum<java.lang.Object>.EnumLaw enumLaw();
    Code:
       0: aload_0
       1: invokestatic  #219                // InterfaceMethod scalaz/Enum.enumLaw$:(Lscalaz/Enum;)Lscalaz/Enum$EnumLaw;
       4: areturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #227                // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #233                // InterfaceMethod scalaz/Order.equal$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #237                // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #241                // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #245                // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #249                // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #255                // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #259                // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<java.lang.Object, java.lang.Object> sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #266                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #273                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<java.lang.Object> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #280                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<java.lang.Object> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #287                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<java.lang.Object>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #294                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #300                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<java.lang.Object>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #307                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #312                // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #320                // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final <B> B ifEmpty(java.lang.Object, scala.Function0<B>, scala.Function0<B>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #329                // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final <B> B onNotEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #339                // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final <A, B> B onEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #344                // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public <S> java.lang.Object unfoldlSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #352                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <S> java.lang.Object unfoldrSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #357                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #364                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #371                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<java.lang.Object>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #378                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #385                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #390                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<java.lang.Object>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #397                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.BandSyntax<java.lang.Object> bandSyntax();
    Code:
       0: aload_0
       1: getfield      #401                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       4: areturn

  public void scalaz$Band$_setter_$bandSyntax_$eq(scalaz.syntax.BandSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #401                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       5: return

  public scalaz.syntax.EnumSyntax<java.lang.Object> enumSyntax();
    Code:
       0: aload_0
       1: getfield      #409                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       4: areturn

  public void scalaz$Enum$_setter_$enumSyntax_$eq(scalaz.syntax.EnumSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #409                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       5: return

  public scalaz.syntax.OrderSyntax<java.lang.Object> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #416                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #416                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<java.lang.Object> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #423                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #423                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #430                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #430                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #437                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #437                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public java.lang.Object append(java.lang.Object, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #451                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #455                // Method scalaz/Tags$.Disjunction:()Lscalaz/Tag$TagOf;
       6: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       9: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      12: aload_1
      13: invokevirtual #469                // Method scalaz/TagKind.unwrap$mZc$sp:(Ljava/lang/Object;)Z
      16: ifne          41
      19: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      22: aload_2
      23: invokeinterface #474,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      28: astore_3
      29: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      32: aload_3
      33: invokevirtual #469                // Method scalaz/TagKind.unwrap$mZc$sp:(Ljava/lang/Object;)Z
      36: aconst_null
      37: astore_3
      38: ifeq          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: invokestatic  #480                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      49: astore        4
      51: ifnonnull     56
      54: aconst_null
      55: athrow
      56: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      59: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      62: aload         4
      64: invokevirtual #483                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      67: areturn

  public java.lang.Object zero();
    Code:
       0: getstatic     #451                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #455                // Method scalaz/Tags$.Disjunction:()Lscalaz/Tag$TagOf;
       6: iconst_0
       7: invokestatic  #480                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: astore_1
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      19: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      22: aload_1
      23: invokevirtual #483                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: areturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #496                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: pop
       4: aload_0
       5: getfield      #498                // Field $outer:Lscalaz/std/AnyValInstances;
       8: invokeinterface #502,  1          // InterfaceMethod scalaz/std/AnyValInstances.booleanInstance:()Lscalaz/std/AnyValInstances$booleanInstance$;
      13: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      16: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      19: aload_1
      20: invokevirtual #469                // Method scalaz/TagKind.unwrap$mZc$sp:(Ljava/lang/Object;)Z
      23: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      26: astore_3
      27: aload_3
      28: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      31: aload_2
      32: invokevirtual #469                // Method scalaz/TagKind.unwrap$mZc$sp:(Ljava/lang/Object;)Z
      35: aconst_null
      36: astore_3
      37: istore        5
      39: istore        4
      41: dup
      42: ifnonnull     47
      45: aconst_null
      46: athrow
      47: iload         4
      49: iload         5
      51: invokevirtual #505                // Method scalaz/std/AnyValInstances$booleanInstance$.order:(ZZ)Lscalaz/Ordering;
      54: areturn

  public java.lang.Object succ(java.lang.Object);
    Code:
       0: getstatic     #451                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #455                // Method scalaz/Tags$.Disjunction:()Lscalaz/Tag$TagOf;
       6: getstatic     #516                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #498                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #502,  1          // InterfaceMethod scalaz/std/AnyValInstances.booleanInstance:()Lscalaz/std/AnyValInstances$booleanInstance$;
      19: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      22: astore_2
      23: aload_2
      24: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      27: aload_1
      28: invokevirtual #469                // Method scalaz/TagKind.unwrap$mZc$sp:(Ljava/lang/Object;)Z
      31: aconst_null
      32: astore_2
      33: istore        5
      35: dup
      36: ifnonnull     41
      39: aconst_null
      40: athrow
      41: astore        4
      43: aload         4
      45: iload         5
      47: invokevirtual #519                // Method scalaz/std/AnyValInstances$booleanInstance$.succ:(Z)Z
      50: invokestatic  #480                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      53: aconst_null
      54: astore        4
      56: astore_3
      57: ifnonnull     62
      60: aconst_null
      61: athrow
      62: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      65: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      68: aload_3
      69: invokevirtual #483                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      72: areturn

  public java.lang.Object pred(java.lang.Object);
    Code:
       0: getstatic     #451                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #455                // Method scalaz/Tags$.Disjunction:()Lscalaz/Tag$TagOf;
       6: getstatic     #516                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #498                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #502,  1          // InterfaceMethod scalaz/std/AnyValInstances.booleanInstance:()Lscalaz/std/AnyValInstances$booleanInstance$;
      19: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      22: astore_2
      23: aload_2
      24: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      27: aload_1
      28: invokevirtual #469                // Method scalaz/TagKind.unwrap$mZc$sp:(Ljava/lang/Object;)Z
      31: aconst_null
      32: astore_2
      33: istore        5
      35: dup
      36: ifnonnull     41
      39: aconst_null
      40: athrow
      41: astore        4
      43: aload         4
      45: iload         5
      47: invokevirtual #525                // Method scalaz/std/AnyValInstances$booleanInstance$.pred:(Z)Z
      50: invokestatic  #480                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      53: aconst_null
      54: astore        4
      56: astore_3
      57: ifnonnull     62
      60: aconst_null
      61: athrow
      62: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      65: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      68: aload_3
      69: invokevirtual #483                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      72: areturn

  public java.lang.Object succn(int, java.lang.Object);
    Code:
       0: getstatic     #451                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #455                // Method scalaz/Tags$.Disjunction:()Lscalaz/Tag$TagOf;
       6: getstatic     #516                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #498                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #502,  1          // InterfaceMethod scalaz/std/AnyValInstances.booleanInstance:()Lscalaz/std/AnyValInstances$booleanInstance$;
      19: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      22: astore_3
      23: aload_3
      24: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      27: aload_2
      28: invokevirtual #469                // Method scalaz/TagKind.unwrap$mZc$sp:(Ljava/lang/Object;)Z
      31: aconst_null
      32: astore_3
      33: istore        6
      35: dup
      36: ifnonnull     41
      39: aconst_null
      40: athrow
      41: astore        5
      43: aload         5
      45: iload_1
      46: iload         6
      48: invokevirtual #532                // Method scalaz/std/AnyValInstances$booleanInstance$.succn:(IZ)Z
      51: invokestatic  #480                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      54: aconst_null
      55: astore        5
      57: astore        4
      59: ifnonnull     64
      62: aconst_null
      63: athrow
      64: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      67: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      70: aload         4
      72: invokevirtual #483                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      75: areturn

  public java.lang.Object predn(int, java.lang.Object);
    Code:
       0: getstatic     #451                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #455                // Method scalaz/Tags$.Disjunction:()Lscalaz/Tag$TagOf;
       6: getstatic     #516                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #498                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #502,  1          // InterfaceMethod scalaz/std/AnyValInstances.booleanInstance:()Lscalaz/std/AnyValInstances$booleanInstance$;
      19: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      22: astore_3
      23: aload_3
      24: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      27: aload_2
      28: invokevirtual #469                // Method scalaz/TagKind.unwrap$mZc$sp:(Ljava/lang/Object;)Z
      31: aconst_null
      32: astore_3
      33: istore        6
      35: dup
      36: ifnonnull     41
      39: aconst_null
      40: athrow
      41: astore        5
      43: aload         5
      45: iload_1
      46: iload         6
      48: invokevirtual #537                // Method scalaz/std/AnyValInstances$booleanInstance$.predn:(IZ)Z
      51: invokestatic  #480                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      54: aconst_null
      55: astore        5
      57: astore        4
      59: ifnonnull     64
      62: aconst_null
      63: athrow
      64: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      67: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      70: aload         4
      72: invokevirtual #483                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      75: areturn

  public scala.Option<java.lang.Object> min();
    Code:
       0: getstatic     #451                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #455                // Method scalaz/Tags$.Disjunction:()Lscalaz/Tag$TagOf;
       6: getstatic     #516                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #498                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #502,  1          // InterfaceMethod scalaz/std/AnyValInstances.booleanInstance:()Lscalaz/std/AnyValInstances$booleanInstance$;
      19: invokeinterface #543,  1          // InterfaceMethod scalaz/Enum.min:()Lscala/Option;
      24: astore_1
      25: ifnonnull     30
      28: aconst_null
      29: athrow
      30: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      33: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      36: aload_1
      37: invokevirtual #546                // Method scalaz/TagKind.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #548                // class scala/Option
      43: areturn

  public scala.Option<java.lang.Object> max();
    Code:
       0: getstatic     #451                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #455                // Method scalaz/Tags$.Disjunction:()Lscalaz/Tag$TagOf;
       6: getstatic     #516                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #498                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #502,  1          // InterfaceMethod scalaz/std/AnyValInstances.booleanInstance:()Lscalaz/std/AnyValInstances$booleanInstance$;
      19: invokeinterface #551,  1          // InterfaceMethod scalaz/Enum.max:()Lscala/Option;
      24: astore_1
      25: ifnonnull     30
      28: aconst_null
      29: athrow
      30: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      33: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      36: aload_1
      37: invokevirtual #546                // Method scalaz/TagKind.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #548                // class scala/Option
      43: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: getstatic     #451                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #455                // Method scalaz/Tags$.Disjunction:()Lscalaz/Tag$TagOf;
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      14: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      17: aload_2
      18: invokevirtual #558                // Method scalaz/TagKind.unsubst:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #560                // class scala/Function1
      24: astore_3
      25: aload_3
      26: aload_1
      27: invokeinterface #561,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #34                 // class scalaz/Maybe
      35: aload_0
      36: aload_3
      37: invokedynamic #581,  0            // InvokeDynamic #0:apply:(Lscalaz/std/AnyValInstances$$anon$2;Lscala/Function1;)Lscala/Function1;
      42: astore        5
      44: dup
      45: ifnonnull     50
      48: aconst_null
      49: athrow
      50: astore        4
      52: aload         5
      54: invokedynamic #590,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      59: invokeinterface #594,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      64: astore        6
      66: aload         4
      68: instanceof    #40                 // class scalaz/Maybe$Just
      71: ifeq          96
      74: aload         4
      76: checkcast     #40                 // class scalaz/Maybe$Just
      79: invokevirtual #597                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      82: astore        7
      84: aload         6
      86: aload         7
      88: invokeinterface #561,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      93: goto          127
      96: aload         4
      98: instanceof    #32                 // class scalaz/Maybe$Empty
     101: ifeq          117
     104: getstatic     #602                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     107: pop
     108: getstatic     #605                // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
     111: invokevirtual #608                // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
     114: goto          127
     117: new           #610                // class scala/MatchError
     120: dup
     121: aload         4
     123: invokespecial #614                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     126: athrow
     127: checkcast     #34                 // class scalaz/Maybe
     130: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: getstatic     #451                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #455                // Method scalaz/Tags$.Disjunction:()Lscalaz/Tag$TagOf;
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      14: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      17: aload_2
      18: invokevirtual #558                // Method scalaz/TagKind.unsubst:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #560                // class scala/Function1
      24: astore_3
      25: aload_3
      26: aload_1
      27: invokeinterface #561,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #34                 // class scalaz/Maybe
      35: aload_0
      36: aload_3
      37: invokedynamic #627,  0            // InvokeDynamic #2:apply:(Lscalaz/std/AnyValInstances$$anon$2;Lscala/Function1;)Lscala/Function1;
      42: astore        5
      44: dup
      45: ifnonnull     50
      48: aconst_null
      49: athrow
      50: astore        4
      52: aload         5
      54: invokedynamic #590,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      59: invokeinterface #594,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      64: astore        6
      66: aload         4
      68: instanceof    #40                 // class scalaz/Maybe$Just
      71: ifeq          96
      74: aload         4
      76: checkcast     #40                 // class scalaz/Maybe$Just
      79: invokevirtual #597                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      82: astore        7
      84: aload         6
      86: aload         7
      88: invokeinterface #561,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      93: goto          127
      96: aload         4
      98: instanceof    #32                 // class scalaz/Maybe$Empty
     101: ifeq          117
     104: getstatic     #602                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     107: pop
     108: getstatic     #605                // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
     111: invokevirtual #608                // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
     114: goto          127
     117: new           #610                // class scala/MatchError
     120: dup
     121: aload         4
     123: invokespecial #614                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     126: athrow
     127: checkcast     #34                 // class scalaz/Maybe
     130: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #630                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  private final boolean go$1(java.lang.Object, scala.Function1);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #561,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #34                 // class scalaz/Maybe
      10: astore_3
      11: aload_3
      12: instanceof    #40                 // class scalaz/Maybe$Just
      15: ifeq          62
      18: aload_3
      19: checkcast     #40                 // class scalaz/Maybe$Just
      22: invokevirtual #597                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      25: checkcast     #635                // class scala/Tuple2
      28: astore        4
      30: aload         4
      32: ifnull        62
      35: aload         4
      37: invokevirtual #638                // Method scala/Tuple2._1$mcZ$sp:()Z
      40: istore        5
      42: aload         4
      44: invokevirtual #641                // Method scala/Tuple2._2:()Ljava/lang/Object;
      47: astore        6
      49: iload         5
      51: ifne          60
      54: aload         6
      56: astore_1
      57: goto          0
      60: iconst_1
      61: ireturn
      62: iconst_0
      63: ireturn

  public static final java.lang.Object $anonfun$unfoldrSumOpt$1(scalaz.std.AnyValInstances$$anon$2, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        141
       4: aload_2
       5: invokevirtual #638                // Method scala/Tuple2._1$mcZ$sp:()Z
       8: istore_3
       9: aload_2
      10: invokevirtual #641                // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore        4
      15: getstatic     #451                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
      18: invokevirtual #455                // Method scalaz/Tags$.Disjunction:()Lscalaz/Tag$TagOf;
      21: iload_3
      22: ifne          114
      25: aload         4
      27: astore        5
      29: aload_1
      30: aload         5
      32: invokeinterface #561,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #34                 // class scalaz/Maybe
      40: astore        6
      42: aload         6
      44: instanceof    #40                 // class scalaz/Maybe$Just
      47: ifeq          98
      50: aload         6
      52: checkcast     #40                 // class scalaz/Maybe$Just
      55: invokevirtual #597                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      58: checkcast     #635                // class scala/Tuple2
      61: astore        7
      63: aload         7
      65: ifnull        98
      68: aload         7
      70: invokevirtual #638                // Method scala/Tuple2._1$mcZ$sp:()Z
      73: istore        8
      75: aload         7
      77: invokevirtual #641                // Method scala/Tuple2._2:()Ljava/lang/Object;
      80: astore        9
      82: iload         8
      84: ifne          94
      87: aload         9
      89: astore        5
      91: goto          29
      94: iconst_1
      95: goto          99
      98: iconst_0
      99: aconst_null
     100: astore        5
     102: aconst_null
     103: astore        6
     105: aconst_null
     106: astore        7
     108: aconst_null
     109: astore        9
     111: ifeq          118
     114: iconst_1
     115: goto          119
     118: iconst_0
     119: invokestatic  #480                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     122: astore        10
     124: ifnonnull     129
     127: aconst_null
     128: athrow
     129: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     132: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
     135: aload         10
     137: invokevirtual #483                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     140: areturn
     141: new           #610                // class scala/MatchError
     144: dup
     145: aconst_null
     146: invokespecial #614                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     149: athrow

  private final boolean go$2(java.lang.Object, scala.Function1);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #561,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #34                 // class scalaz/Maybe
      10: astore_3
      11: aload_3
      12: instanceof    #40                 // class scalaz/Maybe$Just
      15: ifeq          58
      18: aload_3
      19: checkcast     #40                 // class scalaz/Maybe$Just
      22: invokevirtual #597                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      25: checkcast     #635                // class scala/Tuple2
      28: astore        4
      30: aload         4
      32: ifnull        58
      35: aload         4
      37: invokevirtual #651                // Method scala/Tuple2._1:()Ljava/lang/Object;
      40: astore        5
      42: aload         4
      44: invokevirtual #654                // Method scala/Tuple2._2$mcZ$sp:()Z
      47: ifne          56
      50: aload         5
      52: astore_1
      53: goto          0
      56: iconst_1
      57: ireturn
      58: iconst_0
      59: ireturn

  public static final java.lang.Object $anonfun$unfoldlSumOpt$1(scalaz.std.AnyValInstances$$anon$2, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        137
       4: aload_2
       5: invokevirtual #651                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_2
      10: invokevirtual #654                // Method scala/Tuple2._2$mcZ$sp:()Z
      13: istore        4
      15: getstatic     #451                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
      18: invokevirtual #455                // Method scalaz/Tags$.Disjunction:()Lscalaz/Tag$TagOf;
      21: iload         4
      23: ifne          110
      26: aload_3
      27: astore        5
      29: aload_1
      30: aload         5
      32: invokeinterface #561,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #34                 // class scalaz/Maybe
      40: astore        6
      42: aload         6
      44: instanceof    #40                 // class scalaz/Maybe$Just
      47: ifeq          94
      50: aload         6
      52: checkcast     #40                 // class scalaz/Maybe$Just
      55: invokevirtual #597                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      58: checkcast     #635                // class scala/Tuple2
      61: astore        7
      63: aload         7
      65: ifnull        94
      68: aload         7
      70: invokevirtual #651                // Method scala/Tuple2._1:()Ljava/lang/Object;
      73: astore        8
      75: aload         7
      77: invokevirtual #654                // Method scala/Tuple2._2$mcZ$sp:()Z
      80: ifne          90
      83: aload         8
      85: astore        5
      87: goto          29
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: aconst_null
      96: astore        5
      98: aconst_null
      99: astore        6
     101: aconst_null
     102: astore        7
     104: aconst_null
     105: astore        8
     107: ifeq          114
     110: iconst_1
     111: goto          115
     114: iconst_0
     115: invokestatic  #480                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     118: astore        9
     120: ifnonnull     125
     123: aconst_null
     124: athrow
     125: getstatic     #460                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     128: invokevirtual #463                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
     131: aload         9
     133: invokevirtual #483                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     136: areturn
     137: new           #610                // class scala/MatchError
     140: dup
     141: aconst_null
     142: invokespecial #614                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     145: athrow

  public scalaz.std.AnyValInstances$$anon$2(scalaz.std.AnyValInstances);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #498                // Field $outer:Lscalaz/std/AnyValInstances;
      11: aload_0
      12: invokespecial #659                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #663                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      19: aload_0
      20: invokestatic  #666                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      23: aload_0
      24: invokestatic  #669                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      27: aload_0
      28: invokestatic  #672                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      31: aload_0
      32: invokestatic  #675                // InterfaceMethod scalaz/Enum.$init$:(Lscalaz/Enum;)V
      35: aload_0
      36: invokestatic  #678                // InterfaceMethod scalaz/Band.$init$:(Lscalaz/Band;)V
      39: invokestatic  #683                // Method scala/runtime/Statics.releaseFence:()V
      42: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #695,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
