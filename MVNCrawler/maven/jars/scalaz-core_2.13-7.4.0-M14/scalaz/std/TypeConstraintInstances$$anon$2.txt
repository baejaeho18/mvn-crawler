Compiled from "TypeConstraint.scala"
public final class scalaz.std.TypeConstraintInstances$$anon$2 implements scalaz.Category<scala.$eq$colon$eq> {
  private scalaz.syntax.CategorySyntax<scala.$eq$colon$eq> categorySyntax;

  private scalaz.syntax.ComposeSyntax<scala.$eq$colon$eq> composeSyntax;

  public scalaz.PlusEmpty<?> empty();
    Code:
       0: aload_0
       1: invokestatic  #31                 // InterfaceMethod scalaz/Category.empty$:(Lscalaz/Category;)Lscalaz/PlusEmpty;
       4: areturn

  public <A> scalaz.Monoid<scala.$eq$colon$eq<A, A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #40                 // InterfaceMethod scalaz/Category.monoid$:(Lscalaz/Category;)Lscalaz/Monoid;
       4: areturn

  public scalaz.Category<scala.$eq$colon$eq>.CategoryLaw categoryLaw();
    Code:
       0: aload_0
       1: invokestatic  #47                 // InterfaceMethod scalaz/Category.categoryLaw$:(Lscalaz/Category;)Lscalaz/Category$CategoryLaw;
       4: areturn

  public scalaz.Plus<?> plus();
    Code:
       0: aload_0
       1: invokestatic  #54                 // InterfaceMethod scalaz/Compose.plus$:(Lscalaz/Compose;)Lscalaz/Plus;
       4: areturn

  public <A> scalaz.Semigroup<scala.$eq$colon$eq<A, A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #61                 // InterfaceMethod scalaz/Compose.semigroup$:(Lscalaz/Compose;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Compose<scala.$eq$colon$eq>.ComposeLaw composeLaw();
    Code:
       0: aload_0
       1: invokestatic  #68                 // InterfaceMethod scalaz/Compose.composeLaw$:(Lscalaz/Compose;)Lscalaz/Compose$ComposeLaw;
       4: areturn

  public scalaz.syntax.CategorySyntax<scala.$eq$colon$eq> categorySyntax();
    Code:
       0: aload_0
       1: getfield      #72                 // Field categorySyntax:Lscalaz/syntax/CategorySyntax;
       4: areturn

  public void scalaz$Category$_setter_$categorySyntax_$eq(scalaz.syntax.CategorySyntax<scala.$eq$colon$eq>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #72                 // Field categorySyntax:Lscalaz/syntax/CategorySyntax;
       5: return

  public scalaz.syntax.ComposeSyntax<scala.$eq$colon$eq> composeSyntax();
    Code:
       0: aload_0
       1: getfield      #80                 // Field composeSyntax:Lscalaz/syntax/ComposeSyntax;
       4: areturn

  public void scalaz$Compose$_setter_$composeSyntax_$eq(scalaz.syntax.ComposeSyntax<scala.$eq$colon$eq>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #80                 // Field composeSyntax:Lscalaz/syntax/ComposeSyntax;
       5: return

  public <A> scala.$eq$colon$eq<A, A> id();
    Code:
       0: getstatic     #92                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: getstatic     #97                 // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
       6: invokevirtual #100                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
       9: invokevirtual #104                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #106                // class scala/$eq$colon$eq
      15: areturn

  public <A, B, C> scala.$eq$colon$eq<A, C> compose(scala.$eq$colon$eq<B, C>, scala.$eq$colon$eq<A, B>);
    Code:
       0: aload_1
       1: areturn

  public java.lang.Object compose(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #106                // class scala/$eq$colon$eq
       5: aload_2
       6: checkcast     #106                // class scala/$eq$colon$eq
       9: invokevirtual #115                // Method compose:(Lscala/$eq$colon$eq;Lscala/$eq$colon$eq;)Lscala/$eq$colon$eq;
      12: areturn

  public java.lang.Object id();
    Code:
       0: aload_0
       1: invokevirtual #119                // Method id:()Lscala/$eq$colon$eq;
       4: areturn

  public scalaz.std.TypeConstraintInstances$$anon$2(scalaz.std.TypeConstraintInstances);
    Code:
       0: aload_0
       1: invokespecial #125                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #129                // InterfaceMethod scalaz/Compose.$init$:(Lscalaz/Compose;)V
       8: aload_0
       9: invokestatic  #132                // InterfaceMethod scalaz/Category.$init$:(Lscalaz/Category;)V
      12: invokestatic  #137                // Method scala/runtime/Statics.releaseFence:()V
      15: return
}
