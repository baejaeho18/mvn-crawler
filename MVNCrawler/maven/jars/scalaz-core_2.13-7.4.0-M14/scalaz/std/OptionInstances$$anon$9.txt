Compiled from "Option.scala"
public final class scalaz.std.OptionInstances$$anon$9 implements scalaz.Monoid<java.lang.Object>, scalaz.Band<java.lang.Object> {
  private scalaz.syntax.BandSyntax<java.lang.Object> bandSyntax;

  private scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax;

  private scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax;

  private final scalaz.Order o$1;

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #45                 // InterfaceMethod scalaz/Band.multiply1$:(Lscalaz/Band;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public scalaz.Band<java.lang.Object>.BandLaw bandLaw();
    Code:
       0: aload_0
       1: invokestatic  #56                 // InterfaceMethod scalaz/Band.bandLaw$:(Lscalaz/Band;)Lscalaz/Band$BandLaw;
       4: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #61                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #70                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final <B> B ifEmpty(java.lang.Object, scala.Function0<B>, scala.Function0<B>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #80                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final <B> B onNotEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #90                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final <A, B> B onEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #96                 // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public <S> java.lang.Object unfoldlSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #104                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <S> java.lang.Object unfoldrSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #110                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #117                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #124                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<java.lang.Object>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #131                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #138                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #143                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #150                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #157                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<java.lang.Object>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #164                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.BandSyntax<java.lang.Object> bandSyntax();
    Code:
       0: aload_0
       1: getfield      #168                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       4: areturn

  public void scalaz$Band$_setter_$bandSyntax_$eq(scalaz.syntax.BandSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #168                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       5: return

  public scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #176                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #176                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #183                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #183                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public java.lang.Object zero();
    Code:
       0: getstatic     #194                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
       6: astore_1
       7: invokevirtual #203                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      10: aload_1
      11: invokevirtual #208                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #194                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: new           #216                // class scala/Tuple2
       6: dup
       7: getstatic     #194                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      10: invokevirtual #203                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      13: aload_1
      14: invokevirtual #219                // Method scalaz/TagKind.unwrap:(Ljava/lang/Object;)Ljava/lang/Object;
      17: getstatic     #194                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      20: aload_2
      21: invokeinterface #223,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      26: astore        15
      28: invokevirtual #203                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      31: aload         15
      33: invokevirtual #219                // Method scalaz/TagKind.unwrap:(Ljava/lang/Object;)Ljava/lang/Object;
      36: aconst_null
      37: astore        15
      39: astore        18
      41: astore        17
      43: aload         17
      45: aload         18
      47: invokespecial #227                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      50: astore_3
      51: aload         17
      53: checkcast     #229                // class scala/Option
      56: astore        4
      58: aload         18
      60: checkcast     #229                // class scala/Option
      63: astore        5
      65: aload         4
      67: instanceof    #231                // class scala/Some
      70: ifeq          128
      73: aload         4
      75: checkcast     #231                // class scala/Some
      78: invokevirtual #233                // Method scala/Some.value:()Ljava/lang/Object;
      81: astore        6
      83: aload         5
      85: instanceof    #231                // class scala/Some
      88: ifeq          128
      91: aload         5
      93: checkcast     #231                // class scala/Some
      96: invokevirtual #233                // Method scala/Some.value:()Ljava/lang/Object;
      99: astore        7
     101: new           #231                // class scala/Some
     104: dup
     105: getstatic     #238                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
     108: pop
     109: aload_0
     110: getfield      #240                // Field o$1:Lscalaz/Order;
     113: aload         6
     115: aload         7
     117: invokeinterface #246,  3          // InterfaceMethod scalaz/Order.min:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     122: invokespecial #249                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     125: goto          265
     128: aload         17
     130: checkcast     #229                // class scala/Option
     133: astore        8
     135: aload         18
     137: checkcast     #229                // class scala/Option
     140: astore        9
     142: aload         8
     144: instanceof    #231                // class scala/Some
     147: ifeq          173
     150: aload         8
     152: checkcast     #231                // class scala/Some
     155: astore        10
     157: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
     160: aload         9
     162: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     165: ifeq          173
     168: aload         10
     170: goto          265
     173: aload         17
     175: checkcast     #229                // class scala/Option
     178: astore        11
     180: aload         18
     182: checkcast     #229                // class scala/Option
     185: astore        12
     187: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
     190: aload         11
     192: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     195: ifeq          214
     198: aload         12
     200: instanceof    #231                // class scala/Some
     203: ifeq          214
     206: aload         12
     208: checkcast     #231                // class scala/Some
     211: goto          265
     214: aload         17
     216: checkcast     #229                // class scala/Option
     219: astore        13
     221: aload         18
     223: checkcast     #229                // class scala/Option
     226: astore        14
     228: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
     231: aload         13
     233: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     236: ifeq          256
     239: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
     242: aload         14
     244: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     247: ifeq          256
     250: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
     253: goto          265
     256: new           #255                // class scala/MatchError
     259: dup
     260: aload_3
     261: invokespecial #256                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     264: athrow
     265: astore        16
     267: invokevirtual #203                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
     270: aload         16
     272: invokevirtual #208                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     275: areturn

  public scalaz.std.OptionInstances$$anon$9(scalaz.std.OptionInstances, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #240                // Field o$1:Lscalaz/Order;
       5: aload_0
       6: invokespecial #267                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #271                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      13: aload_0
      14: invokestatic  #274                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      17: aload_0
      18: invokestatic  #277                // InterfaceMethod scalaz/Band.$init$:(Lscalaz/Band;)V
      21: invokestatic  #282                // Method scala/runtime/Statics.releaseFence:()V
      24: return
}
