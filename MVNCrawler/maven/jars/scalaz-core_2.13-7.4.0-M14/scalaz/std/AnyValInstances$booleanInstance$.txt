Compiled from "AnyVal.scala"
public class scalaz.std.AnyValInstances$booleanInstance$ implements scalaz.Enum<java.lang.Object>, scalaz.Show<java.lang.Object> {
  private final scalaz.Monoid<java.lang.Object> conjunction;

  private final scalaz.Monoid<java.lang.Object> disjunction;

  private scalaz.syntax.ShowSyntax<java.lang.Object> showSyntax;

  private scalaz.syntax.EnumSyntax<java.lang.Object> enumSyntax;

  private scalaz.syntax.OrderSyntax<java.lang.Object> orderSyntax;

  private scalaz.syntax.EqualSyntax<java.lang.Object> equalSyntax;

  public scalaz.Kleisli<scala.Option, java.lang.Object, java.lang.Object> succx();
    Code:
       0: aload_0
       1: invokestatic  #73                 // InterfaceMethod scalaz/Enum.succx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public scalaz.Kleisli<scala.Option, java.lang.Object, java.lang.Object> predx();
    Code:
       0: aload_0
       1: invokestatic  #79                 // InterfaceMethod scalaz/Enum.predx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public <X> scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, X> succState(scala.Function1<java.lang.Object, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #87                 // InterfaceMethod scalaz/Enum.succState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y succStateZeroM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #97                 // InterfaceMethod scalaz/Enum.succStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y succStateZero(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #102                // InterfaceMethod scalaz/Enum.succStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> succStateMinM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #109                // InterfaceMethod scalaz/Enum.succStateMinM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> succStateMin(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #114                // InterfaceMethod scalaz/Enum.succStateMin$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X> scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, X> predState(scala.Function1<java.lang.Object, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #118                // InterfaceMethod scalaz/Enum.predState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y predStateZeroM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #122                // InterfaceMethod scalaz/Enum.predStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y predStateZero(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #126                // InterfaceMethod scalaz/Enum.predStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> predStateMaxM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #130                // InterfaceMethod scalaz/Enum.predStateMaxM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> predStateMax(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #134                // InterfaceMethod scalaz/Enum.predStateMax$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scalaz.EphemeralStream from(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #141                // InterfaceMethod scalaz/Enum.from$:(Lscalaz/Enum;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public scalaz.EphemeralStream fromStep(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #149                // InterfaceMethod scalaz/Enum.fromStep$:(Lscalaz/Enum;ILjava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.EphemeralStream fromTo(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #157                // InterfaceMethod scalaz/Enum.fromTo$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.IList fromToL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #163                // InterfaceMethod scalaz/Enum.fromToL$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       6: areturn

  public scalaz.EphemeralStream fromStepTo(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #169                // InterfaceMethod scalaz/Enum.fromStepTo$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       7: areturn

  public scalaz.IList fromStepToL(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #175                // InterfaceMethod scalaz/Enum.fromStepToL$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       7: areturn

  public scalaz.Enum<java.lang.Object>.EnumLaw enumLaw();
    Code:
       0: aload_0
       1: invokestatic  #182                // InterfaceMethod scalaz/Enum.enumLaw$:(Lscalaz/Enum;)Lscalaz/Enum$EnumLaw;
       4: areturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #190                // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #196                // InterfaceMethod scalaz/Order.equal$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #200                // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #204                // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #208                // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #212                // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #218                // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #222                // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #228                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #235                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<java.lang.Object> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #242                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<java.lang.Object> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #249                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<java.lang.Object>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #256                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public scalaz.Equal<java.lang.Object>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #263                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.ShowSyntax<java.lang.Object> showSyntax();
    Code:
       0: aload_0
       1: getfield      #267                // Field showSyntax:Lscalaz/syntax/ShowSyntax;
       4: areturn

  public void scalaz$Show$_setter_$showSyntax_$eq(scalaz.syntax.ShowSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #267                // Field showSyntax:Lscalaz/syntax/ShowSyntax;
       5: return

  public scalaz.syntax.EnumSyntax<java.lang.Object> enumSyntax();
    Code:
       0: aload_0
       1: getfield      #275                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       4: areturn

  public void scalaz$Enum$_setter_$enumSyntax_$eq(scalaz.syntax.EnumSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #275                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       5: return

  public scalaz.syntax.OrderSyntax<java.lang.Object> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #282                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #282                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<java.lang.Object> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #289                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #289                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Cord show(boolean);
    Code:
       0: getstatic     #300                // Field scalaz/Cord$.MODULE$:Lscalaz/Cord$;
       3: pop
       4: iload_1
       5: invokestatic  #306                // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       8: astore_2
       9: getstatic     #309                // Field scalaz/Cord$Leaf$.MODULE$:Lscalaz/Cord$Leaf$;
      12: aload_2
      13: invokevirtual #312                // Method scalaz/Cord$Leaf$.apply:(Ljava/lang/String;)Lscalaz/Cord$Leaf;
      16: areturn

  public java.lang.String shows(boolean);
    Code:
       0: iload_1
       1: invokestatic  #306                // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       4: areturn

  public scalaz.Ordering order(boolean, boolean);
    Code:
       0: new           #320                // class scala/runtime/RichBoolean
       3: dup
       4: getstatic     #325                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: iload_1
       8: invokevirtual #329                // Method scala/Predef$.booleanWrapper:(Z)Z
      11: invokespecial #333                // Method scala/runtime/RichBoolean."<init>":(Z)V
      14: iload_2
      15: invokestatic  #339                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      18: invokevirtual #343                // Method scala/runtime/RichBoolean.$less:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: getstatic     #346                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      27: areturn
      28: iload_1
      29: iload_2
      30: if_icmpne     37
      33: getstatic     #349                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      36: areturn
      37: getstatic     #352                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
      40: areturn

  public boolean succ(boolean);
    Code:
       0: iload_1
       1: ifne          6
       4: iconst_1
       5: ireturn
       6: iconst_0
       7: ireturn

  public boolean pred(boolean);
    Code:
       0: iload_1
       1: ifne          6
       4: iconst_1
       5: ireturn
       6: iconst_0
       7: ireturn

  public boolean succn(int, boolean);
    Code:
       0: iload_1
       1: iconst_2
       2: irem
       3: iconst_0
       4: if_icmpne     9
       7: iload_2
       8: ireturn
       9: iload_2
      10: ifne          15
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: ireturn

  public boolean predn(int, boolean);
    Code:
       0: iload_1
       1: iconst_2
       2: irem
       3: iconst_0
       4: if_icmpne     9
       7: iload_2
       8: ireturn
       9: iload_2
      10: ifne          15
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: ireturn

  public scala.Option<java.lang.Object> min();
    Code:
       0: new           #362                // class scala/Some
       3: dup
       4: iconst_0
       5: invokestatic  #339                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: invokespecial #365                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      11: areturn

  public scala.Option<java.lang.Object> max();
    Code:
       0: new           #362                // class scala/Some
       3: dup
       4: iconst_1
       5: invokestatic  #339                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: invokespecial #365                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      11: areturn

  public boolean equalIsNatural();
    Code:
       0: iconst_1
       1: ireturn

  public scalaz.Monoid<java.lang.Object> conjunction();
    Code:
       0: aload_0
       1: getfield      #371                // Field conjunction:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<java.lang.Object> disjunction();
    Code:
       0: aload_0
       1: getfield      #373                // Field disjunction:Lscalaz/Monoid;
       4: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #376                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public java.lang.Object predn(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #380                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       6: invokevirtual #382                // Method predn:(IZ)Z
       9: invokestatic  #339                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      12: areturn

  public java.lang.Object succn(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #380                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       6: invokevirtual #384                // Method succn:(IZ)Z
       9: invokestatic  #339                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      12: areturn

  public java.lang.Object pred(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #380                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokevirtual #387                // Method pred:(Z)Z
       8: invokestatic  #339                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      11: areturn

  public java.lang.Object succ(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #380                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokevirtual #389                // Method succ:(Z)Z
       8: invokestatic  #339                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      11: areturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #380                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: aload_2
       6: invokestatic  #380                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       9: invokevirtual #391                // Method order:(ZZ)Lscalaz/Ordering;
      12: areturn

  public java.lang.String shows(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #380                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokevirtual #394                // Method shows:(Z)Ljava/lang/String;
       8: areturn

  public scalaz.Cord show(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #380                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokevirtual #397                // Method show:(Z)Lscalaz/Cord;
       8: areturn

  public scalaz.std.AnyValInstances$booleanInstance$(scalaz.std.AnyValInstances);
    Code:
       0: aload_0
       1: invokespecial #402                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #406                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
       8: aload_0
       9: invokestatic  #409                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      12: aload_0
      13: invokestatic  #412                // InterfaceMethod scalaz/Enum.$init$:(Lscalaz/Enum;)V
      16: aload_0
      17: invokestatic  #415                // InterfaceMethod scalaz/Show.$init$:(Lscalaz/Show;)V
      20: aload_0
      21: getstatic     #420                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
      24: invokevirtual #424                // Method scalaz/Tags$.Conjunction:()Lscalaz/Tag$TagOf;
      27: aload_1
      28: invokeinterface #427,  1          // InterfaceMethod scalaz/std/AnyValInstances.booleanConjunctionNewTypeInstance:()Lscalaz/Monoid;
      33: astore_2
      34: ifnonnull     39
      37: aconst_null
      38: athrow
      39: getstatic     #432                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      42: invokevirtual #435                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      45: aload_2
      46: invokevirtual #440                // Method scalaz/TagKind.unsubst:(Ljava/lang/Object;)Ljava/lang/Object;
      49: aconst_null
      50: astore_2
      51: checkcast     #442                // class scalaz/Monoid
      54: putfield      #371                // Field conjunction:Lscalaz/Monoid;
      57: aload_0
      58: getstatic     #420                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
      61: invokevirtual #445                // Method scalaz/Tags$.Disjunction:()Lscalaz/Tag$TagOf;
      64: aload_1
      65: invokeinterface #448,  1          // InterfaceMethod scalaz/std/AnyValInstances.booleanDisjunctionNewTypeInstance:()Lscalaz/Monoid;
      70: astore_3
      71: ifnonnull     76
      74: aconst_null
      75: athrow
      76: getstatic     #432                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      79: invokevirtual #435                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      82: aload_3
      83: invokevirtual #440                // Method scalaz/TagKind.unsubst:(Ljava/lang/Object;)Ljava/lang/Object;
      86: aconst_null
      87: astore_3
      88: checkcast     #442                // class scalaz/Monoid
      91: putfield      #373                // Field disjunction:Lscalaz/Monoid;
      94: invokestatic  #453                // Method scala/runtime/Statics.releaseFence:()V
      97: return
}
