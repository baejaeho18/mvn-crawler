Compiled from "List.scala"
public final class scalaz.std.ListInstances$$anon$2 implements scalaz.Traverse<scala.collection.immutable.List>, scalaz.MonadPlus<scala.collection.immutable.List>, scalaz.Alt<scala.collection.immutable.List>, scalaz.std.IterableBindRec<scala.collection.immutable.List>, scalaz.Zip<scala.collection.immutable.List>, scalaz.Unzip<scala.collection.immutable.List>, scalaz.Align<scala.collection.immutable.List>, scalaz.IsEmpty<scala.collection.immutable.List>, scalaz.Cobind<scala.collection.immutable.List>, scalaz.std.IterableSubtypeFoldable<scala.collection.immutable.List>, scalaz.Functor$OverrideWiden<scala.collection.immutable.List> {
  private scalaz.syntax.CobindSyntax<scala.collection.immutable.List> cobindSyntax;

  private scalaz.syntax.IsEmptySyntax<scala.collection.immutable.List> isEmptySyntax;

  private scalaz.syntax.AlignSyntax<scala.collection.immutable.List> alignSyntax;

  private scalaz.syntax.UnzipSyntax<scala.collection.immutable.List> unzipSyntax;

  private scalaz.syntax.ZipSyntax<scala.collection.immutable.List> zipSyntax;

  private scalaz.syntax.BindRecSyntax<scala.collection.immutable.List> bindRecSyntax;

  private scalaz.syntax.AltSyntax<scala.collection.immutable.List> altSyntax;

  private scalaz.syntax.InvariantAltSyntax<scala.collection.immutable.List> invariantAltSyntax;

  private scalaz.syntax.MonadPlusSyntax<scala.collection.immutable.List> monadPlusSyntax;

  private scalaz.syntax.ApplicativePlusSyntax<scala.collection.immutable.List> applicativePlusSyntax;

  private scalaz.syntax.PlusEmptySyntax<scala.collection.immutable.List> plusEmptySyntax;

  private scalaz.syntax.PlusSyntax<scala.collection.immutable.List> plusSyntax;

  private scalaz.syntax.MonadSyntax<scala.collection.immutable.List> monadSyntax;

  private scalaz.syntax.BindSyntax<scala.collection.immutable.List> bindSyntax;

  private scalaz.syntax.ApplicativeSyntax<scala.collection.immutable.List> applicativeSyntax;

  private scalaz.syntax.InvariantApplicativeSyntax<scala.collection.immutable.List> invariantApplicativeSyntax;

  private scalaz.syntax.ApplySyntax<scala.collection.immutable.List> applySyntax;

  private scalaz.syntax.TraverseSyntax<scala.collection.immutable.List> traverseSyntax;

  private scalaz.syntax.FoldableSyntax<scala.collection.immutable.List> foldableSyntax;

  private scalaz.syntax.FunctorSyntax<scala.collection.immutable.List> functorSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<scala.collection.immutable.List> invariantFunctorSyntax;

  public final java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #211                // InterfaceMethod scalaz/Functor$OverrideWiden.widen$:(Lscalaz/Functor$OverrideWiden;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object foldLeft(scala.collection.Iterable, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #223                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.foldLeft$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public int length(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #232                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.length$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)I
       5: ireturn

  public final scala.collection.immutable.List toList(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #238                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toList$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/List;
       5: areturn

  public final scala.collection.immutable.Vector toVector(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #244                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toVector$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/Vector;
       5: areturn

  public final scala.collection.immutable.Set toSet(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #250                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toSet$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/Set;
       5: areturn

  public final scala.collection.immutable.LazyList toLazyList(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #256                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toLazyList$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/LazyList;
       5: areturn

  public final boolean empty(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #262                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.empty$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Z
       5: ireturn

  public final boolean any(scala.collection.Iterable, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #269                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.any$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;Lscala/Function1;)Z
       6: ireturn

  public final boolean all(scala.collection.Iterable, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #274                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.all$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;Lscala/Function1;)Z
       6: ireturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #280                // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.Cobind<scala.collection.immutable.List>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #287                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public scalaz.IsEmpty<scala.collection.immutable.List>.IsEmptyLaw isEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #294                // InterfaceMethod scalaz/IsEmpty.isEmptyLaw$:(Lscalaz/IsEmpty;)Lscalaz/IsEmpty$IsEmptyLaw;
       4: areturn

  public <G> scalaz.Align<?> product(scalaz.Align<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #302                // InterfaceMethod scalaz/Align.product$:(Lscalaz/Align;Lscalaz/Align;)Lscalaz/Align;
       5: areturn

  public java.lang.Object align(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #309                // InterfaceMethod scalaz/Align.align$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public <A, B, C> scala.Function2<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>> padWith(scala.Function2<scala.Option<A>, scala.Option<B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #316                // InterfaceMethod scalaz/Align.padWith$:(Lscalaz/Align;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B> scala.Function2<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<scala.Tuple2<scala.Option<A>, scala.Option<B>>>> pad();
    Code:
       0: aload_0
       1: invokestatic  #323                // InterfaceMethod scalaz/Align.pad$:(Lscalaz/Align;)Lscala/Function2;
       4: areturn

  public java.lang.Object merge(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #332                // InterfaceMethod scalaz/Align.merge$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object alignSwap(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #337                // InterfaceMethod scalaz/Align.alignSwap$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignA(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #341                // InterfaceMethod scalaz/Align.alignA$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignB(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #345                // InterfaceMethod scalaz/Align.alignB$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThis(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #349                // InterfaceMethod scalaz/Align.alignThis$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThat(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #353                // InterfaceMethod scalaz/Align.alignThat$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignBoth(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #357                // InterfaceMethod scalaz/Align.alignBoth$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scalaz.Align<scala.collection.immutable.List>.AlignLaw alignLaw();
    Code:
       0: aload_0
       1: invokestatic  #364                // InterfaceMethod scalaz/Align.alignLaw$:(Lscalaz/Align;)Lscalaz/Align$AlignLaw;
       4: areturn

  public java.lang.Object firsts(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #370                // InterfaceMethod scalaz/Unzip.firsts$:(Lscalaz/Unzip;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object seconds(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #374                // InterfaceMethod scalaz/Unzip.seconds$:(Lscalaz/Unzip;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Unzip<?> compose(scalaz.Functor<scala.collection.immutable.List>, scalaz.Unzip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #382                // InterfaceMethod scalaz/Unzip.compose$:(Lscalaz/Unzip;Lscalaz/Functor;Lscalaz/Unzip;)Lscalaz/Unzip;
       6: areturn

  public <G> scalaz.Unzip<?> product(scalaz.Unzip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #389                // InterfaceMethod scalaz/Unzip.product$:(Lscalaz/Unzip;Lscalaz/Unzip;)Lscalaz/Unzip;
       5: areturn

  public scala.Tuple3 unzip3(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #396                // InterfaceMethod scalaz/Unzip.unzip3$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple3;
       5: areturn

  public scala.Tuple4 unzip4(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #402                // InterfaceMethod scalaz/Unzip.unzip4$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple4;
       5: areturn

  public scala.Tuple5 unzip5(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #408                // InterfaceMethod scalaz/Unzip.unzip5$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple5;
       5: areturn

  public scala.Tuple6 unzip6(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #414                // InterfaceMethod scalaz/Unzip.unzip6$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple6;
       5: areturn

  public scala.Tuple7 unzip7(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #420                // InterfaceMethod scalaz/Unzip.unzip7$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple7;
       5: areturn

  public <G> scalaz.Zip<?> compose(scalaz.Functor<scala.collection.immutable.List>, scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #425                // InterfaceMethod scalaz/Zip.compose$:(Lscalaz/Zip;Lscalaz/Functor;Lscalaz/Zip;)Lscalaz/Zip;
       6: areturn

  public <G> scalaz.Zip<?> product(scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #431                // InterfaceMethod scalaz/Zip.product$:(Lscalaz/Zip;Lscalaz/Zip;)Lscalaz/Zip;
       5: areturn

  public java.lang.Object zipWith(scala.Function0, scala.Function0, scala.Function2, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #439                // InterfaceMethod scalaz/Zip.zipWith$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Functor;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apzip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #446                // InterfaceMethod scalaz/Zip.apzip$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apzipPL(scala.Function0, scala.Function0, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #453                // InterfaceMethod scalaz/Zip.apzipPL$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scalaz.Apply<scala.collection.immutable.List> ap(scalaz.Functor<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #461                // InterfaceMethod scalaz/Zip.ap$:(Lscalaz/Zip;Lscalaz/Functor;)Lscalaz/Apply;
       5: areturn

  public scalaz.Zip<scala.collection.immutable.List>.ZipLaw zipLaw();
    Code:
       0: aload_0
       1: invokestatic  #468                // InterfaceMethod scalaz/Zip.zipLaw$:(Lscalaz/Zip;)Lscalaz/Zip$ZipLaw;
       4: areturn

  public final scala.collection.immutable.Seq tailrecM(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #474                // InterfaceMethod scalaz/std/IterableBindRec.tailrecM$:(Lscalaz/std/IterableBindRec;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/Seq;
       6: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #479                // InterfaceMethod scalaz/BindRec.forever$:(Lscalaz/BindRec;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.BindRec<?> product(scalaz.BindRec<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #484                // InterfaceMethod scalaz/BindRec.product$:(Lscalaz/BindRec;Lscalaz/BindRec;)Lscalaz/BindRec;
       5: areturn

  public scalaz.BindRec<scala.collection.immutable.List>.BindRecLaw bindRecLaw();
    Code:
       0: aload_0
       1: invokestatic  #492                // InterfaceMethod scalaz/BindRec.bindRecLaw$:(Lscalaz/BindRec;)Lscalaz/BindRec$BindRecLaw;
       4: areturn

  public java.lang.Object optional(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #497                // InterfaceMethod scalaz/Alt.optional$:(Lscalaz/Alt;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object altly1(scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #503                // InterfaceMethod scalaz/Alt.altly1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object altly2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #509                // InterfaceMethod scalaz/Alt.altly2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object altly3(scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #516                // InterfaceMethod scalaz/Alt.altly3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object altly4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #523                // InterfaceMethod scalaz/Alt.altly4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object either2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #528                // InterfaceMethod scalaz/Alt.either2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #534                // InterfaceMethod scalaz/Alt.altlying1$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #540                // InterfaceMethod scalaz/Alt.altlying2$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object altlying3(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #546                // InterfaceMethod scalaz/Alt.altlying3$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object altlying4(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #552                // InterfaceMethod scalaz/Alt.altlying4$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #559                // InterfaceMethod scalaz/Alt.xcoproduct1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xcoproduct2(scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #565                // InterfaceMethod scalaz/Alt.xcoproduct2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xcoproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #571                // InterfaceMethod scalaz/Alt.xcoproduct3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #577                // InterfaceMethod scalaz/Alt.xcoproduct4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public scalaz.Alt<scala.collection.immutable.List>.AltLaw altLaw();
    Code:
       0: aload_0
       1: invokestatic  #584                // InterfaceMethod scalaz/Alt.altLaw$:(Lscalaz/Alt;)Lscalaz/Alt$AltLaw;
       4: areturn

  public final java.lang.Object xcoderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #592                // InterfaceMethod scalaz/InvariantAlt.xcoderiving1$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xcoderiving2(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #598                // InterfaceMethod scalaz/InvariantAlt.xcoderiving2$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xcoderiving3(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #604                // InterfaceMethod scalaz/InvariantAlt.xcoderiving3$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xcoderiving4(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #610                // InterfaceMethod scalaz/InvariantAlt.xcoderiving4$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object filter(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #615                // InterfaceMethod scalaz/MonadPlus.filter$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unite(java.lang.Object, scalaz.Foldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #623                // InterfaceMethod scalaz/MonadPlus.unite$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Foldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object lefts(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #631                // InterfaceMethod scalaz/MonadPlus.lefts$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object rights(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #636                // InterfaceMethod scalaz/MonadPlus.rights$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 separate(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #642                // InterfaceMethod scalaz/MonadPlus.separate$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Lscala/Tuple2;
       6: areturn

  public final java.lang.Object uniteU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #648                // InterfaceMethod scalaz/MonadPlus.uniteU$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.MonadPlus<?> product(scalaz.MonadPlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #654                // InterfaceMethod scalaz/MonadPlus.product$:(Lscalaz/MonadPlus;Lscalaz/MonadPlus;)Lscalaz/MonadPlus;
       5: areturn

  public scalaz.MonadPlus<scala.collection.immutable.List>.MonadPlusLaw monadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #662                // InterfaceMethod scalaz/MonadPlus.monadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$MonadPlusLaw;
       4: areturn

  public scalaz.MonadPlus<scala.collection.immutable.List>.StrongMonadPlusLaw strongMonadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #669                // InterfaceMethod scalaz/MonadPlus.strongMonadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$StrongMonadPlusLaw;
       4: areturn

  public <G> scalaz.ApplicativePlus<?> compose(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #676                // InterfaceMethod scalaz/ApplicativePlus.compose$:(Lscalaz/ApplicativePlus;Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public <G> scalaz.ApplicativePlus<?> product(scalaz.ApplicativePlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #682                // InterfaceMethod scalaz/ApplicativePlus.product$:(Lscalaz/ApplicativePlus;Lscalaz/ApplicativePlus;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #689                // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #693                // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #698                // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #702                // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<scala.collection.immutable.List<A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #710                // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<scala.collection.immutable.List>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #717                // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S$, A> scalaz.Maybe<scala.collection.immutable.List<A>> unfoldlPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<S$, scala.collection.immutable.List<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #724                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S$, A> scalaz.Maybe<scala.collection.immutable.List<A>> unfoldrPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scala.collection.immutable.List<A>, S$>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #729                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #734                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scala.collection.immutable.List<A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #742                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<scala.collection.immutable.List>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #749                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #754                // InterfaceMethod scalaz/Monad.map$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whileM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #761                // InterfaceMethod scalaz/Monad.whileM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object whileM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #767                // InterfaceMethod scalaz/Monad.whileM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object untilM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #772                // InterfaceMethod scalaz/Monad.untilM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object untilM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #776                // InterfaceMethod scalaz/Monad.untilM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateWhile(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #780                // InterfaceMethod scalaz/Monad.iterateWhile$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateUntil(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #784                // InterfaceMethod scalaz/Monad.iterateUntil$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Monad<?> product(scalaz.Monad<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #789                // InterfaceMethod scalaz/Monad.product$:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public scalaz.Monad<scala.collection.immutable.List>.MonadLaw monadLaw();
    Code:
       0: aload_0
       1: invokestatic  #797                // InterfaceMethod scalaz/Monad.monadLaw$:(Lscalaz/Monad;)Lscalaz/Monad$MonadLaw;
       4: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #800                // InterfaceMethod scalaz/Bind.ap$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #806                // InterfaceMethod scalaz/Bind.apply2$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #812                // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #820                // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #825                // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Bind<?> product(scalaz.Bind<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #830                // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<scala.collection.immutable.List>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #838                // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #844                // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #850                // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #859                // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #866                // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #871                // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #876                // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #882                // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #888                // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #895                // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #903                // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #908                // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.$eq$eq$greater$greater, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #915                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #922                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #927                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #934                // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #939                // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Applicative<?> product(scalaz.Applicative<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #943                // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scala.collection.immutable.List> flip();
    Code:
       0: aload_0
       1: invokestatic  #948                // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #956                // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scala.collection.immutable.List>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #963                // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #970                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #975                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #981                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #987                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #993                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #999                // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1006               // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public <S$, A, B> scalaz.Maybe<scala.collection.immutable.List<B>> unfoldrOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scala.collection.immutable.List<A>, S$>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1014               // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G$> scalaz.Apply<?> compose(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1020               // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G$> scalaz.Apply<?> product(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1023               // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>> apF(scala.Function0<scala.collection.immutable.List<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1030               // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1036               // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1043               // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1050               // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1057               // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1064               // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1071               // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1078               // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1084               // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1090               // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1096               // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1103               // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1110               // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1117               // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #1125               // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #1133               // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #1141               // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #1149               // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1155               // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1161               // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1167               // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1173               // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1178               // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1184               // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1190               // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1196               // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1202               // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1209               // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1216               // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R$> scala.Function5<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>, scala.collection.immutable.List<R$>> lift5(scala.Function5<A, B, C, D, E, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1223               // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R$> scala.Function6<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>, scala.collection.immutable.List<FF>, scala.collection.immutable.List<R$>> lift6(scala.Function6<A, B, C, D, E, FF, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1230               // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G$, R$> scala.Function7<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>, scala.collection.immutable.List<FF>, scala.collection.immutable.List<G$>, scala.collection.immutable.List<R$>> lift7(scala.Function7<A, B, C, D, E, FF, G$, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1237               // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, R$> scala.Function8<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>, scala.collection.immutable.List<FF>, scala.collection.immutable.List<G$>, scala.collection.immutable.List<H>, scala.collection.immutable.List<R$>> lift8(scala.Function8<A, B, C, D, E, FF, G$, H, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1244               // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, R$> scala.Function9<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>, scala.collection.immutable.List<FF>, scala.collection.immutable.List<G$>, scala.collection.immutable.List<H>, scala.collection.immutable.List<I>, scala.collection.immutable.List<R$>> lift9(scala.Function9<A, B, C, D, E, FF, G$, H, I, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1251               // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, R$> scala.Function10<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>, scala.collection.immutable.List<FF>, scala.collection.immutable.List<G$>, scala.collection.immutable.List<H>, scala.collection.immutable.List<I>, scala.collection.immutable.List<J>, scala.collection.immutable.List<R$>> lift10(scala.Function10<A, B, C, D, E, FF, G$, H, I, J, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1258               // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, R$> scala.Function11<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>, scala.collection.immutable.List<FF>, scala.collection.immutable.List<G$>, scala.collection.immutable.List<H>, scala.collection.immutable.List<I>, scala.collection.immutable.List<J>, scala.collection.immutable.List<K>, scala.collection.immutable.List<R$>> lift11(scala.Function11<A, B, C, D, E, FF, G$, H, I, J, K, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1265               // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, L, R$> scala.Function12<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>, scala.collection.immutable.List<FF>, scala.collection.immutable.List<G$>, scala.collection.immutable.List<H>, scala.collection.immutable.List<I>, scala.collection.immutable.List<J>, scala.collection.immutable.List<K>, scala.collection.immutable.List<L>, scala.collection.immutable.List<R$>> lift12(scala.Function12<A, B, C, D, E, FF, G$, H, I, J, K, L, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1272               // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1276               // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1280               // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #1285               // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1293               // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scala.collection.immutable.List>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #1300               // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1305               // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1313               // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1316               // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1323               // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<scala.collection.immutable.List>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1331               // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<scala.collection.immutable.List>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #1338               // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1343               // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1349               // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1355               // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1361               // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1368               // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1375               // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1382               // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1388               // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1394               // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1400               // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1407               // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1413               // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1418               // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1420               // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1426               // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1430               // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1434               // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1439               // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1443               // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1447               // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1451               // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<scala.collection.immutable.List>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #1458               // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1464               // InterfaceMethod scalaz/Foldable.foldMap1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1469               // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1474               // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1476               // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1481               // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1488               // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1494               // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1501               // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1508               // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1514               // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1519               // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1524               // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1529               // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1534               // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1539               // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1545               // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1551               // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1557               // InterfaceMethod scalaz/Foldable.foldMapRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1563               // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1569               // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1575               // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1579               // InterfaceMethod scalaz/Foldable.foldMapLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1583               // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1587               // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1593               // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1597               // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1603               // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1609               // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1616               // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #1623               // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1629               // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1635               // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1641               // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1645               // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1649               // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1655               // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1661               // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1667               // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1671               // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1676               // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1681               // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1686               // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1691               // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1696               // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1701               // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1706               // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1710               // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1714               // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1718               // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1724               // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1730               // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1734               // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1741               // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/$less$colon$less;)J
       6: lreturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1749               // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1756               // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1762               // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1769               // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1775               // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1779               // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1785               // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1791               // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1796               // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1802               // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scala.collection.immutable.List>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #1809               // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1815               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1820               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1827               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1832               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1836               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1840               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1845               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1849               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1853               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1859               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G$> scalaz.Functor<?> compose(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1865               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G$> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1872               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G$> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1878               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G$> scalaz.Functor<?> product(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1881               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public scalaz.Functor<scala.collection.immutable.List>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1888               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1895               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1903               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scala.collection.immutable.List>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1911               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.CobindSyntax<scala.collection.immutable.List> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #1915               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1915               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.IsEmptySyntax<scala.collection.immutable.List> isEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1923               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       4: areturn

  public void scalaz$IsEmpty$_setter_$isEmptySyntax_$eq(scalaz.syntax.IsEmptySyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1923               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       5: return

  public scalaz.syntax.AlignSyntax<scala.collection.immutable.List> alignSyntax();
    Code:
       0: aload_0
       1: getfield      #1930               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       4: areturn

  public void scalaz$Align$_setter_$alignSyntax_$eq(scalaz.syntax.AlignSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1930               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       5: return

  public scalaz.syntax.UnzipSyntax<scala.collection.immutable.List> unzipSyntax();
    Code:
       0: aload_0
       1: getfield      #1937               // Field unzipSyntax:Lscalaz/syntax/UnzipSyntax;
       4: areturn

  public void scalaz$Unzip$_setter_$unzipSyntax_$eq(scalaz.syntax.UnzipSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1937               // Field unzipSyntax:Lscalaz/syntax/UnzipSyntax;
       5: return

  public scalaz.syntax.ZipSyntax<scala.collection.immutable.List> zipSyntax();
    Code:
       0: aload_0
       1: getfield      #1944               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       4: areturn

  public void scalaz$Zip$_setter_$zipSyntax_$eq(scalaz.syntax.ZipSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1944               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       5: return

  public scalaz.syntax.BindRecSyntax<scala.collection.immutable.List> bindRecSyntax();
    Code:
       0: aload_0
       1: getfield      #1951               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       4: areturn

  public void scalaz$BindRec$_setter_$bindRecSyntax_$eq(scalaz.syntax.BindRecSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1951               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       5: return

  public scalaz.syntax.AltSyntax<scala.collection.immutable.List> altSyntax();
    Code:
       0: aload_0
       1: getfield      #1958               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       4: areturn

  public void scalaz$Alt$_setter_$altSyntax_$eq(scalaz.syntax.AltSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1958               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       5: return

  public scalaz.syntax.InvariantAltSyntax<scala.collection.immutable.List> invariantAltSyntax();
    Code:
       0: aload_0
       1: getfield      #1965               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       4: areturn

  public void scalaz$InvariantAlt$_setter_$invariantAltSyntax_$eq(scalaz.syntax.InvariantAltSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1965               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       5: return

  public scalaz.syntax.MonadPlusSyntax<scala.collection.immutable.List> monadPlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1972               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       4: areturn

  public void scalaz$MonadPlus$_setter_$monadPlusSyntax_$eq(scalaz.syntax.MonadPlusSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1972               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       5: return

  public scalaz.syntax.ApplicativePlusSyntax<scala.collection.immutable.List> applicativePlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1979               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       4: areturn

  public void scalaz$ApplicativePlus$_setter_$applicativePlusSyntax_$eq(scalaz.syntax.ApplicativePlusSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1979               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       5: return

  public scalaz.syntax.PlusEmptySyntax<scala.collection.immutable.List> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1986               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1986               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<scala.collection.immutable.List> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #1993               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1993               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.syntax.MonadSyntax<scala.collection.immutable.List> monadSyntax();
    Code:
       0: aload_0
       1: getfield      #2000               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       4: areturn

  public void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2000               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       5: return

  public scalaz.syntax.BindSyntax<scala.collection.immutable.List> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #2007               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2007               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scala.collection.immutable.List> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #2014               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2014               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scala.collection.immutable.List> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #2021               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2021               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scala.collection.immutable.List> applySyntax();
    Code:
       0: aload_0
       1: getfield      #2028               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2028               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.TraverseSyntax<scala.collection.immutable.List> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #2035               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2035               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scala.collection.immutable.List> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #2042               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2042               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scala.collection.immutable.List> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #2049               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2049               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scala.collection.immutable.List> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #2056               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2056               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A> scala.collection.immutable.List<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #2068               // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #2072               // Method scala/package$.List:()Lscala/collection/immutable/List$;
       6: getstatic     #2077               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       9: iconst_1
      10: anewarray     #5                  // class java/lang/Object
      13: dup
      14: iconst_0
      15: aload_1
      16: invokeinterface #2082,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      21: aastore
      22: invokevirtual #2086               // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      25: invokevirtual #2091               // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
      28: checkcast     #2093               // class scala/collection/immutable/List
      31: areturn

  public <A, B> scala.collection.immutable.List<B> bind(scala.collection.immutable.List<A>, scala.Function1<A, scala.collection.immutable.List<B>>);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #2100               // Method scala/collection/immutable/List.flatMap:(Lscala/Function1;)Lscala/collection/immutable/List;
       5: areturn

  public <A> scala.collection.mutable.Builder<A, scala.collection.immutable.List<A>> createNewBuilder();
    Code:
       0: getstatic     #2068               // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #2072               // Method scala/package$.List:()Lscala/collection/immutable/List$;
       6: invokevirtual #2106               // Method scala/collection/immutable/List$.newBuilder:()Lscala/collection/mutable/Builder;
       9: areturn

  public <A> boolean isEmpty(scala.collection.immutable.List<A>);
    Code:
       0: aload_1
       1: invokevirtual #2112               // Method scala/collection/immutable/List.isEmpty:()Z
       4: ireturn

  public <A> scala.collection.immutable.List<A> plus(scala.collection.immutable.List<A>, scala.Function0<scala.collection.immutable.List<A>>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #2082,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: checkcast     #2117               // class scala/collection/IterableOnce
      10: invokevirtual #2121               // Method scala/collection/immutable/List.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
      13: checkcast     #2093               // class scala/collection/immutable/List
      16: areturn

  public <A> scala.collection.immutable.List<A> alt(scala.Function0<scala.collection.immutable.List<A>>, scala.Function0<scala.collection.immutable.List<A>>);
    Code:
       0: aload_1
       1: invokeinterface #2082,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2093               // class scala/collection/immutable/List
       9: aload_2
      10: invokeinterface #2082,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      15: checkcast     #2117               // class scala/collection/IterableOnce
      18: invokevirtual #2121               // Method scala/collection/immutable/List.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
      21: checkcast     #2093               // class scala/collection/immutable/List
      24: areturn

  public <A> scala.collection.immutable.List<A> empty();
    Code:
       0: getstatic     #2131               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: areturn

  public <A, B> scala.Tuple2<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>> unzip(scala.collection.immutable.List<scala.Tuple2<A, B>>);
    Code:
       0: aload_1
       1: getstatic     #2139               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       4: invokevirtual #2143               // Method scala/Predef$.$conforms:()Lscala/Function1;
       7: invokevirtual #2146               // Method scala/collection/immutable/List.unzip:(Lscala/Function1;)Lscala/Tuple2;
      10: areturn

  public <A, B> scala.collection.immutable.List<scala.Tuple2<A, B>> zip(scala.Function0<scala.collection.immutable.List<A>>, scala.Function0<scala.collection.immutable.List<B>>);
    Code:
       0: aload_1
       1: invokeinterface #2082,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2093               // class scala/collection/immutable/List
       9: astore_3
      10: aload_3
      11: invokevirtual #2112               // Method scala/collection/immutable/List.isEmpty:()Z
      14: ifeq          21
      17: getstatic     #2131               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      20: areturn
      21: aload_3
      22: aload_2
      23: invokeinterface #2082,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      28: checkcast     #2117               // class scala/collection/IterableOnce
      31: invokevirtual #2150               // Method scala/collection/immutable/List.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
      34: checkcast     #2093               // class scala/collection/immutable/List
      37: areturn

  public <A> scala.Option<A> findLeft(scala.collection.immutable.List<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #2158               // Method scala/collection/immutable/List.find:(Lscala/Function1;)Lscala/Option;
       5: areturn

  public <A> scala.Option<A> findRight(scala.collection.immutable.List<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: getstatic     #2164               // Field scala/None$.MODULE$:Lscala/None$;
       4: astore        4
       6: astore_3
       7: aload_3
       8: instanceof    #2166               // class scala/collection/immutable/$colon$colon
      11: ifeq          66
      14: aload_3
      15: checkcast     #2166               // class scala/collection/immutable/$colon$colon
      18: astore        5
      20: aload         5
      22: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      25: astore        6
      27: aload         5
      29: invokevirtual #2172               // Method scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
      32: aload_2
      33: aload         6
      35: invokeinterface #2176,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: invokestatic  #2182               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      43: ifeq          58
      46: new           #2184               // class scala/Some
      49: dup
      50: aload         6
      52: invokespecial #2188               // Method scala/Some."<init>":(Ljava/lang/Object;)V
      55: goto          60
      58: aload         4
      60: astore        4
      62: astore_3
      63: goto          7
      66: getstatic     #2131               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      69: aload_3
      70: invokevirtual #2191               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      73: ifeq          79
      76: aload         4
      78: areturn
      79: new           #2193               // class scala/MatchError
      82: dup
      83: aload_3
      84: invokespecial #2194               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      87: athrow

  public <A, B, C> scala.Function2<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>> alignWith(scala.Function1<scalaz.$bslash$amp$div<A, B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #2223,  0           // InvokeDynamic #0:apply:(Lscalaz/std/ListInstances$$anon$2;Lscala/Function1;)Lscala/Function2;
       7: areturn

  public <F, A, B> F traverseImpl(scala.collection.immutable.List<A>, scala.Function1<A, F>, scalaz.Applicative<F>);
    Code:
       0: aload_3
       1: aload_1
       2: aload_2
       3: invokedynamic #2236,  0           // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
       8: getstatic     #2241               // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
      11: invokevirtual #2245               // Method scalaz/Reducer$.ReverseListReducer:()Lscalaz/Reducer;
      14: invokeinterface #2247,  4         // InterfaceMethod scalaz/Applicative.unfoldrOpt:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
      19: astore        4
      21: aload         4
      23: ifnonnull     28
      26: aconst_null
      27: athrow
      28: aload         4
      30: instanceof    #109                // class scalaz/Maybe$Just
      33: ifeq          57
      36: aload         4
      38: checkcast     #109                // class scalaz/Maybe$Just
      41: invokevirtual #2250               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      44: astore        6
      46: getstatic     #2139               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      49: aload         6
      51: invokevirtual #2253               // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
      54: goto          82
      57: aload         4
      59: instanceof    #101                // class scalaz/Maybe$Empty
      62: ifeq          72
      65: aload_3
      66: invokestatic  #2257               // Method $anonfun$traverseImpl$2:(Lscalaz/Applicative;)Ljava/lang/Object;
      69: goto          82
      72: new           #2193               // class scala/MatchError
      75: dup
      76: aload         4
      78: invokespecial #2194               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      81: athrow
      82: aconst_null
      83: astore        6
      85: astore        5
      87: aload_3
      88: aload         5
      90: invokedynamic #2265,  0           // InvokeDynamic #2:apply:()Lscala/Function1;
      95: invokeinterface #2267,  3         // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     100: areturn

  public <A, B> B foldRight(scala.collection.immutable.List<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: new           #2276               // class scala/collection/mutable/Stack
       3: dup
       4: getstatic     #2281               // Field scala/collection/mutable/Stack$.MODULE$:Lscala/collection/mutable/Stack$;
       7: invokevirtual #2285               // Method scala/collection/mutable/Stack$.$lessinit$greater$default$1:()I
      10: invokespecial #2288               // Method scala/collection/mutable/Stack."<init>":(I)V
      13: astore        4
      15: aload_1
      16: aload         4
      18: invokedynamic #2298,  0           // InvokeDynamic #3:apply:(Lscala/collection/mutable/Stack;)Lscala/Function1;
      23: invokevirtual #2302               // Method scala/collection/immutable/List.foreach:(Lscala/Function1;)V
      26: aload_2
      27: invokeinterface #2082,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      32: astore        5
      34: aload         4
      36: invokevirtual #2303               // Method scala/collection/mutable/Stack.isEmpty:()Z
      39: ifne          65
      42: aload_3
      43: aload         4
      45: invokevirtual #2306               // Method scala/collection/mutable/Stack.pop:()Ljava/lang/Object;
      48: aload         5
      50: invokedynamic #2314,  0           // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
      55: invokeinterface #2318,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: astore        5
      62: goto          34
      65: aload         5
      67: areturn

  public <A, B> B foldMap(scala.collection.immutable.List<A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_3
       1: aload_1
       2: aload_2
       3: invokedynamic #2327,  0           // InvokeDynamic #5:apply:(Lscala/Function1;)Lscala/Function1;
       8: invokeinterface #2332,  3         // InterfaceMethod scalaz/Monoid.unfoldrSum:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public <A, B> scala.collection.immutable.List<B> cobind(scala.collection.immutable.List<A>, scala.Function1<scala.collection.immutable.List<A>, B>);
    Code:
       0: getstatic     #2131               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: aload_1
       4: invokevirtual #2191               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          14
      10: getstatic     #2131               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      13: areturn
      14: aload_1
      15: instanceof    #2166               // class scala/collection/immutable/$colon$colon
      18: ifeq          50
      21: aload_1
      22: checkcast     #2166               // class scala/collection/immutable/$colon$colon
      25: invokevirtual #2172               // Method scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
      28: astore_3
      29: aload_2
      30: aload_1
      31: invokeinterface #2176,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: astore        4
      38: aload_0
      39: aload_3
      40: aload_2
      41: invokevirtual #2336               // Method cobind:(Lscala/collection/immutable/List;Lscala/Function1;)Lscala/collection/immutable/List;
      44: aload         4
      46: invokevirtual #2340               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      49: areturn
      50: new           #2193               // class scala/MatchError
      53: dup
      54: aload_1
      55: invokespecial #2194               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      58: athrow

  public <A> scala.collection.immutable.List<scala.collection.immutable.List<A>> cojoin(scala.collection.immutable.List<A>);
    Code:
       0: getstatic     #2131               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: aload_1
       4: invokevirtual #2191               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          14
      10: getstatic     #2131               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      13: areturn
      14: aload_1
      15: instanceof    #2166               // class scala/collection/immutable/$colon$colon
      18: ifeq          39
      21: aload_1
      22: checkcast     #2166               // class scala/collection/immutable/$colon$colon
      25: invokevirtual #2172               // Method scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
      28: astore_2
      29: aload_0
      30: aload_2
      31: invokevirtual #2344               // Method cojoin:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      34: aload_1
      35: invokevirtual #2340               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      38: areturn
      39: new           #2193               // class scala/MatchError
      42: dup
      43: aload_1
      44: invokespecial #2194               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      47: athrow

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #2347               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #2350               // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.Applicative compose(scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2352               // Method compose:(Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object tailrecM(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2354               // Method tailrecM:(Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/Seq;
       6: areturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2357               // class scala/collection/Iterable
       5: aload_2
       6: invokevirtual #2359               // Method all:(Lscala/collection/Iterable;Lscala/Function1;)Z
       9: ireturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2357               // class scala/collection/Iterable
       5: aload_2
       6: invokevirtual #2361               // Method any:(Lscala/collection/Iterable;Lscala/Function1;)Z
       9: ireturn

  public boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2357               // class scala/collection/Iterable
       5: invokevirtual #2363               // Method empty:(Lscala/collection/Iterable;)Z
       8: ireturn

  public scala.collection.immutable.LazyList toLazyList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2357               // class scala/collection/Iterable
       5: invokevirtual #2366               // Method toLazyList:(Lscala/collection/Iterable;)Lscala/collection/immutable/LazyList;
       8: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2357               // class scala/collection/Iterable
       5: invokevirtual #2369               // Method toSet:(Lscala/collection/Iterable;)Lscala/collection/immutable/Set;
       8: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2357               // class scala/collection/Iterable
       5: invokevirtual #2372               // Method toVector:(Lscala/collection/Iterable;)Lscala/collection/immutable/Vector;
       8: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2357               // class scala/collection/Iterable
       5: invokevirtual #2374               // Method toList:(Lscala/collection/Iterable;)Lscala/collection/immutable/List;
       8: areturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2357               // class scala/collection/Iterable
       5: invokevirtual #2376               // Method length:(Lscala/collection/Iterable;)I
       8: ireturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2357               // class scala/collection/Iterable
       5: aload_2
       6: aload_3
       7: invokevirtual #2378               // Method foldLeft:(Lscala/collection/Iterable;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scala/collection/immutable/List
       5: invokevirtual #2344               // Method cojoin:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       8: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scala/collection/immutable/List
       5: aload_2
       6: invokevirtual #2336               // Method cobind:(Lscala/collection/immutable/List;Lscala/Function1;)Lscala/collection/immutable/List;
       9: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scala/collection/immutable/List
       5: aload_2
       6: aload_3
       7: invokevirtual #2381               // Method foldMap:(Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldMap(scala.collection.Iterable, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scala/collection/immutable/List
       5: aload_2
       6: aload_3
       7: invokevirtual #2381               // Method foldMap:(Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scala/collection/immutable/List
       5: aload_2
       6: aload_3
       7: invokevirtual #2385               // Method foldRight:(Lscala/collection/immutable/List;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldRight(scala.collection.Iterable, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scala/collection/immutable/List
       5: aload_2
       6: aload_3
       7: invokevirtual #2385               // Method foldRight:(Lscala/collection/immutable/List;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scala/collection/immutable/List
       5: aload_2
       6: aload_3
       7: invokevirtual #2388               // Method traverseImpl:(Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      10: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scala/collection/immutable/List
       5: aload_2
       6: invokevirtual #2390               // Method findRight:(Lscala/collection/immutable/List;Lscala/Function1;)Lscala/Option;
       9: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scala/collection/immutable/List
       5: aload_2
       6: invokevirtual #2392               // Method findLeft:(Lscala/collection/immutable/List;Lscala/Function1;)Lscala/Option;
       9: areturn

  public java.lang.Object zip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2394               // Method zip:(Lscala/Function0;Lscala/Function0;)Lscala/collection/immutable/List;
       6: areturn

  public scala.Tuple2 unzip(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scala/collection/immutable/List
       5: invokevirtual #2397               // Method unzip:(Lscala/collection/immutable/List;)Lscala/Tuple2;
       8: areturn

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #2399               // Method empty:()Lscala/collection/immutable/List;
       4: areturn

  public java.lang.Object alt(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2401               // Method alt:(Lscala/Function0;Lscala/Function0;)Lscala/collection/immutable/List;
       6: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scala/collection/immutable/List
       5: aload_2
       6: invokevirtual #2403               // Method plus:(Lscala/collection/immutable/List;Lscala/Function0;)Lscala/collection/immutable/List;
       9: areturn

  public boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scala/collection/immutable/List
       5: invokevirtual #2405               // Method isEmpty:(Lscala/collection/immutable/List;)Z
       8: ireturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scala/collection/immutable/List
       5: aload_2
       6: invokevirtual #2407               // Method bind:(Lscala/collection/immutable/List;Lscala/Function1;)Lscala/collection/immutable/List;
       9: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2409               // Method point:(Lscala/Function0;)Lscala/collection/immutable/List;
       5: areturn

  private final scala.Option loop$1(scala.collection.immutable.List, scala.Option, scala.Function1);
    Code:
       0: aload_1
       1: instanceof    #2166               // class scala/collection/immutable/$colon$colon
       4: ifeq          57
       7: aload_1
       8: checkcast     #2166               // class scala/collection/immutable/$colon$colon
      11: astore        4
      13: aload         4
      15: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      18: astore        5
      20: aload         4
      22: invokevirtual #2172               // Method scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
      25: aload_3
      26: aload         5
      28: invokeinterface #2176,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      33: invokestatic  #2182               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      36: ifeq          51
      39: new           #2184               // class scala/Some
      42: dup
      43: aload         5
      45: invokespecial #2188               // Method scala/Some."<init>":(Ljava/lang/Object;)V
      48: goto          52
      51: aload_2
      52: astore_2
      53: astore_1
      54: goto          0
      57: getstatic     #2131               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      60: aload_1
      61: invokevirtual #2191               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      64: ifeq          69
      67: aload_2
      68: areturn
      69: new           #2193               // class scala/MatchError
      72: dup
      73: aload_1
      74: invokespecial #2194               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      77: athrow

  public static final java.lang.Object $anonfun$alignWith$1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: new           #42                 // class scalaz/$bslash$amp$div$That
       4: dup
       5: aload_1
       6: invokespecial #2416               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
       9: invokeinterface #2176,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public static final java.lang.Object $anonfun$alignWith$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: new           #45                 // class scalaz/$bslash$amp$div$This
       4: dup
       5: aload_1
       6: invokespecial #2418               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
       9: invokeinterface #2176,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  private final scala.collection.immutable.List loop$2(scala.collection.immutable.List, scala.collection.immutable.List, scala.collection.immutable.List, scala.Function1);
    Code:
       0: new           #2425               // class scala/Tuple2
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #2428               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: astore        5
      11: getstatic     #2131               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      14: aload_1
      15: invokevirtual #2191               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      18: ifeq          37
      21: aload_2
      22: aload         4
      24: invokedynamic #2432,  0           // InvokeDynamic #6:apply:(Lscala/Function1;)Lscala/Function1;
      29: invokevirtual #2434               // Method scala/collection/immutable/List.map:(Lscala/Function1;)Lscala/collection/immutable/List;
      32: aload_3
      33: invokevirtual #2437               // Method scala/collection/immutable/List.reverse_$colon$colon$colon:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      36: areturn
      37: getstatic     #2131               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      40: aload_2
      41: invokevirtual #2191               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      44: ifeq          63
      47: aload_1
      48: aload         4
      50: invokedynamic #2441,  0           // InvokeDynamic #7:apply:(Lscala/Function1;)Lscala/Function1;
      55: invokevirtual #2434               // Method scala/collection/immutable/List.map:(Lscala/Function1;)Lscala/collection/immutable/List;
      58: aload_3
      59: invokevirtual #2437               // Method scala/collection/immutable/List.reverse_$colon$colon$colon:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      62: areturn
      63: aload_1
      64: instanceof    #2166               // class scala/collection/immutable/$colon$colon
      67: ifeq          153
      70: aload_1
      71: checkcast     #2166               // class scala/collection/immutable/$colon$colon
      74: astore        6
      76: aload         6
      78: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      81: astore        7
      83: aload         6
      85: invokevirtual #2172               // Method scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
      88: astore        8
      90: aload_2
      91: instanceof    #2166               // class scala/collection/immutable/$colon$colon
      94: ifeq          153
      97: aload_2
      98: checkcast     #2166               // class scala/collection/immutable/$colon$colon
     101: astore        9
     103: aload         9
     105: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
     108: astore        10
     110: aload         9
     112: invokevirtual #2172               // Method scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
     115: astore        11
     117: aload         8
     119: aload         11
     121: aload         4
     123: new           #37                 // class scalaz/$bslash$amp$div$Both
     126: dup
     127: aload         7
     129: aload         10
     131: invokespecial #2442               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     134: invokeinterface #2176,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     139: astore        12
     141: aload_3
     142: aload         12
     144: invokevirtual #2340               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
     147: astore_3
     148: astore_2
     149: astore_1
     150: goto          0
     153: new           #2193               // class scala/MatchError
     156: dup
     157: aload         5
     159: invokespecial #2194               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     162: athrow

  public static final scala.collection.immutable.List $anonfun$alignWith$3(scalaz.std.ListInstances$$anon$2, scala.Function1, scala.collection.immutable.List, scala.collection.immutable.List);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: getstatic     #2131               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       6: aload_1
       7: invokespecial #2449               // Method loop$2:(Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/Function1;)Lscala/collection/immutable/List;
      10: areturn

  public static final scalaz.Maybe $anonfun$traverseImpl$1(scala.Function1, scala.collection.immutable.List);
    Code:
       0: aload_1
       1: instanceof    #2166               // class scala/collection/immutable/$colon$colon
       4: ifeq          55
       7: aload_1
       8: checkcast     #2166               // class scala/collection/immutable/$colon$colon
      11: astore_2
      12: aload_2
      13: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      16: astore_3
      17: aload_2
      18: invokevirtual #2172               // Method scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
      21: astore        4
      23: getstatic     #2456               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      26: pop
      27: new           #2425               // class scala/Tuple2
      30: dup
      31: aload_0
      32: aload_3
      33: invokeinterface #2176,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      38: aload         4
      40: invokespecial #2428               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      43: astore        5
      45: new           #109                // class scalaz/Maybe$Just
      48: dup
      49: aload         5
      51: invokespecial #2457               // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      54: areturn
      55: getstatic     #2131               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      58: aload_1
      59: invokevirtual #2191               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      62: ifeq          76
      65: getstatic     #2456               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      68: pop
      69: getstatic     #2460               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      72: invokevirtual #2463               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      75: areturn
      76: new           #2193               // class scala/MatchError
      79: dup
      80: aload_1
      81: invokespecial #2194               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      84: athrow

  public static final scala.collection.immutable.Nil$ $anonfun$traverseImpl$3();
    Code:
       0: getstatic     #2131               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: areturn

  public static final java.lang.Object $anonfun$traverseImpl$2(scalaz.Applicative);
    Code:
       0: aload_0
       1: invokedynamic #2474,  0           // InvokeDynamic #8:apply:()Lscala/Function0;
       6: invokeinterface #2476,  2         // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public static final scala.collection.immutable.List $anonfun$traverseImpl$4(scala.collection.immutable.List);
    Code:
       0: aload_0
       1: invokevirtual #2478               // Method scala/collection/immutable/List.reverse:()Lscala/collection/immutable/List;
       4: areturn

  public static final scala.collection.mutable.Stack $anonfun$foldRight$1(scala.collection.mutable.Stack, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2482               // Method scala/collection/mutable/Stack.push:(Ljava/lang/Object;)Lscala/collection/mutable/Stack;
       5: areturn

  public static final java.lang.Object $anonfun$foldRight$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.Maybe $anonfun$foldMap$1(scala.Function1, scala.collection.immutable.List);
    Code:
       0: aload_1
       1: invokevirtual #2488               // Method scala/collection/immutable/List.headOption:()Lscala/Option;
       4: astore_2
       5: aload_2
       6: instanceof    #2184               // class scala/Some
       9: ifeq          54
      12: aload_2
      13: checkcast     #2184               // class scala/Some
      16: invokevirtual #2490               // Method scala/Some.value:()Ljava/lang/Object;
      19: astore_3
      20: getstatic     #2456               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      23: pop
      24: new           #2425               // class scala/Tuple2
      27: dup
      28: aload_0
      29: aload_3
      30: invokeinterface #2176,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      35: aload_1
      36: invokevirtual #2493               // Method scala/collection/immutable/List.tail:()Ljava/lang/Object;
      39: invokespecial #2428               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      42: astore        4
      44: new           #109                // class scalaz/Maybe$Just
      47: dup
      48: aload         4
      50: invokespecial #2457               // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      53: areturn
      54: getstatic     #2164               // Field scala/None$.MODULE$:Lscala/None$;
      57: aload_2
      58: invokevirtual #2191               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      61: ifeq          75
      64: getstatic     #2456               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      67: pop
      68: getstatic     #2460               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      71: invokevirtual #2463               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      74: areturn
      75: new           #2193               // class scala/MatchError
      78: dup
      79: aload_2
      80: invokespecial #2194               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      83: athrow

  public scalaz.std.ListInstances$$anon$2(scalaz.std.ListInstances);
    Code:
       0: aload_0
       1: invokespecial #2498               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2502               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #2505               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #2508               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      16: aload_0
      17: invokestatic  #2511               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      20: aload_0
      21: invokestatic  #2514               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      24: aload_0
      25: invokestatic  #2517               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      28: aload_0
      29: invokestatic  #2520               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      32: aload_0
      33: invokestatic  #2523               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      36: aload_0
      37: invokestatic  #2526               // InterfaceMethod scalaz/Monad.$init$:(Lscalaz/Monad;)V
      40: aload_0
      41: invokestatic  #2529               // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      44: aload_0
      45: invokestatic  #2532               // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      48: aload_0
      49: invokestatic  #2535               // InterfaceMethod scalaz/ApplicativePlus.$init$:(Lscalaz/ApplicativePlus;)V
      52: aload_0
      53: invokestatic  #2538               // InterfaceMethod scalaz/MonadPlus.$init$:(Lscalaz/MonadPlus;)V
      56: aload_0
      57: invokestatic  #2541               // InterfaceMethod scalaz/InvariantAlt.$init$:(Lscalaz/InvariantAlt;)V
      60: aload_0
      61: invokestatic  #2544               // InterfaceMethod scalaz/Alt.$init$:(Lscalaz/Alt;)V
      64: aload_0
      65: invokestatic  #2547               // InterfaceMethod scalaz/BindRec.$init$:(Lscalaz/BindRec;)V
      68: aload_0
      69: invokestatic  #2550               // InterfaceMethod scalaz/Zip.$init$:(Lscalaz/Zip;)V
      72: aload_0
      73: invokestatic  #2553               // InterfaceMethod scalaz/Unzip.$init$:(Lscalaz/Unzip;)V
      76: aload_0
      77: invokestatic  #2556               // InterfaceMethod scalaz/Align.$init$:(Lscalaz/Align;)V
      80: aload_0
      81: invokestatic  #2559               // InterfaceMethod scalaz/IsEmpty.$init$:(Lscalaz/IsEmpty;)V
      84: aload_0
      85: invokestatic  #2562               // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      88: invokestatic  #2567               // Method scala/runtime/Statics.releaseFence:()V
      91: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2580,  0           // InvokeDynamic #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
