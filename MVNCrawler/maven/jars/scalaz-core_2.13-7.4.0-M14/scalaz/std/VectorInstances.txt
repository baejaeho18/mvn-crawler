Compiled from "Vector.scala"
public interface scalaz.std.VectorInstances extends scalaz.std.VectorInstances0 {
  public abstract void scalaz$std$VectorInstances$_setter_$vectorInstance_$eq(scalaz.Traverse<scala.collection.immutable.Vector>);

  public abstract scalaz.Traverse<scala.collection.immutable.Vector> vectorInstance();

  public static scalaz.Monoid vectorMonoid$(scalaz.std.VectorInstances);
    Code:
       0: aload_0
       1: invokespecial #35                 // InterfaceMethod vectorMonoid:()Lscalaz/Monoid;
       4: areturn

  public default <A> scalaz.Monoid<scala.collection.immutable.Vector<A>> vectorMonoid();
    Code:
       0: aload_0
       1: invokeinterface #39,  1           // InterfaceMethod vectorInstance:()Lscalaz/Traverse;
       6: checkcast     #41                 // class scalaz/PlusEmpty
       9: invokeinterface #44,  1           // InterfaceMethod scalaz/PlusEmpty.monoid:()Lscalaz/Monoid;
      14: areturn

  public static scalaz.Show vectorShow$(scalaz.std.VectorInstances, scalaz.Show);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #52                 // InterfaceMethod vectorShow:(Lscalaz/Show;)Lscalaz/Show;
       5: areturn

  public default <A> scalaz.Show<scala.collection.immutable.Vector<A>> vectorShow(scalaz.Show<A>);
    Code:
       0: getstatic     #60                 // Field scalaz/Show$.MODULE$:Lscalaz/Show$;
       3: pop
       4: aload_1
       5: invokedynamic #82,  0             // InvokeDynamic #0:apply:(Lscalaz/Show;)Lscala/Function1;
      10: astore_2
      11: new           #17                 // class scalaz/Show$$anonfun$show$2
      14: dup
      15: aload_2
      16: invokespecial #86                 // Method scalaz/Show$$anonfun$show$2."<init>":(Lscala/Function1;)V
      19: areturn

  public static scalaz.Order vectorOrder$(scalaz.std.VectorInstances, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #95                 // InterfaceMethod vectorOrder:(Lscalaz/Order;)Lscalaz/Order;
       5: areturn

  public default <A> scalaz.Order<scala.collection.immutable.Vector<A>> vectorOrder(scalaz.Order<A>);
    Code:
       0: new           #21                 // class scalaz/std/VectorInstances$$anon$3
       3: dup
       4: aconst_null
       5: aload_1
       6: invokespecial #100                // Method scalaz/std/VectorInstances$$anon$3."<init>":(Lscalaz/std/VectorInstances;Lscalaz/Order;)V
       9: areturn

  public static scalaz.Cord $anonfun$vectorShow$1(scalaz.Show, scala.collection.immutable.Vector);
    Code:
       0: getstatic     #107                // Field scalaz/std/list$.MODULE$:Lscalaz/std/list$;
       3: aload_0
       4: invokestatic  #113                // InterfaceMethod scalaz/std/ListInstances.listShow$:(Lscalaz/std/ListInstances;Lscalaz/Show;)Lscalaz/Show;
       7: aload_1
       8: invokevirtual #119                // Method scala/collection/immutable/Vector.toList:()Lscala/collection/immutable/List;
      11: invokeinterface #125,  2          // InterfaceMethod scalaz/Show.show:(Ljava/lang/Object;)Lscalaz/Cord;
      16: areturn

  public static void $init$(scalaz.std.VectorInstances);
    Code:
       0: aload_0
       1: new           #19                 // class scalaz/std/VectorInstances$$anon$2
       4: dup
       5: aconst_null
       6: invokespecial #130                // Method scalaz/std/VectorInstances$$anon$2."<init>":(Lscalaz/std/VectorInstances;)V
       9: invokeinterface #132,  2          // InterfaceMethod scalaz$std$VectorInstances$_setter_$vectorInstance_$eq:(Lscalaz/Traverse;)V
      14: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #144,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
