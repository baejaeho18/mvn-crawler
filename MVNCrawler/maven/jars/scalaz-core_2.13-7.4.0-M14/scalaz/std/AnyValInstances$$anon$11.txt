Compiled from "AnyVal.scala"
public final class scalaz.std.AnyValInstances$$anon$11 implements scalaz.Monoid<java.lang.Object>, scalaz.Enum<java.lang.Object> {
  private scalaz.syntax.EnumSyntax<java.lang.Object> enumSyntax;

  private scalaz.syntax.OrderSyntax<java.lang.Object> orderSyntax;

  private scalaz.syntax.EqualSyntax<java.lang.Object> equalSyntax;

  private scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax;

  private scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax;

  private final scalaz.std.AnyValInstances $outer;

  public scalaz.Kleisli<scala.Option, java.lang.Object, java.lang.Object> succx();
    Code:
       0: aload_0
       1: invokestatic  #78                 // InterfaceMethod scalaz/Enum.succx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public scalaz.Kleisli<scala.Option, java.lang.Object, java.lang.Object> predx();
    Code:
       0: aload_0
       1: invokestatic  #84                 // InterfaceMethod scalaz/Enum.predx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public <X> scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, X> succState(scala.Function1<java.lang.Object, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #92                 // InterfaceMethod scalaz/Enum.succState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y succStateZeroM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #102                // InterfaceMethod scalaz/Enum.succStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y succStateZero(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #108                // InterfaceMethod scalaz/Enum.succStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> succStateMinM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #115                // InterfaceMethod scalaz/Enum.succStateMinM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> succStateMin(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #120                // InterfaceMethod scalaz/Enum.succStateMin$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X> scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, X> predState(scala.Function1<java.lang.Object, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #124                // InterfaceMethod scalaz/Enum.predState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y predStateZeroM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #128                // InterfaceMethod scalaz/Enum.predStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y predStateZero(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #132                // InterfaceMethod scalaz/Enum.predStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> predStateMaxM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #136                // InterfaceMethod scalaz/Enum.predStateMaxM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> predStateMax(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #140                // InterfaceMethod scalaz/Enum.predStateMax$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> from(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #148                // InterfaceMethod scalaz/Enum.from$:(Lscalaz/Enum;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromStep(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #157                // InterfaceMethod scalaz/Enum.fromStep$:(Lscalaz/Enum;ILjava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromTo(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #166                // InterfaceMethod scalaz/Enum.fromTo$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.IList<java.lang.Object> fromToL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #173                // InterfaceMethod scalaz/Enum.fromToL$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromStepTo(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #180                // InterfaceMethod scalaz/Enum.fromStepTo$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       7: areturn

  public scalaz.IList<java.lang.Object> fromStepToL(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #187                // InterfaceMethod scalaz/Enum.fromStepToL$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       7: areturn

  public scalaz.Enum<java.lang.Object>.EnumLaw enumLaw();
    Code:
       0: aload_0
       1: invokestatic  #194                // InterfaceMethod scalaz/Enum.enumLaw$:(Lscalaz/Enum;)Lscalaz/Enum$EnumLaw;
       4: areturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #202                // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #208                // InterfaceMethod scalaz/Order.equal$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #212                // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #216                // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #220                // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #224                // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #230                // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #234                // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<java.lang.Object, java.lang.Object> sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #241                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #248                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<java.lang.Object> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #255                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<java.lang.Object> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #262                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<java.lang.Object>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #269                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #275                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<java.lang.Object>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #282                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #289                // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #297                // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final <B> B ifEmpty(java.lang.Object, scala.Function0<B>, scala.Function0<B>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #306                // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final <B> B onNotEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #316                // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final <A, B> B onEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #321                // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public <S> java.lang.Object unfoldlSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #329                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <S> java.lang.Object unfoldrSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #334                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #341                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #348                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<java.lang.Object>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #355                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #360                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #367                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #372                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<java.lang.Object>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #379                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.EnumSyntax<java.lang.Object> enumSyntax();
    Code:
       0: aload_0
       1: getfield      #383                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       4: areturn

  public void scalaz$Enum$_setter_$enumSyntax_$eq(scalaz.syntax.EnumSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #383                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       5: return

  public scalaz.syntax.OrderSyntax<java.lang.Object> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #391                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #391                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<java.lang.Object> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #398                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #398                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #405                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #405                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #412                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #412                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public java.lang.Object append(java.lang.Object, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #426                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #430                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       9: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      12: aload_1
      13: invokevirtual #444                // Method scalaz/TagKind.unwrap$mIc$sp:(Ljava/lang/Object;)I
      16: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      19: aload_2
      20: invokeinterface #449,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      25: astore_3
      26: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      29: aload_3
      30: invokevirtual #444                // Method scalaz/TagKind.unwrap$mIc$sp:(Ljava/lang/Object;)I
      33: aconst_null
      34: astore_3
      35: imul
      36: invokestatic  #455                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      39: astore        4
      41: ifnonnull     46
      44: aconst_null
      45: athrow
      46: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      49: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      52: aload         4
      54: invokevirtual #458                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      57: areturn

  public java.lang.Object zero();
    Code:
       0: getstatic     #426                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #430                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: iconst_1
       7: invokestatic  #455                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      10: astore_1
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      19: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      22: aload_1
      23: invokevirtual #458                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: areturn

  public java.lang.Object succ(java.lang.Object);
    Code:
       0: getstatic     #426                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #430                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #470                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #472                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #476,  1          // InterfaceMethod scalaz/std/AnyValInstances.intInstance:()Lscalaz/Monoid;
      19: checkcast     #9                  // class scalaz/Enum
      22: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      25: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      28: aload_1
      29: invokevirtual #444                // Method scalaz/TagKind.unwrap$mIc$sp:(Ljava/lang/Object;)I
      32: invokestatic  #455                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      35: invokeinterface #478,  2          // InterfaceMethod scalaz/Enum.succ:(Ljava/lang/Object;)Ljava/lang/Object;
      40: astore_2
      41: ifnonnull     46
      44: aconst_null
      45: athrow
      46: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      49: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      52: aload_2
      53: invokevirtual #458                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      56: areturn

  public java.lang.Object pred(java.lang.Object);
    Code:
       0: getstatic     #426                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #430                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #470                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #472                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #476,  1          // InterfaceMethod scalaz/std/AnyValInstances.intInstance:()Lscalaz/Monoid;
      19: checkcast     #9                  // class scalaz/Enum
      22: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      25: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      28: aload_1
      29: invokevirtual #444                // Method scalaz/TagKind.unwrap$mIc$sp:(Ljava/lang/Object;)I
      32: invokestatic  #455                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      35: invokeinterface #481,  2          // InterfaceMethod scalaz/Enum.pred:(Ljava/lang/Object;)Ljava/lang/Object;
      40: astore_2
      41: ifnonnull     46
      44: aconst_null
      45: athrow
      46: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      49: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      52: aload_2
      53: invokevirtual #458                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      56: areturn

  public java.lang.Object succn(int, java.lang.Object);
    Code:
       0: getstatic     #426                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #430                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #470                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #472                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #476,  1          // InterfaceMethod scalaz/std/AnyValInstances.intInstance:()Lscalaz/Monoid;
      19: checkcast     #9                  // class scalaz/Enum
      22: iload_1
      23: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      26: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      29: aload_2
      30: invokevirtual #444                // Method scalaz/TagKind.unwrap$mIc$sp:(Ljava/lang/Object;)I
      33: invokestatic  #455                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      36: invokeinterface #485,  3          // InterfaceMethod scalaz/Enum.succn:(ILjava/lang/Object;)Ljava/lang/Object;
      41: astore_3
      42: ifnonnull     47
      45: aconst_null
      46: athrow
      47: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      50: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      53: aload_3
      54: invokevirtual #458                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      57: areturn

  public java.lang.Object predn(int, java.lang.Object);
    Code:
       0: getstatic     #426                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #430                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #470                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #472                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #476,  1          // InterfaceMethod scalaz/std/AnyValInstances.intInstance:()Lscalaz/Monoid;
      19: checkcast     #9                  // class scalaz/Enum
      22: iload_1
      23: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      26: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      29: aload_2
      30: invokevirtual #444                // Method scalaz/TagKind.unwrap$mIc$sp:(Ljava/lang/Object;)I
      33: invokestatic  #455                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      36: invokeinterface #488,  3          // InterfaceMethod scalaz/Enum.predn:(ILjava/lang/Object;)Ljava/lang/Object;
      41: astore_3
      42: ifnonnull     47
      45: aconst_null
      46: athrow
      47: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      50: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      53: aload_3
      54: invokevirtual #458                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      57: areturn

  public scala.Option<java.lang.Object> min();
    Code:
       0: getstatic     #426                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #430                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #470                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #472                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #476,  1          // InterfaceMethod scalaz/std/AnyValInstances.intInstance:()Lscalaz/Monoid;
      19: checkcast     #9                  // class scalaz/Enum
      22: invokeinterface #492,  1          // InterfaceMethod scalaz/Enum.min:()Lscala/Option;
      27: astore_1
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      36: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      39: aload_1
      40: invokevirtual #495                // Method scalaz/TagKind.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #497                // class scala/Option
      46: areturn

  public scala.Option<java.lang.Object> max();
    Code:
       0: getstatic     #426                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #430                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #470                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #472                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #476,  1          // InterfaceMethod scalaz/std/AnyValInstances.intInstance:()Lscalaz/Monoid;
      19: checkcast     #9                  // class scalaz/Enum
      22: invokeinterface #500,  1          // InterfaceMethod scalaz/Enum.max:()Lscala/Option;
      27: astore_1
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      36: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      39: aload_1
      40: invokevirtual #495                // Method scalaz/TagKind.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #497                // class scala/Option
      46: areturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #508                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: pop
       4: aload_0
       5: getfield      #472                // Field $outer:Lscalaz/std/AnyValInstances;
       8: invokeinterface #476,  1          // InterfaceMethod scalaz/std/AnyValInstances.intInstance:()Lscalaz/Monoid;
      13: checkcast     #43                 // class scalaz/Order
      16: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      19: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      22: aload_1
      23: invokevirtual #444                // Method scalaz/TagKind.unwrap$mIc$sp:(Ljava/lang/Object;)I
      26: invokestatic  #455                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      29: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      32: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      35: aload_2
      36: invokevirtual #444                // Method scalaz/TagKind.unwrap$mIc$sp:(Ljava/lang/Object;)I
      39: invokestatic  #455                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      42: invokeinterface #510,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      47: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: getstatic     #426                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #430                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      14: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      17: aload_2
      18: invokevirtual #517                // Method scalaz/TagKind.unsubst:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #519                // class scala/Function1
      24: astore_3
      25: aload_3
      26: aload_1
      27: invokeinterface #520,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #29                 // class scalaz/Maybe
      35: aload_0
      36: aload_3
      37: invokedynamic #540,  0            // InvokeDynamic #0:apply:(Lscalaz/std/AnyValInstances$$anon$11;Lscala/Function1;)Lscala/Function1;
      42: astore        5
      44: dup
      45: ifnonnull     50
      48: aconst_null
      49: athrow
      50: astore        4
      52: aload         5
      54: invokedynamic #549,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      59: invokeinterface #553,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      64: astore        6
      66: aload         4
      68: instanceof    #35                 // class scalaz/Maybe$Just
      71: ifeq          96
      74: aload         4
      76: checkcast     #35                 // class scalaz/Maybe$Just
      79: invokevirtual #556                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      82: astore        7
      84: aload         6
      86: aload         7
      88: invokeinterface #520,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      93: goto          127
      96: aload         4
      98: instanceof    #27                 // class scalaz/Maybe$Empty
     101: ifeq          117
     104: getstatic     #561                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     107: pop
     108: getstatic     #564                // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
     111: invokevirtual #567                // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
     114: goto          127
     117: new           #569                // class scala/MatchError
     120: dup
     121: aload         4
     123: invokespecial #573                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     126: athrow
     127: checkcast     #29                 // class scalaz/Maybe
     130: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: aload_2
       1: invokedynamic #588,  0            // InvokeDynamic #2:apply:(Lscala/Function1;)Lscala/Function1;
       6: astore_3
       7: getstatic     #426                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
      10: invokevirtual #430                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
      13: ifnonnull     18
      16: aconst_null
      17: athrow
      18: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      21: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      24: aload_3
      25: invokevirtual #517                // Method scalaz/TagKind.unsubst:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #519                // class scala/Function1
      31: astore        4
      33: aload         4
      35: aload_1
      36: invokeinterface #520,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #29                 // class scalaz/Maybe
      44: aload_0
      45: aload         4
      47: invokedynamic #540,  0            // InvokeDynamic #0:apply:(Lscalaz/std/AnyValInstances$$anon$11;Lscala/Function1;)Lscala/Function1;
      52: astore        6
      54: dup
      55: ifnonnull     60
      58: aconst_null
      59: athrow
      60: astore        5
      62: aload         6
      64: invokedynamic #549,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      69: invokeinterface #553,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      74: astore        7
      76: aload         5
      78: instanceof    #35                 // class scalaz/Maybe$Just
      81: ifeq          106
      84: aload         5
      86: checkcast     #35                 // class scalaz/Maybe$Just
      89: invokevirtual #556                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      92: astore        8
      94: aload         7
      96: aload         8
      98: invokeinterface #520,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     103: goto          137
     106: aload         5
     108: instanceof    #27                 // class scalaz/Maybe$Empty
     111: ifeq          127
     114: getstatic     #561                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     117: pop
     118: getstatic     #564                // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
     121: invokevirtual #567                // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
     124: goto          137
     127: new           #569                // class scala/MatchError
     130: dup
     131: aload         5
     133: invokespecial #573                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     136: athrow
     137: checkcast     #29                 // class scalaz/Maybe
     140: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #597                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  private final int go$5(java.lang.Object, int, scala.Function1);
    Code:
       0: iload_2
       1: iconst_0
       2: if_icmpne     7
       5: iconst_0
       6: ireturn
       7: aload_3
       8: aload_1
       9: invokeinterface #520,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #29                 // class scalaz/Maybe
      17: astore        4
      19: aload         4
      21: instanceof    #35                 // class scalaz/Maybe$Just
      24: ifeq          70
      27: aload         4
      29: checkcast     #35                 // class scalaz/Maybe$Just
      32: invokevirtual #556                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      35: checkcast     #603                // class scala/Tuple2
      38: astore        5
      40: aload         5
      42: ifnull        70
      45: aload         5
      47: invokevirtual #606                // Method scala/Tuple2._1:()Ljava/lang/Object;
      50: astore        6
      52: aload         5
      54: invokevirtual #610                // Method scala/Tuple2._2$mcI$sp:()I
      57: istore        7
      59: aload         6
      61: iload         7
      63: iload_2
      64: imul
      65: istore_2
      66: astore_1
      67: goto          0
      70: iload_2
      71: ireturn

  public static final java.lang.Object $anonfun$unfoldlSumOpt$3(scalaz.std.AnyValInstances$$anon$11, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        141
       4: aload_2
       5: invokevirtual #606                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_2
      10: invokevirtual #610                // Method scala/Tuple2._2$mcI$sp:()I
      13: istore        4
      15: getstatic     #426                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
      18: invokevirtual #430                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
      21: aload_3
      22: iload         4
      24: istore        6
      26: astore        5
      28: iload         6
      30: iconst_0
      31: if_icmpne     38
      34: iconst_0
      35: goto          107
      38: aload_1
      39: aload         5
      41: invokeinterface #520,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #29                 // class scalaz/Maybe
      49: astore        7
      51: aload         7
      53: instanceof    #35                 // class scalaz/Maybe$Just
      56: ifeq          105
      59: aload         7
      61: checkcast     #35                 // class scalaz/Maybe$Just
      64: invokevirtual #556                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      67: checkcast     #603                // class scala/Tuple2
      70: astore        8
      72: aload         8
      74: ifnull        105
      77: aload         8
      79: invokevirtual #606                // Method scala/Tuple2._1:()Ljava/lang/Object;
      82: astore        9
      84: aload         8
      86: invokevirtual #610                // Method scala/Tuple2._2$mcI$sp:()I
      89: istore        10
      91: aload         9
      93: iload         10
      95: iload         6
      97: imul
      98: istore        6
     100: astore        5
     102: goto          28
     105: iload         6
     107: aconst_null
     108: astore        5
     110: aconst_null
     111: astore        7
     113: aconst_null
     114: astore        8
     116: aconst_null
     117: astore        9
     119: invokestatic  #455                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     122: astore        11
     124: ifnonnull     129
     127: aconst_null
     128: athrow
     129: getstatic     #435                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     132: invokevirtual #438                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
     135: aload         11
     137: invokevirtual #458                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     140: areturn
     141: new           #569                // class scala/MatchError
     144: dup
     145: aconst_null
     146: invokespecial #573                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     149: athrow

  public static final scala.Tuple2 $anonfun$unfoldrSumOpt$4(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #624                // Method scala/Tuple2.swap:()Lscala/Tuple2;
       4: areturn

  public static final scalaz.Maybe $anonfun$unfoldrSumOpt$3(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #520,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #29                 // class scalaz/Maybe
      10: invokedynamic #630,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
      15: astore_3
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: astore_2
      23: aload_3
      24: invokedynamic #549,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      29: invokeinterface #553,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      34: astore        4
      36: aload_2
      37: instanceof    #35                 // class scalaz/Maybe$Just
      40: ifeq          64
      43: aload_2
      44: checkcast     #35                 // class scalaz/Maybe$Just
      47: invokevirtual #556                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      50: astore        5
      52: aload         4
      54: aload         5
      56: invokeinterface #520,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      61: goto          93
      64: aload_2
      65: instanceof    #27                 // class scalaz/Maybe$Empty
      68: ifeq          84
      71: getstatic     #561                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      74: pop
      75: getstatic     #564                // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      78: invokevirtual #567                // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      81: goto          93
      84: new           #569                // class scala/MatchError
      87: dup
      88: aload_2
      89: invokespecial #573                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      92: athrow
      93: checkcast     #29                 // class scalaz/Maybe
      96: areturn

  public scalaz.std.AnyValInstances$$anon$11(scalaz.std.AnyValInstances);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #472                // Field $outer:Lscalaz/std/AnyValInstances;
      11: aload_0
      12: invokespecial #634                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #638                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      19: aload_0
      20: invokestatic  #641                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      23: aload_0
      24: invokestatic  #644                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      27: aload_0
      28: invokestatic  #647                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      31: aload_0
      32: invokestatic  #650                // InterfaceMethod scalaz/Enum.$init$:(Lscalaz/Enum;)V
      35: invokestatic  #655                // Method scala/runtime/Statics.releaseFence:()V
      38: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #667,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
