Compiled from "Map.scala"
public final class scalaz.std.MapInstances$$anon$6 implements scalaz.Order<scala.collection.immutable.Map<K, V>>, scalaz.std.MapInstances0$MapEqual<K, V> {
  private boolean equalIsNatural;

  private scalaz.syntax.OrderSyntax<scala.collection.immutable.Map<K, V>> orderSyntax;

  private scalaz.syntax.EqualSyntax<scala.collection.immutable.Map<K, V>> equalSyntax;

  private final scalaz.std.MapInstances $outer;

  private final scalaz.Order evidence$3$1;

  private final scalaz.Order evidence$4$1;

  public boolean equal(scala.collection.immutable.Map<K, V>, scala.collection.immutable.Map<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #57                 // InterfaceMethod scalaz/std/MapInstances0$MapEqual.equal$:(Lscalaz/std/MapInstances0$MapEqual;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #68                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #75                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #79                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #83                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #87                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #93                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #97                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #103                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scala.collection.immutable.Map<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #111                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scala.collection.immutable.Map<K, V>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #119                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scala.collection.immutable.Map<K, V>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #126                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scala.collection.immutable.Map<K, V>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #133                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public scalaz.Equal<scala.collection.immutable.Map<K, V>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #140                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: getfield      #143                // Field equalIsNatural:Z
       4: ireturn

  public void scalaz$std$MapInstances0$MapEqual$_setter_$equalIsNatural_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #143                // Field equalIsNatural:Z
       5: return

  public scalaz.syntax.OrderSyntax<scala.collection.immutable.Map<K, V>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #150                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scala.collection.immutable.Map<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #150                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scala.collection.immutable.Map<K, V>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #157                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scala.collection.immutable.Map<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #157                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<K> OK();
    Code:
       0: getstatic     #168                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: pop
       4: aload_0
       5: getfield      #170                // Field evidence$3$1:Lscalaz/Order;
       8: areturn

  public scalaz.Equal<V> OV();
    Code:
       0: getstatic     #178                // Field scalaz/Equal$.MODULE$:Lscalaz/Equal$;
       3: pop
       4: aload_0
       5: getfield      #180                // Field evidence$4$1:Lscalaz/Order;
       8: areturn

  public scalaz.Ordering order(scala.collection.immutable.Map<K, V>, scala.collection.immutable.Map<K, V>);
    Code:
       0: getstatic     #168                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: pop
       4: aload_0
       5: getfield      #170                // Field evidence$3$1:Lscalaz/Order;
       8: invokeinterface #185,  1          // InterfaceMethod scalaz/Order.toScalaOrdering:()Lscala/math/Ordering;
      13: astore_3
      14: getstatic     #190                // Field scalaz/Semigroup$.MODULE$:Lscalaz/Semigroup$;
      17: pop
      18: getstatic     #195                // Field scalaz/Ordering$.MODULE$:Lscalaz/Ordering$;
      21: invokevirtual #199                // Method scalaz/Ordering$.orderingInstance:()Lscalaz/Enum;
      24: checkcast     #201                // class scalaz/Semigroup
      27: getstatic     #168                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
      30: pop
      31: getstatic     #206                // Field scalaz/std/anyVal$.MODULE$:Lscalaz/std/anyVal$;
      34: invokevirtual #210                // Method scalaz/std/anyVal$.intInstance:()Lscalaz/Monoid;
      37: checkcast     #7                  // class scalaz/Order
      40: aload_1
      41: invokeinterface #216,  1          // InterfaceMethod scala/collection/immutable/Map.size:()I
      46: invokestatic  #222                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      49: aload_2
      50: invokeinterface #216,  1          // InterfaceMethod scala/collection/immutable/Map.size:()I
      55: invokestatic  #222                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      58: invokeinterface #224,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      63: aload_0
      64: aload_1
      65: aload_3
      66: aload_2
      67: invokedynamic #245,  0            // InvokeDynamic #0:apply:(Lscalaz/std/MapInstances$$anon$6;Lscala/collection/immutable/Map;Lscala/math/Ordering;Lscala/collection/immutable/Map;)Lscala/Function0;
      72: invokeinterface #249,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      77: checkcast     #251                // class scalaz/Ordering
      80: areturn

  public scalaz.std.MapInstances0 scalaz$std$MapInstances0$MapEqual$$$outer();
    Code:
       0: aload_0
       1: getfield      #257                // Field $outer:Lscalaz/std/MapInstances;
       4: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #260                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #212                // class scala/collection/immutable/Map
       5: aload_2
       6: checkcast     #212                // class scala/collection/immutable/Map
       9: invokevirtual #262                // Method equal:(Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #212                // class scala/collection/immutable/Map
       5: aload_2
       6: checkcast     #212                // class scala/collection/immutable/Map
       9: invokevirtual #264                // Method order:(Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;)Lscalaz/Ordering;
      12: areturn

  public static final java.lang.Object $anonfun$order$2(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #272                // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: areturn

  public static final java.lang.Object $anonfun$order$3(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #272                // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: areturn

  public static final scalaz.Ordering $anonfun$order$1(scalaz.std.MapInstances$$anon$6, scala.collection.immutable.Map, scala.math.Ordering, scala.collection.immutable.Map);
    Code:
       0: getstatic     #168                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: pop
       4: getstatic     #284                // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       7: pop
       8: getstatic     #289                // Field scalaz/std/tuple$.MODULE$:Lscalaz/std/tuple$;
      11: pop
      12: aload_0
      13: getfield      #170                // Field evidence$3$1:Lscalaz/Order;
      16: aload_0
      17: getfield      #180                // Field evidence$4$1:Lscalaz/Order;
      20: astore        5
      22: astore        4
      24: new           #33                 // class scalaz/std/TupleInstances3$$anon$59
      27: dup
      28: aconst_null
      29: aload         4
      31: aload         5
      33: invokespecial #293                // Method scalaz/std/TupleInstances3$$anon$59."<init>":(Lscalaz/std/TupleInstances3;Lscalaz/Order;Lscalaz/Order;)V
      36: aconst_null
      37: astore        4
      39: aconst_null
      40: astore        5
      42: astore        6
      44: new           #35                 // class scalaz/std/VectorInstances$$anon$3
      47: dup
      48: aconst_null
      49: aload         6
      51: invokespecial #296                // Method scalaz/std/VectorInstances$$anon$3."<init>":(Lscalaz/std/VectorInstances;Lscalaz/Order;)V
      54: aconst_null
      55: astore        6
      57: aload_1
      58: invokeinterface #300,  1          // InterfaceMethod scala/collection/immutable/Map.toVector:()Lscala/collection/immutable/Vector;
      63: invokedynamic #309,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      68: aload_2
      69: invokevirtual #315                // Method scala/collection/immutable/Vector.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
      72: aload_3
      73: invokeinterface #300,  1          // InterfaceMethod scala/collection/immutable/Map.toVector:()Lscala/collection/immutable/Vector;
      78: invokedynamic #319,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      83: aload_2
      84: invokevirtual #315                // Method scala/collection/immutable/Vector.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
      87: astore        9
      89: astore        8
      91: astore        7
      93: aload         8
      95: checkcast     #311                // class scala/collection/immutable/Vector
      98: aload         9
     100: checkcast     #311                // class scala/collection/immutable/Vector
     103: astore        11
     105: astore        10
     107: aload         7
     109: aload         10
     111: aload         11
     113: invokestatic  #325                // InterfaceMethod scalaz/std/VectorOrder.order$:(Lscalaz/std/VectorOrder;Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)Lscalaz/Ordering;
     116: areturn

  public scalaz.std.MapInstances$$anon$6(scalaz.std.MapInstances, scalaz.Order, scalaz.Order);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #257                // Field $outer:Lscalaz/std/MapInstances;
      11: aload_0
      12: aload_2
      13: putfield      #170                // Field evidence$3$1:Lscalaz/Order;
      16: aload_0
      17: aload_3
      18: putfield      #180                // Field evidence$4$1:Lscalaz/Order;
      21: aload_0
      22: invokespecial #339                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #343                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      29: aload_0
      30: invokestatic  #346                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      33: aload_0
      34: invokestatic  #349                // InterfaceMethod scalaz/std/MapInstances0$MapEqual.$init$:(Lscalaz/std/MapInstances0$MapEqual;)V
      37: invokestatic  #354                // Method scala/runtime/Statics.releaseFence:()V
      40: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #366,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
