Compiled from "LazyList.scala"
public final class scalaz.std.lazylist {
  public static <A, B> scala.collection.immutable.LazyList<B> unfoldm(A, scala.Function1<A, scalaz.Maybe<scala.Tuple2<B, A>>>);
    Code:
       0: getstatic     #22                 // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: aload_0
       4: aload_1
       5: invokevirtual #24                 // Method scalaz/std/lazylist$.unfoldm:(Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/LazyList;
       8: areturn

  public static <A, B> scala.collection.immutable.LazyList<B> unfold(A, scala.Function1<A, scala.Option<scala.Tuple2<B, A>>>);
    Code:
       0: getstatic     #22                 // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: aload_0
       4: aload_1
       5: invokevirtual #30                 // Method scalaz/std/lazylist$.unfold:(Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/LazyList;
       8: areturn

  public static <A> scala.collection.immutable.LazyList<A> intersperse(scala.collection.immutable.LazyList<A>, A);
    Code:
       0: getstatic     #22                 // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: aload_0
       4: aload_1
       5: invokevirtual #37                 // Method scalaz/std/lazylist$.intersperse:(Lscala/collection/immutable/LazyList;Ljava/lang/Object;)Lscala/collection/immutable/LazyList;
       8: areturn

  public static <A, B, M> M unfoldForestM(scala.collection.immutable.LazyList<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #22                 // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #44                 // Method scalaz/std/lazylist$.unfoldForestM:(Lscala/collection/immutable/LazyList;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public static <A, B> scala.collection.immutable.LazyList<scalaz.Tree<B>> unfoldForest(scala.collection.immutable.LazyList<A>, scala.Function1<A, scala.Tuple2<B, scala.Function0<scala.collection.immutable.LazyList<A>>>>);
    Code:
       0: getstatic     #22                 // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: aload_0
       4: aload_1
       5: invokevirtual #50                 // Method scalaz/std/lazylist$.unfoldForest:(Lscala/collection/immutable/LazyList;Lscala/Function1;)Lscala/collection/immutable/LazyList;
       8: areturn

  public static <A, B, C> scala.collection.immutable.LazyList<scala.Function1<B, C>> zapp(scala.collection.immutable.LazyList<A>, scala.collection.immutable.LazyList<scala.Function1<A, scala.Function1<B, C>>>);
    Code:
       0: getstatic     #22                 // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: aload_0
       4: aload_1
       5: invokevirtual #55                 // Method scalaz/std/lazylist$.zapp:(Lscala/collection/immutable/LazyList;Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
       8: areturn

  public static <A> scala.collection.immutable.LazyList<scala.collection.immutable.LazyList<A>> tails(scala.collection.immutable.LazyList<A>);
    Code:
       0: getstatic     #22                 // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: aload_0
       4: invokevirtual #60                 // Method scalaz/std/lazylist$.tails:(Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
       7: areturn

  public static <A> scala.collection.immutable.LazyList<scala.collection.immutable.LazyList<A>> heads(scala.collection.immutable.LazyList<A>);
    Code:
       0: getstatic     #22                 // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: aload_0
       4: invokevirtual #63                 // Method scalaz/std/lazylist$.heads:(Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
       7: areturn

  public static <A> scalaz.Maybe<scalaz.Zipper<A>> zipperEnd(scala.collection.immutable.LazyList<A>);
    Code:
       0: getstatic     #22                 // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: aload_0
       4: invokevirtual #68                 // Method scalaz/std/lazylist$.zipperEnd:(Lscala/collection/immutable/LazyList;)Lscalaz/Maybe;
       7: areturn

  public static <A> scalaz.Maybe<scalaz.Zipper<A>> toZipper(scala.collection.immutable.LazyList<A>);
    Code:
       0: getstatic     #22                 // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: aload_0
       4: invokevirtual #71                 // Method scalaz/std/lazylist$.toZipper:(Lscala/collection/immutable/LazyList;)Lscalaz/Maybe;
       7: areturn

  public static <A> scala.collection.immutable.LazyList<A> interleave(scala.collection.immutable.LazyList<A>, scala.collection.immutable.LazyList<A>);
    Code:
       0: getstatic     #22                 // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: aload_0
       4: aload_1
       5: invokevirtual #77                 // Method scalaz/std/lazylist$.interleave:(Lscala/collection/immutable/LazyList;Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
       8: areturn

  public static <A> scalaz.Show<scala.collection.immutable.LazyList<A>> lazylistShow(scalaz.Show<A>);
    Code:
       0: getstatic     #22                 // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: aload_0
       4: invokevirtual #83                 // Method scalaz/std/lazylist$.lazylistShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Order<scala.collection.immutable.LazyList<A>> lazylistOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #22                 // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: aload_0
       4: invokevirtual #89                 // Method scalaz/std/lazylist$.lazylistOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Equal<scala.collection.immutable.LazyList<A>> lazylistEqual(scalaz.Equal<A>);
    Code:
       0: getstatic     #22                 // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: aload_0
       4: invokevirtual #95                 // Method scalaz/std/lazylist$.lazylistEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <A> scalaz.Monoid<scala.collection.immutable.LazyList<A>> lazylistMonoid();
    Code:
       0: getstatic     #22                 // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: invokevirtual #101                // Method scalaz/std/lazylist$.lazylistMonoid:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Applicative<?> lazylistZipApplicative();
    Code:
       0: getstatic     #22                 // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: invokevirtual #106                // Method scalaz/std/lazylist$.lazylistZipApplicative:()Lscalaz/Applicative;
       6: areturn

  public static scalaz.Traverse<scala.collection.immutable.LazyList> lazylistInstance();
    Code:
       0: getstatic     #22                 // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: invokevirtual #111                // Method scalaz/std/lazylist$.lazylistInstance:()Lscalaz/Traverse;
       6: areturn
}
