Compiled from "Tuple.scala"
public interface scalaz.std.Tuple2Order<A1, A2> extends scalaz.Order<scala.Tuple2<A1, A2>>, scalaz.std.Tuple2Equal<A1, A2> {
  public abstract scalaz.Order<A1> _1();

  public abstract scalaz.Order<A2> _2();

  public static scalaz.Ordering order$(scalaz.std.Tuple2Order, scala.Tuple2, scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #32                 // InterfaceMethod order:(Lscala/Tuple2;Lscala/Tuple2;)Lscalaz/Ordering;
       6: areturn

  public default scalaz.Ordering order(scala.Tuple2<A1, A2>, scala.Tuple2<A1, A2>);
    Code:
       0: aload_0
       1: invokeinterface #37,  1           // InterfaceMethod _1:()Lscalaz/Order;
       6: aload_1
       7: invokevirtual #42                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: aload_2
      11: invokevirtual #42                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      14: invokeinterface #45,  3           // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      19: aload_0
      20: invokeinterface #47,  1           // InterfaceMethod _2:()Lscalaz/Order;
      25: aload_1
      26: invokevirtual #49                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      29: aload_2
      30: invokevirtual #49                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      33: invokeinterface #45,  3           // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      38: astore        4
      40: astore_3
      41: getstatic     #53                 // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      44: aload_3
      45: invokevirtual #57                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      48: ifeq          54
      51: aload         4
      53: areturn
      54: aload_3
      55: areturn

  public static void $init$(scalaz.std.Tuple2Order);
    Code:
       0: return
}
