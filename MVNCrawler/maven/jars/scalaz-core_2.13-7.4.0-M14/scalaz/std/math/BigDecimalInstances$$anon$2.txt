Compiled from "BigDecimal.scala"
public final class scalaz.std.math.BigDecimalInstances$$anon$2 implements scalaz.Monoid<java.lang.Object> {
  private scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax;

  private scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax;

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #37                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #50                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final <B> B ifEmpty(java.lang.Object, scala.Function0<B>, scala.Function0<B>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #60                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final <B> B onNotEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #70                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final <A, B> B onEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #76                 // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public <S> java.lang.Object unfoldlSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #84                 // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <S> java.lang.Object unfoldrSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #90                 // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #97                 // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #104                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<java.lang.Object>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #111                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #116                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #123                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #128                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #135                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #142                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<java.lang.Object>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #149                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #153                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #161                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #161                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public java.lang.Object append(java.lang.Object, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #175                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #179                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #184                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       9: invokevirtual #188                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      12: aload_1
      13: invokevirtual #194                // Method scalaz/TagKind.unwrap:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #196                // class scala/math/BigDecimal
      19: getstatic     #184                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      22: aload_2
      23: invokeinterface #201,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      28: astore_3
      29: invokevirtual #188                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      32: aload_3
      33: invokevirtual #194                // Method scalaz/TagKind.unwrap:(Ljava/lang/Object;)Ljava/lang/Object;
      36: aconst_null
      37: astore_3
      38: checkcast     #196                // class scala/math/BigDecimal
      41: invokevirtual #205                // Method scala/math/BigDecimal.$times:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
      44: astore        4
      46: ifnonnull     51
      49: aconst_null
      50: athrow
      51: getstatic     #184                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      54: invokevirtual #188                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      57: aload         4
      59: invokevirtual #207                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      62: areturn

  public java.lang.Object zero();
    Code:
       0: getstatic     #175                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #179                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #215                // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
       9: iconst_1
      10: invokevirtual #219                // Method scala/math/BigDecimal$.int2bigDecimal:(I)Lscala/math/BigDecimal;
      13: astore_1
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: getstatic     #184                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      22: invokevirtual #188                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      25: aload_1
      26: invokevirtual #207                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      29: areturn

  public scalaz.std.math.BigDecimalInstances$$anon$2(scalaz.std.math.BigDecimalInstances);
    Code:
       0: aload_0
       1: invokespecial #225                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #229                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
       8: aload_0
       9: invokestatic  #232                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      12: invokestatic  #237                // Method scala/runtime/Statics.releaseFence:()V
      15: return
}
