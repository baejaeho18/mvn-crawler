Compiled from "OrderingInstances.scala"
public final class scalaz.std.math.OrderingInstances$$anon$1$$anonfun$append$2 implements scala.math.Ordering<A> {
  private static final long serialVersionUID;

  private final scalaz.std.math.OrderingInstances$$anon$1 $outer;

  private final scala.math.Ordering f1$1;

  private final scala.Function0 f2$1;

  public scala.Some<java.lang.Object> tryCompare(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #35                 // InterfaceMethod scala/math/Ordering.tryCompare$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public boolean lteq(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #45                 // InterfaceMethod scala/math/Ordering.lteq$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gteq(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #49                 // InterfaceMethod scala/math/Ordering.gteq$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lt(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #53                 // InterfaceMethod scala/math/Ordering.lt$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gt(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #57                 // InterfaceMethod scala/math/Ordering.gt$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean equiv(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #61                 // InterfaceMethod scala/math/Ordering.equiv$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public <U extends A> U max(U, U);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #68                 // InterfaceMethod scala/math/Ordering.max$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public <U extends A> U min(U, U);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #72                 // InterfaceMethod scala/math/Ordering.min$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.math.Ordering<A> reverse();
    Code:
       0: aload_0
       1: invokestatic  #79                 // InterfaceMethod scala/math/Ordering.reverse$:(Lscala/math/Ordering;)Lscala/math/Ordering;
       4: areturn

  public boolean isReverseOf(scala.math.Ordering<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #87                 // InterfaceMethod scala/math/Ordering.isReverseOf$:(Lscala/math/Ordering;Lscala/math/Ordering;)Z
       5: ireturn

  public <U> scala.math.Ordering<U> on(scala.Function1<U, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #95                 // InterfaceMethod scala/math/Ordering.on$:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
       5: areturn

  public scala.math.Ordering<A> orElse(scala.math.Ordering<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #102                // InterfaceMethod scala/math/Ordering.orElse$:(Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
       5: areturn

  public <S> scala.math.Ordering<A> orElseBy(scala.Function1<A, S>, scala.math.Ordering<S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #110                // InterfaceMethod scala/math/Ordering.orElseBy$:(Lscala/math/Ordering;Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
       6: areturn

  public scala.math.Ordering<A>.OrderingOps mkOrderingOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #118                // InterfaceMethod scala/math/Ordering.mkOrderingOps$:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$OrderingOps;
       5: areturn

  public final int compare(A, A);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: getfield      #123                // Field f1$1:Lscala/math/Ordering;
       6: aload_0
       7: getfield      #125                // Field f2$1:Lscala/Function0;
      10: invokestatic  #129                // Method scalaz/std/math/OrderingInstances$$anon$1.scalaz$std$math$OrderingInstances$$nestedInanon$1$$$anonfun$append$1:(Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Ordering;Lscala/Function0;)I
      13: ireturn

  public scala.math.PartialOrdering reverse();
    Code:
       0: aload_0
       1: invokevirtual #132                // Method reverse:()Lscala/math/Ordering;
       4: areturn

  public scala.Option tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #135                // Method tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public scalaz.std.math.OrderingInstances$$anon$1$$anonfun$append$2(scalaz.std.math.OrderingInstances$$anon$1, scala.math.Ordering, scala.Function0);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #139                // Field $outer:Lscalaz/std/math/OrderingInstances$$anon$1;
      11: aload_0
      12: aload_2
      13: putfield      #123                // Field f1$1:Lscala/math/Ordering;
      16: aload_0
      17: aload_3
      18: putfield      #125                // Field f2$1:Lscala/Function0;
      21: aload_0
      22: invokespecial #142                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #148                // InterfaceMethod scala/math/PartialOrdering.$init$:(Lscala/math/PartialOrdering;)V
      29: aload_0
      30: invokestatic  #151                // InterfaceMethod scala/math/Ordering.$init$:(Lscala/math/Ordering;)V
      33: return
}
