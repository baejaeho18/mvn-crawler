Compiled from "AnyVal.scala"
public final class scalaz.std.AnyValInstances$$anon$7 implements scalaz.Monoid<java.lang.Object>, scalaz.Enum<java.lang.Object> {
  private scalaz.syntax.EnumSyntax<java.lang.Object> enumSyntax;

  private scalaz.syntax.OrderSyntax<java.lang.Object> orderSyntax;

  private scalaz.syntax.EqualSyntax<java.lang.Object> equalSyntax;

  private scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax;

  private scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax;

  private final scalaz.std.AnyValInstances $outer;

  public scalaz.Kleisli<scala.Option, java.lang.Object, java.lang.Object> succx();
    Code:
       0: aload_0
       1: invokestatic  #62                 // InterfaceMethod scalaz/Enum.succx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public scalaz.Kleisli<scala.Option, java.lang.Object, java.lang.Object> predx();
    Code:
       0: aload_0
       1: invokestatic  #68                 // InterfaceMethod scalaz/Enum.predx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public <X> scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, X> succState(scala.Function1<java.lang.Object, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #76                 // InterfaceMethod scalaz/Enum.succState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y succStateZeroM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #86                 // InterfaceMethod scalaz/Enum.succStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y succStateZero(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #92                 // InterfaceMethod scalaz/Enum.succStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> succStateMinM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #99                 // InterfaceMethod scalaz/Enum.succStateMinM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> succStateMin(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #104                // InterfaceMethod scalaz/Enum.succStateMin$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X> scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, X> predState(scala.Function1<java.lang.Object, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #108                // InterfaceMethod scalaz/Enum.predState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y predStateZeroM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #112                // InterfaceMethod scalaz/Enum.predStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y predStateZero(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #116                // InterfaceMethod scalaz/Enum.predStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> predStateMaxM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #120                // InterfaceMethod scalaz/Enum.predStateMaxM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> predStateMax(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #124                // InterfaceMethod scalaz/Enum.predStateMax$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> from(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #132                // InterfaceMethod scalaz/Enum.from$:(Lscalaz/Enum;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromStep(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #141                // InterfaceMethod scalaz/Enum.fromStep$:(Lscalaz/Enum;ILjava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromTo(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #150                // InterfaceMethod scalaz/Enum.fromTo$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.IList<java.lang.Object> fromToL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #157                // InterfaceMethod scalaz/Enum.fromToL$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromStepTo(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #164                // InterfaceMethod scalaz/Enum.fromStepTo$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       7: areturn

  public scalaz.IList<java.lang.Object> fromStepToL(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #171                // InterfaceMethod scalaz/Enum.fromStepToL$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       7: areturn

  public scalaz.Enum<java.lang.Object>.EnumLaw enumLaw();
    Code:
       0: aload_0
       1: invokestatic  #178                // InterfaceMethod scalaz/Enum.enumLaw$:(Lscalaz/Enum;)Lscalaz/Enum$EnumLaw;
       4: areturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #186                // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #192                // InterfaceMethod scalaz/Order.equal$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #196                // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #200                // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #204                // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #208                // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #214                // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #218                // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<java.lang.Object, java.lang.Object> sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #225                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #232                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<java.lang.Object> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #239                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<java.lang.Object> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #246                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<java.lang.Object>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #253                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public scalaz.Equal<java.lang.Object>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #260                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #267                // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #275                // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final <B> B ifEmpty(java.lang.Object, scala.Function0<B>, scala.Function0<B>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #284                // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final <B> B onNotEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #294                // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final <A, B> B onEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #299                // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public <S> java.lang.Object unfoldlSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #307                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <S> java.lang.Object unfoldrSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #312                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #319                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #326                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<java.lang.Object>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #333                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #338                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #345                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #350                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #357                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #362                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<java.lang.Object>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #369                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.EnumSyntax<java.lang.Object> enumSyntax();
    Code:
       0: aload_0
       1: getfield      #373                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       4: areturn

  public void scalaz$Enum$_setter_$enumSyntax_$eq(scalaz.syntax.EnumSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #373                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       5: return

  public scalaz.syntax.OrderSyntax<java.lang.Object> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #381                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #381                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<java.lang.Object> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #388                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #388                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #395                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #395                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #402                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #402                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public java.lang.Object append(java.lang.Object, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #416                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #420                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #425                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       9: invokevirtual #428                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      12: aload_1
      13: invokevirtual #434                // Method scalaz/TagKind.unwrap$mCc$sp:(Ljava/lang/Object;)C
      16: getstatic     #425                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      19: aload_2
      20: invokeinterface #439,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      25: astore_3
      26: invokevirtual #428                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      29: aload_3
      30: invokevirtual #434                // Method scalaz/TagKind.unwrap$mCc$sp:(Ljava/lang/Object;)C
      33: aconst_null
      34: astore_3
      35: imul
      36: i2c
      37: invokestatic  #445                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
      40: astore        4
      42: ifnonnull     47
      45: aconst_null
      46: athrow
      47: getstatic     #425                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      50: invokevirtual #428                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      53: aload         4
      55: invokevirtual #448                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      58: areturn

  public java.lang.Object zero();
    Code:
       0: getstatic     #416                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #420                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: iconst_1
       7: invokestatic  #445                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
      10: astore_1
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: getstatic     #425                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      19: invokevirtual #428                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      22: aload_1
      23: invokevirtual #448                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: areturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #461                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: pop
       4: aload_0
       5: getfield      #463                // Field $outer:Lscalaz/std/AnyValInstances;
       8: invokeinterface #467,  1          // InterfaceMethod scalaz/std/AnyValInstances.char:()Lscalaz/Monoid;
      13: checkcast     #27                 // class scalaz/Order
      16: getstatic     #425                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      19: invokevirtual #428                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      22: aload_1
      23: invokevirtual #434                // Method scalaz/TagKind.unwrap$mCc$sp:(Ljava/lang/Object;)C
      26: invokestatic  #445                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
      29: getstatic     #425                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      32: invokevirtual #428                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      35: aload_2
      36: invokevirtual #434                // Method scalaz/TagKind.unwrap$mCc$sp:(Ljava/lang/Object;)C
      39: invokestatic  #445                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
      42: invokeinterface #469,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      47: areturn

  public java.lang.Object succ(java.lang.Object);
    Code:
       0: getstatic     #416                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #420                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #476                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #463                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #467,  1          // InterfaceMethod scalaz/std/AnyValInstances.char:()Lscalaz/Monoid;
      19: checkcast     #9                  // class scalaz/Enum
      22: getstatic     #425                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      25: invokevirtual #428                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      28: aload_1
      29: invokevirtual #434                // Method scalaz/TagKind.unwrap$mCc$sp:(Ljava/lang/Object;)C
      32: invokestatic  #445                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
      35: invokeinterface #478,  2          // InterfaceMethod scalaz/Enum.succ:(Ljava/lang/Object;)Ljava/lang/Object;
      40: astore_2
      41: ifnonnull     46
      44: aconst_null
      45: athrow
      46: getstatic     #425                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      49: invokevirtual #428                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      52: aload_2
      53: invokevirtual #448                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      56: areturn

  public java.lang.Object pred(java.lang.Object);
    Code:
       0: getstatic     #416                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #420                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #476                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #463                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #467,  1          // InterfaceMethod scalaz/std/AnyValInstances.char:()Lscalaz/Monoid;
      19: checkcast     #9                  // class scalaz/Enum
      22: getstatic     #425                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      25: invokevirtual #428                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      28: aload_1
      29: invokevirtual #434                // Method scalaz/TagKind.unwrap$mCc$sp:(Ljava/lang/Object;)C
      32: invokestatic  #445                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
      35: invokeinterface #481,  2          // InterfaceMethod scalaz/Enum.pred:(Ljava/lang/Object;)Ljava/lang/Object;
      40: astore_2
      41: ifnonnull     46
      44: aconst_null
      45: athrow
      46: getstatic     #425                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      49: invokevirtual #428                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      52: aload_2
      53: invokevirtual #448                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      56: areturn

  public java.lang.Object succn(int, java.lang.Object);
    Code:
       0: getstatic     #416                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #420                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #476                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #463                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #467,  1          // InterfaceMethod scalaz/std/AnyValInstances.char:()Lscalaz/Monoid;
      19: checkcast     #9                  // class scalaz/Enum
      22: iload_1
      23: getstatic     #425                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      26: invokevirtual #428                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      29: aload_2
      30: invokevirtual #434                // Method scalaz/TagKind.unwrap$mCc$sp:(Ljava/lang/Object;)C
      33: invokestatic  #445                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
      36: invokeinterface #485,  3          // InterfaceMethod scalaz/Enum.succn:(ILjava/lang/Object;)Ljava/lang/Object;
      41: astore_3
      42: ifnonnull     47
      45: aconst_null
      46: athrow
      47: getstatic     #425                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      50: invokevirtual #428                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      53: aload_3
      54: invokevirtual #448                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      57: areturn

  public java.lang.Object predn(int, java.lang.Object);
    Code:
       0: getstatic     #416                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #420                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #476                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #463                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #467,  1          // InterfaceMethod scalaz/std/AnyValInstances.char:()Lscalaz/Monoid;
      19: checkcast     #9                  // class scalaz/Enum
      22: iload_1
      23: getstatic     #425                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      26: invokevirtual #428                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      29: aload_2
      30: invokevirtual #434                // Method scalaz/TagKind.unwrap$mCc$sp:(Ljava/lang/Object;)C
      33: invokestatic  #445                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
      36: invokeinterface #488,  3          // InterfaceMethod scalaz/Enum.predn:(ILjava/lang/Object;)Ljava/lang/Object;
      41: astore_3
      42: ifnonnull     47
      45: aconst_null
      46: athrow
      47: getstatic     #425                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      50: invokevirtual #428                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      53: aload_3
      54: invokevirtual #448                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      57: areturn

  public scala.Option<java.lang.Object> min();
    Code:
       0: getstatic     #416                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #420                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #476                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #463                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #467,  1          // InterfaceMethod scalaz/std/AnyValInstances.char:()Lscalaz/Monoid;
      19: checkcast     #9                  // class scalaz/Enum
      22: invokeinterface #492,  1          // InterfaceMethod scalaz/Enum.min:()Lscala/Option;
      27: astore_1
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: getstatic     #425                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      36: invokevirtual #428                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      39: aload_1
      40: invokevirtual #495                // Method scalaz/TagKind.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #497                // class scala/Option
      46: areturn

  public scala.Option<java.lang.Object> max();
    Code:
       0: getstatic     #416                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #420                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #476                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: pop
      10: aload_0
      11: getfield      #463                // Field $outer:Lscalaz/std/AnyValInstances;
      14: invokeinterface #467,  1          // InterfaceMethod scalaz/std/AnyValInstances.char:()Lscalaz/Monoid;
      19: checkcast     #9                  // class scalaz/Enum
      22: invokeinterface #500,  1          // InterfaceMethod scalaz/Enum.max:()Lscala/Option;
      27: astore_1
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: getstatic     #425                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      36: invokevirtual #428                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      39: aload_1
      40: invokevirtual #495                // Method scalaz/TagKind.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #497                // class scala/Option
      46: areturn

  public boolean equalIsNatural();
    Code:
       0: iconst_1
       1: ireturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #505                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scalaz.std.AnyValInstances$$anon$7(scalaz.std.AnyValInstances);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #463                // Field $outer:Lscalaz/std/AnyValInstances;
      11: aload_0
      12: invokespecial #510                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #514                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      19: aload_0
      20: invokestatic  #517                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      23: aload_0
      24: invokestatic  #520                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      27: aload_0
      28: invokestatic  #523                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      31: aload_0
      32: invokestatic  #526                // InterfaceMethod scalaz/Enum.$init$:(Lscalaz/Enum;)V
      35: invokestatic  #531                // Method scala/runtime/Statics.releaseFence:()V
      38: return
}
