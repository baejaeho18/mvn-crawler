Compiled from "Vector.scala"
public interface scalaz.std.VectorFunctions {
  public static scala.collection.immutable.Vector empty$(scalaz.std.VectorFunctions);
    Code:
       0: aload_0
       1: invokespecial #43                 // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
       4: areturn

  public default <A> scala.collection.immutable.Vector<A> empty();
    Code:
       0: getstatic     #51                 // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #55                 // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
       6: invokevirtual #58                 // Method scala/collection/immutable/Vector$.empty:()Lscala/collection/immutable/Vector;
       9: areturn

  private <A, B> B lazyFoldRight(scala.collection.immutable.Vector<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: iconst_m1
       1: istore        4
       3: iload         4
       5: aload_1
       6: invokevirtual #71                 // Method scala/collection/immutable/Vector.length:()I
       9: iconst_1
      10: isub
      11: if_icmplt     21
      14: aload_2
      15: invokeinterface #77,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      20: areturn
      21: aload_3
      22: aload_1
      23: iload         4
      25: iconst_1
      26: iadd
      27: invokevirtual #80                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      30: iload         4
      32: aload_1
      33: aload_2
      34: aload_3
      35: invokedynamic #97,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      40: invokeinterface #102,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: areturn

  public static scala.collection.immutable.Vector intersperse$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #114                // InterfaceMethod intersperse:(Lscala/collection/immutable/Vector;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       6: areturn

  public default <A> scala.collection.immutable.Vector<A> intersperse(scala.collection.immutable.Vector<A>, A);
    Code:
       0: aload_1
       1: invokevirtual #120                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          14
       7: aload_0
       8: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      13: areturn
      14: aload_1
      15: invokevirtual #123                // Method scala/collection/immutable/Vector.init:()Lscala/collection/immutable/Vector;
      18: aload_1
      19: invokevirtual #126                // Method scala/collection/immutable/Vector.last:()Ljava/lang/Object;
      22: astore_3
      23: aload_0
      24: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      29: aload_3
      30: invokevirtual #130                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
      33: aload_2
      34: invokedynamic #142,  0            // InvokeDynamic #1:apply:(Ljava/lang/Object;)Lscala/Function2;
      39: invokevirtual #146                // Method scala/collection/immutable/Vector.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      42: checkcast     #67                 // class scala/collection/immutable/Vector
      45: areturn

  public static scalaz.Maybe toNel$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #152                // InterfaceMethod toNel:(Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
       5: areturn

  public default <A> scalaz.Maybe<scalaz.NonEmptyList<A>> toNel(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_1
       1: invokevirtual #120                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          18
       7: getstatic     #158                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      10: pop
      11: getstatic     #161                // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      14: invokevirtual #164                // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      17: areturn
      18: getstatic     #158                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      21: pop
      22: getstatic     #169                // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      25: pop
      26: aload_1
      27: invokevirtual #172                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      30: getstatic     #177                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      33: aload_1
      34: invokevirtual #180                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      37: getstatic     #185                // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      40: invokevirtual #189                // Method scalaz/std/vector$.vectorInstance:()Lscalaz/Traverse;
      43: invokevirtual #193                // Method scalaz/IList$.fromFoldable:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/IList;
      46: astore_3
      47: astore_2
      48: new           #195                // class scalaz/NonEmptyList
      51: dup
      52: aload_2
      53: aload_3
      54: invokespecial #199                // Method scalaz/NonEmptyList."<init>":(Ljava/lang/Object;Lscalaz/IList;)V
      57: aconst_null
      58: astore_2
      59: aconst_null
      60: astore_3
      61: astore        4
      63: new           #33                 // class scalaz/Maybe$Just
      66: dup
      67: aload         4
      69: invokespecial #202                // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      72: areturn

  public static scalaz.Maybe toZipper$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #210                // InterfaceMethod toZipper:(Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
       5: areturn

  public default <A> scalaz.Maybe<scalaz.Zipper<A>> toZipper(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #216                // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: aload_1
       4: getstatic     #221                // Field scala/collection/IterableFactory$.MODULE$:Lscala/collection/IterableFactory$;
       7: getstatic     #51                 // Field scala/package$.MODULE$:Lscala/package$;
      10: invokevirtual #225                // Method scala/package$.LazyList:()Lscala/collection/immutable/LazyList$;
      13: invokevirtual #229                // Method scala/collection/IterableFactory$.toFactory:(Lscala/collection/IterableFactory;)Lscala/collection/Factory;
      16: invokevirtual #233                // Method scala/collection/immutable/Vector.to:(Lscala/collection/Factory;)Ljava/lang/Object;
      19: checkcast     #235                // class scala/collection/immutable/LazyList
      22: invokestatic  #240                // InterfaceMethod scalaz/std/LazyListFunctions.toZipper$:(Lscalaz/std/LazyListFunctions;Lscala/collection/immutable/LazyList;)Lscalaz/Maybe;
      25: areturn

  public static scalaz.Maybe zipperEnd$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #244                // InterfaceMethod zipperEnd:(Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
       5: areturn

  public default <A> scalaz.Maybe<scalaz.Zipper<A>> zipperEnd(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #216                // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       3: aload_1
       4: getstatic     #221                // Field scala/collection/IterableFactory$.MODULE$:Lscala/collection/IterableFactory$;
       7: getstatic     #51                 // Field scala/package$.MODULE$:Lscala/package$;
      10: invokevirtual #225                // Method scala/package$.LazyList:()Lscala/collection/immutable/LazyList$;
      13: invokevirtual #229                // Method scala/collection/IterableFactory$.toFactory:(Lscala/collection/IterableFactory;)Lscala/collection/Factory;
      16: invokevirtual #233                // Method scala/collection/immutable/Vector.to:(Lscala/collection/Factory;)Ljava/lang/Object;
      19: checkcast     #235                // class scala/collection/immutable/LazyList
      22: invokestatic  #246                // InterfaceMethod scalaz/std/LazyListFunctions.zipperEnd$:(Lscalaz/std/LazyListFunctions;Lscala/collection/immutable/LazyList;)Lscalaz/Maybe;
      25: areturn

  public static java.lang.Object $less$up$greater$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #253                // InterfaceMethod $less$up$greater:(Lscala/collection/immutable/Vector;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B $less$up$greater(scala.collection.immutable.Vector<A>, scala.Function1<scalaz.NonEmptyList<A>, B>, scalaz.Monoid<B>);
    Code:
       0: aload_1
       1: invokevirtual #120                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          18
       7: getstatic     #261                // Field scalaz/Monoid$.MODULE$:Lscalaz/Monoid$;
      10: pop
      11: aload_3
      12: invokeinterface #266,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      17: areturn
      18: aload_2
      19: getstatic     #169                // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      22: pop
      23: aload_1
      24: invokevirtual #172                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      27: getstatic     #177                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      30: aload_1
      31: invokevirtual #180                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      34: getstatic     #185                // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      37: invokevirtual #189                // Method scalaz/std/vector$.vectorInstance:()Lscalaz/Traverse;
      40: invokevirtual #193                // Method scalaz/IList$.fromFoldable:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/IList;
      43: astore        5
      45: astore        4
      47: new           #195                // class scalaz/NonEmptyList
      50: dup
      51: aload         4
      53: aload         5
      55: invokespecial #199                // Method scalaz/NonEmptyList."<init>":(Ljava/lang/Object;Lscalaz/IList;)V
      58: aconst_null
      59: astore        4
      61: aconst_null
      62: astore        5
      64: invokeinterface #270,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      69: areturn

  public static java.lang.Object takeWhileM$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #278                // InterfaceMethod takeWhileM:(Lscala/collection/immutable/Vector;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public default <A, M> M takeWhileM(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_0
       1: aload_3
       2: invokedynamic #288,  0            // InvokeDynamic #2:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
       7: aload_0
       8: aload_3
       9: aload_2
      10: invokedynamic #298,  0            // InvokeDynamic #3:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      15: astore        5
      17: astore        4
      19: iconst_m1
      20: istore        6
      22: iload         6
      24: aload_1
      25: invokevirtual #71                 // Method scala/collection/immutable/Vector.length:()I
      28: iconst_1
      29: isub
      30: if_icmplt     39
      33: aload_0
      34: aload_3
      35: invokestatic  #284                // InterfaceMethod $anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      38: areturn
      39: aload_1
      40: iload         6
      42: iconst_1
      43: iadd
      44: invokevirtual #80                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      47: iload         6
      49: aload_1
      50: aload         4
      52: aload         5
      54: invokedynamic #97,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      59: astore        8
      61: astore        7
      63: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      66: pop
      67: aload_3
      68: aload_2
      69: aload         7
      71: invokeinterface #270,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      76: aload_0
      77: aload_3
      78: aload         8
      80: aload         7
      82: invokedynamic #312,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
      87: invokeinterface #318,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      92: areturn

  public static java.lang.Object takeUntilM$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #326                // InterfaceMethod takeUntilM:(Lscala/collection/immutable/Vector;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public default <A, M> M takeUntilM(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_3
       1: aload_2
       2: invokedynamic #334,  0            // InvokeDynamic #5:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
       7: astore        4
       9: aload_0
      10: aload_3
      11: invokedynamic #288,  0            // InvokeDynamic #2:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      16: aload_0
      17: aload_3
      18: aload         4
      20: invokedynamic #298,  0            // InvokeDynamic #3:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      25: astore        6
      27: astore        5
      29: iconst_m1
      30: istore        7
      32: iload         7
      34: aload_1
      35: invokevirtual #71                 // Method scala/collection/immutable/Vector.length:()I
      38: iconst_1
      39: isub
      40: if_icmplt     49
      43: aload_0
      44: aload_3
      45: invokestatic  #284                // InterfaceMethod $anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      48: areturn
      49: aload_1
      50: iload         7
      52: iconst_1
      53: iadd
      54: invokevirtual #80                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      57: iload         7
      59: aload_1
      60: aload         5
      62: aload         6
      64: invokedynamic #97,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      69: astore        9
      71: astore        8
      73: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      76: pop
      77: aload_3
      78: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      81: pop
      82: aload_3
      83: aload_2
      84: aload         8
      86: invokeinterface #270,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      91: invokedynamic #341,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
      96: invokeinterface #344,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     101: aload_0
     102: aload_3
     103: aload         9
     105: aload         8
     107: invokedynamic #312,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
     112: invokeinterface #318,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     117: areturn

  public static java.lang.Object filterM$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #355                // InterfaceMethod filterM:(Lscala/collection/immutable/Vector;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public default <A, M> M filterM(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: aload_0
       1: aload_3
       2: invokedynamic #365,  0            // InvokeDynamic #7:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
       7: aload_3
       8: aload_2
       9: invokedynamic #373,  0            // InvokeDynamic #8:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      14: astore        5
      16: astore        4
      18: iconst_m1
      19: istore        6
      21: iload         6
      23: aload_1
      24: invokevirtual #71                 // Method scala/collection/immutable/Vector.length:()I
      27: iconst_1
      28: isub
      29: if_icmplt     38
      32: aload_0
      33: aload_3
      34: invokestatic  #361                // InterfaceMethod $anonfun$filterM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      37: areturn
      38: aload_1
      39: iload         6
      41: iconst_1
      42: iadd
      43: invokevirtual #80                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      46: iload         6
      48: aload_1
      49: aload         4
      51: aload         5
      53: invokedynamic #97,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      58: astore        8
      60: astore        7
      62: aload_3
      63: aload         8
      65: aload_3
      66: aload_2
      67: aload         7
      69: invokedynamic #381,  0            // InvokeDynamic #9:apply:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      74: invokeinterface #387,  3          // InterfaceMethod scalaz/Applicative.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      79: areturn

  public static java.lang.Object findM$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #392                // InterfaceMethod findM:(Lscala/collection/immutable/Vector;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public default <A, M> M findM(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_3
       1: invokedynamic #400,  0            // InvokeDynamic #10:apply:(Lscalaz/Monad;)Lscala/Function0;
       6: aload_3
       7: aload_2
       8: invokedynamic #408,  0            // InvokeDynamic #11:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      13: astore        5
      15: astore        4
      17: iconst_m1
      18: istore        6
      20: iload         6
      22: aload_1
      23: invokevirtual #71                 // Method scala/collection/immutable/Vector.length:()I
      26: iconst_1
      27: isub
      28: if_icmplt     36
      31: aload_3
      32: invokestatic  #396                // InterfaceMethod $anonfun$findM$1:(Lscalaz/Monad;)Ljava/lang/Object;
      35: areturn
      36: aload_1
      37: iload         6
      39: iconst_1
      40: iadd
      41: invokevirtual #80                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      44: iload         6
      46: aload_1
      47: aload         4
      49: aload         5
      51: invokedynamic #97,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      56: astore        8
      58: astore        7
      60: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      63: pop
      64: aload_3
      65: aload_2
      66: aload         7
      68: invokeinterface #270,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      73: aload_3
      74: aload         7
      76: aload         8
      78: invokedynamic #416,  0            // InvokeDynamic #12:apply:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Lscala/Function1;
      83: invokeinterface #318,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      88: areturn

  public static scala.collection.immutable.Vector powerset$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #422                // InterfaceMethod powerset:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       5: areturn

  public default <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> powerset(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_0
       1: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
       6: iconst_1
       7: invokestatic  #429                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: invokevirtual #432                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #434                // class scala/collection/SeqOps
      16: iconst_0
      17: invokestatic  #429                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      20: invokeinterface #435,  2          // InterfaceMethod scala/collection/SeqOps.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #67                 // class scala/collection/immutable/Vector
      28: invokedynamic #444,  0            // InvokeDynamic #13:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
      33: getstatic     #185                // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      36: invokevirtual #189                // Method scalaz/std/vector$.vectorInstance:()Lscalaz/Traverse;
      39: checkcast     #383                // class scalaz/Applicative
      42: astore_3
      43: astore_2
      44: aload_0
      45: aload_3
      46: invokedynamic #365,  0            // InvokeDynamic #7:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
      51: aload_3
      52: aload_2
      53: invokedynamic #373,  0            // InvokeDynamic #8:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      58: astore        5
      60: astore        4
      62: iconst_m1
      63: istore        6
      65: iload         6
      67: aload_1
      68: invokevirtual #71                 // Method scala/collection/immutable/Vector.length:()I
      71: iconst_1
      72: isub
      73: if_icmplt     84
      76: aload_0
      77: aload_3
      78: invokestatic  #361                // InterfaceMethod $anonfun$filterM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      81: goto          125
      84: aload_1
      85: iload         6
      87: iconst_1
      88: iadd
      89: invokevirtual #80                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      92: iload         6
      94: aload_1
      95: aload         4
      97: aload         5
      99: invokedynamic #97,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     104: astore        8
     106: astore        7
     108: aload_3
     109: aload         8
     111: aload_3
     112: aload_2
     113: aload         7
     115: invokedynamic #381,  0            // InvokeDynamic #9:apply:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
     120: invokeinterface #387,  3          // InterfaceMethod scalaz/Applicative.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
     125: checkcast     #67                 // class scala/collection/immutable/Vector
     128: areturn

  public static java.lang.Object partitionM$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #453                // InterfaceMethod partitionM:(Lscala/collection/immutable/Vector;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public default <A, M> M partitionM(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: aload_0
       1: aload_3
       2: invokedynamic #458,  0            // InvokeDynamic #14:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
       7: aload_3
       8: aload_2
       9: invokedynamic #463,  0            // InvokeDynamic #15:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      14: astore        5
      16: astore        4
      18: iconst_m1
      19: istore        6
      21: iload         6
      23: aload_1
      24: invokevirtual #71                 // Method scala/collection/immutable/Vector.length:()I
      27: iconst_1
      28: isub
      29: if_icmplt     38
      32: aload_0
      33: aload_3
      34: invokestatic  #456                // InterfaceMethod $anonfun$partitionM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      37: areturn
      38: aload_1
      39: iload         6
      41: iconst_1
      42: iadd
      43: invokevirtual #80                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      46: iload         6
      48: aload_1
      49: aload         4
      51: aload         5
      53: invokedynamic #97,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      58: astore        8
      60: astore        7
      62: aload_3
      63: aload         8
      65: aload_3
      66: aload_2
      67: aload         7
      69: invokedynamic #468,  0            // InvokeDynamic #16:apply:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      74: invokeinterface #387,  3          // InterfaceMethod scalaz/Applicative.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      79: areturn

  public static java.lang.Object spanM$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #473                // InterfaceMethod spanM:(Lscala/collection/immutable/Vector;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public default <A, M> M spanM(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: pop
       4: aload_3
       5: aload_0
       6: aload_3
       7: invokedynamic #288,  0            // InvokeDynamic #2:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      12: aload_0
      13: aload_3
      14: aload_2
      15: invokedynamic #298,  0            // InvokeDynamic #3:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      20: astore        5
      22: astore        4
      24: iconst_m1
      25: istore        6
      27: iload         6
      29: aload_1
      30: invokevirtual #71                 // Method scala/collection/immutable/Vector.length:()I
      33: iconst_1
      34: isub
      35: if_icmplt     46
      38: aload_0
      39: aload_3
      40: invokestatic  #284                // InterfaceMethod $anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      43: goto          99
      46: aload_1
      47: iload         6
      49: iconst_1
      50: iadd
      51: invokevirtual #80                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      54: iload         6
      56: aload_1
      57: aload         4
      59: aload         5
      61: invokedynamic #97,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      66: astore        8
      68: astore        7
      70: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      73: pop
      74: aload_3
      75: aload_2
      76: aload         7
      78: invokeinterface #270,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      83: aload_0
      84: aload_3
      85: aload         8
      87: aload         7
      89: invokedynamic #312,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
      94: invokeinterface #318,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      99: aconst_null
     100: astore        4
     102: aconst_null
     103: astore        5
     105: aload_1
     106: invokedynamic #481,  0            // InvokeDynamic #17:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     111: invokeinterface #344,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     116: areturn

  public static java.lang.Object breakM$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #486                // InterfaceMethod breakM:(Lscala/collection/immutable/Vector;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public default <A, M> M breakM(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_3
       1: aload_2
       2: invokedynamic #491,  0            // InvokeDynamic #18:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
       7: astore        4
       9: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      12: pop
      13: aload_3
      14: aload_0
      15: aload_3
      16: invokedynamic #288,  0            // InvokeDynamic #2:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      21: aload_0
      22: aload_3
      23: aload         4
      25: invokedynamic #298,  0            // InvokeDynamic #3:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      30: astore        6
      32: astore        5
      34: iconst_m1
      35: istore        7
      37: iload         7
      39: aload_1
      40: invokevirtual #71                 // Method scala/collection/immutable/Vector.length:()I
      43: iconst_1
      44: isub
      45: if_icmplt     56
      48: aload_0
      49: aload_3
      50: invokestatic  #284                // InterfaceMethod $anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      53: goto          124
      56: aload_1
      57: iload         7
      59: iconst_1
      60: iadd
      61: invokevirtual #80                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      64: iload         7
      66: aload_1
      67: aload         5
      69: aload         6
      71: invokedynamic #97,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      76: astore        9
      78: astore        8
      80: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      83: pop
      84: aload_3
      85: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      88: pop
      89: aload_3
      90: aload_2
      91: aload         8
      93: invokeinterface #270,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      98: invokedynamic #496,  0            // InvokeDynamic #19:apply:()Lscala/Function1;
     103: invokeinterface #344,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     108: aload_0
     109: aload_3
     110: aload         9
     112: aload         8
     114: invokedynamic #312,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
     119: invokeinterface #318,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     124: aconst_null
     125: astore        5
     127: aconst_null
     128: astore        6
     130: aload_1
     131: invokedynamic #481,  0            // InvokeDynamic #17:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     136: invokeinterface #344,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     141: areturn

  public static java.lang.Object groupWhenM$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #507                // InterfaceMethod groupWhenM:(Lscala/collection/immutable/Vector;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public default <A, M> M groupWhenM(scala.collection.immutable.Vector<A>, scala.Function2<A, A, M>, scalaz.Monad<M>);
    Code:
       0: aload_1
       1: invokevirtual #120                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          24
       7: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      10: pop
      11: aload_3
      12: aload_0
      13: invokedynamic #516,  0            // InvokeDynamic #20:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
      18: invokeinterface #520,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      23: areturn
      24: aload_3
      25: aload_2
      26: invokedynamic #530,  0            // InvokeDynamic #21:apply:(Lscalaz/Monad;Lscala/Function2;)Lscala/Function1;
      31: astore        4
      33: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      36: pop
      37: aload_3
      38: aload_1
      39: invokevirtual #180                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      42: getstatic     #535                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      45: pop
      46: new           #36                 // class scalaz/StateTInstances2$$anon$12
      49: dup
      50: aconst_null
      51: aload_3
      52: invokespecial #538                // Method scalaz/StateTInstances2$$anon$12."<init>":(Lscalaz/StateTInstances2;Lscalaz/Applicative;)V
      55: astore        6
      57: astore        5
      59: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      62: pop
      63: aload_0
      64: aload         6
      66: invokedynamic #288,  0            // InvokeDynamic #2:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      71: aload_0
      72: aload         6
      74: aload         4
      76: invokedynamic #298,  0            // InvokeDynamic #3:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      81: astore        8
      83: astore        7
      85: iconst_m1
      86: istore        9
      88: iload         9
      90: aload         5
      92: invokevirtual #71                 // Method scala/collection/immutable/Vector.length:()I
      95: iconst_1
      96: isub
      97: if_icmplt     109
     100: aload_0
     101: aload         6
     103: invokestatic  #284                // InterfaceMethod $anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
     106: goto          215
     109: aload         5
     111: iload         9
     113: iconst_1
     114: iadd
     115: invokevirtual #80                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
     118: iload         9
     120: aload         5
     122: aload         7
     124: aload         8
     126: invokedynamic #97,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     131: astore        15
     133: astore        14
     135: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
     138: pop
     139: getstatic     #543                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
     142: pop
     143: aload_3
     144: aload_2
     145: aload         14
     147: invokedynamic #551,  0            // InvokeDynamic #22:apply:(Lscalaz/Monad;Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
     152: astore        19
     154: getstatic     #535                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
     157: pop
     158: new           #25                 // class scalaz/IndexedStateT$Wrap
     161: dup
     162: aload         19
     164: invokespecial #554                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
     167: aconst_null
     168: astore        19
     170: aload_0
     171: aload         6
     173: aload         15
     175: aload         14
     177: invokedynamic #312,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
     182: astore        17
     184: astore        16
     186: aload         17
     188: invokedynamic #564,  0            // InvokeDynamic #23:apply:(Lscala/Function1;)Lscala/Function2;
     193: astore        18
     195: new           #20                 // class scalaz/IndexedStateT$FlatMap
     198: dup
     199: aload         16
     201: aload         18
     203: invokespecial #567                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
     206: aconst_null
     207: astore        18
     209: aconst_null
     210: astore        16
     212: aconst_null
     213: astore        17
     215: aconst_null
     216: astore        7
     218: aconst_null
     219: astore        8
     221: aload         5
     223: invokedynamic #481,  0            // InvokeDynamic #17:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     228: astore        10
     230: checkcast     #22                 // class scalaz/IndexedStateT
     233: astore        11
     235: aload         11
     237: aload         6
     239: invokeinterface #572,  1          // InterfaceMethod scalaz/StateTBind.F:()Lscalaz/Applicative;
     244: astore        12
     246: ifnonnull     251
     249: aconst_null
     250: athrow
     251: aload         12
     253: aload         10
     255: invokedynamic #580,  0            // InvokeDynamic #24:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
     260: invokedynamic #564,  0            // InvokeDynamic #23:apply:(Lscala/Function1;)Lscala/Function2;
     265: astore        13
     267: new           #20                 // class scalaz/IndexedStateT$FlatMap
     270: dup
     271: aload         11
     273: aload         13
     275: invokespecial #567                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
     278: aconst_null
     279: astore        13
     281: aconst_null
     282: astore        12
     284: aconst_null
     285: astore        11
     287: aconst_null
     288: astore        10
     290: aconst_null
     291: astore        5
     293: aconst_null
     294: astore        6
     296: aload_1
     297: invokevirtual #172                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     300: aload_3
     301: invokevirtual #584                // Method scalaz/IndexedStateT.eval:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
     304: aload_0
     305: aload_3
     306: aload_2
     307: aload_1
     308: invokedynamic #594,  0            // InvokeDynamic #25:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function2;Lscala/collection/immutable/Vector;)Lscala/Function1;
     313: invokeinterface #318,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     318: areturn

  public static scala.collection.immutable.Vector groupWhen$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #612                // InterfaceMethod groupWhen:(Lscala/collection/immutable/Vector;Lscala/Function2;)Lscala/collection/immutable/Vector;
       6: areturn

  public default <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> groupWhen(scala.collection.immutable.Vector<A>, scala.Function2<A, A, java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
       7: astore        4
       9: astore_3
      10: aload_3
      11: invokevirtual #120                // Method scala/collection/immutable/Vector.isEmpty:()Z
      14: ifeq          20
      17: aload         4
      19: areturn
      20: aload_3
      21: invokevirtual #180                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      24: aload_3
      25: invokevirtual #172                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      28: aload_0
      29: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      34: astore        9
      36: astore        8
      38: astore        7
      40: aload         7
      42: invokevirtual #120                // Method scala/collection/immutable/Vector.isEmpty:()Z
      45: ifeq          59
      48: aload         9
      50: aload_0
      51: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      56: goto          116
      59: aload         7
      61: invokevirtual #172                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      64: astore        10
      66: aload         7
      68: invokevirtual #180                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      71: astore        11
      73: aload_2
      74: aload         8
      76: aload         10
      78: invokeinterface #102,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: invokestatic  #617                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      86: ifeq          112
      89: aload         11
      91: aload         10
      93: aload         9
      95: aload         10
      97: invokevirtual #432                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
     100: checkcast     #67                 // class scala/collection/immutable/Vector
     103: astore        9
     105: astore        8
     107: astore        7
     109: goto          40
     112: aload         9
     114: aload         7
     116: aconst_null
     117: astore        7
     119: aconst_null
     120: astore        8
     122: aconst_null
     123: astore        9
     125: aconst_null
     126: astore        10
     128: aconst_null
     129: astore        11
     131: astore        12
     133: astore        5
     135: aload         12
     137: aload         4
     139: aload_3
     140: invokevirtual #172                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     143: astore        6
     145: aload         5
     147: aload         6
     149: invokevirtual #130                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
     152: invokevirtual #432                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
     155: checkcast     #67                 // class scala/collection/immutable/Vector
     158: astore        4
     160: astore_3
     161: goto          10

  public static scala.Tuple2 mapAccumLeft$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #632                // InterfaceMethod mapAccumLeft:(Lscala/collection/immutable/Vector;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public default <A, B, C> scala.Tuple2<C, scala.collection.immutable.Vector<B>> mapAccumLeft(scala.collection.immutable.Vector<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: aload_1
       1: new           #635                // class scala/Tuple2
       4: dup
       5: aload_2
       6: aload_0
       7: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      12: invokespecial #638                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      15: aload_3
      16: invokedynamic #648,  0            // InvokeDynamic #26:apply:(Lscala/Function2;)Lscala/Function2;
      21: invokevirtual #651                // Method scala/collection/immutable/Vector.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      24: checkcast     #635                // class scala/Tuple2
      27: areturn

  public static scala.Tuple2 mapAccumRight$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #655                // InterfaceMethod mapAccumRight:(Lscala/collection/immutable/Vector;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public default <A, B, C> scala.Tuple2<C, scala.collection.immutable.Vector<B>> mapAccumRight(scala.collection.immutable.Vector<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: aload_1
       1: new           #635                // class scala/Tuple2
       4: dup
       5: aload_2
       6: aload_0
       7: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      12: invokespecial #638                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      15: aload_3
      16: invokedynamic #663,  0            // InvokeDynamic #27:apply:(Lscala/Function2;)Lscala/Function2;
      21: invokevirtual #146                // Method scala/collection/immutable/Vector.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      24: checkcast     #635                // class scala/Tuple2
      27: areturn

  public static scala.collection.immutable.Vector tailz$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #667                // InterfaceMethod tailz:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       5: areturn

  public default <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> tailz(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_1
       1: invokevirtual #120                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          28
       7: aload_0
       8: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      13: astore_2
      14: aload_0
      15: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      20: aload_2
      21: invokevirtual #130                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #67                 // class scala/collection/immutable/Vector
      27: areturn
      28: aload_0
      29: aload_1
      30: invokevirtual #180                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      33: invokeinterface #667,  2          // InterfaceMethod tailz:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      38: aload_1
      39: invokevirtual #130                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #67                 // class scala/collection/immutable/Vector
      45: areturn

  public static scala.collection.immutable.Vector initz$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #671                // InterfaceMethod initz:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       5: areturn

  public default <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> initz(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
       7: aload_1
       8: invokespecial #675                // InterfaceMethod rec$3:(Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      11: areturn

  public static scala.collection.immutable.Vector allPairs$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #679                // InterfaceMethod allPairs:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       5: areturn

  public default <A> scala.collection.immutable.Vector<scala.Tuple2<A, A>> allPairs(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #667,  2          // InterfaceMethod tailz:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: invokevirtual #180                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      10: aload_1
      11: invokedynamic #686,  0            // InvokeDynamic #28:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
      16: invokevirtual #690                // Method scala/collection/immutable/Vector.flatMap:(Lscala/Function1;)Ljava/lang/Object;
      19: checkcast     #67                 // class scala/collection/immutable/Vector
      22: areturn

  public static scala.collection.immutable.Vector adjacentPairs$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #694                // InterfaceMethod adjacentPairs:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       5: areturn

  public default <A> scala.collection.immutable.Vector<scala.Tuple2<A, A>> adjacentPairs(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_1
       1: invokevirtual #120                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          14
       7: aload_0
       8: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      13: areturn
      14: aload_1
      15: aload_1
      16: invokevirtual #180                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      19: invokevirtual #698                // Method scala/collection/immutable/Vector.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
      22: checkcast     #67                 // class scala/collection/immutable/Vector
      25: areturn

  public static java.lang.Object $anonfun$lazyFoldRight$1(int, scala.collection.immutable.Vector, scala.Function0, scala.Function2);
    Code:
       0: iload_0
       1: iconst_1
       2: iadd
       3: aload_1
       4: aload_2
       5: aload_3
       6: invokestatic  #705                // InterfaceMethod rec$2:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  private static java.lang.Object rec$2(int, scala.collection.immutable.Vector, scala.Function0, scala.Function2);
    Code:
       0: iload_0
       1: aload_1
       2: invokevirtual #71                 // Method scala/collection/immutable/Vector.length:()I
       5: iconst_1
       6: isub
       7: if_icmplt     17
      10: aload_2
      11: invokeinterface #77,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: areturn
      17: aload_3
      18: aload_1
      19: iload_0
      20: iconst_1
      21: iadd
      22: invokevirtual #80                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      25: iload_0
      26: aload_1
      27: aload_2
      28: aload_3
      29: invokedynamic #97,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      34: invokeinterface #102,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: areturn

  public static scala.collection.immutable.Vector $anonfun$intersperse$1(java.lang.Object, java.lang.Object, scala.collection.immutable.Vector);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #130                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #434                // class scala/collection/SeqOps
       8: aload_1
       9: invokeinterface #710,  2          // InterfaceMethod scala/collection/SeqOps.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #67                 // class scala/collection/immutable/Vector
      17: areturn

  public static scala.collection.immutable.Vector $anonfun$takeWhileM$2(scalaz.std.VectorFunctions);
    Code:
       0: aload_0
       1: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
       6: areturn

  public static java.lang.Object $anonfun$takeWhileM$1(scalaz.std.VectorFunctions, scalaz.Monad);
    Code:
       0: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: pop
       4: aload_1
       5: aload_0
       6: invokedynamic #716,  0            // InvokeDynamic #29:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
      11: invokeinterface #520,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      16: areturn

  public static scala.collection.immutable.Vector $anonfun$takeWhileM$5(java.lang.Object, scala.collection.immutable.Vector);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #130                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #67                 // class scala/collection/immutable/Vector
       8: areturn

  public static scala.collection.immutable.Vector $anonfun$takeWhileM$6(scalaz.std.VectorFunctions);
    Code:
       0: aload_0
       1: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
       6: areturn

  public static java.lang.Object $anonfun$takeWhileM$4(scalaz.std.VectorFunctions, scalaz.Monad, scala.Function0, java.lang.Object, boolean);
    Code:
       0: iload         4
       2: ifeq          28
       5: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       8: pop
       9: aload_1
      10: aload_2
      11: invokeinterface #77,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: aload_3
      17: invokedynamic #729,  0            // InvokeDynamic #30:apply:(Ljava/lang/Object;)Lscala/Function1;
      22: invokeinterface #344,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      27: areturn
      28: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      31: pop
      32: aload_1
      33: aload_0
      34: invokedynamic #733,  0            // InvokeDynamic #31:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
      39: invokeinterface #520,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      44: areturn

  public static java.lang.Object $anonfun$takeWhileM$3(scalaz.std.VectorFunctions, scalaz.Monad, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: pop
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #270,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: aload_0
      13: aload_1
      14: aload         4
      16: aload_3
      17: invokedynamic #312,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
      22: invokeinterface #318,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      27: areturn

  public static boolean $anonfun$takeUntilM$2(boolean);
    Code:
       0: iload_0
       1: ifne          6
       4: iconst_1
       5: ireturn
       6: iconst_0
       7: ireturn

  public static java.lang.Object $anonfun$takeUntilM$1(scalaz.Monad, scala.Function1, java.lang.Object);
    Code:
       0: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: pop
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokeinterface #270,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: invokedynamic #341,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
      17: invokeinterface #344,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      22: areturn

  public static scala.collection.immutable.Vector $anonfun$filterM$2(scalaz.std.VectorFunctions);
    Code:
       0: aload_0
       1: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
       6: areturn

  public static java.lang.Object $anonfun$filterM$1(scalaz.std.VectorFunctions, scalaz.Applicative);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #745,  0            // InvokeDynamic #32:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
       7: invokeinterface #746,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static scala.collection.immutable.Vector $anonfun$filterM$6(boolean, java.lang.Object, scala.collection.immutable.Vector);
    Code:
       0: iload_0
       1: ifeq          13
       4: aload_2
       5: aload_1
       6: invokevirtual #130                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #67                 // class scala/collection/immutable/Vector
      12: areturn
      13: aload_2
      14: areturn

  public static scala.Function1 $anonfun$filterM$5(java.lang.Object, boolean);
    Code:
       0: iload_1
       1: aload_0
       2: invokedynamic #759,  0            // InvokeDynamic #33:apply:(ZLjava/lang/Object;)Lscala/Function1;
       7: areturn

  public static java.lang.Object $anonfun$filterM$4(scalaz.Applicative, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #270,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_2
       9: invokedynamic #767,  0            // InvokeDynamic #34:apply:(Ljava/lang/Object;)Lscala/Function1;
      14: invokeinterface #768,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      19: areturn

  public static java.lang.Object $anonfun$filterM$3(scalaz.Applicative, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_3
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokedynamic #381,  0            // InvokeDynamic #9:apply:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      10: invokeinterface #387,  3          // InterfaceMethod scalaz/Applicative.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      15: areturn

  public static scalaz.Maybe $anonfun$findM$2();
    Code:
       0: getstatic     #158                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #772                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
       6: areturn

  public static java.lang.Object $anonfun$findM$1(scalaz.Monad);
    Code:
       0: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: pop
       4: aload_0
       5: invokedynamic #780,  0            // InvokeDynamic #35:apply:()Lscala/Function0;
      10: invokeinterface #520,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      15: areturn

  public static scalaz.Maybe $anonfun$findM$5(java.lang.Object);
    Code:
       0: getstatic     #158                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #786                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
       7: areturn

  public static java.lang.Object $anonfun$findM$4(scalaz.Monad, java.lang.Object, scala.Function0, boolean);
    Code:
       0: iload_3
       1: ifeq          21
       4: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       7: pop
       8: aload_0
       9: aload_1
      10: invokedynamic #795,  0            // InvokeDynamic #36:apply:(Ljava/lang/Object;)Lscala/Function0;
      15: invokeinterface #520,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      20: areturn
      21: aload_2
      22: invokeinterface #77,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      27: areturn

  public static java.lang.Object $anonfun$findM$3(scalaz.Monad, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: pop
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokeinterface #270,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: aload_0
      13: aload_2
      14: aload_3
      15: invokedynamic #416,  0            // InvokeDynamic #12:apply:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Lscala/Function1;
      20: invokeinterface #318,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      25: areturn

  public static scala.collection.immutable.Vector $anonfun$powerset$1(scala.collection.immutable.Vector, java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static scala.Tuple2 $anonfun$partitionM$2(scalaz.std.VectorFunctions);
    Code:
       0: new           #635                // class scala/Tuple2
       3: dup
       4: aload_0
       5: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      10: aload_0
      11: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      16: invokespecial #638                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      19: areturn

  public static java.lang.Object $anonfun$partitionM$1(scalaz.std.VectorFunctions, scalaz.Applicative);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #807,  0            // InvokeDynamic #37:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
       7: invokeinterface #746,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static scala.Tuple2 $anonfun$partitionM$6(boolean, java.lang.Object, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        55
       4: aload_2
       5: invokevirtual #815                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: checkcast     #67                 // class scala/collection/immutable/Vector
      11: astore_3
      12: aload_2
      13: invokevirtual #818                // Method scala/Tuple2._2:()Ljava/lang/Object;
      16: checkcast     #67                 // class scala/collection/immutable/Vector
      19: astore        4
      21: iload_0
      22: ifeq          40
      25: new           #635                // class scala/Tuple2
      28: dup
      29: aload_3
      30: aload_1
      31: invokevirtual #130                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
      34: aload         4
      36: invokespecial #638                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      39: areturn
      40: new           #635                // class scala/Tuple2
      43: dup
      44: aload_3
      45: aload         4
      47: aload_1
      48: invokevirtual #130                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
      51: invokespecial #638                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      54: areturn
      55: new           #820                // class scala/MatchError
      58: dup
      59: aconst_null
      60: invokespecial #821                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      63: athrow

  public static scala.Function1 $anonfun$partitionM$5(java.lang.Object, boolean);
    Code:
       0: iload_1
       1: aload_0
       2: invokedynamic #831,  0            // InvokeDynamic #38:apply:(ZLjava/lang/Object;)Lscala/Function1;
       7: areturn

  public static java.lang.Object $anonfun$partitionM$4(scalaz.Applicative, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #270,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_2
       9: invokedynamic #837,  0            // InvokeDynamic #39:apply:(Ljava/lang/Object;)Lscala/Function1;
      14: invokeinterface #768,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      19: areturn

  public static java.lang.Object $anonfun$partitionM$3(scalaz.Applicative, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_3
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokedynamic #468,  0            // InvokeDynamic #16:apply:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      10: invokeinterface #387,  3          // InterfaceMethod scalaz/Applicative.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      15: areturn

  public static scala.Tuple2 $anonfun$spanM$1(scala.collection.immutable.Vector, scala.collection.immutable.Vector);
    Code:
       0: new           #635                // class scala/Tuple2
       3: dup
       4: aload_1
       5: aload_0
       6: aload_1
       7: invokevirtual #71                 // Method scala/collection/immutable/Vector.length:()I
      10: invokevirtual #843                // Method scala/collection/immutable/Vector.drop:(I)Lscala/collection/immutable/Vector;
      13: invokespecial #638                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      16: areturn

  public static boolean $anonfun$breakM$2(boolean);
    Code:
       0: iload_0
       1: ifne          6
       4: iconst_1
       5: ireturn
       6: iconst_0
       7: ireturn

  public static java.lang.Object $anonfun$breakM$1(scalaz.Monad, scala.Function1, java.lang.Object);
    Code:
       0: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: pop
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokeinterface #270,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: invokedynamic #496,  0            // InvokeDynamic #19:apply:()Lscala/Function1;
      17: invokeinterface #344,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      22: areturn

  public static scala.collection.immutable.Vector $anonfun$groupWhenM$1(scalaz.std.VectorFunctions);
    Code:
       0: aload_0
       1: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
       6: areturn

  public static scala.Tuple2 $anonfun$groupWhenM$4(java.lang.Object, boolean);
    Code:
       0: getstatic     #853                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
       3: getstatic     #858                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: aload_0
       7: invokevirtual #861                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      10: iload_1
      11: invokestatic  #429                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      14: invokevirtual #865                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      17: areturn

  public static java.lang.Object $anonfun$groupWhenM$3(scalaz.Monad, scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: pop
       4: aload_0
       5: aload_1
       6: aload_3
       7: aload_2
       8: invokeinterface #102,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: aload_2
      14: invokedynamic #875,  0            // InvokeDynamic #40:apply:(Ljava/lang/Object;)Lscala/Function1;
      19: invokeinterface #344,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: areturn

  public static scalaz.IndexedStateT $anonfun$groupWhenM$2(scalaz.Monad, scala.Function2, java.lang.Object);
    Code:
       0: getstatic     #543                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
       3: pop
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokedynamic #551,  0            // InvokeDynamic #22:apply:(Lscalaz/Monad;Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      12: astore_3
      13: getstatic     #535                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      16: pop
      17: new           #25                 // class scalaz/IndexedStateT$Wrap
      20: dup
      21: aload_3
      22: invokespecial #554                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      25: areturn

  public static scala.collection.immutable.Vector $anonfun$groupWhenM$6(scala.collection.immutable.Vector, scala.collection.immutable.Vector, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: invokevirtual #172                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
       4: astore        4
       6: aload_1
       7: aload         4
       9: invokevirtual #130                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #67                 // class scala/collection/immutable/Vector
      15: astore_3
      16: aload_2
      17: aload_3
      18: invokevirtual #130                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #67                 // class scala/collection/immutable/Vector
      24: areturn

  public static java.lang.Object $anonfun$groupWhenM$5(scalaz.std.VectorFunctions, scalaz.Monad, scala.Function2, scala.collection.immutable.Vector, scala.Tuple2);
    Code:
       0: aload         4
       2: ifnull        383
       5: aload         4
       7: invokevirtual #815                // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #67                 // class scala/collection/immutable/Vector
      13: astore        5
      15: aload         4
      17: invokevirtual #818                // Method scala/Tuple2._2:()Ljava/lang/Object;
      20: checkcast     #67                 // class scala/collection/immutable/Vector
      23: astore        6
      25: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      28: pop
      29: aload_1
      30: aload         6
      32: invokevirtual #120                // Method scala/collection/immutable/Vector.isEmpty:()Z
      35: ifeq          57
      38: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      41: pop
      42: aload_1
      43: aload_0
      44: invokedynamic #516,  0            // InvokeDynamic #20:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
      49: invokeinterface #520,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      54: goto          354
      57: aload_1
      58: aload_2
      59: invokedynamic #530,  0            // InvokeDynamic #21:apply:(Lscalaz/Monad;Lscala/Function2;)Lscala/Function1;
      64: astore        7
      66: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      69: pop
      70: aload_1
      71: aload         6
      73: invokevirtual #180                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      76: getstatic     #535                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      79: pop
      80: new           #36                 // class scalaz/StateTInstances2$$anon$12
      83: dup
      84: aconst_null
      85: aload_1
      86: invokespecial #538                // Method scalaz/StateTInstances2$$anon$12."<init>":(Lscalaz/StateTInstances2;Lscalaz/Applicative;)V
      89: astore        9
      91: astore        8
      93: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      96: pop
      97: aload_0
      98: aload         9
     100: invokedynamic #288,  0            // InvokeDynamic #2:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
     105: aload_0
     106: aload         9
     108: aload         7
     110: invokedynamic #298,  0            // InvokeDynamic #3:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
     115: astore        11
     117: astore        10
     119: iconst_m1
     120: istore        12
     122: iload         12
     124: aload         8
     126: invokevirtual #71                 // Method scala/collection/immutable/Vector.length:()I
     129: iconst_1
     130: isub
     131: if_icmplt     143
     134: aload_0
     135: aload         9
     137: invokestatic  #284                // InterfaceMethod $anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
     140: goto          249
     143: aload         8
     145: iload         12
     147: iconst_1
     148: iadd
     149: invokevirtual #80                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
     152: iload         12
     154: aload         8
     156: aload         10
     158: aload         11
     160: invokedynamic #97,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     165: astore        18
     167: astore        17
     169: getstatic     #303                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
     172: pop
     173: getstatic     #543                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
     176: pop
     177: aload_1
     178: aload_2
     179: aload         17
     181: invokedynamic #551,  0            // InvokeDynamic #22:apply:(Lscalaz/Monad;Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
     186: astore        22
     188: getstatic     #535                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
     191: pop
     192: new           #25                 // class scalaz/IndexedStateT$Wrap
     195: dup
     196: aload         22
     198: invokespecial #554                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
     201: aconst_null
     202: astore        22
     204: aload_0
     205: aload         9
     207: aload         18
     209: aload         17
     211: invokedynamic #312,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
     216: astore        20
     218: astore        19
     220: aload         20
     222: invokedynamic #564,  0            // InvokeDynamic #23:apply:(Lscala/Function1;)Lscala/Function2;
     227: astore        21
     229: new           #20                 // class scalaz/IndexedStateT$FlatMap
     232: dup
     233: aload         19
     235: aload         21
     237: invokespecial #567                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
     240: aconst_null
     241: astore        21
     243: aconst_null
     244: astore        19
     246: aconst_null
     247: astore        20
     249: aconst_null
     250: astore        10
     252: aconst_null
     253: astore        11
     255: aload         8
     257: invokedynamic #481,  0            // InvokeDynamic #17:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     262: astore        13
     264: checkcast     #22                 // class scalaz/IndexedStateT
     267: astore        14
     269: aload         14
     271: aload         9
     273: invokeinterface #572,  1          // InterfaceMethod scalaz/StateTBind.F:()Lscalaz/Applicative;
     278: astore        15
     280: ifnonnull     285
     283: aconst_null
     284: athrow
     285: aload         15
     287: aload         13
     289: invokedynamic #580,  0            // InvokeDynamic #24:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
     294: invokedynamic #564,  0            // InvokeDynamic #23:apply:(Lscala/Function1;)Lscala/Function2;
     299: astore        16
     301: new           #20                 // class scalaz/IndexedStateT$FlatMap
     304: dup
     305: aload         14
     307: aload         16
     309: invokespecial #567                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
     312: aconst_null
     313: astore        16
     315: aconst_null
     316: astore        15
     318: aconst_null
     319: astore        14
     321: aconst_null
     322: astore        13
     324: aconst_null
     325: astore        8
     327: aconst_null
     328: astore        9
     330: aload         6
     332: invokevirtual #172                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     335: aload_1
     336: invokevirtual #584                // Method scalaz/IndexedStateT.eval:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
     339: aload_0
     340: aload_1
     341: aload_2
     342: aload         6
     344: invokedynamic #594,  0            // InvokeDynamic #25:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function2;Lscala/collection/immutable/Vector;)Lscala/Function1;
     349: invokeinterface #318,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     354: aconst_null
     355: astore        7
     357: aconst_null
     358: astore        8
     360: aconst_null
     361: astore        9
     363: aconst_null
     364: astore        10
     366: aconst_null
     367: astore        11
     369: aload_3
     370: aload         5
     372: invokedynamic #887,  0            // InvokeDynamic #41:apply:(Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)Lscala/Function1;
     377: invokeinterface #344,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     382: areturn
     383: new           #820                // class scala/MatchError
     386: dup
     387: aconst_null
     388: invokespecial #821                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     391: athrow

  private scala.Tuple2 span1$1(scala.collection.immutable.Vector, java.lang.Object, scala.collection.immutable.Vector, scala.Function2);
    Code:
       0: aload_1
       1: invokevirtual #120                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          22
       7: new           #635                // class scala/Tuple2
      10: dup
      11: aload_3
      12: aload_0
      13: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      18: invokespecial #638                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      21: areturn
      22: aload_1
      23: invokevirtual #172                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      26: astore        5
      28: aload_1
      29: invokevirtual #180                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      32: astore        6
      34: aload         4
      36: aload_2
      37: aload         5
      39: invokeinterface #102,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      44: invokestatic  #617                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      47: ifeq          69
      50: aload         6
      52: aload         5
      54: aload_3
      55: aload         5
      57: invokevirtual #432                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
      60: checkcast     #67                 // class scala/collection/immutable/Vector
      63: astore_3
      64: astore_2
      65: astore_1
      66: goto          0
      69: new           #635                // class scala/Tuple2
      72: dup
      73: aload_3
      74: aload_1
      75: invokespecial #638                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      78: areturn

  private scala.collection.immutable.Vector go$1(scala.collection.immutable.Vector, scala.collection.immutable.Vector, scala.Function2);
    Code:
       0: aload_1
       1: invokevirtual #120                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          9
       7: aload_2
       8: areturn
       9: aload_1
      10: invokevirtual #180                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      13: aload_1
      14: invokevirtual #172                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      17: aload_0
      18: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      23: astore        8
      25: astore        7
      27: astore        6
      29: aload         6
      31: invokevirtual #120                // Method scala/collection/immutable/Vector.isEmpty:()Z
      34: ifeq          48
      37: aload         8
      39: aload_0
      40: invokeinterface #43,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      45: goto          105
      48: aload         6
      50: invokevirtual #172                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      53: astore        9
      55: aload         6
      57: invokevirtual #180                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      60: astore        10
      62: aload_3
      63: aload         7
      65: aload         9
      67: invokeinterface #102,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: invokestatic  #617                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      75: ifeq          101
      78: aload         10
      80: aload         9
      82: aload         8
      84: aload         9
      86: invokevirtual #432                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
      89: checkcast     #67                 // class scala/collection/immutable/Vector
      92: astore        8
      94: astore        7
      96: astore        6
      98: goto          29
     101: aload         8
     103: aload         6
     105: aconst_null
     106: astore        6
     108: aconst_null
     109: astore        7
     111: aconst_null
     112: astore        8
     114: aconst_null
     115: astore        9
     117: aconst_null
     118: astore        10
     120: astore        11
     122: astore        4
     124: aload         11
     126: aload_2
     127: aload_1
     128: invokevirtual #172                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     131: astore        5
     133: aload         4
     135: aload         5
     137: invokevirtual #130                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
     140: invokevirtual #432                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
     143: checkcast     #67                 // class scala/collection/immutable/Vector
     146: astore_2
     147: astore_1
     148: goto          0

  public static scala.Tuple2 $anonfun$mapAccumLeft$1(scala.Function2, scala.Tuple2, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        76
       4: aload_1
       5: invokevirtual #815                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_1
      10: invokevirtual #818                // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: checkcast     #67                 // class scala/collection/immutable/Vector
      16: astore        4
      18: aload_0
      19: aload_3
      20: aload_2
      21: invokeinterface #102,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #635                // class scala/Tuple2
      29: astore        5
      31: aload         5
      33: ifnull        67
      36: aload         5
      38: invokevirtual #815                // Method scala/Tuple2._1:()Ljava/lang/Object;
      41: astore        6
      43: aload         5
      45: invokevirtual #818                // Method scala/Tuple2._2:()Ljava/lang/Object;
      48: astore        7
      50: new           #635                // class scala/Tuple2
      53: dup
      54: aload         6
      56: aload         4
      58: aload         7
      60: invokevirtual #432                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
      63: invokespecial #638                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      66: areturn
      67: new           #820                // class scala/MatchError
      70: dup
      71: aconst_null
      72: invokespecial #821                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      75: athrow
      76: new           #820                // class scala/MatchError
      79: dup
      80: aconst_null
      81: invokespecial #821                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      84: athrow

  public static scala.Tuple2 $anonfun$mapAccumRight$1(scala.Function2, java.lang.Object, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        76
       4: aload_2
       5: invokevirtual #815                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_2
      10: invokevirtual #818                // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: checkcast     #67                 // class scala/collection/immutable/Vector
      16: astore        4
      18: aload_0
      19: aload_3
      20: aload_1
      21: invokeinterface #102,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #635                // class scala/Tuple2
      29: astore        5
      31: aload         5
      33: ifnull        67
      36: aload         5
      38: invokevirtual #815                // Method scala/Tuple2._1:()Ljava/lang/Object;
      41: astore        6
      43: aload         5
      45: invokevirtual #818                // Method scala/Tuple2._2:()Ljava/lang/Object;
      48: astore        7
      50: new           #635                // class scala/Tuple2
      53: dup
      54: aload         6
      56: aload         4
      58: aload         7
      60: invokevirtual #130                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
      63: invokespecial #638                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      66: areturn
      67: new           #820                // class scala/MatchError
      70: dup
      71: aconst_null
      72: invokespecial #821                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      75: athrow
      76: new           #820                // class scala/MatchError
      79: dup
      80: aconst_null
      81: invokespecial #821                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      84: athrow

  private scala.collection.immutable.Vector rec$3(scala.collection.immutable.Vector, scala.collection.immutable.Vector);
    Code:
       0: aload_2
       1: invokevirtual #120                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          16
       7: aload_1
       8: aload_2
       9: invokevirtual #130                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #67                 // class scala/collection/immutable/Vector
      15: areturn
      16: aload_1
      17: aload_2
      18: invokevirtual #130                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #67                 // class scala/collection/immutable/Vector
      24: aload_2
      25: invokevirtual #123                // Method scala/collection/immutable/Vector.init:()Lscala/collection/immutable/Vector;
      28: astore_2
      29: astore_1
      30: goto          0

  public static scala.collection.immutable.Vector $anonfun$allPairs$1(scala.collection.immutable.Vector, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #698                // Method scala/collection/immutable/Vector.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
       5: checkcast     #67                 // class scala/collection/immutable/Vector
       8: areturn

  public static void $init$(scalaz.std.VectorFunctions);
    Code:
       0: return

  public static java.lang.Object $anonfun$takeWhileM$4$adapted(scalaz.std.VectorFunctions, scalaz.Monad, scala.Function0, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #617                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       9: invokestatic  #916                // InterfaceMethod $anonfun$takeWhileM$4:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;Z)Ljava/lang/Object;
      12: areturn

  public static java.lang.Object $anonfun$takeUntilM$2$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #617                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #918                // InterfaceMethod $anonfun$takeUntilM$2:(Z)Z
       7: invokestatic  #429                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  public static scala.Function1 $anonfun$filterM$5$adapted(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #617                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokestatic  #920                // InterfaceMethod $anonfun$filterM$5:(Ljava/lang/Object;Z)Lscala/Function1;
       8: areturn

  public static java.lang.Object $anonfun$findM$4$adapted(scalaz.Monad, java.lang.Object, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #617                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       7: invokestatic  #922                // InterfaceMethod $anonfun$findM$4:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Z)Ljava/lang/Object;
      10: areturn

  public static scala.Function1 $anonfun$partitionM$5$adapted(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #617                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokestatic  #924                // InterfaceMethod $anonfun$partitionM$5:(Ljava/lang/Object;Z)Lscala/Function1;
       8: areturn

  public static java.lang.Object $anonfun$breakM$2$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #617                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #926                // InterfaceMethod $anonfun$breakM$2:(Z)Z
       7: invokestatic  #429                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  public static scala.Tuple2 $anonfun$groupWhenM$4$adapted(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #617                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokestatic  #928                // InterfaceMethod $anonfun$groupWhenM$4:(Ljava/lang/Object;Z)Lscala/Tuple2;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #940,  0            // InvokeDynamic #42:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
