Compiled from "Tuple.scala"
public final class scalaz.std.TupleInstances1$$anon$19 implements scalaz.std.Tuple4Monoid<A1, A2, A3, A4> {
  private scalaz.syntax.MonoidSyntax<scala.Tuple4<A1, A2, A3, A4>> monoidSyntax;

  private scalaz.syntax.SemigroupSyntax<scala.Tuple4<A1, A2, A3, A4>> semigroupSyntax;

  private final scalaz.Monoid A1$12;

  private final scalaz.Monoid A2$10;

  private final scalaz.Monoid A3$8;

  private final scalaz.Monoid A4$6;

  public scala.Tuple4<A1, A2, A3, A4> zero();
    Code:
       0: aload_0
       1: invokestatic  #41                 // InterfaceMethod scalaz/std/Tuple4Monoid.zero$:(Lscalaz/std/Tuple4Monoid;)Lscala/Tuple4;
       4: areturn

  public scala.Tuple4<A1, A2, A3, A4> append(scala.Tuple4<A1, A2, A3, A4>, scala.Function0<scala.Tuple4<A1, A2, A3, A4>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #54                 // InterfaceMethod scalaz/std/Tuple4Semigroup.append$:(Lscalaz/std/Tuple4Semigroup;Lscala/Tuple4;Lscala/Function0;)Lscala/Tuple4;
       6: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #64                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #74                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #83                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #91                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #95                 // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #102                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #107                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #114                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #121                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scala.Tuple4<A1, A2, A3, A4>>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #128                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #133                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<scala.Tuple4<A1, A2, A3, A4>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scala.Tuple4<A1, A2, A3, A4>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #140                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scala.Tuple4<A1, A2, A3, A4>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scala.Tuple4<A1, A2, A3, A4>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #145                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #152                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #159                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scala.Tuple4<A1, A2, A3, A4>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #166                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<scala.Tuple4<A1, A2, A3, A4>> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #170                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scala.Tuple4<A1, A2, A3, A4>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #170                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scala.Tuple4<A1, A2, A3, A4>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #178                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scala.Tuple4<A1, A2, A3, A4>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #178                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.Monoid<A1> _1();
    Code:
       0: aload_0
       1: getfield      #186                // Field A1$12:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<A2> _2();
    Code:
       0: aload_0
       1: getfield      #190                // Field A2$10:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<A3> _3();
    Code:
       0: aload_0
       1: getfield      #194                // Field A3$8:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<A4> _4();
    Code:
       0: aload_0
       1: getfield      #198                // Field A4$6:Lscalaz/Monoid;
       4: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #202                // class scala/Tuple4
       5: aload_2
       6: invokevirtual #204                // Method append:(Lscala/Tuple4;Lscala/Function0;)Lscala/Tuple4;
       9: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #207                // Method zero:()Lscala/Tuple4;
       4: areturn

  public scalaz.Semigroup _4();
    Code:
       0: aload_0
       1: invokevirtual #210                // Method _4:()Lscalaz/Monoid;
       4: areturn

  public scalaz.Semigroup _3();
    Code:
       0: aload_0
       1: invokevirtual #212                // Method _3:()Lscalaz/Monoid;
       4: areturn

  public scalaz.Semigroup _2();
    Code:
       0: aload_0
       1: invokevirtual #214                // Method _2:()Lscalaz/Monoid;
       4: areturn

  public scalaz.Semigroup _1();
    Code:
       0: aload_0
       1: invokevirtual #216                // Method _1:()Lscalaz/Monoid;
       4: areturn

  public scalaz.std.TupleInstances1$$anon$19(scalaz.std.TupleInstances1, scalaz.Monoid, scalaz.Monoid, scalaz.Monoid, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #186                // Field A1$12:Lscalaz/Monoid;
       5: aload_0
       6: aload_3
       7: putfield      #190                // Field A2$10:Lscalaz/Monoid;
      10: aload_0
      11: aload         4
      13: putfield      #194                // Field A3$8:Lscalaz/Monoid;
      16: aload_0
      17: aload         5
      19: putfield      #198                // Field A4$6:Lscalaz/Monoid;
      22: aload_0
      23: invokespecial #222                // Method java/lang/Object."<init>":()V
      26: aload_0
      27: invokestatic  #226                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      30: aload_0
      31: invokestatic  #229                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      34: invokestatic  #234                // Method scala/runtime/Statics.releaseFence:()V
      37: return
}
