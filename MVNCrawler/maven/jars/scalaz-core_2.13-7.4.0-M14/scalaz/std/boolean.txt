Compiled from "AnyVal.scala"
public final class scalaz.std.boolean {
  public static <M> scalaz.NaturalTransformation<java.lang.Object, M> emptyOrPointNT(boolean, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #22                 // Method scalaz/std/boolean$.emptyOrPointNT:(ZLscalaz/Applicative;Lscalaz/PlusEmpty;)Lscalaz/NaturalTransformation;
       9: areturn

  public static <M> scalaz.NaturalTransformation<java.lang.Object, M> pointOrEmptyNT(boolean, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #28                 // Method scalaz/std/boolean$.pointOrEmptyNT:(ZLscalaz/Applicative;Lscalaz/PlusEmpty;)Lscalaz/NaturalTransformation;
       9: areturn

  public static <M, A> M emptyOrPoint(boolean, scala.Function0<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #34                 // Method scalaz/std/boolean$.emptyOrPoint:(ZLscala/Function0;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
      10: areturn

  public static <M, A> M pointOrEmpty(boolean, scala.Function0<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #38                 // Method scalaz/std/boolean$.pointOrEmpty:(ZLscala/Function0;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
      10: areturn

  public static <A> A zeroOrValue(boolean, scala.Function0<A>, scalaz.Monoid<A>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #45                 // Method scalaz/std/boolean$.zeroOrValue:(ZLscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public static <A> A valueOrZero(boolean, scala.Function0<A>, scalaz.Monoid<A>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #49                 // Method scalaz/std/boolean$.valueOrZero:(ZLscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public static int test(boolean);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: invokevirtual #54                 // Method scalaz/std/boolean$.test:(Z)I
       7: ireturn

  public static <A> scala.Option<A> option(boolean, scala.Function0<A>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: invokevirtual #59                 // Method scalaz/std/boolean$.option:(ZLscala/Function0;)Lscala/Option;
       8: areturn

  public static <A> A fold(boolean, scala.Function0<A>, scala.Function0<A>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #66                 // Method scalaz/std/boolean$.fold:(ZLscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public static <MA> java.lang.Object whenMU(boolean, scala.Function0<MA>, scalaz.Unapply<scalaz.Applicative, MA>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #71                 // Method scalaz/std/boolean$.whenMU:(ZLscala/Function0;Lscalaz/Unapply;)Ljava/lang/Object;
       9: areturn

  public static <M, A> M whenM(boolean, scala.Function0<M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #77                 // Method scalaz/std/boolean$.whenM:(ZLscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public static <MA> java.lang.Object unlessMU(boolean, scala.Function0<MA>, scalaz.Unapply<scalaz.Applicative, MA>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #80                 // Method scalaz/std/boolean$.unlessMU:(ZLscala/Function0;Lscalaz/Unapply;)Ljava/lang/Object;
       9: areturn

  public static <M, A> M unlessM(boolean, scala.Function0<M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #83                 // Method scalaz/std/boolean$.unlessM:(ZLscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public static void when(boolean, scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: invokevirtual #88                 // Method scalaz/std/boolean$.when:(ZLscala/Function0;)V
       8: return

  public static void unless(boolean, scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: invokevirtual #91                 // Method scalaz/std/boolean$.unless:(ZLscala/Function0;)V
       8: return

  public static boolean negInverseConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: invokevirtual #97                 // Method scalaz/std/boolean$.negInverseConditional:(ZLscala/Function0;)Z
       8: ireturn

  public static boolean negConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: invokevirtual #100                // Method scalaz/std/boolean$.negConditional:(ZLscala/Function0;)Z
       8: ireturn

  public static boolean inverseConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: invokevirtual #103                // Method scalaz/std/boolean$.inverseConditional:(ZLscala/Function0;)Z
       8: ireturn

  public static boolean conditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: invokevirtual #106                // Method scalaz/std/boolean$.conditional:(ZLscala/Function0;)Z
       8: ireturn

  public static boolean nand(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: invokevirtual #109                // Method scalaz/std/boolean$.nand:(ZLscala/Function0;)Z
       8: ireturn

  public static boolean nor(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: invokevirtual #112                // Method scalaz/std/boolean$.nor:(ZLscala/Function0;)Z
       8: ireturn

  public static boolean disjunction(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: invokevirtual #115                // Method scalaz/std/boolean$.disjunction:(ZLscala/Function0;)Z
       8: ireturn

  public static boolean conjunction(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #20                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: iload_0
       4: aload_1
       5: invokevirtual #118                // Method scalaz/std/boolean$.conjunction:(ZLscala/Function0;)Z
       8: ireturn
}
