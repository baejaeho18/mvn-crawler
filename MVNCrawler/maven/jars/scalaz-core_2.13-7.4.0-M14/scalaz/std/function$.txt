Compiled from "Function.scala"
public final class scalaz.std.function$ implements scalaz.std.FunctionFunctions,scalaz.std.FunctionInstances {
  public static final scalaz.std.function$ MODULE$;

  private static scalaz.Traverse<scala.Function0> function0Instance;

  private static scalaz.Arrow<scala.Function1> function1Instance;

  public static {};
    Code:
       0: new           #2                  // class scalaz/std/function$
       3: dup
       4: invokespecial #22                 // Method "<init>":()V
       7: putstatic     #24                 // Field MODULE$:Lscalaz/std/function$;
      10: getstatic     #24                 // Field MODULE$:Lscalaz/std/function$;
      13: pop
      14: getstatic     #24                 // Field MODULE$:Lscalaz/std/function$;
      17: pop
      18: getstatic     #24                 // Field MODULE$:Lscalaz/std/function$;
      21: pop
      22: getstatic     #24                 // Field MODULE$:Lscalaz/std/function$;
      25: invokestatic  #28                 // InterfaceMethod scalaz/std/FunctionInstances.$init$:(Lscalaz/std/FunctionInstances;)V
      28: return

  public <R> scalaz.Equal<scala.Function0<R>> function0Equal(scalaz.Equal<R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #36                 // InterfaceMethod scalaz/std/FunctionInstances.function0Equal$:(Lscalaz/std/FunctionInstances;Lscalaz/Equal;)Lscalaz/Equal;
       5: areturn

  public <T> scalaz.Monad<?> function1Covariant();
    Code:
       0: aload_0
       1: invokestatic  #45                 // InterfaceMethod scalaz/std/FunctionInstances.function1Covariant$:(Lscalaz/std/FunctionInstances;)Lscalaz/Monad;
       4: areturn

  public <R> scalaz.Contravariant<?> function1Contravariant();
    Code:
       0: aload_0
       1: invokestatic  #52                 // InterfaceMethod scalaz/std/FunctionInstances.function1Contravariant$:(Lscalaz/std/FunctionInstances;)Lscalaz/Contravariant;
       4: areturn

  public <T1, T2> scalaz.Monad<?> function2Instance();
    Code:
       0: aload_0
       1: invokestatic  #57                 // InterfaceMethod scalaz/std/FunctionInstances.function2Instance$:(Lscalaz/std/FunctionInstances;)Lscalaz/Monad;
       4: areturn

  public <T1, T2, T3> scalaz.Monad<?> function3Instance();
    Code:
       0: aload_0
       1: invokestatic  #62                 // InterfaceMethod scalaz/std/FunctionInstances.function3Instance$:(Lscalaz/std/FunctionInstances;)Lscalaz/Monad;
       4: areturn

  public <T1, T2, T3, T4> scalaz.Monad<?> function4Instance();
    Code:
       0: aload_0
       1: invokestatic  #67                 // InterfaceMethod scalaz/std/FunctionInstances.function4Instance$:(Lscalaz/std/FunctionInstances;)Lscalaz/Monad;
       4: areturn

  public <T1, T2, T3, T4, T5> scalaz.Monad<?> function5Instance();
    Code:
       0: aload_0
       1: invokestatic  #72                 // InterfaceMethod scalaz/std/FunctionInstances.function5Instance$:(Lscalaz/std/FunctionInstances;)Lscalaz/Monad;
       4: areturn

  public <T1, T2, T3, T4, T5, T6> scalaz.Monad<?> function6Instance();
    Code:
       0: aload_0
       1: invokestatic  #77                 // InterfaceMethod scalaz/std/FunctionInstances.function6Instance$:(Lscalaz/std/FunctionInstances;)Lscalaz/Monad;
       4: areturn

  public <T1, T2, T3, T4, T5, T6, T7> scalaz.Monad<?> function7Instance();
    Code:
       0: aload_0
       1: invokestatic  #82                 // InterfaceMethod scalaz/std/FunctionInstances.function7Instance$:(Lscalaz/std/FunctionInstances;)Lscalaz/Monad;
       4: areturn

  public <T1, T2, T3, T4, T5, T6, T7, T8> scalaz.Monad<?> function8Instance();
    Code:
       0: aload_0
       1: invokestatic  #87                 // InterfaceMethod scalaz/std/FunctionInstances.function8Instance$:(Lscalaz/std/FunctionInstances;)Lscalaz/Monad;
       4: areturn

  public <A, R> scalaz.Monoid<scala.Function1<A, R>> function1Monoid(scalaz.Monoid<R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #97                 // InterfaceMethod scalaz/std/FunctionInstances0.function1Monoid$:(Lscalaz/std/FunctionInstances0;Lscalaz/Monoid;)Lscalaz/Monoid;
       5: areturn

  public <A, R> scalaz.Comonad<?> function1Comonad(scalaz.Monoid<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #106                // InterfaceMethod scalaz/std/FunctionInstances0.function1Comonad$:(Lscalaz/std/FunctionInstances0;Lscalaz/Monoid;)Lscalaz/Comonad;
       5: areturn

  public <T> scalaz.Monad<?> function1CovariantByName();
    Code:
       0: aload_0
       1: invokestatic  #111                // InterfaceMethod scalaz/std/FunctionInstances0.function1CovariantByName$:(Lscalaz/std/FunctionInstances0;)Lscalaz/Monad;
       4: areturn

  public <A, R> scalaz.Semigroup<scala.Function1<A, R>> function1Semigroup(scalaz.Semigroup<R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #120                // InterfaceMethod scalaz/std/FunctionInstances1.function1Semigroup$:(Lscalaz/std/FunctionInstances1;Lscalaz/Semigroup;)Lscalaz/Semigroup;
       5: areturn

  public <A, R> scalaz.Cobind<?> function1Cobind(scalaz.Semigroup<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #128                // InterfaceMethod scalaz/std/FunctionInstances1.function1Cobind$:(Lscalaz/std/FunctionInstances1;Lscalaz/Semigroup;)Lscalaz/Cobind;
       5: areturn

  public final <A> A fix(scala.Function1<scala.Function0<A>, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #136                // InterfaceMethod scalaz/std/FunctionFunctions.fix$:(Lscalaz/std/FunctionFunctions;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public scalaz.Traverse<scala.Function0> function0Instance();
    Code:
       0: getstatic     #141                // Field function0Instance:Lscalaz/Traverse;
       3: areturn

  public scalaz.Arrow<scala.Function1> function1Instance();
    Code:
       0: getstatic     #145                // Field function1Instance:Lscalaz/Arrow;
       3: areturn

  public void scalaz$std$FunctionInstances$_setter_$function0Instance_$eq(scalaz.Traverse<scala.Function0>);
    Code:
       0: aload_1
       1: putstatic     #141                // Field function0Instance:Lscalaz/Traverse;
       4: return

  public void scalaz$std$FunctionInstances$_setter_$function1Instance_$eq(scalaz.Arrow<scala.Function1>);
    Code:
       0: aload_1
       1: putstatic     #145                // Field function1Instance:Lscalaz/Arrow;
       4: return

  private scalaz.std.function$();
    Code:
       0: aload_0
       1: invokespecial #153                // Method java/lang/Object."<init>":()V
       4: return
}
