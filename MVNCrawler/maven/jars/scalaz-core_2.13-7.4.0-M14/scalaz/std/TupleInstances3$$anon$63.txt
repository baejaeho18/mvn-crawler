Compiled from "Tuple.scala"
public final class scalaz.std.TupleInstances3$$anon$63 implements scalaz.std.Tuple6Order<A1, A2, A3, A4, A5, A6> {
  private boolean equalIsNatural;

  private scalaz.syntax.OrderSyntax<scala.Tuple6<A1, A2, A3, A4, A5, A6>> orderSyntax;

  private scalaz.syntax.EqualSyntax<scala.Tuple6<A1, A2, A3, A4, A5, A6>> equalSyntax;

  private final scalaz.Order A1$46;

  private final scalaz.Order A2$40;

  private final scalaz.Order A3$34;

  private final scalaz.Order A4$28;

  private final scalaz.Order A5$22;

  private final scalaz.Order A6$16;

  public scalaz.Ordering order(scala.Tuple6<A1, A2, A3, A4, A5, A6>, scala.Tuple6<A1, A2, A3, A4, A5, A6>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #47                 // InterfaceMethod scalaz/std/Tuple6Order.order$:(Lscalaz/std/Tuple6Order;Lscala/Tuple6;Lscala/Tuple6;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(scala.Tuple6<A1, A2, A3, A4, A5, A6>, scala.Tuple6<A1, A2, A3, A4, A5, A6>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #59                 // InterfaceMethod scalaz/std/Tuple6Equal.equal$:(Lscalaz/std/Tuple6Equal;Lscala/Tuple6;Lscala/Tuple6;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #67                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #74                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #78                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #82                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #86                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #92                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #96                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #102                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scala.Tuple6<A1, A2, A3, A4, A5, A6>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #110                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scala.Tuple6<A1, A2, A3, A4, A5, A6>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #118                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scala.Tuple6<A1, A2, A3, A4, A5, A6>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #125                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scala.Tuple6<A1, A2, A3, A4, A5, A6>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #132                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public scalaz.Equal<scala.Tuple6<A1, A2, A3, A4, A5, A6>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #139                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: getfield      #142                // Field equalIsNatural:Z
       4: ireturn

  public void scalaz$std$Tuple6Equal$_setter_$equalIsNatural_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #142                // Field equalIsNatural:Z
       5: return

  public scalaz.syntax.OrderSyntax<scala.Tuple6<A1, A2, A3, A4, A5, A6>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #149                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scala.Tuple6<A1, A2, A3, A4, A5, A6>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #149                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scala.Tuple6<A1, A2, A3, A4, A5, A6>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #156                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scala.Tuple6<A1, A2, A3, A4, A5, A6>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #156                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<A1> _1();
    Code:
       0: aload_0
       1: getfield      #163                // Field A1$46:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A2> _2();
    Code:
       0: aload_0
       1: getfield      #167                // Field A2$40:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A3> _3();
    Code:
       0: aload_0
       1: getfield      #171                // Field A3$34:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A4> _4();
    Code:
       0: aload_0
       1: getfield      #175                // Field A4$28:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A5> _5();
    Code:
       0: aload_0
       1: getfield      #179                // Field A5$22:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A6> _6();
    Code:
       0: aload_0
       1: getfield      #183                // Field A6$16:Lscalaz/Order;
       4: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #186                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #188                // class scala/Tuple6
       5: aload_2
       6: checkcast     #188                // class scala/Tuple6
       9: invokevirtual #190                // Method equal:(Lscala/Tuple6;Lscala/Tuple6;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #188                // class scala/Tuple6
       5: aload_2
       6: checkcast     #188                // class scala/Tuple6
       9: invokevirtual #192                // Method order:(Lscala/Tuple6;Lscala/Tuple6;)Lscalaz/Ordering;
      12: areturn

  public scalaz.Equal _6();
    Code:
       0: aload_0
       1: invokevirtual #195                // Method _6:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _5();
    Code:
       0: aload_0
       1: invokevirtual #197                // Method _5:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _4();
    Code:
       0: aload_0
       1: invokevirtual #199                // Method _4:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _3();
    Code:
       0: aload_0
       1: invokevirtual #201                // Method _3:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _2();
    Code:
       0: aload_0
       1: invokevirtual #203                // Method _2:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _1();
    Code:
       0: aload_0
       1: invokevirtual #205                // Method _1:()Lscalaz/Order;
       4: areturn

  public scalaz.std.TupleInstances3$$anon$63(scalaz.std.TupleInstances3, scalaz.Order, scalaz.Order, scalaz.Order, scalaz.Order, scalaz.Order, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #163                // Field A1$46:Lscalaz/Order;
       5: aload_0
       6: aload_3
       7: putfield      #167                // Field A2$40:Lscalaz/Order;
      10: aload_0
      11: aload         4
      13: putfield      #171                // Field A3$34:Lscalaz/Order;
      16: aload_0
      17: aload         5
      19: putfield      #175                // Field A4$28:Lscalaz/Order;
      22: aload_0
      23: aload         6
      25: putfield      #179                // Field A5$22:Lscalaz/Order;
      28: aload_0
      29: aload         7
      31: putfield      #183                // Field A6$16:Lscalaz/Order;
      34: aload_0
      35: invokespecial #211                // Method java/lang/Object."<init>":()V
      38: aload_0
      39: invokestatic  #215                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      42: aload_0
      43: invokestatic  #218                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      46: aload_0
      47: invokestatic  #221                // InterfaceMethod scalaz/std/Tuple6Equal.$init$:(Lscalaz/std/Tuple6Equal;)V
      50: invokestatic  #226                // Method scala/runtime/Statics.releaseFence:()V
      53: return
}
