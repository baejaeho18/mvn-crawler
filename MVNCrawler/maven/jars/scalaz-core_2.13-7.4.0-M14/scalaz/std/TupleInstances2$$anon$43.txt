Compiled from "Tuple.scala"
public final class scalaz.std.TupleInstances2$$anon$43 implements scalaz.std.Tuple2Equal<A1, A2> {
  private boolean equalIsNatural;

  private scalaz.syntax.EqualSyntax<scala.Tuple2<A1, A2>> equalSyntax;

  private final scalaz.Equal A1$26;

  private final scalaz.Equal A2$22;

  public boolean equal(scala.Tuple2<A1, A2>, scala.Tuple2<A1, A2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #35                 // InterfaceMethod scalaz/std/Tuple2Equal.equal$:(Lscalaz/std/Tuple2Equal;Lscala/Tuple2;Lscala/Tuple2;)Z
       6: ireturn

  public <G> scalaz.Equal<G> contramap(scala.Function1<G, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #46                 // InterfaceMethod scalaz/Equal.contramap$:(Lscalaz/Equal;Lscala/Function1;)Lscalaz/Equal;
       5: areturn

  public scalaz.Equal<scala.Tuple2<A1, A2>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #54                 // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: getfield      #57                 // Field equalIsNatural:Z
       4: ireturn

  public void scalaz$std$Tuple2Equal$_setter_$equalIsNatural_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #57                 // Field equalIsNatural:Z
       5: return

  public scalaz.syntax.EqualSyntax<scala.Tuple2<A1, A2>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #64                 // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #64                 // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Equal<A1> _1();
    Code:
       0: aload_0
       1: getfield      #72                 // Field A1$26:Lscalaz/Equal;
       4: areturn

  public scalaz.Equal<A2> _2();
    Code:
       0: aload_0
       1: getfield      #76                 // Field A2$22:Lscalaz/Equal;
       4: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #81                 // class scala/Tuple2
       5: aload_2
       6: checkcast     #81                 // class scala/Tuple2
       9: invokevirtual #83                 // Method equal:(Lscala/Tuple2;Lscala/Tuple2;)Z
      12: ireturn

  public scalaz.std.TupleInstances2$$anon$43(scalaz.std.TupleInstances2, scalaz.Equal, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #72                 // Field A1$26:Lscalaz/Equal;
       5: aload_0
       6: aload_3
       7: putfield      #76                 // Field A2$22:Lscalaz/Equal;
      10: aload_0
      11: invokespecial #90                 // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #94                 // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      18: aload_0
      19: invokestatic  #97                 // InterfaceMethod scalaz/std/Tuple2Equal.$init$:(Lscalaz/std/Tuple2Equal;)V
      22: invokestatic  #102                // Method scala/runtime/Statics.releaseFence:()V
      25: return
}
