Compiled from "Tuple.scala"
public final class scalaz.std.TupleInstances2$$anon$49 implements scalaz.std.Tuple8Equal<A1, A2, A3, A4, A5, A6, A7, A8> {
  private boolean equalIsNatural;

  private scalaz.syntax.EqualSyntax<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> equalSyntax;

  private final scalaz.Equal A1$32;

  private final scalaz.Equal A2$28;

  private final scalaz.Equal A3$24;

  private final scalaz.Equal A4$20;

  private final scalaz.Equal A5$16;

  private final scalaz.Equal A6$12;

  private final scalaz.Equal A7$8;

  private final scalaz.Equal A8$4;

  public boolean equal(scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>, scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #41                 // InterfaceMethod scalaz/std/Tuple8Equal.equal$:(Lscalaz/std/Tuple8Equal;Lscala/Tuple8;Lscala/Tuple8;)Z
       6: ireturn

  public <G> scalaz.Equal<G> contramap(scala.Function1<G, scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #52                 // InterfaceMethod scalaz/Equal.contramap$:(Lscalaz/Equal;Lscala/Function1;)Lscalaz/Equal;
       5: areturn

  public scalaz.Equal<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #60                 // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: getfield      #63                 // Field equalIsNatural:Z
       4: ireturn

  public void scalaz$std$Tuple8Equal$_setter_$equalIsNatural_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #63                 // Field equalIsNatural:Z
       5: return

  public scalaz.syntax.EqualSyntax<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #70                 // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #70                 // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Equal<A1> _1();
    Code:
       0: aload_0
       1: getfield      #78                 // Field A1$32:Lscalaz/Equal;
       4: areturn

  public scalaz.Equal<A2> _2();
    Code:
       0: aload_0
       1: getfield      #82                 // Field A2$28:Lscalaz/Equal;
       4: areturn

  public scalaz.Equal<A3> _3();
    Code:
       0: aload_0
       1: getfield      #86                 // Field A3$24:Lscalaz/Equal;
       4: areturn

  public scalaz.Equal<A4> _4();
    Code:
       0: aload_0
       1: getfield      #90                 // Field A4$20:Lscalaz/Equal;
       4: areturn

  public scalaz.Equal<A5> _5();
    Code:
       0: aload_0
       1: getfield      #94                 // Field A5$16:Lscalaz/Equal;
       4: areturn

  public scalaz.Equal<A6> _6();
    Code:
       0: aload_0
       1: getfield      #98                 // Field A6$12:Lscalaz/Equal;
       4: areturn

  public scalaz.Equal<A7> _7();
    Code:
       0: aload_0
       1: getfield      #102                // Field A7$8:Lscalaz/Equal;
       4: areturn

  public scalaz.Equal<A8> _8();
    Code:
       0: aload_0
       1: getfield      #106                // Field A8$4:Lscalaz/Equal;
       4: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #111                // class scala/Tuple8
       5: aload_2
       6: checkcast     #111                // class scala/Tuple8
       9: invokevirtual #113                // Method equal:(Lscala/Tuple8;Lscala/Tuple8;)Z
      12: ireturn

  public scalaz.std.TupleInstances2$$anon$49(scalaz.std.TupleInstances2, scalaz.Equal, scalaz.Equal, scalaz.Equal, scalaz.Equal, scalaz.Equal, scalaz.Equal, scalaz.Equal, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #78                 // Field A1$32:Lscalaz/Equal;
       5: aload_0
       6: aload_3
       7: putfield      #82                 // Field A2$28:Lscalaz/Equal;
      10: aload_0
      11: aload         4
      13: putfield      #86                 // Field A3$24:Lscalaz/Equal;
      16: aload_0
      17: aload         5
      19: putfield      #90                 // Field A4$20:Lscalaz/Equal;
      22: aload_0
      23: aload         6
      25: putfield      #94                 // Field A5$16:Lscalaz/Equal;
      28: aload_0
      29: aload         7
      31: putfield      #98                 // Field A6$12:Lscalaz/Equal;
      34: aload_0
      35: aload         8
      37: putfield      #102                // Field A7$8:Lscalaz/Equal;
      40: aload_0
      41: aload         9
      43: putfield      #106                // Field A8$4:Lscalaz/Equal;
      46: aload_0
      47: invokespecial #120                // Method java/lang/Object."<init>":()V
      50: aload_0
      51: invokestatic  #124                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      54: aload_0
      55: invokestatic  #127                // InterfaceMethod scalaz/std/Tuple8Equal.$init$:(Lscalaz/std/Tuple8Equal;)V
      58: invokestatic  #132                // Method scala/runtime/Statics.releaseFence:()V
      61: return
}
