Compiled from "Either.scala"
public final class scalaz.std.EitherInstances0$$anon$1 implements scalaz.std.EitherEqual<A, B> {
  private boolean equalIsNatural;

  private scalaz.syntax.EqualSyntax<scala.util.Either<A, B>> equalSyntax;

  private final scalaz.Equal A0$1;

  private final scalaz.Equal B0$1;

  public final boolean equal(scala.util.Either<A, B>, scala.util.Either<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #35                 // InterfaceMethod scalaz/std/EitherEqual.equal$:(Lscalaz/std/EitherEqual;Lscala/util/Either;Lscala/util/Either;)Z
       6: ireturn

  public <G> scalaz.Equal<G> contramap(scala.Function1<G, scala.util.Either<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #46                 // InterfaceMethod scalaz/Equal.contramap$:(Lscalaz/Equal;Lscala/Function1;)Lscalaz/Equal;
       5: areturn

  public scalaz.Equal<scala.util.Either<A, B>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #54                 // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: getfield      #57                 // Field equalIsNatural:Z
       4: ireturn

  public void scalaz$std$EitherEqual$_setter_$equalIsNatural_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #57                 // Field equalIsNatural:Z
       5: return

  public scalaz.syntax.EqualSyntax<scala.util.Either<A, B>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #64                 // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scala.util.Either<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #64                 // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Equal<A> A();
    Code:
       0: aload_0
       1: getfield      #72                 // Field A0$1:Lscalaz/Equal;
       4: areturn

  public scalaz.Equal<B> B();
    Code:
       0: aload_0
       1: getfield      #76                 // Field B0$1:Lscalaz/Equal;
       4: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #81                 // class scala/util/Either
       5: aload_2
       6: checkcast     #81                 // class scala/util/Either
       9: invokevirtual #83                 // Method equal:(Lscala/util/Either;Lscala/util/Either;)Z
      12: ireturn

  public scalaz.std.EitherInstances0$$anon$1(scalaz.std.EitherInstances0, scalaz.Equal, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #72                 // Field A0$1:Lscalaz/Equal;
       5: aload_0
       6: aload_3
       7: putfield      #76                 // Field B0$1:Lscalaz/Equal;
      10: aload_0
      11: invokespecial #90                 // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #94                 // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      18: aload_0
      19: invokestatic  #97                 // InterfaceMethod scalaz/std/EitherEqual.$init$:(Lscalaz/std/EitherEqual;)V
      22: invokestatic  #102                // Method scala/runtime/Statics.releaseFence:()V
      25: return
}
