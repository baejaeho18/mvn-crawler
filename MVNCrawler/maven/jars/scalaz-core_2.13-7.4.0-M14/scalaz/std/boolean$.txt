Compiled from "AnyVal.scala"
public final class scalaz.std.boolean$ implements scalaz.std.BooleanFunctions {
  public static final scalaz.std.boolean$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scalaz/std/boolean$
       3: dup
       4: invokespecial #14                 // Method "<init>":()V
       7: putstatic     #16                 // Field MODULE$:Lscalaz/std/boolean$;
      10: getstatic     #16                 // Field MODULE$:Lscalaz/std/boolean$;
      13: pop
      14: return

  public final boolean conjunction(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #25                 // InterfaceMethod scalaz/std/BooleanFunctions.conjunction$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean disjunction(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #32                 // InterfaceMethod scalaz/std/BooleanFunctions.disjunction$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean nor(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #36                 // InterfaceMethod scalaz/std/BooleanFunctions.nor$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean nand(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #40                 // InterfaceMethod scalaz/std/BooleanFunctions.nand$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean conditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #44                 // InterfaceMethod scalaz/std/BooleanFunctions.conditional$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean inverseConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #48                 // InterfaceMethod scalaz/std/BooleanFunctions.inverseConditional$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean negConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #52                 // InterfaceMethod scalaz/std/BooleanFunctions.negConditional$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean negInverseConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #56                 // InterfaceMethod scalaz/std/BooleanFunctions.negInverseConditional$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final void unless(boolean, scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #65                 // InterfaceMethod scalaz/std/BooleanFunctions.unless$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)V
       6: return

  public final void when(boolean, scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #69                 // InterfaceMethod scalaz/std/BooleanFunctions.when$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)V
       6: return

  public final <M, A> M unlessM(boolean, scala.Function0<M>, scalaz.Applicative<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #77                 // InterfaceMethod scalaz/std/BooleanFunctions.unlessM$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final <MA> java.lang.Object unlessMU(boolean, scala.Function0<MA>, scalaz.Unapply<scalaz.Applicative, MA>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #85                 // InterfaceMethod scalaz/std/BooleanFunctions.unlessMU$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final <M, A> M whenM(boolean, scala.Function0<M>, scalaz.Applicative<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #90                 // InterfaceMethod scalaz/std/BooleanFunctions.whenM$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final <MA> java.lang.Object whenMU(boolean, scala.Function0<MA>, scalaz.Unapply<scalaz.Applicative, MA>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #94                 // InterfaceMethod scalaz/std/BooleanFunctions.whenMU$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final <A> A fold(boolean, scala.Function0<A>, scala.Function0<A>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #102                // InterfaceMethod scalaz/std/BooleanFunctions.fold$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public final <A> scala.Option<A> option(boolean, scala.Function0<A>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #110                // InterfaceMethod scalaz/std/BooleanFunctions.option$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Lscala/Option;
       6: areturn

  public int test(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #116                // InterfaceMethod scalaz/std/BooleanFunctions.test$:(Lscalaz/std/BooleanFunctions;Z)I
       5: ireturn

  public final <A> A valueOrZero(boolean, scala.Function0<A>, scalaz.Monoid<A>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #125                // InterfaceMethod scalaz/std/BooleanFunctions.valueOrZero$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public final <A> A zeroOrValue(boolean, scala.Function0<A>, scalaz.Monoid<A>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #130                // InterfaceMethod scalaz/std/BooleanFunctions.zeroOrValue$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public final <M, A> M pointOrEmpty(boolean, scala.Function0<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #138                // InterfaceMethod scalaz/std/BooleanFunctions.pointOrEmpty$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       9: areturn

  public final <M, A> M emptyOrPoint(boolean, scala.Function0<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #143                // InterfaceMethod scalaz/std/BooleanFunctions.emptyOrPoint$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       9: areturn

  public final <M> scalaz.NaturalTransformation<java.lang.Object, M> pointOrEmptyNT(boolean, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #150                // InterfaceMethod scalaz/std/BooleanFunctions.pointOrEmptyNT$:(Lscalaz/std/BooleanFunctions;ZLscalaz/Applicative;Lscalaz/PlusEmpty;)Lscalaz/NaturalTransformation;
       7: areturn

  public final <M> scalaz.NaturalTransformation<java.lang.Object, M> emptyOrPointNT(boolean, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #154                // InterfaceMethod scalaz/std/BooleanFunctions.emptyOrPointNT$:(Lscalaz/std/BooleanFunctions;ZLscalaz/Applicative;Lscalaz/PlusEmpty;)Lscalaz/NaturalTransformation;
       7: areturn

  private scalaz.std.boolean$();
    Code:
       0: aload_0
       1: invokespecial #155                // Method java/lang/Object."<init>":()V
       4: return
}
