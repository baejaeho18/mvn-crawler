Compiled from "Set.scala"
public final class scalaz.std.SetInstances$$anon$2 implements scalaz.Order<scala.collection.immutable.Set<A>> {
  private final boolean equalIsNatural;

  private scalaz.syntax.OrderSyntax<scala.collection.immutable.Set<A>> orderSyntax;

  private scalaz.syntax.EqualSyntax<scala.collection.immutable.Set<A>> equalSyntax;

  private final scalaz.Order evidence$1$1;

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #58                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #67                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #71                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #75                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #79                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #85                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #89                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #95                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scala.collection.immutable.Set<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #103                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scala.collection.immutable.Set<A>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #111                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scala.collection.immutable.Set<A>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #117                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scala.collection.immutable.Set<A>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #124                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public scalaz.Equal<scala.collection.immutable.Set<A>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #131                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<scala.collection.immutable.Set<A>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #135                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scala.collection.immutable.Set<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #135                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scala.collection.immutable.Set<A>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #143                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scala.collection.immutable.Set<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #143                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Ordering order(scala.collection.immutable.Set<A>, scala.collection.immutable.Set<A>);
    Code:
       0: getstatic     #157                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: pop
       4: aload_0
       5: getfield      #159                // Field evidence$1$1:Lscalaz/Order;
       8: invokeinterface #161,  1          // InterfaceMethod scalaz/Order.toScalaOrdering:()Lscala/math/Ordering;
      13: astore_3
      14: getstatic     #157                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
      17: pop
      18: getstatic     #166                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: getstatic     #169                // Field scala/math/Ordering$Implicits$.MODULE$:Lscala/math/Ordering$Implicits$;
      24: aload_3
      25: invokevirtual #173                // Method scala/math/Ordering$Implicits$.seqOrdering:(Lscala/math/Ordering;)Lscala/math/Ordering;
      28: invokevirtual #177                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #22                 // class scala/math/Ordering
      34: astore        7
      36: new           #32                 // class scalaz/Order$$anonfun$fromScalaOrdering$2
      39: dup
      40: aload         7
      42: invokespecial #181                // Method scalaz/Order$$anonfun$fromScalaOrdering$2."<init>":(Lscala/math/Ordering;)V
      45: aconst_null
      46: astore        7
      48: astore        4
      50: getstatic     #157                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
      53: pop
      54: getstatic     #186                // Field scalaz/std/anyVal$.MODULE$:Lscalaz/std/anyVal$;
      57: invokevirtual #190                // Method scalaz/std/anyVal$.intInstance:()Lscalaz/Monoid;
      60: checkcast     #7                  // class scalaz/Order
      63: aload_1
      64: invokeinterface #196,  1          // InterfaceMethod scala/collection/immutable/Set.size:()I
      69: invokestatic  #202                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      72: aload_2
      73: invokeinterface #196,  1          // InterfaceMethod scala/collection/immutable/Set.size:()I
      78: invokestatic  #202                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      81: invokeinterface #204,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      86: astore        5
      88: getstatic     #207                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      91: aload         5
      93: invokevirtual #211                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      96: ifeq          133
      99: getstatic     #157                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
     102: pop
     103: aload_3
     104: invokedynamic #231,  0            // InvokeDynamic #0:apply:(Lscala/math/Ordering;)Lscala/Function1;
     109: astore        6
     111: new           #30                 // class scalaz/Order$$anon$1
     114: dup
     115: aload         4
     117: aload         6
     119: invokespecial #234                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
     122: aconst_null
     123: astore        6
     125: aload_1
     126: aload_2
     127: invokeinterface #204,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
     132: areturn
     133: aload         5
     135: areturn

  public boolean equal(scala.collection.immutable.Set<A>, scala.collection.immutable.Set<A>);
    Code:
       0: aload_0
       1: invokevirtual #246                // Method equalIsNatural:()Z
       4: ifeq          31
       7: aload_1
       8: dup
       9: ifnonnull     20
      12: pop
      13: aload_2
      14: ifnull        27
      17: goto          29
      20: aload_2
      21: invokevirtual #211                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      24: ifeq          29
      27: iconst_1
      28: ireturn
      29: iconst_0
      30: ireturn
      31: getstatic     #157                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
      34: pop
      35: aload_0
      36: getfield      #159                // Field evidence$1$1:Lscalaz/Order;
      39: invokeinterface #161,  1          // InterfaceMethod scalaz/Order.toScalaOrdering:()Lscala/math/Ordering;
      44: astore_3
      45: getstatic     #251                // Field scala/collection/immutable/TreeSet$.MODULE$:Lscala/collection/immutable/TreeSet$;
      48: aload_1
      49: invokeinterface #255,  1          // InterfaceMethod scala/collection/immutable/Set.toSeq:()Lscala/collection/immutable/Seq;
      54: aload_3
      55: invokevirtual #258                // Method scala/collection/immutable/TreeSet$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/Object;)Ljava/lang/Object;
      58: checkcast     #260                // class scala/collection/immutable/TreeSet
      61: astore        4
      63: getstatic     #251                // Field scala/collection/immutable/TreeSet$.MODULE$:Lscala/collection/immutable/TreeSet$;
      66: aload_2
      67: invokeinterface #255,  1          // InterfaceMethod scala/collection/immutable/Set.toSeq:()Lscala/collection/immutable/Seq;
      72: aload_3
      73: invokevirtual #258                // Method scala/collection/immutable/TreeSet$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/Object;)Ljava/lang/Object;
      76: checkcast     #260                // class scala/collection/immutable/TreeSet
      79: astore        5
      81: aload         4
      83: invokevirtual #264                // Method scala/collection/immutable/TreeSet.iterator:()Lscala/collection/Iterator;
      86: aload         5
      88: invokevirtual #264                // Method scala/collection/immutable/TreeSet.iterator:()Lscala/collection/Iterator;
      91: getstatic     #157                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
      94: pop
      95: aload_0
      96: getfield      #159                // Field evidence$1$1:Lscalaz/Order;
      99: invokedynamic #272,  0            // InvokeDynamic #1:apply:(Lscalaz/Order;)Lscala/Function2;
     104: invokeinterface #278,  3          // InterfaceMethod scala/collection/Iterator.corresponds:(Lscala/collection/IterableOnce;Lscala/Function2;)Z
     109: ireturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: getfield      #283                // Field equalIsNatural:Z
       4: ireturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #286                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #192                // class scala/collection/immutable/Set
       5: aload_2
       6: checkcast     #192                // class scala/collection/immutable/Set
       9: invokevirtual #288                // Method equal:(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #192                // class scala/collection/immutable/Set
       5: aload_2
       6: checkcast     #192                // class scala/collection/immutable/Set
       9: invokevirtual #290                // Method order:(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;)Lscalaz/Ordering;
      12: areturn

  public static final scala.collection.immutable.Seq $anonfun$order$1(scala.math.Ordering, scala.collection.immutable.Set);
    Code:
       0: aload_1
       1: invokeinterface #255,  1          // InterfaceMethod scala/collection/immutable/Set.toSeq:()Lscala/collection/immutable/Seq;
       6: aload_0
       7: invokeinterface #298,  2          // InterfaceMethod scala/collection/immutable/Seq.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
      12: checkcast     #294                // class scala/collection/immutable/Seq
      15: areturn

  public static final boolean $anonfun$equal$1(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #302,  3          // InterfaceMethod scalaz/Order.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ireturn

  public scalaz.std.SetInstances$$anon$2(scalaz.std.SetInstances, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #159                // Field evidence$1$1:Lscalaz/Order;
       5: aload_0
       6: invokespecial #307                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #311                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      13: aload_0
      14: invokestatic  #314                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      17: aload_0
      18: getstatic     #319                // Field scalaz/Equal$.MODULE$:Lscalaz/Equal$;
      21: pop
      22: aload_2
      23: invokeinterface #320,  1          // InterfaceMethod scalaz/Equal.equalIsNatural:()Z
      28: putfield      #283                // Field equalIsNatural:Z
      31: invokestatic  #325                // Method scala/runtime/Statics.releaseFence:()V
      34: return

  public static final java.lang.Object $anonfun$equal$1$adapted(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #328                // Method $anonfun$equal$1:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: invokestatic  #332                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       9: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #344,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
