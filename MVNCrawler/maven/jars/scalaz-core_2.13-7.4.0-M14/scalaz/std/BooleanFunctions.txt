Compiled from "AnyVal.scala"
public interface scalaz.std.BooleanFunctions {
  public static boolean conjunction$(scalaz.std.BooleanFunctions, boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #26                 // InterfaceMethod conjunction:(ZLscala/Function0;)Z
       6: ireturn

  public default boolean conjunction(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: iload_1
       1: ifeq          15
       4: aload_2
       5: invokeinterface #36,  1           // InterfaceMethod scala/Function0.apply$mcZ$sp:()Z
      10: ifeq          15
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: ireturn

  public static boolean disjunction$(scalaz.std.BooleanFunctions, boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #41                 // InterfaceMethod disjunction:(ZLscala/Function0;)Z
       6: ireturn

  public default boolean disjunction(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: iload_1
       1: ifne          13
       4: aload_2
       5: invokeinterface #36,  1           // InterfaceMethod scala/Function0.apply$mcZ$sp:()Z
      10: ifeq          15
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: ireturn

  public static boolean nor$(scalaz.std.BooleanFunctions, boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #45                 // InterfaceMethod nor:(ZLscala/Function0;)Z
       6: ireturn

  public default boolean nor(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: iload_1
       1: ifne          15
       4: aload_2
       5: invokeinterface #36,  1           // InterfaceMethod scala/Function0.apply$mcZ$sp:()Z
      10: ifne          15
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: ireturn

  public static boolean nand$(scalaz.std.BooleanFunctions, boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #49                 // InterfaceMethod nand:(ZLscala/Function0;)Z
       6: ireturn

  public default boolean nand(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: iload_1
       1: ifeq          13
       4: aload_2
       5: invokeinterface #36,  1           // InterfaceMethod scala/Function0.apply$mcZ$sp:()Z
      10: ifne          15
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: ireturn

  public static boolean conditional$(scalaz.std.BooleanFunctions, boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #53                 // InterfaceMethod conditional:(ZLscala/Function0;)Z
       6: ireturn

  public default boolean conditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: iload_1
       1: ifeq          13
       4: aload_2
       5: invokeinterface #36,  1           // InterfaceMethod scala/Function0.apply$mcZ$sp:()Z
      10: ifeq          15
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: ireturn

  public static boolean inverseConditional$(scalaz.std.BooleanFunctions, boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #57                 // InterfaceMethod inverseConditional:(ZLscala/Function0;)Z
       6: ireturn

  public default boolean inverseConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: iload_1
       1: ifne          13
       4: aload_2
       5: invokeinterface #36,  1           // InterfaceMethod scala/Function0.apply$mcZ$sp:()Z
      10: ifne          15
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: ireturn

  public static boolean negConditional$(scalaz.std.BooleanFunctions, boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #61                 // InterfaceMethod negConditional:(ZLscala/Function0;)Z
       6: ireturn

  public default boolean negConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: iload_1
       1: ifeq          15
       4: aload_2
       5: invokeinterface #36,  1           // InterfaceMethod scala/Function0.apply$mcZ$sp:()Z
      10: ifne          15
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: ireturn

  public static boolean negInverseConditional$(scalaz.std.BooleanFunctions, boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #65                 // InterfaceMethod negInverseConditional:(ZLscala/Function0;)Z
       6: ireturn

  public default boolean negInverseConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: iload_1
       1: ifne          15
       4: aload_2
       5: invokeinterface #36,  1           // InterfaceMethod scala/Function0.apply$mcZ$sp:()Z
      10: ifeq          15
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: ireturn

  public static void unless$(scalaz.std.BooleanFunctions, boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #73                 // InterfaceMethod unless:(ZLscala/Function0;)V
       6: return

  public default void unless(boolean, scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: iload_1
       1: ifne          11
       4: aload_2
       5: invokeinterface #78,  1           // InterfaceMethod scala/Function0.apply$mcV$sp:()V
      10: return
      11: return

  public static void when$(scalaz.std.BooleanFunctions, boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #82                 // InterfaceMethod when:(ZLscala/Function0;)V
       6: return

  public default void when(boolean, scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: iload_1
       1: ifeq          11
       4: aload_2
       5: invokeinterface #78,  1           // InterfaceMethod scala/Function0.apply$mcV$sp:()V
      10: return
      11: return

  public static java.lang.Object unlessM$(scalaz.std.BooleanFunctions, boolean, scala.Function0, scalaz.Applicative);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #89                 // InterfaceMethod unlessM:(ZLscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public default <M, A> M unlessM(boolean, scala.Function0<M>, scalaz.Applicative<M>);
    Code:
       0: aload_3
       1: iload_1
       2: aload_2
       3: invokeinterface #96,  3           // InterfaceMethod scalaz/Applicative.unlessM:(ZLscala/Function0;)Ljava/lang/Object;
       8: areturn

  public static java.lang.Object unlessMU$(scalaz.std.BooleanFunctions, boolean, scala.Function0, scalaz.Unapply);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #102                // InterfaceMethod unlessMU:(ZLscala/Function0;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public default <MA> java.lang.Object unlessMU(boolean, scala.Function0<MA>, scalaz.Unapply<scalaz.Applicative, MA>);
    Code:
       0: aload_3
       1: invokeinterface #110,  1          // InterfaceMethod scalaz/Unapply.TC:()Ljava/lang/Object;
       6: checkcast     #93                 // class scalaz/Applicative
       9: iload_1
      10: aload_3
      11: aload_2
      12: invokedynamic #128,  0            // InvokeDynamic #0:apply:(Lscalaz/Unapply;Lscala/Function0;)Lscala/Function0;
      17: invokeinterface #96,  3           // InterfaceMethod scalaz/Applicative.unlessM:(ZLscala/Function0;)Ljava/lang/Object;
      22: areturn

  public static java.lang.Object whenM$(scalaz.std.BooleanFunctions, boolean, scala.Function0, scalaz.Applicative);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #132                // InterfaceMethod whenM:(ZLscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public default <M, A> M whenM(boolean, scala.Function0<M>, scalaz.Applicative<M>);
    Code:
       0: aload_3
       1: iload_1
       2: aload_2
       3: invokeinterface #134,  3          // InterfaceMethod scalaz/Applicative.whenM:(ZLscala/Function0;)Ljava/lang/Object;
       8: areturn

  public static java.lang.Object whenMU$(scalaz.std.BooleanFunctions, boolean, scala.Function0, scalaz.Unapply);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #138                // InterfaceMethod whenMU:(ZLscala/Function0;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public default <MA> java.lang.Object whenMU(boolean, scala.Function0<MA>, scalaz.Unapply<scalaz.Applicative, MA>);
    Code:
       0: aload_3
       1: invokeinterface #110,  1          // InterfaceMethod scalaz/Unapply.TC:()Ljava/lang/Object;
       6: checkcast     #93                 // class scalaz/Applicative
       9: iload_1
      10: aload_3
      11: aload_2
      12: invokedynamic #143,  0            // InvokeDynamic #1:apply:(Lscalaz/Unapply;Lscala/Function0;)Lscala/Function0;
      17: invokeinterface #134,  3          // InterfaceMethod scalaz/Applicative.whenM:(ZLscala/Function0;)Ljava/lang/Object;
      22: areturn

  public static java.lang.Object fold$(scalaz.std.BooleanFunctions, boolean, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #150                // InterfaceMethod fold:(ZLscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public default <A> A fold(boolean, scala.Function0<A>, scala.Function0<A>);
    Code:
       0: iload_1
       1: ifeq          11
       4: aload_2
       5: invokeinterface #153,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: areturn
      11: aload_3
      12: invokeinterface #153,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      17: areturn

  public static scala.Option option$(scalaz.std.BooleanFunctions, boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #160                // InterfaceMethod option:(ZLscala/Function0;)Lscala/Option;
       6: areturn

  public default <A> scala.Option<A> option(boolean, scala.Function0<A>);
    Code:
       0: iload_1
       1: ifeq          18
       4: new           #163                // class scala/Some
       7: dup
       8: aload_2
       9: invokeinterface #153,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      14: invokespecial #167                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      17: areturn
      18: getstatic     #173                // Field scala/None$.MODULE$:Lscala/None$;
      21: areturn

  public static int test$(scalaz.std.BooleanFunctions, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #179                // InterfaceMethod test:(Z)I
       5: ireturn

  public default int test(boolean);
    Code:
       0: iload_1
       1: ifeq          6
       4: iconst_1
       5: ireturn
       6: iconst_0
       7: ireturn

  public static java.lang.Object valueOrZero$(scalaz.std.BooleanFunctions, boolean, scala.Function0, scalaz.Monoid);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #187                // InterfaceMethod valueOrZero:(ZLscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public default <A> A valueOrZero(boolean, scala.Function0<A>, scalaz.Monoid<A>);
    Code:
       0: iload_1
       1: ifeq          11
       4: aload_2
       5: invokeinterface #153,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: areturn
      11: aload_3
      12: invokeinterface #194,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      17: areturn

  public static java.lang.Object zeroOrValue$(scalaz.std.BooleanFunctions, boolean, scala.Function0, scalaz.Monoid);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #198                // InterfaceMethod zeroOrValue:(ZLscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public default <A> A zeroOrValue(boolean, scala.Function0<A>, scalaz.Monoid<A>);
    Code:
       0: iload_1
       1: ifne          11
       4: aload_2
       5: invokeinterface #153,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: areturn
      11: aload_3
      12: invokeinterface #194,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      17: areturn

  public static java.lang.Object pointOrEmpty$(scalaz.std.BooleanFunctions, boolean, scala.Function0, scalaz.Applicative, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #205                // InterfaceMethod pointOrEmpty:(ZLscala/Function0;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       9: areturn

  public default <M, A> M pointOrEmpty(boolean, scala.Function0<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: iload_1
       1: ifeq          12
       4: aload_3
       5: aload_2
       6: invokeinterface #211,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      11: areturn
      12: aload         4
      14: invokeinterface #216,  1          // InterfaceMethod scalaz/PlusEmpty.empty:()Ljava/lang/Object;
      19: areturn

  public static java.lang.Object emptyOrPoint$(scalaz.std.BooleanFunctions, boolean, scala.Function0, scalaz.Applicative, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #220                // InterfaceMethod emptyOrPoint:(ZLscala/Function0;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       9: areturn

  public default <M, A> M emptyOrPoint(boolean, scala.Function0<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: iload_1
       1: ifne          12
       4: aload_3
       5: aload_2
       6: invokeinterface #211,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      11: areturn
      12: aload         4
      14: invokeinterface #216,  1          // InterfaceMethod scalaz/PlusEmpty.empty:()Ljava/lang/Object;
      19: areturn

  public static scalaz.NaturalTransformation pointOrEmptyNT$(scalaz.std.BooleanFunctions, boolean, scalaz.Applicative, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #226                // InterfaceMethod pointOrEmptyNT:(ZLscalaz/Applicative;Lscalaz/PlusEmpty;)Lscalaz/NaturalTransformation;
       7: areturn

  public default <M> scalaz.NaturalTransformation<java.lang.Object, M> pointOrEmptyNT(boolean, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: new           #15                 // class scalaz/std/BooleanFunctions$$anon$16
       3: dup
       4: aload_0
       5: iload_1
       6: aload_2
       7: aload_3
       8: invokespecial #230                // Method scalaz/std/BooleanFunctions$$anon$16."<init>":(Lscalaz/std/BooleanFunctions;ZLscalaz/Applicative;Lscalaz/PlusEmpty;)V
      11: areturn

  public static scalaz.NaturalTransformation emptyOrPointNT$(scalaz.std.BooleanFunctions, boolean, scalaz.Applicative, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #234                // InterfaceMethod emptyOrPointNT:(ZLscalaz/Applicative;Lscalaz/PlusEmpty;)Lscalaz/NaturalTransformation;
       7: areturn

  public default <M> scalaz.NaturalTransformation<java.lang.Object, M> emptyOrPointNT(boolean, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: new           #17                 // class scalaz/std/BooleanFunctions$$anon$17
       3: dup
       4: aload_0
       5: iload_1
       6: aload_2
       7: aload_3
       8: invokespecial #235                // Method scalaz/std/BooleanFunctions$$anon$17."<init>":(Lscalaz/std/BooleanFunctions;ZLscalaz/Applicative;Lscalaz/PlusEmpty;)V
      11: areturn

  public static java.lang.Object $anonfun$unlessMU$1(scalaz.Unapply, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #153,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: astore_2
       7: aload_0
       8: invokeinterface #241,  1          // InterfaceMethod scalaz/Unapply.leibniz:()Lscalaz/Leibniz;
      13: dup
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: aload_2
      20: invokevirtual #247                // Method scalaz/Leibniz.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      23: areturn

  public static java.lang.Object $anonfun$whenMU$1(scalaz.Unapply, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #153,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: astore_2
       7: aload_0
       8: invokeinterface #241,  1          // InterfaceMethod scalaz/Unapply.leibniz:()Lscalaz/Leibniz;
      13: dup
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: aload_2
      20: invokevirtual #247                // Method scalaz/Leibniz.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      23: areturn

  public static void $init$(scalaz.std.BooleanFunctions);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #265,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
