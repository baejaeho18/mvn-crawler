Compiled from "time.scala"
public final class scalaz.std.java.TimeInstances$$anon$3 implements scalaz.Monoid<java.time.Period>, scalaz.Equal<java.time.Period> {
  private scalaz.syntax.EqualSyntax<java.time.Period> equalSyntax;

  private scalaz.syntax.MonoidSyntax<java.time.Period> monoidSyntax;

  private scalaz.syntax.SemigroupSyntax<java.time.Period> semigroupSyntax;

  public <G> scalaz.Equal<G> contramap(scala.Function1<G, java.time.Period>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // InterfaceMethod scalaz/Equal.contramap$:(Lscalaz/Equal;Lscala/Function1;)Lscalaz/Equal;
       5: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #49                 // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<java.time.Period>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #56                 // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #64                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #74                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #82                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #91                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #96                 // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #103                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #107                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #114                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #121                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<java.time.Period>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #128                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #133                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<java.time.Period> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.time.Period>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #140                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<java.time.Period> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.time.Period, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #145                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #152                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #159                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<java.time.Period>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #166                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.EqualSyntax<java.time.Period> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #170                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<java.time.Period>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #170                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.syntax.MonoidSyntax<java.time.Period> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #178                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<java.time.Period>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #178                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<java.time.Period> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #185                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<java.time.Period>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #185                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public java.time.Period zero();
    Code:
       0: getstatic     #196                // Field java/time/Period.ZERO:Ljava/time/Period;
       3: areturn

  public java.time.Period append(java.time.Period, scala.Function0<java.time.Period>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #206,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: checkcast     #208                // class java/time/temporal/TemporalAmount
      10: invokevirtual #212                // Method java/time/Period.plus:(Ljava/time/temporal/TemporalAmount;)Ljava/time/Period;
      13: areturn

  public boolean equal(java.time.Period, java.time.Period);
    Code:
       0: aload_1
       1: dup
       2: ifnonnull     13
       5: pop
       6: aload_2
       7: ifnull        20
      10: goto          22
      13: aload_2
      14: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      17: ifeq          22
      20: iconst_1
      21: ireturn
      22: iconst_0
      23: ireturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #192                // class java/time/Period
       5: aload_2
       6: checkcast     #192                // class java/time/Period
       9: invokevirtual #223                // Method equal:(Ljava/time/Period;Ljava/time/Period;)Z
      12: ireturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #192                // class java/time/Period
       5: aload_2
       6: invokevirtual #226                // Method append:(Ljava/time/Period;Lscala/Function0;)Ljava/time/Period;
       9: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #228                // Method zero:()Ljava/time/Period;
       4: areturn

  public scalaz.std.java.TimeInstances$$anon$3(scalaz.std.java.TimeInstances);
    Code:
       0: aload_0
       1: invokespecial #234                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #238                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
       8: aload_0
       9: invokestatic  #241                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      12: aload_0
      13: invokestatic  #244                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      16: invokestatic  #249                // Method scala/runtime/Statics.releaseFence:()V
      19: return
}
