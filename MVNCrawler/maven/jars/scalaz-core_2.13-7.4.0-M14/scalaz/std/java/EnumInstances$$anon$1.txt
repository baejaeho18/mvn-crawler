Compiled from "Enum.scala"
public final class scalaz.std.java.EnumInstances$$anon$1 implements scalaz.Enum<E> {
  private E[] values;

  private scalaz.syntax.EnumSyntax<E> enumSyntax;

  private scalaz.syntax.OrderSyntax<E> orderSyntax;

  private scalaz.syntax.EqualSyntax<E> equalSyntax;

  private volatile boolean bitmap$0;

  private scala.reflect.ClassTag evidence$1$1;

  public java.lang.Object succn(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #50                 // InterfaceMethod scalaz/Enum.succn$:(Lscalaz/Enum;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object predn(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #58                 // InterfaceMethod scalaz/Enum.predn$:(Lscalaz/Enum;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scalaz.Kleisli<scala.Option, E, E> succx();
    Code:
       0: aload_0
       1: invokestatic  #65                 // InterfaceMethod scalaz/Enum.succx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public scalaz.Kleisli<scala.Option, E, E> predx();
    Code:
       0: aload_0
       1: invokestatic  #69                 // InterfaceMethod scalaz/Enum.predx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public <X> scalaz.IndexedStateT<E, E, java.lang.Object, X> succState(scala.Function1<E, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #77                 // InterfaceMethod scalaz/Enum.succState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y succStateZeroM(scala.Function1<E, X>, scala.Function1<X, scalaz.IndexedStateT<E, E, java.lang.Object, Y>>, scalaz.Monoid<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #87                 // InterfaceMethod scalaz/Enum.succStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y succStateZero(scala.Function1<E, X>, scala.Function1<X, Y>, scalaz.Monoid<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #93                 // InterfaceMethod scalaz/Enum.succStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> succStateMinM(scala.Function1<E, X>, scala.Function1<X, scalaz.IndexedStateT<E, E, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #100                // InterfaceMethod scalaz/Enum.succStateMinM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> succStateMin(scala.Function1<E, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #105                // InterfaceMethod scalaz/Enum.succStateMin$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X> scalaz.IndexedStateT<E, E, java.lang.Object, X> predState(scala.Function1<E, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #109                // InterfaceMethod scalaz/Enum.predState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y predStateZeroM(scala.Function1<E, X>, scala.Function1<X, scalaz.IndexedStateT<E, E, java.lang.Object, Y>>, scalaz.Monoid<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #113                // InterfaceMethod scalaz/Enum.predStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y predStateZero(scala.Function1<E, X>, scala.Function1<X, Y>, scalaz.Monoid<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #117                // InterfaceMethod scalaz/Enum.predStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> predStateMaxM(scala.Function1<E, X>, scala.Function1<X, scalaz.IndexedStateT<E, E, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #121                // InterfaceMethod scalaz/Enum.predStateMaxM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> predStateMax(scala.Function1<E, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #125                // InterfaceMethod scalaz/Enum.predStateMax$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scalaz.EphemeralStream from(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #131                // InterfaceMethod scalaz/Enum.from$:(Lscalaz/Enum;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public scalaz.EphemeralStream fromStep(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #137                // InterfaceMethod scalaz/Enum.fromStep$:(Lscalaz/Enum;ILjava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.EphemeralStream fromTo(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #144                // InterfaceMethod scalaz/Enum.fromTo$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.IList fromToL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #150                // InterfaceMethod scalaz/Enum.fromToL$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       6: areturn

  public scalaz.EphemeralStream fromStepTo(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #156                // InterfaceMethod scalaz/Enum.fromStepTo$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       7: areturn

  public scalaz.IList fromStepToL(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #162                // InterfaceMethod scalaz/Enum.fromStepToL$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       7: areturn

  public scalaz.Enum<E>.EnumLaw enumLaw();
    Code:
       0: aload_0
       1: invokestatic  #169                // InterfaceMethod scalaz/Enum.enumLaw$:(Lscalaz/Enum;)Lscalaz/Enum$EnumLaw;
       4: areturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #177                // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #183                // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #187                // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #191                // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #195                // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #201                // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #205                // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #211                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #218                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<E> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #225                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<E> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #232                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<E>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #239                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public scalaz.Equal<E>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #246                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.EnumSyntax<E> enumSyntax();
    Code:
       0: aload_0
       1: getfield      #250                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       4: areturn

  public void scalaz$Enum$_setter_$enumSyntax_$eq(scalaz.syntax.EnumSyntax<E>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #250                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       5: return

  public scalaz.syntax.OrderSyntax<E> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #258                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<E>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #258                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<E> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #265                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<E>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #265                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  private E[] values$lzycompute();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #273                // Field bitmap$0:Z
       6: ifne          42
       9: aload_0
      10: getstatic     #279                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      13: aload_0
      14: getfield      #281                // Field evidence$1$1:Lscala/reflect/ClassTag;
      17: invokevirtual #285                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #287                // class scala/reflect/ClassTag
      23: invokeinterface #291,  1          // InterfaceMethod scala/reflect/ClassTag.runtimeClass:()Ljava/lang/Class;
      28: invokevirtual #297                // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;
      31: checkcast     #298                // class "[Ljava/lang/Enum;"
      34: putfield      #300                // Field values:[Ljava/lang/Enum;
      37: aload_0
      38: iconst_1
      39: putfield      #273                // Field bitmap$0:Z
      42: aload_0
      43: monitorexit
      44: goto          50
      47: aload_0
      48: monitorexit
      49: athrow
      50: aload_0
      51: aconst_null
      52: putfield      #281                // Field evidence$1$1:Lscala/reflect/ClassTag;
      55: aload_0
      56: getfield      #300                // Field values:[Ljava/lang/Enum;
      59: areturn
    Exception table:
       from    to  target type
           2    42    47   any

  private E[] values();
    Code:
       0: aload_0
       1: getfield      #273                // Field bitmap$0:Z
       4: ifne          12
       7: aload_0
       8: invokespecial #304                // Method values$lzycompute:()[Ljava/lang/Enum;
      11: areturn
      12: aload_0
      13: getfield      #300                // Field values:[Ljava/lang/Enum;
      16: areturn

  public boolean equal(E, E);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: iconst_0
       8: ireturn

  public boolean equalIsNatural();
    Code:
       0: iconst_1
       1: ireturn

  public E pred(E);
    Code:
       0: aload_0
       1: invokespecial #316                // Method values:()[Ljava/lang/Enum;
       4: getstatic     #279                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_0
       8: invokespecial #316                // Method values:()[Ljava/lang/Enum;
      11: invokevirtual #320                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_2
      15: getstatic     #325                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
      18: aload_2
      19: invokevirtual #329                // Method scala/collection/ArrayOps$.indexOf$default$2$extension:(Ljava/lang/Object;)I
      22: istore_3
      23: getstatic     #325                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
      26: aload_2
      27: aload_1
      28: iload_3
      29: invokevirtual #333                // Method scala/collection/ArrayOps$.indexOf$extension:(Ljava/lang/Object;Ljava/lang/Object;I)I
      32: aload_0
      33: invokespecial #316                // Method values:()[Ljava/lang/Enum;
      36: arraylength
      37: iadd
      38: iconst_1
      39: isub
      40: aload_0
      41: invokespecial #316                // Method values:()[Ljava/lang/Enum;
      44: arraylength
      45: irem
      46: aaload
      47: areturn

  public E succ(E);
    Code:
       0: aload_0
       1: invokespecial #316                // Method values:()[Ljava/lang/Enum;
       4: getstatic     #279                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_0
       8: invokespecial #316                // Method values:()[Ljava/lang/Enum;
      11: invokevirtual #320                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_2
      15: getstatic     #325                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
      18: aload_2
      19: invokevirtual #329                // Method scala/collection/ArrayOps$.indexOf$default$2$extension:(Ljava/lang/Object;)I
      22: istore_3
      23: getstatic     #325                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
      26: aload_2
      27: aload_1
      28: iload_3
      29: invokevirtual #333                // Method scala/collection/ArrayOps$.indexOf$extension:(Ljava/lang/Object;Ljava/lang/Object;I)I
      32: iconst_1
      33: iadd
      34: aload_0
      35: invokespecial #316                // Method values:()[Ljava/lang/Enum;
      38: arraylength
      39: irem
      40: aaload
      41: areturn

  public scala.Option<E> min();
    Code:
       0: getstatic     #325                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       3: getstatic     #279                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: aload_0
       7: invokespecial #316                // Method values:()[Ljava/lang/Enum;
      10: invokevirtual #320                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
      13: invokevirtual #342                // Method scala/collection/ArrayOps$.headOption$extension:(Ljava/lang/Object;)Lscala/Option;
      16: areturn

  public scala.Option<E> max();
    Code:
       0: getstatic     #325                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       3: getstatic     #279                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: aload_0
       7: invokespecial #316                // Method values:()[Ljava/lang/Enum;
      10: invokevirtual #320                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
      13: invokevirtual #345                // Method scala/collection/ArrayOps$.lastOption$extension:(Ljava/lang/Object;)Lscala/Option;
      16: areturn

  public scalaz.Ordering order(E, E);
    Code:
       0: getstatic     #353                // Field scalaz/Ordering$.MODULE$:Lscalaz/Ordering$;
       3: getstatic     #279                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: aload_0
       7: invokespecial #316                // Method values:()[Ljava/lang/Enum;
      10: invokevirtual #320                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
      13: astore_3
      14: getstatic     #325                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
      17: aload_3
      18: invokevirtual #329                // Method scala/collection/ArrayOps$.indexOf$default$2$extension:(Ljava/lang/Object;)I
      21: istore        4
      23: getstatic     #325                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
      26: aload_3
      27: aload_1
      28: iload         4
      30: invokevirtual #333                // Method scala/collection/ArrayOps$.indexOf$extension:(Ljava/lang/Object;Ljava/lang/Object;I)I
      33: getstatic     #279                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      36: aload_0
      37: invokespecial #316                // Method values:()[Ljava/lang/Enum;
      40: invokevirtual #320                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
      43: astore        5
      45: getstatic     #325                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
      48: aload         5
      50: invokevirtual #329                // Method scala/collection/ArrayOps$.indexOf$default$2$extension:(Ljava/lang/Object;)I
      53: istore        6
      55: getstatic     #325                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
      58: aload         5
      60: aload_2
      61: iload         6
      63: invokevirtual #333                // Method scala/collection/ArrayOps$.indexOf$extension:(Ljava/lang/Object;Ljava/lang/Object;I)I
      66: isub
      67: invokevirtual #357                // Method scalaz/Ordering$.fromInt:(I)Lscalaz/Ordering;
      70: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #362                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #364                // class java/lang/Enum
       5: aload_2
       6: checkcast     #364                // class java/lang/Enum
       9: invokevirtual #366                // Method order:(Ljava/lang/Enum;Ljava/lang/Enum;)Lscalaz/Ordering;
      12: areturn

  public java.lang.Object succ(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #364                // class java/lang/Enum
       5: invokevirtual #368                // Method succ:(Ljava/lang/Enum;)Ljava/lang/Enum;
       8: areturn

  public java.lang.Object pred(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #364                // class java/lang/Enum
       5: invokevirtual #370                // Method pred:(Ljava/lang/Enum;)Ljava/lang/Enum;
       8: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #364                // class java/lang/Enum
       5: aload_2
       6: checkcast     #364                // class java/lang/Enum
       9: invokevirtual #372                // Method equal:(Ljava/lang/Enum;Ljava/lang/Enum;)Z
      12: ireturn

  public scalaz.std.java.EnumInstances$$anon$1(scalaz.std.java.EnumInstances, scala.reflect.ClassTag);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #281                // Field evidence$1$1:Lscala/reflect/ClassTag;
       5: aload_0
       6: invokespecial #378                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #382                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      13: aload_0
      14: invokestatic  #385                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      17: aload_0
      18: invokestatic  #388                // InterfaceMethod scalaz/Enum.$init$:(Lscalaz/Enum;)V
      21: invokestatic  #393                // Method scala/runtime/Statics.releaseFence:()V
      24: return
}
