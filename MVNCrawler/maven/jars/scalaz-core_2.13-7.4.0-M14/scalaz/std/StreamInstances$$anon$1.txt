Compiled from "Stream.scala"
public final class scalaz.std.StreamInstances$$anon$1 implements scalaz.Traverse<scala.collection.immutable.Stream>, scalaz.MonadPlus<scala.collection.immutable.Stream>, scalaz.Alt<scala.collection.immutable.Stream>, scalaz.BindRec<scala.collection.immutable.Stream>, scalaz.Zip<scala.collection.immutable.Stream>, scalaz.Unzip<scala.collection.immutable.Stream>, scalaz.Align<scala.collection.immutable.Stream>, scalaz.IsEmpty<scala.collection.immutable.Stream>, scalaz.Cobind<scala.collection.immutable.Stream>, scalaz.std.IterableSubtypeFoldable<scala.collection.immutable.Stream>, scalaz.Functor$OverrideWiden<scala.collection.immutable.Stream> {
  private scalaz.syntax.CobindSyntax<scala.collection.immutable.Stream> cobindSyntax;

  private scalaz.syntax.IsEmptySyntax<scala.collection.immutable.Stream> isEmptySyntax;

  private scalaz.syntax.AlignSyntax<scala.collection.immutable.Stream> alignSyntax;

  private scalaz.syntax.UnzipSyntax<scala.collection.immutable.Stream> unzipSyntax;

  private scalaz.syntax.ZipSyntax<scala.collection.immutable.Stream> zipSyntax;

  private scalaz.syntax.BindRecSyntax<scala.collection.immutable.Stream> bindRecSyntax;

  private scalaz.syntax.AltSyntax<scala.collection.immutable.Stream> altSyntax;

  private scalaz.syntax.InvariantAltSyntax<scala.collection.immutable.Stream> invariantAltSyntax;

  private scalaz.syntax.MonadPlusSyntax<scala.collection.immutable.Stream> monadPlusSyntax;

  private scalaz.syntax.ApplicativePlusSyntax<scala.collection.immutable.Stream> applicativePlusSyntax;

  private scalaz.syntax.PlusEmptySyntax<scala.collection.immutable.Stream> plusEmptySyntax;

  private scalaz.syntax.PlusSyntax<scala.collection.immutable.Stream> plusSyntax;

  private scalaz.syntax.MonadSyntax<scala.collection.immutable.Stream> monadSyntax;

  private scalaz.syntax.BindSyntax<scala.collection.immutable.Stream> bindSyntax;

  private scalaz.syntax.ApplicativeSyntax<scala.collection.immutable.Stream> applicativeSyntax;

  private scalaz.syntax.InvariantApplicativeSyntax<scala.collection.immutable.Stream> invariantApplicativeSyntax;

  private scalaz.syntax.ApplySyntax<scala.collection.immutable.Stream> applySyntax;

  private scalaz.syntax.TraverseSyntax<scala.collection.immutable.Stream> traverseSyntax;

  private scalaz.syntax.FoldableSyntax<scala.collection.immutable.Stream> foldableSyntax;

  private scalaz.syntax.FunctorSyntax<scala.collection.immutable.Stream> functorSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<scala.collection.immutable.Stream> invariantFunctorSyntax;

  public final java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #224                // InterfaceMethod scalaz/Functor$OverrideWiden.widen$:(Lscalaz/Functor$OverrideWiden;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public int length(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #235                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.length$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)I
       5: ireturn

  public final scala.collection.immutable.List toList(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #242                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toList$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/List;
       5: areturn

  public final scala.collection.immutable.Vector toVector(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #248                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toVector$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/Vector;
       5: areturn

  public final scala.collection.immutable.Set toSet(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #254                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toSet$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/Set;
       5: areturn

  public final scala.collection.immutable.LazyList toLazyList(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #260                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toLazyList$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/LazyList;
       5: areturn

  public final boolean empty(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #266                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.empty$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Z
       5: ireturn

  public final boolean any(scala.collection.Iterable, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #273                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.any$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;Lscala/Function1;)Z
       6: ireturn

  public final boolean all(scala.collection.Iterable, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #278                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.all$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;Lscala/Function1;)Z
       6: ireturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #285                // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.Cobind<scala.collection.immutable.Stream>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #292                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public scalaz.IsEmpty<scala.collection.immutable.Stream>.IsEmptyLaw isEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #299                // InterfaceMethod scalaz/IsEmpty.isEmptyLaw$:(Lscalaz/IsEmpty;)Lscalaz/IsEmpty$IsEmptyLaw;
       4: areturn

  public <G> scalaz.Align<?> product(scalaz.Align<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #307                // InterfaceMethod scalaz/Align.product$:(Lscalaz/Align;Lscalaz/Align;)Lscalaz/Align;
       5: areturn

  public java.lang.Object align(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #315                // InterfaceMethod scalaz/Align.align$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public <A, B, C> scala.Function2<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>, scala.collection.immutable.Stream<C>> padWith(scala.Function2<scala.Option<A>, scala.Option<B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #322                // InterfaceMethod scalaz/Align.padWith$:(Lscalaz/Align;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B> scala.Function2<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>, scala.collection.immutable.Stream<scala.Tuple2<scala.Option<A>, scala.Option<B>>>> pad();
    Code:
       0: aload_0
       1: invokestatic  #330                // InterfaceMethod scalaz/Align.pad$:(Lscalaz/Align;)Lscala/Function2;
       4: areturn

  public java.lang.Object merge(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #339                // InterfaceMethod scalaz/Align.merge$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object alignSwap(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #344                // InterfaceMethod scalaz/Align.alignSwap$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignA(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #348                // InterfaceMethod scalaz/Align.alignA$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignB(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #352                // InterfaceMethod scalaz/Align.alignB$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThis(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #356                // InterfaceMethod scalaz/Align.alignThis$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThat(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #360                // InterfaceMethod scalaz/Align.alignThat$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignBoth(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #364                // InterfaceMethod scalaz/Align.alignBoth$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scalaz.Align<scala.collection.immutable.Stream>.AlignLaw alignLaw();
    Code:
       0: aload_0
       1: invokestatic  #371                // InterfaceMethod scalaz/Align.alignLaw$:(Lscalaz/Align;)Lscalaz/Align$AlignLaw;
       4: areturn

  public java.lang.Object firsts(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #377                // InterfaceMethod scalaz/Unzip.firsts$:(Lscalaz/Unzip;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object seconds(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #381                // InterfaceMethod scalaz/Unzip.seconds$:(Lscalaz/Unzip;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Unzip<?> compose(scalaz.Functor<scala.collection.immutable.Stream>, scalaz.Unzip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #389                // InterfaceMethod scalaz/Unzip.compose$:(Lscalaz/Unzip;Lscalaz/Functor;Lscalaz/Unzip;)Lscalaz/Unzip;
       6: areturn

  public <G> scalaz.Unzip<?> product(scalaz.Unzip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #396                // InterfaceMethod scalaz/Unzip.product$:(Lscalaz/Unzip;Lscalaz/Unzip;)Lscalaz/Unzip;
       5: areturn

  public scala.Tuple3 unzip3(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #403                // InterfaceMethod scalaz/Unzip.unzip3$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple3;
       5: areturn

  public scala.Tuple4 unzip4(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #409                // InterfaceMethod scalaz/Unzip.unzip4$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple4;
       5: areturn

  public scala.Tuple5 unzip5(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #415                // InterfaceMethod scalaz/Unzip.unzip5$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple5;
       5: areturn

  public scala.Tuple6 unzip6(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #421                // InterfaceMethod scalaz/Unzip.unzip6$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple6;
       5: areturn

  public scala.Tuple7 unzip7(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #427                // InterfaceMethod scalaz/Unzip.unzip7$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple7;
       5: areturn

  public <G> scalaz.Zip<?> compose(scalaz.Functor<scala.collection.immutable.Stream>, scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #432                // InterfaceMethod scalaz/Zip.compose$:(Lscalaz/Zip;Lscalaz/Functor;Lscalaz/Zip;)Lscalaz/Zip;
       6: areturn

  public <G> scalaz.Zip<?> product(scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #438                // InterfaceMethod scalaz/Zip.product$:(Lscalaz/Zip;Lscalaz/Zip;)Lscalaz/Zip;
       5: areturn

  public java.lang.Object zipWith(scala.Function0, scala.Function0, scala.Function2, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #446                // InterfaceMethod scalaz/Zip.zipWith$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Functor;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apzip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #453                // InterfaceMethod scalaz/Zip.apzip$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apzipPL(scala.Function0, scala.Function0, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #460                // InterfaceMethod scalaz/Zip.apzipPL$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scalaz.Apply<scala.collection.immutable.Stream> ap(scalaz.Functor<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #468                // InterfaceMethod scalaz/Zip.ap$:(Lscalaz/Zip;Lscalaz/Functor;)Lscalaz/Apply;
       5: areturn

  public scalaz.Zip<scala.collection.immutable.Stream>.ZipLaw zipLaw();
    Code:
       0: aload_0
       1: invokestatic  #475                // InterfaceMethod scalaz/Zip.zipLaw$:(Lscalaz/Zip;)Lscalaz/Zip$ZipLaw;
       4: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #480                // InterfaceMethod scalaz/BindRec.forever$:(Lscalaz/BindRec;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.BindRec<?> product(scalaz.BindRec<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #485                // InterfaceMethod scalaz/BindRec.product$:(Lscalaz/BindRec;Lscalaz/BindRec;)Lscalaz/BindRec;
       5: areturn

  public scalaz.BindRec<scala.collection.immutable.Stream>.BindRecLaw bindRecLaw();
    Code:
       0: aload_0
       1: invokestatic  #493                // InterfaceMethod scalaz/BindRec.bindRecLaw$:(Lscalaz/BindRec;)Lscalaz/BindRec$BindRecLaw;
       4: areturn

  public java.lang.Object optional(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #498                // InterfaceMethod scalaz/Alt.optional$:(Lscalaz/Alt;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object altly1(scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #504                // InterfaceMethod scalaz/Alt.altly1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object altly2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #510                // InterfaceMethod scalaz/Alt.altly2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object altly3(scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #517                // InterfaceMethod scalaz/Alt.altly3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object altly4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #524                // InterfaceMethod scalaz/Alt.altly4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object either2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #529                // InterfaceMethod scalaz/Alt.either2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #535                // InterfaceMethod scalaz/Alt.altlying1$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #541                // InterfaceMethod scalaz/Alt.altlying2$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object altlying3(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #547                // InterfaceMethod scalaz/Alt.altlying3$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object altlying4(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #553                // InterfaceMethod scalaz/Alt.altlying4$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #560                // InterfaceMethod scalaz/Alt.xcoproduct1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xcoproduct2(scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #566                // InterfaceMethod scalaz/Alt.xcoproduct2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xcoproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #572                // InterfaceMethod scalaz/Alt.xcoproduct3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #578                // InterfaceMethod scalaz/Alt.xcoproduct4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public scalaz.Alt<scala.collection.immutable.Stream>.AltLaw altLaw();
    Code:
       0: aload_0
       1: invokestatic  #585                // InterfaceMethod scalaz/Alt.altLaw$:(Lscalaz/Alt;)Lscalaz/Alt$AltLaw;
       4: areturn

  public final java.lang.Object xcoderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #593                // InterfaceMethod scalaz/InvariantAlt.xcoderiving1$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xcoderiving2(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #599                // InterfaceMethod scalaz/InvariantAlt.xcoderiving2$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xcoderiving3(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #605                // InterfaceMethod scalaz/InvariantAlt.xcoderiving3$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xcoderiving4(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #611                // InterfaceMethod scalaz/InvariantAlt.xcoderiving4$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object filter(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #616                // InterfaceMethod scalaz/MonadPlus.filter$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unite(java.lang.Object, scalaz.Foldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #624                // InterfaceMethod scalaz/MonadPlus.unite$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Foldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object lefts(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #632                // InterfaceMethod scalaz/MonadPlus.lefts$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object rights(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #637                // InterfaceMethod scalaz/MonadPlus.rights$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 separate(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #643                // InterfaceMethod scalaz/MonadPlus.separate$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Lscala/Tuple2;
       6: areturn

  public final java.lang.Object uniteU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #649                // InterfaceMethod scalaz/MonadPlus.uniteU$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.MonadPlus<?> product(scalaz.MonadPlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #655                // InterfaceMethod scalaz/MonadPlus.product$:(Lscalaz/MonadPlus;Lscalaz/MonadPlus;)Lscalaz/MonadPlus;
       5: areturn

  public scalaz.MonadPlus<scala.collection.immutable.Stream>.MonadPlusLaw monadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #663                // InterfaceMethod scalaz/MonadPlus.monadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$MonadPlusLaw;
       4: areturn

  public scalaz.MonadPlus<scala.collection.immutable.Stream>.StrongMonadPlusLaw strongMonadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #670                // InterfaceMethod scalaz/MonadPlus.strongMonadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$StrongMonadPlusLaw;
       4: areturn

  public <G> scalaz.ApplicativePlus<?> compose(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #677                // InterfaceMethod scalaz/ApplicativePlus.compose$:(Lscalaz/ApplicativePlus;Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public <G> scalaz.ApplicativePlus<?> product(scalaz.ApplicativePlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #683                // InterfaceMethod scalaz/ApplicativePlus.product$:(Lscalaz/ApplicativePlus;Lscalaz/ApplicativePlus;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #690                // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #694                // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #699                // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #703                // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<scala.collection.immutable.Stream<A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #711                // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<scala.collection.immutable.Stream>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #718                // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S$, A> scalaz.Maybe<scala.collection.immutable.Stream<A>> unfoldlPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<S$, scala.collection.immutable.Stream<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #725                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S$, A> scalaz.Maybe<scala.collection.immutable.Stream<A>> unfoldrPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scala.collection.immutable.Stream<A>, S$>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #730                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #735                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scala.collection.immutable.Stream<A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #743                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<scala.collection.immutable.Stream>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #750                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #755                // InterfaceMethod scalaz/Monad.map$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whileM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #762                // InterfaceMethod scalaz/Monad.whileM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object whileM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #768                // InterfaceMethod scalaz/Monad.whileM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object untilM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #773                // InterfaceMethod scalaz/Monad.untilM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object untilM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #777                // InterfaceMethod scalaz/Monad.untilM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateWhile(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #781                // InterfaceMethod scalaz/Monad.iterateWhile$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateUntil(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #785                // InterfaceMethod scalaz/Monad.iterateUntil$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Monad<?> product(scalaz.Monad<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #790                // InterfaceMethod scalaz/Monad.product$:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public scalaz.Monad<scala.collection.immutable.Stream>.MonadLaw monadLaw();
    Code:
       0: aload_0
       1: invokestatic  #798                // InterfaceMethod scalaz/Monad.monadLaw$:(Lscalaz/Monad;)Lscalaz/Monad$MonadLaw;
       4: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #801                // InterfaceMethod scalaz/Bind.ap$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #807                // InterfaceMethod scalaz/Bind.apply2$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #813                // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #821                // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #826                // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Bind<?> product(scalaz.Bind<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #831                // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<scala.collection.immutable.Stream>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #839                // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #845                // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #851                // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #860                // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #867                // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #872                // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #877                // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #883                // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #889                // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #896                // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #904                // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #909                // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.$eq$eq$greater$greater, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #916                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #923                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #928                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #935                // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #940                // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Applicative<?> product(scalaz.Applicative<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #944                // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scala.collection.immutable.Stream> flip();
    Code:
       0: aload_0
       1: invokestatic  #949                // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #957                // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scala.collection.immutable.Stream>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #964                // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #971                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #976                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #982                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #988                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #994                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1000               // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1007               // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public <S$, A, B> scalaz.Maybe<scala.collection.immutable.Stream<B>> unfoldrOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scala.collection.immutable.Stream<A>, S$>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1015               // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G$> scalaz.Apply<?> compose(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1021               // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G$> scalaz.Apply<?> product(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1024               // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>> apF(scala.Function0<scala.collection.immutable.Stream<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1031               // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1037               // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1044               // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1051               // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1058               // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1065               // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1072               // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1079               // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1085               // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1091               // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1097               // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1104               // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1111               // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1118               // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #1126               // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #1134               // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #1142               // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #1150               // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1156               // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1162               // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1168               // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1174               // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1179               // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1185               // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1191               // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1197               // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>, scala.collection.immutable.Stream<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1203               // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>, scala.collection.immutable.Stream<C>, scala.collection.immutable.Stream<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1210               // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>, scala.collection.immutable.Stream<C>, scala.collection.immutable.Stream<D>, scala.collection.immutable.Stream<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1217               // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R$> scala.Function5<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>, scala.collection.immutable.Stream<C>, scala.collection.immutable.Stream<D>, scala.collection.immutable.Stream<E>, scala.collection.immutable.Stream<R$>> lift5(scala.Function5<A, B, C, D, E, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1224               // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R$> scala.Function6<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>, scala.collection.immutable.Stream<C>, scala.collection.immutable.Stream<D>, scala.collection.immutable.Stream<E>, scala.collection.immutable.Stream<FF>, scala.collection.immutable.Stream<R$>> lift6(scala.Function6<A, B, C, D, E, FF, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1231               // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G$, R$> scala.Function7<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>, scala.collection.immutable.Stream<C>, scala.collection.immutable.Stream<D>, scala.collection.immutable.Stream<E>, scala.collection.immutable.Stream<FF>, scala.collection.immutable.Stream<G$>, scala.collection.immutable.Stream<R$>> lift7(scala.Function7<A, B, C, D, E, FF, G$, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1238               // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, R$> scala.Function8<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>, scala.collection.immutable.Stream<C>, scala.collection.immutable.Stream<D>, scala.collection.immutable.Stream<E>, scala.collection.immutable.Stream<FF>, scala.collection.immutable.Stream<G$>, scala.collection.immutable.Stream<H>, scala.collection.immutable.Stream<R$>> lift8(scala.Function8<A, B, C, D, E, FF, G$, H, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1245               // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, R$> scala.Function9<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>, scala.collection.immutable.Stream<C>, scala.collection.immutable.Stream<D>, scala.collection.immutable.Stream<E>, scala.collection.immutable.Stream<FF>, scala.collection.immutable.Stream<G$>, scala.collection.immutable.Stream<H>, scala.collection.immutable.Stream<I>, scala.collection.immutable.Stream<R$>> lift9(scala.Function9<A, B, C, D, E, FF, G$, H, I, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1252               // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, R$> scala.Function10<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>, scala.collection.immutable.Stream<C>, scala.collection.immutable.Stream<D>, scala.collection.immutable.Stream<E>, scala.collection.immutable.Stream<FF>, scala.collection.immutable.Stream<G$>, scala.collection.immutable.Stream<H>, scala.collection.immutable.Stream<I>, scala.collection.immutable.Stream<J>, scala.collection.immutable.Stream<R$>> lift10(scala.Function10<A, B, C, D, E, FF, G$, H, I, J, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1259               // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, R$> scala.Function11<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>, scala.collection.immutable.Stream<C>, scala.collection.immutable.Stream<D>, scala.collection.immutable.Stream<E>, scala.collection.immutable.Stream<FF>, scala.collection.immutable.Stream<G$>, scala.collection.immutable.Stream<H>, scala.collection.immutable.Stream<I>, scala.collection.immutable.Stream<J>, scala.collection.immutable.Stream<K>, scala.collection.immutable.Stream<R$>> lift11(scala.Function11<A, B, C, D, E, FF, G$, H, I, J, K, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1266               // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, L, R$> scala.Function12<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>, scala.collection.immutable.Stream<C>, scala.collection.immutable.Stream<D>, scala.collection.immutable.Stream<E>, scala.collection.immutable.Stream<FF>, scala.collection.immutable.Stream<G$>, scala.collection.immutable.Stream<H>, scala.collection.immutable.Stream<I>, scala.collection.immutable.Stream<J>, scala.collection.immutable.Stream<K>, scala.collection.immutable.Stream<L>, scala.collection.immutable.Stream<R$>> lift12(scala.Function12<A, B, C, D, E, FF, G$, H, I, J, K, L, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1273               // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1277               // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1281               // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #1286               // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1294               // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scala.collection.immutable.Stream>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #1301               // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1306               // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1314               // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1317               // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1324               // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<scala.collection.immutable.Stream>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1332               // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<scala.collection.immutable.Stream>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #1339               // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1344               // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1350               // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1356               // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1362               // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1369               // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1376               // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1383               // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1389               // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1395               // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1401               // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1408               // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1414               // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1419               // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1421               // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1425               // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1430               // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1434               // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1438               // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1442               // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<scala.collection.immutable.Stream>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #1449               // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1454               // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1459               // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1461               // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1466               // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1473               // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1479               // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1486               // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1493               // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1499               // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1504               // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1509               // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1514               // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1519               // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1524               // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1530               // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1536               // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1542               // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1548               // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1554               // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1558               // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1562               // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1568               // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1572               // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1578               // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1582               // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1586               // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1592               // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #1600               // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1606               // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1612               // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1618               // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1622               // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1626               // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1632               // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1638               // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1644               // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1648               // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1653               // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1658               // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1663               // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1668               // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1673               // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1678               // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1683               // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1687               // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1691               // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1695               // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1701               // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1707               // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1711               // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1718               // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/$less$colon$less;)J
       6: lreturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1726               // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1733               // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1739               // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1746               // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1752               // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1756               // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1762               // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1768               // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1773               // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1779               // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scala.collection.immutable.Stream>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #1786               // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1792               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1797               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1804               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1809               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1813               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1817               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1822               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1826               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1830               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1836               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G$> scalaz.Functor<?> compose(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1842               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G$> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1849               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G$> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1855               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G$> scalaz.Functor<?> product(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1858               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public scalaz.Functor<scala.collection.immutable.Stream>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1865               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1872               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1880               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scala.collection.immutable.Stream>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1888               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.CobindSyntax<scala.collection.immutable.Stream> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #1892               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1892               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.IsEmptySyntax<scala.collection.immutable.Stream> isEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1900               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       4: areturn

  public void scalaz$IsEmpty$_setter_$isEmptySyntax_$eq(scalaz.syntax.IsEmptySyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1900               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       5: return

  public scalaz.syntax.AlignSyntax<scala.collection.immutable.Stream> alignSyntax();
    Code:
       0: aload_0
       1: getfield      #1907               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       4: areturn

  public void scalaz$Align$_setter_$alignSyntax_$eq(scalaz.syntax.AlignSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1907               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       5: return

  public scalaz.syntax.UnzipSyntax<scala.collection.immutable.Stream> unzipSyntax();
    Code:
       0: aload_0
       1: getfield      #1914               // Field unzipSyntax:Lscalaz/syntax/UnzipSyntax;
       4: areturn

  public void scalaz$Unzip$_setter_$unzipSyntax_$eq(scalaz.syntax.UnzipSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1914               // Field unzipSyntax:Lscalaz/syntax/UnzipSyntax;
       5: return

  public scalaz.syntax.ZipSyntax<scala.collection.immutable.Stream> zipSyntax();
    Code:
       0: aload_0
       1: getfield      #1921               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       4: areturn

  public void scalaz$Zip$_setter_$zipSyntax_$eq(scalaz.syntax.ZipSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1921               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       5: return

  public scalaz.syntax.BindRecSyntax<scala.collection.immutable.Stream> bindRecSyntax();
    Code:
       0: aload_0
       1: getfield      #1928               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       4: areturn

  public void scalaz$BindRec$_setter_$bindRecSyntax_$eq(scalaz.syntax.BindRecSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1928               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       5: return

  public scalaz.syntax.AltSyntax<scala.collection.immutable.Stream> altSyntax();
    Code:
       0: aload_0
       1: getfield      #1935               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       4: areturn

  public void scalaz$Alt$_setter_$altSyntax_$eq(scalaz.syntax.AltSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1935               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       5: return

  public scalaz.syntax.InvariantAltSyntax<scala.collection.immutable.Stream> invariantAltSyntax();
    Code:
       0: aload_0
       1: getfield      #1942               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       4: areturn

  public void scalaz$InvariantAlt$_setter_$invariantAltSyntax_$eq(scalaz.syntax.InvariantAltSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1942               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       5: return

  public scalaz.syntax.MonadPlusSyntax<scala.collection.immutable.Stream> monadPlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1949               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       4: areturn

  public void scalaz$MonadPlus$_setter_$monadPlusSyntax_$eq(scalaz.syntax.MonadPlusSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1949               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       5: return

  public scalaz.syntax.ApplicativePlusSyntax<scala.collection.immutable.Stream> applicativePlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1956               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       4: areturn

  public void scalaz$ApplicativePlus$_setter_$applicativePlusSyntax_$eq(scalaz.syntax.ApplicativePlusSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1956               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       5: return

  public scalaz.syntax.PlusEmptySyntax<scala.collection.immutable.Stream> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1963               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1963               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<scala.collection.immutable.Stream> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #1970               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1970               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.syntax.MonadSyntax<scala.collection.immutable.Stream> monadSyntax();
    Code:
       0: aload_0
       1: getfield      #1977               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       4: areturn

  public void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1977               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       5: return

  public scalaz.syntax.BindSyntax<scala.collection.immutable.Stream> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #1984               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1984               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scala.collection.immutable.Stream> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1991               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1991               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scala.collection.immutable.Stream> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1998               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1998               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scala.collection.immutable.Stream> applySyntax();
    Code:
       0: aload_0
       1: getfield      #2005               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2005               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.TraverseSyntax<scala.collection.immutable.Stream> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #2012               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2012               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scala.collection.immutable.Stream> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #2019               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2019               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scala.collection.immutable.Stream> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #2026               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2026               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scala.collection.immutable.Stream> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #2033               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2033               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A> scala.collection.immutable.Stream<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #2045               // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #2049               // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
       6: getstatic     #2054               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       9: iconst_1
      10: anewarray     #5                  // class java/lang/Object
      13: dup
      14: iconst_0
      15: aload_1
      16: invokeinterface #2059,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      21: aastore
      22: invokevirtual #2063               // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      25: invokevirtual #2068               // Method scala/collection/immutable/Stream$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
      28: checkcast     #39                 // class scala/collection/immutable/Stream
      31: areturn

  public <A, B> scala.collection.immutable.Stream<B> bind(scala.collection.immutable.Stream<A>, scala.Function1<A, scala.collection.immutable.Stream<B>>);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #2075               // Method scala/collection/immutable/Stream.flatMap:(Lscala/Function1;)Lscala/collection/immutable/Stream;
       5: areturn

  public <A> boolean isEmpty(scala.collection.immutable.Stream<A>);
    Code:
       0: aload_1
       1: invokevirtual #2082               // Method scala/collection/immutable/Stream.isEmpty:()Z
       4: ireturn

  public <A> scala.collection.immutable.Stream<A> empty();
    Code:
       0: getstatic     #2045               // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #2049               // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
       6: invokevirtual #2086               // Method scala/collection/immutable/Stream$.empty:()Lscala/collection/immutable/Stream;
       9: areturn

  public <A, B> scala.Tuple2<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>> unzip(scala.collection.immutable.Stream<scala.Tuple2<A, B>>);
    Code:
       0: aload_1
       1: getstatic     #2094               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       4: invokevirtual #2098               // Method scala/Predef$.$conforms:()Lscala/Function1;
       7: invokevirtual #2101               // Method scala/collection/immutable/Stream.unzip:(Lscala/Function1;)Lscala/Tuple2;
      10: areturn

  public <A, B> scala.collection.immutable.Stream<scala.Tuple2<A, B>> zip(scala.Function0<scala.collection.immutable.Stream<A>>, scala.Function0<scala.collection.immutable.Stream<B>>);
    Code:
       0: aload_1
       1: invokeinterface #2059,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #39                 // class scala/collection/immutable/Stream
       9: astore_3
      10: aload_3
      11: invokevirtual #2082               // Method scala/collection/immutable/Stream.isEmpty:()Z
      14: ifeq          22
      17: aload_0
      18: invokevirtual #2105               // Method empty:()Lscala/collection/immutable/Stream;
      21: areturn
      22: aload_3
      23: aload_2
      24: invokeinterface #2059,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      29: checkcast     #2107               // class scala/collection/IterableOnce
      32: invokevirtual #2110               // Method scala/collection/immutable/Stream.zip:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/Stream;
      35: areturn

  public <A> scala.collection.immutable.Stream<scala.collection.immutable.Stream<A>> cojoin(scala.collection.immutable.Stream<A>);
    Code:
       0: aload_1
       1: invokevirtual #2118               // Method scala/collection/immutable/Stream.tails:()Lscala/collection/Iterator;
       4: invokeinterface #2122,  1         // InterfaceMethod scala/collection/Iterator.toStream:()Lscala/collection/immutable/Stream;
       9: invokevirtual #2125               // Method scala/collection/immutable/Stream.init:()Ljava/lang/Object;
      12: checkcast     #39                 // class scala/collection/immutable/Stream
      15: areturn

  public <A, B> scala.collection.immutable.Stream<B> cobind(scala.collection.immutable.Stream<A>, scala.Function1<scala.collection.immutable.Stream<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2129               // Method cojoin:(Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       5: astore_3
       6: aload_0
       7: aload_2
       8: invokedynamic #2146,  0           // InvokeDynamic #0:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      13: astore        4
      15: aload_3
      16: aload         4
      18: invokevirtual #2075               // Method scala/collection/immutable/Stream.flatMap:(Lscala/Function1;)Lscala/collection/immutable/Stream;
      21: areturn

  public <A> scala.Option<A> index(scala.collection.immutable.Stream<A>, int);
    Code:
       0: iconst_0
       1: istore_3
       2: getstatic     #2156               // Field scala/None$.MODULE$:Lscala/None$;
       5: astore        4
       7: aload_1
       8: invokevirtual #2159               // Method scala/collection/immutable/Stream.iterator:()Lscala/collection/Iterator;
      11: astore        5
      13: aload         5
      15: invokeinterface #2162,  1         // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      20: ifeq          62
      23: aload         4
      25: invokevirtual #2165               // Method scala/Option.isEmpty:()Z
      28: ifeq          62
      31: aload         5
      33: invokeinterface #2168,  1         // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      38: astore        6
      40: iload_3
      41: iload_2
      42: if_icmpne     56
      45: new           #2170               // class scala/Some
      48: dup
      49: aload         6
      51: invokespecial #2174               // Method scala/Some."<init>":(Ljava/lang/Object;)V
      54: astore        4
      56: iinc          3, 1
      59: goto          13
      62: aload         4
      64: areturn

  public <A, B> B foldLeft(scala.collection.immutable.Stream<A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokevirtual #2184               // Method scala/collection/immutable/Stream.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Option<B> foldMapLeft1Opt(scala.collection.immutable.Stream<A>, scala.Function1<A, B>, scala.Function2<B, A, B>);
    Code:
       0: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
       3: aload_1
       4: invokevirtual #2194               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          14
      10: getstatic     #2156               // Field scala/None$.MODULE$:Lscala/None$;
      13: areturn
      14: aload_1
      15: ifnull        86
      18: getstatic     #2197               // Field scala/package$$hash$colon$colon$.MODULE$:Lscala/package$$hash$colon$colon$;
      21: aload_1
      22: invokevirtual #2201               // Method scala/package$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      25: astore        4
      27: aload         4
      29: invokevirtual #2165               // Method scala/Option.isEmpty:()Z
      32: ifne          86
      35: aload         4
      37: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
      40: checkcast     #2206               // class scala/Tuple2
      43: invokevirtual #2209               // Method scala/Tuple2._1:()Ljava/lang/Object;
      46: astore        5
      48: aload         4
      50: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
      53: checkcast     #2206               // class scala/Tuple2
      56: invokevirtual #2212               // Method scala/Tuple2._2:()Ljava/lang/Object;
      59: checkcast     #39                 // class scala/collection/immutable/Stream
      62: astore        6
      64: new           #2170               // class scala/Some
      67: dup
      68: aload         6
      70: aload_2
      71: aload         5
      73: invokeinterface #2216,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      78: aload_3
      79: invokevirtual #2184               // Method scala/collection/immutable/Stream.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      82: invokespecial #2174               // Method scala/Some."<init>":(Ljava/lang/Object;)V
      85: areturn
      86: new           #2218               // class scala/MatchError
      89: dup
      90: aload_1
      91: invokespecial #2219               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      94: athrow

  public <A, B> B foldMap(scala.collection.immutable.Stream<A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_3
       1: aload_1
       2: aload_2
       3: invokedynamic #2234,  0           // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
       8: invokeinterface #2239,  3         // InterfaceMethod scalaz/Monoid.unfoldrSum:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public <A, B> scala.Option<B> foldMap1Opt(scala.collection.immutable.Stream<A>, scala.Function1<A, B>, scalaz.Semigroup<B>);
    Code:
       0: aload_3
       1: aload_2
       2: invokedynamic #2252,  0           // InvokeDynamic #2:apply:(Lscalaz/Semigroup;Lscala/Function1;)Lscala/Function2;
       7: astore        4
       9: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      12: aload_1
      13: invokevirtual #2194               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      16: ifeq          23
      19: getstatic     #2156               // Field scala/None$.MODULE$:Lscala/None$;
      22: areturn
      23: aload_1
      24: ifnull        207
      27: getstatic     #2197               // Field scala/package$$hash$colon$colon$.MODULE$:Lscala/package$$hash$colon$colon$;
      30: aload_1
      31: invokevirtual #2201               // Method scala/package$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      34: astore        5
      36: aload         5
      38: invokevirtual #2165               // Method scala/Option.isEmpty:()Z
      41: ifne          207
      44: aload         5
      46: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
      49: checkcast     #2206               // class scala/Tuple2
      52: invokevirtual #2209               // Method scala/Tuple2._1:()Ljava/lang/Object;
      55: astore        6
      57: aload         5
      59: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
      62: checkcast     #2206               // class scala/Tuple2
      65: invokevirtual #2212               // Method scala/Tuple2._2:()Ljava/lang/Object;
      68: checkcast     #39                 // class scala/collection/immutable/Stream
      71: astore        7
      73: new           #2170               // class scala/Some
      76: dup
      77: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      80: aload         7
      82: invokevirtual #2194               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      85: ifeq          99
      88: aload_2
      89: aload         6
      91: invokeinterface #2216,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      96: goto          194
      99: aload         7
     101: ifnull        184
     104: getstatic     #2197               // Field scala/package$$hash$colon$colon$.MODULE$:Lscala/package$$hash$colon$colon$;
     107: aload         7
     109: invokevirtual #2201               // Method scala/package$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
     112: astore        8
     114: aload         8
     116: invokevirtual #2165               // Method scala/Option.isEmpty:()Z
     119: ifne          184
     122: aload         8
     124: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
     127: checkcast     #2206               // class scala/Tuple2
     130: invokevirtual #2209               // Method scala/Tuple2._1:()Ljava/lang/Object;
     133: astore        9
     135: aload         8
     137: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
     140: checkcast     #2206               // class scala/Tuple2
     143: invokevirtual #2212               // Method scala/Tuple2._2:()Ljava/lang/Object;
     146: checkcast     #39                 // class scala/collection/immutable/Stream
     149: astore        10
     151: aload         9
     153: aload         10
     155: aload_2
     156: aload         4
     158: invokedynamic #2261,  0           // InvokeDynamic #3:apply:(Ljava/lang/Object;Lscala/collection/immutable/Stream;Lscala/Function1;Lscala/Function2;)Lscala/Function0;
     163: astore        11
     165: aload_3
     166: aload_2
     167: aload         6
     169: invokeinterface #2216,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     174: aload         11
     176: invokeinterface #2266,  3         // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     181: goto          194
     184: new           #2218               // class scala/MatchError
     187: dup
     188: aload         7
     190: invokespecial #2219               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     193: athrow
     194: aconst_null
     195: astore        8
     197: aconst_null
     198: astore        9
     200: aconst_null
     201: astore        10
     203: invokespecial #2174               // Method scala/Some."<init>":(Ljava/lang/Object;)V
     206: areturn
     207: new           #2218               // class scala/MatchError
     210: dup
     211: aload_1
     212: invokespecial #2219               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     215: athrow

  public <A, B> scala.Option<B> foldMapRight1Opt(scala.collection.immutable.Stream<A>, scala.Function1<A, B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
       3: aload_1
       4: invokevirtual #2194               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          14
      10: getstatic     #2156               // Field scala/None$.MODULE$:Lscala/None$;
      13: areturn
      14: aload_1
      15: ifnull        187
      18: getstatic     #2197               // Field scala/package$$hash$colon$colon$.MODULE$:Lscala/package$$hash$colon$colon$;
      21: aload_1
      22: invokevirtual #2201               // Method scala/package$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      25: astore        4
      27: aload         4
      29: invokevirtual #2165               // Method scala/Option.isEmpty:()Z
      32: ifne          187
      35: aload         4
      37: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
      40: checkcast     #2206               // class scala/Tuple2
      43: invokevirtual #2209               // Method scala/Tuple2._1:()Ljava/lang/Object;
      46: astore        5
      48: aload         4
      50: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
      53: checkcast     #2206               // class scala/Tuple2
      56: invokevirtual #2212               // Method scala/Tuple2._2:()Ljava/lang/Object;
      59: checkcast     #39                 // class scala/collection/immutable/Stream
      62: astore        6
      64: new           #2170               // class scala/Some
      67: dup
      68: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      71: aload         6
      73: invokevirtual #2194               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      76: ifeq          90
      79: aload_2
      80: aload         5
      82: invokeinterface #2216,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      87: goto          174
      90: aload         6
      92: ifnull        164
      95: getstatic     #2197               // Field scala/package$$hash$colon$colon$.MODULE$:Lscala/package$$hash$colon$colon$;
      98: aload         6
     100: invokevirtual #2201               // Method scala/package$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
     103: astore        7
     105: aload         7
     107: invokevirtual #2165               // Method scala/Option.isEmpty:()Z
     110: ifne          164
     113: aload         7
     115: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
     118: checkcast     #2206               // class scala/Tuple2
     121: invokevirtual #2209               // Method scala/Tuple2._1:()Ljava/lang/Object;
     124: astore        8
     126: aload         7
     128: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
     131: checkcast     #2206               // class scala/Tuple2
     134: invokevirtual #2212               // Method scala/Tuple2._2:()Ljava/lang/Object;
     137: checkcast     #39                 // class scala/collection/immutable/Stream
     140: astore        9
     142: aload_3
     143: aload         5
     145: aload         8
     147: aload         9
     149: aload_2
     150: aload_3
     151: invokedynamic #2261,  0           // InvokeDynamic #3:apply:(Ljava/lang/Object;Lscala/collection/immutable/Stream;Lscala/Function1;Lscala/Function2;)Lscala/Function0;
     156: invokeinterface #2277,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     161: goto          174
     164: new           #2218               // class scala/MatchError
     167: dup
     168: aload         6
     170: invokespecial #2219               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     173: athrow
     174: aconst_null
     175: astore        7
     177: aconst_null
     178: astore        8
     180: aconst_null
     181: astore        9
     183: invokespecial #2174               // Method scala/Some."<init>":(Ljava/lang/Object;)V
     186: areturn
     187: new           #2218               // class scala/MatchError
     190: dup
     191: aload_1
     192: invokespecial #2219               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     195: athrow

  public <A, B> B foldRight(scala.collection.immutable.Stream<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: invokevirtual #2082               // Method scala/collection/immutable/Stream.isEmpty:()Z
       4: ifeq          14
       7: aload_2
       8: invokeinterface #2059,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      13: areturn
      14: aload_3
      15: aload_1
      16: invokevirtual #2285               // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
      19: aload_0
      20: aload_1
      21: aload_2
      22: aload_3
      23: invokedynamic #2293,  0           // InvokeDynamic #4:apply:(Lscalaz/std/StreamInstances$$anon$1;Lscala/collection/immutable/Stream;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      28: invokeinterface #2277,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: areturn

  public <A, B, C> scala.collection.immutable.Stream<C> zipWithL(scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>, scala.Function2<A, scala.Option<B>, C>);
    Code:
       0: aload_1
       1: invokevirtual #2082               // Method scala/collection/immutable/Stream.isEmpty:()Z
       4: ifeq          11
       7: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      10: areturn
      11: aload_2
      12: invokevirtual #2082               // Method scala/collection/immutable/Stream.isEmpty:()Z
      15: ifeq          24
      18: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      21: goto          31
      24: aload_2
      25: invokevirtual #2299               // Method scala/collection/immutable/Stream.tail:()Ljava/lang/Object;
      28: checkcast     #39                 // class scala/collection/immutable/Stream
      31: astore        4
      33: getstatic     #2302               // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
      36: aload_3
      37: aload_1
      38: invokevirtual #2285               // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
      41: aload_2
      42: invokevirtual #2306               // Method scala/collection/immutable/Stream.headOption:()Lscala/Option;
      45: invokeinterface #2277,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: aload_0
      51: aload_1
      52: aload         4
      54: aload_3
      55: invokedynamic #2315,  0           // InvokeDynamic #5:apply:(Lscalaz/std/StreamInstances$$anon$1;Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;Lscala/Function2;)Lscala/Function0;
      60: invokevirtual #2318               // Method scala/collection/immutable/Stream$cons$.apply:(Ljava/lang/Object;Lscala/Function0;)Lscala/collection/immutable/Stream;
      63: areturn

  public <A, B, C> scala.collection.immutable.Stream<C> zipWithR(scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>, scala.Function2<scala.Option<A>, B, C>);
    Code:
       0: aload_3
       1: invokedynamic #2330,  0           // InvokeDynamic #6:apply:(Lscala/Function2;)Lscala/Function2;
       6: astore        4
       8: aload_2
       9: invokevirtual #2082               // Method scala/collection/immutable/Stream.isEmpty:()Z
      12: ifeq          19
      15: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      18: areturn
      19: aload_1
      20: invokevirtual #2082               // Method scala/collection/immutable/Stream.isEmpty:()Z
      23: ifeq          32
      26: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      29: goto          39
      32: aload_1
      33: invokevirtual #2299               // Method scala/collection/immutable/Stream.tail:()Ljava/lang/Object;
      36: checkcast     #39                 // class scala/collection/immutable/Stream
      39: astore        5
      41: getstatic     #2302               // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
      44: aload_2
      45: invokevirtual #2285               // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
      48: aload_1
      49: invokevirtual #2306               // Method scala/collection/immutable/Stream.headOption:()Lscala/Option;
      52: astore        7
      54: astore        6
      56: aload_3
      57: aload         7
      59: aload         6
      61: invokeinterface #2277,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      66: aload_0
      67: aload_2
      68: aload         5
      70: aload         4
      72: invokedynamic #2315,  0           // InvokeDynamic #5:apply:(Lscalaz/std/StreamInstances$$anon$1;Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;Lscala/Function2;)Lscala/Function0;
      77: invokevirtual #2318               // Method scala/collection/immutable/Stream$cons$.apply:(Ljava/lang/Object;Lscala/Function0;)Lscala/collection/immutable/Stream;
      80: areturn

  public <A> scala.collection.immutable.Stream<A> plus(scala.collection.immutable.Stream<A>, scala.Function0<scala.collection.immutable.Stream<A>>);
    Code:
       0: getstatic     #2338               // Field scala/collection/immutable/Stream$Deferrer$.MODULE$:Lscala/collection/immutable/Stream$Deferrer$;
       3: getstatic     #2341               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
       6: aload_2
       7: invokevirtual #2345               // Method scala/collection/immutable/Stream$.toDeferrer:(Lscala/Function0;)Lscala/Function0;
      10: aload_1
      11: invokevirtual #2349               // Method scala/collection/immutable/Stream$Deferrer$.$hash$colon$colon$colon$extension:(Lscala/Function0;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
      14: areturn

  public <A> scala.collection.immutable.Stream<A> alt(scala.Function0<scala.collection.immutable.Stream<A>>, scala.Function0<scala.collection.immutable.Stream<A>>);
    Code:
       0: aload_1
       1: invokeinterface #2059,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #39                 // class scala/collection/immutable/Stream
       9: astore_3
      10: getstatic     #2338               // Field scala/collection/immutable/Stream$Deferrer$.MODULE$:Lscala/collection/immutable/Stream$Deferrer$;
      13: getstatic     #2341               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      16: aload_2
      17: invokevirtual #2345               // Method scala/collection/immutable/Stream$.toDeferrer:(Lscala/Function0;)Lscala/Function0;
      20: aload_3
      21: invokevirtual #2349               // Method scala/collection/immutable/Stream$Deferrer$.$hash$colon$colon$colon$extension:(Lscala/Function0;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
      24: areturn

  public <A, B, C> scala.Function2<scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<B>, scala.collection.immutable.Stream<C>> alignWith(scala.Function1<scalaz.$bslash$amp$div<A, B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #2365,  0           // InvokeDynamic #7:apply:(Lscalaz/std/StreamInstances$$anon$1;Lscala/Function1;)Lscala/Function2;
       7: areturn

  public <A, B> scala.collection.immutable.Stream<B> tailrecM(A, scala.Function1<A, scala.collection.immutable.Stream<scalaz.$bslash$div<A, B>>>);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #2216,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #39                 // class scala/collection/immutable/Stream
      10: astore_3
      11: aload_3
      12: ifnull        106
      15: getstatic     #2197               // Field scala/package$$hash$colon$colon$.MODULE$:Lscala/package$$hash$colon$colon$;
      18: aload_3
      19: invokevirtual #2201               // Method scala/package$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      22: astore        4
      24: aload         4
      26: invokevirtual #2165               // Method scala/Option.isEmpty:()Z
      29: ifne          106
      32: aload         4
      34: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
      37: checkcast     #2206               // class scala/Tuple2
      40: invokevirtual #2209               // Method scala/Tuple2._1:()Ljava/lang/Object;
      43: checkcast     #2370               // class scalaz/$bslash$div
      46: astore        5
      48: aload         4
      50: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
      53: checkcast     #2206               // class scala/Tuple2
      56: invokevirtual #2212               // Method scala/Tuple2._2:()Ljava/lang/Object;
      59: checkcast     #39                 // class scala/collection/immutable/Stream
      62: astore        6
      64: aload         5
      66: instanceof    #2372               // class scalaz/$bslash$div$minus
      69: ifeq          106
      72: aload         5
      74: checkcast     #2372               // class scalaz/$bslash$div$minus
      77: invokevirtual #2374               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      80: astore        7
      82: getstatic     #2338               // Field scala/collection/immutable/Stream$Deferrer$.MODULE$:Lscala/collection/immutable/Stream$Deferrer$;
      85: getstatic     #2341               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      88: aload_0
      89: aload         6
      91: aload_2
      92: invokedynamic #2382,  0           // InvokeDynamic #8:apply:(Lscalaz/std/StreamInstances$$anon$1;Lscala/collection/immutable/Stream;Lscala/Function1;)Lscala/Function0;
      97: invokevirtual #2345               // Method scala/collection/immutable/Stream$.toDeferrer:(Lscala/Function0;)Lscala/Function0;
     100: aload         7
     102: invokevirtual #2386               // Method scala/collection/immutable/Stream$Deferrer$.$hash$colon$colon$extension:(Lscala/Function0;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
     105: areturn
     106: aload_3
     107: ifnull        215
     110: getstatic     #2197               // Field scala/package$$hash$colon$colon$.MODULE$:Lscala/package$$hash$colon$colon$;
     113: aload_3
     114: invokevirtual #2201               // Method scala/package$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
     117: astore        8
     119: aload         8
     121: invokevirtual #2165               // Method scala/Option.isEmpty:()Z
     124: ifne          215
     127: aload         8
     129: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
     132: checkcast     #2206               // class scala/Tuple2
     135: invokevirtual #2209               // Method scala/Tuple2._1:()Ljava/lang/Object;
     138: checkcast     #2370               // class scalaz/$bslash$div
     141: astore        9
     143: aload         8
     145: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
     148: checkcast     #2206               // class scala/Tuple2
     151: invokevirtual #2212               // Method scala/Tuple2._2:()Ljava/lang/Object;
     154: checkcast     #39                 // class scala/collection/immutable/Stream
     157: astore        10
     159: aload         9
     161: instanceof    #2388               // class scalaz/$minus$bslash$div
     164: ifeq          215
     167: aload         9
     169: checkcast     #2388               // class scalaz/$minus$bslash$div
     172: invokevirtual #2390               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
     175: astore        11
     177: aload_2
     178: aload         11
     180: invokeinterface #2216,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     185: checkcast     #39                 // class scala/collection/immutable/Stream
     188: astore        12
     190: getstatic     #2338               // Field scala/collection/immutable/Stream$Deferrer$.MODULE$:Lscala/collection/immutable/Stream$Deferrer$;
     193: getstatic     #2341               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
     196: aload         10
     198: invokedynamic #2397,  0           // InvokeDynamic #9:apply:(Lscala/collection/immutable/Stream;)Lscala/Function0;
     203: invokevirtual #2345               // Method scala/collection/immutable/Stream$.toDeferrer:(Lscala/Function0;)Lscala/Function0;
     206: aload         12
     208: invokevirtual #2349               // Method scala/collection/immutable/Stream$Deferrer$.$hash$colon$colon$colon$extension:(Lscala/Function0;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
     211: astore_3
     212: goto          11
     215: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
     218: aload_3
     219: invokevirtual #2194               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     222: ifeq          229
     225: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
     228: areturn
     229: new           #2218               // class scala/MatchError
     232: dup
     233: aload_3
     234: invokespecial #2219               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     237: athrow

  public <F, A, B> F traverseImpl(scala.collection.immutable.Stream<A>, scala.Function1<A, F>, scalaz.Applicative<F>);
    Code:
       0: aload_3
       1: aload_1
       2: aload_2
       3: invokedynamic #2409,  0           // InvokeDynamic #10:apply:(Lscala/Function1;)Lscala/Function1;
       8: getstatic     #2414               // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
      11: invokevirtual #2418               // Method scalaz/Reducer$.ReverseListReducer:()Lscalaz/Reducer;
      14: invokeinterface #2420,  4         // InterfaceMethod scalaz/Applicative.unfoldrOpt:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
      19: astore        4
      21: aload         4
      23: ifnonnull     28
      26: aconst_null
      27: athrow
      28: aload         4
      30: instanceof    #122                // class scalaz/Maybe$Just
      33: ifeq          57
      36: aload         4
      38: checkcast     #122                // class scalaz/Maybe$Just
      41: invokevirtual #2421               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      44: astore        6
      46: getstatic     #2094               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      49: aload         6
      51: invokevirtual #2424               // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
      54: goto          82
      57: aload         4
      59: instanceof    #115                // class scalaz/Maybe$Empty
      62: ifeq          72
      65: aload_3
      66: invokestatic  #2428               // Method $anonfun$traverseImpl$2:(Lscalaz/Applicative;)Ljava/lang/Object;
      69: goto          82
      72: new           #2218               // class scala/MatchError
      75: dup
      76: aload         4
      78: invokespecial #2219               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      81: athrow
      82: aconst_null
      83: astore        6
      85: astore        5
      87: aload_3
      88: aload         5
      90: invokedynamic #2436,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
      95: invokeinterface #2438,  3         // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     100: areturn

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #2445               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #2448               // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.Applicative compose(scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2450               // Method compose:(Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2453               // class scala/collection/Iterable
       5: aload_2
       6: invokevirtual #2455               // Method all:(Lscala/collection/Iterable;Lscala/Function1;)Z
       9: ireturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2453               // class scala/collection/Iterable
       5: aload_2
       6: invokevirtual #2457               // Method any:(Lscala/collection/Iterable;Lscala/Function1;)Z
       9: ireturn

  public boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2453               // class scala/collection/Iterable
       5: invokevirtual #2459               // Method empty:(Lscala/collection/Iterable;)Z
       8: ireturn

  public scala.collection.immutable.LazyList toLazyList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2453               // class scala/collection/Iterable
       5: invokevirtual #2462               // Method toLazyList:(Lscala/collection/Iterable;)Lscala/collection/immutable/LazyList;
       8: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2453               // class scala/collection/Iterable
       5: invokevirtual #2465               // Method toSet:(Lscala/collection/Iterable;)Lscala/collection/immutable/Set;
       8: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2453               // class scala/collection/Iterable
       5: invokevirtual #2468               // Method toVector:(Lscala/collection/Iterable;)Lscala/collection/immutable/Vector;
       8: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2453               // class scala/collection/Iterable
       5: invokevirtual #2471               // Method toList:(Lscala/collection/Iterable;)Lscala/collection/immutable/List;
       8: areturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2453               // class scala/collection/Iterable
       5: invokevirtual #2473               // Method length:(Lscala/collection/Iterable;)I
       8: ireturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: aload_2
       6: aload_3
       7: invokevirtual #2475               // Method traverseImpl:(Lscala/collection/immutable/Stream;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object tailrecM(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2477               // Method tailrecM:(Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/Stream;
       6: areturn

  public java.lang.Object alt(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2479               // Method alt:(Lscala/Function0;Lscala/Function0;)Lscala/collection/immutable/Stream;
       6: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: aload_2
       6: invokevirtual #2481               // Method plus:(Lscala/collection/immutable/Stream;Lscala/Function0;)Lscala/collection/immutable/Stream;
       9: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: aload_2
       6: checkcast     #39                 // class scala/collection/immutable/Stream
       9: aload_3
      10: invokevirtual #2484               // Method zipWithR:(Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;Lscala/Function2;)Lscala/collection/immutable/Stream;
      13: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: aload_2
       6: checkcast     #39                 // class scala/collection/immutable/Stream
       9: aload_3
      10: invokevirtual #2486               // Method zipWithL:(Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;Lscala/Function2;)Lscala/collection/immutable/Stream;
      13: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: aload_2
       6: aload_3
       7: invokevirtual #2489               // Method foldRight:(Lscala/collection/immutable/Stream;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldRight(scala.collection.Iterable, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: aload_2
       6: aload_3
       7: invokevirtual #2489               // Method foldRight:(Lscala/collection/immutable/Stream;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: aload_2
       6: aload_3
       7: invokevirtual #2493               // Method foldMapRight1Opt:(Lscala/collection/immutable/Stream;Lscala/Function1;Lscala/Function2;)Lscala/Option;
      10: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: aload_2
       6: aload_3
       7: invokevirtual #2496               // Method foldMap1Opt:(Lscala/collection/immutable/Stream;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
      10: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: aload_2
       6: aload_3
       7: invokevirtual #2499               // Method foldMap:(Lscala/collection/immutable/Stream;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldMap(scala.collection.Iterable, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: aload_2
       6: aload_3
       7: invokevirtual #2499               // Method foldMap:(Lscala/collection/immutable/Stream;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      10: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: aload_2
       6: aload_3
       7: invokevirtual #2502               // Method foldMapLeft1Opt:(Lscala/collection/immutable/Stream;Lscala/Function1;Lscala/Function2;)Lscala/Option;
      10: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: aload_2
       6: aload_3
       7: invokevirtual #2504               // Method foldLeft:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldLeft(scala.collection.Iterable, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: aload_2
       6: aload_3
       7: invokevirtual #2504               // Method foldLeft:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: iload_2
       6: invokevirtual #2508               // Method index:(Lscala/collection/immutable/Stream;I)Lscala/Option;
       9: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: aload_2
       6: invokevirtual #2510               // Method cobind:(Lscala/collection/immutable/Stream;Lscala/Function1;)Lscala/collection/immutable/Stream;
       9: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: invokevirtual #2129               // Method cojoin:(Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       8: areturn

  public java.lang.Object zip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2512               // Method zip:(Lscala/Function0;Lscala/Function0;)Lscala/collection/immutable/Stream;
       6: areturn

  public scala.Tuple2 unzip(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: invokevirtual #2515               // Method unzip:(Lscala/collection/immutable/Stream;)Lscala/Tuple2;
       8: areturn

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #2105               // Method empty:()Lscala/collection/immutable/Stream;
       4: areturn

  public boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: invokevirtual #2517               // Method isEmpty:(Lscala/collection/immutable/Stream;)Z
       8: ireturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class scala/collection/immutable/Stream
       5: aload_2
       6: invokevirtual #2519               // Method bind:(Lscala/collection/immutable/Stream;Lscala/Function1;)Lscala/collection/immutable/Stream;
       9: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2521               // Method point:(Lscala/Function0;)Lscala/collection/immutable/Stream;
       5: areturn

  public static final scalaz.Maybe $anonfun$foldMap$1(scala.Function1, scala.collection.immutable.Stream);
    Code:
       0: aload_1
       1: invokevirtual #2306               // Method scala/collection/immutable/Stream.headOption:()Lscala/Option;
       4: astore_2
       5: aload_2
       6: instanceof    #2170               // class scala/Some
       9: ifeq          54
      12: aload_2
      13: checkcast     #2170               // class scala/Some
      16: invokevirtual #2524               // Method scala/Some.value:()Ljava/lang/Object;
      19: astore_3
      20: getstatic     #2529               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      23: pop
      24: new           #2206               // class scala/Tuple2
      27: dup
      28: aload_0
      29: aload_3
      30: invokeinterface #2216,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      35: aload_1
      36: invokevirtual #2299               // Method scala/collection/immutable/Stream.tail:()Ljava/lang/Object;
      39: invokespecial #2532               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      42: astore        4
      44: new           #122                // class scalaz/Maybe$Just
      47: dup
      48: aload         4
      50: invokespecial #2533               // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      53: areturn
      54: getstatic     #2156               // Field scala/None$.MODULE$:Lscala/None$;
      57: aload_2
      58: invokevirtual #2194               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      61: ifeq          75
      64: getstatic     #2529               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      67: pop
      68: getstatic     #2536               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      71: invokevirtual #2539               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      74: areturn
      75: new           #2218               // class scala/MatchError
      78: dup
      79: aload_2
      80: invokespecial #2219               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      83: athrow

  public static final java.lang.Object $anonfun$foldMap1Opt$1(scalaz.Semigroup, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #2216,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_3
       9: invokeinterface #2266,  3         // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static final java.lang.Object $anonfun$foldMapRight1Opt$1(java.lang.Object, scala.collection.immutable.Stream, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #2549               // Method rec$1:(Ljava/lang/Object;Lscala/collection/immutable/Stream;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  private static final java.lang.Object rec$1(java.lang.Object, scala.collection.immutable.Stream, scala.Function1, scala.Function2);
    Code:
       0: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
       3: aload_1
       4: invokevirtual #2194               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          18
      10: aload_2
      11: aload_0
      12: invokeinterface #2216,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn
      18: aload_1
      19: ifnull        87
      22: getstatic     #2197               // Field scala/package$$hash$colon$colon$.MODULE$:Lscala/package$$hash$colon$colon$;
      25: aload_1
      26: invokevirtual #2201               // Method scala/package$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      29: astore        4
      31: aload         4
      33: invokevirtual #2165               // Method scala/Option.isEmpty:()Z
      36: ifne          87
      39: aload         4
      41: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
      44: checkcast     #2206               // class scala/Tuple2
      47: invokevirtual #2209               // Method scala/Tuple2._1:()Ljava/lang/Object;
      50: astore        5
      52: aload         4
      54: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
      57: checkcast     #2206               // class scala/Tuple2
      60: invokevirtual #2212               // Method scala/Tuple2._2:()Ljava/lang/Object;
      63: checkcast     #39                 // class scala/collection/immutable/Stream
      66: astore        6
      68: aload_3
      69: aload_0
      70: aload         5
      72: aload         6
      74: aload_2
      75: aload_3
      76: invokedynamic #2261,  0           // InvokeDynamic #3:apply:(Ljava/lang/Object;Lscala/collection/immutable/Stream;Lscala/Function1;Lscala/Function2;)Lscala/Function0;
      81: invokeinterface #2277,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: areturn
      87: new           #2218               // class scala/MatchError
      90: dup
      91: aload_1
      92: invokespecial #2219               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      95: athrow

  public static final java.lang.Object $anonfun$foldRight$1(scalaz.std.StreamInstances$$anon$1, scala.collection.immutable.Stream, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: invokevirtual #2299               // Method scala/collection/immutable/Stream.tail:()Ljava/lang/Object;
       4: checkcast     #39                 // class scala/collection/immutable/Stream
       7: astore        4
       9: aload         4
      11: invokevirtual #2082               // Method scala/collection/immutable/Stream.isEmpty:()Z
      14: ifeq          24
      17: aload_2
      18: invokeinterface #2059,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      23: areturn
      24: aload_3
      25: aload         4
      27: invokevirtual #2285               // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
      30: aload_0
      31: aload         4
      33: aload_2
      34: aload_3
      35: invokedynamic #2293,  0           // InvokeDynamic #4:apply:(Lscalaz/std/StreamInstances$$anon$1;Lscala/collection/immutable/Stream;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      40: invokeinterface #2277,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: areturn

  public static final scala.collection.immutable.Stream $anonfun$zipWithL$1(scalaz.std.StreamInstances$$anon$1, scala.collection.immutable.Stream, scala.collection.immutable.Stream, scala.Function2);
    Code:
       0: aload_1
       1: invokevirtual #2299               // Method scala/collection/immutable/Stream.tail:()Ljava/lang/Object;
       4: checkcast     #39                 // class scala/collection/immutable/Stream
       7: astore        4
       9: aload         4
      11: invokevirtual #2082               // Method scala/collection/immutable/Stream.isEmpty:()Z
      14: ifeq          21
      17: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      20: areturn
      21: aload_2
      22: invokevirtual #2082               // Method scala/collection/immutable/Stream.isEmpty:()Z
      25: ifeq          34
      28: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      31: goto          41
      34: aload_2
      35: invokevirtual #2299               // Method scala/collection/immutable/Stream.tail:()Ljava/lang/Object;
      38: checkcast     #39                 // class scala/collection/immutable/Stream
      41: astore        5
      43: getstatic     #2302               // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
      46: aload_3
      47: aload         4
      49: invokevirtual #2285               // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
      52: aload_2
      53: invokevirtual #2306               // Method scala/collection/immutable/Stream.headOption:()Lscala/Option;
      56: invokeinterface #2277,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: aload_0
      62: aload         4
      64: aload         5
      66: aload_3
      67: invokedynamic #2315,  0           // InvokeDynamic #5:apply:(Lscalaz/std/StreamInstances$$anon$1;Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;Lscala/Function2;)Lscala/Function0;
      72: invokevirtual #2318               // Method scala/collection/immutable/Stream$cons$.apply:(Ljava/lang/Object;Lscala/Function0;)Lscala/collection/immutable/Stream;
      75: areturn

  public static final java.lang.Object $anonfun$zipWithR$1(scala.Function2, java.lang.Object, scala.Option);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokeinterface #2277,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static final java.lang.Object $anonfun$alignWith$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: new           #61                 // class scalaz/$bslash$amp$div$This
       4: dup
       5: aload_1
       6: invokespecial #2563               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
       9: invokeinterface #2216,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public static final java.lang.Object $anonfun$alignWith$3(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: new           #58                 // class scalaz/$bslash$amp$div$That
       4: dup
       5: aload_1
       6: invokespecial #2565               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
       9: invokeinterface #2216,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public static final scala.collection.immutable.Stream $anonfun$alignWith$4(scalaz.std.StreamInstances$$anon$1, scala.Function1, scala.collection.immutable.Stream, scala.collection.immutable.Stream);
    Code:
       0: aload_2
       1: invokevirtual #2299               // Method scala/collection/immutable/Stream.tail:()Ljava/lang/Object;
       4: aload_3
       5: invokevirtual #2299               // Method scala/collection/immutable/Stream.tail:()Ljava/lang/Object;
       8: checkcast     #39                 // class scala/collection/immutable/Stream
      11: astore        5
      13: checkcast     #39                 // class scala/collection/immutable/Stream
      16: astore        4
      18: aload         5
      20: invokevirtual #2082               // Method scala/collection/immutable/Stream.isEmpty:()Z
      23: ifeq          38
      26: aload         4
      28: aload_1
      29: invokedynamic #2572,  0           // InvokeDynamic #12:apply:(Lscala/Function1;)Lscala/Function1;
      34: invokevirtual #2574               // Method scala/collection/immutable/Stream.map:(Lscala/Function1;)Lscala/collection/immutable/Stream;
      37: areturn
      38: aload         4
      40: invokevirtual #2082               // Method scala/collection/immutable/Stream.isEmpty:()Z
      43: ifeq          58
      46: aload         5
      48: aload_1
      49: invokedynamic #2578,  0           // InvokeDynamic #13:apply:(Lscala/Function1;)Lscala/Function1;
      54: invokevirtual #2574               // Method scala/collection/immutable/Stream.map:(Lscala/Function1;)Lscala/collection/immutable/Stream;
      57: areturn
      58: aload_1
      59: new           #53                 // class scalaz/$bslash$amp$div$Both
      62: dup
      63: aload         4
      65: invokevirtual #2285               // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
      68: aload         5
      70: invokevirtual #2285               // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
      73: invokespecial #2579               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      76: invokeinterface #2216,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      81: astore        6
      83: getstatic     #2338               // Field scala/collection/immutable/Stream$Deferrer$.MODULE$:Lscala/collection/immutable/Stream$Deferrer$;
      86: getstatic     #2341               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      89: aload_0
      90: aload_1
      91: aload         4
      93: aload         5
      95: invokedynamic #2585,  0           // InvokeDynamic #14:apply:(Lscalaz/std/StreamInstances$$anon$1;Lscala/Function1;Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;)Lscala/Function0;
     100: invokevirtual #2345               // Method scala/collection/immutable/Stream$.toDeferrer:(Lscala/Function0;)Lscala/Function0;
     103: aload         6
     105: invokevirtual #2386               // Method scala/collection/immutable/Stream$Deferrer$.$hash$colon$colon$extension:(Lscala/Function0;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
     108: areturn

  public static final scala.collection.immutable.Stream $anonfun$alignWith$1(scalaz.std.StreamInstances$$anon$1, scala.Function1, scala.collection.immutable.Stream, scala.collection.immutable.Stream);
    Code:
       0: aload_3
       1: invokevirtual #2082               // Method scala/collection/immutable/Stream.isEmpty:()Z
       4: ifeq          18
       7: aload_2
       8: aload_1
       9: invokedynamic #2572,  0           // InvokeDynamic #12:apply:(Lscala/Function1;)Lscala/Function1;
      14: invokevirtual #2574               // Method scala/collection/immutable/Stream.map:(Lscala/Function1;)Lscala/collection/immutable/Stream;
      17: areturn
      18: aload_2
      19: invokevirtual #2082               // Method scala/collection/immutable/Stream.isEmpty:()Z
      22: ifeq          36
      25: aload_3
      26: aload_1
      27: invokedynamic #2578,  0           // InvokeDynamic #13:apply:(Lscala/Function1;)Lscala/Function1;
      32: invokevirtual #2574               // Method scala/collection/immutable/Stream.map:(Lscala/Function1;)Lscala/collection/immutable/Stream;
      35: areturn
      36: aload_1
      37: new           #53                 // class scalaz/$bslash$amp$div$Both
      40: dup
      41: aload_2
      42: invokevirtual #2285               // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
      45: aload_3
      46: invokevirtual #2285               // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
      49: invokespecial #2579               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      52: invokeinterface #2216,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      57: astore        4
      59: getstatic     #2338               // Field scala/collection/immutable/Stream$Deferrer$.MODULE$:Lscala/collection/immutable/Stream$Deferrer$;
      62: getstatic     #2341               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      65: aload_0
      66: aload_1
      67: aload_2
      68: aload_3
      69: invokedynamic #2585,  0           // InvokeDynamic #14:apply:(Lscalaz/std/StreamInstances$$anon$1;Lscala/Function1;Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;)Lscala/Function0;
      74: invokevirtual #2345               // Method scala/collection/immutable/Stream$.toDeferrer:(Lscala/Function0;)Lscala/Function0;
      77: aload         4
      79: invokevirtual #2386               // Method scala/collection/immutable/Stream$Deferrer$.$hash$colon$colon$extension:(Lscala/Function0;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
      82: areturn

  public static final scala.collection.immutable.Stream $anonfun$tailrecM$1(scalaz.std.StreamInstances$$anon$1, scala.collection.immutable.Stream, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2590               // Method go$1:(Lscala/collection/immutable/Stream;Lscala/Function1;)Lscala/collection/immutable/Stream;
       6: areturn

  public static final scala.collection.immutable.Stream $anonfun$tailrecM$2(scala.collection.immutable.Stream);
    Code:
       0: aload_0
       1: areturn

  private final scala.collection.immutable.Stream rec$2(scala.collection.immutable.Stream, scala.Function1);
    Code:
       0: aload_1
       1: ifnull        91
       4: getstatic     #2197               // Field scala/package$$hash$colon$colon$.MODULE$:Lscala/package$$hash$colon$colon$;
       7: aload_1
       8: invokevirtual #2201               // Method scala/package$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      11: astore_3
      12: aload_3
      13: invokevirtual #2165               // Method scala/Option.isEmpty:()Z
      16: ifne          91
      19: aload_3
      20: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
      23: checkcast     #2206               // class scala/Tuple2
      26: invokevirtual #2209               // Method scala/Tuple2._1:()Ljava/lang/Object;
      29: checkcast     #2370               // class scalaz/$bslash$div
      32: astore        4
      34: aload_3
      35: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
      38: checkcast     #2206               // class scala/Tuple2
      41: invokevirtual #2212               // Method scala/Tuple2._2:()Ljava/lang/Object;
      44: checkcast     #39                 // class scala/collection/immutable/Stream
      47: astore        5
      49: aload         4
      51: instanceof    #2372               // class scalaz/$bslash$div$minus
      54: ifeq          91
      57: aload         4
      59: checkcast     #2372               // class scalaz/$bslash$div$minus
      62: invokevirtual #2374               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      65: astore        6
      67: getstatic     #2338               // Field scala/collection/immutable/Stream$Deferrer$.MODULE$:Lscala/collection/immutable/Stream$Deferrer$;
      70: getstatic     #2341               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      73: aload_0
      74: aload         5
      76: aload_2
      77: invokedynamic #2382,  0           // InvokeDynamic #8:apply:(Lscalaz/std/StreamInstances$$anon$1;Lscala/collection/immutable/Stream;Lscala/Function1;)Lscala/Function0;
      82: invokevirtual #2345               // Method scala/collection/immutable/Stream$.toDeferrer:(Lscala/Function0;)Lscala/Function0;
      85: aload         6
      87: invokevirtual #2386               // Method scala/collection/immutable/Stream$Deferrer$.$hash$colon$colon$extension:(Lscala/Function0;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
      90: areturn
      91: aload_1
      92: ifnull        200
      95: getstatic     #2197               // Field scala/package$$hash$colon$colon$.MODULE$:Lscala/package$$hash$colon$colon$;
      98: aload_1
      99: invokevirtual #2201               // Method scala/package$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
     102: astore        7
     104: aload         7
     106: invokevirtual #2165               // Method scala/Option.isEmpty:()Z
     109: ifne          200
     112: aload         7
     114: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
     117: checkcast     #2206               // class scala/Tuple2
     120: invokevirtual #2209               // Method scala/Tuple2._1:()Ljava/lang/Object;
     123: checkcast     #2370               // class scalaz/$bslash$div
     126: astore        8
     128: aload         7
     130: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
     133: checkcast     #2206               // class scala/Tuple2
     136: invokevirtual #2212               // Method scala/Tuple2._2:()Ljava/lang/Object;
     139: checkcast     #39                 // class scala/collection/immutable/Stream
     142: astore        9
     144: aload         8
     146: instanceof    #2388               // class scalaz/$minus$bslash$div
     149: ifeq          200
     152: aload         8
     154: checkcast     #2388               // class scalaz/$minus$bslash$div
     157: invokevirtual #2390               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
     160: astore        10
     162: aload_2
     163: aload         10
     165: invokeinterface #2216,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     170: checkcast     #39                 // class scala/collection/immutable/Stream
     173: astore        11
     175: getstatic     #2338               // Field scala/collection/immutable/Stream$Deferrer$.MODULE$:Lscala/collection/immutable/Stream$Deferrer$;
     178: getstatic     #2341               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
     181: aload         9
     183: invokedynamic #2397,  0           // InvokeDynamic #9:apply:(Lscala/collection/immutable/Stream;)Lscala/Function0;
     188: invokevirtual #2345               // Method scala/collection/immutable/Stream$.toDeferrer:(Lscala/Function0;)Lscala/Function0;
     191: aload         11
     193: invokevirtual #2349               // Method scala/collection/immutable/Stream$Deferrer$.$hash$colon$colon$colon$extension:(Lscala/Function0;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
     196: astore_1
     197: goto          0
     200: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
     203: aload_1
     204: invokevirtual #2194               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     207: ifeq          214
     210: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
     213: areturn
     214: new           #2218               // class scala/MatchError
     217: dup
     218: aload_1
     219: invokespecial #2219               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     222: athrow

  private final scala.collection.immutable.Stream go$1(scala.collection.immutable.Stream, scala.Function1);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: ifnull        97
       6: getstatic     #2197               // Field scala/package$$hash$colon$colon$.MODULE$:Lscala/package$$hash$colon$colon$;
       9: aload_3
      10: invokevirtual #2201               // Method scala/package$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      13: astore        4
      15: aload         4
      17: invokevirtual #2165               // Method scala/Option.isEmpty:()Z
      20: ifne          97
      23: aload         4
      25: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
      28: checkcast     #2206               // class scala/Tuple2
      31: invokevirtual #2209               // Method scala/Tuple2._1:()Ljava/lang/Object;
      34: checkcast     #2370               // class scalaz/$bslash$div
      37: astore        5
      39: aload         4
      41: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
      44: checkcast     #2206               // class scala/Tuple2
      47: invokevirtual #2212               // Method scala/Tuple2._2:()Ljava/lang/Object;
      50: checkcast     #39                 // class scala/collection/immutable/Stream
      53: astore        6
      55: aload         5
      57: instanceof    #2372               // class scalaz/$bslash$div$minus
      60: ifeq          97
      63: aload         5
      65: checkcast     #2372               // class scalaz/$bslash$div$minus
      68: invokevirtual #2374               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      71: astore        7
      73: getstatic     #2338               // Field scala/collection/immutable/Stream$Deferrer$.MODULE$:Lscala/collection/immutable/Stream$Deferrer$;
      76: getstatic     #2341               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      79: aload_0
      80: aload         6
      82: aload_2
      83: invokedynamic #2382,  0           // InvokeDynamic #8:apply:(Lscalaz/std/StreamInstances$$anon$1;Lscala/collection/immutable/Stream;Lscala/Function1;)Lscala/Function0;
      88: invokevirtual #2345               // Method scala/collection/immutable/Stream$.toDeferrer:(Lscala/Function0;)Lscala/Function0;
      91: aload         7
      93: invokevirtual #2386               // Method scala/collection/immutable/Stream$Deferrer$.$hash$colon$colon$extension:(Lscala/Function0;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
      96: areturn
      97: aload_3
      98: ifnull        206
     101: getstatic     #2197               // Field scala/package$$hash$colon$colon$.MODULE$:Lscala/package$$hash$colon$colon$;
     104: aload_3
     105: invokevirtual #2201               // Method scala/package$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
     108: astore        8
     110: aload         8
     112: invokevirtual #2165               // Method scala/Option.isEmpty:()Z
     115: ifne          206
     118: aload         8
     120: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
     123: checkcast     #2206               // class scala/Tuple2
     126: invokevirtual #2209               // Method scala/Tuple2._1:()Ljava/lang/Object;
     129: checkcast     #2370               // class scalaz/$bslash$div
     132: astore        9
     134: aload         8
     136: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
     139: checkcast     #2206               // class scala/Tuple2
     142: invokevirtual #2212               // Method scala/Tuple2._2:()Ljava/lang/Object;
     145: checkcast     #39                 // class scala/collection/immutable/Stream
     148: astore        10
     150: aload         9
     152: instanceof    #2388               // class scalaz/$minus$bslash$div
     155: ifeq          206
     158: aload         9
     160: checkcast     #2388               // class scalaz/$minus$bslash$div
     163: invokevirtual #2390               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
     166: astore        11
     168: aload_2
     169: aload         11
     171: invokeinterface #2216,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     176: checkcast     #39                 // class scala/collection/immutable/Stream
     179: astore        12
     181: getstatic     #2338               // Field scala/collection/immutable/Stream$Deferrer$.MODULE$:Lscala/collection/immutable/Stream$Deferrer$;
     184: getstatic     #2341               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
     187: aload         10
     189: invokedynamic #2397,  0           // InvokeDynamic #9:apply:(Lscala/collection/immutable/Stream;)Lscala/Function0;
     194: invokevirtual #2345               // Method scala/collection/immutable/Stream$.toDeferrer:(Lscala/Function0;)Lscala/Function0;
     197: aload         12
     199: invokevirtual #2349               // Method scala/collection/immutable/Stream$Deferrer$.$hash$colon$colon$colon$extension:(Lscala/Function0;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
     202: astore_3
     203: goto          2
     206: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
     209: aload_3
     210: invokevirtual #2194               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     213: ifeq          220
     216: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
     219: areturn
     220: new           #2218               // class scala/MatchError
     223: dup
     224: aload_3
     225: invokespecial #2219               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     228: athrow

  public static final scalaz.Maybe $anonfun$traverseImpl$1(scala.Function1, scala.collection.immutable.Stream);
    Code:
       0: aload_1
       1: ifnull        77
       4: getstatic     #2197               // Field scala/package$$hash$colon$colon$.MODULE$:Lscala/package$$hash$colon$colon$;
       7: aload_1
       8: invokevirtual #2201               // Method scala/package$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      11: astore_2
      12: aload_2
      13: invokevirtual #2165               // Method scala/Option.isEmpty:()Z
      16: ifne          77
      19: aload_2
      20: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
      23: checkcast     #2206               // class scala/Tuple2
      26: invokevirtual #2209               // Method scala/Tuple2._1:()Ljava/lang/Object;
      29: astore_3
      30: aload_2
      31: invokevirtual #2204               // Method scala/Option.get:()Ljava/lang/Object;
      34: checkcast     #2206               // class scala/Tuple2
      37: invokevirtual #2212               // Method scala/Tuple2._2:()Ljava/lang/Object;
      40: checkcast     #39                 // class scala/collection/immutable/Stream
      43: astore        4
      45: getstatic     #2529               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      48: pop
      49: new           #2206               // class scala/Tuple2
      52: dup
      53: aload_0
      54: aload_3
      55: invokeinterface #2216,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      60: aload         4
      62: invokespecial #2532               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      65: astore        5
      67: new           #122                // class scalaz/Maybe$Just
      70: dup
      71: aload         5
      73: invokespecial #2533               // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      76: areturn
      77: getstatic     #2190               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      80: aload_1
      81: invokevirtual #2194               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      84: ifeq          98
      87: getstatic     #2529               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      90: pop
      91: getstatic     #2536               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      94: invokevirtual #2539               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      97: areturn
      98: new           #2218               // class scala/MatchError
     101: dup
     102: aload_1
     103: invokespecial #2219               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     106: athrow

  public static final scala.collection.immutable.Nil$ $anonfun$traverseImpl$3();
    Code:
       0: getstatic     #2606               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: areturn

  public static final java.lang.Object $anonfun$traverseImpl$2(scalaz.Applicative);
    Code:
       0: aload_0
       1: invokedynamic #2614,  0           // InvokeDynamic #15:apply:()Lscala/Function0;
       6: invokeinterface #2616,  2         // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public static final scala.collection.immutable.Stream $anonfun$traverseImpl$5(scala.collection.immutable.Stream, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2622               // Method scala/collection/immutable/Stream.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #39                 // class scala/collection/immutable/Stream
       8: areturn

  public static final scala.collection.immutable.Stream $anonfun$traverseImpl$4(scala.collection.immutable.List);
    Code:
       0: aload_0
       1: getstatic     #2045               // Field scala/package$.MODULE$:Lscala/package$;
       4: invokevirtual #2049               // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
       7: getstatic     #2606               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      10: invokevirtual #2068               // Method scala/collection/immutable/Stream$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
      13: invokedynamic #2628,  0           // InvokeDynamic #16:apply:()Lscala/Function2;
      18: invokevirtual #2631               // Method scala/collection/immutable/List.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      21: checkcast     #39                 // class scala/collection/immutable/Stream
      24: areturn

  public scalaz.std.StreamInstances$$anon$1(scalaz.std.StreamInstances);
    Code:
       0: aload_0
       1: invokespecial #2636               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2640               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #2643               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #2646               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      16: aload_0
      17: invokestatic  #2649               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      20: aload_0
      21: invokestatic  #2652               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      24: aload_0
      25: invokestatic  #2655               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      28: aload_0
      29: invokestatic  #2658               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      32: aload_0
      33: invokestatic  #2661               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      36: aload_0
      37: invokestatic  #2664               // InterfaceMethod scalaz/Monad.$init$:(Lscalaz/Monad;)V
      40: aload_0
      41: invokestatic  #2667               // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      44: aload_0
      45: invokestatic  #2670               // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      48: aload_0
      49: invokestatic  #2673               // InterfaceMethod scalaz/ApplicativePlus.$init$:(Lscalaz/ApplicativePlus;)V
      52: aload_0
      53: invokestatic  #2676               // InterfaceMethod scalaz/MonadPlus.$init$:(Lscalaz/MonadPlus;)V
      56: aload_0
      57: invokestatic  #2679               // InterfaceMethod scalaz/InvariantAlt.$init$:(Lscalaz/InvariantAlt;)V
      60: aload_0
      61: invokestatic  #2682               // InterfaceMethod scalaz/Alt.$init$:(Lscalaz/Alt;)V
      64: aload_0
      65: invokestatic  #2685               // InterfaceMethod scalaz/BindRec.$init$:(Lscalaz/BindRec;)V
      68: aload_0
      69: invokestatic  #2688               // InterfaceMethod scalaz/Zip.$init$:(Lscalaz/Zip;)V
      72: aload_0
      73: invokestatic  #2691               // InterfaceMethod scalaz/Unzip.$init$:(Lscalaz/Unzip;)V
      76: aload_0
      77: invokestatic  #2694               // InterfaceMethod scalaz/Align.$init$:(Lscalaz/Align;)V
      80: aload_0
      81: invokestatic  #2697               // InterfaceMethod scalaz/IsEmpty.$init$:(Lscalaz/IsEmpty;)V
      84: aload_0
      85: invokestatic  #2700               // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      88: invokestatic  #2705               // Method scala/runtime/Statics.releaseFence:()V
      91: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2718,  0           // InvokeDynamic #17:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
