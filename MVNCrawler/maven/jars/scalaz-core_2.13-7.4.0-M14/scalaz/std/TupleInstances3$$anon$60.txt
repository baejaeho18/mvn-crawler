Compiled from "Tuple.scala"
public final class scalaz.std.TupleInstances3$$anon$60 implements scalaz.std.Tuple3Order<A1, A2, A3> {
  private boolean equalIsNatural;

  private scalaz.syntax.OrderSyntax<scala.Tuple3<A1, A2, A3>> orderSyntax;

  private scalaz.syntax.EqualSyntax<scala.Tuple3<A1, A2, A3>> equalSyntax;

  private final scalaz.Order A1$43;

  private final scalaz.Order A2$37;

  private final scalaz.Order A3$31;

  public scalaz.Ordering order(scala.Tuple3<A1, A2, A3>, scala.Tuple3<A1, A2, A3>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #44                 // InterfaceMethod scalaz/std/Tuple3Order.order$:(Lscalaz/std/Tuple3Order;Lscala/Tuple3;Lscala/Tuple3;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(scala.Tuple3<A1, A2, A3>, scala.Tuple3<A1, A2, A3>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // InterfaceMethod scalaz/std/Tuple3Equal.equal$:(Lscalaz/std/Tuple3Equal;Lscala/Tuple3;Lscala/Tuple3;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #64                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #71                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #75                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #79                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #83                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #89                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #93                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #99                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #107                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scala.Tuple3<A1, A2, A3>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #115                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scala.Tuple3<A1, A2, A3>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #122                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scala.Tuple3<A1, A2, A3>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #129                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public scalaz.Equal<scala.Tuple3<A1, A2, A3>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #136                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: getfield      #139                // Field equalIsNatural:Z
       4: ireturn

  public void scalaz$std$Tuple3Equal$_setter_$equalIsNatural_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #139                // Field equalIsNatural:Z
       5: return

  public scalaz.syntax.OrderSyntax<scala.Tuple3<A1, A2, A3>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #146                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #146                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scala.Tuple3<A1, A2, A3>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #153                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<A1> _1();
    Code:
       0: aload_0
       1: getfield      #160                // Field A1$43:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A2> _2();
    Code:
       0: aload_0
       1: getfield      #164                // Field A2$37:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A3> _3();
    Code:
       0: aload_0
       1: getfield      #168                // Field A3$31:Lscalaz/Order;
       4: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #171                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #173                // class scala/Tuple3
       5: aload_2
       6: checkcast     #173                // class scala/Tuple3
       9: invokevirtual #175                // Method equal:(Lscala/Tuple3;Lscala/Tuple3;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #173                // class scala/Tuple3
       5: aload_2
       6: checkcast     #173                // class scala/Tuple3
       9: invokevirtual #177                // Method order:(Lscala/Tuple3;Lscala/Tuple3;)Lscalaz/Ordering;
      12: areturn

  public scalaz.Equal _3();
    Code:
       0: aload_0
       1: invokevirtual #180                // Method _3:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _2();
    Code:
       0: aload_0
       1: invokevirtual #182                // Method _2:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _1();
    Code:
       0: aload_0
       1: invokevirtual #184                // Method _1:()Lscalaz/Order;
       4: areturn

  public scalaz.std.TupleInstances3$$anon$60(scalaz.std.TupleInstances3, scalaz.Order, scalaz.Order, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #160                // Field A1$43:Lscalaz/Order;
       5: aload_0
       6: aload_3
       7: putfield      #164                // Field A2$37:Lscalaz/Order;
      10: aload_0
      11: aload         4
      13: putfield      #168                // Field A3$31:Lscalaz/Order;
      16: aload_0
      17: invokespecial #190                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #194                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      24: aload_0
      25: invokestatic  #197                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      28: aload_0
      29: invokestatic  #200                // InterfaceMethod scalaz/std/Tuple3Equal.$init$:(Lscalaz/std/Tuple3Equal;)V
      32: invokestatic  #205                // Method scala/runtime/Statics.releaseFence:()V
      35: return
}
