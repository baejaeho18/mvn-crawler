Compiled from "StreamT.scala"
public final class scalaz.StreamTInstances0$$anon$4 implements scalaz.StreamTSemigroup<F, A> {
  private scalaz.syntax.SemigroupSyntax<scalaz.StreamT<F, A>> semigroupSyntax;

  private final scalaz.Functor F0$2;

  public scalaz.StreamT<F, A> append(scalaz.StreamT<F, A>, scala.Function0<scalaz.StreamT<F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #32                 // InterfaceMethod scalaz/StreamTSemigroup.append$:(Lscalaz/StreamTSemigroup;Lscalaz/StreamT;Lscala/Function0;)Lscalaz/StreamT;
       6: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #44                 // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<scalaz.StreamT<F, A>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.StreamT<F, A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #55                 // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.StreamT<F, A>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.StreamT<F, A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #61                 // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #68                 // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #75                 // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.StreamT<F, A>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #82                 // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.SemigroupSyntax<scalaz.StreamT<F, A>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #86                 // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.StreamT<F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #86                 // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.Functor<F> F();
    Code:
       0: aload_0
       1: getfield      #95                 // Field F0$2:Lscalaz/Functor;
       4: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #98                 // class scalaz/StreamT
       5: aload_2
       6: invokevirtual #100                // Method append:(Lscalaz/StreamT;Lscala/Function0;)Lscalaz/StreamT;
       9: areturn

  public scalaz.StreamTInstances0$$anon$4(scalaz.StreamTInstances0, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #95                 // Field F0$2:Lscalaz/Functor;
       5: aload_0
       6: invokespecial #106                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #110                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      13: invokestatic  #115                // Method scala/runtime/Statics.releaseFence:()V
      16: return
}
