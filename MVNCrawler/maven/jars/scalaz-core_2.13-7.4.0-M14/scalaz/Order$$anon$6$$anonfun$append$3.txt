Compiled from "Order.scala"
public final class scalaz.Order$$anon$6$$anonfun$append$3 implements scalaz.Order<A> {
  private scalaz.syntax.OrderSyntax<A> orderSyntax;

  private scalaz.syntax.EqualSyntax<A> equalSyntax;

  private final scalaz.Order$$anon$6 $outer;

  private final scalaz.Order f1$2;

  private final scala.Function0 f2$1;

  public scalaz.Ordering apply(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #42                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #52                 // InterfaceMethod scalaz/Order.equal$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThan(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #60                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #64                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #68                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public A max(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #75                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public A min(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #79                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<A, A> sort(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #86                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #94                 // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<A> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #102                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<A> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #109                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<A>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #116                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #122                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<A>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #129                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<A> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #133                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #133                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<A> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #141                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #141                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public final scalaz.Ordering order(A, A);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: getfield      #147                // Field f1$2:Lscalaz/Order;
       6: aload_0
       7: getfield      #149                // Field f2$1:Lscala/Function0;
      10: invokestatic  #153                // Method scalaz/Order$$anon$6.scalaz$Order$$nestedInanon$6$$$anonfun$append$1:(Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Order;Lscala/Function0;)Lscalaz/Ordering;
      13: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #156                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scalaz.Order$$anon$6$$anonfun$append$3(scalaz.Order$$anon$6, scalaz.Order, scala.Function0);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #160                // Field $outer:Lscalaz/Order$$anon$6;
      11: aload_0
      12: aload_2
      13: putfield      #147                // Field f1$2:Lscalaz/Order;
      16: aload_0
      17: aload_3
      18: putfield      #149                // Field f2$1:Lscala/Function0;
      21: aload_0
      22: invokespecial #163                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #167                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      29: aload_0
      30: invokestatic  #170                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      33: invokestatic  #175                // Method scala/runtime/Statics.releaseFence:()V
      36: return
}
