Compiled from "TracedT.scala"
public final class scalaz.TracedTInstances$$anon$10 implements scalaz.ComonadStore<?, S>, scalaz.TracedTComonad<W, C> {
  private scalaz.syntax.ComonadSyntax<?> comonadSyntax;

  private scalaz.syntax.CobindSyntax<?> cobindSyntax;

  private scalaz.syntax.FunctorSyntax<?> functorSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  private final scalaz.ComonadStore W0$1;

  private final scalaz.Monoid evidence$12$1;

  public final <A> A copoint(scalaz.TracedT<W, C, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #66                 // InterfaceMethod scalaz/TracedTComonad.copoint$:(Lscalaz/TracedTComonad;Lscalaz/TracedT;)Ljava/lang/Object;
       5: areturn

  public final <A, B> scalaz.TracedT<W, C, B> cobind(scalaz.TracedT<W, C, A>, scala.Function1<scalaz.TracedT<W, C, A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #80                 // InterfaceMethod scalaz/TracedTCobind.cobind$:(Lscalaz/TracedTCobind;Lscalaz/TracedT;Lscala/Function1;)Lscalaz/TracedT;
       6: areturn

  public final <A, B> scalaz.TracedT<W, C, B> map(scalaz.TracedT<W, C, A>, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #89                 // InterfaceMethod scalaz/TracedTFunctor.map$:(Lscalaz/TracedTFunctor;Lscalaz/TracedT;Lscala/Function1;)Lscalaz/TracedT;
       6: areturn

  public java.lang.Object peeks(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #97                 // InterfaceMethod scalaz/ComonadStore.peeks$:(Lscalaz/ComonadStore;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object seek(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #104                // InterfaceMethod scalaz/ComonadStore.seek$:(Lscalaz/ComonadStore;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object seeks(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #108                // InterfaceMethod scalaz/ComonadStore.seeks$:(Lscalaz/ComonadStore;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object experiment(scala.Function1, java.lang.Object, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #115                // InterfaceMethod scalaz/ComonadStore.experiment$:(Lscalaz/ComonadStore;Lscala/Function1;Ljava/lang/Object;Lscalaz/Functor;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object copure(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #122                // InterfaceMethod scalaz/Comonad.copure$:(Lscalaz/Comonad;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Comonad<?>.ComonadLaws comonadLaw();
    Code:
       0: aload_0
       1: invokestatic  #129                // InterfaceMethod scalaz/Comonad.comonadLaw$:(Lscalaz/Comonad;)Lscalaz/Comonad$ComonadLaws;
       4: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #135                // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #140                // InterfaceMethod scalaz/Cobind.cojoin$:(Lscalaz/Cobind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Cobind<?>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #147                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #154                // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #159                // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.TracedT<W, C, A>, scalaz.TracedT<W, C, B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #172                // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #177                // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #181                // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #186                // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #190                // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #194                // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #200                // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G$> scalaz.Functor<?> compose(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #209                // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G$> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G$> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #225                // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G$> scalaz.Functor<?> product(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #230                // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #237                // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<?>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #245                // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #252                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #260                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #268                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.ComonadSyntax<?> comonadSyntax();
    Code:
       0: aload_0
       1: getfield      #272                // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       4: areturn

  public void scalaz$Comonad$_setter_$comonadSyntax_$eq(scalaz.syntax.ComonadSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #272                // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       5: return

  public scalaz.syntax.CobindSyntax<?> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #280                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #280                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<?> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #287                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #287                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #294                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #294                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public scalaz.Comonad<W> W();
    Code:
       0: aload_0
       1: getfield      #302                // Field W0$1:Lscalaz/ComonadStore;
       4: areturn

  public scalaz.Monoid<C> C();
    Code:
       0: getstatic     #311                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #313                // Field evidence$12$1:Lscalaz/Monoid;
       7: invokevirtual #316                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #318                // class scalaz/Monoid
      13: areturn

  public <A> S pos(scalaz.TracedT<W, C, A>);
    Code:
       0: aload_0
       1: getfield      #302                // Field W0$1:Lscalaz/ComonadStore;
       4: getstatic     #325                // Field scalaz/TracedT$.MODULE$:Lscalaz/TracedT$;
       7: pop
       8: aload_0
       9: getfield      #313                // Field evidence$12$1:Lscalaz/Monoid;
      12: astore_2
      13: new           #42                 // class scalaz/TracedTInstances0$$anon$8
      16: dup
      17: aconst_null
      18: aload_2
      19: invokespecial #329                // Method scalaz/TracedTInstances0$$anon$8."<init>":(Lscalaz/TracedTInstances0;Lscalaz/Monoid;)V
      22: aconst_null
      23: astore_2
      24: aload_0
      25: getfield      #302                // Field W0$1:Lscalaz/ComonadStore;
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokevirtual #333                // Method scalaz/TracedTInstances0$$anon$8.lower:(Lscalaz/TracedT;Lscalaz/Cobind;)Ljava/lang/Object;
      34: aconst_null
      35: astore_3
      36: invokeinterface #335,  2          // InterfaceMethod scalaz/ComonadStore.pos:(Ljava/lang/Object;)Ljava/lang/Object;
      41: areturn

  public <A> A peek(S, scalaz.TracedT<W, C, A>);
    Code:
       0: aload_0
       1: getfield      #302                // Field W0$1:Lscalaz/ComonadStore;
       4: aload_1
       5: getstatic     #325                // Field scalaz/TracedT$.MODULE$:Lscalaz/TracedT$;
       8: pop
       9: aload_0
      10: getfield      #313                // Field evidence$12$1:Lscalaz/Monoid;
      13: astore_3
      14: new           #42                 // class scalaz/TracedTInstances0$$anon$8
      17: dup
      18: aconst_null
      19: aload_3
      20: invokespecial #329                // Method scalaz/TracedTInstances0$$anon$8."<init>":(Lscalaz/TracedTInstances0;Lscalaz/Monoid;)V
      23: aconst_null
      24: astore_3
      25: aload_0
      26: getfield      #302                // Field W0$1:Lscalaz/ComonadStore;
      29: astore        4
      31: aload_2
      32: aload         4
      34: invokevirtual #333                // Method scalaz/TracedTInstances0$$anon$8.lower:(Lscalaz/TracedT;Lscalaz/Cobind;)Ljava/lang/Object;
      37: aconst_null
      38: astore        4
      40: invokeinterface #343,  3          // InterfaceMethod scalaz/ComonadStore.peek:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #345                // class scalaz/TracedT
       5: aload_2
       6: invokevirtual #347                // Method map:(Lscalaz/TracedT;Lscala/Function1;)Lscalaz/TracedT;
       9: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #345                // class scalaz/TracedT
       5: aload_2
       6: invokevirtual #349                // Method cobind:(Lscalaz/TracedT;Lscala/Function1;)Lscalaz/TracedT;
       9: areturn

  public java.lang.Object copoint(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #345                // class scalaz/TracedT
       5: invokevirtual #351                // Method copoint:(Lscalaz/TracedT;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object peek(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #345                // class scalaz/TracedT
       6: invokevirtual #353                // Method peek:(Ljava/lang/Object;Lscalaz/TracedT;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object pos(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #345                // class scalaz/TracedT
       5: invokevirtual #355                // Method pos:(Lscalaz/TracedT;)Ljava/lang/Object;
       8: areturn

  public scalaz.Semigroup C();
    Code:
       0: aload_0
       1: invokevirtual #358                // Method C:()Lscalaz/Monoid;
       4: areturn

  public scalaz.Functor W();
    Code:
       0: aload_0
       1: invokevirtual #361                // Method W:()Lscalaz/Comonad;
       4: areturn

  public scalaz.Cobind W();
    Code:
       0: aload_0
       1: invokevirtual #361                // Method W:()Lscalaz/Comonad;
       4: areturn

  public scalaz.TracedTInstances$$anon$10(scalaz.TracedTInstances, scalaz.ComonadStore, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #302                // Field W0$1:Lscalaz/ComonadStore;
       5: aload_0
       6: aload_3
       7: putfield      #313                // Field evidence$12$1:Lscalaz/Monoid;
      10: aload_0
      11: invokespecial #367                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #371                // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      18: aload_0
      19: invokestatic  #374                // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      22: aload_0
      23: invokestatic  #377                // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      26: aload_0
      27: invokestatic  #380                // InterfaceMethod scalaz/Comonad.$init$:(Lscalaz/Comonad;)V
      30: invokestatic  #385                // Method scala/runtime/Statics.releaseFence:()V
      33: return
}
