Compiled from "MaybeT.scala"
public interface scalaz.MaybeTMonadListen<F, W> extends scalaz.MonadListen<?, W>, scalaz.MaybeTMonadTell<F, W> {
  public abstract scalaz.MonadListen<F, W> MT();

  public static scalaz.MaybeT listen$(scalaz.MaybeTMonadListen, scalaz.MaybeT);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #39                 // InterfaceMethod listen:(Lscalaz/MaybeT;)Lscalaz/MaybeT;
       5: areturn

  public default <A> scalaz.MaybeT<F, scala.Tuple2<A, W>> listen(scalaz.MaybeT<F, A>);
    Code:
       0: aload_0
       1: invokeinterface #44,  1           // InterfaceMethod MT:()Lscalaz/MonadListen;
       6: aload_0
       7: invokeinterface #44,  1           // InterfaceMethod MT:()Lscalaz/MonadListen;
      12: aload_1
      13: invokevirtual #50                 // Method scalaz/MaybeT.run:()Ljava/lang/Object;
      16: invokeinterface #53,  2           // InterfaceMethod scalaz/MonadListen.listen:(Ljava/lang/Object;)Ljava/lang/Object;
      21: aload_0
      22: invokedynamic #74,  0             // InvokeDynamic #0:apply:(Lscalaz/MaybeTMonadListen;)Lscala/Function1;
      27: invokeinterface #78,  3           // InterfaceMethod scalaz/MonadListen.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      32: astore_2
      33: getstatic     #84                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
      36: pop
      37: new           #28                 // class scalaz/MaybeT$$anon$9
      40: invokespecial #88                 // Method scalaz/MaybeT$$anon$9."<init>":()V
      43: new           #46                 // class scalaz/MaybeT
      46: dup
      47: aload_2
      48: invokespecial #91                 // Method scalaz/MaybeT."<init>":(Ljava/lang/Object;)V
      51: areturn

  public static scalaz.Maybe $anonfun$listen$3(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #103                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: pop
       4: new           #105                // class scala/Tuple2
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #108                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      13: astore_2
      14: new           #25                 // class scalaz/Maybe$Just
      17: dup
      18: aload_2
      19: invokespecial #109                // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      22: areturn

  public static java.lang.Object $anonfun$listen$2(scalaz.MaybeTMonadListen, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #44,  1           // InterfaceMethod MT:()Lscalaz/MonadListen;
       6: aload_2
       7: aload_1
       8: invokedynamic #122,  0            // InvokeDynamic #1:apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Function0;
      13: invokeinterface #126,  2          // InterfaceMethod scalaz/MonadListen.point:(Lscala/Function0;)Ljava/lang/Object;
      18: areturn

  public static scalaz.Maybe $anonfun$listen$5();
    Code:
       0: getstatic     #103                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #130                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
       6: areturn

  public static java.lang.Object $anonfun$listen$4(scalaz.MaybeTMonadListen);
    Code:
       0: aload_0
       1: invokeinterface #44,  1           // InterfaceMethod MT:()Lscalaz/MonadListen;
       6: invokedynamic #138,  0            // InvokeDynamic #2:apply:()Lscala/Function0;
      11: invokeinterface #126,  2          // InterfaceMethod scalaz/MonadListen.point:(Lscala/Function0;)Ljava/lang/Object;
      16: areturn

  public static java.lang.Object $anonfun$listen$1(scalaz.MaybeTMonadListen, scala.Tuple2);
    Code:
       0: aload_1
       1: ifnull        68
       4: aload_1
       5: invokevirtual #142                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: checkcast     #22                 // class scalaz/Maybe
      11: astore_2
      12: aload_1
      13: invokevirtual #145                // Method scala/Tuple2._2:()Ljava/lang/Object;
      16: astore_3
      17: aload_2
      18: ifnonnull     23
      21: aconst_null
      22: athrow
      23: aload_2
      24: instanceof    #25                 // class scalaz/Maybe$Just
      27: ifeq          47
      30: aload_2
      31: checkcast     #25                 // class scalaz/Maybe$Just
      34: invokevirtual #148                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      37: astore        4
      39: aload_0
      40: aload_3
      41: aload         4
      43: invokestatic  #150                // InterfaceMethod $anonfun$listen$2:(Lscalaz/MaybeTMonadListen;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: areturn
      47: aload_2
      48: instanceof    #20                 // class scalaz/Maybe$Empty
      51: ifeq          59
      54: aload_0
      55: invokestatic  #152                // InterfaceMethod $anonfun$listen$4:(Lscalaz/MaybeTMonadListen;)Ljava/lang/Object;
      58: areturn
      59: new           #154                // class scala/MatchError
      62: dup
      63: aload_2
      64: invokespecial #155                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      67: athrow
      68: new           #154                // class scala/MatchError
      71: dup
      72: aconst_null
      73: invokespecial #155                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      76: athrow

  public static void $init$(scalaz.MaybeTMonadListen);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #174,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
