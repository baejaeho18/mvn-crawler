Compiled from "MaybeT.scala"
public final class scalaz.MaybeT<F, A> implements scala.Product, java.io.Serializable {
  private final F run;

  public static <F, A> scala.Option<F> unapply(scalaz.MaybeT<F, A>);
    Code:
       0: getstatic     #59                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: invokevirtual #61                 // Method scalaz/MaybeT$.unapply:(Lscalaz/MaybeT;)Lscala/Option;
       7: areturn

  public static <F, A> scalaz.MaybeT<F, A> apply(F);
    Code:
       0: getstatic     #59                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: pop
       4: new           #2                  // class scalaz/MaybeT
       7: dup
       8: aload_0
       9: invokespecial #69                 // Method "<init>":(Ljava/lang/Object;)V
      12: areturn

  public static <F, W, A> scalaz.MonadListen<?, W> monadListen(scalaz.MonadListen<F, W>);
    Code:
       0: getstatic     #59                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: pop
       4: new           #30                 // class scalaz/MaybeT$$anon$11
       7: dup
       8: aload_0
       9: invokespecial #76                 // Method scalaz/MaybeT$$anon$11."<init>":(Lscalaz/MonadListen;)V
      12: areturn

  public static <F, W, A> scalaz.MonadTell<?, W> monadTell(scalaz.MonadTell<F, W>);
    Code:
       0: getstatic     #59                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: pop
       4: new           #28                 // class scalaz/MaybeT$$anon$10
       7: dup
       8: aload_0
       9: invokespecial #84                 // Method scalaz/MaybeT$$anon$10."<init>":(Lscalaz/MonadTell;)V
      12: areturn

  public static <M, A> scalaz.MaybeT<M, A> empty(scalaz.Applicative<M>);
    Code:
       0: getstatic     #59                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: invokevirtual #91                 // Method scalaz/MaybeT$.empty:(Lscalaz/Applicative;)Lscalaz/MaybeT;
       7: areturn

  public static <M, A> scalaz.MaybeT<M, A> just(scala.Function0<A>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #59                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: pop
       4: new           #32                 // class scalaz/MaybeT$$anon$9
       7: invokespecial #99                 // Method scalaz/MaybeT$$anon$9."<init>":()V
      10: aload_1
      11: aload_0
      12: invokedynamic #120,  0            // InvokeDynamic #0:apply:(Lscala/Function0;)Lscala/Function0;
      17: invokeinterface #126,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      22: astore_2
      23: new           #2                  // class scalaz/MaybeT
      26: dup
      27: aload_2
      28: invokespecial #69                 // Method "<init>":(Ljava/lang/Object;)V
      31: areturn

  public static <M> scalaz.NaturalTransformation<?, ?> maybeT();
    Code:
       0: getstatic     #59                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: pop
       4: new           #32                 // class scalaz/MaybeT$$anon$9
       7: dup
       8: invokespecial #99                 // Method scalaz/MaybeT$$anon$9."<init>":()V
      11: areturn

  public static <F> scalaz.Decidable<?> maybeTDecidable(scalaz.Divisible<F>);
    Code:
       0: getstatic     #59                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: pop
       4: new           #36                 // class scalaz/MaybeTInstances$$anon$8
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #138                // Method scalaz/MaybeTInstances$$anon$8."<init>":(Lscalaz/MaybeTInstances;Lscalaz/Divisible;)V
      13: areturn

  public static <F, A> scalaz.Show<scalaz.MaybeT<F, A>> maybeTShow(scalaz.Show<F>);
    Code:
       0: getstatic     #59                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: invokevirtual #144                // Method scalaz/MaybeT$.maybeTShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <F, A> scalaz.Equal<scalaz.MaybeT<F, A>> maybeTEqual(scalaz.Equal<F>);
    Code:
       0: getstatic     #59                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: invokevirtual #150                // Method scalaz/MaybeT$.maybeTEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <F> scalaz.Traverse<?> maybeTTraverse(scalaz.Traverse<F>);
    Code:
       0: getstatic     #59                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: pop
       4: new           #34                 // class scalaz/MaybeTInstances$$anon$7
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #157                // Method scalaz/MaybeTInstances$$anon$7."<init>":(Lscalaz/MaybeTInstances;Lscalaz/Traverse;)V
      13: areturn

  public static scalaz.Hoist<scalaz.MaybeT> maybeTMonadTrans();
    Code:
       0: getstatic     #59                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: invokevirtual #163                // Method scalaz/MaybeT$.maybeTMonadTrans:()Lscalaz/Hoist;
       6: areturn

  public static <F> scalaz.MonadPlus<?> maybeTMonadPlus(scalaz.Monad<F>);
    Code:
       0: getstatic     #59                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: pop
       4: new           #38                 // class scalaz/MaybeTInstances0$$anon$5
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #169                // Method scalaz/MaybeTInstances0$$anon$5."<init>":(Lscalaz/MaybeTInstances0;Lscalaz/Monad;)V
      13: areturn

  public static <F> scalaz.BindRec<?> maybeTBindRec(scalaz.BindRec<F>, scalaz.Monad<F>);
    Code:
       0: getstatic     #59                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: pop
       4: new           #42                 // class scalaz/MaybeTInstances1$$anon$4
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: invokespecial #177                // Method scalaz/MaybeTInstances1$$anon$4."<init>":(Lscalaz/MaybeTInstances1;Lscalaz/BindRec;Lscalaz/Monad;)V
      14: areturn

  public static <F> scalaz.Foldable<?> maybeTFoldable(scalaz.Foldable<F>);
    Code:
       0: getstatic     #59                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: pop
       4: new           #40                 // class scalaz/MaybeTInstances1$$anon$3
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #184                // Method scalaz/MaybeTInstances1$$anon$3."<init>":(Lscalaz/MaybeTInstances1;Lscalaz/Foldable;)V
      13: areturn

  public static <F, E> scalaz.MonadError<?, E> maybeTMonadError(scalaz.MonadError<F, E>);
    Code:
       0: getstatic     #59                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: pop
       4: new           #44                 // class scalaz/MaybeTInstances2$$anon$2
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #191                // Method scalaz/MaybeTInstances2$$anon$2."<init>":(Lscalaz/MaybeTInstances2;Lscalaz/MonadError;)V
      13: areturn

  public static <F> scalaz.Functor<?> maybeTFunctor(scalaz.Functor<F>);
    Code:
       0: getstatic     #59                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: pop
       4: new           #46                 // class scalaz/MaybeTInstances3$$anon$1
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #198                // Method scalaz/MaybeTInstances3$$anon$1."<init>":(Lscalaz/MaybeTInstances3;Lscalaz/Functor;)V
      13: areturn

  public scala.collection.Iterator<java.lang.String> productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #206                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public F run();
    Code:
       0: aload_0
       1: getfield      #210                // Field run:Ljava/lang/Object;
       4: areturn

  public <B> scalaz.MaybeT<F, B> map(scala.Function1<A, B>, scalaz.Functor<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_1
       5: invokedynamic #227,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
      10: astore_3
      11: aload_2
      12: aload_0
      13: invokevirtual #229                // Method run:()Ljava/lang/Object;
      16: aload_3
      17: invokeinterface #234,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      22: aconst_null
      23: astore_3
      24: invokespecial #69                 // Method "<init>":(Ljava/lang/Object;)V
      27: areturn

  public <B> scalaz.MaybeT<F, B> mapF(scala.Function1<A, F>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #229                // Method run:()Ljava/lang/Object;
       9: aload_2
      10: aload_1
      11: invokedynamic #249,  0            // InvokeDynamic #2:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      16: invokeinterface #254,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokespecial #69                 // Method "<init>":(Ljava/lang/Object;)V
      24: areturn

  public <G, B> scalaz.MaybeT<G, B> mapT(scala.Function1<F, G>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #229                // Method run:()Ljava/lang/Object;
       9: invokeinterface #261,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: invokespecial #69                 // Method "<init>":(Ljava/lang/Object;)V
      17: areturn

  public <B> scalaz.MaybeT<F, B> flatMap(scala.Function1<A, scalaz.MaybeT<F, B>>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #229                // Method run:()Ljava/lang/Object;
       9: aload_1
      10: aload_2
      11: invokedynamic #271,  0            // InvokeDynamic #3:apply:(Lscala/Function1;Lscalaz/Monad;)Lscala/Function1;
      16: invokeinterface #254,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokespecial #69                 // Method "<init>":(Ljava/lang/Object;)V
      24: areturn

  public <B> scalaz.MaybeT<F, B> flatMapF(scala.Function1<A, F>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #229                // Method run:()Ljava/lang/Object;
       9: aload_2
      10: aload_1
      11: invokedynamic #277,  0            // InvokeDynamic #4:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      16: invokeinterface #254,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokespecial #69                 // Method "<init>":(Ljava/lang/Object;)V
      24: areturn

  public <Z> Z foldRight(scala.Function0<Z>, scala.Function2<A, scala.Function0<Z>, Z>, scalaz.Foldable<F>);
    Code:
       0: aload_3
       1: aload_0
       2: invokevirtual #229                // Method run:()Ljava/lang/Object;
       5: aload_1
       6: aload_2
       7: invokedynamic #293,  0            // InvokeDynamic #5:apply:(Lscala/Function2;)Lscala/Function2;
      12: invokeinterface #298,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      17: areturn

  public <G, B> G traverse(scala.Function1<A, G>, scalaz.Traverse<F>, scalaz.Applicative<G>);
    Code:
       0: aload_3
       1: aload_2
       2: aload_0
       3: invokevirtual #229                // Method run:()Ljava/lang/Object;
       6: aload_1
       7: aload_3
       8: invokedynamic #311,  0            // InvokeDynamic #6:apply:(Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
      13: aload_3
      14: invokeinterface #316,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      19: invokedynamic #324,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
      24: invokeinterface #325,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      29: areturn

  public <B> scalaz.MaybeT<F, B> ap(scala.Function0<scalaz.MaybeT<F, scala.Function1<A, B>>>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_2
       5: aload_1
       6: invokeinterface #332,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      11: checkcast     #2                  // class scalaz/MaybeT
      14: invokevirtual #229                // Method run:()Ljava/lang/Object;
      17: aload_0
      18: aload_2
      19: invokedynamic #340,  0            // InvokeDynamic #8:apply:(Lscalaz/MaybeT;Lscalaz/Monad;)Lscala/Function1;
      24: invokeinterface #254,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      29: invokespecial #69                 // Method "<init>":(Ljava/lang/Object;)V
      32: areturn

  public <B> scalaz.MaybeT<F, B> app(scala.Function0<scalaz.MaybeT<F, scala.Function1<A, B>>>, scalaz.Apply<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_2
       5: aload_1
       6: invokedynamic #348,  0            // InvokeDynamic #9:apply:(Lscala/Function0;)Lscala/Function0;
      11: aload_0
      12: invokedynamic #356,  0            // InvokeDynamic #10:apply:(Lscalaz/MaybeT;)Lscala/Function0;
      17: invokedynamic #365,  0            // InvokeDynamic #11:apply:()Lscala/Function2;
      22: invokeinterface #371,  4          // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      27: invokespecial #69                 // Method "<init>":(Ljava/lang/Object;)V
      30: areturn

  public F isJust(scalaz.Functor<F>);
    Code:
       0: invokedynamic #380,  0            // InvokeDynamic #12:apply:()Lscala/Function1;
       5: astore_2
       6: aload_1
       7: aload_0
       8: invokevirtual #229                // Method run:()Ljava/lang/Object;
      11: aload_2
      12: invokeinterface #234,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      17: areturn

  public F isDefined(scalaz.Functor<F>);
    Code:
       0: invokedynamic #386,  0            // InvokeDynamic #13:apply:()Lscala/Function1;
       5: astore_2
       6: aload_1
       7: aload_0
       8: invokevirtual #229                // Method run:()Ljava/lang/Object;
      11: aload_2
      12: invokeinterface #234,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      17: areturn

  public F isEmpty(scalaz.Functor<F>);
    Code:
       0: invokedynamic #392,  0            // InvokeDynamic #14:apply:()Lscala/Function1;
       5: astore_2
       6: aload_1
       7: aload_0
       8: invokevirtual #229                // Method run:()Ljava/lang/Object;
      11: aload_2
      12: invokeinterface #234,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      17: areturn

  public scalaz.MaybeT<F, A> filter(scala.Function1<A, java.lang.Object>, scalaz.Functor<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #229                // Method run:()Ljava/lang/Object;
       9: aload_1
      10: invokedynamic #399,  0            // InvokeDynamic #15:apply:(Lscala/Function1;)Lscala/Function1;
      15: invokeinterface #234,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokespecial #69                 // Method "<init>":(Ljava/lang/Object;)V
      23: areturn

  public <X> F cata(scala.Function1<A, X>, scala.Function0<X>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: aload_2
       2: invokedynamic #410,  0            // InvokeDynamic #16:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function1;
       7: astore        4
       9: aload_3
      10: aload_0
      11: invokevirtual #229                // Method run:()Ljava/lang/Object;
      14: aload         4
      16: invokeinterface #234,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: areturn

  public F getOrElse(scala.Function0<A>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: invokedynamic #422,  0            // InvokeDynamic #17:apply:(Lscala/Function0;)Lscala/Function1;
       6: astore_3
       7: aload_2
       8: aload_0
       9: invokevirtual #229                // Method run:()Ljava/lang/Object;
      12: aload_3
      13: invokeinterface #234,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      18: areturn

  public F $bar(scala.Function0<A>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: invokedynamic #422,  0            // InvokeDynamic #17:apply:(Lscala/Function0;)Lscala/Function1;
       6: astore_3
       7: aload_2
       8: aload_0
       9: invokevirtual #229                // Method run:()Ljava/lang/Object;
      12: aload_3
      13: invokeinterface #234,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      18: areturn

  public F getOrElseF(scala.Function0<F>, scalaz.Monad<F>);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #229                // Method run:()Ljava/lang/Object;
       5: aload_2
       6: aload_1
       7: invokedynamic #435,  0            // InvokeDynamic #18:apply:(Lscalaz/Monad;Lscala/Function0;)Lscala/Function1;
      12: invokeinterface #254,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      17: areturn

  public F orZero(scalaz.Functor<F>, scalaz.Monoid<A>);
    Code:
       0: aload_2
       1: invokedynamic #447,  0            // InvokeDynamic #19:apply:(Lscalaz/Monoid;)Lscala/Function0;
       6: invokedynamic #422,  0            // InvokeDynamic #17:apply:(Lscala/Function0;)Lscala/Function1;
      11: astore_3
      12: aload_1
      13: aload_0
      14: invokevirtual #229                // Method run:()Ljava/lang/Object;
      17: aload_3
      18: invokeinterface #234,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      23: areturn

  public F unary_$tilde(scalaz.Functor<F>, scalaz.Monoid<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #451                // Method orZero:(Lscalaz/Functor;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public F exists(scala.Function1<A, java.lang.Object>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: invokedynamic #460,  0            // InvokeDynamic #20:apply:(Lscala/Function1;)Lscala/Function1;
       6: astore_3
       7: aload_2
       8: aload_0
       9: invokevirtual #229                // Method run:()Ljava/lang/Object;
      12: aload_3
      13: invokeinterface #234,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      18: areturn

  public F forall(scala.Function1<A, java.lang.Object>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: invokedynamic #466,  0            // InvokeDynamic #21:apply:(Lscala/Function1;)Lscala/Function1;
       6: astore_3
       7: aload_2
       8: aload_0
       9: invokevirtual #229                // Method run:()Ljava/lang/Object;
      12: aload_3
      13: invokeinterface #234,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      18: areturn

  public scalaz.MaybeT<F, A> orElse(scala.Function0<scalaz.MaybeT<F, A>>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #229                // Method run:()Ljava/lang/Object;
       9: aload_2
      10: aload_1
      11: invokedynamic #474,  0            // InvokeDynamic #22:apply:(Lscalaz/Monad;Lscala/Function0;)Lscala/Function1;
      16: invokeinterface #254,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokespecial #69                 // Method "<init>":(Ljava/lang/Object;)V
      24: areturn

  public scalaz.MaybeT<F, A> $bar$bar$bar(scala.Function0<scalaz.MaybeT<F, A>>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #229                // Method run:()Ljava/lang/Object;
       9: aload_2
      10: aload_1
      11: invokedynamic #474,  0            // InvokeDynamic #22:apply:(Lscalaz/Monad;Lscala/Function0;)Lscala/Function1;
      16: invokeinterface #254,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokespecial #69                 // Method "<init>":(Ljava/lang/Object;)V
      24: areturn

  public <E> scalaz.EitherT<E, F, A> toRight(scala.Function0<E>, scalaz.Functor<F>);
    Code:
       0: new           #481                // class scalaz/EitherT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #229                // Method run:()Ljava/lang/Object;
       9: aload_1
      10: invokedynamic #489,  0            // InvokeDynamic #23:apply:(Lscala/Function0;)Lscala/Function1;
      15: invokeinterface #234,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokespecial #490                // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      23: areturn

  public <B> scalaz.EitherT<A, F, B> toLeft(scala.Function0<B>, scalaz.Functor<F>);
    Code:
       0: new           #481                // class scalaz/EitherT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #229                // Method run:()Ljava/lang/Object;
       9: aload_1
      10: invokedynamic #498,  0            // InvokeDynamic #24:apply:(Lscala/Function0;)Lscala/Function1;
      15: invokeinterface #234,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokespecial #490                // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      23: areturn

  private <B> F mapO(scala.Function1<scalaz.Maybe<A>, B>, scalaz.Functor<F>);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #229                // Method run:()Ljava/lang/Object;
       5: aload_1
       6: invokeinterface #234,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public <F, A> scalaz.MaybeT<F, A> copy(F);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_1
       5: invokespecial #69                 // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  public <F, A> F copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #229                // Method run:()Ljava/lang/Object;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #507                // String MaybeT
       3: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 0
                     0: 20
               default: 25
          }
      20: aload_0
      21: invokevirtual #229                // Method run:()Ljava/lang/Object;
      24: areturn
      25: iload_1
      26: invokestatic  #517                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      29: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #525                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #528                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/MaybeT
       4: ireturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 0
                     0: 20
               default: 24
          }
      20: ldc_w         #533                // String run
      23: areturn
      24: iload_1
      25: invokestatic  #517                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      28: checkcast     #535                // class java/lang/String
      31: areturn

  public int hashCode();
    Code:
       0: getstatic     #525                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #540                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #525                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #545                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     39
       5: aload_1
       6: instanceof    #2                  // class scalaz/MaybeT
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ifeq          41
      20: aload_1
      21: checkcast     #2                  // class scalaz/MaybeT
      24: astore_2
      25: aload_0
      26: invokevirtual #229                // Method run:()Ljava/lang/Object;
      29: aload_2
      30: invokevirtual #229                // Method run:()Ljava/lang/Object;
      33: invokestatic  #551                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: iconst_0
      42: ireturn

  public static final scalaz.Maybe $anonfun$map$1(scala.Function1, scalaz.Maybe);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #555                // Method scalaz/Maybe.map:(Lscala/Function1;)Lscalaz/Maybe;
       5: areturn

  public static final scalaz.Maybe $anonfun$mapF$2();
    Code:
       0: getstatic     #562                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #564                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
       6: areturn

  public static final scalaz.Maybe $anonfun$mapF$3(java.lang.Object);
    Code:
       0: getstatic     #562                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #568                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
       7: areturn

  public static final java.lang.Object $anonfun$mapF$1(scalaz.Monad, scala.Function1, scalaz.Maybe);
    Code:
       0: aload_2
       1: instanceof    #20                 // class scalaz/Maybe$Empty
       4: ifeq          19
       7: aload_0
       8: invokedynamic #577,  0            // InvokeDynamic #25:apply:()Lscala/Function0;
      13: invokeinterface #578,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      18: areturn
      19: aload_2
      20: instanceof    #25                 // class scalaz/Maybe$Just
      23: ifeq          53
      26: aload_2
      27: checkcast     #25                 // class scalaz/Maybe$Just
      30: invokevirtual #581                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      33: astore_3
      34: aload_0
      35: aload_1
      36: aload_3
      37: invokeinterface #261,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      42: invokedynamic #586,  0            // InvokeDynamic #26:apply:()Lscala/Function1;
      47: invokeinterface #587,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      52: areturn
      53: new           #589                // class scala/MatchError
      56: dup
      57: aload_2
      58: invokespecial #590                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      61: athrow

  public static final java.lang.Object $anonfun$flatMap$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #261,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #2                  // class scalaz/MaybeT
      10: invokevirtual #229                // Method run:()Ljava/lang/Object;
      13: areturn

  public static final scalaz.Maybe $anonfun$flatMap$4();
    Code:
       0: getstatic     #562                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #564                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
       6: areturn

  public static final java.lang.Object $anonfun$flatMap$3(scalaz.Monad);
    Code:
       0: aload_0
       1: invokedynamic #602,  0            // InvokeDynamic #27:apply:()Lscala/Function0;
       6: invokeinterface #578,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public static final java.lang.Object $anonfun$flatMap$1(scala.Function1, scalaz.Monad, scalaz.Maybe);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_2
       7: instanceof    #25                 // class scalaz/Maybe$Just
      10: ifeq          35
      13: aload_2
      14: checkcast     #25                 // class scalaz/Maybe$Just
      17: invokevirtual #581                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: astore_3
      21: aload_0
      22: aload_3
      23: invokeinterface #261,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #2                  // class scalaz/MaybeT
      31: invokevirtual #229                // Method run:()Ljava/lang/Object;
      34: areturn
      35: aload_2
      36: instanceof    #20                 // class scalaz/Maybe$Empty
      39: ifeq          47
      42: aload_1
      43: invokestatic  #605                // Method $anonfun$flatMap$3:(Lscalaz/Monad;)Ljava/lang/Object;
      46: areturn
      47: new           #589                // class scala/MatchError
      50: dup
      51: aload_2
      52: invokespecial #590                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      55: athrow

  public static final scalaz.Maybe $anonfun$flatMapF$2();
    Code:
       0: getstatic     #562                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #564                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
       6: areturn

  public static final java.lang.Object $anonfun$flatMapF$1(scalaz.Monad, scala.Function1, scalaz.Maybe);
    Code:
       0: aload_2
       1: instanceof    #20                 // class scalaz/Maybe$Empty
       4: ifeq          19
       7: aload_0
       8: invokedynamic #613,  0            // InvokeDynamic #28:apply:()Lscala/Function0;
      13: invokeinterface #578,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      18: areturn
      19: aload_2
      20: instanceof    #25                 // class scalaz/Maybe$Just
      23: ifeq          42
      26: aload_2
      27: checkcast     #25                 // class scalaz/Maybe$Just
      30: invokevirtual #581                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      33: astore_3
      34: aload_1
      35: aload_3
      36: invokeinterface #261,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      41: areturn
      42: new           #589                // class scala/MatchError
      45: dup
      46: aload_2
      47: invokespecial #590                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      50: athrow

  public static final java.lang.Object $anonfun$foldRight$1(scala.Function2, scalaz.Maybe, scala.Function0);
    Code:
       0: getstatic     #619                // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: pop
       4: getstatic     #562                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       7: invokevirtual #623                // Method scalaz/Maybe$.maybeInstance:()Lscalaz/Traverse;
      10: aload_1
      11: aload_2
      12: aload_0
      13: invokeinterface #298,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      18: areturn

  public static final java.lang.Object $anonfun$traverse$1(scala.Function1, scalaz.Applicative, scalaz.Maybe);
    Code:
       0: getstatic     #631                // Field scalaz/Traverse$.MODULE$:Lscalaz/Traverse$;
       3: pop
       4: getstatic     #562                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       7: invokevirtual #623                // Method scalaz/Maybe$.maybeInstance:()Lscalaz/Traverse;
      10: aload_2
      11: aload_0
      12: aload_1
      13: invokeinterface #316,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      18: areturn

  public static final scalaz.MaybeT $anonfun$traverse$2(java.lang.Object);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_0
       5: invokespecial #69                 // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  public static final scalaz.Maybe $anonfun$ap$3(scala.Function1, scalaz.Maybe);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #555                // Method scalaz/Maybe.map:(Lscala/Function1;)Lscalaz/Maybe;
       5: areturn

  public static final java.lang.Object $anonfun$ap$2(scalaz.MaybeT, scalaz.Monad, scala.Function1);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #229                // Method run:()Ljava/lang/Object;
       5: aload_2
       6: invokedynamic #643,  0            // InvokeDynamic #29:apply:(Lscala/Function1;)Lscala/Function1;
      11: invokeinterface #587,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      16: areturn

  public static final scalaz.Maybe $anonfun$ap$5();
    Code:
       0: getstatic     #562                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #564                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
       6: areturn

  public static final java.lang.Object $anonfun$ap$4(scalaz.Monad);
    Code:
       0: aload_0
       1: invokedynamic #649,  0            // InvokeDynamic #30:apply:()Lscala/Function0;
       6: invokeinterface #578,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public static final java.lang.Object $anonfun$ap$1(scalaz.MaybeT, scalaz.Monad, scalaz.Maybe);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_2
       7: instanceof    #25                 // class scalaz/Maybe$Just
      10: ifeq          41
      13: aload_2
      14: checkcast     #25                 // class scalaz/Maybe$Just
      17: invokevirtual #581                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: checkcast     #259                // class scala/Function1
      23: astore_3
      24: aload_1
      25: aload_0
      26: invokevirtual #229                // Method run:()Ljava/lang/Object;
      29: aload_3
      30: invokedynamic #643,  0            // InvokeDynamic #29:apply:(Lscala/Function1;)Lscala/Function1;
      35: invokeinterface #587,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      40: areturn
      41: aload_2
      42: instanceof    #20                 // class scalaz/Maybe$Empty
      45: ifeq          53
      48: aload_1
      49: invokestatic  #652                // Method $anonfun$ap$4:(Lscalaz/Monad;)Ljava/lang/Object;
      52: areturn
      53: new           #589                // class scala/MatchError
      56: dup
      57: aload_2
      58: invokespecial #590                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      61: athrow

  public static final java.lang.Object $anonfun$app$1(scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #332,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2                  // class scalaz/MaybeT
       9: invokevirtual #229                // Method run:()Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$app$2(scalaz.MaybeT);
    Code:
       0: aload_0
       1: invokevirtual #229                // Method run:()Ljava/lang/Object;
       4: areturn

  public static final scalaz.Maybe $anonfun$app$4(scalaz.Maybe);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.Maybe $anonfun$app$5(scalaz.Maybe);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.Maybe $anonfun$app$3(scalaz.Maybe, scalaz.Maybe);
    Code:
       0: getstatic     #562                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #623                // Method scalaz/Maybe$.maybeInstance:()Lscalaz/Traverse;
       6: checkcast     #660                // class scalaz/Bind
       9: aload_1
      10: invokedynamic #666,  0            // InvokeDynamic #31:apply:(Lscalaz/Maybe;)Lscala/Function0;
      15: aload_0
      16: invokedynamic #670,  0            // InvokeDynamic #32:apply:(Lscalaz/Maybe;)Lscala/Function0;
      21: invokeinterface #673,  3          // InterfaceMethod scalaz/Bind.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      26: checkcast     #22                 // class scalaz/Maybe
      29: areturn

  public static final boolean $anonfun$isJust$1(scalaz.Maybe);
    Code:
       0: aload_0
       1: invokevirtual #679                // Method scalaz/Maybe.isJust:()Z
       4: ireturn

  public static final boolean $anonfun$isDefined$1(scalaz.Maybe);
    Code:
       0: aload_0
       1: invokevirtual #679                // Method scalaz/Maybe.isJust:()Z
       4: ireturn

  public static final boolean $anonfun$isEmpty$1(scalaz.Maybe);
    Code:
       0: aload_0
       1: invokevirtual #685                // Method scalaz/Maybe.isEmpty:()Z
       4: ireturn

  public static final scalaz.Maybe $anonfun$filter$1(scala.Function1, scalaz.Maybe);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #689                // Method scalaz/Maybe.filter:(Lscala/Function1;)Lscalaz/Maybe;
       5: areturn

  public static final java.lang.Object $anonfun$cata$1(scala.Function1, scala.Function0, scalaz.Maybe);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokevirtual #695                // Method scalaz/Maybe.cata:(Lscala/Function1;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public static final java.lang.Object $anonfun$getOrElse$1(scala.Function0, scalaz.Maybe);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #699                // Method scalaz/Maybe.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public static final java.lang.Object $anonfun$getOrElseF$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$getOrElseF$2(scalaz.Monad, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #711,  0            // InvokeDynamic #33:apply:(Ljava/lang/Object;)Lscala/Function0;
       7: invokeinterface #578,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$getOrElseF$1(scalaz.Monad, scala.Function0, scalaz.Maybe);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_2
       7: instanceof    #25                 // class scalaz/Maybe$Just
      10: ifeq          27
      13: aload_2
      14: checkcast     #25                 // class scalaz/Maybe$Just
      17: invokevirtual #581                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: astore_3
      21: aload_0
      22: aload_3
      23: invokestatic  #715                // Method $anonfun$getOrElseF$2:(Lscalaz/Monad;Ljava/lang/Object;)Ljava/lang/Object;
      26: areturn
      27: aload_2
      28: instanceof    #20                 // class scalaz/Maybe$Empty
      31: ifeq          41
      34: aload_1
      35: invokeinterface #332,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      40: areturn
      41: new           #589                // class scala/MatchError
      44: dup
      45: aload_2
      46: invokespecial #590                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      49: athrow

  public static final java.lang.Object $anonfun$orZero$1(scalaz.Monoid);
    Code:
       0: aload_0
       1: invokeinterface #721,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
       6: areturn

  public static final boolean $anonfun$exists$1(scala.Function1, scalaz.Maybe);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #728                // Method scalaz/Maybe.exists:(Lscala/Function1;)Z
       5: ireturn

  public static final boolean $anonfun$forall$1(scala.Function1, scalaz.Maybe);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #733                // Method scalaz/Maybe.forall:(Lscala/Function1;)Z
       5: ireturn

  public static final scalaz.Maybe $anonfun$orElse$3(java.lang.Object);
    Code:
       0: getstatic     #562                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #568                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
       7: areturn

  public static final java.lang.Object $anonfun$orElse$2(scalaz.Monad, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #741,  0            // InvokeDynamic #34:apply:(Ljava/lang/Object;)Lscala/Function0;
       7: invokeinterface #578,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$orElse$4(scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #332,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2                  // class scalaz/MaybeT
       9: invokevirtual #229                // Method run:()Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$orElse$1(scalaz.Monad, scala.Function0, scalaz.Maybe);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_2
       7: instanceof    #25                 // class scalaz/Maybe$Just
      10: ifeq          27
      13: aload_2
      14: checkcast     #25                 // class scalaz/Maybe$Just
      17: invokevirtual #581                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: astore_3
      21: aload_0
      22: aload_3
      23: invokestatic  #746                // Method $anonfun$orElse$2:(Lscalaz/Monad;Ljava/lang/Object;)Ljava/lang/Object;
      26: areturn
      27: aload_2
      28: instanceof    #20                 // class scalaz/Maybe$Empty
      31: ifeq          47
      34: aload_1
      35: invokeinterface #332,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      40: checkcast     #2                  // class scalaz/MaybeT
      43: invokevirtual #229                // Method run:()Ljava/lang/Object;
      46: areturn
      47: new           #589                // class scala/MatchError
      50: dup
      51: aload_2
      52: invokespecial #590                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      55: athrow

  public static final scalaz.$bslash$div $anonfun$toRight$1(scala.Function0, scalaz.Maybe);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #751                // Method scalaz/Maybe.toRight:(Lscala/Function0;)Lscalaz/$bslash$div;
       5: areturn

  public static final scalaz.$bslash$div $anonfun$toLeft$1(scala.Function0, scalaz.Maybe);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #755                // Method scalaz/Maybe.toLeft:(Lscala/Function0;)Lscalaz/$bslash$div;
       5: areturn

  public scalaz.MaybeT(F);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #210                // Field run:Ljava/lang/Object;
       5: aload_0
       6: invokespecial #757                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #761                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      13: return

  public static final java.lang.Object $anonfun$isJust$1$adapted(scalaz.Maybe);
    Code:
       0: aload_0
       1: invokestatic  #763                // Method $anonfun$isJust$1:(Lscalaz/Maybe;)Z
       4: invokestatic  #767                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$isDefined$1$adapted(scalaz.Maybe);
    Code:
       0: aload_0
       1: invokestatic  #769                // Method $anonfun$isDefined$1:(Lscalaz/Maybe;)Z
       4: invokestatic  #767                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$isEmpty$1$adapted(scalaz.Maybe);
    Code:
       0: aload_0
       1: invokestatic  #771                // Method $anonfun$isEmpty$1:(Lscalaz/Maybe;)Z
       4: invokestatic  #767                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$exists$1$adapted(scala.Function1, scalaz.Maybe);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #773                // Method $anonfun$exists$1:(Lscala/Function1;Lscalaz/Maybe;)Z
       5: invokestatic  #767                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: areturn

  public static final java.lang.Object $anonfun$forall$1$adapted(scala.Function1, scalaz.Maybe);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #775                // Method $anonfun$forall$1:(Lscala/Function1;Lscalaz/Maybe;)Z
       5: invokestatic  #767                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #787,  0            // InvokeDynamic #35:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
