Compiled from "OneAnd.scala"
public abstract class scalaz.OneAndInstances0 extends scalaz.OneAndInstances1 {
  public <F> scalaz.Foldable1<?> oneAndFoldable1(scalaz.Foldable1<F>);
    Code:
       0: new           #14                 // class scalaz/OneAndInstances0$$anon$9
       3: dup
       4: aconst_null
       5: aload_1
       6: invokespecial #22                 // Method scalaz/OneAndInstances0$$anon$9."<init>":(Lscalaz/OneAndInstances0;Lscalaz/Foldable1;)V
       9: areturn

  public <F, A> scalaz.Equal<scalaz.OneAnd<F, A>> oneAndEqual(scalaz.Equal<A>, scalaz.Equal<F>);
    Code:
       0: new           #10                 // class scalaz/OneAndInstances0$$anon$10
       3: dup
       4: aconst_null
       5: aload_1
       6: aload_2
       7: invokespecial #33                 // Method scalaz/OneAndInstances0$$anon$10."<init>":(Lscalaz/OneAndInstances0;Lscalaz/Equal;Lscalaz/Equal;)V
      10: areturn

  public <F> scalaz.Traverse1<?> oneAndTraverse(scalaz.Traverse<F>);
    Code:
       0: new           #12                 // class scalaz/OneAndInstances0$$anon$11
       3: dup
       4: aconst_null
       5: aload_1
       6: invokespecial #41                 // Method scalaz/OneAndInstances0$$anon$11."<init>":(Lscalaz/OneAndInstances0;Lscalaz/Traverse;)V
       9: areturn

  public scalaz.OneAndInstances0();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method scalaz/OneAndInstances1."<init>":()V
       4: return
}
