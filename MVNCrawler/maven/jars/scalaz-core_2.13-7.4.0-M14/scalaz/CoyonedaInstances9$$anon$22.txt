Compiled from "Coyoneda.scala"
public final class scalaz.CoyonedaInstances9$$anon$22 implements scalaz.IsomorphismContravariant<?, F> {
  private scalaz.syntax.ContravariantSyntax<?> contravariantSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  private final scalaz.Contravariant evidence$19$1;

  private final scalaz.Functor evidence$20$1;

  public java.lang.Object contramap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #51                 // InterfaceMethod scalaz/IsomorphismContravariant.contramap$:(Lscalaz/IsomorphismContravariant;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #65                 // InterfaceMethod scalaz/IsomorphismInvariantFunctor.xmap$:(Lscalaz/IsomorphismInvariantFunctor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object narrow(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #73                 // InterfaceMethod scalaz/Contravariant.narrow$:(Lscalaz/Contravariant;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // InterfaceMethod scalaz/Contravariant.compose$:(Lscalaz/Contravariant;Lscalaz/Contravariant;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #88                 // InterfaceMethod scalaz/Contravariant.icompose$:(Lscalaz/Contravariant;Lscalaz/Functor;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Contravariant<?> product(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #95                 // InterfaceMethod scalaz/Contravariant.product$:(Lscalaz/Contravariant;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public scalaz.Contravariant<?>.ContravariantLaw contravariantLaw();
    Code:
       0: aload_0
       1: invokestatic  #102                // InterfaceMethod scalaz/Contravariant.contravariantLaw$:(Lscalaz/Contravariant;)Lscalaz/Contravariant$ContravariantLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #109                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #117                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #125                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.ContravariantSyntax<?> contravariantSyntax();
    Code:
       0: aload_0
       1: getfield      #129                // Field contravariantSyntax:Lscalaz/syntax/ContravariantSyntax;
       4: areturn

  public void scalaz$Contravariant$_setter_$contravariantSyntax_$eq(scalaz.syntax.ContravariantSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #129                // Field contravariantSyntax:Lscalaz/syntax/ContravariantSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #137                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #137                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public scalaz.Contravariant<F> G();
    Code:
       0: getstatic     #149                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #151                // Field evidence$19$1:Lscalaz/Contravariant;
       7: invokevirtual #155                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #17                 // class scalaz/Contravariant
      13: areturn

  public scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, ?, F> iso();
    Code:
       0: getstatic     #162                // Field scalaz/Coyoneda$.MODULE$:Lscalaz/Coyoneda$;
       3: pop
       4: aload_0
       5: getfield      #164                // Field evidence$20$1:Lscalaz/Functor;
       8: astore_1
       9: new           #20                 // class scalaz/Coyoneda$$anon$4
      12: dup
      13: aload_1
      14: invokespecial #168                // Method scalaz/Coyoneda$$anon$4."<init>":(Lscalaz/Functor;)V
      17: areturn

  public scalaz.InvariantFunctor G();
    Code:
       0: aload_0
       1: invokevirtual #172                // Method G:()Lscalaz/Contravariant;
       4: areturn

  public scalaz.CoyonedaInstances9$$anon$22(scalaz.CoyonedaInstances9, scalaz.Contravariant, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #151                // Field evidence$19$1:Lscalaz/Contravariant;
       5: aload_0
       6: aload_3
       7: putfield      #164                // Field evidence$20$1:Lscalaz/Functor;
      10: aload_0
      11: invokespecial #177                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #181                // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      18: aload_0
      19: invokestatic  #184                // InterfaceMethod scalaz/Contravariant.$init$:(Lscalaz/Contravariant;)V
      22: invokestatic  #189                // Method scala/runtime/Statics.releaseFence:()V
      25: return
}
