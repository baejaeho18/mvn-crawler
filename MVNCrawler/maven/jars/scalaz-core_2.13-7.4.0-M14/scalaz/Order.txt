Compiled from "Order.scala"
public interface scalaz.Order<F> extends scalaz.Equal<F> {
  public static <A> scalaz.Monoid<scalaz.Order<A>> orderMonoid();
    Code:
       0: getstatic     #58                 // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: pop
       4: new           #28                 // class scalaz/Order$$anon$6
       7: dup
       8: invokespecial #62                 // Method scalaz/Order$$anon$6."<init>":()V
      11: areturn

  public static <A, B> scalaz.Order<A> orderBy(scala.Function1<A, B>, scalaz.Order<B>);
    Code:
       0: getstatic     #58                 // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: pop
       4: aload_1
       5: aload_0
       6: invokeinterface #71,  2           // InterfaceMethod contramap:(Lscala/Function1;)Lscalaz/Order;
      11: areturn

  public static <A> scalaz.Order<A> fromScalaOrdering(scala.math.Ordering<A>);
    Code:
       0: getstatic     #58                 // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: pop
       4: new           #30                 // class scalaz/Order$$anonfun$fromScalaOrdering$2
       7: dup
       8: aload_0
       9: invokespecial #80                 // Method scalaz/Order$$anonfun$fromScalaOrdering$2."<init>":(Lscala/math/Ordering;)V
      12: areturn

  public static scalaz.Decidable<scalaz.Order> orderInstance();
    Code:
       0: getstatic     #58                 // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: invokevirtual #86                 // Method scalaz/Order$.orderInstance:()Lscalaz/Decidable;
       6: areturn

  public static <F, G> scalaz.Order<F> fromIso(scalaz.Isomorphisms$Iso<scala.Function1, F, G>, scalaz.Order<G>);
    Code:
       0: getstatic     #58                 // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: pop
       4: new           #26                 // class scalaz/Order$$anon$5
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #94                 // Method scalaz/Order$$anon$5."<init>":(Lscalaz/Order;Lscalaz/Isomorphisms$Iso;)V
      13: areturn

  public abstract void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<F>);

  public static scalaz.Ordering apply$(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #108                // InterfaceMethod apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public default scalaz.Ordering apply(F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #113,  3          // InterfaceMethod order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       8: areturn

  public abstract scalaz.Ordering order(F, F);

  public static boolean equal$(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #120                // InterfaceMethod equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public default boolean equal(F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #113,  3          // InterfaceMethod order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       8: getstatic     #124                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      11: astore_3
      12: dup
      13: ifnonnull     20
      16: pop
      17: goto          29
      20: aload_3
      21: invokevirtual #128                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      24: ifeq          29
      27: iconst_1
      28: ireturn
      29: iconst_0
      30: ireturn

  public static boolean lessThan$(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #132                // InterfaceMethod lessThan:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public default boolean lessThan(F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #113,  3          // InterfaceMethod order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       8: getstatic     #135                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      11: astore_3
      12: dup
      13: ifnonnull     20
      16: pop
      17: goto          29
      20: aload_3
      21: invokevirtual #128                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      24: ifeq          29
      27: iconst_1
      28: ireturn
      29: iconst_0
      30: ireturn

  public static boolean lessThanOrEqual$(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #139                // InterfaceMethod lessThanOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public default boolean lessThanOrEqual(F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #113,  3          // InterfaceMethod order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       8: getstatic     #142                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
      11: astore_3
      12: dup
      13: ifnonnull     20
      16: pop
      17: goto          27
      20: aload_3
      21: invokevirtual #128                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      24: ifne          29
      27: iconst_1
      28: ireturn
      29: iconst_0
      30: ireturn

  public static boolean greaterThan$(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #146                // InterfaceMethod greaterThan:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public default boolean greaterThan(F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #113,  3          // InterfaceMethod order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       8: getstatic     #142                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
      11: astore_3
      12: dup
      13: ifnonnull     20
      16: pop
      17: goto          29
      20: aload_3
      21: invokevirtual #128                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      24: ifeq          29
      27: iconst_1
      28: ireturn
      29: iconst_0
      30: ireturn

  public static boolean greaterThanOrEqual$(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #150                // InterfaceMethod greaterThanOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public default boolean greaterThanOrEqual(F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #113,  3          // InterfaceMethod order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       8: getstatic     #135                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      11: astore_3
      12: dup
      13: ifnonnull     20
      16: pop
      17: goto          27
      20: aload_3
      21: invokevirtual #128                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      24: ifne          29
      27: iconst_1
      28: ireturn
      29: iconst_0
      30: ireturn

  public static java.lang.Object max$(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #156                // InterfaceMethod max:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public default F max(F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #150,  3          // InterfaceMethod greaterThanOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ifeq          13
      11: aload_1
      12: areturn
      13: aload_2
      14: areturn

  public static java.lang.Object min$(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #161                // InterfaceMethod min:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public default F min(F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #132,  3          // InterfaceMethod lessThan:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ifeq          13
      11: aload_1
      12: areturn
      13: aload_2
      14: areturn

  public static scala.Tuple2 sort$(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #167                // InterfaceMethod sort:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public default scala.Tuple2<F, F> sort(F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #139,  3          // InterfaceMethod lessThanOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ifeq          21
      11: new           #170                // class scala/Tuple2
      14: dup
      15: aload_1
      16: aload_2
      17: invokespecial #173                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      20: areturn
      21: new           #170                // class scala/Tuple2
      24: dup
      25: aload_2
      26: aload_1
      27: invokespecial #173                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      30: areturn

  public static scalaz.Order contramap$(scalaz.Order, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #71                 // InterfaceMethod contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public default <B> scalaz.Order<B> contramap(scala.Function1<B, F>);
    Code:
       0: new           #18                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #179                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public static scala.math.Ordering toScalaOrdering$(scalaz.Order);
    Code:
       0: aload_0
       1: invokespecial #185                // InterfaceMethod toScalaOrdering:()Lscala/math/Ordering;
       4: areturn

  public default scala.math.Ordering<F> toScalaOrdering();
    Code:
       0: new           #32                 // class scalaz/Order$$anonfun$toScalaOrdering$2
       3: dup
       4: aload_0
       5: invokespecial #189                // Method scalaz/Order$$anonfun$toScalaOrdering$2."<init>":(Lscalaz/Order;)V
       8: areturn

  public static scalaz.Order reverseOrder$(scalaz.Order);
    Code:
       0: aload_0
       1: invokespecial #195                // InterfaceMethod reverseOrder:()Lscalaz/Order;
       4: areturn

  public default scalaz.Order<F> reverseOrder();
    Code:
       0: new           #20                 // class scalaz/Order$$anon$2
       3: dup
       4: aload_0
       5: invokespecial #197                // Method scalaz/Order$$anon$2."<init>":(Lscalaz/Order;)V
       8: areturn

  public static scalaz.Order$OrderLaw orderLaw$(scalaz.Order);
    Code:
       0: aload_0
       1: invokespecial #203                // InterfaceMethod orderLaw:()Lscalaz/Order$OrderLaw;
       4: areturn

  public default scalaz.Order<F>.OrderLaw orderLaw();
    Code:
       0: new           #22                 // class scalaz/Order$$anon$3
       3: dup
       4: aload_0
       5: invokespecial #205                // Method scalaz/Order$$anon$3."<init>":(Lscalaz/Order;)V
       8: areturn

  public abstract scalaz.syntax.OrderSyntax<F> orderSyntax();

  public static int scalaz$Order$$$anonfun$toScalaOrdering$1$(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #214                // InterfaceMethod scalaz$Order$$$anonfun$toScalaOrdering$1:(Ljava/lang/Object;Ljava/lang/Object;)I
       6: ireturn

  public default int scalaz$Order$$$anonfun$toScalaOrdering$1(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #113,  3          // InterfaceMethod order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       8: invokevirtual #218                // Method scalaz/Ordering.toInt:()I
      11: ireturn

  public static void $init$(scalaz.Order);
    Code:
       0: aload_0
       1: new           #24                 // class scalaz/Order$$anon$4
       4: dup
       5: aload_0
       6: invokespecial #220                // Method scalaz/Order$$anon$4."<init>":(Lscalaz/Order;)V
       9: invokeinterface #222,  2          // InterfaceMethod scalaz$Order$_setter_$orderSyntax_$eq:(Lscalaz/syntax/OrderSyntax;)V
      14: return
}
