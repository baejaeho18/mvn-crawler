Compiled from "LazyTuple.scala"
public final class scalaz.LazyTuple4Instances$$anon$26 implements scalaz.LazyTuple4Order<A1, A2, A3, A4> {
  private scalaz.syntax.OrderSyntax<scalaz.LazyTuple4<A1, A2, A3, A4>> orderSyntax;

  private scalaz.syntax.EqualSyntax<scalaz.LazyTuple4<A1, A2, A3, A4>> equalSyntax;

  private final scalaz.Order A1$15;

  private final scalaz.Order A2$14;

  private final scalaz.Order A3$9;

  private final scalaz.Order A4$4;

  public scalaz.Ordering order(scalaz.LazyTuple4<A1, A2, A3, A4>, scalaz.LazyTuple4<A1, A2, A3, A4>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #43                 // InterfaceMethod scalaz/LazyTuple4Order.order$:(Lscalaz/LazyTuple4Order;Lscalaz/LazyTuple4;Lscalaz/LazyTuple4;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(scalaz.LazyTuple4<A1, A2, A3, A4>, scalaz.LazyTuple4<A1, A2, A3, A4>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #55                 // InterfaceMethod scalaz/LazyTuple4Equal.equal$:(Lscalaz/LazyTuple4Equal;Lscalaz/LazyTuple4;Lscalaz/LazyTuple4;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #63                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #70                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #74                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #78                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #82                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #88                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #92                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #98                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scalaz.LazyTuple4<A1, A2, A3, A4>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #106                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scalaz.LazyTuple4<A1, A2, A3, A4>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #114                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scalaz.LazyTuple4<A1, A2, A3, A4>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #121                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scalaz.LazyTuple4<A1, A2, A3, A4>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #128                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #134                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.LazyTuple4<A1, A2, A3, A4>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #141                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<scalaz.LazyTuple4<A1, A2, A3, A4>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #145                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scalaz.LazyTuple4<A1, A2, A3, A4>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #145                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scalaz.LazyTuple4<A1, A2, A3, A4>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #153                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.LazyTuple4<A1, A2, A3, A4>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<A1> _1();
    Code:
       0: aload_0
       1: getfield      #160                // Field A1$15:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A2> _2();
    Code:
       0: aload_0
       1: getfield      #164                // Field A2$14:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A3> _3();
    Code:
       0: aload_0
       1: getfield      #168                // Field A3$9:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A4> _4();
    Code:
       0: aload_0
       1: getfield      #172                // Field A4$4:Lscalaz/Order;
       4: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #175                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #177                // class scalaz/LazyTuple4
       5: aload_2
       6: checkcast     #177                // class scalaz/LazyTuple4
       9: invokevirtual #179                // Method equal:(Lscalaz/LazyTuple4;Lscalaz/LazyTuple4;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #177                // class scalaz/LazyTuple4
       5: aload_2
       6: checkcast     #177                // class scalaz/LazyTuple4
       9: invokevirtual #181                // Method order:(Lscalaz/LazyTuple4;Lscalaz/LazyTuple4;)Lscalaz/Ordering;
      12: areturn

  public scalaz.Equal _4();
    Code:
       0: aload_0
       1: invokevirtual #184                // Method _4:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _3();
    Code:
       0: aload_0
       1: invokevirtual #186                // Method _3:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _2();
    Code:
       0: aload_0
       1: invokevirtual #188                // Method _2:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _1();
    Code:
       0: aload_0
       1: invokevirtual #190                // Method _1:()Lscalaz/Order;
       4: areturn

  public scalaz.LazyTuple4Instances$$anon$26(scalaz.LazyTuple4Instances, scalaz.Order, scalaz.Order, scalaz.Order, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #160                // Field A1$15:Lscalaz/Order;
       5: aload_0
       6: aload_3
       7: putfield      #164                // Field A2$14:Lscalaz/Order;
      10: aload_0
      11: aload         4
      13: putfield      #168                // Field A3$9:Lscalaz/Order;
      16: aload_0
      17: aload         5
      19: putfield      #172                // Field A4$4:Lscalaz/Order;
      22: aload_0
      23: invokespecial #196                // Method java/lang/Object."<init>":()V
      26: aload_0
      27: invokestatic  #200                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      30: aload_0
      31: invokestatic  #203                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      34: invokestatic  #208                // Method scala/runtime/Statics.releaseFence:()V
      37: return
}
