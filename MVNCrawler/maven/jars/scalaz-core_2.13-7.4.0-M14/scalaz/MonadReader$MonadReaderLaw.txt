Compiled from "MonadReader.scala"
public interface scalaz.MonadReader$MonadReaderLaw extends scalaz.Monad<F>.MonadLaw {
  public static boolean localPoint$(scalaz.MonadReader$MonadReaderLaw, scala.Function1, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #29                 // InterfaceMethod localPoint:(Lscala/Function1;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public default <A> boolean localPoint(scala.Function1<S, S>, A, scalaz.Equal<F>);
    Code:
       0: aload_3
       1: aload_0
       2: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
       7: aload_1
       8: aload_0
       9: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
      14: aload_2
      15: invokedynamic #57,  0             // InvokeDynamic #0:apply:(Ljava/lang/Object;)Lscala/Function0;
      20: invokeinterface #61,  2           // InterfaceMethod scalaz/MonadReader.point:(Lscala/Function0;)Ljava/lang/Object;
      25: invokeinterface #65,  3           // InterfaceMethod scalaz/MonadReader.local:(Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
      30: aload_0
      31: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
      36: aload_2
      37: invokedynamic #70,  0             // InvokeDynamic #1:apply:(Ljava/lang/Object;)Lscala/Function0;
      42: invokeinterface #61,  2           // InterfaceMethod scalaz/MonadReader.point:(Lscala/Function0;)Ljava/lang/Object;
      47: invokeinterface #76,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      52: ireturn

  public static boolean localComposition$(scalaz.MonadReader$MonadReaderLaw, scala.Function1, scala.Function1, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #85                 // InterfaceMethod localComposition:(Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Lscalaz/Equal;)Z
       9: ireturn

  public default <A> boolean localComposition(scala.Function1<S, S>, scala.Function1<S, S>, F, scalaz.Equal<F>);
    Code:
       0: aload         4
       2: aload_0
       3: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
       8: aload_1
       9: aload_0
      10: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
      15: aload_2
      16: aload_3
      17: invokeinterface #65,  3           // InterfaceMethod scalaz/MonadReader.local:(Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
      22: invokeinterface #65,  3           // InterfaceMethod scalaz/MonadReader.local:(Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
      27: aload_0
      28: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
      33: aload_1
      34: aload_2
      35: invokeinterface #92,  2           // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      40: aload_3
      41: invokeinterface #65,  3           // InterfaceMethod scalaz/MonadReader.local:(Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
      46: invokeinterface #76,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      51: ireturn

  public static boolean localFAsk$(scalaz.MonadReader$MonadReaderLaw, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #99                 // InterfaceMethod localFAsk:(Lscala/Function1;Lscalaz/Equal;)Z
       6: ireturn

  public default boolean localFAsk(scala.Function1<S, S>, scalaz.Equal<F>);
    Code:
       0: aload_2
       1: aload_0
       2: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
       7: aload_1
       8: aload_0
       9: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
      14: invokeinterface #103,  1          // InterfaceMethod scalaz/MonadReader.ask:()Ljava/lang/Object;
      19: invokeinterface #65,  3           // InterfaceMethod scalaz/MonadReader.local:(Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
      24: aload_0
      25: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
      30: aload_0
      31: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
      36: invokeinterface #103,  1          // InterfaceMethod scalaz/MonadReader.ask:()Ljava/lang/Object;
      41: aload_1
      42: invokeinterface #107,  3          // InterfaceMethod scalaz/MonadReader.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      47: invokeinterface #76,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      52: ireturn

  public static boolean askIdempotence$(scalaz.MonadReader$MonadReaderLaw, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #113                // InterfaceMethod askIdempotence:(Lscalaz/Equal;)Z
       5: ireturn

  public default boolean askIdempotence(scalaz.Equal<F>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
       7: invokeinterface #103,  1          // InterfaceMethod scalaz/MonadReader.ask:()Ljava/lang/Object;
      12: aload_0
      13: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
      18: aload_0
      19: invokedynamic #122,  0            // InvokeDynamic #2:apply:(Lscalaz/MonadReader$MonadReaderLaw;)Lscala/Function0;
      24: aload_0
      25: invokedynamic #127,  0            // InvokeDynamic #3:apply:(Lscalaz/MonadReader$MonadReaderLaw;)Lscala/Function0;
      30: invokedynamic #136,  0            // InvokeDynamic #4:apply:()Lscala/Function2;
      35: invokeinterface #140,  4          // InterfaceMethod scalaz/MonadReader.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      40: invokeinterface #76,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      45: ireturn

  public static boolean askFALeft$(scalaz.MonadReader$MonadReaderLaw, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #146                // InterfaceMethod askFALeft:(Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public default <A> boolean askFALeft(F, scalaz.Equal<F>);
    Code:
       0: aload_2
       1: aload_0
       2: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
       7: aload_0
       8: invokedynamic #152,  0            // InvokeDynamic #5:apply:(Lscalaz/MonadReader$MonadReaderLaw;)Lscala/Function0;
      13: aload_1
      14: invokedynamic #157,  0            // InvokeDynamic #6:apply:(Ljava/lang/Object;)Lscala/Function0;
      19: invokedynamic #162,  0            // InvokeDynamic #7:apply:()Lscala/Function2;
      24: invokeinterface #140,  4          // InterfaceMethod scalaz/MonadReader.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      29: aload_1
      30: invokeinterface #76,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      35: ireturn

  public static boolean askFARight$(scalaz.MonadReader$MonadReaderLaw, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #166                // InterfaceMethod askFARight:(Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public default <A> boolean askFARight(F, scalaz.Equal<F>);
    Code:
       0: aload_2
       1: aload_0
       2: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
       7: aload_1
       8: invokedynamic #171,  0            // InvokeDynamic #8:apply:(Ljava/lang/Object;)Lscala/Function0;
      13: aload_0
      14: invokedynamic #176,  0            // InvokeDynamic #9:apply:(Lscalaz/MonadReader$MonadReaderLaw;)Lscala/Function0;
      19: invokedynamic #181,  0            // InvokeDynamic #10:apply:()Lscala/Function2;
      24: invokeinterface #140,  4          // InterfaceMethod scalaz/MonadReader.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      29: aload_1
      30: invokeinterface #76,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      35: ireturn

  public abstract scalaz.MonadReader scalaz$MonadReader$MonadReaderLaw$$$outer();

  public static java.lang.Object $anonfun$localPoint$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$localPoint$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$askIdempotence$1(scalaz.MonadReader$MonadReaderLaw);
    Code:
       0: aload_0
       1: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
       6: invokeinterface #103,  1          // InterfaceMethod scalaz/MonadReader.ask:()Ljava/lang/Object;
      11: areturn

  public static java.lang.Object $anonfun$askIdempotence$2(scalaz.MonadReader$MonadReaderLaw);
    Code:
       0: aload_0
       1: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
       6: invokeinterface #103,  1          // InterfaceMethod scalaz/MonadReader.ask:()Ljava/lang/Object;
      11: areturn

  public static java.lang.Object $anonfun$askIdempotence$3(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  public static java.lang.Object $anonfun$askFALeft$1(scalaz.MonadReader$MonadReaderLaw);
    Code:
       0: aload_0
       1: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
       6: invokeinterface #103,  1          // InterfaceMethod scalaz/MonadReader.ask:()Ljava/lang/Object;
      11: areturn

  public static java.lang.Object $anonfun$askFALeft$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$askFALeft$3(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  public static java.lang.Object $anonfun$askFARight$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$askFARight$2(scalaz.MonadReader$MonadReaderLaw);
    Code:
       0: aload_0
       1: invokeinterface #38,  1           // InterfaceMethod scalaz$MonadReader$MonadReaderLaw$$$outer:()Lscalaz/MonadReader;
       6: invokeinterface #103,  1          // InterfaceMethod scalaz/MonadReader.ask:()Ljava/lang/Object;
      11: areturn

  public static java.lang.Object $anonfun$askFARight$3(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static void $init$(scalaz.MonadReader<F, S>.MonadReaderLaw);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #203,  0            // InvokeDynamic #11:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
