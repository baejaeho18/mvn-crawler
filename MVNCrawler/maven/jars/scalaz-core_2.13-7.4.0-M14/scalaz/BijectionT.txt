Compiled from "BijectionT.scala"
public final class scalaz.BijectionT<F, G, A, B> {
  private final scala.Function1<A, F> _to;

  private final scala.Function1<B, G> _from;

  public static <A, B, C, D, E, H, I> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple7<A, B, C, D, E, H, I>, scala.Tuple2<A, scala.Tuple2<B, scala.Tuple2<C, scala.Tuple2<D, scala.Tuple2<E, scala.Tuple2<H, I>>>>>>> tuple7B();
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #39                 // Method scalaz/BijectionT$.tuple7B:()Lscalaz/BijectionT;
       6: areturn

  public static <A, B, C, D, E, H> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple6<A, B, C, D, E, H>, scala.Tuple2<A, scala.Tuple2<B, scala.Tuple2<C, scala.Tuple2<D, scala.Tuple2<E, H>>>>>> tuple6B();
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #43                 // Method scalaz/BijectionT$.tuple6B:()Lscalaz/BijectionT;
       6: areturn

  public static <A, B, C, D, E> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple5<A, B, C, D, E>, scala.Tuple2<A, scala.Tuple2<B, scala.Tuple2<C, scala.Tuple2<D, E>>>>> tuple5B();
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #47                 // Method scalaz/BijectionT$.tuple5B:()Lscalaz/BijectionT;
       6: areturn

  public static <A, B, C, D> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple4<A, B, C, D>, scala.Tuple2<A, scala.Tuple2<B, scala.Tuple2<C, D>>>> tuple4B();
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #51                 // Method scalaz/BijectionT$.tuple4B:()Lscalaz/BijectionT;
       6: areturn

  public static <A, B, C> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple3<A, B, C>, scala.Tuple2<A, scala.Tuple2<B, C>>> tuple3B();
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #55                 // Method scalaz/BijectionT$.tuple3B:()Lscalaz/BijectionT;
       6: areturn

  public static <T, A, B> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple2<scala.Function1<T, A>, scala.Function1<T, B>>, scala.Function1<T, scala.Tuple2<A, B>>> zipReaderB();
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #59                 // Method scalaz/BijectionT$.zipReaderB:()Lscalaz/BijectionT;
       6: areturn

  public static <A, B> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple2<scalaz.Endo<A>, scalaz.Endo<B>>, scalaz.Endo<scala.Tuple2<A, B>>> zipEndoB();
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #63                 // Method scalaz/BijectionT$.zipEndoB:()Lscalaz/BijectionT;
       6: areturn

  public static <A, B> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple2<scalaz.IList<A>, scalaz.IList<B>>, scalaz.IList<scala.Tuple2<A, B>>> zipIListB();
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #67                 // Method scalaz/BijectionT$.zipIListB:()Lscalaz/BijectionT;
       6: areturn

  public static <A, B> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple2<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>>, scala.collection.immutable.List<scala.Tuple2<A, B>>> zipListB();
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #71                 // Method scalaz/BijectionT$.zipListB:()Lscalaz/BijectionT;
       6: areturn

  public static <X, A, B> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple2<X, X>, X> zipB(scalaz.Zip<X>, scalaz.Unzip<X>);
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #78                 // Method scalaz/BijectionT$.zipB:(Lscalaz/Zip;Lscalaz/Unzip;)Lscalaz/BijectionT;
       8: areturn

  public static <A> scalaz.BijectionT<java.lang.Object, java.lang.Object, scalaz.$bslash$div<A, A>, scala.Tuple2<java.lang.Object, A>> eitherB();
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #84                 // Method scalaz/BijectionT$.eitherB:()Lscalaz/BijectionT;
       6: areturn

  public static <A, B, C> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Function2<A, B, C>, scala.Function1<A, scala.Function1<B, C>>> curryB();
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #88                 // Method scalaz/BijectionT$.curryB:()Lscalaz/BijectionT;
       6: areturn

  public static <F, G, A> scalaz.BijectionT<F, G, A, A> bijectionId(scalaz.Applicative<F>, scalaz.Applicative<G>);
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #95                 // Method scalaz/BijectionT$.bijectionId:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/BijectionT;
       8: areturn

  public static <F, G, A, B> scalaz.BijectionT<F, G, A, B> liftBijection(scala.Function1<A, B>, scala.Function1<B, A>, scalaz.Applicative<F>, scalaz.Applicative<G>);
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: pop
       4: aload_2
       5: aload_0
       6: invokedynamic #120,  0            // InvokeDynamic #0:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      11: aload_3
      12: aload_1
      13: invokedynamic #125,  0            // InvokeDynamic #1:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      18: astore        5
      20: astore        4
      22: new           #2                  // class scalaz/BijectionT
      25: dup
      26: aload         4
      28: aload         5
      30: invokespecial #129                // Method "<init>":(Lscala/Function1;Lscala/Function1;)V
      33: areturn

  public static <F, G, A, B> scalaz.BijectionT<F, G, A, B> bijection(scala.Function1<A, F>, scala.Function1<B, G>);
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: pop
       4: new           #2                  // class scalaz/BijectionT
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #129                // Method "<init>":(Lscala/Function1;Lscala/Function1;)V
      13: areturn

  public static <F, G> scalaz.Category<?> bijectionTCategory(scalaz.Monad<F>, scalaz.Monad<G>);
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: pop
       4: new           #21                 // class scalaz/BijectionTInstances$$anon$2
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: invokespecial #142                // Method scalaz/BijectionTInstances$$anon$2."<init>":(Lscalaz/BijectionTInstances;Lscalaz/Monad;Lscalaz/Monad;)V
      14: areturn

  public static <F, G> scalaz.Split<?> bijectionTSplit(scalaz.Bind<F>, scalaz.Bind<G>);
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: pop
       4: new           #23                 // class scalaz/BijectionTInstances0$$anon$1
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: invokespecial #149                // Method scalaz/BijectionTInstances0$$anon$1."<init>":(Lscalaz/BijectionTInstances0;Lscalaz/Bind;Lscalaz/Bind;)V
      14: areturn

  public F to(A);
    Code:
       0: aload_0
       1: getfield      #155                // Field _to:Lscala/Function1;
       4: aload_1
       5: invokeinterface #159,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public G from(B);
    Code:
       0: aload_0
       1: getfield      #167                // Field _from:Lscala/Function1;
       4: aload_1
       5: invokeinterface #159,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public scalaz.BijectionT<G, F, B, A> flip();
    Code:
       0: new           #2                  // class scalaz/BijectionT
       3: dup
       4: aload_0
       5: getfield      #167                // Field _from:Lscala/Function1;
       8: aload_0
       9: getfield      #155                // Field _to:Lscala/Function1;
      12: invokespecial #129                // Method "<init>":(Lscala/Function1;Lscala/Function1;)V
      15: areturn

  public scalaz.Kleisli<F, A, B> toK();
    Code:
       0: new           #174                // class scalaz/Kleisli
       3: dup
       4: aload_0
       5: getfield      #155                // Field _to:Lscala/Function1;
       8: invokespecial #177                // Method scalaz/Kleisli."<init>":(Lscala/Function1;)V
      11: areturn

  public scalaz.Kleisli<G, B, A> fromK();
    Code:
       0: new           #174                // class scalaz/Kleisli
       3: dup
       4: aload_0
       5: getfield      #167                // Field _from:Lscala/Function1;
       8: invokespecial #177                // Method scalaz/Kleisli."<init>":(Lscala/Function1;)V
      11: areturn

  public scalaz.LensFamily<A, A, B, B> lens(scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, F, B>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, G, A>);
    Code:
       0: getstatic     #189                // Field scalaz/Lens$.MODULE$:Lscalaz/Lens$;
       3: aload_0
       4: aload_2
       5: aload_1
       6: invokedynamic #200,  0            // InvokeDynamic #2:apply:(Lscalaz/BijectionT;Lscalaz/Leibniz;Lscalaz/Leibniz;)Lscala/Function1;
      11: invokestatic  #206                // InterfaceMethod scalaz/LensFunctions.lens$:(Lscalaz/LensFunctions;Lscala/Function1;)Lscalaz/LensFamily;
      14: areturn

  public scalaz.PLensFamily<A, A, B, B> partial(scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, F, B>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, G, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #212                // Method lens:(Lscalaz/Leibniz;Lscalaz/Leibniz;)Lscalaz/LensFamily;
       6: invokevirtual #217                // Method scalaz/LensFamily.partial:()Lscalaz/PLensFamily;
       9: areturn

  public scalaz.PLensFamily<A, A, B, B> unary_$tilde(scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, F, B>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, G, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #220                // Method partial:(Lscalaz/Leibniz;Lscalaz/Leibniz;)Lscalaz/PLensFamily;
       6: areturn

  public <C, X, D> scalaz.BijectionT<java.lang.Object, java.lang.Object, X, X> bimap(scalaz.BijectionT<java.lang.Object, java.lang.Object, C, D>, scalaz.Bifunctor<X>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, F, B>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, G, A>);
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: pop
       4: aload_0
       5: aload_2
       6: aload_3
       7: aload_1
       8: invokedynamic #233,  0            // InvokeDynamic #3:apply:(Lscalaz/BijectionT;Lscalaz/Bifunctor;Lscalaz/Leibniz;Lscalaz/BijectionT;)Lscala/Function1;
      13: aload_0
      14: aload_2
      15: aload         4
      17: aload_1
      18: invokedynamic #238,  0            // InvokeDynamic #4:apply:(Lscalaz/BijectionT;Lscalaz/Bifunctor;Lscalaz/Leibniz;Lscalaz/BijectionT;)Lscala/Function1;
      23: astore        6
      25: astore        5
      27: new           #2                  // class scalaz/BijectionT
      30: dup
      31: aload         5
      33: aload         6
      35: invokespecial #129                // Method "<init>":(Lscala/Function1;Lscala/Function1;)V
      38: areturn

  public <C, D> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple2<A, C>, scala.Tuple2<B, D>> $times$times$times(scalaz.BijectionT<java.lang.Object, java.lang.Object, C, D>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, F, B>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, G, A>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #249                // Field scalaz/std/tuple$.MODULE$:Lscalaz/std/tuple$;
       5: invokevirtual #253                // Method scalaz/std/tuple$.tuple2Bitraverse:()Lscalaz/Bitraverse;
       8: aload_2
       9: aload_3
      10: invokevirtual #255                // Method bimap:(Lscalaz/BijectionT;Lscalaz/Bifunctor;Lscalaz/Leibniz;Lscalaz/Leibniz;)Lscalaz/BijectionT;
      13: areturn

  public <C, D> scalaz.BijectionT<java.lang.Object, java.lang.Object, scalaz.$bslash$div<A, C>, scalaz.$bslash$div<B, D>> $up$up$up(scalaz.BijectionT<java.lang.Object, java.lang.Object, C, D>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, F, B>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, G, A>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #262                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
       5: invokevirtual #265                // Method scalaz/$bslash$div$.DisjunctionInstances2:()Lscalaz/Bitraverse;
       8: aload_2
       9: aload_3
      10: invokevirtual #255                // Method bimap:(Lscalaz/BijectionT;Lscalaz/Bifunctor;Lscalaz/Leibniz;Lscalaz/Leibniz;)Lscalaz/BijectionT;
      13: areturn

  public <C> scalaz.BijectionT<F, G, C, B> compose(scalaz.BijectionT<F, G, C, A>, scalaz.Bind<F>, scalaz.Bind<G>);
    Code:
       0: getstatic     #37                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: pop
       4: aload_0
       5: invokevirtual #272                // Method toK:()Lscalaz/Kleisli;
       8: aload_1
       9: invokevirtual #272                // Method toK:()Lscalaz/Kleisli;
      12: astore        7
      14: dup
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: astore        6
      22: aload         7
      24: aload         6
      26: aload_2
      27: invokevirtual #276                // Method scalaz/Kleisli.$greater$eq$greater:(Lscalaz/Kleisli;Lscalaz/Bind;)Lscalaz/Kleisli;
      30: aconst_null
      31: astore        6
      33: aconst_null
      34: astore        7
      36: invokevirtual #280                // Method scalaz/Kleisli.run:()Lscala/Function1;
      39: aload_0
      40: invokevirtual #282                // Method fromK:()Lscalaz/Kleisli;
      43: aload_1
      44: invokevirtual #282                // Method fromK:()Lscalaz/Kleisli;
      47: aload_3
      48: invokevirtual #276                // Method scalaz/Kleisli.$greater$eq$greater:(Lscalaz/Kleisli;Lscalaz/Bind;)Lscalaz/Kleisli;
      51: invokevirtual #280                // Method scalaz/Kleisli.run:()Lscala/Function1;
      54: astore        5
      56: astore        4
      58: new           #2                  // class scalaz/BijectionT
      61: dup
      62: aload         4
      64: aload         5
      66: invokespecial #129                // Method "<init>":(Lscala/Function1;Lscala/Function1;)V
      69: areturn

  public <C> scalaz.BijectionT<F, G, C, B> $less$eq$less(scalaz.BijectionT<F, G, C, A>, scalaz.Bind<F>, scalaz.Bind<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #291                // Method compose:(Lscalaz/BijectionT;Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/BijectionT;
       7: areturn

  public <C> scalaz.BijectionT<F, G, A, C> andThen(scalaz.BijectionT<F, G, B, C>, scalaz.Bind<F>, scalaz.Bind<G>);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: aload_3
       4: invokevirtual #291                // Method compose:(Lscalaz/BijectionT;Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/BijectionT;
       7: areturn

  public <C> scalaz.BijectionT<F, G, A, C> $greater$eq$greater(scalaz.BijectionT<F, G, B, C>, scalaz.Bind<F>, scalaz.Bind<G>);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: aload_3
       4: invokevirtual #291                // Method compose:(Lscalaz/BijectionT;Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/BijectionT;
       7: areturn

  public static final java.lang.Object $anonfun$lens$2(scalaz.BijectionT, scalaz.Leibniz, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokevirtual #300                // Method from:(Ljava/lang/Object;)Ljava/lang/Object;
       6: astore_3
       7: ifnonnull     12
      10: aconst_null
      11: athrow
      12: aload_1
      13: aload_3
      14: invokevirtual #305                // Method scalaz/Leibniz.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public static final scalaz.IndexedStoreT $anonfun$lens$1(scalaz.BijectionT, scalaz.Leibniz, scalaz.Leibniz, java.lang.Object);
    Code:
       0: getstatic     #312                // Field scalaz/Store$.MODULE$:Lscalaz/Store$;
       3: pop
       4: aload_0
       5: aload_1
       6: invokedynamic #318,  0            // InvokeDynamic #5:apply:(Lscalaz/BijectionT;Lscalaz/Leibniz;)Lscala/Function1;
      11: aload_2
      12: aload_0
      13: aload_3
      14: invokevirtual #320                // Method to:(Ljava/lang/Object;)Ljava/lang/Object;
      17: astore        6
      19: ifnonnull     24
      22: aconst_null
      23: athrow
      24: aload_2
      25: aload         6
      27: invokevirtual #305                // Method scalaz/Leibniz.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      30: aconst_null
      31: astore        6
      33: astore        5
      35: astore        4
      37: getstatic     #325                // Field scalaz/StoreT$.MODULE$:Lscalaz/StoreT$;
      40: pop
      41: getstatic     #328                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      44: getstatic     #333                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      47: aload         4
      49: invokevirtual #336                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      52: aload         5
      54: invokevirtual #340                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      57: astore        7
      59: new           #342                // class scalaz/IndexedStoreT
      62: dup
      63: aload         7
      65: invokespecial #345                // Method scalaz/IndexedStoreT."<init>":(Lscala/Tuple2;)V
      68: areturn

  public static final java.lang.Object $anonfun$bimap$2(scalaz.BijectionT, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #320                // Method to:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public static final java.lang.Object $anonfun$bimap$1(scalaz.BijectionT, scalaz.Bifunctor, scalaz.Leibniz, scalaz.BijectionT, java.lang.Object);
    Code:
       0: aload_1
       1: aload         4
       3: aload_0
       4: getfield      #155                // Field _to:Lscala/Function1;
       7: getstatic     #360                // Field scalaz/Leibniz$.MODULE$:Lscalaz/Leibniz$;
      10: aload_2
      11: invokevirtual #364                // Method scalaz/Leibniz$.witness:(Lscalaz/Leibniz;)Lscala/Function1;
      14: invokeinterface #367,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      19: aload_3
      20: invokedynamic #373,  0            // InvokeDynamic #6:apply:(Lscalaz/BijectionT;)Lscala/Function1;
      25: invokeinterface #378,  4          // InterfaceMethod scalaz/Bifunctor.bimap:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      30: areturn

  public static final java.lang.Object $anonfun$bimap$4(scalaz.BijectionT, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #300                // Method from:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public static final java.lang.Object $anonfun$bimap$3(scalaz.BijectionT, scalaz.Bifunctor, scalaz.Leibniz, scalaz.BijectionT, java.lang.Object);
    Code:
       0: aload_1
       1: aload         4
       3: aload_0
       4: getfield      #167                // Field _from:Lscala/Function1;
       7: getstatic     #360                // Field scalaz/Leibniz$.MODULE$:Lscalaz/Leibniz$;
      10: aload_2
      11: invokevirtual #364                // Method scalaz/Leibniz$.witness:(Lscalaz/Leibniz;)Lscala/Function1;
      14: invokeinterface #367,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      19: aload_3
      20: invokedynamic #386,  0            // InvokeDynamic #7:apply:(Lscalaz/BijectionT;)Lscala/Function1;
      25: invokeinterface #378,  4          // InterfaceMethod scalaz/Bifunctor.bimap:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      30: areturn

  public scalaz.BijectionT(scala.Function1<A, F>, scala.Function1<B, G>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #155                // Field _to:Lscala/Function1;
       5: aload_0
       6: aload_2
       7: putfield      #167                // Field _from:Lscala/Function1;
      10: aload_0
      11: invokespecial #390                // Method java/lang/Object."<init>":()V
      14: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #402,  0            // InvokeDynamic #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
