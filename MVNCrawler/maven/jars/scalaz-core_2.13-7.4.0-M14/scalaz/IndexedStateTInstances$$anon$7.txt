Compiled from "StateT.scala"
public final class scalaz.IndexedStateTInstances$$anon$7 implements scalaz.IndexedStateTPlus<F, S1, S2> {
  private scalaz.syntax.PlusSyntax<?> plusSyntax;

  private final scalaz.Bind evidence$1$1;

  private final scalaz.Plus evidence$2$1;

  public final <A> scalaz.IndexedStateT<S1, S2, F, A> plus(scalaz.IndexedStateT<S1, S2, F, A>, scala.Function0<scalaz.IndexedStateT<S1, S2, F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #34                 // InterfaceMethod scalaz/IndexedStateTPlus.plus$:(Lscalaz/IndexedStateTPlus;Lscalaz/IndexedStateT;Lscala/Function0;)Lscalaz/IndexedStateT;
       6: areturn

  public <S$, A> scalaz.Maybe<scalaz.IndexedStateT<S1, S2, F, A>> unfoldlPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<S$, scalaz.IndexedStateT<S1, S2, F, A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #47                 // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S$, A> scalaz.Maybe<scalaz.IndexedStateT<S1, S2, F, A>> unfoldrPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scalaz.IndexedStateT<S1, S2, F, A>, S$>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #54                 // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #61                 // InterfaceMethod scalaz/Plus.compose$:(Lscalaz/Plus;)Lscalaz/Plus;
       4: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #68                 // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.IndexedStateT<S1, S2, F, A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #75                 // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<?>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #82                 // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public scalaz.syntax.PlusSyntax<?> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #86                 // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #86                 // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.Bind<F> F();
    Code:
       0: getstatic     #99                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #101                // Field evidence$1$1:Lscalaz/Bind;
       7: invokevirtual #105                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #107                // class scalaz/Bind
      13: areturn

  public scalaz.Plus<F> G();
    Code:
       0: getstatic     #99                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #111                // Field evidence$2$1:Lscalaz/Plus;
       7: invokevirtual #105                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #17                 // class scalaz/Plus
      13: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #114                // class scalaz/IndexedStateT
       5: aload_2
       6: invokevirtual #116                // Method plus:(Lscalaz/IndexedStateT;Lscala/Function0;)Lscalaz/IndexedStateT;
       9: areturn

  public scalaz.IndexedStateTInstances$$anon$7(scalaz.IndexedStateTInstances, scalaz.Bind, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #101                // Field evidence$1$1:Lscalaz/Bind;
       5: aload_0
       6: aload_3
       7: putfield      #111                // Field evidence$2$1:Lscalaz/Plus;
      10: aload_0
      11: invokespecial #122                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #126                // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      18: invokestatic  #131                // Method scala/runtime/Statics.releaseFence:()V
      21: return
}
