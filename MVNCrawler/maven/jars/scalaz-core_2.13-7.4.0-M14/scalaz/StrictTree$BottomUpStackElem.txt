Compiled from "StrictTree.scala"
public class scalaz.StrictTree$BottomUpStackElem<A, B> implements scala.collection.Iterator<scalaz.StrictTree<A>>, scala.Product, java.io.Serializable {
  private final scala.Option<scalaz.StrictTree$BottomUpStackElem<A, B>> parent;

  private final scalaz.StrictTree<A> tree;

  private final scala.collection.Iterator<scalaz.StrictTree<A>> subIterator;

  private final scala.collection.mutable.Buffer<B> mappedSubForest;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #37                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public final boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #45                 // InterfaceMethod scala/collection/Iterator.hasDefiniteSize$:(Lscala/collection/Iterator;)Z
       4: ireturn

  public final scala.collection.Iterator<scalaz.StrictTree<A>> iterator();
    Code:
       0: aload_0
       1: invokestatic  #51                 // InterfaceMethod scala/collection/Iterator.iterator$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public scala.Option<scalaz.StrictTree<A>> nextOption();
    Code:
       0: aload_0
       1: invokestatic  #58                 // InterfaceMethod scala/collection/Iterator.nextOption$:(Lscala/collection/Iterator;)Lscala/Option;
       4: areturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #65                 // InterfaceMethod scala/collection/Iterator.contains$:(Lscala/collection/Iterator;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.BufferedIterator<scalaz.StrictTree<A>> buffered();
    Code:
       0: aload_0
       1: invokestatic  #73                 // InterfaceMethod scala/collection/Iterator.buffered$:(Lscala/collection/Iterator;)Lscala/collection/BufferedIterator;
       4: areturn

  public <B> scala.collection.Iterator<B> padTo(int, B);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #81                 // InterfaceMethod scala/collection/Iterator.padTo$:(Lscala/collection/Iterator;ILjava/lang/Object;)Lscala/collection/Iterator;
       6: areturn

  public scala.Tuple2<scala.collection.Iterator<scalaz.StrictTree<A>>, scala.collection.Iterator<scalaz.StrictTree<A>>> partition(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #90                 // InterfaceMethod scala/collection/Iterator.partition$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <B> scala.collection.Iterator<scalaz.StrictTree<A>>.GroupedIterator<B> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #99                 // InterfaceMethod scala/collection/Iterator.grouped$:(Lscala/collection/Iterator;I)Lscala/collection/Iterator$GroupedIterator;
       5: areturn

  public <B> scala.collection.Iterator<scalaz.StrictTree<A>>.GroupedIterator<B> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #107                // InterfaceMethod scala/collection/Iterator.sliding$:(Lscala/collection/Iterator;II)Lscala/collection/Iterator$GroupedIterator;
       6: areturn

  public <B> int sliding$default$2();
    Code:
       0: aload_0
       1: invokestatic  #114                // InterfaceMethod scala/collection/Iterator.sliding$default$2$:(Lscala/collection/Iterator;)I
       4: ireturn

  public <B$> scala.collection.Iterator<B$> scanLeft(B$, scala.Function2<B$, scalaz.StrictTree<A>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #123                // InterfaceMethod scala/collection/Iterator.scanLeft$:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public <B$> scala.collection.Iterator<B$> scanRight(B$, scala.Function2<scalaz.StrictTree<A>, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #129                // InterfaceMethod scala/collection/Iterator.scanRight$:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public int indexWhere(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #137                // InterfaceMethod scala/collection/Iterator.indexWhere$:(Lscala/collection/Iterator;Lscala/Function1;I)I
       6: ireturn

  public int indexWhere$default$2();
    Code:
       0: aload_0
       1: invokestatic  #141                // InterfaceMethod scala/collection/Iterator.indexWhere$default$2$:(Lscala/collection/Iterator;)I
       4: ireturn

  public <B> int indexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #148                // InterfaceMethod scala/collection/Iterator.indexOf$:(Lscala/collection/Iterator;Ljava/lang/Object;)I
       5: ireturn

  public <B> int indexOf(B, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #153                // InterfaceMethod scala/collection/Iterator.indexOf$:(Lscala/collection/Iterator;Ljava/lang/Object;I)I
       6: ireturn

  public final int length();
    Code:
       0: aload_0
       1: invokestatic  #157                // InterfaceMethod scala/collection/Iterator.length$:(Lscala/collection/Iterator;)I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #161                // InterfaceMethod scala/collection/Iterator.isEmpty$:(Lscala/collection/Iterator;)Z
       4: ireturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> filter(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #168                // InterfaceMethod scala/collection/Iterator.filter$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> filterNot(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #172                // InterfaceMethod scala/collection/Iterator.filterNot$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> filterImpl(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #180                // InterfaceMethod scala/collection/Iterator.filterImpl$:(Lscala/collection/Iterator;Lscala/Function1;Z)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> withFilter(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #185                // InterfaceMethod scala/collection/Iterator.withFilter$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B$> scala.collection.Iterator<B$> collect(scala.PartialFunction<scalaz.StrictTree<A>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #193                // InterfaceMethod scala/collection/Iterator.collect$:(Lscala/collection/Iterator;Lscala/PartialFunction;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> distinct();
    Code:
       0: aload_0
       1: invokestatic  #198                // InterfaceMethod scala/collection/Iterator.distinct$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public <B$> scala.collection.Iterator<scalaz.StrictTree<A>> distinctBy(scala.Function1<scalaz.StrictTree<A>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #204                // InterfaceMethod scala/collection/Iterator.distinctBy$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B$> scala.collection.Iterator<B$> map(scala.Function1<scalaz.StrictTree<A>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #209                // InterfaceMethod scala/collection/Iterator.map$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B$> scala.collection.Iterator<B$> flatMap(scala.Function1<scalaz.StrictTree<A>, scala.collection.IterableOnce<B$>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #214                // InterfaceMethod scala/collection/Iterator.flatMap$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B$> scala.collection.Iterator<B$> flatten(scala.Function1<scalaz.StrictTree<A>, scala.collection.IterableOnce<B$>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #219                // InterfaceMethod scala/collection/Iterator.flatten$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> concat(scala.Function0<scala.collection.IterableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #227                // InterfaceMethod scala/collection/Iterator.concat$:(Lscala/collection/Iterator;Lscala/Function0;)Lscala/collection/Iterator;
       5: areturn

  public final <B> scala.collection.Iterator<B> $plus$plus(scala.Function0<scala.collection.IterableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #232                // InterfaceMethod scala/collection/Iterator.$plus$plus$:(Lscala/collection/Iterator;Lscala/Function0;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #240                // InterfaceMethod scala/collection/Iterator.take$:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> takeWhile(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #244                // InterfaceMethod scala/collection/Iterator.takeWhile$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #248                // InterfaceMethod scala/collection/Iterator.drop$:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> dropWhile(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #252                // InterfaceMethod scala/collection/Iterator.dropWhile$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<scalaz.StrictTree<A>>, scala.collection.Iterator<scalaz.StrictTree<A>>> span(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #256                // InterfaceMethod scala/collection/Iterator.span$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #264                // InterfaceMethod scala/collection/Iterator.slice$:(Lscala/collection/Iterator;II)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> sliceIterator(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #268                // InterfaceMethod scala/collection/Iterator.sliceIterator$:(Lscala/collection/Iterator;II)Lscala/collection/Iterator;
       6: areturn

  public <B$> scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, B$>> zip(scala.collection.IterableOnce<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #276                // InterfaceMethod scala/collection/Iterator.zip$:(Lscala/collection/Iterator;Lscala/collection/IterableOnce;)Lscala/collection/Iterator;
       5: areturn

  public <A1, B> scala.collection.Iterator<scala.Tuple2<A1, B>> zipAll(scala.collection.IterableOnce<B>, A1, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #286                // InterfaceMethod scala/collection/Iterator.zipAll$:(Lscala/collection/Iterator;Lscala/collection/IterableOnce;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/Iterator;
       7: areturn

  public scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, java.lang.Object>> zipWithIndex();
    Code:
       0: aload_0
       1: invokestatic  #291                // InterfaceMethod scala/collection/Iterator.zipWithIndex$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public <B> boolean sameElements(scala.collection.IterableOnce<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #298                // InterfaceMethod scala/collection/Iterator.sameElements$:(Lscala/collection/Iterator;Lscala/collection/IterableOnce;)Z
       5: ireturn

  public scala.Tuple2<scala.collection.Iterator<scalaz.StrictTree<A>>, scala.collection.Iterator<scalaz.StrictTree<A>>> duplicate();
    Code:
       0: aload_0
       1: invokestatic  #305                // InterfaceMethod scala/collection/Iterator.duplicate$:(Lscala/collection/Iterator;)Lscala/Tuple2;
       4: areturn

  public <B> scala.collection.Iterator<B> patch(int, scala.collection.Iterator<B>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #314                // InterfaceMethod scala/collection/Iterator.patch$:(Lscala/collection/Iterator;ILscala/collection/Iterator;I)Lscala/collection/Iterator;
       7: areturn

  public <U> scala.collection.Iterator<scalaz.StrictTree<A>> tapEach(scala.Function1<scalaz.StrictTree<A>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #319                // InterfaceMethod scala/collection/Iterator.tapEach$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #325                // InterfaceMethod scala/collection/Iterator.toString$:(Lscala/collection/Iterator;)Ljava/lang/String;
       4: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> seq();
    Code:
       0: aload_0
       1: invokestatic  #329                // InterfaceMethod scala/collection/Iterator.seq$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public scala.Tuple2<scala.collection.Iterator<scalaz.StrictTree<A>>, scala.collection.Iterator<scalaz.StrictTree<A>>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #338                // InterfaceMethod scala/collection/IterableOnceOps.splitAt$:(Lscala/collection/IterableOnceOps;I)Lscala/Tuple2;
       5: areturn

  public boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #343                // InterfaceMethod scala/collection/IterableOnceOps.isTraversableAgain$:(Lscala/collection/IterableOnceOps;)Z
       4: ireturn

  public <U> void foreach(scala.Function1<scalaz.StrictTree<A>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #350                // InterfaceMethod scala/collection/IterableOnceOps.foreach$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)V
       5: return

  public boolean forall(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #357                // InterfaceMethod scala/collection/IterableOnceOps.forall$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #361                // InterfaceMethod scala/collection/IterableOnceOps.exists$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)Z
       5: ireturn

  public int count(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #368                // InterfaceMethod scala/collection/IterableOnceOps.count$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)I
       5: ireturn

  public scala.Option<scalaz.StrictTree<A>> find(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #375                // InterfaceMethod scala/collection/IterableOnceOps.find$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)Lscala/Option;
       5: areturn

  public <B$> B$ foldLeft(B$, scala.Function2<B$, scalaz.StrictTree<A>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #382                // InterfaceMethod scala/collection/IterableOnceOps.foldLeft$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B$> B$ foldRight(B$, scala.Function2<scalaz.StrictTree<A>, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #387                // InterfaceMethod scala/collection/IterableOnceOps.foldRight$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public final <B$> B$ $div$colon(B$, scala.Function2<B$, scalaz.StrictTree<A>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #391                // InterfaceMethod scala/collection/IterableOnceOps.$div$colon$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public final <B$> B$ $colon$bslash(B$, scala.Function2<scalaz.StrictTree<A>, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #395                // InterfaceMethod scala/collection/IterableOnceOps.$colon$bslash$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #400                // InterfaceMethod scala/collection/IterableOnceOps.fold$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduce(scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #407                // InterfaceMethod scala/collection/IterableOnceOps.reduce$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceOption(scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #414                // InterfaceMethod scala/collection/IterableOnceOps.reduceOption$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> B reduceLeft(scala.Function2<B, scalaz.StrictTree<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #419                // InterfaceMethod scala/collection/IterableOnceOps.reduceLeft$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> B reduceRight(scala.Function2<scalaz.StrictTree<A>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #424                // InterfaceMethod scala/collection/IterableOnceOps.reduceRight$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, scalaz.StrictTree<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #429                // InterfaceMethod scala/collection/IterableOnceOps.reduceLeftOption$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<scalaz.StrictTree<A>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #434                // InterfaceMethod scala/collection/IterableOnceOps.reduceRightOption$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Lscala/Option;
       5: areturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #438                // InterfaceMethod scala/collection/IterableOnceOps.nonEmpty$:(Lscala/collection/IterableOnceOps;)Z
       4: ireturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #442                // InterfaceMethod scala/collection/IterableOnceOps.size$:(Lscala/collection/IterableOnceOps;)I
       4: ireturn

  public final <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #450                // InterfaceMethod scala/collection/IterableOnceOps.copyToBuffer$:(Lscala/collection/IterableOnceOps;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> int copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #456                // InterfaceMethod scala/collection/IterableOnceOps.copyToArray$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;)I
       5: ireturn

  public <B> int copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #461                // InterfaceMethod scala/collection/IterableOnceOps.copyToArray$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;I)I
       6: ireturn

  public <B> int copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #466                // InterfaceMethod scala/collection/IterableOnceOps.copyToArray$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;II)I
       7: ireturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #474                // InterfaceMethod scala/collection/IterableOnceOps.sum$:(Lscala/collection/IterableOnceOps;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #479                // InterfaceMethod scala/collection/IterableOnceOps.product$:(Lscala/collection/IterableOnceOps;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object min(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #486                // InterfaceMethod scala/collection/IterableOnceOps.min$:(Lscala/collection/IterableOnceOps;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<scalaz.StrictTree<A>> minOption(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #494                // InterfaceMethod scala/collection/IterableOnceOps.minOption$:(Lscala/collection/IterableOnceOps;Lscala/math/Ordering;)Lscala/Option;
       5: areturn

  public java.lang.Object max(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #498                // InterfaceMethod scala/collection/IterableOnceOps.max$:(Lscala/collection/IterableOnceOps;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<scalaz.StrictTree<A>> maxOption(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #502                // InterfaceMethod scala/collection/IterableOnceOps.maxOption$:(Lscala/collection/IterableOnceOps;Lscala/math/Ordering;)Lscala/Option;
       5: areturn

  public java.lang.Object maxBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #508                // InterfaceMethod scala/collection/IterableOnceOps.maxBy$:(Lscala/collection/IterableOnceOps;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B$> scala.Option<scalaz.StrictTree<A>> maxByOption(scala.Function1<scalaz.StrictTree<A>, B$>, scala.math.Ordering<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #515                // InterfaceMethod scala/collection/IterableOnceOps.maxByOption$:(Lscala/collection/IterableOnceOps;Lscala/Function1;Lscala/math/Ordering;)Lscala/Option;
       6: areturn

  public java.lang.Object minBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #519                // InterfaceMethod scala/collection/IterableOnceOps.minBy$:(Lscala/collection/IterableOnceOps;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B$> scala.Option<scalaz.StrictTree<A>> minByOption(scala.Function1<scalaz.StrictTree<A>, B$>, scala.math.Ordering<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #523                // InterfaceMethod scala/collection/IterableOnceOps.minByOption$:(Lscala/collection/IterableOnceOps;Lscala/Function1;Lscala/math/Ordering;)Lscala/Option;
       6: areturn

  public <B$> scala.Option<B$> collectFirst(scala.PartialFunction<scalaz.StrictTree<A>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #530                // InterfaceMethod scala/collection/IterableOnceOps.collectFirst$:(Lscala/collection/IterableOnceOps;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B$> B$ aggregate(scala.Function0<B$>, scala.Function2<B$, scalaz.StrictTree<A>, B$>, scala.Function2<B$, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #539                // InterfaceMethod scala/collection/IterableOnceOps.aggregate$:(Lscala/collection/IterableOnceOps;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B$> boolean corresponds(scala.collection.IterableOnce<B$>, scala.Function2<scalaz.StrictTree<A>, B$, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #546                // InterfaceMethod scala/collection/IterableOnceOps.corresponds$:(Lscala/collection/IterableOnceOps;Lscala/collection/IterableOnce;Lscala/Function2;)Z
       6: ireturn

  public final java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #554                // InterfaceMethod scala/collection/IterableOnceOps.mkString$:(Lscala/collection/IterableOnceOps;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public final java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #559                // InterfaceMethod scala/collection/IterableOnceOps.mkString$:(Lscala/collection/IterableOnceOps;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public final java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #562                // InterfaceMethod scala/collection/IterableOnceOps.mkString$:(Lscala/collection/IterableOnceOps;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #569                // InterfaceMethod scala/collection/IterableOnceOps.addString$:(Lscala/collection/IterableOnceOps;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public final scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #574                // InterfaceMethod scala/collection/IterableOnceOps.addString$:(Lscala/collection/IterableOnceOps;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public final scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #578                // InterfaceMethod scala/collection/IterableOnceOps.addString$:(Lscala/collection/IterableOnceOps;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public <C1> C1 to(scala.collection.Factory<scalaz.StrictTree<A>, C1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #586                // InterfaceMethod scala/collection/IterableOnceOps.to$:(Lscala/collection/IterableOnceOps;Lscala/collection/Factory;)Ljava/lang/Object;
       5: areturn

  public final scala.collection.Iterator<scalaz.StrictTree<A>> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #592                // InterfaceMethod scala/collection/IterableOnceOps.toIterator$:(Lscala/collection/IterableOnceOps;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.immutable.List<scalaz.StrictTree<A>> toList();
    Code:
       0: aload_0
       1: invokestatic  #599                // InterfaceMethod scala/collection/IterableOnceOps.toList$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.Vector<scalaz.StrictTree<A>> toVector();
    Code:
       0: aload_0
       1: invokestatic  #606                // InterfaceMethod scala/collection/IterableOnceOps.toVector$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/Vector;
       4: areturn

  public <K, V> scala.collection.immutable.Map<K, V> toMap(scala.$less$colon$less<scalaz.StrictTree<A>, scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #613                // InterfaceMethod scala/collection/IterableOnceOps.toMap$:(Lscala/collection/IterableOnceOps;Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #621                // InterfaceMethod scala/collection/IterableOnceOps.toSet$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Seq<scalaz.StrictTree<A>> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #628                // InterfaceMethod scala/collection/IterableOnceOps.toSeq$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/Seq;
       4: areturn

  public scala.collection.immutable.IndexedSeq<scalaz.StrictTree<A>> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #635                // InterfaceMethod scala/collection/IterableOnceOps.toIndexedSeq$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public final scala.collection.immutable.Stream<scalaz.StrictTree<A>> toStream();
    Code:
       0: aload_0
       1: invokestatic  #642                // InterfaceMethod scala/collection/IterableOnceOps.toStream$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/Stream;
       4: areturn

  public final <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #649                // InterfaceMethod scala/collection/IterableOnceOps.toBuffer$:(Lscala/collection/IterableOnceOps;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #657                // InterfaceMethod scala/collection/IterableOnceOps.toArray$:(Lscala/collection/IterableOnceOps;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterable<scalaz.StrictTree<A>> reversed();
    Code:
       0: aload_0
       1: invokestatic  #665                // InterfaceMethod scala/collection/IterableOnceOps.reversed$:(Lscala/collection/IterableOnceOps;)Lscala/collection/Iterable;
       4: areturn

  public <S extends scala.collection.Stepper<?>> S stepper(scala.collection.StepperShape<scalaz.StrictTree<A>, S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #675                // InterfaceMethod scala/collection/IterableOnce.stepper$:(Lscala/collection/IterableOnce;Lscala/collection/StepperShape;)Lscala/collection/Stepper;
       5: areturn

  public int knownSize();
    Code:
       0: aload_0
       1: invokestatic  #681                // InterfaceMethod scala/collection/IterableOnce.knownSize$:(Lscala/collection/IterableOnce;)I
       4: ireturn

  public scala.Option<scalaz.StrictTree$BottomUpStackElem<A, B>> parent();
    Code:
       0: aload_0
       1: getfield      #684                // Field parent:Lscala/Option;
       4: areturn

  public scalaz.StrictTree<A> tree();
    Code:
       0: aload_0
       1: getfield      #688                // Field tree:Lscalaz/StrictTree;
       4: areturn

  public A rootLabel();
    Code:
       0: aload_0
       1: invokevirtual #693                // Method tree:()Lscalaz/StrictTree;
       4: invokevirtual #695                // Method scalaz/StrictTree.rootLabel:()Ljava/lang/Object;
       7: areturn

  public scala.collection.mutable.Buffer<B> mappedSubForest();
    Code:
       0: aload_0
       1: getfield      #698                // Field mappedSubForest:Lscala/collection/mutable/Buffer;
       4: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #701                // Field subIterator:Lscala/collection/Iterator;
       4: invokeinterface #703,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
       9: ireturn

  public scalaz.StrictTree<A> next();
    Code:
       0: aload_0
       1: getfield      #701                // Field subIterator:Lscala/collection/Iterator;
       4: invokeinterface #706,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
       9: checkcast     #17                 // class scalaz/StrictTree
      12: areturn

  public <A, B> scalaz.StrictTree$BottomUpStackElem<A, B> copy(scala.Option<scalaz.StrictTree$BottomUpStackElem<A, B>>, scalaz.StrictTree<A>);
    Code:
       0: new           #2                  // class scalaz/StrictTree$BottomUpStackElem
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #713                // Method "<init>":(Lscala/Option;Lscalaz/StrictTree;)V
       9: areturn

  public <A, B> scala.Option<scalaz.StrictTree$BottomUpStackElem<A, B>> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #717                // Method parent:()Lscala/Option;
       4: areturn

  public <A, B> scalaz.StrictTree<A> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #693                // Method tree:()Lscalaz/StrictTree;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #721                // String BottomUpStackElem
       3: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 1
                     0: 24
                     1: 29
               default: 34
          }
      24: aload_0
      25: invokevirtual #717                // Method parent:()Lscala/Option;
      28: areturn
      29: aload_0
      30: invokevirtual #693                // Method tree:()Lscalaz/StrictTree;
      33: areturn
      34: iload_1
      35: invokestatic  #730                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      38: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #738                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #741                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/StrictTree$BottomUpStackElem
       4: ireturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 1
                     0: 24
                     1: 28
               default: 32
          }
      24: ldc_w         #745                // String parent
      27: areturn
      28: ldc_w         #746                // String tree
      31: areturn
      32: iload_1
      33: invokestatic  #730                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      36: checkcast     #748                // class java/lang/String
      39: areturn

  public int hashCode();
    Code:
       0: getstatic     #738                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #753                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     92
       5: aload_1
       6: instanceof    #2                  // class scalaz/StrictTree$BottomUpStackElem
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ifeq          94
      20: aload_1
      21: checkcast     #2                  // class scalaz/StrictTree$BottomUpStackElem
      24: astore_2
      25: aload_0
      26: invokevirtual #717                // Method parent:()Lscala/Option;
      29: aload_2
      30: invokevirtual #717                // Method parent:()Lscala/Option;
      33: astore_3
      34: dup
      35: ifnonnull     46
      38: pop
      39: aload_3
      40: ifnull        53
      43: goto          94
      46: aload_3
      47: invokevirtual #756                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifeq          94
      53: aload_0
      54: invokevirtual #693                // Method tree:()Lscalaz/StrictTree;
      57: aload_2
      58: invokevirtual #693                // Method tree:()Lscalaz/StrictTree;
      61: astore        4
      63: dup
      64: ifnonnull     76
      67: pop
      68: aload         4
      70: ifnull        84
      73: goto          94
      76: aload         4
      78: invokevirtual #756                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      81: ifeq          94
      84: aload_2
      85: aload_0
      86: invokevirtual #758                // Method canEqual:(Ljava/lang/Object;)Z
      89: ifeq          94
      92: iconst_1
      93: ireturn
      94: iconst_0
      95: ireturn

  public java.lang.Object tapEach(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #763                // Method tapEach:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object zipWithIndex();
    Code:
       0: aload_0
       1: invokevirtual #765                // Method zipWithIndex:()Lscala/collection/Iterator;
       4: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #768                // Method slice:(II)Lscala/collection/Iterator;
       6: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #770                // Method dropWhile:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #772                // Method drop:(I)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #774                // Method takeWhile:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #776                // Method take:(I)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #779                // Method flatten:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object flatMap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #781                // Method flatMap:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object map(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #783                // Method map:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object collect(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #786                // Method collect:(Lscala/PartialFunction;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #789                // Method filterNot:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #791                // Method filter:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object scanLeft(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #793                // Method scanLeft:(Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #795                // Method next:()Lscalaz/StrictTree;
       4: areturn

  public scalaz.StrictTree$BottomUpStackElem(scala.Option<scalaz.StrictTree$BottomUpStackElem<A, B>>, scalaz.StrictTree<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #684                // Field parent:Lscala/Option;
       5: aload_0
       6: aload_2
       7: putfield      #688                // Field tree:Lscalaz/StrictTree;
      10: aload_0
      11: invokespecial #799                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #803                // InterfaceMethod scala/collection/IterableOnce.$init$:(Lscala/collection/IterableOnce;)V
      18: aload_0
      19: invokestatic  #806                // InterfaceMethod scala/collection/IterableOnceOps.$init$:(Lscala/collection/IterableOnceOps;)V
      22: aload_0
      23: invokestatic  #809                // InterfaceMethod scala/collection/Iterator.$init$:(Lscala/collection/Iterator;)V
      26: aload_0
      27: invokestatic  #812                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      30: aload_0
      31: aload_2
      32: invokevirtual #815                // Method scalaz/StrictTree.subForest:()Lscala/collection/immutable/Vector;
      35: invokevirtual #819                // Method scala/collection/immutable/Vector.iterator:()Lscala/collection/Iterator;
      38: putfield      #701                // Field subIterator:Lscala/collection/Iterator;
      41: aload_0
      42: getstatic     #824                // Field scala/collection/mutable/Buffer$.MODULE$:Lscala/collection/mutable/Buffer$;
      45: invokevirtual #828                // Method scala/collection/mutable/Buffer$.empty:()Lscala/collection/SeqOps;
      48: checkcast     #830                // class scala/collection/mutable/Buffer
      51: putfield      #698                // Field mappedSubForest:Lscala/collection/mutable/Buffer;
      54: return
}
