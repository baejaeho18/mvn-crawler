Compiled from "Order.scala"
public class scalaz.Order$OrderDecidableInstance implements scalaz.Decidable<scalaz.Order> {
  private scalaz.syntax.DecidableSyntax<scalaz.Order> decidableSyntax;

  private scalaz.syntax.InvariantAltSyntax<scalaz.Order> invariantAltSyntax;

  private scalaz.syntax.DivisibleSyntax<scalaz.Order> divisibleSyntax;

  private scalaz.syntax.InvariantApplicativeSyntax<scalaz.Order> invariantApplicativeSyntax;

  private scalaz.syntax.DivideSyntax<scalaz.Order> divideSyntax;

  private scalaz.syntax.ContravariantSyntax<scalaz.Order> contravariantSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<scalaz.Order> invariantFunctorSyntax;

  public final java.lang.Object choose(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #87                 // InterfaceMethod scalaz/Decidable.choose$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object choose1(scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #97                 // InterfaceMethod scalaz/Decidable.choose1$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object choose3(scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #104                // InterfaceMethod scalaz/Decidable.choose3$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object choose4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #111                // InterfaceMethod scalaz/Decidable.choose4$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object choosing2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #119                // InterfaceMethod scalaz/Decidable.choosing2$:(Lscalaz/Decidable;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object choosing3(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #127                // InterfaceMethod scalaz/Decidable.choosing3$:(Lscalaz/Decidable;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object choosing4(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #134                // InterfaceMethod scalaz/Decidable.choosing4$:(Lscalaz/Decidable;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #141                // InterfaceMethod scalaz/Decidable.xcoproduct1$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xcoproduct2(scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #147                // InterfaceMethod scalaz/Decidable.xcoproduct2$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xcoproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #153                // InterfaceMethod scalaz/Decidable.xcoproduct3$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #159                // InterfaceMethod scalaz/Decidable.xcoproduct4$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public scalaz.Decidable<scalaz.Order>.DecidableLaw decidableLaw();
    Code:
       0: aload_0
       1: invokestatic  #166                // InterfaceMethod scalaz/Decidable.decidableLaw$:(Lscalaz/Decidable;)Lscalaz/Decidable$DecidableLaw;
       4: areturn

  public final java.lang.Object xcoderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #174                // InterfaceMethod scalaz/InvariantAlt.xcoderiving1$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xcoderiving2(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #180                // InterfaceMethod scalaz/InvariantAlt.xcoderiving2$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xcoderiving3(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #186                // InterfaceMethod scalaz/InvariantAlt.xcoderiving3$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xcoderiving4(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #192                // InterfaceMethod scalaz/InvariantAlt.xcoderiving4$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #199                // InterfaceMethod scalaz/Divisible.xproduct0$:(Lscalaz/Divisible;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #204                // InterfaceMethod scalaz/Divisible.xproduct1$:(Lscalaz/Divisible;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #210                // InterfaceMethod scalaz/Divisible.xproduct2$:(Lscalaz/Divisible;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #217                // InterfaceMethod scalaz/Divisible.xproduct3$:(Lscalaz/Divisible;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #224                // InterfaceMethod scalaz/Divisible.xproduct4$:(Lscalaz/Divisible;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public scalaz.Divisible<scalaz.Order>.DivisibleLaw divisibleLaw();
    Code:
       0: aload_0
       1: invokestatic  #232                // InterfaceMethod scalaz/Divisible.divisibleLaw$:(Lscalaz/Divisible;)Lscalaz/Divisible$DivisibleLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #239                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #244                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #250                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #256                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #262                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public final java.lang.Object divide(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #269                // InterfaceMethod scalaz/Divide.divide$:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object divide1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #275                // InterfaceMethod scalaz/Divide.divide1$:(Lscalaz/Divide;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object divide3(scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #280                // InterfaceMethod scalaz/Divide.divide3$:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object divide4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #285                // InterfaceMethod scalaz/Divide.divide4$:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #291                // InterfaceMethod scalaz/Divide.tuple2$:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object dividing1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #297                // InterfaceMethod scalaz/Divide.dividing1$:(Lscalaz/Divide;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object dividing2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #302                // InterfaceMethod scalaz/Divide.dividing2$:(Lscalaz/Divide;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object dividing3(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #307                // InterfaceMethod scalaz/Divide.dividing3$:(Lscalaz/Divide;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object dividing4(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #312                // InterfaceMethod scalaz/Divide.dividing4$:(Lscalaz/Divide;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public scalaz.Divide<scalaz.Order>.DivideLaw divideLaw();
    Code:
       0: aload_0
       1: invokestatic  #319                // InterfaceMethod scalaz/Divide.divideLaw$:(Lscalaz/Divide;)Lscalaz/Divide$DivideLaw;
       4: areturn

  public java.lang.Object narrow(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #326                // InterfaceMethod scalaz/Contravariant.narrow$:(Lscalaz/Contravariant;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #333                // InterfaceMethod scalaz/Contravariant.xmap$:(Lscalaz/Contravariant;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #341                // InterfaceMethod scalaz/Contravariant.compose$:(Lscalaz/Contravariant;Lscalaz/Contravariant;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #349                // InterfaceMethod scalaz/Contravariant.icompose$:(Lscalaz/Contravariant;Lscalaz/Functor;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Contravariant<?> product(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #357                // InterfaceMethod scalaz/Contravariant.product$:(Lscalaz/Contravariant;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public scalaz.Contravariant<scalaz.Order>.ContravariantLaw contravariantLaw();
    Code:
       0: aload_0
       1: invokestatic  #364                // InterfaceMethod scalaz/Contravariant.contravariantLaw$:(Lscalaz/Contravariant;)Lscalaz/Contravariant$ContravariantLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #372                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #380                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scalaz.Order>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #388                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.DecidableSyntax<scalaz.Order> decidableSyntax();
    Code:
       0: aload_0
       1: getfield      #392                // Field decidableSyntax:Lscalaz/syntax/DecidableSyntax;
       4: areturn

  public void scalaz$Decidable$_setter_$decidableSyntax_$eq(scalaz.syntax.DecidableSyntax<scalaz.Order>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #392                // Field decidableSyntax:Lscalaz/syntax/DecidableSyntax;
       5: return

  public scalaz.syntax.InvariantAltSyntax<scalaz.Order> invariantAltSyntax();
    Code:
       0: aload_0
       1: getfield      #400                // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       4: areturn

  public void scalaz$InvariantAlt$_setter_$invariantAltSyntax_$eq(scalaz.syntax.InvariantAltSyntax<scalaz.Order>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #400                // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       5: return

  public scalaz.syntax.DivisibleSyntax<scalaz.Order> divisibleSyntax();
    Code:
       0: aload_0
       1: getfield      #407                // Field divisibleSyntax:Lscalaz/syntax/DivisibleSyntax;
       4: areturn

  public void scalaz$Divisible$_setter_$divisibleSyntax_$eq(scalaz.syntax.DivisibleSyntax<scalaz.Order>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #407                // Field divisibleSyntax:Lscalaz/syntax/DivisibleSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scalaz.Order> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #414                // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scalaz.Order>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #414                // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.DivideSyntax<scalaz.Order> divideSyntax();
    Code:
       0: aload_0
       1: getfield      #421                // Field divideSyntax:Lscalaz/syntax/DivideSyntax;
       4: areturn

  public void scalaz$Divide$_setter_$divideSyntax_$eq(scalaz.syntax.DivideSyntax<scalaz.Order>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #421                // Field divideSyntax:Lscalaz/syntax/DivideSyntax;
       5: return

  public scalaz.syntax.ContravariantSyntax<scalaz.Order> contravariantSyntax();
    Code:
       0: aload_0
       1: getfield      #428                // Field contravariantSyntax:Lscalaz/syntax/ContravariantSyntax;
       4: areturn

  public void scalaz$Contravariant$_setter_$contravariantSyntax_$eq(scalaz.syntax.ContravariantSyntax<scalaz.Order>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #428                // Field contravariantSyntax:Lscalaz/syntax/ContravariantSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scalaz.Order> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #435                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scalaz.Order>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #435                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A, B> scalaz.Order<B> contramap(scalaz.Order<A>, scala.Function1<B, A>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #445,  2          // InterfaceMethod scalaz/Order.contramap:(Lscala/Function1;)Lscalaz/Order;
       7: areturn

  public <Z, A1, A2> scalaz.Order<Z> choose2(scala.Function0<scalaz.Order<A1>>, scala.Function0<scalaz.Order<A2>>, scala.Function1<Z, scalaz.$bslash$div<A1, A2>>);
    Code:
       0: getstatic     #457                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: pop
       4: aload_3
       5: aload_1
       6: aload_2
       7: invokedynamic #479,  0            // InvokeDynamic #0:apply:(Lscala/Function1;Lscala/Function0;Lscala/Function0;)Lscala/Function2;
      12: astore        4
      14: new           #43                 // class scalaz/Order$$anonfun$order$2
      17: dup
      18: aload         4
      20: invokespecial #483                // Method scalaz/Order$$anonfun$order$2."<init>":(Lscala/Function2;)V
      23: areturn

  public <A> scalaz.Order<A> conquer();
    Code:
       0: getstatic     #457                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: pop
       4: invokedynamic #496,  0            // InvokeDynamic #1:apply:()Lscala/Function2;
       9: astore_1
      10: new           #43                 // class scalaz/Order$$anonfun$order$2
      13: dup
      14: aload_1
      15: invokespecial #483                // Method scalaz/Order$$anonfun$order$2."<init>":(Lscala/Function2;)V
      18: areturn

  public <A1, A2, Z> scalaz.Order<Z> divide2(scala.Function0<scalaz.Order<A1>>, scala.Function0<scalaz.Order<A2>>, scala.Function1<Z, scala.Tuple2<A1, A2>>);
    Code:
       0: getstatic     #457                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: pop
       4: aload_3
       5: aload_1
       6: aload_2
       7: invokedynamic #503,  0            // InvokeDynamic #2:apply:(Lscala/Function1;Lscala/Function0;Lscala/Function0;)Lscala/Function2;
      12: astore        4
      14: new           #43                 // class scalaz/Order$$anonfun$order$2
      17: dup
      18: aload         4
      20: invokespecial #483                // Method scalaz/Order$$anonfun$order$2."<init>":(Lscala/Function2;)V
      23: areturn

  public java.lang.Object divide2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #505                // Method divide2:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Lscalaz/Order;
       7: areturn

  public java.lang.Object conquer();
    Code:
       0: aload_0
       1: invokevirtual #508                // Method conquer:()Lscalaz/Order;
       4: areturn

  public java.lang.Object choose2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #510                // Method choose2:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Lscalaz/Order;
       7: areturn

  public java.lang.Object contramap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #45                 // class scalaz/Order
       5: aload_2
       6: invokevirtual #512                // Method contramap:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       9: areturn

  public static final scalaz.Ordering $anonfun$choose2$1(scala.Function1, scala.Function0, scala.Function0, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_3
       2: invokeinterface #522,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #524                // class scalaz/$bslash$div
      10: astore        5
      12: aload         5
      14: instanceof    #526                // class scalaz/$minus$bslash$div
      17: ifeq          84
      20: aload         5
      22: checkcast     #526                // class scalaz/$minus$bslash$div
      25: invokevirtual #529                // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      28: astore        6
      30: aload_0
      31: aload         4
      33: invokeinterface #522,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #524                // class scalaz/$bslash$div
      41: astore        7
      43: aload         7
      45: instanceof    #526                // class scalaz/$minus$bslash$div
      48: ifeq          80
      51: aload         7
      53: checkcast     #526                // class scalaz/$minus$bslash$div
      56: invokevirtual #529                // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      59: astore        8
      61: aload_1
      62: invokeinterface #533,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      67: checkcast     #45                 // class scalaz/Order
      70: aload         6
      72: aload         8
      74: invokeinterface #535,  3          // InterfaceMethod scalaz/Order.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      79: areturn
      80: getstatic     #538                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      83: areturn
      84: aload         5
      86: instanceof    #540                // class scalaz/$bslash$div$minus
      89: ifeq          156
      92: aload         5
      94: checkcast     #540                // class scalaz/$bslash$div$minus
      97: invokevirtual #542                // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
     100: astore        9
     102: aload_0
     103: aload         4
     105: invokeinterface #522,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     110: checkcast     #524                // class scalaz/$bslash$div
     113: astore        10
     115: aload         10
     117: instanceof    #540                // class scalaz/$bslash$div$minus
     120: ifeq          152
     123: aload         10
     125: checkcast     #540                // class scalaz/$bslash$div$minus
     128: invokevirtual #542                // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
     131: astore        11
     133: aload_2
     134: invokeinterface #533,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
     139: checkcast     #45                 // class scalaz/Order
     142: aload         9
     144: aload         11
     146: invokeinterface #535,  3          // InterfaceMethod scalaz/Order.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
     151: areturn
     152: getstatic     #545                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
     155: areturn
     156: new           #547                // class scala/MatchError
     159: dup
     160: aload         5
     162: invokespecial #550                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     165: athrow

  public static final scalaz.Ordering$EQ$ $anonfun$conquer$1(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #556                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
       3: areturn

  public static final scalaz.Ordering $anonfun$divide2$1(scala.Function1, scala.Function0, scala.Function0, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_3
       2: invokeinterface #522,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #561                // class scala/Tuple2
      10: astore        5
      12: aload         5
      14: ifnull        34
      17: aload         5
      19: invokevirtual #564                // Method scala/Tuple2._1:()Ljava/lang/Object;
      22: astore        6
      24: aload         5
      26: invokevirtual #567                // Method scala/Tuple2._2:()Ljava/lang/Object;
      29: astore        7
      31: goto          43
      34: new           #547                // class scala/MatchError
      37: dup
      38: aconst_null
      39: invokespecial #550                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      42: athrow
      43: aload_0
      44: aload         4
      46: invokeinterface #522,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      51: checkcast     #561                // class scala/Tuple2
      54: astore        8
      56: aload         8
      58: ifnull        78
      61: aload         8
      63: invokevirtual #564                // Method scala/Tuple2._1:()Ljava/lang/Object;
      66: astore        9
      68: aload         8
      70: invokevirtual #567                // Method scala/Tuple2._2:()Ljava/lang/Object;
      73: astore        10
      75: goto          87
      78: new           #547                // class scala/MatchError
      81: dup
      82: aconst_null
      83: invokespecial #550                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      86: athrow
      87: aload_1
      88: invokeinterface #533,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      93: checkcast     #45                 // class scalaz/Order
      96: aload         6
      98: aload         9
     100: invokeinterface #570,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
     105: astore        11
     107: getstatic     #556                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
     110: aload         11
     112: invokevirtual #574                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     115: ifeq          137
     118: aload_2
     119: invokeinterface #533,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
     124: checkcast     #45                 // class scalaz/Order
     127: aload         7
     129: aload         10
     131: invokeinterface #570,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
     136: areturn
     137: aload         11
     139: areturn

  public scalaz.Order$OrderDecidableInstance();
    Code:
       0: aload_0
       1: invokespecial #581                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #585                // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #588                // InterfaceMethod scalaz/Contravariant.$init$:(Lscalaz/Contravariant;)V
      12: aload_0
      13: invokestatic  #591                // InterfaceMethod scalaz/Divide.$init$:(Lscalaz/Divide;)V
      16: aload_0
      17: invokestatic  #594                // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      20: aload_0
      21: invokestatic  #597                // InterfaceMethod scalaz/Divisible.$init$:(Lscalaz/Divisible;)V
      24: aload_0
      25: invokestatic  #600                // InterfaceMethod scalaz/InvariantAlt.$init$:(Lscalaz/InvariantAlt;)V
      28: aload_0
      29: invokestatic  #603                // InterfaceMethod scalaz/Decidable.$init$:(Lscalaz/Decidable;)V
      32: invokestatic  #608                // Method scala/runtime/Statics.releaseFence:()V
      35: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #620,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
