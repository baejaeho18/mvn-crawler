Compiled from "StrictTree.scala"
public class scalaz.StrictTree$ZipStackElem<A, B> implements scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>, scala.Product, java.io.Serializable {
  private final scala.Option<scalaz.StrictTree$ZipStackElem<A, B>> parent;

  private final scalaz.StrictTree<A> a;

  private final scalaz.StrictTree<B> b;

  private final scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> zippedSubIterator;

  private final scala.collection.mutable.Buffer<scalaz.StrictTree<scala.Tuple2<A, B>>> mappedSubForest;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #39                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public final boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #47                 // InterfaceMethod scala/collection/Iterator.hasDefiniteSize$:(Lscala/collection/Iterator;)Z
       4: ireturn

  public final scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> iterator();
    Code:
       0: aload_0
       1: invokestatic  #53                 // InterfaceMethod scala/collection/Iterator.iterator$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public scala.Option<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> nextOption();
    Code:
       0: aload_0
       1: invokestatic  #60                 // InterfaceMethod scala/collection/Iterator.nextOption$:(Lscala/collection/Iterator;)Lscala/Option;
       4: areturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #67                 // InterfaceMethod scala/collection/Iterator.contains$:(Lscala/collection/Iterator;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.BufferedIterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> buffered();
    Code:
       0: aload_0
       1: invokestatic  #75                 // InterfaceMethod scala/collection/Iterator.buffered$:(Lscala/collection/Iterator;)Lscala/collection/BufferedIterator;
       4: areturn

  public <B$> scala.collection.Iterator<B$> padTo(int, B$);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #83                 // InterfaceMethod scala/collection/Iterator.padTo$:(Lscala/collection/Iterator;ILjava/lang/Object;)Lscala/collection/Iterator;
       6: areturn

  public scala.Tuple2<scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>, scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>> partition(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #92                 // InterfaceMethod scala/collection/Iterator.partition$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <B$> scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>.GroupedIterator<B$> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #101                // InterfaceMethod scala/collection/Iterator.grouped$:(Lscala/collection/Iterator;I)Lscala/collection/Iterator$GroupedIterator;
       5: areturn

  public <B$> scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>.GroupedIterator<B$> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #109                // InterfaceMethod scala/collection/Iterator.sliding$:(Lscala/collection/Iterator;II)Lscala/collection/Iterator$GroupedIterator;
       6: areturn

  public <B$> int sliding$default$2();
    Code:
       0: aload_0
       1: invokestatic  #116                // InterfaceMethod scala/collection/Iterator.sliding$default$2$:(Lscala/collection/Iterator;)I
       4: ireturn

  public <B$> scala.collection.Iterator<B$> scanLeft(B$, scala.Function2<B$, scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #125                // InterfaceMethod scala/collection/Iterator.scanLeft$:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public <B$> scala.collection.Iterator<B$> scanRight(B$, scala.Function2<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #131                // InterfaceMethod scala/collection/Iterator.scanRight$:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public int indexWhere(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #139                // InterfaceMethod scala/collection/Iterator.indexWhere$:(Lscala/collection/Iterator;Lscala/Function1;I)I
       6: ireturn

  public int indexWhere$default$2();
    Code:
       0: aload_0
       1: invokestatic  #143                // InterfaceMethod scala/collection/Iterator.indexWhere$default$2$:(Lscala/collection/Iterator;)I
       4: ireturn

  public <B$> int indexOf(B$);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #150                // InterfaceMethod scala/collection/Iterator.indexOf$:(Lscala/collection/Iterator;Ljava/lang/Object;)I
       5: ireturn

  public <B$> int indexOf(B$, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #155                // InterfaceMethod scala/collection/Iterator.indexOf$:(Lscala/collection/Iterator;Ljava/lang/Object;I)I
       6: ireturn

  public final int length();
    Code:
       0: aload_0
       1: invokestatic  #159                // InterfaceMethod scala/collection/Iterator.length$:(Lscala/collection/Iterator;)I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #163                // InterfaceMethod scala/collection/Iterator.isEmpty$:(Lscala/collection/Iterator;)Z
       4: ireturn

  public scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> filter(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #170                // InterfaceMethod scala/collection/Iterator.filter$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> filterNot(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #174                // InterfaceMethod scala/collection/Iterator.filterNot$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> filterImpl(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #182                // InterfaceMethod scala/collection/Iterator.filterImpl$:(Lscala/collection/Iterator;Lscala/Function1;Z)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> withFilter(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #187                // InterfaceMethod scala/collection/Iterator.withFilter$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B$> scala.collection.Iterator<B$> collect(scala.PartialFunction<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #195                // InterfaceMethod scala/collection/Iterator.collect$:(Lscala/collection/Iterator;Lscala/PartialFunction;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> distinct();
    Code:
       0: aload_0
       1: invokestatic  #200                // InterfaceMethod scala/collection/Iterator.distinct$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public <B$> scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> distinctBy(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #206                // InterfaceMethod scala/collection/Iterator.distinctBy$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B$> scala.collection.Iterator<B$> map(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #211                // InterfaceMethod scala/collection/Iterator.map$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B$> scala.collection.Iterator<B$> flatMap(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, scala.collection.IterableOnce<B$>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // InterfaceMethod scala/collection/Iterator.flatMap$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B$> scala.collection.Iterator<B$> flatten(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, scala.collection.IterableOnce<B$>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #221                // InterfaceMethod scala/collection/Iterator.flatten$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B$> scala.collection.Iterator<B$> concat(scala.Function0<scala.collection.IterableOnce<B$>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #229                // InterfaceMethod scala/collection/Iterator.concat$:(Lscala/collection/Iterator;Lscala/Function0;)Lscala/collection/Iterator;
       5: areturn

  public final <B$> scala.collection.Iterator<B$> $plus$plus(scala.Function0<scala.collection.IterableOnce<B$>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #234                // InterfaceMethod scala/collection/Iterator.$plus$plus$:(Lscala/collection/Iterator;Lscala/Function0;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #242                // InterfaceMethod scala/collection/Iterator.take$:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> takeWhile(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #246                // InterfaceMethod scala/collection/Iterator.takeWhile$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #250                // InterfaceMethod scala/collection/Iterator.drop$:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> dropWhile(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #254                // InterfaceMethod scala/collection/Iterator.dropWhile$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>, scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>> span(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #258                // InterfaceMethod scala/collection/Iterator.span$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #266                // InterfaceMethod scala/collection/Iterator.slice$:(Lscala/collection/Iterator;II)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> sliceIterator(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #270                // InterfaceMethod scala/collection/Iterator.sliceIterator$:(Lscala/collection/Iterator;II)Lscala/collection/Iterator;
       6: areturn

  public <B$> scala.collection.Iterator<scala.Tuple2<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>> zip(scala.collection.IterableOnce<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #278                // InterfaceMethod scala/collection/Iterator.zip$:(Lscala/collection/Iterator;Lscala/collection/IterableOnce;)Lscala/collection/Iterator;
       5: areturn

  public <A1, B$> scala.collection.Iterator<scala.Tuple2<A1, B$>> zipAll(scala.collection.IterableOnce<B$>, A1, B$);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #288                // InterfaceMethod scala/collection/Iterator.zipAll$:(Lscala/collection/Iterator;Lscala/collection/IterableOnce;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/Iterator;
       7: areturn

  public scala.collection.Iterator<scala.Tuple2<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>> zipWithIndex();
    Code:
       0: aload_0
       1: invokestatic  #293                // InterfaceMethod scala/collection/Iterator.zipWithIndex$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public <B$> boolean sameElements(scala.collection.IterableOnce<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #300                // InterfaceMethod scala/collection/Iterator.sameElements$:(Lscala/collection/Iterator;Lscala/collection/IterableOnce;)Z
       5: ireturn

  public scala.Tuple2<scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>, scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>> duplicate();
    Code:
       0: aload_0
       1: invokestatic  #307                // InterfaceMethod scala/collection/Iterator.duplicate$:(Lscala/collection/Iterator;)Lscala/Tuple2;
       4: areturn

  public <B$> scala.collection.Iterator<B$> patch(int, scala.collection.Iterator<B$>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #316                // InterfaceMethod scala/collection/Iterator.patch$:(Lscala/collection/Iterator;ILscala/collection/Iterator;I)Lscala/collection/Iterator;
       7: areturn

  public <U> scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> tapEach(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #321                // InterfaceMethod scala/collection/Iterator.tapEach$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #327                // InterfaceMethod scala/collection/Iterator.toString$:(Lscala/collection/Iterator;)Ljava/lang/String;
       4: areturn

  public scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> seq();
    Code:
       0: aload_0
       1: invokestatic  #331                // InterfaceMethod scala/collection/Iterator.seq$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public scala.Tuple2<scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>, scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #340                // InterfaceMethod scala/collection/IterableOnceOps.splitAt$:(Lscala/collection/IterableOnceOps;I)Lscala/Tuple2;
       5: areturn

  public boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #345                // InterfaceMethod scala/collection/IterableOnceOps.isTraversableAgain$:(Lscala/collection/IterableOnceOps;)Z
       4: ireturn

  public <U> void foreach(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #352                // InterfaceMethod scala/collection/IterableOnceOps.foreach$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)V
       5: return

  public boolean forall(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #359                // InterfaceMethod scala/collection/IterableOnceOps.forall$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #363                // InterfaceMethod scala/collection/IterableOnceOps.exists$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)Z
       5: ireturn

  public int count(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #370                // InterfaceMethod scala/collection/IterableOnceOps.count$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)I
       5: ireturn

  public scala.Option<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> find(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #377                // InterfaceMethod scala/collection/IterableOnceOps.find$:(Lscala/collection/IterableOnceOps;Lscala/Function1;)Lscala/Option;
       5: areturn

  public <B$> B$ foldLeft(B$, scala.Function2<B$, scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #384                // InterfaceMethod scala/collection/IterableOnceOps.foldLeft$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B$> B$ foldRight(B$, scala.Function2<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #389                // InterfaceMethod scala/collection/IterableOnceOps.foldRight$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public final <B$> B$ $div$colon(B$, scala.Function2<B$, scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #393                // InterfaceMethod scala/collection/IterableOnceOps.$div$colon$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public final <B$> B$ $colon$bslash(B$, scala.Function2<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #397                // InterfaceMethod scala/collection/IterableOnceOps.$colon$bslash$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #402                // InterfaceMethod scala/collection/IterableOnceOps.fold$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B$> B$ reduce(scala.Function2<B$, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #409                // InterfaceMethod scala/collection/IterableOnceOps.reduce$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B$> scala.Option<B$> reduceOption(scala.Function2<B$, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #416                // InterfaceMethod scala/collection/IterableOnceOps.reduceOption$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B$> B$ reduceLeft(scala.Function2<B$, scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #421                // InterfaceMethod scala/collection/IterableOnceOps.reduceLeft$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B$> B$ reduceRight(scala.Function2<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #426                // InterfaceMethod scala/collection/IterableOnceOps.reduceRight$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B$> scala.Option<B$> reduceLeftOption(scala.Function2<B$, scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #431                // InterfaceMethod scala/collection/IterableOnceOps.reduceLeftOption$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B$> scala.Option<B$> reduceRightOption(scala.Function2<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #436                // InterfaceMethod scala/collection/IterableOnceOps.reduceRightOption$:(Lscala/collection/IterableOnceOps;Lscala/Function2;)Lscala/Option;
       5: areturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #440                // InterfaceMethod scala/collection/IterableOnceOps.nonEmpty$:(Lscala/collection/IterableOnceOps;)Z
       4: ireturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #444                // InterfaceMethod scala/collection/IterableOnceOps.size$:(Lscala/collection/IterableOnceOps;)I
       4: ireturn

  public final <B$> void copyToBuffer(scala.collection.mutable.Buffer<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #452                // InterfaceMethod scala/collection/IterableOnceOps.copyToBuffer$:(Lscala/collection/IterableOnceOps;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B$> int copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #458                // InterfaceMethod scala/collection/IterableOnceOps.copyToArray$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;)I
       5: ireturn

  public <B$> int copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #463                // InterfaceMethod scala/collection/IterableOnceOps.copyToArray$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;I)I
       6: ireturn

  public <B$> int copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #468                // InterfaceMethod scala/collection/IterableOnceOps.copyToArray$:(Lscala/collection/IterableOnceOps;Ljava/lang/Object;II)I
       7: ireturn

  public <B$> B$ sum(scala.math.Numeric<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #476                // InterfaceMethod scala/collection/IterableOnceOps.sum$:(Lscala/collection/IterableOnceOps;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B$> B$ product(scala.math.Numeric<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #481                // InterfaceMethod scala/collection/IterableOnceOps.product$:(Lscala/collection/IterableOnceOps;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object min(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #488                // InterfaceMethod scala/collection/IterableOnceOps.min$:(Lscala/collection/IterableOnceOps;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B$> scala.Option<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> minOption(scala.math.Ordering<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #496                // InterfaceMethod scala/collection/IterableOnceOps.minOption$:(Lscala/collection/IterableOnceOps;Lscala/math/Ordering;)Lscala/Option;
       5: areturn

  public java.lang.Object max(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #500                // InterfaceMethod scala/collection/IterableOnceOps.max$:(Lscala/collection/IterableOnceOps;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B$> scala.Option<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> maxOption(scala.math.Ordering<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #504                // InterfaceMethod scala/collection/IterableOnceOps.maxOption$:(Lscala/collection/IterableOnceOps;Lscala/math/Ordering;)Lscala/Option;
       5: areturn

  public java.lang.Object maxBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #510                // InterfaceMethod scala/collection/IterableOnceOps.maxBy$:(Lscala/collection/IterableOnceOps;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B$> scala.Option<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> maxByOption(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>, scala.math.Ordering<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #517                // InterfaceMethod scala/collection/IterableOnceOps.maxByOption$:(Lscala/collection/IterableOnceOps;Lscala/Function1;Lscala/math/Ordering;)Lscala/Option;
       6: areturn

  public java.lang.Object minBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #521                // InterfaceMethod scala/collection/IterableOnceOps.minBy$:(Lscala/collection/IterableOnceOps;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B$> scala.Option<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> minByOption(scala.Function1<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>, scala.math.Ordering<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #525                // InterfaceMethod scala/collection/IterableOnceOps.minByOption$:(Lscala/collection/IterableOnceOps;Lscala/Function1;Lscala/math/Ordering;)Lscala/Option;
       6: areturn

  public <B$> scala.Option<B$> collectFirst(scala.PartialFunction<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #532                // InterfaceMethod scala/collection/IterableOnceOps.collectFirst$:(Lscala/collection/IterableOnceOps;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B$> B$ aggregate(scala.Function0<B$>, scala.Function2<B$, scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$>, scala.Function2<B$, B$, B$>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #541                // InterfaceMethod scala/collection/IterableOnceOps.aggregate$:(Lscala/collection/IterableOnceOps;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B$> boolean corresponds(scala.collection.IterableOnce<B$>, scala.Function2<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B$, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #548                // InterfaceMethod scala/collection/IterableOnceOps.corresponds$:(Lscala/collection/IterableOnceOps;Lscala/collection/IterableOnce;Lscala/Function2;)Z
       6: ireturn

  public final java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #556                // InterfaceMethod scala/collection/IterableOnceOps.mkString$:(Lscala/collection/IterableOnceOps;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public final java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #561                // InterfaceMethod scala/collection/IterableOnceOps.mkString$:(Lscala/collection/IterableOnceOps;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public final java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #564                // InterfaceMethod scala/collection/IterableOnceOps.mkString$:(Lscala/collection/IterableOnceOps;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #570                // InterfaceMethod scala/collection/IterableOnceOps.addString$:(Lscala/collection/IterableOnceOps;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public final scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #575                // InterfaceMethod scala/collection/IterableOnceOps.addString$:(Lscala/collection/IterableOnceOps;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public final scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #579                // InterfaceMethod scala/collection/IterableOnceOps.addString$:(Lscala/collection/IterableOnceOps;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public <C1> C1 to(scala.collection.Factory<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, C1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #587                // InterfaceMethod scala/collection/IterableOnceOps.to$:(Lscala/collection/IterableOnceOps;Lscala/collection/Factory;)Ljava/lang/Object;
       5: areturn

  public final scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #593                // InterfaceMethod scala/collection/IterableOnceOps.toIterator$:(Lscala/collection/IterableOnceOps;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.immutable.List<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toList();
    Code:
       0: aload_0
       1: invokestatic  #600                // InterfaceMethod scala/collection/IterableOnceOps.toList$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.Vector<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toVector();
    Code:
       0: aload_0
       1: invokestatic  #607                // InterfaceMethod scala/collection/IterableOnceOps.toVector$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/Vector;
       4: areturn

  public <K, V> scala.collection.immutable.Map<K, V> toMap(scala.$less$colon$less<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, scala.Tuple2<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #614                // InterfaceMethod scala/collection/IterableOnceOps.toMap$:(Lscala/collection/IterableOnceOps;Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public <B$> scala.collection.immutable.Set<B$> toSet();
    Code:
       0: aload_0
       1: invokestatic  #622                // InterfaceMethod scala/collection/IterableOnceOps.toSet$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Seq<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #629                // InterfaceMethod scala/collection/IterableOnceOps.toSeq$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/Seq;
       4: areturn

  public scala.collection.immutable.IndexedSeq<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #636                // InterfaceMethod scala/collection/IterableOnceOps.toIndexedSeq$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public final scala.collection.immutable.Stream<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toStream();
    Code:
       0: aload_0
       1: invokestatic  #643                // InterfaceMethod scala/collection/IterableOnceOps.toStream$:(Lscala/collection/IterableOnceOps;)Lscala/collection/immutable/Stream;
       4: areturn

  public final <B$> scala.collection.mutable.Buffer<B$> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #650                // InterfaceMethod scala/collection/IterableOnceOps.toBuffer$:(Lscala/collection/IterableOnceOps;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B$> java.lang.Object toArray(scala.reflect.ClassTag<B$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #658                // InterfaceMethod scala/collection/IterableOnceOps.toArray$:(Lscala/collection/IterableOnceOps;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterable<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> reversed();
    Code:
       0: aload_0
       1: invokestatic  #666                // InterfaceMethod scala/collection/IterableOnceOps.reversed$:(Lscala/collection/IterableOnceOps;)Lscala/collection/Iterable;
       4: areturn

  public <S extends scala.collection.Stepper<?>> S stepper(scala.collection.StepperShape<scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #676                // InterfaceMethod scala/collection/IterableOnce.stepper$:(Lscala/collection/IterableOnce;Lscala/collection/StepperShape;)Lscala/collection/Stepper;
       5: areturn

  public int knownSize();
    Code:
       0: aload_0
       1: invokestatic  #682                // InterfaceMethod scala/collection/IterableOnce.knownSize$:(Lscala/collection/IterableOnce;)I
       4: ireturn

  public scala.Option<scalaz.StrictTree$ZipStackElem<A, B>> parent();
    Code:
       0: aload_0
       1: getfield      #685                // Field parent:Lscala/Option;
       4: areturn

  public scalaz.StrictTree<A> a();
    Code:
       0: aload_0
       1: getfield      #689                // Field a:Lscalaz/StrictTree;
       4: areturn

  public scalaz.StrictTree<B> b();
    Code:
       0: aload_0
       1: getfield      #692                // Field b:Lscalaz/StrictTree;
       4: areturn

  public scala.collection.mutable.Buffer<scalaz.StrictTree<scala.Tuple2<A, B>>> mappedSubForest();
    Code:
       0: aload_0
       1: getfield      #695                // Field mappedSubForest:Lscala/collection/mutable/Buffer;
       4: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #698                // Field zippedSubIterator:Lscala/collection/Iterator;
       4: invokeinterface #700,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
       9: ireturn

  public scala.Tuple2<scalaz.StrictTree<A>, scalaz.StrictTree<B>> next();
    Code:
       0: aload_0
       1: getfield      #698                // Field zippedSubIterator:Lscala/collection/Iterator;
       4: invokeinterface #705,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
       9: checkcast     #707                // class scala/Tuple2
      12: areturn

  public <A, B> scalaz.StrictTree$ZipStackElem<A, B> copy(scala.Option<scalaz.StrictTree$ZipStackElem<A, B>>, scalaz.StrictTree<A>, scalaz.StrictTree<B>);
    Code:
       0: new           #2                  // class scalaz/StrictTree$ZipStackElem
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #714                // Method "<init>":(Lscala/Option;Lscalaz/StrictTree;Lscalaz/StrictTree;)V
      10: areturn

  public <A, B> scala.Option<scalaz.StrictTree$ZipStackElem<A, B>> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #718                // Method parent:()Lscala/Option;
       4: areturn

  public <A, B> scalaz.StrictTree<A> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #722                // Method a:()Lscalaz/StrictTree;
       4: areturn

  public <A, B> scalaz.StrictTree<B> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #726                // Method b:()Lscalaz/StrictTree;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #728                // String ZipStackElem
       3: areturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 2
                     0: 28
                     1: 33
                     2: 38
               default: 43
          }
      28: aload_0
      29: invokevirtual #718                // Method parent:()Lscala/Option;
      32: areturn
      33: aload_0
      34: invokevirtual #722                // Method a:()Lscalaz/StrictTree;
      37: areturn
      38: aload_0
      39: invokevirtual #726                // Method b:()Lscalaz/StrictTree;
      42: areturn
      43: iload_1
      44: invokestatic  #737                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      47: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #745                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #748                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/StrictTree$ZipStackElem
       4: ireturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 2
                     0: 28
                     1: 32
                     2: 36
               default: 40
          }
      28: ldc_w         #752                // String parent
      31: areturn
      32: ldc_w         #753                // String a
      35: areturn
      36: ldc_w         #754                // String b
      39: areturn
      40: iload_1
      41: invokestatic  #737                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      44: checkcast     #756                // class java/lang/String
      47: areturn

  public int hashCode();
    Code:
       0: getstatic     #745                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #761                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     123
       5: aload_1
       6: instanceof    #2                  // class scalaz/StrictTree$ZipStackElem
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ifeq          125
      20: aload_1
      21: checkcast     #2                  // class scalaz/StrictTree$ZipStackElem
      24: astore_2
      25: aload_0
      26: invokevirtual #718                // Method parent:()Lscala/Option;
      29: aload_2
      30: invokevirtual #718                // Method parent:()Lscala/Option;
      33: astore_3
      34: dup
      35: ifnonnull     46
      38: pop
      39: aload_3
      40: ifnull        53
      43: goto          125
      46: aload_3
      47: invokevirtual #764                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifeq          125
      53: aload_0
      54: invokevirtual #722                // Method a:()Lscalaz/StrictTree;
      57: aload_2
      58: invokevirtual #722                // Method a:()Lscalaz/StrictTree;
      61: astore        4
      63: dup
      64: ifnonnull     76
      67: pop
      68: aload         4
      70: ifnull        84
      73: goto          125
      76: aload         4
      78: invokevirtual #764                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      81: ifeq          125
      84: aload_0
      85: invokevirtual #726                // Method b:()Lscalaz/StrictTree;
      88: aload_2
      89: invokevirtual #726                // Method b:()Lscalaz/StrictTree;
      92: astore        5
      94: dup
      95: ifnonnull     107
      98: pop
      99: aload         5
     101: ifnull        115
     104: goto          125
     107: aload         5
     109: invokevirtual #764                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     112: ifeq          125
     115: aload_2
     116: aload_0
     117: invokevirtual #766                // Method canEqual:(Ljava/lang/Object;)Z
     120: ifeq          125
     123: iconst_1
     124: ireturn
     125: iconst_0
     126: ireturn

  public java.lang.Object tapEach(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #771                // Method tapEach:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object zipWithIndex();
    Code:
       0: aload_0
       1: invokevirtual #773                // Method zipWithIndex:()Lscala/collection/Iterator;
       4: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #776                // Method slice:(II)Lscala/collection/Iterator;
       6: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #778                // Method dropWhile:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #780                // Method drop:(I)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #782                // Method takeWhile:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #784                // Method take:(I)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #787                // Method flatten:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object flatMap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #789                // Method flatMap:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object map(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #791                // Method map:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object collect(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #794                // Method collect:(Lscala/PartialFunction;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #797                // Method filterNot:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #799                // Method filter:(Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object scanLeft(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #801                // Method scanLeft:(Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #803                // Method next:()Lscala/Tuple2;
       4: areturn

  public scalaz.StrictTree$ZipStackElem(scala.Option<scalaz.StrictTree$ZipStackElem<A, B>>, scalaz.StrictTree<A>, scalaz.StrictTree<B>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #685                // Field parent:Lscala/Option;
       5: aload_0
       6: aload_2
       7: putfield      #689                // Field a:Lscalaz/StrictTree;
      10: aload_0
      11: aload_3
      12: putfield      #692                // Field b:Lscalaz/StrictTree;
      15: aload_0
      16: invokespecial #807                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #811                // InterfaceMethod scala/collection/IterableOnce.$init$:(Lscala/collection/IterableOnce;)V
      23: aload_0
      24: invokestatic  #814                // InterfaceMethod scala/collection/IterableOnceOps.$init$:(Lscala/collection/IterableOnceOps;)V
      27: aload_0
      28: invokestatic  #817                // InterfaceMethod scala/collection/Iterator.$init$:(Lscala/collection/Iterator;)V
      31: aload_0
      32: invokestatic  #820                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      35: aload_0
      36: aload_2
      37: invokevirtual #823                // Method scalaz/StrictTree.subForest:()Lscala/collection/immutable/Vector;
      40: invokevirtual #827                // Method scala/collection/immutable/Vector.iterator:()Lscala/collection/Iterator;
      43: aload_3
      44: invokevirtual #823                // Method scalaz/StrictTree.subForest:()Lscala/collection/immutable/Vector;
      47: invokevirtual #827                // Method scala/collection/immutable/Vector.iterator:()Lscala/collection/Iterator;
      50: invokeinterface #829,  2          // InterfaceMethod scala/collection/Iterator.zip:(Lscala/collection/IterableOnce;)Lscala/collection/Iterator;
      55: putfield      #698                // Field zippedSubIterator:Lscala/collection/Iterator;
      58: aload_0
      59: getstatic     #834                // Field scala/collection/mutable/Buffer$.MODULE$:Lscala/collection/mutable/Buffer$;
      62: invokevirtual #838                // Method scala/collection/mutable/Buffer$.empty:()Lscala/collection/SeqOps;
      65: checkcast     #840                // class scala/collection/mutable/Buffer
      68: putfield      #695                // Field mappedSubForest:Lscala/collection/mutable/Buffer;
      71: return
}
