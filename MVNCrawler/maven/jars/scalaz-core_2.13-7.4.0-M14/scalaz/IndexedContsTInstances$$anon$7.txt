Compiled from "IndexedContsT.scala"
public final class scalaz.IndexedContsTInstances$$anon$7 implements scalaz.IndexedContsTContravariant<W, M, R, A> {
  private final scalaz.Functor<W> W;

  private final scalaz.Functor<M> M;

  private scalaz.syntax.ContravariantSyntax<?> contravariantSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  public <A, B> scalaz.IndexedContsT<W, R, B, M, A> contramap(scalaz.IndexedContsT<W, R, A, M, A>, scala.Function1<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #48                 // InterfaceMethod scalaz/IndexedContsTContravariant.contramap$:(Lscalaz/IndexedContsTContravariant;Lscalaz/IndexedContsT;Lscala/Function1;)Lscalaz/IndexedContsT;
       6: areturn

  public java.lang.Object narrow(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #59                 // InterfaceMethod scalaz/Contravariant.narrow$:(Lscalaz/Contravariant;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #68                 // InterfaceMethod scalaz/Contravariant.xmap$:(Lscalaz/Contravariant;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #76                 // InterfaceMethod scalaz/Contravariant.compose$:(Lscalaz/Contravariant;Lscalaz/Contravariant;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // InterfaceMethod scalaz/Contravariant.icompose$:(Lscalaz/Contravariant;Lscalaz/Functor;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Contravariant<?> product(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #91                 // InterfaceMethod scalaz/Contravariant.product$:(Lscalaz/Contravariant;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public scalaz.Contravariant<?>.ContravariantLaw contravariantLaw();
    Code:
       0: aload_0
       1: invokestatic  #98                 // InterfaceMethod scalaz/Contravariant.contravariantLaw$:(Lscalaz/Contravariant;)Lscalaz/Contravariant$ContravariantLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #106                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #114                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #122                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.ContravariantSyntax<?> contravariantSyntax();
    Code:
       0: aload_0
       1: getfield      #126                // Field contravariantSyntax:Lscalaz/syntax/ContravariantSyntax;
       4: areturn

  public void scalaz$Contravariant$_setter_$contravariantSyntax_$eq(scalaz.syntax.ContravariantSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #126                // Field contravariantSyntax:Lscalaz/syntax/ContravariantSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #134                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #134                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public scalaz.Functor<W> W();
    Code:
       0: aload_0
       1: getfield      #141                // Field W:Lscalaz/Functor;
       4: areturn

  public scalaz.Functor<M> M();
    Code:
       0: aload_0
       1: getfield      #144                // Field M:Lscalaz/Functor;
       4: areturn

  public java.lang.Object contramap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #148                // class scalaz/IndexedContsT
       5: aload_2
       6: invokevirtual #150                // Method contramap:(Lscalaz/IndexedContsT;Lscala/Function1;)Lscalaz/IndexedContsT;
       9: areturn

  public scalaz.IndexedContsTInstances$$anon$7(scalaz.IndexedContsTInstances, scalaz.Functor, scalaz.Functor);
    Code:
       0: aload_0
       1: invokespecial #158                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #162                // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #165                // InterfaceMethod scalaz/Contravariant.$init$:(Lscalaz/Contravariant;)V
      12: aload_0
      13: aload_2
      14: putfield      #141                // Field W:Lscalaz/Functor;
      17: aload_0
      18: aload_3
      19: putfield      #144                // Field M:Lscalaz/Functor;
      22: invokestatic  #170                // Method scala/runtime/Statics.releaseFence:()V
      25: return
}
