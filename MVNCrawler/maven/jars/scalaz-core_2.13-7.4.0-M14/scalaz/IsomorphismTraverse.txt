Compiled from "Traverse.scala"
public interface scalaz.IsomorphismTraverse<F, G> extends scalaz.Traverse<F>, scalaz.IsomorphismFunctor<F, G>, scalaz.IsomorphismFoldable<F, G> {
  public abstract scalaz.Traverse<G> G();

  public static scalaz.NaturalTransformation naturalTrans$(scalaz.IsomorphismTraverse);
    Code:
       0: aload_0
       1: invokespecial #35                 // InterfaceMethod naturalTrans:()Lscalaz/NaturalTransformation;
       4: areturn

  public default scalaz.NaturalTransformation<F, G> naturalTrans();
    Code:
       0: aload_0
       1: invokeinterface #41,  1           // InterfaceMethod iso:()Lscalaz/Isomorphisms$Iso2;
       6: invokeinterface #45,  1           // InterfaceMethod scalaz/Isomorphisms$Iso2.to:()Ljava/lang/Object;
      11: checkcast     #47                 // class scalaz/NaturalTransformation
      14: areturn

  public static java.lang.Object traverseImpl$(scalaz.IsomorphismTraverse, java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #57                 // InterfaceMethod traverseImpl:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public default <H, A, B> H traverseImpl(F, scala.Function1<A, H>, scalaz.Applicative<H>);
    Code:
       0: getstatic     #67                 // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       3: pop
       4: aload_3
       5: aload_0
       6: invokeinterface #69,  1           // InterfaceMethod G:()Lscalaz/Traverse;
      11: aload_0
      12: invokeinterface #41,  1           // InterfaceMethod iso:()Lscalaz/Isomorphisms$Iso2;
      17: invokeinterface #45,  1           // InterfaceMethod scalaz/Isomorphisms$Iso2.to:()Ljava/lang/Object;
      22: checkcast     #47                 // class scalaz/NaturalTransformation
      25: aload_1
      26: invokeinterface #73,  2           // InterfaceMethod scalaz/NaturalTransformation.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      31: aload_2
      32: aload_3
      33: invokeinterface #74,  4           // InterfaceMethod scalaz/Traverse.traverseImpl:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      38: aload_0
      39: invokeinterface #41,  1           // InterfaceMethod iso:()Lscalaz/Isomorphisms$Iso2;
      44: invokeinterface #77,  1           // InterfaceMethod scalaz/Isomorphisms$Iso2.from:()Ljava/lang/Object;
      49: checkcast     #47                 // class scalaz/NaturalTransformation
      52: invokedynamic #94,  0             // InvokeDynamic #0:apply:(Lscalaz/NaturalTransformation;)Lscala/Function1;
      57: invokeinterface #100,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      62: areturn

  public static java.lang.Object $anonfun$traverseImpl$1(scalaz.NaturalTransformation, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #73,  2           // InterfaceMethod scalaz/NaturalTransformation.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static void $init$(scalaz.IsomorphismTraverse);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #116,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
