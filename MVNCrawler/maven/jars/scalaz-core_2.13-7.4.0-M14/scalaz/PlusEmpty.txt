Compiled from "PlusEmpty.scala"
public interface scalaz.PlusEmpty<F> extends scalaz.Plus<F> {
  public static <M, N> scalaz.PlusEmpty<?> liftPlusEmpty(scalaz.Applicative<M>, scalaz.PlusEmpty<N>);
    Code:
       0: getstatic     #52                 // Field scalaz/PlusEmpty$.MODULE$:Lscalaz/PlusEmpty$;
       3: pop
       4: new           #38                 // class scalaz/PlusEmpty$$anon$7
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #56                 // Method scalaz/PlusEmpty$$anon$7."<init>":(Lscalaz/Applicative;Lscalaz/PlusEmpty;)V
      13: areturn

  public static <F, G> scalaz.PlusEmpty<F> fromIso(scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, F, G>, scalaz.PlusEmpty<G>);
    Code:
       0: getstatic     #52                 // Field scalaz/PlusEmpty$.MODULE$:Lscalaz/PlusEmpty$;
       3: pop
       4: new           #36                 // class scalaz/PlusEmpty$$anon$6
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #66                 // Method scalaz/PlusEmpty$$anon$6."<init>":(Lscalaz/PlusEmpty;Lscalaz/Isomorphisms$Iso2;)V
      13: areturn

  public static <F> scalaz.PlusEmpty<F> apply(scalaz.PlusEmpty<F>);
    Code:
       0: getstatic     #52                 // Field scalaz/PlusEmpty$.MODULE$:Lscalaz/PlusEmpty$;
       3: pop
       4: aload_0
       5: areturn

  public abstract void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<F>);

  public abstract <A> F empty();

  public static java.lang.Object unfoldlPsum$(scalaz.PlusEmpty, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #87                 // InterfaceMethod unfoldlPsum:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <S, A> F unfoldlPsum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, F>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #94,  3           // InterfaceMethod unfoldlPsumOpt:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       8: dup
       9: ifnonnull     14
      12: aconst_null
      13: athrow
      14: astore_3
      15: aload_3
      16: instanceof    #23                 // class scalaz/Maybe$Just
      19: ifeq          40
      22: aload_3
      23: checkcast     #23                 // class scalaz/Maybe$Just
      26: invokevirtual #97                 // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      29: astore        4
      31: getstatic     #102                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      34: aload         4
      36: invokevirtual #106                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
      39: areturn
      40: aload_3
      41: instanceof    #18                 // class scalaz/Maybe$Empty
      44: ifeq          54
      47: aload_0
      48: invokeinterface #108,  1          // InterfaceMethod empty:()Ljava/lang/Object;
      53: areturn
      54: new           #110                // class scala/MatchError
      57: dup
      58: aload_3
      59: invokespecial #113                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      62: athrow

  public static java.lang.Object unfoldrPsum$(scalaz.PlusEmpty, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #121                // InterfaceMethod unfoldrPsum:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <S, A> F unfoldrPsum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<F, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #125,  3          // InterfaceMethod unfoldrPsumOpt:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       8: dup
       9: ifnonnull     14
      12: aconst_null
      13: athrow
      14: astore_3
      15: aload_3
      16: instanceof    #23                 // class scalaz/Maybe$Just
      19: ifeq          40
      22: aload_3
      23: checkcast     #23                 // class scalaz/Maybe$Just
      26: invokevirtual #97                 // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      29: astore        4
      31: getstatic     #102                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      34: aload         4
      36: invokevirtual #106                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
      39: areturn
      40: aload_3
      41: instanceof    #18                 // class scalaz/Maybe$Empty
      44: ifeq          54
      47: aload_0
      48: invokeinterface #108,  1          // InterfaceMethod empty:()Ljava/lang/Object;
      53: areturn
      54: new           #110                // class scala/MatchError
      57: dup
      58: aload_3
      59: invokespecial #113                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      62: athrow

  public static scalaz.PlusEmpty compose$(scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: invokespecial #130                // InterfaceMethod compose:()Lscalaz/PlusEmpty;
       4: areturn

  public default <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: new           #26                 // class scalaz/PlusEmpty$$anon$1
       3: dup
       4: aload_0
       5: invokespecial #134                // Method scalaz/PlusEmpty$$anon$1."<init>":(Lscalaz/PlusEmpty;)V
       8: areturn

  public static scalaz.PlusEmpty product$(scalaz.PlusEmpty, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #140                // InterfaceMethod product:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public default <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: new           #28                 // class scalaz/PlusEmpty$$anon$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #144                // Method scalaz/PlusEmpty$$anon$2."<init>":(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)V
       9: areturn

  public static scalaz.Monoid monoid$(scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: invokespecial #150                // InterfaceMethod monoid:()Lscalaz/Monoid;
       4: areturn

  public default <A> scalaz.Monoid<F> monoid();
    Code:
       0: new           #30                 // class scalaz/PlusEmpty$$anon$3
       3: dup
       4: aload_0
       5: invokespecial #152                // Method scalaz/PlusEmpty$$anon$3."<init>":(Lscalaz/PlusEmpty;)V
       8: areturn

  public static scalaz.PlusEmpty$EmptyLaw plusEmptyLaw$(scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: invokespecial #158                // InterfaceMethod plusEmptyLaw:()Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public default scalaz.PlusEmpty<F>.EmptyLaw plusEmptyLaw();
    Code:
       0: new           #32                 // class scalaz/PlusEmpty$$anon$4
       3: dup
       4: aload_0
       5: invokespecial #160                // Method scalaz/PlusEmpty$$anon$4."<init>":(Lscalaz/PlusEmpty;)V
       8: areturn

  public abstract scalaz.syntax.PlusEmptySyntax<F> plusEmptySyntax();

  public static java.lang.Object $anonfun$unfoldlPsum$1(scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: invokeinterface #108,  1          // InterfaceMethod empty:()Ljava/lang/Object;
       6: areturn

  public static java.lang.Object $anonfun$unfoldrPsum$1(scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: invokeinterface #108,  1          // InterfaceMethod empty:()Ljava/lang/Object;
       6: areturn

  public static void $init$(scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: new           #34                 // class scalaz/PlusEmpty$$anon$5
       4: dup
       5: aload_0
       6: invokespecial #168                // Method scalaz/PlusEmpty$$anon$5."<init>":(Lscalaz/PlusEmpty;)V
       9: invokeinterface #170,  2          // InterfaceMethod scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq:(Lscalaz/syntax/PlusEmptySyntax;)V
      14: return
}
