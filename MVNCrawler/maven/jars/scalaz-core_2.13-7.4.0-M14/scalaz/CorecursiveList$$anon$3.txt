Compiled from "CorecursiveList.scala"
public final class scalaz.CorecursiveList$$anon$3 implements scalaz.NaturalTransformation<scala.collection.immutable.LinearSeq, scalaz.CorecursiveList> {
  public <E> scalaz.NaturalTransformation<E, scalaz.CorecursiveList> compose(scalaz.NaturalTransformation<E, scala.collection.immutable.LinearSeq>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #41                 // InterfaceMethod scalaz/NaturalTransformation.compose$:(Lscalaz/NaturalTransformation;Lscalaz/NaturalTransformation;)Lscalaz/NaturalTransformation;
       5: areturn

  public <H> scalaz.NaturalTransformation<scala.collection.immutable.LinearSeq, H> andThen(scalaz.NaturalTransformation<scalaz.CorecursiveList, H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #49                 // InterfaceMethod scalaz/NaturalTransformation.andThen$:(Lscalaz/NaturalTransformation;Lscalaz/NaturalTransformation;)Lscalaz/NaturalTransformation;
       5: areturn

  public <H> scalaz.NaturalTransformation<?, scalaz.CorecursiveList> or(scalaz.NaturalTransformation<H, scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #55                 // InterfaceMethod scalaz/NaturalTransformation.or$:(Lscalaz/NaturalTransformation;Lscalaz/NaturalTransformation;)Lscalaz/NaturalTransformation;
       5: areturn

  public <GG> scalaz.NaturalTransformation<scala.collection.immutable.LinearSeq, GG> widen(scalaz.LiskovF<scalaz.CorecursiveList, GG>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #63                 // InterfaceMethod scalaz/NaturalTransformation.widen$:(Lscalaz/NaturalTransformation;Lscalaz/LiskovF;)Lscalaz/NaturalTransformation;
       5: areturn

  public <FF> scalaz.NaturalTransformation<FF, scalaz.CorecursiveList> narrow(scalaz.LiskovF<FF, scala.collection.immutable.LinearSeq>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #69                 // InterfaceMethod scalaz/NaturalTransformation.narrow$:(Lscalaz/NaturalTransformation;Lscalaz/LiskovF;)Lscalaz/NaturalTransformation;
       5: areturn

  public <A> scalaz.CorecursiveList<A> apply(scala.collection.immutable.LinearSeq<A>);
    Code:
       0: getstatic     #77                 // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: pop
       4: invokedynamic #97,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
       9: astore_2
      10: new           #22                 // class scalaz/CorecursiveList$CorecursiveListImpl
      13: dup
      14: aload_1
      15: aload_2
      16: invokespecial #101                // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      19: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #106                // class scala/collection/immutable/LinearSeq
       5: invokevirtual #108                // Method apply:(Lscala/collection/immutable/LinearSeq;)Lscalaz/CorecursiveList;
       8: areturn

  public static final scalaz.Maybe $anonfun$apply$1(scala.collection.immutable.LinearSeq);
    Code:
       0: aload_0
       1: ifnull        72
       4: getstatic     #115                // Field scala/package$.MODULE$:Lscala/package$;
       7: invokevirtual #119                // Method scala/package$.$plus$colon:()Lscala/collection/package$$plus$colon$;
      10: aload_0
      11: invokevirtual #123                // Method scala/collection/package$$plus$colon$.unapply:(Lscala/collection/SeqOps;)Lscala/Option;
      14: astore_1
      15: aload_1
      16: invokevirtual #129                // Method scala/Option.isEmpty:()Z
      19: ifne          72
      22: aload_1
      23: invokevirtual #133                // Method scala/Option.get:()Ljava/lang/Object;
      26: checkcast     #135                // class scala/Tuple2
      29: invokevirtual #138                // Method scala/Tuple2._1:()Ljava/lang/Object;
      32: astore_2
      33: aload_1
      34: invokevirtual #133                // Method scala/Option.get:()Ljava/lang/Object;
      37: checkcast     #135                // class scala/Tuple2
      40: invokevirtual #141                // Method scala/Tuple2._2:()Ljava/lang/Object;
      43: checkcast     #106                // class scala/collection/immutable/LinearSeq
      46: astore_3
      47: getstatic     #146                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      50: pop
      51: new           #135                // class scala/Tuple2
      54: dup
      55: aload_3
      56: aload_2
      57: invokespecial #149                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      60: astore        4
      62: new           #32                 // class scalaz/Maybe$Just
      65: dup
      66: aload         4
      68: invokespecial #152                // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      71: areturn
      72: getstatic     #155                // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      75: invokevirtual #158                // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      78: areturn

  public scalaz.CorecursiveList$$anon$3();
    Code:
       0: aload_0
       1: invokespecial #163                // Method java/lang/Object."<init>":()V
       4: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #175,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
