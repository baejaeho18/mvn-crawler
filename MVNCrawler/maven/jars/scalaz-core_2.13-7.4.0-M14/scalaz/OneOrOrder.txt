Compiled from "OneOr.scala"
public interface scalaz.OneOrOrder<F, A> extends scalaz.Order<scalaz.OneOr<F, A>>, scalaz.OneOrEqual<F, A> {
  public abstract scalaz.Order<A> OA();

  public abstract scalaz.Order<F> OFA();

  public static scalaz.Ordering order$(scalaz.OneOrOrder, scalaz.OneOr, scalaz.OneOr);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #27                 // InterfaceMethod order:(Lscalaz/OneOr;Lscalaz/OneOr;)Lscalaz/Ordering;
       6: areturn

  public default scalaz.Ordering order(scalaz.OneOr<F, A>, scalaz.OneOr<F, A>);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method scalaz/OneOr.run:()Lscalaz/$bslash$div;
       4: aload_2
       5: invokevirtual #36                 // Method scalaz/OneOr.run:()Lscalaz/$bslash$div;
       8: aload_0
       9: invokeinterface #38,  1           // InterfaceMethod OFA:()Lscalaz/Order;
      14: aload_0
      15: invokeinterface #40,  1           // InterfaceMethod OA:()Lscalaz/Order;
      20: invokevirtual #46                 // Method scalaz/$bslash$div.compare:(Lscalaz/$bslash$div;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Ordering;
      23: areturn

  public static void $init$(scalaz.OneOrOrder);
    Code:
       0: return
}
