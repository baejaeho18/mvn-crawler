Compiled from "Functor.scala"
public interface scalaz.Functor<F> extends scalaz.InvariantFunctor<F> {
  public static scalaz.Functor<java.lang.Object> idInstance();
    Code:
       0: getstatic     #50                 // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: pop
       4: getstatic     #55                 // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
       7: invokevirtual #59                 // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      10: areturn

  public static <F, G> scalaz.Functor<F> fromIso(scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, F, G>, scalaz.Functor<G>);
    Code:
       0: getstatic     #50                 // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: pop
       4: new           #30                 // class scalaz/Functor$$anon$7
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #68                 // Method scalaz/Functor$$anon$7."<init>":(Lscalaz/Functor;Lscalaz/Isomorphisms$Iso2;)V
      13: areturn

  public abstract void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<F>);

  public abstract <A, B> F map(F, scala.Function1<A, B>);

  public static java.lang.Object xmap$(scalaz.Functor, java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #87                 // InterfaceMethod xmap:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public default <A, B> F xmap(F, scala.Function1<A, B>, scala.Function1<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #92,  3           // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       8: areturn

  public static java.lang.Object apply$(scalaz.Functor, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #98                 // InterfaceMethod apply:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <A, B> F apply(F, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #92,  3           // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       8: areturn

  public static scala.Function1 lift$(scalaz.Functor, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #104                // InterfaceMethod lift:(Lscala/Function1;)Lscala/Function1;
       5: areturn

  public default <A, B> scala.Function1<F, F> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #122,  0            // InvokeDynamic #0:apply:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       7: areturn

  public static java.lang.Object strengthL$(scalaz.Functor, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #129                // InterfaceMethod strengthL:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public default <A, B> F strengthL(A, F);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokedynamic #141,  0            // InvokeDynamic #1:apply:(Ljava/lang/Object;)Lscala/Function1;
       8: invokeinterface #92,  3           // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object strengthR$(scalaz.Functor, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #146                // InterfaceMethod strengthR:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public default <A, B> F strengthR(F, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #152,  0            // InvokeDynamic #2:apply:(Ljava/lang/Object;)Lscala/Function1;
       8: invokeinterface #92,  3           // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object mapply$(scalaz.Functor, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #156                // InterfaceMethod mapply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public default <A, B> F mapply(A, F);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokedynamic #163,  0            // InvokeDynamic #3:apply:(Ljava/lang/Object;)Lscala/Function1;
       8: invokeinterface #92,  3           // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object fpair$(scalaz.Functor, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #168                // InterfaceMethod fpair:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public default <A> F fpair(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #176,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
       7: invokeinterface #92,  3           // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      12: areturn

  public static java.lang.Object fproduct$(scalaz.Functor, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #180                // InterfaceMethod fproduct:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <A, B> F fproduct(F, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #187,  0            // InvokeDynamic #5:apply:(Lscala/Function1;)Lscala/Function1;
       8: invokeinterface #92,  3           // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object void$(scalaz.Functor, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #191                // InterfaceMethod void:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public default <A> F void(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #196,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
       7: invokeinterface #92,  3           // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      12: areturn

  public static java.lang.Object counzip$(scalaz.Functor, scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #202                // InterfaceMethod counzip:(Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public default <A, B> F counzip(scalaz.$bslash$div<F, F>);
    Code:
       0: aload_1
       1: instanceof    #206                // class scalaz/$minus$bslash$div
       4: ifeq          29
       7: aload_1
       8: checkcast     #206                // class scalaz/$minus$bslash$div
      11: invokevirtual #209                // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      14: astore_2
      15: aload_0
      16: aload_2
      17: getstatic     #214                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
      20: invokevirtual #217                // Method scalaz/$bslash$div$.left:()Lscala/Function1;
      23: invokeinterface #92,  3           // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      28: areturn
      29: aload_1
      30: instanceof    #219                // class scalaz/$bslash$div$minus
      33: ifeq          58
      36: aload_1
      37: checkcast     #219                // class scalaz/$bslash$div$minus
      40: invokevirtual #221                // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      43: astore_3
      44: aload_0
      45: aload_3
      46: getstatic     #214                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
      49: invokevirtual #224                // Method scalaz/$bslash$div$.right:()Lscala/Function1;
      52: invokeinterface #92,  3           // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      57: areturn
      58: new           #226                // class scala/MatchError
      61: dup
      62: aload_1
      63: invokespecial #229                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      66: athrow

  public static scalaz.Functor compose$(scalaz.Functor, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #237                // InterfaceMethod compose:(Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public default <G$> scalaz.Functor<?> compose(scalaz.Functor<G$>);
    Code:
       0: new           #18                 // class scalaz/Functor$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #241                // Method scalaz/Functor$$anon$1."<init>":(Lscalaz/Functor;Lscalaz/Functor;)V
       9: areturn

  public static scalaz.Contravariant icompose$(scalaz.Functor, scalaz.Contravariant);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #247                // InterfaceMethod icompose:(Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public default <G$> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G$>);
    Code:
       0: new           #20                 // class scalaz/Functor$$anon$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #252                // Method scalaz/Functor$$anon$2."<init>":(Lscalaz/Functor;Lscalaz/Contravariant;)V
       9: areturn

  public static scalaz.Bifunctor bicompose$(scalaz.Functor, scalaz.Bifunctor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #259                // InterfaceMethod bicompose:(Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public default <G$> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G$>);
    Code:
       0: new           #22                 // class scalaz/Functor$$anon$3
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #264                // Method scalaz/Functor$$anon$3."<init>":(Lscalaz/Functor;Lscalaz/Bifunctor;)V
       9: areturn

  public static scalaz.Functor product$(scalaz.Functor, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #268                // InterfaceMethod product:(Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public default <G$> scalaz.Functor<?> product(scalaz.Functor<G$>);
    Code:
       0: new           #24                 // class scalaz/Functor$$anon$4
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #269                // Method scalaz/Functor$$anon$4."<init>":(Lscalaz/Functor;Lscalaz/Functor;)V
       9: areturn

  public static java.lang.Object widen$(scalaz.Functor, java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #276                // InterfaceMethod widen:(Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public default <A, B> F widen(F, scalaz.Liskov<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #286,  0            // InvokeDynamic #7:apply:(Lscalaz/Liskov;)Lscala/Function1;
       8: invokeinterface #92,  3           // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public static scalaz.Functor$FunctorLaw functorLaw$(scalaz.Functor);
    Code:
       0: aload_0
       1: invokespecial #292                // InterfaceMethod functorLaw:()Lscalaz/Functor$FunctorLaw;
       4: areturn

  public default scalaz.Functor<F>.FunctorLaw functorLaw();
    Code:
       0: new           #26                 // class scalaz/Functor$$anon$5
       3: dup
       4: aload_0
       5: invokespecial #296                // Method scalaz/Functor$$anon$5."<init>":(Lscalaz/Functor;)V
       8: areturn

  public abstract scalaz.syntax.FunctorSyntax<F> functorSyntax();

  public static java.lang.Object $anonfun$lift$1(scalaz.Functor, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokeinterface #92,  3           // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       8: areturn

  public static scala.Tuple2 $anonfun$strengthL$1(java.lang.Object, java.lang.Object);
    Code:
       0: new           #303                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #306                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  public static scala.Tuple2 $anonfun$strengthR$1(java.lang.Object, java.lang.Object);
    Code:
       0: new           #303                // class scala/Tuple2
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #306                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  public static java.lang.Object $anonfun$mapply$1(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #313,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static scala.Tuple2 $anonfun$fpair$1(java.lang.Object);
    Code:
       0: new           #303                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_0
       6: invokespecial #306                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  public static scala.Tuple2 $anonfun$fproduct$1(scala.Function1, java.lang.Object);
    Code:
       0: new           #303                // class scala/Tuple2
       3: dup
       4: aload_1
       5: aload_0
       6: aload_1
       7: invokeinterface #313,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: invokespecial #306                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      15: areturn

  public static void $anonfun$void$1(java.lang.Object);
    Code:
       0: return

  public static java.lang.Object $anonfun$widen$1(scalaz.Liskov, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #320                // Method scalaz/Liskov.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public static void $init$(scalaz.Functor);
    Code:
       0: aload_0
       1: new           #28                 // class scalaz/Functor$$anon$6
       4: dup
       5: aload_0
       6: invokespecial #322                // Method scalaz/Functor$$anon$6."<init>":(Lscalaz/Functor;)V
       9: invokeinterface #324,  2          // InterfaceMethod scalaz$Functor$_setter_$functorSyntax_$eq:(Lscalaz/syntax/FunctorSyntax;)V
      14: return

  public static java.lang.Object $anonfun$void$1$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #326                // InterfaceMethod $anonfun$void$1:(Ljava/lang/Object;)V
       4: getstatic     #332                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       7: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #344,  0            // InvokeDynamic #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
