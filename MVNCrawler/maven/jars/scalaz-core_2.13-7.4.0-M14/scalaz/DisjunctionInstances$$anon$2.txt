Compiled from "Either.scala"
public final class scalaz.DisjunctionInstances$$anon$2 implements scalaz.Monoid<scalaz.$bslash$div<A, B>> {
  private scalaz.syntax.MonoidSyntax<scalaz.$bslash$div<A, B>> monoidSyntax;

  private scalaz.syntax.SemigroupSyntax<scalaz.$bslash$div<A, B>> semigroupSyntax;

  private final scalaz.Monoid evidence$6$1;

  private final scalaz.Semigroup evidence$5$1;

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #44                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #65                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #74                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #78                 // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #85                 // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #90                 // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #97                 // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #104                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scalaz.$bslash$div<A, B>>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #111                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #116                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<scalaz.$bslash$div<A, B>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.$bslash$div<A, B>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #123                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.$bslash$div<A, B>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.$bslash$div<A, B>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #128                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #135                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #142                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.$bslash$div<A, B>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #149                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<scalaz.$bslash$div<A, B>> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #153                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scalaz.$bslash$div<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.$bslash$div<A, B>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #161                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.$bslash$div<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #161                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.$bslash$div<A, B> append(scalaz.$bslash$div<A, B>, scala.Function0<scalaz.$bslash$div<A, B>>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #171                // Field evidence$6$1:Lscalaz/Monoid;
       5: aload_0
       6: getfield      #173                // Field evidence$5$1:Lscalaz/Semigroup;
       9: astore        4
      11: astore_3
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: aload_1
      18: instanceof    #175                // class scalaz/$minus$bslash$div
      21: ifeq          114
      24: aload_1
      25: checkcast     #175                // class scalaz/$minus$bslash$div
      28: invokevirtual #178                // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      31: astore        5
      33: aload_2
      34: invokeinterface #182,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      39: checkcast     #184                // class scalaz/$bslash$div
      42: astore        6
      44: aload         6
      46: instanceof    #175                // class scalaz/$minus$bslash$div
      49: ifeq          94
      52: aload         6
      54: checkcast     #175                // class scalaz/$minus$bslash$div
      57: invokevirtual #178                // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      60: astore        7
      62: getstatic     #190                // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      65: pop
      66: aload         4
      68: aload         5
      70: aload         7
      72: invokedynamic #207,  0            // InvokeDynamic #0:apply:(Ljava/lang/Object;)Lscala/Function0;
      77: invokeinterface #210,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      82: astore        11
      84: new           #175                // class scalaz/$minus$bslash$div
      87: dup
      88: aload         11
      90: invokespecial #214                // Method scalaz/$minus$bslash$div."<init>":(Ljava/lang/Object;)V
      93: areturn
      94: aload         6
      96: instanceof    #216                // class scalaz/$bslash$div$minus
      99: ifeq          104
     102: aload_1
     103: areturn
     104: new           #218                // class scala/MatchError
     107: dup
     108: aload         6
     110: invokespecial #219                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     113: athrow
     114: aload_1
     115: instanceof    #216                // class scalaz/$bslash$div$minus
     118: ifeq          214
     121: aload_1
     122: checkcast     #216                // class scalaz/$bslash$div$minus
     125: invokevirtual #222                // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
     128: astore        8
     130: aload_2
     131: invokeinterface #182,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
     136: checkcast     #184                // class scalaz/$bslash$div
     139: astore        9
     141: aload         9
     143: instanceof    #175                // class scalaz/$minus$bslash$div
     146: ifeq          155
     149: aload         9
     151: checkcast     #175                // class scalaz/$minus$bslash$div
     154: areturn
     155: aload         9
     157: instanceof    #216                // class scalaz/$bslash$div$minus
     160: ifeq          204
     163: aload         9
     165: checkcast     #216                // class scalaz/$bslash$div$minus
     168: invokevirtual #222                // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
     171: astore        10
     173: getstatic     #227                // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
     176: pop
     177: aload_3
     178: aload         8
     180: aload         10
     182: invokedynamic #232,  0            // InvokeDynamic #1:apply:(Ljava/lang/Object;)Lscala/Function0;
     187: invokeinterface #210,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     192: astore        12
     194: new           #216                // class scalaz/$bslash$div$minus
     197: dup
     198: aload         12
     200: invokespecial #233                // Method scalaz/$bslash$div$minus."<init>":(Ljava/lang/Object;)V
     203: areturn
     204: new           #218                // class scala/MatchError
     207: dup
     208: aload         9
     210: invokespecial #219                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     213: athrow
     214: new           #218                // class scala/MatchError
     217: dup
     218: aload_1
     219: invokespecial #219                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     222: athrow

  public scalaz.$bslash$div<A, B> zero();
    Code:
       0: getstatic     #227                // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
       3: pop
       4: getstatic     #250                // Field scalaz/Monoid$.MODULE$:Lscalaz/Monoid$;
       7: pop
       8: aload_0
       9: getfield      #171                // Field evidence$6$1:Lscalaz/Monoid;
      12: invokeinterface #252,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      17: astore_1
      18: new           #216                // class scalaz/$bslash$div$minus
      21: dup
      22: aload_1
      23: invokespecial #233                // Method scalaz/$bslash$div$minus."<init>":(Ljava/lang/Object;)V
      26: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #255                // Method zero:()Lscalaz/$bslash$div;
       4: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #184                // class scalaz/$bslash$div
       5: aload_2
       6: invokevirtual #259                // Method append:(Lscalaz/$bslash$div;Lscala/Function0;)Lscalaz/$bslash$div;
       9: areturn

  public scalaz.DisjunctionInstances$$anon$2(scalaz.DisjunctionInstances, scalaz.Monoid, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #171                // Field evidence$6$1:Lscalaz/Monoid;
       5: aload_0
       6: aload_3
       7: putfield      #173                // Field evidence$5$1:Lscalaz/Semigroup;
      10: aload_0
      11: invokespecial #264                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #268                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      18: aload_0
      19: invokestatic  #271                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      22: invokestatic  #276                // Method scala/runtime/Statics.releaseFence:()V
      25: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #289,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
