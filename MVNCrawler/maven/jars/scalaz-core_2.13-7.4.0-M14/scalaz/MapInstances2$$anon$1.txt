Compiled from "Map.scala"
public final class scalaz.MapInstances2$$anon$1 implements scalaz.Band<scalaz.$eq$eq$greater$greater<A, B>> {
  private scalaz.syntax.BandSyntax<scalaz.$eq$eq$greater$greater<A, B>> bandSyntax;

  private scalaz.syntax.SemigroupSyntax<scalaz.$eq$eq$greater$greater<A, B>> semigroupSyntax;

  private final scalaz.Band B$1;

  private final scalaz.Order A$1;

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #44                 // InterfaceMethod scalaz/Band.multiply1$:(Lscalaz/Band;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public scalaz.Band<scalaz.$eq$eq$greater$greater<A, B>>.BandLaw bandLaw();
    Code:
       0: aload_0
       1: invokestatic  #55                 // InterfaceMethod scalaz/Band.bandLaw$:(Lscalaz/Band;)Lscalaz/Band$BandLaw;
       4: areturn

  public <S> scalaz.Maybe<scalaz.$eq$eq$greater$greater<A, B>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.$eq$eq$greater$greater<A, B>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #64                 // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.$eq$eq$greater$greater<A, B>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.$eq$eq$greater$greater<A, B>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #70                 // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #77                 // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #84                 // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.$eq$eq$greater$greater<A, B>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #91                 // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.BandSyntax<scalaz.$eq$eq$greater$greater<A, B>> bandSyntax();
    Code:
       0: aload_0
       1: getfield      #95                 // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       4: areturn

  public void scalaz$Band$_setter_$bandSyntax_$eq(scalaz.syntax.BandSyntax<scalaz.$eq$eq$greater$greater<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #95                 // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.$eq$eq$greater$greater<A, B>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #103                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.$eq$eq$greater$greater<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #103                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.$eq$eq$greater$greater<A, B> append(scalaz.$eq$eq$greater$greater<A, B>, scala.Function0<scalaz.$eq$eq$greater$greater<A, B>>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #116,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: checkcast     #118                // class scalaz/$eq$eq$greater$greater
      10: aload_0
      11: invokedynamic #136,  0            // InvokeDynamic #0:apply:(Lscalaz/MapInstances2$$anon$1;)Lscala/Function2;
      16: aload_0
      17: getfield      #138                // Field A$1:Lscalaz/Order;
      20: astore        5
      22: astore        4
      24: astore_3
      25: ifnonnull     30
      28: aconst_null
      29: athrow
      30: aload         4
      32: invokedynamic #148,  0            // InvokeDynamic #1:apply:(Lscala/Function2;)Lscala/Function3;
      37: astore        6
      39: getstatic     #154                // Field scalaz/$eq$eq$greater$greater$.MODULE$:Lscalaz/$eq$eq$greater$greater$;
      42: aload_1
      43: aload_3
      44: aload         6
      46: invokedynamic #165,  0            // InvokeDynamic #2:apply:(Lscala/Function3;)Lscala/Function3;
      51: invokedynamic #176,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
      56: invokedynamic #181,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
      61: aload         5
      63: aload         5
      65: invokevirtual #185                // Method scalaz/$eq$eq$greater$greater$.mergeWithKey:(Lscalaz/$eq$eq$greater$greater;Lscalaz/$eq$eq$greater$greater;Lscala/Function3;Lscala/Function1;Lscala/Function1;Lscalaz/Order;Lscalaz/Order;)Lscalaz/$eq$eq$greater$greater;
      68: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #118                // class scalaz/$eq$eq$greater$greater
       5: aload_2
       6: invokevirtual #202                // Method append:(Lscalaz/$eq$eq$greater$greater;Lscala/Function0;)Lscalaz/$eq$eq$greater$greater;
       9: areturn

  public static final java.lang.Object $anonfun$append$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$append$1(scalaz.MapInstances2$$anon$1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #209                // Field B$1:Lscalaz/Band;
       4: aload_1
       5: aload_2
       6: invokedynamic #216,  0            // InvokeDynamic #5:apply:(Ljava/lang/Object;)Lscala/Function0;
      11: invokeinterface #218,  3          // InterfaceMethod scalaz/Band.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      16: areturn

  public scalaz.MapInstances2$$anon$1(scalaz.MapInstances2, scalaz.Band, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #209                // Field B$1:Lscalaz/Band;
       5: aload_0
       6: aload_3
       7: putfield      #138                // Field A$1:Lscalaz/Order;
      10: aload_0
      11: invokespecial #224                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #228                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      18: aload_0
      19: invokestatic  #231                // InterfaceMethod scalaz/Band.$init$:(Lscalaz/Band;)V
      22: invokestatic  #236                // Method scala/runtime/Statics.releaseFence:()V
      25: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #249,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
