Compiled from "ListT.scala"
public final class scalaz.ListTInstances$$anon$5 implements scalaz.ListTHoist {
  public <G> scalaz.Monad<?> apply(scalaz.Monad<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #22                 // InterfaceMethod scalaz/ListTHoist.apply$:(Lscalaz/ListTHoist;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public <G, A> scalaz.ListT<G, A> liftM(G, scalaz.Monad<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #34                 // InterfaceMethod scalaz/ListTHoist.liftM$:(Lscalaz/ListTHoist;Ljava/lang/Object;Lscalaz/Monad;)Lscalaz/ListT;
       6: areturn

  public <M, N> scalaz.NaturalTransformation<?, ?> hoist(scalaz.NaturalTransformation<M, N>, scalaz.Monad<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #44                 // InterfaceMethod scalaz/ListTHoist.hoist$:(Lscalaz/ListTHoist;Lscalaz/NaturalTransformation;Lscalaz/Monad;)Lscalaz/NaturalTransformation;
       6: areturn

  public final java.lang.Object liftMU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #51                 // InterfaceMethod scalaz/MonadTrans.liftMU$:(Lscalaz/MonadTrans;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object wrapEffect(java.lang.Object, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #59                 // InterfaceMethod scalaz/MonadTrans.wrapEffect$:(Lscalaz/MonadTrans;Ljava/lang/Object;Lscalaz/Monad;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapF(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #66                 // InterfaceMethod scalaz/MonadTrans.mapF$:(Lscalaz/MonadTrans;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scalaz.MonadTrans<scalaz.ListT>.MonadTransLaw monadTransLaw();
    Code:
       0: aload_0
       1: invokestatic  #74                 // InterfaceMethod scalaz/MonadTrans.monadTransLaw$:(Lscalaz/MonadTrans;)Lscalaz/MonadTrans$MonadTransLaw;
       4: areturn

  public java.lang.Object liftM(java.lang.Object, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #76                 // Method liftM:(Ljava/lang/Object;Lscalaz/Monad;)Lscalaz/ListT;
       6: areturn

  public scalaz.ListTInstances$$anon$5(scalaz.ListTInstances);
    Code:
       0: aload_0
       1: invokespecial #82                 // Method java/lang/Object."<init>":()V
       4: return
}
