Compiled from "Applicative.scala"
public interface scalaz.Applicative<F> extends scalaz.Apply<F>, scalaz.InvariantApplicative<F> {
  public static scalaz.Applicative<java.lang.Object> idInstance();
    Code:
       0: getstatic     #60                 // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       3: pop
       4: getstatic     #65                 // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
       7: invokevirtual #69                 // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      10: checkcast     #2                  // class scalaz/Applicative
      13: areturn

  public static <F, G> scalaz.Applicative<F> fromIso(scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, F, G>, scalaz.Applicative<G>);
    Code:
       0: getstatic     #60                 // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       3: pop
       4: new           #38                 // class scalaz/Applicative$$anon$6
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #78                 // Method scalaz/Applicative$$anon$6."<init>":(Lscalaz/Applicative;Lscalaz/Isomorphisms$Iso2;)V
      13: areturn

  public abstract void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<F>);

  public abstract <A> F point(scala.Function0<A>);

  public static java.lang.Object pure$(scalaz.Applicative, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #94                 // InterfaceMethod pure:(Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public default <A> F pure(scala.Function0<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #97,  2           // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object map$(scalaz.Applicative, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #106                // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <A, B> F map(F, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #128,  0            // InvokeDynamic #0:apply:(Ljava/lang/Object;)Lscala/Function0;
       7: aload_0
       8: aload_2
       9: invokedynamic #136,  0            // InvokeDynamic #1:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function0;
      14: invokeinterface #140,  3          // InterfaceMethod ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      19: areturn

  public static java.lang.Object apply2$(scalaz.Applicative, scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #147                // InterfaceMethod apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public default <A, B, C> F apply2(scala.Function0<F>, scala.Function0<F>, scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: aload_3
       5: invokedynamic #160,  0            // InvokeDynamic #2:apply:(Lscala/Function2;)Lscala/Function0;
      10: invokeinterface #97,  2           // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
      15: invokeinterface #164,  4          // InterfaceMethod ap2:(Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn

  public static java.lang.Object traverse$(scalaz.Applicative, java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #172                // InterfaceMethod traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public default <A, G$, B> F traverse(G$, scala.Function1<A, F>, scalaz.Traverse<G$>);
    Code:
       0: aload_3
       1: aload_1
       2: aload_2
       3: aload_0
       4: invokeinterface #179,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public static java.lang.Object sequence$(scalaz.Applicative, java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #187                // InterfaceMethod sequence:(Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public default <A, G$> F sequence(G$, scalaz.Traverse<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #196,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
       7: aload_2
       8: invokeinterface #172,  4          // InterfaceMethod traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
      13: areturn

  public static scalaz.Applicative par$(scalaz.Applicative);
    Code:
       0: aload_0
       1: invokespecial #201                // InterfaceMethod par:()Lscalaz/Applicative;
       4: areturn

  public default scalaz.Applicative<?> par();
    Code:
       0: getstatic     #207                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #211                // Method scalaz/Tags$.Parallel:()Lscalaz/Tag$TagOf;
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: getstatic     #216                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      14: aload_0
      15: invokevirtual #219                // Method scalaz/Tag$.subst1:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #2                  // class scalaz/Applicative
      21: areturn

  public static java.lang.Object xproduct0$(scalaz.Applicative, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #224                // InterfaceMethod xproduct0:(Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public default <Z> F xproduct0(scala.Function0<Z>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #97,  2           // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object xproduct1$(scalaz.Applicative, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #233                // InterfaceMethod xproduct1:(Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public default <Z, A1> F xproduct1(scala.Function0<F>, scala.Function1<A1, Z>, scala.Function1<Z, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #238,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: aload_2
       8: aload_3
       9: invokeinterface #242,  4          // InterfaceMethod xmap:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      14: areturn

  public static java.lang.Object xproduct2$(scalaz.Applicative, scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #249                // InterfaceMethod xproduct2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public default <Z, A1, A2> F xproduct2(scala.Function0<F>, scala.Function0<F>, scala.Function2<A1, A2, Z>, scala.Function1<Z, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #147,  4          // InterfaceMethod apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  public static java.lang.Object xproduct3$(scalaz.Applicative, scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #257                // InterfaceMethod xproduct3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public default <Z, A1, A2, A3> F xproduct3(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function3<A1, A2, A3, Z>, scala.Function1<Z, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokeinterface #263,  5          // InterfaceMethod apply3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
      11: areturn

  public static java.lang.Object xproduct4$(scalaz.Applicative, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokespecial #270                // InterfaceMethod xproduct4:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public default <Z, A1, A2, A3, A4> F xproduct4(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function4<A1, A2, A3, A4, Z>, scala.Function1<Z, scala.Tuple4<A1, A2, A3, A4>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokeinterface #276,  6          // InterfaceMethod apply4:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object replicateM$(scalaz.Applicative, int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #283                // InterfaceMethod replicateM:(ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public default <A> F replicateM(int, F);
    Code:
       0: getstatic     #290                // Field scalaz/Traverse$.MODULE$:Lscalaz/Traverse$;
       3: pop
       4: getstatic     #295                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
       7: invokevirtual #299                // Method scalaz/IList$.instances:()Lscalaz/Traverse;
      10: getstatic     #295                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      13: iload_1
      14: aload_2
      15: invokevirtual #303                // Method scalaz/IList$.fill:(ILjava/lang/Object;)Lscalaz/IList;
      18: aload_0
      19: invokeinterface #306,  3          // InterfaceMethod scalaz/Traverse.sequence:(Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
      24: areturn

  public static java.lang.Object replicateM_$(scalaz.Applicative, int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #310                // InterfaceMethod replicateM_:(ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public default <A> F replicateM_(int, F);
    Code:
       0: getstatic     #315                // Field scalaz/std/list$.MODULE$:Lscalaz/std/list$;
       3: invokevirtual #318                // Method scalaz/std/list$.listInstance:()Lscalaz/Traverse;
       6: getstatic     #323                // Field scala/package$.MODULE$:Lscala/package$;
       9: invokevirtual #327                // Method scala/package$.List:()Lscala/collection/immutable/List$;
      12: iload_1
      13: aload_2
      14: invokedynamic #332,  0            // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
      19: invokevirtual #337                // Method scala/collection/immutable/List$.fill:(ILscala/Function0;)Lscala/collection/SeqOps;
      22: aload_0
      23: invokeinterface #340,  3          // InterfaceMethod scalaz/Traverse.sequence_:(Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
      28: areturn

  public static java.lang.Object filterM$(scalaz.Applicative, scalaz.$eq$eq$greater$greater, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #347                // InterfaceMethod filterM:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public default <A, B> F filterM(scalaz.$eq$eq$greater$greater<A, B>, scala.Function1<B, F>, scalaz.Order<A>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Tip
      10: ifeq          29
      13: invokedynamic #359,  0            // InvokeDynamic #5:apply:()Lscala/Function0;
      18: astore        9
      20: aload_0
      21: aload         9
      23: invokeinterface #97,  2           // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
      28: areturn
      29: aload_1
      30: instanceof    #20                 // class scalaz/$eq$eq$greater$greater$Bin
      33: ifeq          101
      36: aload_1
      37: checkcast     #20                 // class scalaz/$eq$eq$greater$greater$Bin
      40: astore        4
      42: aload         4
      44: invokevirtual #362                // Method scalaz/$eq$eq$greater$greater$Bin.k:()Ljava/lang/Object;
      47: astore        5
      49: aload         4
      51: invokevirtual #365                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      54: astore        6
      56: aload         4
      58: invokevirtual #368                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      61: astore        7
      63: aload         4
      65: invokevirtual #371                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      68: astore        8
      70: aload_0
      71: aload_0
      72: aload         7
      74: aload_2
      75: aload_3
      76: aload         8
      78: invokedynamic #379,  0            // InvokeDynamic #6:apply:(Lscalaz/Applicative;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Order;Lscalaz/$eq$eq$greater$greater;)Lscala/Function0;
      83: aload_0
      84: aload_2
      85: aload         6
      87: aload         5
      89: aload_3
      90: invokedynamic #387,  0            // InvokeDynamic #7:apply:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Order;)Lscala/Function0;
      95: invokeinterface #140,  3          // InterfaceMethod ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
     100: areturn
     101: new           #389                // class scala/MatchError
     104: dup
     105: aload_1
     106: invokespecial #392                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     109: athrow

  public static java.lang.Object filterM$(scalaz.Applicative, scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #401                // InterfaceMethod filterM:(Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <A> F filterM(scala.collection.immutable.List<A>, scala.Function1<A, F>);
    Code:
       0: getstatic     #408                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: aload_1
       4: invokevirtual #412                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          22
      10: aload_0
      11: invokedynamic #418,  0            // InvokeDynamic #8:apply:()Lscala/Function0;
      16: invokeinterface #97,  2           // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
      21: areturn
      22: aload_1
      23: instanceof    #420                // class scala/collection/immutable/$colon$colon
      26: ifeq          71
      29: aload_1
      30: checkcast     #420                // class scala/collection/immutable/$colon$colon
      33: astore_3
      34: aload_3
      35: invokevirtual #423                // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      38: astore        4
      40: aload_3
      41: invokevirtual #426                // Method scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
      44: astore        5
      46: aload_0
      47: aload_0
      48: aload         5
      50: aload_2
      51: invokedynamic #432,  0            // InvokeDynamic #9:apply:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Lscala/Function0;
      56: aload_0
      57: aload_2
      58: aload         4
      60: invokedynamic #440,  0            // InvokeDynamic #10:apply:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      65: invokeinterface #140,  3          // InterfaceMethod ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      70: areturn
      71: new           #389                // class scala/MatchError
      74: dup
      75: aload_1
      76: invokespecial #392                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      79: athrow

  public static java.lang.Object filterM$(scalaz.Applicative, scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #446                // InterfaceMethod filterM:(Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <A> F filterM(scalaz.IList<A>, scala.Function1<A, F>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #450                // class scalaz/INil
      10: ifeq          25
      13: aload_0
      14: invokedynamic #458,  0            // InvokeDynamic #11:apply:()Lscala/Function0;
      19: invokeinterface #97,  2           // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
      24: areturn
      25: aload_1
      26: instanceof    #460                // class scalaz/ICons
      29: ifeq          74
      32: aload_1
      33: checkcast     #460                // class scalaz/ICons
      36: astore_3
      37: aload_3
      38: invokevirtual #461                // Method scalaz/ICons.head:()Ljava/lang/Object;
      41: astore        4
      43: aload_3
      44: invokevirtual #464                // Method scalaz/ICons.tail:()Lscalaz/IList;
      47: astore        5
      49: aload_0
      50: aload         5
      52: aload_2
      53: aload_0
      54: invokedynamic #471,  0            // InvokeDynamic #12:apply:(Lscalaz/IList;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function0;
      59: aload_0
      60: aload_2
      61: aload         4
      63: invokedynamic #474,  0            // InvokeDynamic #13:apply:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      68: invokeinterface #140,  3          // InterfaceMethod ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      73: areturn
      74: new           #389                // class scala/MatchError
      77: dup
      78: aload_1
      79: invokespecial #392                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      82: athrow

  public static java.lang.Object unlessM$(scalaz.Applicative, boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #483                // InterfaceMethod unlessM:(ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public default <A> F unlessM(boolean, scala.Function0<F>);
    Code:
       0: iload_1
       1: ifeq          16
       4: aload_0
       5: invokedynamic #495,  0            // InvokeDynamic #14:apply$mcV$sp:()Lscala/runtime/java8/JFunction0$mcV$sp;
      10: invokeinterface #97,  2           // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
      15: areturn
      16: aload_0
      17: aload_2
      18: invokeinterface #238,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      23: invokeinterface #498,  2          // InterfaceMethod void:(Ljava/lang/Object;)Ljava/lang/Object;
      28: areturn

  public static java.lang.Object whenM$(scalaz.Applicative, boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #502                // InterfaceMethod whenM:(ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public default <A> F whenM(boolean, scala.Function0<F>);
    Code:
       0: iload_1
       1: ifeq          17
       4: aload_0
       5: aload_2
       6: invokeinterface #238,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      11: invokeinterface #498,  2          // InterfaceMethod void:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn
      17: aload_0
      18: invokedynamic #507,  0            // InvokeDynamic #15:apply$mcV$sp:()Lscala/runtime/java8/JFunction0$mcV$sp;
      23: invokeinterface #97,  2           // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
      28: areturn

  public static scalaz.Applicative compose$(scalaz.Applicative, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #513                // InterfaceMethod compose:(Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public default <G$> scalaz.Applicative<?> compose(scalaz.Applicative<G$>);
    Code:
       0: new           #28                 // class scalaz/Applicative$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #517                // Method scalaz/Applicative$$anon$1."<init>":(Lscalaz/Applicative;Lscalaz/Applicative;)V
       9: areturn

  public static scalaz.Applicative product$(scalaz.Applicative, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #521                // InterfaceMethod product:(Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public default <G$> scalaz.Applicative<?> product(scalaz.Applicative<G$>);
    Code:
       0: new           #30                 // class scalaz/Applicative$$anon$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #522                // Method scalaz/Applicative$$anon$2."<init>":(Lscalaz/Applicative;Lscalaz/Applicative;)V
       9: areturn

  public static scalaz.Applicative flip$(scalaz.Applicative);
    Code:
       0: aload_0
       1: invokespecial #526                // InterfaceMethod flip:()Lscalaz/Applicative;
       4: areturn

  public default scalaz.Applicative<F> flip();
    Code:
       0: new           #32                 // class scalaz/Applicative$$anon$3
       3: dup
       4: aload_0
       5: invokespecial #530                // Method scalaz/Applicative$$anon$3."<init>":(Lscalaz/Applicative;)V
       8: areturn

  public static java.lang.Object plusA$(scalaz.Applicative, scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #539                // InterfaceMethod plusA:(Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public default <A> F plusA(scala.Function0<F>, scala.Function0<F>, scalaz.Semigroup<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #551,  0            // InvokeDynamic #16:apply:(Lscalaz/Semigroup;)Lscala/Function2;
       9: invokeinterface #147,  4          // InterfaceMethod apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      14: areturn

  public static scalaz.Applicative$ApplicativeLaw applicativeLaw$(scalaz.Applicative);
    Code:
       0: aload_0
       1: invokespecial #557                // InterfaceMethod applicativeLaw:()Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public default scalaz.Applicative<F>.ApplicativeLaw applicativeLaw();
    Code:
       0: new           #34                 // class scalaz/Applicative$$anon$4
       3: dup
       4: aload_0
       5: invokespecial #559                // Method scalaz/Applicative$$anon$4."<init>":(Lscalaz/Applicative;)V
       8: areturn

  public abstract scalaz.syntax.ApplicativeSyntax<F> applicativeSyntax();

  public static java.lang.Object $anonfun$map$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static scala.Function1 $anonfun$map$3(scala.Function1);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$map$2(scalaz.Applicative, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #573,  0            // InvokeDynamic #17:apply:(Lscala/Function1;)Lscala/Function0;
       7: invokeinterface #97,  2           // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static scala.Function2 $anonfun$apply2$1(scala.Function2);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$sequence$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$replicateM_$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static scala.collection.immutable.List $anonfun$filterM$1();
    Code:
       0: getstatic     #408                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: areturn

  public static java.lang.Object $anonfun$filterM$2(scalaz.Applicative, scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #401,  3          // InterfaceMethod filterM:(Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       8: areturn

  public static scala.collection.immutable.List $anonfun$filterM$5(boolean, java.lang.Object, scala.collection.immutable.List);
    Code:
       0: iload_0
       1: ifeq          10
       4: aload_2
       5: aload_1
       6: invokevirtual #586                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
       9: areturn
      10: aload_2
      11: areturn

  public static scala.Function1 $anonfun$filterM$4(java.lang.Object, boolean);
    Code:
       0: iload_1
       1: aload_0
       2: invokedynamic #597,  0            // InvokeDynamic #18:apply:(ZLjava/lang/Object;)Lscala/Function1;
       7: areturn

  public static java.lang.Object $anonfun$filterM$3(scalaz.Applicative, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #601,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_2
       9: invokedynamic #610,  0            // InvokeDynamic #19:apply:(Ljava/lang/Object;)Lscala/Function1;
      14: invokeinterface #106,  3          // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      19: areturn

  public static void $anonfun$unlessM$1();
    Code:
       0: return

  public static void $anonfun$whenM$1();
    Code:
       0: return

  public static java.lang.Object $anonfun$plusA$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$plusA$1(scalaz.Semigroup, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #619,  0            // InvokeDynamic #20:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #625,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      13: areturn

  public static void $init$(scalaz.Applicative);
    Code:
       0: aload_0
       1: new           #36                 // class scalaz/Applicative$$anon$5
       4: dup
       5: aload_0
       6: invokespecial #627                // Method scalaz/Applicative$$anon$5."<init>":(Lscalaz/Applicative;)V
       9: invokeinterface #629,  2          // InterfaceMethod scalaz$Applicative$_setter_$applicativeSyntax_$eq:(Lscalaz/syntax/ApplicativeSyntax;)V
      14: return

  public static scala.Function1 $anonfun$filterM$4$adapted(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #634                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokestatic  #636                // InterfaceMethod $anonfun$filterM$4:(Ljava/lang/Object;Z)Lscala/Function1;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #648,  0            // InvokeDynamic #21:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
