Compiled from "Alt.scala"
public final class scalaz.Alt$$anon$1 implements scalaz.Alt<F>.AltLaw {
  private final scalaz.Alt $outer;

  public <A> boolean identityAp(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #45                 // InterfaceMethod scalaz/Applicative$ApplicativeLaw.identityAp$:(Lscalaz/Applicative$ApplicativeLaw;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B> boolean homomorphism(scala.Function1<A, B>, A, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #59                 // InterfaceMethod scalaz/Applicative$ApplicativeLaw.homomorphism$:(Lscalaz/Applicative$ApplicativeLaw;Lscala/Function1;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public <A, B> boolean interchange(java.lang.Object, A, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #68                 // InterfaceMethod scalaz/Applicative$ApplicativeLaw.interchange$:(Lscalaz/Applicative$ApplicativeLaw;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public <A, B> boolean mapLikeDerived(scala.Function1<A, B>, java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #73                 // InterfaceMethod scalaz/Applicative$ApplicativeLaw.mapLikeDerived$:(Lscalaz/Applicative$ApplicativeLaw;Lscala/Function1;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public <A, B, C> boolean composition(java.lang.Object, java.lang.Object, java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #83                 // InterfaceMethod scalaz/Apply$ApplyLaw.composition$:(Lscalaz/Apply$ApplyLaw;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       9: ireturn

  public <A> boolean identity(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #88                 // InterfaceMethod scalaz/Functor$FunctorLaw.identity$:(Lscalaz/Functor$FunctorLaw;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B, C> boolean composite(java.lang.Object, scala.Function1<A, B>, scala.Function1<B, C>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #97                 // InterfaceMethod scalaz/Functor$FunctorLaw.composite$:(Lscalaz/Functor$FunctorLaw;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Equal;)Z
       9: ireturn

  public <A> boolean invariantIdentity(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #102                // InterfaceMethod scalaz/InvariantFunctor$InvariantFunctorLaw.invariantIdentity$:(Lscalaz/InvariantFunctor$InvariantFunctorLaw;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B, C> boolean invariantComposite(java.lang.Object, scala.Function1<A, B>, scala.Function1<B, A>, scala.Function1<B, C>, scala.Function1<C, B>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #111                // InterfaceMethod scalaz/InvariantFunctor$InvariantFunctorLaw.invariantComposite$:(Lscalaz/InvariantFunctor$InvariantFunctorLaw;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscalaz/Equal;)Z
      13: ireturn

  public scalaz.Applicative scalaz$Applicative$ApplicativeLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #115                // Field $outer:Lscalaz/Alt;
       4: areturn

  public scalaz.Apply scalaz$Apply$ApplyLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #115                // Field $outer:Lscalaz/Alt;
       4: areturn

  public scalaz.Functor scalaz$Functor$FunctorLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #115                // Field $outer:Lscalaz/Alt;
       4: areturn

  public scalaz.InvariantFunctor scalaz$InvariantFunctor$InvariantFunctorLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #115                // Field $outer:Lscalaz/Alt;
       4: areturn

  public scalaz.Alt$$anon$1(scalaz.Alt);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #115                // Field $outer:Lscalaz/Alt;
      11: aload_0
      12: invokespecial #126                // Method java/lang/Object."<init>":()V
      15: return
}
