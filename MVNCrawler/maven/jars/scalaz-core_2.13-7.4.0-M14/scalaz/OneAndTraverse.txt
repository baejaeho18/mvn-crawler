Compiled from "OneAnd.scala"
public interface scalaz.OneAndTraverse<F> extends scalaz.Traverse1<?>, scalaz.OneAndFunctor<F>, scalaz.OneAndFoldable<F> {
  public abstract scalaz.Traverse<F> F();

  public static java.lang.Object traverse1Impl$(scalaz.OneAndTraverse, scalaz.OneAnd, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #43                 // InterfaceMethod traverse1Impl:(Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
       7: areturn

  public default <G, A, B> G traverse1Impl(scalaz.OneAnd<F, A>, scala.Function1<A, G>, scalaz.Apply<G>);
    Code:
       0: aload_3
       1: invokeinterface #54,  1           // InterfaceMethod scalaz/Apply.applyApplicative:()Lscalaz/Applicative;
       6: aload_1
       7: invokevirtual #58                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: aload_2
      11: getstatic     #64                 // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
      14: invokevirtual #68                 // Method scalaz/$bslash$div$.left:()Lscala/Function1;
      17: invokeinterface #74,  2           // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      22: aload_0
      23: invokeinterface #76,  1           // InterfaceMethod F:()Lscalaz/Traverse;
      28: invokeinterface #82,  4           // InterfaceMethod scalaz/Applicative.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
      33: checkcast     #84                 // class scalaz/$bslash$div
      36: dup
      37: ifnonnull     42
      40: aconst_null
      41: athrow
      42: astore        4
      44: aload         4
      46: instanceof    #86                 // class scalaz/$minus$bslash$div
      49: ifeq          88
      52: aload         4
      54: checkcast     #86                 // class scalaz/$minus$bslash$div
      57: invokevirtual #89                 // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      60: astore        5
      62: aload_3
      63: aload_2
      64: aload_1
      65: invokedynamic #107,  0            // InvokeDynamic #0:apply:(Lscala/Function1;Lscalaz/OneAnd;)Lscala/Function0;
      70: aload         5
      72: invokedynamic #115,  0            // InvokeDynamic #1:apply:(Ljava/lang/Object;)Lscala/Function0;
      77: invokedynamic #127,  0            // InvokeDynamic #2:apply:()Lscala/Function2;
      82: invokeinterface #131,  4          // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      87: areturn
      88: aload         4
      90: instanceof    #133                // class scalaz/$bslash$div$minus
      93: ifeq          130
      96: aload         4
      98: checkcast     #133                // class scalaz/$bslash$div$minus
     101: invokevirtual #136                // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
     104: astore        6
     106: aload_3
     107: aload_2
     108: aload_1
     109: invokevirtual #139                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
     112: invokeinterface #141,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     117: aload         6
     119: invokedynamic #151,  0            // InvokeDynamic #3:apply:(Ljava/lang/Object;)Lscala/Function1;
     124: invokeinterface #155,  3          // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     129: areturn
     130: new           #157                // class scala/MatchError
     133: dup
     134: aload         4
     136: invokespecial #161                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     139: athrow

  public static java.lang.Object traverseImpl$(scalaz.OneAndTraverse, scalaz.OneAnd, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #173                // InterfaceMethod traverseImpl:(Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public default <G, A, B> G traverseImpl(scalaz.OneAnd<F, A>, scala.Function1<A, G>, scalaz.Applicative<G>);
    Code:
       0: aload_3
       1: aload_2
       2: aload_1
       3: invokedynamic #180,  0            // InvokeDynamic #4:apply:(Lscala/Function1;Lscalaz/OneAnd;)Lscala/Function0;
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokedynamic #187,  0            // InvokeDynamic #5:apply:(Lscalaz/OneAndTraverse;Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function0;
      17: invokedynamic #192,  0            // InvokeDynamic #6:apply:()Lscala/Function2;
      22: invokeinterface #193,  4          // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      27: areturn

  public static scalaz.IndexedStateT traverseS$(scalaz.OneAndTraverse, scalaz.OneAnd, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #199                // InterfaceMethod traverseS:(Lscalaz/OneAnd;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public default <S, A, B> scalaz.IndexedStateT<S, S, java.lang.Object, scalaz.OneAnd<F, B>> traverseS(scalaz.OneAnd<F, A>, scala.Function1<A, scalaz.IndexedStateT<S, S, ?, B>>);
    Code:
       0: getstatic     #205                // Field scalaz/State$.MODULE$:Lscalaz/State$;
       3: pop
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokedynamic #215,  0            // InvokeDynamic #7:apply:(Lscalaz/OneAndTraverse;Lscala/Function1;Lscalaz/OneAnd;)Lscala/Function1;
      12: astore_3
      13: getstatic     #220                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
      16: pop
      17: getstatic     #225                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      20: pop
      21: new           #22                 // class scalaz/IndexedStateT$Wrap
      24: dup
      25: aload_3
      26: invokespecial #228                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      29: areturn

  public static java.lang.Object $anonfun$traverse1Impl$2(scala.Function1, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #139                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: invokeinterface #141,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static java.lang.Object $anonfun$traverse1Impl$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static scalaz.OneAnd $anonfun$traverse1Impl$4(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #239                // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: aload_0
       4: aload_1
       5: invokevirtual #241                // Method scalaz/OneAnd$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
       8: areturn

  public static java.lang.Object $anonfun$traverse1Impl$1(scalaz.Apply, scala.Function1, scalaz.OneAnd, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #107,  0            // InvokeDynamic #0:apply:(Lscala/Function1;Lscalaz/OneAnd;)Lscala/Function0;
       8: aload_3
       9: invokedynamic #115,  0            // InvokeDynamic #1:apply:(Ljava/lang/Object;)Lscala/Function0;
      14: invokedynamic #127,  0            // InvokeDynamic #2:apply:()Lscala/Function2;
      19: invokeinterface #131,  4          // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      24: areturn

  public static scalaz.OneAnd $anonfun$traverse1Impl$6(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #239                // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: aload_1
       4: aload_0
       5: invokevirtual #241                // Method scalaz/OneAnd$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
       8: areturn

  public static java.lang.Object $anonfun$traverse1Impl$5(scalaz.Apply, scala.Function1, scalaz.OneAnd, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #139                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       6: invokeinterface #141,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: aload_3
      12: invokedynamic #151,  0            // InvokeDynamic #3:apply:(Ljava/lang/Object;)Lscala/Function1;
      17: invokeinterface #155,  3          // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      22: areturn

  public static java.lang.Object $anonfun$traverseImpl$1(scala.Function1, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #139                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: invokeinterface #141,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static java.lang.Object $anonfun$traverseImpl$2(scalaz.OneAndTraverse, scalaz.OneAnd, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: invokeinterface #76,  1           // InterfaceMethod F:()Lscalaz/Traverse;
       6: aload_1
       7: invokevirtual #58                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: aload_2
      11: aload_3
      12: invokeinterface #256,  4          // InterfaceMethod scalaz/Traverse.traverseImpl:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      17: areturn

  public static scalaz.OneAnd $anonfun$traverseImpl$3(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #239                // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: aload_0
       4: aload_1
       5: invokevirtual #241                // Method scalaz/OneAnd$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
       8: areturn

  public static scala.Tuple2 $anonfun$traverseS$1(scalaz.OneAndTraverse, scala.Function1, scalaz.OneAnd, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #139                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: invokeinterface #141,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #24                 // class scalaz/IndexedStateT
      13: aload_3
      14: getstatic     #264                // Field scalaz/Bind$.MODULE$:Lscalaz/Bind$;
      17: pop
      18: getstatic     #269                // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      21: invokevirtual #273                // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      24: checkcast     #275                // class scalaz/Bind
      27: invokevirtual #278                // Method scalaz/IndexedStateT.apply:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      30: checkcast     #280                // class scala/Tuple2
      33: astore        4
      35: aload         4
      37: ifnull        57
      40: aload         4
      42: invokevirtual #283                // Method scala/Tuple2._1:()Ljava/lang/Object;
      45: astore        5
      47: aload         4
      49: invokevirtual #286                // Method scala/Tuple2._2:()Ljava/lang/Object;
      52: astore        6
      54: goto          66
      57: new           #157                // class scala/MatchError
      60: dup
      61: aconst_null
      62: invokespecial #161                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      65: athrow
      66: aload_0
      67: invokeinterface #76,  1           // InterfaceMethod F:()Lscalaz/Traverse;
      72: aload_2
      73: invokevirtual #58                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      76: aload_1
      77: invokeinterface #289,  3          // InterfaceMethod scalaz/Traverse.traverseS:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
      82: aload         5
      84: getstatic     #264                // Field scalaz/Bind$.MODULE$:Lscalaz/Bind$;
      87: pop
      88: getstatic     #269                // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      91: invokevirtual #273                // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      94: checkcast     #275                // class scalaz/Bind
      97: invokevirtual #278                // Method scalaz/IndexedStateT.apply:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
     100: checkcast     #280                // class scala/Tuple2
     103: astore        7
     105: aload         7
     107: ifnull        127
     110: aload         7
     112: invokevirtual #283                // Method scala/Tuple2._1:()Ljava/lang/Object;
     115: astore        8
     117: aload         7
     119: invokevirtual #286                // Method scala/Tuple2._2:()Ljava/lang/Object;
     122: astore        9
     124: goto          136
     127: new           #157                // class scala/MatchError
     130: dup
     131: aconst_null
     132: invokespecial #161                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     135: athrow
     136: new           #280                // class scala/Tuple2
     139: dup
     140: aload         8
     142: getstatic     #239                // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
     145: pop
     146: getstatic     #292                // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
     149: aload         6
     151: aload         9
     153: invokevirtual #293                // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
     156: invokespecial #296                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     159: areturn

  public static void $init$(scalaz.OneAndTraverse);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #313,  0            // InvokeDynamic #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
