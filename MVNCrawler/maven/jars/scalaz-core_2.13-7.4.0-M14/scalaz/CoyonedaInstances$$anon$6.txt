Compiled from "Coyoneda.scala"
public final class scalaz.CoyonedaInstances$$anon$6 implements scalaz.IsomorphismOrder<scalaz.Coyoneda<F, A>, F> {
  private scalaz.syntax.OrderSyntax<scalaz.Coyoneda<F, A>> orderSyntax;

  private scalaz.syntax.EqualSyntax<scalaz.Coyoneda<F, A>> equalSyntax;

  private final scalaz.Order A$1;

  private final scalaz.Functor F$2;

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #55                 // InterfaceMethod scalaz/IsomorphismOrder.equal$:(Lscalaz/IsomorphismOrder;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #64                 // InterfaceMethod scalaz/IsomorphismOrder.order$:(Lscalaz/IsomorphismOrder;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #69                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #74                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #78                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #82                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #86                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #92                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #96                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #102                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scalaz.Coyoneda<F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #110                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scalaz.Coyoneda<F, A>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #118                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scalaz.Coyoneda<F, A>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #125                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scalaz.Coyoneda<F, A>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #132                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #138                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.Coyoneda<F, A>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #145                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<scalaz.Coyoneda<F, A>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #149                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scalaz.Coyoneda<F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #149                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scalaz.Coyoneda<F, A>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #157                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.Coyoneda<F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #157                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<F> G();
    Code:
       0: aload_0
       1: getfield      #164                // Field A$1:Lscalaz/Order;
       4: areturn

  public scalaz.Isomorphisms$Iso<scala.Function1, scalaz.Coyoneda<F, A>, F> iso();
    Code:
       0: getstatic     #173                // Field scalaz/Coyoneda$.MODULE$:Lscalaz/Coyoneda$;
       3: pop
       4: aload_0
       5: getfield      #175                // Field F$2:Lscalaz/Functor;
       8: astore_1
       9: new           #15                 // class scalaz/Coyoneda$$anon$4
      12: dup
      13: aload_1
      14: invokespecial #179                // Method scalaz/Coyoneda$$anon$4."<init>":(Lscalaz/Functor;)V
      17: aconst_null
      18: astore_1
      19: getstatic     #184                // Field scalaz/Liskov$.MODULE$:Lscalaz/Liskov$;
      22: pop
      23: new           #32                 // class scalaz/Liskov$$anon$3
      26: dup
      27: invokespecial #187                // Method scalaz/Liskov$$anon$3."<init>":()V
      30: getstatic     #184                // Field scalaz/Liskov$.MODULE$:Lscalaz/Liskov$;
      33: pop
      34: new           #32                 // class scalaz/Liskov$$anon$3
      37: dup
      38: invokespecial #187                // Method scalaz/Liskov$$anon$3."<init>":()V
      41: astore        4
      43: astore_3
      44: astore_2
      45: new           #30                 // class scalaz/Isomorphisms$Iso2$$anon$3
      48: dup
      49: aload_2
      50: aload         4
      52: aload_3
      53: invokespecial #190                // Method scalaz/Isomorphisms$Iso2$$anon$3."<init>":(Lscalaz/Isomorphisms$Iso2;Lscalaz/Liskov;Lscalaz/Liskov;)V
      56: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #199                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scalaz.Equal G();
    Code:
       0: aload_0
       1: invokevirtual #202                // Method G:()Lscalaz/Order;
       4: areturn

  public scalaz.CoyonedaInstances$$anon$6(scalaz.CoyonedaInstances, scalaz.Order, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #164                // Field A$1:Lscalaz/Order;
       5: aload_0
       6: aload_3
       7: putfield      #175                // Field F$2:Lscalaz/Functor;
      10: aload_0
      11: invokespecial #205                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #209                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      18: aload_0
      19: invokestatic  #212                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      22: invokestatic  #217                // Method scala/runtime/Statics.releaseFence:()V
      25: return
}
