Compiled from "Equal.scala"
public interface scalaz.Equal$EqualLaw {
  public static boolean commutative$(scalaz.Equal$EqualLaw, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #17                 // InterfaceMethod commutative:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public default boolean commutative(F, F);
    Code:
       0: aload_0
       1: invokeinterface #24,  1           // InterfaceMethod scalaz$Equal$EqualLaw$$$outer:()Lscalaz/Equal;
       6: aload_1
       7: aload_2
       8: invokeinterface #27,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: aload_0
      14: invokeinterface #24,  1           // InterfaceMethod scalaz$Equal$EqualLaw$$$outer:()Lscalaz/Equal;
      19: aload_2
      20: aload_1
      21: invokeinterface #27,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      26: if_icmpne     31
      29: iconst_1
      30: ireturn
      31: iconst_0
      32: ireturn

  public static boolean reflexive$(scalaz.Equal$EqualLaw, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #35                 // InterfaceMethod reflexive:(Ljava/lang/Object;)Z
       5: ireturn

  public default boolean reflexive(F);
    Code:
       0: aload_0
       1: invokeinterface #24,  1           // InterfaceMethod scalaz$Equal$EqualLaw$$$outer:()Lscalaz/Equal;
       6: aload_1
       7: aload_1
       8: invokeinterface #27,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: ireturn

  public static boolean transitive$(scalaz.Equal$EqualLaw, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #43                 // InterfaceMethod transitive:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       7: ireturn

  public default boolean transitive(F, F, F);
    Code:
       0: getstatic     #50                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: pop
       4: aload_0
       5: invokeinterface #24,  1           // InterfaceMethod scalaz$Equal$EqualLaw$$$outer:()Lscalaz/Equal;
      10: aload_1
      11: aload_2
      12: invokeinterface #27,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      17: ifeq          40
      20: aload_0
      21: invokeinterface #24,  1           // InterfaceMethod scalaz$Equal$EqualLaw$$$outer:()Lscalaz/Equal;
      26: aload_2
      27: aload_3
      28: invokeinterface #27,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ifeq          53
      44: aload_0
      45: aload_1
      46: aload_3
      47: invokestatic  #53                 // InterfaceMethod $anonfun$transitive$1:(Lscalaz/Equal$EqualLaw;Ljava/lang/Object;Ljava/lang/Object;)Z
      50: ifeq          55
      53: iconst_1
      54: ireturn
      55: iconst_0
      56: ireturn

  public static boolean naturality$(scalaz.Equal$EqualLaw, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #57                 // InterfaceMethod naturality:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public default boolean naturality(F, F);
    Code:
       0: getstatic     #50                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: pop
       4: aload_0
       5: invokeinterface #24,  1           // InterfaceMethod scalaz$Equal$EqualLaw$$$outer:()Lscalaz/Equal;
      10: invokeinterface #61,  1           // InterfaceMethod scalaz/Equal.equalIsNatural:()Z
      15: ifeq          27
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokestatic  #64                 // InterfaceMethod $anonfun$naturality$1:(Lscalaz/Equal$EqualLaw;Ljava/lang/Object;Ljava/lang/Object;)Z
      24: ifeq          29
      27: iconst_1
      28: ireturn
      29: iconst_0
      30: ireturn

  public abstract scalaz.Equal scalaz$Equal$EqualLaw$$$outer();

  public static boolean $anonfun$transitive$1(scalaz.Equal$EqualLaw, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #24,  1           // InterfaceMethod scalaz$Equal$EqualLaw$$$outer:()Lscalaz/Equal;
       6: aload_1
       7: aload_2
       8: invokeinterface #27,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: ireturn

  public static boolean $anonfun$naturality$1(scalaz.Equal$EqualLaw, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #24,  1           // InterfaceMethod scalaz$Equal$EqualLaw$$$outer:()Lscalaz/Equal;
       6: aload_1
       7: aload_2
       8: invokeinterface #27,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: aload_1
      14: aload_2
      15: invokestatic  #73                 // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: if_icmpne     31
      29: iconst_1
      30: ireturn
      31: iconst_0
      32: ireturn

  public static void $init$(scalaz.Equal<F>.EqualLaw);
    Code:
       0: return
}
