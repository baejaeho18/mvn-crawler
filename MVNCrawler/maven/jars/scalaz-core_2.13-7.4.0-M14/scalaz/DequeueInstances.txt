Compiled from "Dequeue.scala"
public abstract class scalaz.DequeueInstances {
  private final scalaz.Traverse<scalaz.Dequeue> dequeueInstances;

  public <A> scalaz.Equal<scalaz.Dequeue<A>> equalDequeue(scalaz.Equal<A>);
    Code:
       0: new           #10                 // class scalaz/DequeueInstances$$anon$1
       3: dup
       4: aconst_null
       5: aload_1
       6: invokespecial #25                 // Method scalaz/DequeueInstances$$anon$1."<init>":(Lscalaz/DequeueInstances;Lscalaz/Equal;)V
       9: areturn

  public <A> scalaz.Monoid<scalaz.Dequeue<A>> dequeueMonoid();
    Code:
       0: new           #12                 // class scalaz/DequeueInstances$$anon$2
       3: dup
       4: aconst_null
       5: invokespecial #34                 // Method scalaz/DequeueInstances$$anon$2."<init>":(Lscalaz/DequeueInstances;)V
       8: areturn

  public scalaz.Traverse<scalaz.Dequeue> dequeueInstances();
    Code:
       0: aload_0
       1: getfield      #38                 // Field dequeueInstances:Lscalaz/Traverse;
       4: areturn

  public scalaz.DequeueInstances();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #14                 // class scalaz/DequeueInstances$$anon$3
       8: dup
       9: aload_0
      10: invokespecial #42                 // Method scalaz/DequeueInstances$$anon$3."<init>":(Lscalaz/DequeueInstances;)V
      13: putfield      #38                 // Field dequeueInstances:Lscalaz/Traverse;
      16: return
}
