Compiled from "Bias.scala"
public interface scalaz.LeftFunctor<F, X> extends scalaz.Functor<?> {
  public abstract scalaz.Bifunctor<F> F();

  public static java.lang.Object map$(scalaz.LeftFunctor, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #28                 // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <A, C> F map(F, scala.Function1<A, C>);
    Code:
       0: aload_0
       1: invokeinterface #34,  1           // InterfaceMethod F:()Lscalaz/Bifunctor;
       6: aload_1
       7: aload_2
       8: invokedynamic #52,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
      13: invokeinterface #58,  4           // InterfaceMethod scalaz/Bifunctor.bimap:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      18: areturn

  public static java.lang.Object $anonfun$map$1(java.lang.Object);
    Code:
       0: getstatic     #66                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokevirtual #69                 // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static void $init$(scalaz.LeftFunctor);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #83,  0             // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
