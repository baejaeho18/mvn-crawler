Compiled from "PLens.scala"
public interface scalaz.PLensCategory extends scalaz.Choice<scalaz.PLensFamily>, scalaz.Split<scalaz.PLensFamily> {
  public static scalaz.PLensFamily compose$(scalaz.PLensCategory, scalaz.PLensFamily, scalaz.PLensFamily);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #29                 // InterfaceMethod compose:(Lscalaz/PLensFamily;Lscalaz/PLensFamily;)Lscalaz/PLensFamily;
       6: areturn

  public default <A, B, C> scalaz.PLensFamily<A, A, C, C> compose(scalaz.PLensFamily<B, B, C, C>, scalaz.PLensFamily<A, A, B, B>);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: aload_2
       8: invokevirtual #37                 // Method scalaz/PLensFamily.compose:(Lscalaz/PLensFamily;)Lscalaz/PLensFamily;
      11: areturn

  public static scalaz.PLensFamily id$(scalaz.PLensCategory);
    Code:
       0: aload_0
       1: invokespecial #44                 // InterfaceMethod id:()Lscalaz/PLensFamily;
       4: areturn

  public default <A> scalaz.PLensFamily<A, A, A, A> id();
    Code:
       0: getstatic     #51                 // Field scalaz/PLensFamily$.MODULE$:Lscalaz/PLensFamily$;
       3: invokestatic  #57                 // InterfaceMethod scalaz/PLensFunctions.plensId$:(Lscalaz/PLensFunctions;)Lscalaz/PLensFamily;
       6: areturn

  public static scalaz.PLensFamily choice$(scalaz.PLensCategory, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #65                 // InterfaceMethod choice:(Lscala/Function0;Lscala/Function0;)Lscalaz/PLensFamily;
       6: areturn

  public default <A, B, C> scalaz.PLensFamily<scalaz.$bslash$div<A, B>, scalaz.$bslash$div<A, B>, C, C> choice(scala.Function0<scalaz.PLensFamily<A, A, C, C>>, scala.Function0<scalaz.PLensFamily<B, B, C, C>>);
    Code:
       0: getstatic     #51                 // Field scalaz/PLensFamily$.MODULE$:Lscalaz/PLensFamily$;
       3: pop
       4: aload_1
       5: aload_2
       6: invokedynamic #89,  0             // InvokeDynamic #0:apply:(Lscala/Function0;Lscala/Function0;)Lscala/Function1;
      11: astore_3
      12: new           #20                 // class scalaz/PLensFunctions$$anon$2
      15: dup
      16: aconst_null
      17: aload_3
      18: invokespecial #93                 // Method scalaz/PLensFunctions$$anon$2."<init>":(Lscalaz/PLensFunctions;Lscala/Function1;)V
      21: areturn

  public static scalaz.PLensFamily split$(scalaz.PLensCategory, scalaz.PLensFamily, scalaz.PLensFamily);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #99                 // InterfaceMethod split:(Lscalaz/PLensFamily;Lscalaz/PLensFamily;)Lscalaz/PLensFamily;
       6: areturn

  public default <A, B, C, D> scalaz.PLensFamily<scala.Tuple2<A, C>, scala.Tuple2<A, C>, scala.Tuple2<B, D>, scala.Tuple2<B, D>> split(scalaz.PLensFamily<A, A, B, B>, scalaz.PLensFamily<C, C, D, D>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: aload_2
       8: invokevirtual #103                // Method scalaz/PLensFamily.product:(Lscalaz/PLensFamily;)Lscalaz/PLensFamily;
      11: areturn

  public static scalaz.IndexedStoreT $anonfun$choice$2(scalaz.IndexedStoreT);
    Code:
       0: aload_0
       1: getstatic     #111                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
       4: invokevirtual #115                // Method scalaz/$bslash$div$.left:()Lscala/Function1;
       7: getstatic     #120                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
      10: pop
      11: getstatic     #125                // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      14: invokevirtual #128                // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      17: invokevirtual #134                // Method scalaz/IndexedStoreT.map:(Lscala/Function1;Lscalaz/Functor;)Lscalaz/IndexedStoreT;
      20: areturn

  public static scalaz.IndexedStoreT $anonfun$choice$3(scalaz.IndexedStoreT);
    Code:
       0: aload_0
       1: getstatic     #111                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
       4: invokevirtual #140                // Method scalaz/$bslash$div$.right:()Lscala/Function1;
       7: getstatic     #120                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
      10: pop
      11: getstatic     #125                // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      14: invokevirtual #128                // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      17: invokevirtual #134                // Method scalaz/IndexedStoreT.map:(Lscala/Function1;Lscalaz/Functor;)Lscalaz/IndexedStoreT;
      20: areturn

  public static scala.Option $anonfun$choice$1(scala.Function0, scala.Function0, scalaz.$bslash$div);
    Code:
       0: aload_2
       1: instanceof    #145                // class scalaz/$minus$bslash$div
       4: ifeq          37
       7: aload_2
       8: checkcast     #145                // class scalaz/$minus$bslash$div
      11: invokevirtual #149                // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      14: astore_3
      15: aload_0
      16: invokeinterface #153,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      21: checkcast     #34                 // class scalaz/PLensFamily
      24: aload_3
      25: invokevirtual #157                // Method scalaz/PLensFamily.run:(Ljava/lang/Object;)Lscala/Option;
      28: invokedynamic #163,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      33: invokevirtual #168                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      36: areturn
      37: aload_2
      38: instanceof    #170                // class scalaz/$bslash$div$minus
      41: ifeq          76
      44: aload_2
      45: checkcast     #170                // class scalaz/$bslash$div$minus
      48: invokevirtual #173                // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      51: astore        4
      53: aload_1
      54: invokeinterface #153,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      59: checkcast     #34                 // class scalaz/PLensFamily
      62: aload         4
      64: invokevirtual #157                // Method scalaz/PLensFamily.run:(Ljava/lang/Object;)Lscala/Option;
      67: invokedynamic #177,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      72: invokevirtual #168                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      75: areturn
      76: new           #179                // class scala/MatchError
      79: dup
      80: aload_2
      81: invokespecial #182                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      84: athrow

  public static void $init$(scalaz.PLensCategory);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #198,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
