Compiled from "Zap.scala"
public interface scalaz.Zap<F, G> {
  public static <F, G> scalaz.Zap<?, ?> comonadMonadZap(scalaz.Zap<F, G>);
    Code:
       0: getstatic     #34                 // Field scalaz/Zap$.MODULE$:Lscalaz/Zap$;
       3: pop
       4: new           #24                 // class scalaz/ZapInstances$$anon$6
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #38                 // Method scalaz/ZapInstances$$anon$6."<init>":(Lscalaz/ZapInstances;Lscalaz/Zap;)V
      13: areturn

  public static <F, G> scalaz.Zap<?, ?> monadComonadZap(scalaz.Zap<F, G>);
    Code:
       0: getstatic     #34                 // Field scalaz/Zap$.MODULE$:Lscalaz/Zap$;
       3: pop
       4: new           #22                 // class scalaz/ZapInstances$$anon$5
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #41                 // Method scalaz/ZapInstances$$anon$5."<init>":(Lscalaz/ZapInstances;Lscalaz/Zap;)V
      13: areturn

  public static <F, FF, G, GG> scalaz.Zap<?, ?> coproductProductZap(scalaz.Zap<FF, F>, scalaz.Zap<GG, G>);
    Code:
       0: getstatic     #34                 // Field scalaz/Zap$.MODULE$:Lscalaz/Zap$;
       3: pop
       4: new           #20                 // class scalaz/ZapInstances$$anon$4
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: invokespecial #49                 // Method scalaz/ZapInstances$$anon$4."<init>":(Lscalaz/ZapInstances;Lscalaz/Zap;Lscalaz/Zap;)V
      14: areturn

  public static <F, FF, G, GG> scalaz.Zap<?, ?> productCoproductZap(scalaz.Zap<F, FF>, scalaz.Zap<G, GG>);
    Code:
       0: getstatic     #34                 // Field scalaz/Zap$.MODULE$:Lscalaz/Zap$;
       3: pop
       4: new           #18                 // class scalaz/ZapInstances$$anon$3
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: invokespecial #52                 // Method scalaz/ZapInstances$$anon$3."<init>":(Lscalaz/ZapInstances;Lscalaz/Zap;Lscalaz/Zap;)V
      14: areturn

  public static scalaz.Zap<java.lang.Object, java.lang.Object> identityZap();
    Code:
       0: getstatic     #34                 // Field scalaz/Zap$.MODULE$:Lscalaz/Zap$;
       3: invokevirtual #57                 // Method scalaz/Zap$.identityZap:()Lscalaz/Zap;
       6: areturn

  public abstract <A, B, C> C zapWith(F, G, scala.Function2<A, B, C>);

  public static java.lang.Object zap$(scalaz.Zap, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #71                 // InterfaceMethod zap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public default <A, B> B zap(F, G);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #93,  0             // InvokeDynamic #0:apply:()Lscala/Function2;
       8: invokeinterface #95,  4           // InterfaceMethod zapWith:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      13: areturn

  public static scalaz.Zap flip$(scalaz.Zap);
    Code:
       0: aload_0
       1: invokespecial #100                // InterfaceMethod flip:()Lscalaz/Zap;
       4: areturn

  public default scalaz.Zap<G, F> flip();
    Code:
       0: new           #16                 // class scalaz/Zap$$anon$1
       3: dup
       4: aload_0
       5: invokespecial #104                // Method scalaz/Zap$$anon$1."<init>":(Lscalaz/Zap;)V
       8: areturn

  public static java.lang.Object $anonfun$zap$1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #111,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static void $init$(scalaz.Zap);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #125,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
