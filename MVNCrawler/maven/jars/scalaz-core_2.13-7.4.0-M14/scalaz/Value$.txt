Compiled from "Name.scala"
public final class scalaz.Value$ implements java.io.Serializable {
  public static final scalaz.Value$ MODULE$;

  private static final scalaz.Monad<scalaz.Value> value;

  private static final scalaz.IsCovariant<scalaz.Value> covariant;

  public static {};
    Code:
       0: new           #2                  // class scalaz/Value$
       3: dup
       4: invokespecial #26                 // Method "<init>":()V
       7: putstatic     #28                 // Field MODULE$:Lscalaz/Value$;
      10: new           #11                 // class scalaz/Value$$anon$4
      13: dup
      14: invokespecial #29                 // Method scalaz/Value$$anon$4."<init>":()V
      17: putstatic     #31                 // Field value:Lscalaz/Monad;
      20: getstatic     #36                 // Field scalaz/IsCovariant$.MODULE$:Lscalaz/IsCovariant$;
      23: pop
      24: new           #9                  // class scalaz/IsCovariant$$anon$3
      27: dup
      28: invokespecial #37                 // Method scalaz/IsCovariant$$anon$3."<init>":()V
      31: putstatic     #39                 // Field covariant:Lscalaz/IsCovariant;
      34: return

  public scalaz.Monad<scalaz.Value> value();
    Code:
       0: getstatic     #31                 // Field value:Lscalaz/Monad;
       3: areturn

  public <A> scalaz.Equal<scalaz.Value<A>> valueEqual(scalaz.Equal<A>);
    Code:
       0: new           #13                 // class scalaz/Value$$anonfun$valueEqual$2
       3: dup
       4: aload_1
       5: invokespecial #49                 // Method scalaz/Value$$anonfun$valueEqual$2."<init>":(Lscalaz/Equal;)V
       8: areturn

  public scalaz.IsCovariant<scalaz.Value> covariant();
    Code:
       0: getstatic     #39                 // Field covariant:Lscalaz/IsCovariant;
       3: areturn

  public <A> scalaz.Value<A> apply(A);
    Code:
       0: new           #57                 // class scalaz/Value
       3: dup
       4: aload_1
       5: invokespecial #60                 // Method scalaz/Value."<init>":(Ljava/lang/Object;)V
       8: areturn

  public <A> scala.Option<A> unapply(scalaz.Value<A>);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #70                 // Field scala/None$.MODULE$:Lscala/None$;
       7: areturn
       8: new           #72                 // class scala/Some
      11: dup
      12: aload_1
      13: invokevirtual #75                 // Method scalaz/Value.value:()Ljava/lang/Object;
      16: invokespecial #76                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      19: areturn

  private java.lang.Object writeReplace();
    Code:
       0: new           #80                 // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class scalaz/Value$
       6: invokespecial #83                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public static final boolean scalaz$Value$$$anonfun$valueEqual$1(scalaz.Value, scalaz.Value, scalaz.Equal);
    Code:
       0: getstatic     #93                 // Field scalaz/Equal$.MODULE$:Lscalaz/Equal$;
       3: pop
       4: aload_2
       5: aload_0
       6: invokevirtual #75                 // Method scalaz/Value.value:()Ljava/lang/Object;
       9: aload_1
      10: invokevirtual #75                 // Method scalaz/Value.value:()Ljava/lang/Object;
      13: invokeinterface #99,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      18: ireturn

  private scalaz.Value$();
    Code:
       0: aload_0
       1: invokespecial #100                // Method java/lang/Object."<init>":()V
       4: return
}
