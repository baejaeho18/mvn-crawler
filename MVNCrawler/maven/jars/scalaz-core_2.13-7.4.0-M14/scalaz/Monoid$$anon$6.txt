Compiled from "Monoid.scala"
public final class scalaz.Monoid$$anon$6 implements scalaz.Monoid<A> {
  private scalaz.syntax.MonoidSyntax<A> monoidSyntax;

  private scalaz.syntax.SemigroupSyntax<A> semigroupSyntax;

  private final java.lang.Object z$1;

  private final scala.Function2 f$1;

  public A multiply(A, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #40                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(A, scalaz.Equal<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #52                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final <B> B ifEmpty(A, scala.Function0<B>, scala.Function0<B>, scalaz.Equal<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #62                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final <B> B onNotEmpty(A, scala.Function0<B>, scalaz.Equal<A>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #72                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final <A, B> B onEmpty(A, scala.Function0<B>, scalaz.Equal<A>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #78                 // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public <S> A unfoldlSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, A>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #86                 // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <S> A unfoldrSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<A, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #92                 // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #99                 // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #106                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<A>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #113                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public A multiply1(A, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #118                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<A> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, A>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #125                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<A> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<A, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #130                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #137                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #144                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<A>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #151                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<A> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #155                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #155                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<A> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #163                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #163                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public A zero();
    Code:
       0: aload_0
       1: getfield      #171                // Field z$1:Ljava/lang/Object;
       4: areturn

  public A append(A, scala.Function0<A>);
    Code:
       0: aload_0
       1: getfield      #178                // Field f$1:Lscala/Function2;
       4: aload_1
       5: aload_2
       6: invokeinterface #183,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public scalaz.Monoid$$anon$6(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #171                // Field z$1:Ljava/lang/Object;
       5: aload_0
       6: aload_2
       7: putfield      #178                // Field f$1:Lscala/Function2;
      10: aload_0
      11: invokespecial #188                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #192                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      18: aload_0
      19: invokestatic  #195                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      22: invokestatic  #200                // Method scala/runtime/Statics.releaseFence:()V
      25: return
}
