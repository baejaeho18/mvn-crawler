Compiled from "Traverse1.scala"
public final class scalaz.Traverse1$$anon$5 implements scalaz.syntax.Traverse1Syntax<F> {
  private final scalaz.Traverse1 $outer;

  public <A> scalaz.syntax.Traverse1Ops<F, A> ToTraverse1Ops(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #25                 // InterfaceMethod scalaz/syntax/Traverse1Syntax.ToTraverse1Ops$:(Lscalaz/syntax/Traverse1Syntax;Ljava/lang/Object;)Lscalaz/syntax/Traverse1Ops;
       5: areturn

  public <A> scalaz.syntax.Foldable1Ops<F, A> ToFoldable1Ops(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #37                 // InterfaceMethod scalaz/syntax/Foldable1Syntax.ToFoldable1Ops$:(Lscalaz/syntax/Foldable1Syntax;Ljava/lang/Object;)Lscalaz/syntax/Foldable1Ops;
       5: areturn

  public <A> scalaz.syntax.TraverseOps<F, A> ToTraverseOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #46                 // InterfaceMethod scalaz/syntax/TraverseSyntax.ToTraverseOps$:(Lscalaz/syntax/TraverseSyntax;Ljava/lang/Object;)Lscalaz/syntax/TraverseOps;
       5: areturn

  public <A> scalaz.syntax.FoldableOps<F, A> ToFoldableOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #55                 // InterfaceMethod scalaz/syntax/FoldableSyntax.ToFoldableOps$:(Lscalaz/syntax/FoldableSyntax;Ljava/lang/Object;)Lscalaz/syntax/FoldableOps;
       5: areturn

  public <A> scalaz.syntax.FunctorOps<F, A> ToFunctorOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #62                 // InterfaceMethod scalaz/syntax/FunctorSyntax.ToFunctorOps$:(Lscalaz/syntax/FunctorSyntax;Ljava/lang/Object;)Lscalaz/syntax/FunctorOps;
       5: areturn

  public <A, B> scalaz.syntax.FunctorSyntax<F>.LiftV<A, B> ToLiftV(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #69                 // InterfaceMethod scalaz/syntax/FunctorSyntax.ToLiftV$:(Lscalaz/syntax/FunctorSyntax;Lscala/Function1;)Lscalaz/syntax/FunctorSyntax$LiftV;
       5: areturn

  public <A> scalaz.syntax.InvariantFunctorOps<F, A> ToInvariantFunctorOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #79                 // InterfaceMethod scalaz/syntax/InvariantFunctorSyntax.ToInvariantFunctorOps$:(Lscalaz/syntax/InvariantFunctorSyntax;Ljava/lang/Object;)Lscalaz/syntax/InvariantFunctorOps;
       5: areturn

  public scalaz.Traverse1<F> F();
    Code:
       0: aload_0
       1: getfield      #84                 // Field $outer:Lscalaz/Traverse1;
       4: areturn

  public scalaz.InvariantFunctor F();
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method F:()Lscalaz/Traverse1;
       4: areturn

  public scalaz.Functor F();
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method F:()Lscalaz/Traverse1;
       4: areturn

  public scalaz.Foldable F();
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method F:()Lscalaz/Traverse1;
       4: areturn

  public scalaz.Traverse F();
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method F:()Lscalaz/Traverse1;
       4: areturn

  public scalaz.Foldable1 F();
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method F:()Lscalaz/Traverse1;
       4: areturn

  public scalaz.Traverse1$$anon$5(scalaz.Traverse1);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #84                 // Field $outer:Lscalaz/Traverse1;
      11: aload_0
      12: invokespecial #96                 // Method java/lang/Object."<init>":()V
      15: return
}
