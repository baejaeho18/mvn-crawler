Compiled from "CaseInsensitive.scala"
public abstract class scalaz.CaseInsensitive<A> {
  private final scalaz.Need<java.lang.Object> hash;

  public static <A> scalaz.CaseInsensitive<A> apply(A, scalaz.FoldCase<A>);
    Code:
       0: getstatic     #36                 // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       3: aload_0
       4: aload_1
       5: invokevirtual #38                 // Method scalaz/CaseInsensitive$.apply:(Ljava/lang/Object;Lscalaz/FoldCase;)Lscalaz/CaseInsensitive;
       8: areturn

  public static <A> scalaz.Show<scalaz.CaseInsensitive<A>> CaseInsensitiveShow(scalaz.Show<A>);
    Code:
       0: getstatic     #36                 // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       3: astore_1
       4: new           #22                 // class scalaz/CaseInsensitiveInstances$$anonfun$CaseInsensitiveShow$2
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #48                 // Method scalaz/CaseInsensitiveInstances$$anonfun$CaseInsensitiveShow$2."<init>":(Lscalaz/CaseInsensitiveInstances;Lscalaz/Show;)V
      13: areturn

  public static <A> scalaz.Order<scalaz.CaseInsensitive<A>> CaseInsensitiveOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #36                 // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       3: astore_1
       4: new           #20                 // class scalaz/CaseInsensitiveInstances$$anonfun$CaseInsensitiveOrder$2
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #58                 // Method scalaz/CaseInsensitiveInstances$$anonfun$CaseInsensitiveOrder$2."<init>":(Lscalaz/CaseInsensitiveInstances;Lscalaz/Order;)V
      13: areturn

  public static <A> scalaz.Equal<scalaz.CaseInsensitive<A>> CaseInsensitiveEqual(scalaz.Equal<A>);
    Code:
       0: getstatic     #36                 // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       3: astore_1
       4: new           #18                 // class scalaz/CaseInsensitiveInstances$$anonfun$CaseInsensitiveEqual$2
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #67                 // Method scalaz/CaseInsensitiveInstances$$anonfun$CaseInsensitiveEqual$2."<init>":(Lscalaz/CaseInsensitiveInstances;Lscalaz/Equal;)V
      13: areturn

  public static <A> scalaz.Monoid<scalaz.CaseInsensitive<A>> CaseInsensitiveMonoid(scalaz.FoldCase<A>, scalaz.Monoid<A>);
    Code:
       0: getstatic     #36                 // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       3: pop
       4: new           #16                 // class scalaz/CaseInsensitiveInstances$$anon$2
       7: dup
       8: aconst_null
       9: aload_1
      10: invokespecial #77                 // Method scalaz/CaseInsensitiveInstances$$anon$2."<init>":(Lscalaz/CaseInsensitiveInstances;Lscalaz/Monoid;)V
      13: areturn

  public abstract A original();

  public abstract A foldedCase();

  public final <B> scalaz.CaseInsensitive<B> map(scala.Function1<A, B>, scalaz.FoldCase<B>);
    Code:
       0: getstatic     #36                 // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       3: aload_1
       4: aload_0
       5: invokevirtual #89                 // Method original:()Ljava/lang/Object;
       8: invokeinterface #94,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: aload_2
      14: invokevirtual #38                 // Method scalaz/CaseInsensitive$.apply:(Ljava/lang/Object;Lscalaz/FoldCase;)Lscalaz/CaseInsensitive;
      17: areturn

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/CaseInsensitive
       4: ifeq          30
       7: aload_1
       8: checkcast     #2                  // class scalaz/CaseInsensitive
      11: astore_2
      12: aload_0
      13: invokevirtual #102                // Method foldedCase:()Ljava/lang/Object;
      16: aload_2
      17: invokevirtual #102                // Method foldedCase:()Ljava/lang/Object;
      20: invokestatic  #107                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      23: ifeq          28
      26: iconst_1
      27: ireturn
      28: iconst_0
      29: ireturn
      30: iconst_0
      31: ireturn

  public final int hashCode();
    Code:
       0: aload_0
       1: getfield      #111                // Field hash:Lscalaz/Need;
       4: invokevirtual #116                // Method scalaz/Need.value:()Ljava/lang/Object;
       7: invokestatic  #120                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      10: ireturn

  public static final int $anonfun$hash$1(scalaz.CaseInsensitive);
    Code:
       0: aload_0
       1: invokevirtual #102                // Method foldedCase:()Ljava/lang/Object;
       4: invokevirtual #125                // Method java/lang/Object.hashCode:()I
       7: ireturn

  public scalaz.CaseInsensitive();
    Code:
       0: aload_0
       1: invokespecial #128                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #133                // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
       8: pop
       9: aload_0
      10: invokedynamic #149,  0            // InvokeDynamic #0:apply$mcI$sp:(Lscalaz/CaseInsensitive;)Lscala/runtime/java8/JFunction0$mcI$sp;
      15: astore_1
      16: new           #113                // class scalaz/Need
      19: dup
      20: aload_1
      21: invokespecial #152                // Method scalaz/Need."<init>":(Lscala/Function0;)V
      24: putfield      #111                // Field hash:Lscalaz/Need;
      27: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #166,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
