Compiled from "PLens.scala"
public abstract class scalaz.PLensInstances {
  private volatile scalaz.PLensInstances$NumericPLens$ NumericPLens$module;

  private volatile scalaz.PLensInstances$FractionalPLens$ FractionalPLens$module;

  private volatile scalaz.PLensInstances$IntegralPLens$ IntegralPLens$module;

  private final scalaz.PLensCategory plensCategory;

  public scalaz.PLensInstances$NumericPLens$ NumericPLens();
    Code:
       0: aload_0
       1: getfield      #41                 // Field NumericPLens$module:Lscalaz/PLensInstances$NumericPLens$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #45                 // Method NumericPLens$lzycompute$1:()V
      11: aload_0
      12: getfield      #41                 // Field NumericPLens$module:Lscalaz/PLensInstances$NumericPLens$;
      15: areturn

  public scalaz.PLensInstances$FractionalPLens$ FractionalPLens();
    Code:
       0: aload_0
       1: getfield      #50                 // Field FractionalPLens$module:Lscalaz/PLensInstances$FractionalPLens$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #53                 // Method FractionalPLens$lzycompute$1:()V
      11: aload_0
      12: getfield      #50                 // Field FractionalPLens$module:Lscalaz/PLensInstances$FractionalPLens$;
      15: areturn

  public scalaz.PLensInstances$IntegralPLens$ IntegralPLens();
    Code:
       0: aload_0
       1: getfield      #56                 // Field IntegralPLens$module:Lscalaz/PLensInstances$IntegralPLens$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #59                 // Method IntegralPLens$lzycompute$1:()V
      11: aload_0
      12: getfield      #56                 // Field IntegralPLens$module:Lscalaz/PLensInstances$IntegralPLens$;
      15: areturn

  public scalaz.PLensCategory plensCategory();
    Code:
       0: aload_0
       1: getfield      #62                 // Field plensCategory:Lscalaz/PLensCategory;
       4: areturn

  public <A, B> scalaz.IndexedStateT<A, A, java.lang.Object, scala.Option<B>> PLensFamilyState(scalaz.PLensFamily<A, ?, B, ?>);
    Code:
       0: aload_1
       1: invokevirtual #72                 // Method scalaz/PLensFamily.st:()Lscalaz/IndexedStateT;
       4: areturn

  public <S, R> scalaz.Unzip<?> PLensFamilyUnzip();
    Code:
       0: new           #12                 // class scalaz/PLensInstances$$anon$4
       3: dup
       4: aconst_null
       5: invokespecial #80                 // Method scalaz/PLensInstances$$anon$4."<init>":(Lscalaz/PLensInstances;)V
       8: areturn

  public <S, N> scalaz.PLensInstances$NumericPLens<S, N> numericPLens(scalaz.PLensFamily<S, S, N, N>, scala.math.Numeric<N>);
    Code:
       0: new           #26                 // class scalaz/PLensInstances$NumericPLens
       3: dup
       4: aload_0
       5: aload_1
       6: getstatic     #91                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: aload_2
      10: invokevirtual #95                 // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #97                 // class scala/math/Numeric
      16: aload_2
      17: invokespecial #100                // Method scalaz/PLensInstances$NumericPLens."<init>":(Lscalaz/PLensInstances;Lscalaz/PLensFamily;Lscala/math/Numeric;Lscala/math/Numeric;)V
      20: areturn

  public <S, F> scalaz.PLensInstances$FractionalPLens<S, F> fractionalPLens(scalaz.PLensFamily<S, S, F, F>, scala.math.Fractional<F>);
    Code:
       0: new           #14                 // class scalaz/PLensInstances$FractionalPLens
       3: dup
       4: aload_0
       5: aload_1
       6: getstatic     #91                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: aload_2
      10: invokevirtual #95                 // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #107                // class scala/math/Fractional
      16: invokespecial #110                // Method scalaz/PLensInstances$FractionalPLens."<init>":(Lscalaz/PLensInstances;Lscalaz/PLensFamily;Lscala/math/Fractional;)V
      19: areturn

  public <S, I> scalaz.PLensInstances$IntegralPLens<S, I> integralPLens(scalaz.PLensFamily<S, S, I, I>, scala.math.Integral<I>);
    Code:
       0: new           #20                 // class scalaz/PLensInstances$IntegralPLens
       3: dup
       4: aload_0
       5: aload_1
       6: getstatic     #91                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: aload_2
      10: invokevirtual #95                 // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #117                // class scala/math/Integral
      16: invokespecial #120                // Method scalaz/PLensInstances$IntegralPLens."<init>":(Lscalaz/PLensInstances;Lscalaz/PLensFamily;Lscala/math/Integral;)V
      19: areturn

  private final void NumericPLens$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #41                 // Field NumericPLens$module:Lscalaz/PLensInstances$NumericPLens$;
       6: ifnonnull     21
       9: aload_0
      10: new           #29                 // class scalaz/PLensInstances$NumericPLens$
      13: dup
      14: aload_0
      15: invokespecial #122                // Method scalaz/PLensInstances$NumericPLens$."<init>":(Lscalaz/PLensInstances;)V
      18: putfield      #41                 // Field NumericPLens$module:Lscalaz/PLensInstances$NumericPLens$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void FractionalPLens$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #50                 // Field FractionalPLens$module:Lscalaz/PLensInstances$FractionalPLens$;
       6: ifnonnull     21
       9: aload_0
      10: new           #17                 // class scalaz/PLensInstances$FractionalPLens$
      13: dup
      14: aload_0
      15: invokespecial #125                // Method scalaz/PLensInstances$FractionalPLens$."<init>":(Lscalaz/PLensInstances;)V
      18: putfield      #50                 // Field FractionalPLens$module:Lscalaz/PLensInstances$FractionalPLens$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void IntegralPLens$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #56                 // Field IntegralPLens$module:Lscalaz/PLensInstances$IntegralPLens$;
       6: ifnonnull     21
       9: aload_0
      10: new           #23                 // class scalaz/PLensInstances$IntegralPLens$
      13: dup
      14: aload_0
      15: invokespecial #126                // Method scalaz/PLensInstances$IntegralPLens$."<init>":(Lscalaz/PLensInstances;)V
      18: putfield      #56                 // Field IntegralPLens$module:Lscalaz/PLensInstances$IntegralPLens$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  public scalaz.PLensInstances();
    Code:
       0: aload_0
       1: invokespecial #128                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #10                 // class scalaz/PLensInstances$$anon$3
       8: dup
       9: aconst_null
      10: invokespecial #129                // Method scalaz/PLensInstances$$anon$3."<init>":(Lscalaz/PLensInstances;)V
      13: putfield      #62                 // Field plensCategory:Lscalaz/PLensCategory;
      16: return
}
