Compiled from "UnwriterT.scala"
public final class scalaz.UnwriterTInstances$$anon$6 implements scalaz.UnwriterTBitraverse<F> {
  private scalaz.syntax.BitraverseSyntax<?> bitraverseSyntax;

  private scalaz.syntax.BifoldableSyntax<?> bifoldableSyntax;

  private scalaz.syntax.BifunctorSyntax<?> bifunctorSyntax;

  private final scalaz.Traverse F0$6;

  public <G, A, B, C, D> G bitraverseImpl(scalaz.UnwriterT<F, A, B>, scala.Function1<A, G>, scala.Function1<B, G>, scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #45                 // InterfaceMethod scalaz/UnwriterTBitraverse.bitraverseImpl$:(Lscalaz/UnwriterTBitraverse;Lscalaz/UnwriterT;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public <A, B, C, D> scalaz.UnwriterT<F, C, D> bimap(scalaz.UnwriterT<F, A, B>, scala.Function1<A, C>, scala.Function1<B, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #59                 // InterfaceMethod scalaz/UnwriterTBifunctor.bimap$:(Lscalaz/UnwriterTBifunctor;Lscalaz/UnwriterT;Lscala/Function1;Lscala/Function1;)Lscalaz/UnwriterT;
       7: areturn

  public <G> scalaz.Bitraverse<?> compose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #67                 // InterfaceMethod scalaz/Bitraverse.compose$:(Lscalaz/Bitraverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> product(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #72                 // InterfaceMethod scalaz/Bitraverse.product$:(Lscalaz/Bitraverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G, A, B, C, D> scala.Function1<scalaz.UnwriterT<F, A, B>, G> bitraverseF(scala.Function1<A, G>, scala.Function1<B, G>, scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #79                 // InterfaceMethod scalaz/Bitraverse.bitraverseF$:(Lscalaz/Bitraverse;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
       7: areturn

  public <X> scalaz.Traverse<?> leftTraverse();
    Code:
       0: aload_0
       1: invokestatic  #86                 // InterfaceMethod scalaz/Bitraverse.leftTraverse$:(Lscalaz/Bitraverse;)Lscalaz/Traverse;
       4: areturn

  public <X> scalaz.Traverse<?> rightTraverse();
    Code:
       0: aload_0
       1: invokestatic  #90                 // InterfaceMethod scalaz/Bitraverse.rightTraverse$:(Lscalaz/Bitraverse;)Lscalaz/Traverse;
       4: areturn

  public scalaz.Traverse<?> uTraverse();
    Code:
       0: aload_0
       1: invokestatic  #95                 // InterfaceMethod scalaz/Bitraverse.uTraverse$:(Lscalaz/Bitraverse;)Lscalaz/Traverse;
       4: areturn

  public <G> scalaz.Bitraverse<?>.Bitraversal<G> bitraversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #103                // InterfaceMethod scalaz/Bitraverse.bitraversal$:(Lscalaz/Bitraverse;Lscalaz/Applicative;)Lscalaz/Bitraverse$Bitraversal;
       5: areturn

  public <S> scalaz.Bitraverse<?>.Bitraversal<?> bitraversalS();
    Code:
       0: aload_0
       1: invokestatic  #110                // InterfaceMethod scalaz/Bitraverse.bitraversalS$:(Lscalaz/Bitraverse;)Lscalaz/Bitraverse$Bitraversal;
       4: areturn

  public java.lang.Object bitraverse(java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #118                // InterfaceMethod scalaz/Bitraverse.bitraverse$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT bitraverseS(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #125                // InterfaceMethod scalaz/Bitraverse.bitraverseS$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Lscalaz/IndexedStateT;
       7: areturn

  public scala.Tuple2 runBitraverseS(java.lang.Object, java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #132                // InterfaceMethod scalaz/Bitraverse.runBitraverseS$:(Lscalaz/Bitraverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Lscala/Tuple2;
       9: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #139                // InterfaceMethod scalaz/Bitraverse.traverseSTrampoline$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       9: areturn

  public scalaz.Kleisli bitraverseKTrampoline(java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #146                // InterfaceMethod scalaz/Bitraverse.bitraverseKTrampoline$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       9: areturn

  public scala.Tuple2 bifoldLShape(java.lang.Object, java.lang.Object, scala.Function2, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #153                // InterfaceMethod scalaz/Bitraverse.bifoldLShape$:(Lscalaz/Bitraverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Lscala/Tuple2;
       9: areturn

  public java.lang.Object bisequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #162                // InterfaceMethod scalaz/Bitraverse.bisequence$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object bifoldLeft(java.lang.Object, java.lang.Object, scala.Function2, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #168                // InterfaceMethod scalaz/Bitraverse.bifoldLeft$:(Lscalaz/Bitraverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object bifoldMap(java.lang.Object, scala.Function1, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #175                // InterfaceMethod scalaz/Bitraverse.bifoldMap$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object bifoldRight(java.lang.Object, scala.Function0, scala.Function2, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #182                // InterfaceMethod scalaz/Bitraverse.bifoldRight$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  public <G, H> scalaz.Bitraverse<?> embed(scalaz.Traverse<G>, scalaz.Traverse<H>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #191                // InterfaceMethod scalaz/Bitraverse.embed$:(Lscalaz/Bitraverse;Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Bitraverse;
       6: areturn

  public <G> scalaz.Bitraverse<?> embedLeft(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #197                // InterfaceMethod scalaz/Bitraverse.embedLeft$:(Lscalaz/Bitraverse;Lscalaz/Traverse;)Lscalaz/Bitraverse;
       5: areturn

  public <H> scalaz.Bitraverse<?> embedRight(scalaz.Traverse<H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #202                // InterfaceMethod scalaz/Bitraverse.embedRight$:(Lscalaz/Bitraverse;Lscalaz/Traverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Bifoldable<?> compose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #207                // InterfaceMethod scalaz/Bifoldable.compose$:(Lscalaz/Bifoldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> product(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #210                // InterfaceMethod scalaz/Bifoldable.product$:(Lscalaz/Bifoldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public scala.Option bifoldMap1(java.lang.Object, scala.Function1, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #216                // InterfaceMethod scalaz/Bifoldable.bifoldMap1$:(Lscalaz/Bifoldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       9: areturn

  public final java.lang.Object bifoldR(java.lang.Object, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #223                // InterfaceMethod scalaz/Bifoldable.bifoldR$:(Lscalaz/Bifoldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object bifoldL(java.lang.Object, java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #229                // InterfaceMethod scalaz/Bifoldable.bifoldL$:(Lscalaz/Bifoldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public <X> scalaz.Foldable<?> leftFoldable();
    Code:
       0: aload_0
       1: invokestatic  #236                // InterfaceMethod scalaz/Bifoldable.leftFoldable$:(Lscalaz/Bifoldable;)Lscalaz/Foldable;
       4: areturn

  public <X> scalaz.Foldable<?> rightFoldable();
    Code:
       0: aload_0
       1: invokestatic  #240                // InterfaceMethod scalaz/Bifoldable.rightFoldable$:(Lscalaz/Bifoldable;)Lscalaz/Foldable;
       4: areturn

  public scalaz.Foldable<?> uFoldable();
    Code:
       0: aload_0
       1: invokestatic  #245                // InterfaceMethod scalaz/Bifoldable.uFoldable$:(Lscalaz/Bifoldable;)Lscalaz/Foldable;
       4: areturn

  public <G, H> scalaz.Bifoldable<?> embed(scalaz.Foldable<G>, scalaz.Foldable<H>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #250                // InterfaceMethod scalaz/Bifoldable.embed$:(Lscalaz/Bifoldable;Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Bifoldable;
       6: areturn

  public <G> scalaz.Bifoldable<?> embedLeft(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #256                // InterfaceMethod scalaz/Bifoldable.embedLeft$:(Lscalaz/Bifoldable;Lscalaz/Foldable;)Lscalaz/Bifoldable;
       5: areturn

  public <H> scalaz.Bifoldable<?> embedRight(scalaz.Foldable<H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #259                // InterfaceMethod scalaz/Bifoldable.embedRight$:(Lscalaz/Bifoldable;Lscalaz/Foldable;)Lscalaz/Bifoldable;
       5: areturn

  public scalaz.Bifoldable<?>.BifoldableLaw bifoldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #266                // InterfaceMethod scalaz/Bifoldable.bifoldableLaw$:(Lscalaz/Bifoldable;)Lscalaz/Bifoldable$BifoldableLaw;
       4: areturn

  public <G> scalaz.Bifunctor<?> compose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #273                // InterfaceMethod scalaz/Bifunctor.compose$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Bifunctor<?> product(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #276                // InterfaceMethod scalaz/Bifunctor.product$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <X> scalaz.Functor<?> leftFunctor();
    Code:
       0: aload_0
       1: invokestatic  #283                // InterfaceMethod scalaz/Bifunctor.leftFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public java.lang.Object leftMap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #289                // InterfaceMethod scalaz/Bifunctor.leftMap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <X> scalaz.Functor<?> rightFunctor();
    Code:
       0: aload_0
       1: invokestatic  #293                // InterfaceMethod scalaz/Bifunctor.rightFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public scalaz.Functor<?> uFunctor();
    Code:
       0: aload_0
       1: invokestatic  #298                // InterfaceMethod scalaz/Bifunctor.uFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public java.lang.Object rightMap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #302                // InterfaceMethod scalaz/Bifunctor.rightMap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object umap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #307                // InterfaceMethod scalaz/Bifunctor.umap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G, H> scalaz.Bifunctor<?> embed(scalaz.Functor<G>, scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #312                // InterfaceMethod scalaz/Bifunctor.embed$:(Lscalaz/Bifunctor;Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       6: areturn

  public <G> scalaz.Bifunctor<?> embedLeft(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #318                // InterfaceMethod scalaz/Bifunctor.embedLeft$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public <H> scalaz.Bifunctor<?> embedRight(scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #321                // InterfaceMethod scalaz/Bifunctor.embedRight$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public java.lang.Object widen(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #327                // InterfaceMethod scalaz/Bifunctor.widen$:(Lscalaz/Bifunctor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.syntax.BitraverseSyntax<?> bitraverseSyntax();
    Code:
       0: aload_0
       1: getfield      #331                // Field bitraverseSyntax:Lscalaz/syntax/BitraverseSyntax;
       4: areturn

  public void scalaz$Bitraverse$_setter_$bitraverseSyntax_$eq(scalaz.syntax.BitraverseSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #331                // Field bitraverseSyntax:Lscalaz/syntax/BitraverseSyntax;
       5: return

  public scalaz.syntax.BifoldableSyntax<?> bifoldableSyntax();
    Code:
       0: aload_0
       1: getfield      #339                // Field bifoldableSyntax:Lscalaz/syntax/BifoldableSyntax;
       4: areturn

  public void scalaz$Bifoldable$_setter_$bifoldableSyntax_$eq(scalaz.syntax.BifoldableSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #339                // Field bifoldableSyntax:Lscalaz/syntax/BifoldableSyntax;
       5: return

  public scalaz.syntax.BifunctorSyntax<?> bifunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #346                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       4: areturn

  public void scalaz$Bifunctor$_setter_$bifunctorSyntax_$eq(scalaz.syntax.BifunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #346                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       5: return

  public scalaz.Traverse<F> F();
    Code:
       0: aload_0
       1: getfield      #352                // Field F0$6:Lscalaz/Traverse;
       4: areturn

  public java.lang.Object bimap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #355                // class scalaz/UnwriterT
       5: aload_2
       6: aload_3
       7: invokevirtual #357                // Method bimap:(Lscalaz/UnwriterT;Lscala/Function1;Lscala/Function1;)Lscalaz/UnwriterT;
      10: areturn

  public java.lang.Object bitraverseImpl(java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #355                // class scalaz/UnwriterT
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #360                // Method bitraverseImpl:(Lscalaz/UnwriterT;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      12: areturn

  public scalaz.Functor F();
    Code:
       0: aload_0
       1: invokevirtual #362                // Method F:()Lscalaz/Traverse;
       4: areturn

  public scalaz.UnwriterTInstances$$anon$6(scalaz.UnwriterTInstances, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #352                // Field F0$6:Lscalaz/Traverse;
       5: aload_0
       6: invokespecial #368                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #372                // InterfaceMethod scalaz/Bifunctor.$init$:(Lscalaz/Bifunctor;)V
      13: aload_0
      14: invokestatic  #375                // InterfaceMethod scalaz/Bifoldable.$init$:(Lscalaz/Bifoldable;)V
      17: aload_0
      18: invokestatic  #378                // InterfaceMethod scalaz/Bitraverse.$init$:(Lscalaz/Bitraverse;)V
      21: invokestatic  #383                // Method scala/runtime/Statics.releaseFence:()V
      24: return
}
