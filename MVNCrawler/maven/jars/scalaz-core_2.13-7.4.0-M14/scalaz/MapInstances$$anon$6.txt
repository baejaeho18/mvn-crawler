Compiled from "Map.scala"
public final class scalaz.MapInstances$$anon$6 implements scalaz.Traverse<?> {
  private scalaz.syntax.TraverseSyntax<?> traverseSyntax;

  private scalaz.syntax.FoldableSyntax<?> foldableSyntax;

  private scalaz.syntax.FunctorSyntax<?> functorSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #86                 // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #97                 // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #102                // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #109                // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<?>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #118                // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<?>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #126                // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #135                // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #144                // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #152                // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #159                // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #166                // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #173                // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #180                // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #188                // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #194                // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #201                // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #208                // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #215                // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #222                // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #227                // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #233                // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #237                // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #241                // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #247                // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #251                // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #255                // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #259                // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<?>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #266                // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #272                // InterfaceMethod scalaz/Foldable.foldMap1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #278                // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #285                // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #288                // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #293                // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #301                // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #309                // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #316                // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #324                // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #330                // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #336                // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #341                // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #346                // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #351                // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #356                // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #363                // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #369                // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #375                // InterfaceMethod scalaz/Foldable.foldMapRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #381                // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #387                // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #393                // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #397                // InterfaceMethod scalaz/Foldable.foldMapLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #401                // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #405                // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #411                // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #415                // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #421                // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #427                // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #435                // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #442                // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #448                // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #454                // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #460                // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scala.collection.immutable.LazyList toLazyList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #466                // InterfaceMethod scalaz/Foldable.toLazyList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/LazyList;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #472                // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #478                // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #483                // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #487                // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #493                // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #499                // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #506                // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #510                // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #515                // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #520                // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #525                // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #530                // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #535                // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #540                // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #545                // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #549                // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #553                // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #557                // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #563                // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #570                // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #574                // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #581                // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/$less$colon$less;)J
       6: lreturn

  public boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #588                // InterfaceMethod scalaz/Foldable.empty$:(Lscalaz/Foldable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #595                // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #602                // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #608                // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #615                // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #622                // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #626                // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #632                // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #638                // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #643                // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #650                // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<?>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #658                // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #665                // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #671                // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.$eq$eq$greater$greater<S, A>, scalaz.$eq$eq$greater$greater<S, B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #678                // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #683                // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #688                // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #692                // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #697                // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #701                // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #705                // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #711                // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G$> scalaz.Functor<?> compose(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #717                // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G$> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #725                // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G$> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #731                // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G$> scalaz.Functor<?> product(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #734                // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #741                // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<?>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #749                // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #756                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #764                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #772                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.TraverseSyntax<?> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #776                // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #776                // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<?> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #784                // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #784                // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<?> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #791                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #791                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #798                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #798                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A> scala.Option<A> findLeft(scalaz.$eq$eq$greater$greater<S, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: instanceof    #20                 // class scalaz/$eq$eq$greater$greater$Bin
       4: ifeq          106
       7: aload_1
       8: checkcast     #20                 // class scalaz/$eq$eq$greater$greater$Bin
      11: astore_3
      12: aload_3
      13: invokevirtual #808                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      16: astore        4
      18: aload_3
      19: invokevirtual #812                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      22: astore        5
      24: aload_3
      25: invokevirtual #814                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      28: astore        6
      30: aload_0
      31: aload         5
      33: aload_2
      34: invokevirtual #816                // Method findLeft:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;)Lscala/Option;
      37: astore        7
      39: aload         7
      41: instanceof    #818                // class scala/Some
      44: ifeq          53
      47: aload         7
      49: checkcast     #818                // class scala/Some
      52: areturn
      53: getstatic     #824                // Field scala/None$.MODULE$:Lscala/None$;
      56: aload         7
      58: invokevirtual #827                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      61: ifeq          96
      64: aload_2
      65: aload         4
      67: invokeinterface #831,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      72: invokestatic  #836                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      75: ifeq          88
      78: new           #818                // class scala/Some
      81: dup
      82: aload         4
      84: invokespecial #840                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      87: areturn
      88: aload         6
      90: aload_2
      91: astore_2
      92: astore_1
      93: goto          0
      96: new           #842                // class scala/MatchError
      99: dup
     100: aload         7
     102: invokespecial #843                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     105: athrow
     106: aload_1
     107: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Tip
     110: ifeq          117
     113: getstatic     #824                // Field scala/None$.MODULE$:Lscala/None$;
     116: areturn
     117: new           #842                // class scala/MatchError
     120: dup
     121: aload_1
     122: invokespecial #843                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     125: athrow

  public <A> scala.Option<A> findRight(scalaz.$eq$eq$greater$greater<S, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: instanceof    #20                 // class scalaz/$eq$eq$greater$greater$Bin
       4: ifeq          106
       7: aload_1
       8: checkcast     #20                 // class scalaz/$eq$eq$greater$greater$Bin
      11: astore_3
      12: aload_3
      13: invokevirtual #808                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      16: astore        4
      18: aload_3
      19: invokevirtual #812                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      22: astore        5
      24: aload_3
      25: invokevirtual #814                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      28: astore        6
      30: aload_0
      31: aload         6
      33: aload_2
      34: invokevirtual #849                // Method findRight:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;)Lscala/Option;
      37: astore        7
      39: aload         7
      41: instanceof    #818                // class scala/Some
      44: ifeq          53
      47: aload         7
      49: checkcast     #818                // class scala/Some
      52: areturn
      53: getstatic     #824                // Field scala/None$.MODULE$:Lscala/None$;
      56: aload         7
      58: invokevirtual #827                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      61: ifeq          96
      64: aload_2
      65: aload         4
      67: invokeinterface #831,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      72: invokestatic  #836                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      75: ifeq          88
      78: new           #818                // class scala/Some
      81: dup
      82: aload         4
      84: invokespecial #840                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      87: areturn
      88: aload         5
      90: aload_2
      91: astore_2
      92: astore_1
      93: goto          0
      96: new           #842                // class scala/MatchError
      99: dup
     100: aload         7
     102: invokespecial #843                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     105: athrow
     106: aload_1
     107: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Tip
     110: ifeq          117
     113: getstatic     #824                // Field scala/None$.MODULE$:Lscala/None$;
     116: areturn
     117: new           #842                // class scala/MatchError
     120: dup
     121: aload_1
     122: invokespecial #843                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     125: athrow

  public <A, B> scalaz.$eq$eq$greater$greater<S, B> map(scalaz.$eq$eq$greater$greater<S, A>, scala.Function1<A, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_2
       7: invokedynamic #869,  0            // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function2;
      12: astore_3
      13: aload_1
      14: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Tip
      17: ifeq          31
      20: getstatic     #874                // Field scalaz/$eq$eq$greater$greater$.MODULE$:Lscalaz/$eq$eq$greater$greater$;
      23: pop
      24: getstatic     #877                // Field scalaz/$eq$eq$greater$greater$Tip$.MODULE$:Lscalaz/$eq$eq$greater$greater$Tip$;
      27: invokevirtual #879                // Method scalaz/$eq$eq$greater$greater$Tip$.apply:()Lscalaz/$eq$eq$greater$greater;
      30: areturn
      31: aload_1
      32: instanceof    #20                 // class scalaz/$eq$eq$greater$greater$Bin
      35: ifeq          346
      38: aload_1
      39: checkcast     #20                 // class scalaz/$eq$eq$greater$greater$Bin
      42: astore        4
      44: aload         4
      46: invokevirtual #882                // Method scalaz/$eq$eq$greater$greater$Bin.k:()Ljava/lang/Object;
      49: astore        5
      51: aload         4
      53: invokevirtual #808                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      56: astore        6
      58: aload         4
      60: invokevirtual #812                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      63: astore        7
      65: aload         4
      67: invokevirtual #814                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      70: astore        8
      72: new           #20                 // class scalaz/$eq$eq$greater$greater$Bin
      75: dup
      76: aload         5
      78: aload_2
      79: aload         6
      81: invokeinterface #831,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      86: aload         7
      88: ifnonnull     93
      91: aconst_null
      92: athrow
      93: aload         7
      95: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Tip
      98: ifeq          114
     101: getstatic     #874                // Field scalaz/$eq$eq$greater$greater$.MODULE$:Lscalaz/$eq$eq$greater$greater$;
     104: pop
     105: getstatic     #877                // Field scalaz/$eq$eq$greater$greater$Tip$.MODULE$:Lscalaz/$eq$eq$greater$greater$Tip$;
     108: invokevirtual #879                // Method scalaz/$eq$eq$greater$greater$Tip$.apply:()Lscalaz/$eq$eq$greater$greater;
     111: goto          199
     114: aload         7
     116: instanceof    #20                 // class scalaz/$eq$eq$greater$greater$Bin
     119: ifeq          189
     122: aload         7
     124: checkcast     #20                 // class scalaz/$eq$eq$greater$greater$Bin
     127: astore        9
     129: aload         9
     131: invokevirtual #882                // Method scalaz/$eq$eq$greater$greater$Bin.k:()Ljava/lang/Object;
     134: astore        10
     136: aload         9
     138: invokevirtual #808                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
     141: astore        11
     143: aload         9
     145: invokevirtual #812                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
     148: astore        12
     150: aload         9
     152: invokevirtual #814                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
     155: astore        13
     157: new           #20                 // class scalaz/$eq$eq$greater$greater$Bin
     160: dup
     161: aload         10
     163: aload_2
     164: aload         11
     166: invokeinterface #831,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     171: aload         12
     173: aload_3
     174: invokevirtual #886                // Method scalaz/$eq$eq$greater$greater.mapWithKey:(Lscala/Function2;)Lscalaz/$eq$eq$greater$greater;
     177: aload         13
     179: aload_3
     180: invokevirtual #886                // Method scalaz/$eq$eq$greater$greater.mapWithKey:(Lscala/Function2;)Lscalaz/$eq$eq$greater$greater;
     183: invokespecial #889                // Method scalaz/$eq$eq$greater$greater$Bin."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lscalaz/$eq$eq$greater$greater;Lscalaz/$eq$eq$greater$greater;)V
     186: goto          199
     189: new           #842                // class scala/MatchError
     192: dup
     193: aload         7
     195: invokespecial #843                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     198: athrow
     199: aconst_null
     200: astore        9
     202: aconst_null
     203: astore        10
     205: aconst_null
     206: astore        11
     208: aconst_null
     209: astore        12
     211: aconst_null
     212: astore        13
     214: aload         8
     216: ifnonnull     221
     219: aconst_null
     220: athrow
     221: aload         8
     223: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Tip
     226: ifeq          242
     229: getstatic     #874                // Field scalaz/$eq$eq$greater$greater$.MODULE$:Lscalaz/$eq$eq$greater$greater$;
     232: pop
     233: getstatic     #877                // Field scalaz/$eq$eq$greater$greater$Tip$.MODULE$:Lscalaz/$eq$eq$greater$greater$Tip$;
     236: invokevirtual #879                // Method scalaz/$eq$eq$greater$greater$Tip$.apply:()Lscalaz/$eq$eq$greater$greater;
     239: goto          327
     242: aload         8
     244: instanceof    #20                 // class scalaz/$eq$eq$greater$greater$Bin
     247: ifeq          317
     250: aload         8
     252: checkcast     #20                 // class scalaz/$eq$eq$greater$greater$Bin
     255: astore        14
     257: aload         14
     259: invokevirtual #882                // Method scalaz/$eq$eq$greater$greater$Bin.k:()Ljava/lang/Object;
     262: astore        15
     264: aload         14
     266: invokevirtual #808                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
     269: astore        16
     271: aload         14
     273: invokevirtual #812                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
     276: astore        17
     278: aload         14
     280: invokevirtual #814                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
     283: astore        18
     285: new           #20                 // class scalaz/$eq$eq$greater$greater$Bin
     288: dup
     289: aload         15
     291: aload_2
     292: aload         16
     294: invokeinterface #831,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     299: aload         17
     301: aload_3
     302: invokevirtual #886                // Method scalaz/$eq$eq$greater$greater.mapWithKey:(Lscala/Function2;)Lscalaz/$eq$eq$greater$greater;
     305: aload         18
     307: aload_3
     308: invokevirtual #886                // Method scalaz/$eq$eq$greater$greater.mapWithKey:(Lscala/Function2;)Lscalaz/$eq$eq$greater$greater;
     311: invokespecial #889                // Method scalaz/$eq$eq$greater$greater$Bin."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lscalaz/$eq$eq$greater$greater;Lscalaz/$eq$eq$greater$greater;)V
     314: goto          327
     317: new           #842                // class scala/MatchError
     320: dup
     321: aload         8
     323: invokespecial #843                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     326: athrow
     327: aconst_null
     328: astore        14
     330: aconst_null
     331: astore        15
     333: aconst_null
     334: astore        16
     336: aconst_null
     337: astore        17
     339: aconst_null
     340: astore        18
     342: invokespecial #889                // Method scalaz/$eq$eq$greater$greater$Bin."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lscalaz/$eq$eq$greater$greater;Lscalaz/$eq$eq$greater$greater;)V
     345: areturn
     346: new           #842                // class scala/MatchError
     349: dup
     350: aload_1
     351: invokespecial #843                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     354: athrow

  public <A, B> B foldMap(scalaz.$eq$eq$greater$greater<S, A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_1
       1: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Tip
       4: ifeq          14
       7: aload_3
       8: invokeinterface #908,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      13: areturn
      14: aload_1
      15: instanceof    #20                 // class scalaz/$eq$eq$greater$greater$Bin
      18: ifeq          75
      21: aload_1
      22: checkcast     #20                 // class scalaz/$eq$eq$greater$greater$Bin
      25: astore        4
      27: aload         4
      29: invokevirtual #808                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      32: astore        5
      34: aload         4
      36: invokevirtual #812                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      39: astore        6
      41: aload         4
      43: invokevirtual #814                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      46: astore        7
      48: aload_3
      49: aload_0
      50: aload         6
      52: aload_2
      53: aload_3
      54: invokevirtual #910                // Method foldMap:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      57: aload_0
      58: aload_3
      59: aload_2
      60: aload         5
      62: aload         7
      64: invokedynamic #919,  0            // InvokeDynamic #1:apply:(Lscalaz/MapInstances$$anon$6;Lscalaz/Monoid;Lscala/Function1;Ljava/lang/Object;Lscalaz/$eq$eq$greater$greater;)Lscala/Function0;
      69: invokeinterface #923,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      74: areturn
      75: new           #842                // class scala/MatchError
      78: dup
      79: aload_1
      80: invokespecial #843                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      83: athrow

  public <A, B> B foldRight(scalaz.$eq$eq$greater$greater<S, A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #930,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: aload_3
       8: invokedynamic #940,  0            // InvokeDynamic #2:apply:(Lscala/Function2;)Lscala/Function3;
      13: astore        6
      15: astore        5
      17: dup
      18: ifnonnull     23
      21: aconst_null
      22: athrow
      23: astore        4
      25: aload         4
      27: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Tip
      30: ifeq          36
      33: aload         5
      35: areturn
      36: aload         4
      38: instanceof    #20                 // class scalaz/$eq$eq$greater$greater$Bin
      41: ifeq          117
      44: aload         4
      46: checkcast     #20                 // class scalaz/$eq$eq$greater$greater$Bin
      49: astore        7
      51: aload         7
      53: invokevirtual #882                // Method scalaz/$eq$eq$greater$greater$Bin.k:()Ljava/lang/Object;
      56: pop
      57: aload         7
      59: invokevirtual #808                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      62: astore        8
      64: aload         7
      66: invokevirtual #812                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      69: astore        9
      71: aload         7
      73: invokevirtual #814                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      76: astore        10
      78: aload         9
      80: aload         10
      82: aload         5
      84: aload         6
      86: invokevirtual #944                // Method scalaz/$eq$eq$greater$greater.foldrWithKey:(Ljava/lang/Object;Lscala/Function3;)Ljava/lang/Object;
      89: astore        11
      91: aload_3
      92: aload         8
      94: aload         11
      96: invokedynamic #951,  0            // InvokeDynamic #3:apply:(Ljava/lang/Object;)Lscala/Function0;
     101: invokeinterface #953,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     106: aload         6
     108: astore        6
     110: astore        5
     112: astore        4
     114: goto          25
     117: new           #842                // class scala/MatchError
     120: dup
     121: aload         4
     123: invokespecial #843                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     126: athrow

  public <A, B> B foldLeft(scalaz.$eq$eq$greater$greater<S, A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokedynamic #970,  0            // InvokeDynamic #4:apply:(Lscala/Function2;)Lscala/Function3;
       8: astore        6
      10: astore        5
      12: dup
      13: ifnonnull     18
      16: aconst_null
      17: athrow
      18: astore        4
      20: aload         4
      22: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Tip
      25: ifeq          31
      28: aload         5
      30: areturn
      31: aload         4
      33: instanceof    #20                 // class scalaz/$eq$eq$greater$greater$Bin
      36: ifeq          103
      39: aload         4
      41: checkcast     #20                 // class scalaz/$eq$eq$greater$greater$Bin
      44: astore        7
      46: aload         7
      48: invokevirtual #882                // Method scalaz/$eq$eq$greater$greater$Bin.k:()Ljava/lang/Object;
      51: pop
      52: aload         7
      54: invokevirtual #808                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      57: astore        8
      59: aload         7
      61: invokevirtual #812                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      64: astore        9
      66: aload         7
      68: invokevirtual #814                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      71: aload         9
      73: aload         5
      75: aload         6
      77: invokevirtual #973                // Method scalaz/$eq$eq$greater$greater.foldlWithKey:(Ljava/lang/Object;Lscala/Function3;)Ljava/lang/Object;
      80: astore        10
      82: aload_3
      83: aload         10
      85: aload         8
      87: invokeinterface #953,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: aload         6
      94: astore        6
      96: astore        5
      98: astore        4
     100: goto          20
     103: new           #842                // class scala/MatchError
     106: dup
     107: aload         4
     109: invokespecial #843                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     112: athrow

  public <A> scala.Option<A> index(scalaz.$eq$eq$greater$greater<S, A>, int);
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #985                // Method scalaz/$eq$eq$greater$greater.elemAt:(I)Lscalaz/Maybe;
       5: invokedynamic #996,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
      10: astore        4
      12: dup
      13: ifnonnull     18
      16: aconst_null
      17: athrow
      18: astore_3
      19: aload         4
      21: invokedynamic #1002,  0           // InvokeDynamic #6:apply:()Lscala/Function1;
      26: invokeinterface #1005,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      31: astore        5
      33: aload_3
      34: instanceof    #59                 // class scalaz/Maybe$Just
      37: ifeq          61
      40: aload_3
      41: checkcast     #59                 // class scalaz/Maybe$Just
      44: invokevirtual #1008               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      47: astore        6
      49: aload         5
      51: aload         6
      53: invokeinterface #831,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      58: goto          90
      61: aload_3
      62: instanceof    #51                 // class scalaz/Maybe$Empty
      65: ifeq          81
      68: getstatic     #1013               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      71: pop
      72: getstatic     #1016               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      75: invokevirtual #1019               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      78: goto          90
      81: new           #842                // class scala/MatchError
      84: dup
      85: aload_3
      86: invokespecial #843                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      89: athrow
      90: aconst_null
      91: astore        5
      93: aconst_null
      94: astore        6
      96: checkcast     #53                 // class scalaz/Maybe
      99: aconst_null
     100: astore_3
     101: aconst_null
     102: astore        4
     104: invokevirtual #1023               // Method scalaz/Maybe.toOption:()Lscala/Option;
     107: areturn

  public <F, A, B> F traverseImpl(scalaz.$eq$eq$greater$greater<S, A>, scala.Function1<A, F>, scalaz.Applicative<F>);
    Code:
       0: aload_1
       1: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Tip
       4: ifeq          19
       7: aload_3
       8: invokedynamic #1039,  0           // InvokeDynamic #7:apply:()Lscala/Function0;
      13: invokeinterface #1045,  2         // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      18: areturn
      19: aload_1
      20: instanceof    #20                 // class scalaz/$eq$eq$greater$greater$Bin
      23: ifeq          102
      26: aload_1
      27: checkcast     #20                 // class scalaz/$eq$eq$greater$greater$Bin
      30: astore        4
      32: aload         4
      34: invokevirtual #882                // Method scalaz/$eq$eq$greater$greater$Bin.k:()Ljava/lang/Object;
      37: astore        5
      39: aload         4
      41: invokevirtual #808                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      44: astore        6
      46: aload         4
      48: invokevirtual #812                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      51: astore        7
      53: aload         4
      55: invokevirtual #814                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      58: astore        8
      60: aload_3
      61: aload_0
      62: aload         7
      64: aload_2
      65: aload_3
      66: invokedynamic #1053,  0           // InvokeDynamic #8:apply:(Lscalaz/MapInstances$$anon$6;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function0;
      71: aload_2
      72: aload         6
      74: invokedynamic #1061,  0           // InvokeDynamic #9:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      79: aload_0
      80: aload         8
      82: aload_2
      83: aload_3
      84: invokedynamic #1066,  0           // InvokeDynamic #10:apply:(Lscalaz/MapInstances$$anon$6;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function0;
      89: aload         5
      91: invokedynamic #1076,  0           // InvokeDynamic #11:apply:(Ljava/lang/Object;)Lscala/Function3;
      96: invokeinterface #1080,  5         // InterfaceMethod scalaz/Applicative.apply3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
     101: areturn
     102: new           #842                // class scala/MatchError
     105: dup
     106: aload_1
     107: invokespecial #843                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     110: athrow

  public <A> int length(scalaz.$eq$eq$greater$greater<S, A>);
    Code:
       0: aload_1
       1: invokevirtual #1088               // Method scalaz/$eq$eq$greater$greater.size:()I
       4: ireturn

  public <A> boolean any(scalaz.$eq$eq$greater$greater<S, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Tip
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: instanceof    #20                 // class scalaz/$eq$eq$greater$greater$Bin
      13: ifeq          73
      16: aload_1
      17: checkcast     #20                 // class scalaz/$eq$eq$greater$greater$Bin
      20: astore_3
      21: aload_3
      22: invokevirtual #808                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      25: astore        4
      27: aload_3
      28: invokevirtual #812                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      31: astore        5
      33: aload_3
      34: invokevirtual #814                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      37: astore        6
      39: aload_0
      40: aload         5
      42: aload_2
      43: invokevirtual #1093               // Method any:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;)Z
      46: ifne          71
      49: aload_2
      50: aload         4
      52: invokeinterface #831,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      57: invokestatic  #836                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      60: ifne          71
      63: aload         6
      65: aload_2
      66: astore_2
      67: astore_1
      68: goto          0
      71: iconst_1
      72: ireturn
      73: new           #842                // class scala/MatchError
      76: dup
      77: aload_1
      78: invokespecial #843                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      81: athrow

  public <A> boolean all(scalaz.$eq$eq$greater$greater<S, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Tip
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_1
      10: instanceof    #20                 // class scalaz/$eq$eq$greater$greater$Bin
      13: ifeq          73
      16: aload_1
      17: checkcast     #20                 // class scalaz/$eq$eq$greater$greater$Bin
      20: astore_3
      21: aload_3
      22: invokevirtual #808                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      25: astore        4
      27: aload_3
      28: invokevirtual #812                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      31: astore        5
      33: aload_3
      34: invokevirtual #814                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      37: astore        6
      39: aload_0
      40: aload         5
      42: aload_2
      43: invokevirtual #1096               // Method all:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;)Z
      46: ifeq          71
      49: aload_2
      50: aload         4
      52: invokeinterface #831,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      57: invokestatic  #836                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      60: ifeq          71
      63: aload         6
      65: aload_2
      66: astore_2
      67: astore_1
      68: goto          0
      71: iconst_0
      72: ireturn
      73: new           #842                // class scala/MatchError
      76: dup
      77: aload_1
      78: invokespecial #843                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      81: athrow

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class scalaz/$eq$eq$greater$greater
       5: aload_2
       6: invokevirtual #1096               // Method all:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;)Z
       9: ireturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class scalaz/$eq$eq$greater$greater
       5: aload_2
       6: invokevirtual #1093               // Method any:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;)Z
       9: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class scalaz/$eq$eq$greater$greater
       5: invokevirtual #1099               // Method length:(Lscalaz/$eq$eq$greater$greater;)I
       8: ireturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class scalaz/$eq$eq$greater$greater
       5: aload_2
       6: aload_3
       7: invokevirtual #1101               // Method traverseImpl:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      10: areturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class scalaz/$eq$eq$greater$greater
       5: iload_2
       6: invokevirtual #1104               // Method index:(Lscalaz/$eq$eq$greater$greater;I)Lscala/Option;
       9: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class scalaz/$eq$eq$greater$greater
       5: aload_2
       6: aload_3
       7: invokevirtual #1106               // Method foldLeft:(Lscalaz/$eq$eq$greater$greater;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class scalaz/$eq$eq$greater$greater
       5: aload_2
       6: aload_3
       7: invokevirtual #1109               // Method foldRight:(Lscalaz/$eq$eq$greater$greater;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class scalaz/$eq$eq$greater$greater
       5: aload_2
       6: aload_3
       7: invokevirtual #910                // Method foldMap:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class scalaz/$eq$eq$greater$greater
       5: aload_2
       6: invokevirtual #1112               // Method map:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;)Lscalaz/$eq$eq$greater$greater;
       9: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class scalaz/$eq$eq$greater$greater
       5: aload_2
       6: invokevirtual #849                // Method findRight:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;)Lscala/Option;
       9: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class scalaz/$eq$eq$greater$greater
       5: aload_2
       6: invokevirtual #816                // Method findLeft:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;)Lscala/Option;
       9: areturn

  public static final java.lang.Object $anonfun$foldMap$2(scalaz.MapInstances$$anon$6, scalaz.$eq$eq$greater$greater, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #910                // Method foldMap:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$foldMap$1(scalaz.MapInstances$$anon$6, scalaz.Monoid, scala.Function1, java.lang.Object, scalaz.$eq$eq$greater$greater);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokeinterface #831,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_0
       9: aload         4
      11: aload_2
      12: aload_1
      13: invokedynamic #1125,  0           // InvokeDynamic #12:apply:(Lscalaz/MapInstances$$anon$6;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Monoid;)Lscala/Function0;
      18: invokeinterface #923,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      23: areturn

  public static final java.lang.Object $anonfun$foldRight$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$foldRight$1(scala.Function2, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokedynamic #951,  0            // InvokeDynamic #3:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #953,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public static final java.lang.Object $anonfun$foldLeft$1(scala.Function2, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokeinterface #953,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static final java.lang.Object $anonfun$index$1(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1137               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  public static final scalaz.$eq$eq$greater$greater $anonfun$traverseImpl$1();
    Code:
       0: getstatic     #877                // Field scalaz/$eq$eq$greater$greater$Tip$.MODULE$:Lscalaz/$eq$eq$greater$greater$Tip$;
       3: invokevirtual #879                // Method scalaz/$eq$eq$greater$greater$Tip$.apply:()Lscalaz/$eq$eq$greater$greater;
       6: areturn

  public static final java.lang.Object $anonfun$traverseImpl$2(scalaz.MapInstances$$anon$6, scalaz.$eq$eq$greater$greater, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1101               // Method traverseImpl:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$traverseImpl$3(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #831,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$traverseImpl$4(scalaz.MapInstances$$anon$6, scalaz.$eq$eq$greater$greater, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1101               // Method traverseImpl:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public static final scalaz.$eq$eq$greater$greater$Bin $anonfun$traverseImpl$5(java.lang.Object, scalaz.$eq$eq$greater$greater, java.lang.Object, scalaz.$eq$eq$greater$greater);
    Code:
       0: new           #20                 // class scalaz/$eq$eq$greater$greater$Bin
       3: dup
       4: aload_0
       5: aload_2
       6: aload_1
       7: aload_3
       8: invokespecial #889                // Method scalaz/$eq$eq$greater$greater$Bin."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lscalaz/$eq$eq$greater$greater;Lscalaz/$eq$eq$greater$greater;)V
      11: areturn

  public scalaz.MapInstances$$anon$6(scalaz.MapInstances);
    Code:
       0: aload_0
       1: invokespecial #1152               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #1156               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #1159               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #1162               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      16: aload_0
      17: invokestatic  #1165               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      20: invokestatic  #1170               // Method scala/runtime/Statics.releaseFence:()V
      23: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #1183,  0           // InvokeDynamic #13:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
