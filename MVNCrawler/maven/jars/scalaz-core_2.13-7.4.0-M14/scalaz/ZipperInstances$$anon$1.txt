Compiled from "Zipper.scala"
public final class scalaz.ZipperInstances$$anon$1 implements scalaz.Traverse1<scalaz.Zipper>, scalaz.Applicative<scalaz.Zipper>, scalaz.Comonad<scalaz.Zipper> {
  private scalaz.syntax.ComonadSyntax<scalaz.Zipper> comonadSyntax;

  private scalaz.syntax.CobindSyntax<scalaz.Zipper> cobindSyntax;

  private scalaz.syntax.ApplicativeSyntax<scalaz.Zipper> applicativeSyntax;

  private scalaz.syntax.InvariantApplicativeSyntax<scalaz.Zipper> invariantApplicativeSyntax;

  private scalaz.syntax.ApplySyntax<scalaz.Zipper> applySyntax;

  private scalaz.syntax.Traverse1Syntax<scalaz.Zipper> traverse1Syntax;

  private scalaz.syntax.Foldable1Syntax<scalaz.Zipper> foldable1Syntax;

  private scalaz.syntax.TraverseSyntax<scalaz.Zipper> traverseSyntax;

  private scalaz.syntax.FoldableSyntax<scalaz.Zipper> foldableSyntax;

  private scalaz.syntax.FunctorSyntax<scalaz.Zipper> functorSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<scalaz.Zipper> invariantFunctorSyntax;

  public final java.lang.Object copure(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #139                // InterfaceMethod scalaz/Comonad.copure$:(Lscalaz/Comonad;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Comonad<scalaz.Zipper>.ComonadLaws comonadLaw();
    Code:
       0: aload_0
       1: invokestatic  #149                // InterfaceMethod scalaz/Comonad.comonadLaw$:(Lscalaz/Comonad;)Lscalaz/Comonad$ComonadLaws;
       4: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #157                // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.Cobind<scalaz.Zipper>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #165                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #172                // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #180                // InterfaceMethod scalaz/Applicative.apply2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #189                // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #198                // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #205                // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #210                // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #218                // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #225                // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #232                // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #240                // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #248                // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #253                // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.$eq$eq$greater$greater, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #261                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #268                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #273                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #281                // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #286                // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Applicative<?> compose(scalaz.Applicative<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #293                // InterfaceMethod scalaz/Applicative.compose$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public <G$> scalaz.Applicative<?> product(scalaz.Applicative<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #298                // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scalaz.Zipper> flip();
    Code:
       0: aload_0
       1: invokestatic  #303                // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #312                // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scalaz.Zipper>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #320                // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #327                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #333                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #339                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #345                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #351                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #357                // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #364                // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #369                // InterfaceMethod scalaz/Apply.forever$:(Lscalaz/Apply;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <S$, A, B> scalaz.Maybe<scalaz.Zipper<B>> unfoldrOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scalaz.Zipper<A>, S$>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #378                // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G$> scalaz.Apply<?> compose(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #384                // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G$> scalaz.Apply<?> product(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #387                // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scalaz.Zipper<A>, scalaz.Zipper<B>> apF(scala.Function0<scalaz.Zipper<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #394                // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #400                // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #407                // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #414                // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #421                // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #428                // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #435                // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #442                // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #448                // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #454                // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #460                // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #467                // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #474                // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #481                // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #489                // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #497                // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #505                // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #513                // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #520                // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #526                // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #532                // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #538                // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #544                // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #550                // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #556                // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #562                // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #569                // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #576                // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #583                // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R$> scala.Function5<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>, scalaz.Zipper<R$>> lift5(scala.Function5<A, B, C, D, E, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #590                // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R$> scala.Function6<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>, scalaz.Zipper<FF>, scalaz.Zipper<R$>> lift6(scala.Function6<A, B, C, D, E, FF, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #597                // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G$, R$> scala.Function7<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>, scalaz.Zipper<FF>, scalaz.Zipper<G$>, scalaz.Zipper<R$>> lift7(scala.Function7<A, B, C, D, E, FF, G$, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #604                // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, R$> scala.Function8<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>, scalaz.Zipper<FF>, scalaz.Zipper<G$>, scalaz.Zipper<H>, scalaz.Zipper<R$>> lift8(scala.Function8<A, B, C, D, E, FF, G$, H, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #611                // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, R$> scala.Function9<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>, scalaz.Zipper<FF>, scalaz.Zipper<G$>, scalaz.Zipper<H>, scalaz.Zipper<I>, scalaz.Zipper<R$>> lift9(scala.Function9<A, B, C, D, E, FF, G$, H, I, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #618                // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, R$> scala.Function10<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>, scalaz.Zipper<FF>, scalaz.Zipper<G$>, scalaz.Zipper<H>, scalaz.Zipper<I>, scalaz.Zipper<J>, scalaz.Zipper<R$>> lift10(scala.Function10<A, B, C, D, E, FF, G$, H, I, J, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #625                // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, R$> scala.Function11<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>, scalaz.Zipper<FF>, scalaz.Zipper<G$>, scalaz.Zipper<H>, scalaz.Zipper<I>, scalaz.Zipper<J>, scalaz.Zipper<K>, scalaz.Zipper<R$>> lift11(scala.Function11<A, B, C, D, E, FF, G$, H, I, J, K, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #632                // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, L, R$> scala.Function12<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>, scalaz.Zipper<FF>, scalaz.Zipper<G$>, scalaz.Zipper<H>, scalaz.Zipper<I>, scalaz.Zipper<J>, scalaz.Zipper<K>, scalaz.Zipper<L>, scalaz.Zipper<R$>> lift12(scala.Function12<A, B, C, D, E, FF, G$, H, I, J, K, L, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #639                // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #643                // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #647                // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #652                // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scalaz.Zipper<A>, scalaz.Zipper<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #660                // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scalaz.Zipper>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #667                // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public <G> scalaz.Traverse1<?> product(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #672                // InterfaceMethod scalaz/Traverse1.product$:(Lscalaz/Traverse1;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #679                // InterfaceMethod scalaz/Traverse1.product0$:(Lscalaz/Traverse1;Lscalaz/Traverse;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse1<?> compose(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #681                // InterfaceMethod scalaz/Traverse1.compose$:(Lscalaz/Traverse1;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #685                // InterfaceMethod scalaz/Traverse1.traverse1$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object traverse1M(java.lang.Object, scala.Function1, scalaz.Apply, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #692                // InterfaceMethod scalaz/Traverse1.traverse1M$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object traverse1U(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #699                // InterfaceMethod scalaz/Traverse1.traverse1U$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #706                // InterfaceMethod scalaz/Traverse1.sequence1$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Apply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequence1M(java.lang.Object, scalaz.Apply, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #713                // InterfaceMethod scalaz/Traverse1.sequence1M$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Apply;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object sequence1U(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #719                // InterfaceMethod scalaz/Traverse1.sequence1U$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public scalaz.Traverse1<scalaz.Zipper>.Traverse1Law traverse1Law();
    Code:
       0: aload_0
       1: invokestatic  #726                // InterfaceMethod scalaz/Traverse1.traverse1Law$:(Lscalaz/Traverse1;)Lscalaz/Traverse1$Traverse1Law;
       4: areturn

  public <G> scalaz.Foldable1<?> product(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #731                // InterfaceMethod scalaz/Foldable1.product$:(Lscalaz/Foldable1;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public <G> scalaz.Foldable1<?> compose(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #734                // InterfaceMethod scalaz/Foldable1.compose$:(Lscalaz/Foldable1;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #740                // InterfaceMethod scalaz/Foldable1.foldMap1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public java.lang.Object foldRight1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #746                // InterfaceMethod scalaz/Foldable1.foldRight1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object foldLeft1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #750                // InterfaceMethod scalaz/Foldable1.foldLeft1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object foldr1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #755                // InterfaceMethod scalaz/Foldable1.foldr1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #761                // InterfaceMethod scalaz/Foldable1.foldMapRight1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #767                // InterfaceMethod scalaz/Foldable1.foldr1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #771                // InterfaceMethod scalaz/Foldable1.foldl1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #775                // InterfaceMethod scalaz/Foldable1.foldMapLeft1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #779                // InterfaceMethod scalaz/Foldable1.foldl1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public java.lang.Object fold1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #787                // InterfaceMethod scalaz/Foldable1.fold1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object foldLeftM1(java.lang.Object, scala.Function1, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #793                // InterfaceMethod scalaz/Foldable1.foldLeftM1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldRightM1(java.lang.Object, scala.Function1, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #798                // InterfaceMethod scalaz/Foldable1.foldRightM1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM1(java.lang.Object, scala.Function1, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #805                // InterfaceMethod scalaz/Foldable1.foldlM1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldrM1(java.lang.Object, scala.Function1, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #809                // InterfaceMethod scalaz/Foldable1.foldrM1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object maximum1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #816                // InterfaceMethod scalaz/Foldable1.maximum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object maximumOf1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #823                // InterfaceMethod scalaz/Foldable1.maximumOf1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object maximumBy1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #828                // InterfaceMethod scalaz/Foldable1.maximumBy1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object minimum1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #833                // InterfaceMethod scalaz/Foldable1.minimum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minimumOf1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #838                // InterfaceMethod scalaz/Foldable1.minimumOf1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object minimumBy1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #843                // InterfaceMethod scalaz/Foldable1.minimumBy1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #850                // InterfaceMethod scalaz/Foldable1.maximum$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #857                // InterfaceMethod scalaz/Foldable1.maximumOf$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #862                // InterfaceMethod scalaz/Foldable1.maximumBy$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #867                // InterfaceMethod scalaz/Foldable1.minimum$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #872                // InterfaceMethod scalaz/Foldable1.minimumOf$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #877                // InterfaceMethod scalaz/Foldable1.minimumBy$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scalaz.NonEmptyList distinct1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #884                // InterfaceMethod scalaz/Foldable1.distinct1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.NonEmptyList distinctE1(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #890                // InterfaceMethod scalaz/Foldable1.distinctE1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/NonEmptyList;
       6: areturn

  public java.lang.Object sumr1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #895                // InterfaceMethod scalaz/Foldable1.sumr1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object suml1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #899                // InterfaceMethod scalaz/Foldable1.suml1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object psum1(java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #905                // InterfaceMethod scalaz/Foldable1.psum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object psumMap1(java.lang.Object, scala.Function1, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #912                // InterfaceMethod scalaz/Foldable1.psumMap1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Plus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object msuml1(java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #916                // InterfaceMethod scalaz/Foldable1.msuml1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object intercalate1(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #922                // InterfaceMethod scalaz/Foldable1.intercalate1$:(Lscalaz/Foldable1;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #929                // InterfaceMethod scalaz/Foldable1.intercalate$:(Lscalaz/Foldable1;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object traverse1_(java.lang.Object, scala.Function1, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #936                // InterfaceMethod scalaz/Foldable1.traverse1_$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object sequence1_(java.lang.Object, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #942                // InterfaceMethod scalaz/Foldable1.sequence1_$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public final boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #948                // InterfaceMethod scalaz/Foldable1.empty$:(Lscalaz/Foldable1;Ljava/lang/Object;)Z
       5: ireturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #953                // InterfaceMethod scalaz/Foldable1.product0$:(Lscalaz/Foldable1;Lscalaz/Foldable;)Lscalaz/Foldable1;
       5: areturn

  public scalaz.NonEmptyList toNel(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #960                // InterfaceMethod scalaz/Foldable1.toNel$:(Lscalaz/Foldable1;Ljava/lang/Object;)Lscalaz/NonEmptyList;
       5: areturn

  public scalaz.NonEmptyList scanLeft1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #966                // InterfaceMethod scalaz/Foldable1.scanLeft1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.NonEmptyList scanRight1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #970                // InterfaceMethod scalaz/Foldable1.scanRight1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.Foldable1<scalaz.Zipper>.Foldable1Law foldable1Law();
    Code:
       0: aload_0
       1: invokestatic  #977                // InterfaceMethod scalaz/Foldable1.foldable1Law$:(Lscalaz/Foldable1;)Lscalaz/Foldable1$Foldable1Law;
       4: areturn

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #982                // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #989                // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #992                // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #995                // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<scalaz.Zipper>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1002               // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<scalaz.Zipper>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #1009               // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1013               // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1018               // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1024               // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1030               // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1037               // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1043               // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1049               // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1053               // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1059               // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1065               // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1071               // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1077               // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1082               // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1086               // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1092               // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1096               // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1100               // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1106               // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1110               // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1114               // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1118               // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<scalaz.Zipper>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #1125               // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1130               // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1135               // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1138               // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1141               // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1148               // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1154               // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1161               // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1167               // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1173               // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1178               // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1183               // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1188               // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1193               // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1198               // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1205               // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1211               // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1217               // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1223               // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1227               // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1233               // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1237               // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1243               // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1248               // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1252               // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1258               // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1262               // InterfaceMethod scalaz/Foldable.length$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1269               // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #1276               // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1282               // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1288               // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1294               // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1300               // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scala.collection.immutable.LazyList toLazyList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1306               // InterfaceMethod scalaz/Foldable.toLazyList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/LazyList;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1312               // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1318               // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1322               // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1326               // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1332               // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1337               // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1342               // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1346               // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1350               // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1354               // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1358               // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1362               // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1368               // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1375               // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1379               // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1386               // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/$less$colon$less;)J
       6: lreturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1393               // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1399               // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1405               // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1411               // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1415               // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1421               // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1427               // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1431               // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1437               // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scalaz.Zipper>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #1445               // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1451               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1456               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.Zipper<A>, scalaz.Zipper<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1463               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1468               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1473               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1477               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1482               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1486               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1490               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1496               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G$> scalaz.Functor<?> compose(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1502               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G$> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1510               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G$> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1516               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G$> scalaz.Functor<?> product(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1519               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1526               // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<scalaz.Zipper>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1534               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1541               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1549               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scalaz.Zipper>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1557               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.ComonadSyntax<scalaz.Zipper> comonadSyntax();
    Code:
       0: aload_0
       1: getfield      #1561               // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       4: areturn

  public void scalaz$Comonad$_setter_$comonadSyntax_$eq(scalaz.syntax.ComonadSyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1561               // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       5: return

  public scalaz.syntax.CobindSyntax<scalaz.Zipper> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #1569               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1569               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scalaz.Zipper> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1576               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1576               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scalaz.Zipper> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1583               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1583               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scalaz.Zipper> applySyntax();
    Code:
       0: aload_0
       1: getfield      #1590               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1590               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.Traverse1Syntax<scalaz.Zipper> traverse1Syntax();
    Code:
       0: aload_0
       1: getfield      #1597               // Field traverse1Syntax:Lscalaz/syntax/Traverse1Syntax;
       4: areturn

  public void scalaz$Traverse1$_setter_$traverse1Syntax_$eq(scalaz.syntax.Traverse1Syntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1597               // Field traverse1Syntax:Lscalaz/syntax/Traverse1Syntax;
       5: return

  public scalaz.syntax.Foldable1Syntax<scalaz.Zipper> foldable1Syntax();
    Code:
       0: aload_0
       1: getfield      #1604               // Field foldable1Syntax:Lscalaz/syntax/Foldable1Syntax;
       4: areturn

  public void scalaz$Foldable1$_setter_$foldable1Syntax_$eq(scalaz.syntax.Foldable1Syntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1604               // Field foldable1Syntax:Lscalaz/syntax/Foldable1Syntax;
       5: return

  public scalaz.syntax.TraverseSyntax<scalaz.Zipper> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #1611               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1611               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scalaz.Zipper> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #1618               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1618               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scalaz.Zipper> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #1625               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1625               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scalaz.Zipper> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #1632               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1632               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A> scalaz.Zipper<scalaz.Zipper<A>> cojoin(scalaz.Zipper<A>);
    Code:
       0: aload_1
       1: invokevirtual #1644               // Method scalaz/Zipper.positions:()Lscalaz/Zipper;
       4: areturn

  public <A, B> scalaz.Zipper<B> cobind(scalaz.Zipper<A>, scala.Function1<scalaz.Zipper<A>, B>);
    Code:
       0: aload_1
       1: invokevirtual #1644               // Method scalaz/Zipper.positions:()Lscalaz/Zipper;
       4: astore_3
       5: aload_3
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: getstatic     #1654               // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
      14: pop
      15: aload_3
      16: invokevirtual #1658               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/LazyList;
      19: aload_2
      20: invokevirtual #1661               // Method scala/collection/immutable/LazyList.map:(Lscala/Function1;)Lscala/collection/immutable/LazyList;
      23: aload_2
      24: aload_3
      25: invokevirtual #1665               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      28: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      33: aload_3
      34: invokevirtual #1672               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/LazyList;
      37: aload_2
      38: invokevirtual #1661               // Method scala/collection/immutable/LazyList.map:(Lscala/Function1;)Lscala/collection/immutable/LazyList;
      41: astore        6
      43: astore        5
      45: astore        4
      47: new           #1640               // class scalaz/Zipper
      50: dup
      51: aload         4
      53: aload         5
      55: aload         6
      57: invokespecial #1676               // Method scalaz/Zipper."<init>":(Lscala/collection/immutable/LazyList;Ljava/lang/Object;Lscala/collection/immutable/LazyList;)V
      60: areturn

  public <A> A copoint(scalaz.Zipper<A>);
    Code:
       0: aload_1
       1: invokevirtual #1665               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
       4: areturn

  public <G, A, B> G traverseImpl(scalaz.Zipper<A>, scala.Function1<A, G>, scalaz.Applicative<G>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: invokedynamic #1708,  0           // InvokeDynamic #0:apply:()Lscala/Function3;
      11: invokeinterface #1714,  1         // InterfaceMethod scala/Function3.curried:()Lscala/Function1;
      16: astore        4
      18: getstatic     #1719               // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      21: pop
      22: aload_3
      23: aload_1
      24: aload_3
      25: aload_2
      26: aload_3
      27: aload         4
      29: invokedynamic #1728,  0           // InvokeDynamic #1:apply:(Lscalaz/Zipper;Lscalaz/Applicative;Lscala/Function1;Lscalaz/Applicative;Lscala/Function1;)Lscala/Function0;
      34: invokeinterface #1730,  2         // InterfaceMethod scalaz/Applicative.apF:(Lscala/Function0;)Lscala/Function1;
      39: getstatic     #1735               // Field scalaz/Traverse$.MODULE$:Lscalaz/Traverse$;
      42: pop
      43: getstatic     #1740               // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
      46: invokevirtual #1744               // Method scalaz/std/lazylist$.lazylistInstance:()Lscalaz/Traverse;
      49: aload_1
      50: invokevirtual #1672               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/LazyList;
      53: aload_2
      54: aload_3
      55: invokeinterface #1746,  4         // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      60: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      65: areturn

  public <A, B> B foldRight(scalaz.Zipper<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: invokevirtual #1658               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/LazyList;
      10: getstatic     #1753               // Field scala/collection/immutable/LazyList$cons$.MODULE$:Lscala/collection/immutable/LazyList$cons$;
      13: aload_1
      14: invokedynamic #1760,  0           // InvokeDynamic #2:apply:(Lscalaz/Zipper;)Lscala/Function0;
      19: aload_1
      20: invokedynamic #1767,  0           // InvokeDynamic #3:apply:(Lscalaz/Zipper;)Lscala/Function0;
      25: invokevirtual #1770               // Method scala/collection/immutable/LazyList$cons$.apply:(Lscala/Function0;Lscala/Function0;)Lscala/collection/immutable/LazyList;
      28: aload_2
      29: invokeinterface #1774,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      34: aload_3
      35: invokedynamic #1781,  0           // InvokeDynamic #4:apply:(Lscala/Function2;)Lscala/Function2;
      40: invokevirtual #1783               // Method scala/collection/immutable/LazyList.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      43: aload_3
      44: invokedynamic #1788,  0           // InvokeDynamic #5:apply:(Lscala/Function2;)Lscala/Function2;
      49: invokevirtual #1791               // Method scala/collection/immutable/LazyList.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      52: areturn

  public <A, B> B foldLeft(scalaz.Zipper<A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: getstatic     #1753               // Field scala/collection/immutable/LazyList$cons$.MODULE$:Lscala/collection/immutable/LazyList$cons$;
       9: aload_1
      10: invokedynamic #1798,  0           // InvokeDynamic #6:apply:(Lscalaz/Zipper;)Lscala/Function0;
      15: aload_1
      16: invokedynamic #1803,  0           // InvokeDynamic #7:apply:(Lscalaz/Zipper;)Lscala/Function0;
      21: invokevirtual #1770               // Method scala/collection/immutable/LazyList$cons$.apply:(Lscala/Function0;Lscala/Function0;)Lscala/collection/immutable/LazyList;
      24: aload_1
      25: invokevirtual #1658               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/LazyList;
      28: aload_2
      29: aload_3
      30: invokedynamic #1808,  0           // InvokeDynamic #8:apply:(Lscala/Function2;)Lscala/Function2;
      35: invokevirtual #1783               // Method scala/collection/immutable/LazyList.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      38: aload_3
      39: invokevirtual #1791               // Method scala/collection/immutable/LazyList.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      42: areturn

  public <A, B> B foldMap(scalaz.Zipper<A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_1
       1: aload_3
       2: invokeinterface #1816,  1         // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
       7: aload_3
       8: aload_2
       9: invokedynamic #1824,  0           // InvokeDynamic #9:apply:(Lscalaz/Monoid;Lscala/Function1;)Lscala/Function2;
      14: astore        5
      16: astore        4
      18: ifnonnull     23
      21: aconst_null
      22: athrow
      23: getstatic     #1753               // Field scala/collection/immutable/LazyList$cons$.MODULE$:Lscala/collection/immutable/LazyList$cons$;
      26: aload_1
      27: invokedynamic #1798,  0           // InvokeDynamic #6:apply:(Lscalaz/Zipper;)Lscala/Function0;
      32: aload_1
      33: invokedynamic #1803,  0           // InvokeDynamic #7:apply:(Lscalaz/Zipper;)Lscala/Function0;
      38: invokevirtual #1770               // Method scala/collection/immutable/LazyList$cons$.apply:(Lscala/Function0;Lscala/Function0;)Lscala/collection/immutable/LazyList;
      41: aload_1
      42: invokevirtual #1658               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/LazyList;
      45: aload         4
      47: aload         5
      49: invokedynamic #1808,  0           // InvokeDynamic #8:apply:(Lscala/Function2;)Lscala/Function2;
      54: invokevirtual #1783               // Method scala/collection/immutable/LazyList.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      57: aload         5
      59: invokevirtual #1791               // Method scala/collection/immutable/LazyList.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      62: areturn

  public <A> scalaz.Zipper<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #1654               // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       3: pop
       4: getstatic     #1836               // Field scala/package$.MODULE$:Lscala/package$;
       7: invokevirtual #1840               // Method scala/package$.LazyList:()Lscala/collection/immutable/LazyList$;
      10: aload_1
      11: invokevirtual #1846               // Method scala/collection/immutable/LazyList$.continually:(Lscala/Function0;)Lscala/collection/immutable/LazyList;
      14: aload_1
      15: invokeinterface #1774,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      20: getstatic     #1836               // Field scala/package$.MODULE$:Lscala/package$;
      23: invokevirtual #1840               // Method scala/package$.LazyList:()Lscala/collection/immutable/LazyList$;
      26: aload_1
      27: invokevirtual #1846               // Method scala/collection/immutable/LazyList$.continually:(Lscala/Function0;)Lscala/collection/immutable/LazyList;
      30: astore        4
      32: astore_3
      33: astore_2
      34: new           #1640               // class scalaz/Zipper
      37: dup
      38: aload_2
      39: aload_3
      40: aload         4
      42: invokespecial #1676               // Method scalaz/Zipper."<init>":(Lscala/collection/immutable/LazyList;Ljava/lang/Object;Lscala/collection/immutable/LazyList;)V
      45: areturn

  public <A, B> scalaz.Zipper<B> ap(scala.Function0<scalaz.Zipper<A>>, scala.Function0<scalaz.Zipper<scala.Function1<A, B>>>);
    Code:
       0: aload_1
       1: invokeinterface #1774,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #1640               // class scalaz/Zipper
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: astore_3
      16: aload_3
      17: invokevirtual #1658               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/LazyList;
      20: aload_2
      21: invokeinterface #1774,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      26: checkcast     #1640               // class scalaz/Zipper
      29: invokevirtual #1658               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/LazyList;
      32: invokevirtual #1856               // Method scala/collection/immutable/LazyList.zip:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/LazyList;
      35: invokedynamic #1865,  0           // InvokeDynamic #10:apply:()Lscala/Function1;
      40: invokevirtual #1661               // Method scala/collection/immutable/LazyList.map:(Lscala/Function1;)Lscala/collection/immutable/LazyList;
      43: astore        4
      45: aload_3
      46: invokevirtual #1672               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/LazyList;
      49: aload_2
      50: invokeinterface #1774,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      55: checkcast     #1640               // class scalaz/Zipper
      58: invokevirtual #1672               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/LazyList;
      61: invokevirtual #1856               // Method scala/collection/immutable/LazyList.zip:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/LazyList;
      64: invokedynamic #1870,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
      69: invokevirtual #1661               // Method scala/collection/immutable/LazyList.map:(Lscala/Function1;)Lscala/collection/immutable/LazyList;
      72: astore        5
      74: getstatic     #1654               // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
      77: pop
      78: aload_2
      79: invokeinterface #1774,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      84: checkcast     #1640               // class scalaz/Zipper
      87: invokevirtual #1665               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      90: checkcast     #1667               // class scala/Function1
      93: aload_3
      94: invokevirtual #1665               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      97: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     102: astore        6
     104: new           #1640               // class scalaz/Zipper
     107: dup
     108: aload         4
     110: aload         6
     112: aload         5
     114: invokespecial #1676               // Method scalaz/Zipper."<init>":(Lscala/collection/immutable/LazyList;Ljava/lang/Object;Lscala/collection/immutable/LazyList;)V
     117: areturn

  public <A, B> scalaz.Zipper<B> map(scalaz.Zipper<A>, scala.Function1<A, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: getstatic     #1654               // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       9: pop
      10: aload_1
      11: invokevirtual #1658               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/LazyList;
      14: aload_2
      15: invokevirtual #1661               // Method scala/collection/immutable/LazyList.map:(Lscala/Function1;)Lscala/collection/immutable/LazyList;
      18: aload_2
      19: aload_1
      20: invokevirtual #1665               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      23: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: aload_1
      29: invokevirtual #1672               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/LazyList;
      32: aload_2
      33: invokevirtual #1661               // Method scala/collection/immutable/LazyList.map:(Lscala/Function1;)Lscala/collection/immutable/LazyList;
      36: astore        5
      38: astore        4
      40: astore_3
      41: new           #1640               // class scalaz/Zipper
      44: dup
      45: aload_3
      46: aload         4
      48: aload         5
      50: invokespecial #1676               // Method scalaz/Zipper."<init>":(Lscala/collection/immutable/LazyList;Ljava/lang/Object;Lscala/collection/immutable/LazyList;)V
      53: areturn

  public <A> boolean all(scalaz.Zipper<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: invokevirtual #1658               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/LazyList;
       4: aload_2
       5: invokevirtual #1885               // Method scala/collection/immutable/LazyList.forall:(Lscala/Function1;)Z
       8: ifeq          40
      11: aload_2
      12: aload_1
      13: invokevirtual #1665               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      16: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      21: invokestatic  #1890               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      24: ifeq          40
      27: aload_1
      28: invokevirtual #1672               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/LazyList;
      31: aload_2
      32: invokevirtual #1885               // Method scala/collection/immutable/LazyList.forall:(Lscala/Function1;)Z
      35: ifeq          40
      38: iconst_1
      39: ireturn
      40: iconst_0
      41: ireturn

  public <A> boolean any(scalaz.Zipper<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: invokevirtual #1658               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/LazyList;
       4: aload_2
       5: invokevirtual #1894               // Method scala/collection/immutable/LazyList.exists:(Lscala/Function1;)Z
       8: ifne          38
      11: aload_2
      12: aload_1
      13: invokevirtual #1665               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      16: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      21: invokestatic  #1890               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      24: ifne          38
      27: aload_1
      28: invokevirtual #1672               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/LazyList;
      31: aload_2
      32: invokevirtual #1894               // Method scala/collection/immutable/LazyList.exists:(Lscala/Function1;)Z
      35: ifeq          40
      38: iconst_1
      39: ireturn
      40: iconst_0
      41: ireturn

  public <A, B> B foldMap1(scalaz.Zipper<A>, scala.Function1<A, B>, scalaz.Semigroup<B>);
    Code:
       0: aload_1
       1: invokevirtual #1672               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/LazyList;
       4: getstatic     #1902               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       7: pop
       8: getstatic     #1740               // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
      11: invokevirtual #1744               // Method scalaz/std/lazylist$.lazylistInstance:()Lscalaz/Traverse;
      14: aload_1
      15: invokevirtual #1658               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/LazyList;
      18: aload_2
      19: aload_3
      20: aload_2
      21: invokedynamic #1912,  0           // InvokeDynamic #12:apply:(Lscalaz/Semigroup;Lscala/Function1;)Lscala/Function2;
      26: invokeinterface #1914,  4         // InterfaceMethod scalaz/Foldable.foldMapRight1Opt:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
      31: astore        4
      33: aload         4
      35: instanceof    #1916               // class scala/Some
      38: ifeq          69
      41: aload         4
      43: checkcast     #1916               // class scala/Some
      46: invokevirtual #1918               // Method scala/Some.value:()Ljava/lang/Object;
      49: astore        5
      51: aload_3
      52: aload         5
      54: aload_2
      55: aload_1
      56: invokedynamic #1926,  0           // InvokeDynamic #13:apply:(Lscala/Function1;Lscalaz/Zipper;)Lscala/Function0;
      61: invokeinterface #1931,  3         // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      66: goto          103
      69: getstatic     #1936               // Field scala/None$.MODULE$:Lscala/None$;
      72: aload         4
      74: invokevirtual #1939               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      77: ifeq          93
      80: aload_2
      81: aload_1
      82: invokevirtual #1665               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      85: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      90: goto          103
      93: new           #1941               // class scala/MatchError
      96: dup
      97: aload         4
      99: invokespecial #1944               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     102: athrow
     103: aload_3
     104: aload_2
     105: invokedynamic #1950,  0           // InvokeDynamic #14:apply:(Lscalaz/Semigroup;Lscala/Function1;)Lscala/Function2;
     110: invokevirtual #1791               // Method scala/collection/immutable/LazyList.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
     113: areturn

  public <A, B> B foldMapRight1(scalaz.Zipper<A>, scala.Function1<A, B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: getstatic     #1902               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: pop
       4: getstatic     #1740               // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       7: invokevirtual #1744               // Method scalaz/std/lazylist$.lazylistInstance:()Lscalaz/Traverse;
      10: aload_1
      11: invokevirtual #1658               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/LazyList;
      14: getstatic     #1902               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
      17: pop
      18: getstatic     #1740               // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
      21: invokevirtual #1744               // Method scalaz/std/lazylist$.lazylistInstance:()Lscalaz/Traverse;
      24: aload_1
      25: invokevirtual #1672               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/LazyList;
      28: aload_2
      29: aload_3
      30: invokeinterface #1914,  4         // InterfaceMethod scalaz/Foldable.foldMapRight1Opt:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
      35: astore        4
      37: aload         4
      39: instanceof    #1916               // class scala/Some
      42: ifeq          75
      45: aload         4
      47: checkcast     #1916               // class scala/Some
      50: invokevirtual #1918               // Method scala/Some.value:()Ljava/lang/Object;
      53: astore        5
      55: aload_3
      56: aload_1
      57: invokevirtual #1665               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      60: aload         5
      62: invokedynamic #1962,  0           // InvokeDynamic #15:apply:(Ljava/lang/Object;)Lscala/Function0;
      67: invokeinterface #1964,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: goto          109
      75: getstatic     #1936               // Field scala/None$.MODULE$:Lscala/None$;
      78: aload         4
      80: invokevirtual #1939               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      83: ifeq          99
      86: aload_2
      87: aload_1
      88: invokevirtual #1665               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      91: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      96: goto          109
      99: new           #1941               // class scala/MatchError
     102: dup
     103: aload         4
     105: invokespecial #1944               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     108: athrow
     109: aload_3
     110: invokedynamic #1969,  0           // InvokeDynamic #16:apply:(Lscala/Function2;)Lscala/Function2;
     115: invokeinterface #1971,  4         // InterfaceMethod scalaz/Foldable.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
     120: areturn

  public <A, B> B foldMapLeft1(scalaz.Zipper<A>, scala.Function1<A, B>, scala.Function2<B, A, B>);
    Code:
       0: aload_1
       1: invokevirtual #1672               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/LazyList;
       4: getstatic     #1902               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       7: pop
       8: getstatic     #1740               // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
      11: invokevirtual #1744               // Method scalaz/std/lazylist$.lazylistInstance:()Lscalaz/Traverse;
      14: aload_1
      15: invokevirtual #1658               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/LazyList;
      18: aload_2
      19: aload_3
      20: invokedynamic #1979,  0           // InvokeDynamic #17:apply:(Lscala/Function2;)Lscala/Function2;
      25: invokeinterface #1914,  4         // InterfaceMethod scalaz/Foldable.foldMapRight1Opt:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
      30: astore        4
      32: aload         4
      34: instanceof    #1916               // class scala/Some
      37: ifeq          65
      40: aload         4
      42: checkcast     #1916               // class scala/Some
      45: invokevirtual #1918               // Method scala/Some.value:()Ljava/lang/Object;
      48: astore        5
      50: aload_3
      51: aload         5
      53: aload_1
      54: invokevirtual #1665               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      57: invokeinterface #1964,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: goto          99
      65: getstatic     #1936               // Field scala/None$.MODULE$:Lscala/None$;
      68: aload         4
      70: invokevirtual #1939               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      73: ifeq          89
      76: aload_2
      77: aload_1
      78: invokevirtual #1665               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      81: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      86: goto          99
      89: new           #1941               // class scala/MatchError
      92: dup
      93: aload         4
      95: invokespecial #1944               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      98: athrow
      99: aload_3
     100: invokevirtual #1791               // Method scala/collection/immutable/LazyList.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
     103: areturn

  public <G, A, B> G traverse1Impl(scalaz.Zipper<A>, scala.Function1<A, G>, scalaz.Apply<G>);
    Code:
       0: getstatic     #1987               // Field scalaz/Traverse1$.MODULE$:Lscalaz/Traverse1$;
       3: pop
       4: getstatic     #1992               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       7: pop
       8: getstatic     #1740               // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
      11: invokevirtual #1744               // Method scalaz/std/lazylist$.lazylistInstance:()Lscalaz/Traverse;
      14: astore        22
      16: new           #88                 // class scalaz/OneAndInstances0$$anon$11
      19: dup
      20: aconst_null
      21: aload         22
      23: invokespecial #1995               // Method scalaz/OneAndInstances0$$anon$11."<init>":(Lscalaz/OneAndInstances0;Lscalaz/Traverse;)V
      26: aconst_null
      27: astore        22
      29: astore        21
      31: aload         21
      33: aconst_null
      34: astore        21
      36: astore        4
      38: aload_1
      39: invokevirtual #1658               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/LazyList;
      42: invokevirtual #1997               // Method scala/collection/immutable/LazyList.reverse:()Lscala/collection/immutable/LazyList;
      45: astore        5
      47: aload         5
      49: ifnull        483
      52: getstatic     #2000               // Field scala/package$$hash$colon$colon$.MODULE$:Lscala/package$$hash$colon$colon$;
      55: aload         5
      57: invokevirtual #2004               // Method scala/package$$hash$colon$colon$.unapply:(Lscala/collection/immutable/LazyList;)Lscala/Option;
      60: astore        6
      62: aload         6
      64: invokevirtual #2008               // Method scala/Option.isEmpty:()Z
      67: ifne          483
      70: aload         6
      72: invokevirtual #2011               // Method scala/Option.get:()Ljava/lang/Object;
      75: checkcast     #2013               // class scala/Tuple2
      78: invokevirtual #2016               // Method scala/Tuple2._1:()Ljava/lang/Object;
      81: astore        7
      83: aload         6
      85: invokevirtual #2011               // Method scala/Option.get:()Ljava/lang/Object;
      88: checkcast     #2013               // class scala/Tuple2
      91: invokevirtual #2019               // Method scala/Tuple2._2:()Ljava/lang/Object;
      94: checkcast     #31                 // class scala/collection/immutable/LazyList
      97: astore        8
      99: aload_3
     100: getstatic     #1992               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
     103: pop
     104: getstatic     #2022               // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
     107: aload         7
     109: aload         8
     111: invokevirtual #2025               // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
     114: astore        23
     116: aload_3
     117: invokeinterface #2027,  1         // InterfaceMethod scalaz/Apply.applyApplicative:()Lscalaz/Applicative;
     122: aload         23
     124: invokevirtual #2030               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
     127: aload_2
     128: getstatic     #2035               // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
     131: invokevirtual #2038               // Method scalaz/$bslash$div$.left:()Lscala/Function1;
     134: invokeinterface #2041,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     139: aload         4
     141: invokeinterface #2045,  1         // InterfaceMethod scalaz/OneAndTraverse.F:()Lscalaz/Traverse;
     146: invokeinterface #2047,  4         // InterfaceMethod scalaz/Applicative.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
     151: checkcast     #2049               // class scalaz/$bslash$div
     154: dup
     155: ifnonnull     160
     158: aconst_null
     159: athrow
     160: astore        24
     162: aload         24
     164: instanceof    #2051               // class scalaz/$minus$bslash$div
     167: ifeq          209
     170: aload         24
     172: checkcast     #2051               // class scalaz/$minus$bslash$div
     175: invokevirtual #2053               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
     178: astore        25
     180: aload_3
     181: aload_2
     182: aload         23
     184: invokedynamic #2061,  0           // InvokeDynamic #18:apply:(Lscala/Function1;Lscalaz/OneAnd;)Lscala/Function0;
     189: aload         25
     191: invokedynamic #2066,  0           // InvokeDynamic #19:apply:(Ljava/lang/Object;)Lscala/Function0;
     196: invokedynamic #2074,  0           // InvokeDynamic #20:apply:()Lscala/Function2;
     201: invokeinterface #2076,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     206: goto          264
     209: aload         24
     211: instanceof    #2078               // class scalaz/$bslash$div$minus
     214: ifeq          254
     217: aload         24
     219: checkcast     #2078               // class scalaz/$bslash$div$minus
     222: invokevirtual #2080               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
     225: astore        26
     227: aload_3
     228: aload_2
     229: aload         23
     231: invokevirtual #2083               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
     234: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     239: aload         26
     241: invokedynamic #2092,  0           // InvokeDynamic #21:apply:(Ljava/lang/Object;)Lscala/Function1;
     246: invokeinterface #2094,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     251: goto          264
     254: new           #1941               // class scala/MatchError
     257: dup
     258: aload         24
     260: invokespecial #1944               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     263: athrow
     264: aconst_null
     265: astore        24
     267: aconst_null
     268: astore        25
     270: aconst_null
     271: astore        26
     273: aconst_null
     274: astore        23
     276: invokedynamic #2101,  0           // InvokeDynamic #22:apply:()Lscala/Function1;
     281: invokeinterface #2094,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     286: astore        9
     288: aload_1
     289: invokevirtual #1672               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/LazyList;
     292: astore        10
     294: aload         10
     296: ifnull        385
     299: getstatic     #2000               // Field scala/package$$hash$colon$colon$.MODULE$:Lscala/package$$hash$colon$colon$;
     302: aload         10
     304: invokevirtual #2004               // Method scala/package$$hash$colon$colon$.unapply:(Lscala/collection/immutable/LazyList;)Lscala/Option;
     307: astore        11
     309: aload         11
     311: invokevirtual #2008               // Method scala/Option.isEmpty:()Z
     314: ifne          385
     317: aload         11
     319: invokevirtual #2011               // Method scala/Option.get:()Ljava/lang/Object;
     322: checkcast     #2013               // class scala/Tuple2
     325: invokevirtual #2016               // Method scala/Tuple2._1:()Ljava/lang/Object;
     328: astore        12
     330: aload         11
     332: invokevirtual #2011               // Method scala/Option.get:()Ljava/lang/Object;
     335: checkcast     #2013               // class scala/Tuple2
     338: invokevirtual #2019               // Method scala/Tuple2._2:()Ljava/lang/Object;
     341: checkcast     #31                 // class scala/collection/immutable/LazyList
     344: astore        13
     346: aload_3
     347: aload         9
     349: invokedynamic #2105,  0           // InvokeDynamic #23:apply:(Ljava/lang/Object;)Lscala/Function0;
     354: aload_2
     355: aload_1
     356: invokedynamic #2110,  0           // InvokeDynamic #24:apply:(Lscala/Function1;Lscalaz/Zipper;)Lscala/Function0;
     361: aload         4
     363: aload         12
     365: aload         13
     367: aload_2
     368: aload_3
     369: invokedynamic #2117,  0           // InvokeDynamic #25:apply:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/collection/immutable/LazyList;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     374: invokedynamic #2124,  0           // InvokeDynamic #26:apply:()Lscala/Function3;
     379: invokeinterface #2126,  5         // InterfaceMethod scalaz/Apply.apply3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
     384: areturn
     385: aload         10
     387: ifnull        473
     390: getstatic     #1836               // Field scala/package$.MODULE$:Lscala/package$;
     393: invokevirtual #1840               // Method scala/package$.LazyList:()Lscala/collection/immutable/LazyList$;
     396: aload         10
     398: invokevirtual #2130               // Method scala/collection/immutable/LazyList$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
     401: astore        14
     403: getstatic     #2133               // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
     406: aload         14
     408: invokevirtual #2137               // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
     411: ifne          473
     414: new           #21                 // class scala/collection/SeqFactory$UnapplySeqWrapper
     417: getstatic     #2133               // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
     420: aload         14
     422: invokevirtual #2140               // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
     425: invokespecial #2143               // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
     428: getstatic     #2133               // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
     431: getstatic     #2133               // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
     434: aload         14
     436: invokevirtual #2140               // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
     439: iconst_0
     440: invokevirtual #2147               // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
     443: iconst_0
     444: if_icmpne     473
     447: aload_3
     448: aload         9
     450: invokedynamic #2152,  0           // InvokeDynamic #27:apply:(Ljava/lang/Object;)Lscala/Function0;
     455: aload_2
     456: aload_1
     457: invokedynamic #2157,  0           // InvokeDynamic #28:apply:(Lscala/Function1;Lscalaz/Zipper;)Lscala/Function0;
     462: invokedynamic #2164,  0           // InvokeDynamic #29:apply:()Lscala/Function2;
     467: invokeinterface #2076,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     472: areturn
     473: new           #1941               // class scala/MatchError
     476: dup
     477: aload         10
     479: invokespecial #1944               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     482: athrow
     483: aload         5
     485: ifnull        729
     488: getstatic     #1836               // Field scala/package$.MODULE$:Lscala/package$;
     491: invokevirtual #1840               // Method scala/package$.LazyList:()Lscala/collection/immutable/LazyList$;
     494: aload         5
     496: invokevirtual #2130               // Method scala/collection/immutable/LazyList$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
     499: astore        15
     501: getstatic     #2133               // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
     504: aload         15
     506: invokevirtual #2137               // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
     509: ifne          729
     512: new           #21                 // class scala/collection/SeqFactory$UnapplySeqWrapper
     515: getstatic     #2133               // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
     518: aload         15
     520: invokevirtual #2140               // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
     523: invokespecial #2143               // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
     526: getstatic     #2133               // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
     529: getstatic     #2133               // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
     532: aload         15
     534: invokevirtual #2140               // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
     537: iconst_0
     538: invokevirtual #2147               // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
     541: iconst_0
     542: if_icmpne     729
     545: aload_1
     546: invokevirtual #1672               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/LazyList;
     549: astore        16
     551: aload         16
     553: ifnull        635
     556: getstatic     #2000               // Field scala/package$$hash$colon$colon$.MODULE$:Lscala/package$$hash$colon$colon$;
     559: aload         16
     561: invokevirtual #2004               // Method scala/package$$hash$colon$colon$.unapply:(Lscala/collection/immutable/LazyList;)Lscala/Option;
     564: astore        17
     566: aload         17
     568: invokevirtual #2008               // Method scala/Option.isEmpty:()Z
     571: ifne          635
     574: aload         17
     576: invokevirtual #2011               // Method scala/Option.get:()Ljava/lang/Object;
     579: checkcast     #2013               // class scala/Tuple2
     582: invokevirtual #2016               // Method scala/Tuple2._1:()Ljava/lang/Object;
     585: astore        18
     587: aload         17
     589: invokevirtual #2011               // Method scala/Option.get:()Ljava/lang/Object;
     592: checkcast     #2013               // class scala/Tuple2
     595: invokevirtual #2019               // Method scala/Tuple2._2:()Ljava/lang/Object;
     598: checkcast     #31                 // class scala/collection/immutable/LazyList
     601: astore        19
     603: aload_3
     604: aload_2
     605: aload_1
     606: invokedynamic #2169,  0           // InvokeDynamic #30:apply:(Lscala/Function1;Lscalaz/Zipper;)Lscala/Function0;
     611: aload         4
     613: aload         18
     615: aload         19
     617: aload_2
     618: aload_3
     619: invokedynamic #2174,  0           // InvokeDynamic #31:apply:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/collection/immutable/LazyList;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     624: invokedynamic #2181,  0           // InvokeDynamic #32:apply:()Lscala/Function2;
     629: invokeinterface #2076,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     634: areturn
     635: aload         16
     637: ifnull        719
     640: getstatic     #1836               // Field scala/package$.MODULE$:Lscala/package$;
     643: invokevirtual #1840               // Method scala/package$.LazyList:()Lscala/collection/immutable/LazyList$;
     646: aload         16
     648: invokevirtual #2130               // Method scala/collection/immutable/LazyList$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
     651: astore        20
     653: getstatic     #2133               // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
     656: aload         20
     658: invokevirtual #2137               // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
     661: ifne          719
     664: new           #21                 // class scala/collection/SeqFactory$UnapplySeqWrapper
     667: getstatic     #2133               // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
     670: aload         20
     672: invokevirtual #2140               // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
     675: invokespecial #2143               // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
     678: getstatic     #2133               // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
     681: getstatic     #2133               // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
     684: aload         20
     686: invokevirtual #2140               // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
     689: iconst_0
     690: invokevirtual #2147               // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
     693: iconst_0
     694: if_icmpne     719
     697: aload_3
     698: aload_2
     699: aload_1
     700: invokevirtual #1665               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
     703: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     708: invokedynamic #2188,  0           // InvokeDynamic #33:apply:()Lscala/Function1;
     713: invokeinterface #2094,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     718: areturn
     719: new           #1941               // class scala/MatchError
     722: dup
     723: aload         16
     725: invokespecial #1944               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     728: athrow
     729: new           #1941               // class scala/MatchError
     732: dup
     733: aload         5
     735: invokespecial #1944               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     738: athrow

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #2203               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public java.lang.Object traverse1Impl(java.lang.Object, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1640               // class scalaz/Zipper
       5: aload_2
       6: aload_3
       7: invokevirtual #2205               // Method traverse1Impl:(Lscalaz/Zipper;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldMapLeft1(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1640               // class scalaz/Zipper
       5: aload_2
       6: aload_3
       7: invokevirtual #2208               // Method foldMapLeft1:(Lscalaz/Zipper;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldMapRight1(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1640               // class scalaz/Zipper
       5: aload_2
       6: aload_3
       7: invokevirtual #2210               // Method foldMapRight1:(Lscalaz/Zipper;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldMap1(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1640               // class scalaz/Zipper
       5: aload_2
       6: aload_3
       7: invokevirtual #2213               // Method foldMap1:(Lscalaz/Zipper;Lscala/Function1;Lscalaz/Semigroup;)Ljava/lang/Object;
      10: areturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1640               // class scalaz/Zipper
       5: aload_2
       6: invokevirtual #2216               // Method any:(Lscalaz/Zipper;Lscala/Function1;)Z
       9: ireturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1640               // class scalaz/Zipper
       5: aload_2
       6: invokevirtual #2218               // Method all:(Lscalaz/Zipper;Lscala/Function1;)Z
       9: ireturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1640               // class scalaz/Zipper
       5: aload_2
       6: invokevirtual #2220               // Method map:(Lscalaz/Zipper;Lscala/Function1;)Lscalaz/Zipper;
       9: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2222               // Method ap:(Lscala/Function0;Lscala/Function0;)Lscalaz/Zipper;
       6: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2224               // Method point:(Lscala/Function0;)Lscalaz/Zipper;
       5: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1640               // class scalaz/Zipper
       5: aload_2
       6: aload_3
       7: invokevirtual #2227               // Method foldMap:(Lscalaz/Zipper;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1640               // class scalaz/Zipper
       5: aload_2
       6: aload_3
       7: invokevirtual #2229               // Method foldLeft:(Lscalaz/Zipper;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1640               // class scalaz/Zipper
       5: aload_2
       6: aload_3
       7: invokevirtual #2232               // Method foldRight:(Lscalaz/Zipper;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1640               // class scalaz/Zipper
       5: aload_2
       6: aload_3
       7: invokevirtual #2234               // Method traverseImpl:(Lscalaz/Zipper;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object copoint(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1640               // class scalaz/Zipper
       5: invokevirtual #2236               // Method copoint:(Lscalaz/Zipper;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1640               // class scalaz/Zipper
       5: aload_2
       6: invokevirtual #2238               // Method cobind:(Lscalaz/Zipper;Lscala/Function1;)Lscalaz/Zipper;
       9: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1640               // class scalaz/Zipper
       5: invokevirtual #2240               // Method cojoin:(Lscalaz/Zipper;)Lscalaz/Zipper;
       8: areturn

  public static final java.lang.Object $anonfun$foldMap$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$foldMap$1(scalaz.Monoid, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload_3
       4: invokedynamic #2250,  0           // InvokeDynamic #34:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
       9: invokeinterface #2251,  3         // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static final java.lang.Object $anonfun$foldMap1$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$foldMap1$1(scalaz.Semigroup, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_3
       2: invokeinterface #1774,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: aload_1
       8: aload_2
       9: invokedynamic #2259,  0           // InvokeDynamic #35:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      14: invokeinterface #1931,  3         // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      19: areturn

  public static final java.lang.Object $anonfun$foldMap1$3(scala.Function1, scalaz.Zipper);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1665               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
       5: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static final java.lang.Object $anonfun$foldMap1$5(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$foldMap1$4(scalaz.Semigroup, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload_3
       4: invokedynamic #2266,  0           // InvokeDynamic #36:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
       9: invokeinterface #1931,  3         // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokedynamic #2274,  0           // InvokeDynamic #37:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #1964,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public static final java.lang.Object $anonfun$foldMapLeft1$1(scala.Function2, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #1774,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: aload_1
       8: invokeinterface #1964,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public static final scala.collection.immutable.LazyList $anonfun$traverse1Impl$2(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #2030               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #31                 // class scala/collection/immutable/LazyList
       7: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$3(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #2083               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       4: areturn

  public static final scala.collection.immutable.LazyList $anonfun$traverse1Impl$1(scalaz.OneAnd);
    Code:
       0: getstatic     #2281               // Field scala/collection/immutable/LazyList$Deferrer$.MODULE$:Lscala/collection/immutable/LazyList$Deferrer$;
       3: getstatic     #2284               // Field scala/collection/immutable/LazyList$.MODULE$:Lscala/collection/immutable/LazyList$;
       6: aload_0
       7: invokedynamic #2290,  0           // InvokeDynamic #38:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      12: invokevirtual #2294               // Method scala/collection/immutable/LazyList$.toDeferrer:(Lscala/Function0;)Lscala/Function0;
      15: aload_0
      16: invokedynamic #2298,  0           // InvokeDynamic #39:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      21: invokevirtual #2301               // Method scala/collection/immutable/LazyList$Deferrer$.$hash$colon$colon$extension:(Lscala/Function0;Lscala/Function0;)Lscala/collection/immutable/LazyList;
      24: invokevirtual #1997               // Method scala/collection/immutable/LazyList.reverse:()Lscala/collection/immutable/LazyList;
      27: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$4(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$5(scala.Function1, scalaz.Zipper);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1665               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
       5: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$6(scalaz.Traverse1, java.lang.Object, scala.collection.immutable.LazyList, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: getstatic     #1992               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       4: pop
       5: getstatic     #2022               // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
       8: aload_1
       9: aload_2
      10: invokevirtual #2025               // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
      13: aload_3
      14: aload         4
      16: invokeinterface #2310,  4         // InterfaceMethod scalaz/Traverse1.traverse1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      21: areturn

  public static final scala.collection.immutable.LazyList $anonfun$traverse1Impl$8(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #2030               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #31                 // class scala/collection/immutable/LazyList
       7: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$9(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #2083               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       4: areturn

  public static final scalaz.Zipper $anonfun$traverse1Impl$7(scala.collection.immutable.LazyList, java.lang.Object, scalaz.OneAnd);
    Code:
       0: new           #1640               // class scalaz/Zipper
       3: dup
       4: aload_0
       5: aload_1
       6: getstatic     #2281               // Field scala/collection/immutable/LazyList$Deferrer$.MODULE$:Lscala/collection/immutable/LazyList$Deferrer$;
       9: getstatic     #2284               // Field scala/collection/immutable/LazyList$.MODULE$:Lscala/collection/immutable/LazyList$;
      12: aload_2
      13: invokedynamic #2317,  0           // InvokeDynamic #40:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      18: invokevirtual #2294               // Method scala/collection/immutable/LazyList$.toDeferrer:(Lscala/Function0;)Lscala/Function0;
      21: aload_2
      22: invokedynamic #2321,  0           // InvokeDynamic #41:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      27: invokevirtual #2301               // Method scala/collection/immutable/LazyList$Deferrer$.$hash$colon$colon$extension:(Lscala/Function0;Lscala/Function0;)Lscala/collection/immutable/LazyList;
      30: invokespecial #1676               // Method scalaz/Zipper."<init>":(Lscala/collection/immutable/LazyList;Ljava/lang/Object;Lscala/collection/immutable/LazyList;)V
      33: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$10(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$11(scala.Function1, scalaz.Zipper);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1665               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
       5: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static final scalaz.Zipper $anonfun$traverse1Impl$12(scala.collection.immutable.LazyList, java.lang.Object);
    Code:
       0: new           #1640               // class scalaz/Zipper
       3: dup
       4: aload_0
       5: aload_1
       6: getstatic     #1836               // Field scala/package$.MODULE$:Lscala/package$;
       9: invokevirtual #1840               // Method scala/package$.LazyList:()Lscala/collection/immutable/LazyList$;
      12: getstatic     #2326               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      15: invokevirtual #2329               // Method scala/collection/immutable/LazyList$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
      18: checkcast     #31                 // class scala/collection/immutable/LazyList
      21: invokespecial #1676               // Method scalaz/Zipper."<init>":(Lscala/collection/immutable/LazyList;Ljava/lang/Object;Lscala/collection/immutable/LazyList;)V
      24: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$13(scala.Function1, scalaz.Zipper);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1665               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
       5: invokeinterface #1669,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$14(scalaz.Traverse1, java.lang.Object, scala.collection.immutable.LazyList, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: getstatic     #1992               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       4: pop
       5: getstatic     #2022               // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
       8: aload_1
       9: aload_2
      10: invokevirtual #2025               // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
      13: aload_3
      14: aload         4
      16: invokeinterface #2310,  4         // InterfaceMethod scalaz/Traverse1.traverse1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      21: areturn

  public static final scala.collection.immutable.LazyList $anonfun$traverse1Impl$16(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #2030               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #31                 // class scala/collection/immutable/LazyList
       7: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$17(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #2083               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       4: areturn

  public static final scalaz.Zipper $anonfun$traverse1Impl$15(java.lang.Object, scalaz.OneAnd);
    Code:
       0: new           #1640               // class scalaz/Zipper
       3: dup
       4: getstatic     #1836               // Field scala/package$.MODULE$:Lscala/package$;
       7: invokevirtual #1840               // Method scala/package$.LazyList:()Lscala/collection/immutable/LazyList$;
      10: getstatic     #2326               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      13: invokevirtual #2329               // Method scala/collection/immutable/LazyList$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
      16: checkcast     #31                 // class scala/collection/immutable/LazyList
      19: aload_0
      20: getstatic     #2281               // Field scala/collection/immutable/LazyList$Deferrer$.MODULE$:Lscala/collection/immutable/LazyList$Deferrer$;
      23: getstatic     #2284               // Field scala/collection/immutable/LazyList$.MODULE$:Lscala/collection/immutable/LazyList$;
      26: aload_1
      27: invokedynamic #2338,  0           // InvokeDynamic #42:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      32: invokevirtual #2294               // Method scala/collection/immutable/LazyList$.toDeferrer:(Lscala/Function0;)Lscala/Function0;
      35: aload_1
      36: invokedynamic #2342,  0           // InvokeDynamic #43:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      41: invokevirtual #2301               // Method scala/collection/immutable/LazyList$Deferrer$.$hash$colon$colon$extension:(Lscala/Function0;Lscala/Function0;)Lscala/collection/immutable/LazyList;
      44: invokespecial #1676               // Method scalaz/Zipper."<init>":(Lscala/collection/immutable/LazyList;Ljava/lang/Object;Lscala/collection/immutable/LazyList;)V
      47: areturn

  public static final scalaz.Zipper $anonfun$traverse1Impl$18(java.lang.Object);
    Code:
       0: new           #1640               // class scalaz/Zipper
       3: dup
       4: getstatic     #1836               // Field scala/package$.MODULE$:Lscala/package$;
       7: invokevirtual #1840               // Method scala/package$.LazyList:()Lscala/collection/immutable/LazyList$;
      10: getstatic     #2326               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      13: invokevirtual #2329               // Method scala/collection/immutable/LazyList$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
      16: checkcast     #31                 // class scala/collection/immutable/LazyList
      19: aload_0
      20: getstatic     #1836               // Field scala/package$.MODULE$:Lscala/package$;
      23: invokevirtual #1840               // Method scala/package$.LazyList:()Lscala/collection/immutable/LazyList$;
      26: getstatic     #2326               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      29: invokevirtual #2329               // Method scala/collection/immutable/LazyList$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
      32: checkcast     #31                 // class scala/collection/immutable/LazyList
      35: invokespecial #1676               // Method scalaz/Zipper."<init>":(Lscala/collection/immutable/LazyList;Ljava/lang/Object;Lscala/collection/immutable/LazyList;)V
      38: areturn

  public scalaz.ZipperInstances$$anon$1(scalaz.ZipperInstances);
    Code:
       0: aload_0
       1: invokespecial #2347               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2351               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #2354               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #2357               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      16: aload_0
      17: invokestatic  #2360               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      20: aload_0
      21: invokestatic  #2363               // InterfaceMethod scalaz/Foldable1.$init$:(Lscalaz/Foldable1;)V
      24: aload_0
      25: invokestatic  #2366               // InterfaceMethod scalaz/Traverse1.$init$:(Lscalaz/Traverse1;)V
      28: aload_0
      29: invokestatic  #2369               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      32: aload_0
      33: invokestatic  #2372               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      36: aload_0
      37: invokestatic  #2375               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      40: aload_0
      41: invokestatic  #2378               // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      44: aload_0
      45: invokestatic  #2381               // InterfaceMethod scalaz/Comonad.$init$:(Lscalaz/Comonad;)V
      48: invokestatic  #2386               // Method scala/runtime/Statics.releaseFence:()V
      51: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2399,  0           // InvokeDynamic #44:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
