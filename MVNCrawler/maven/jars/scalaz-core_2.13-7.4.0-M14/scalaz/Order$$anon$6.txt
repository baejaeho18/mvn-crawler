Compiled from "Order.scala"
public final class scalaz.Order$$anon$6 implements scalaz.Monoid<scalaz.Order<A>> {
  private scalaz.syntax.MonoidSyntax<scalaz.Order<A>> monoidSyntax;

  private scalaz.syntax.SemigroupSyntax<scalaz.Order<A>> semigroupSyntax;

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #44                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #65                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #74                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #79                 // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #86                 // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #91                 // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #98                 // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #105                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scalaz.Order<A>>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #112                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #117                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<scalaz.Order<A>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.Order<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #124                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.Order<A>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.Order<A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #129                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #136                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #143                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.Order<A>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #150                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<scalaz.Order<A>> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #154                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scalaz.Order<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #154                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.Order<A>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #162                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.Order<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #162                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.Order<A> zero();
    Code:
       0: new           #25                 // class scalaz/Order$$anon$6$$anonfun$zero$2
       3: dup
       4: aload_0
       5: invokespecial #172                // Method scalaz/Order$$anon$6$$anonfun$zero$2."<init>":(Lscalaz/Order$$anon$6;)V
       8: areturn

  public scalaz.Order<A> append(scalaz.Order<A>, scala.Function0<scalaz.Order<A>>);
    Code:
       0: new           #23                 // class scalaz/Order$$anon$6$$anonfun$append$3
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #180                // Method scalaz/Order$$anon$6$$anonfun$append$3."<init>":(Lscalaz/Order$$anon$6;Lscalaz/Order;Lscala/Function0;)V
      10: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #184                // class scalaz/Order
       5: aload_2
       6: invokevirtual #186                // Method append:(Lscalaz/Order;Lscala/Function0;)Lscalaz/Order;
       9: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #189                // Method zero:()Lscalaz/Order;
       4: areturn

  public static final scalaz.Ordering scalaz$Order$$nestedInanon$6$$$anonfun$zero$1(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #199                // Field scalaz/Monoid$.MODULE$:Lscalaz/Monoid$;
       3: pop
       4: getstatic     #204                // Field scalaz/Ordering$.MODULE$:Lscalaz/Ordering$;
       7: invokevirtual #208                // Method scalaz/Ordering$.orderingInstance:()Lscalaz/Enum;
      10: checkcast     #7                  // class scalaz/Monoid
      13: invokeinterface #210,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      18: checkcast     #212                // class scalaz/Ordering
      21: areturn

  public static final scalaz.Ordering $anonfun$append$2(scala.Function0, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #221,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #184                // class scalaz/Order
       9: aload_1
      10: aload_2
      11: invokeinterface #224,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      16: areturn

  public static final scalaz.Ordering scalaz$Order$$nestedInanon$6$$$anonfun$append$1(java.lang.Object, java.lang.Object, scalaz.Order, scala.Function0);
    Code:
       0: getstatic     #232                // Field scalaz/Semigroup$.MODULE$:Lscalaz/Semigroup$;
       3: pop
       4: getstatic     #204                // Field scalaz/Ordering$.MODULE$:Lscalaz/Ordering$;
       7: invokevirtual #208                // Method scalaz/Ordering$.orderingInstance:()Lscalaz/Enum;
      10: checkcast     #29                 // class scalaz/Semigroup
      13: aload_2
      14: aload_0
      15: aload_1
      16: invokeinterface #224,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      21: aload_3
      22: aload_0
      23: aload_1
      24: invokedynamic #250,  0            // InvokeDynamic #0:apply:(Lscala/Function0;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Function0;
      29: invokeinterface #252,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      34: checkcast     #212                // class scalaz/Ordering
      37: areturn

  public scalaz.Order$$anon$6();
    Code:
       0: aload_0
       1: invokespecial #255                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #259                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
       8: aload_0
       9: invokestatic  #262                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      12: invokestatic  #267                // Method scala/runtime/Statics.releaseFence:()V
      15: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #279,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
