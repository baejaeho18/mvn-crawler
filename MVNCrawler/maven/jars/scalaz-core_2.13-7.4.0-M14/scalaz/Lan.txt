Compiled from "Kan.scala"
public interface scalaz.Lan<G, H, A> {
  public static <F, G, H, A> scalaz.Lan<F, H, A> composedAdjointToLan(H, scalaz.Adjunction<F, G>);
    Code:
       0: getstatic     #39                 // Field scalaz/Lan$.MODULE$:Lscalaz/Lan$;
       3: pop
       4: new           #18                 // class scalaz/Lan$$anon$11
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #43                 // Method scalaz/Lan$$anon$11."<init>":(Ljava/lang/Object;Lscalaz/Adjunction;)V
      13: areturn

  public static <F, G, A> G lanToAdjoint(scalaz.Lan<F, java.lang.Object, A>, scalaz.Adjunction<F, G>);
    Code:
       0: getstatic     #39                 // Field scalaz/Lan$.MODULE$:Lscalaz/Lan$;
       3: aload_0
       4: aload_1
       5: invokevirtual #51                 // Method scalaz/Lan$.lanToAdjoint:(Lscalaz/Lan;Lscalaz/Adjunction;)Ljava/lang/Object;
       8: areturn

  public static <F, G, A> scalaz.Lan<F, java.lang.Object, A> adjointToLan(G, scalaz.Adjunction<F, G>);
    Code:
       0: getstatic     #39                 // Field scalaz/Lan$.MODULE$:Lscalaz/Lan$;
       3: pop
       4: new           #16                 // class scalaz/Lan$$anon$10
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #56                 // Method scalaz/Lan$$anon$10."<init>":(Ljava/lang/Object;Lscalaz/Adjunction;)V
      13: areturn

  public static <G, H, A> scalaz.Lan<G, H, G> glan(H);
    Code:
       0: getstatic     #39                 // Field scalaz/Lan$.MODULE$:Lscalaz/Lan$;
       3: pop
       4: new           #24                 // class scalaz/Lan$$anon$9
       7: dup
       8: aload_0
       9: invokespecial #62                 // Method scalaz/Lan$$anon$9."<init>":(Ljava/lang/Object;)V
      12: areturn

  public static <F, G, H, B> F fromLan(H, scalaz.NaturalTransformation<?, F>);
    Code:
       0: getstatic     #39                 // Field scalaz/Lan$.MODULE$:Lscalaz/Lan$;
       3: aload_0
       4: aload_1
       5: invokevirtual #68                 // Method scalaz/Lan$.fromLan:(Ljava/lang/Object;Lscalaz/NaturalTransformation;)Ljava/lang/Object;
       8: areturn

  public static <G, H> scalaz.Applicative<?> lanApplicative(scalaz.Functor<G>, scalaz.Applicative<H>);
    Code:
       0: getstatic     #39                 // Field scalaz/Lan$.MODULE$:Lscalaz/Lan$;
       3: pop
       4: new           #22                 // class scalaz/Lan$$anon$7
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #77                 // Method scalaz/Lan$$anon$7."<init>":(Lscalaz/Functor;Lscalaz/Applicative;)V
      13: areturn

  public static <F, G> scalaz.Apply<?> lanApply(scalaz.Functor<F>, scalaz.Apply<G>);
    Code:
       0: getstatic     #39                 // Field scalaz/Lan$.MODULE$:Lscalaz/Lan$;
       3: pop
       4: new           #26                 // class scalaz/LanInstances$$anon$13
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: invokespecial #87                 // Method scalaz/LanInstances$$anon$13."<init>":(Lscalaz/LanInstances;Lscalaz/Functor;Lscalaz/Apply;)V
      14: areturn

  public static <F, G> scalaz.Functor<?> lanFunctor();
    Code:
       0: getstatic     #39                 // Field scalaz/Lan$.MODULE$:Lscalaz/Lan$;
       3: pop
       4: new           #28                 // class scalaz/LanInstances0$$anon$12
       7: dup
       8: aconst_null
       9: invokespecial #94                 // Method scalaz/LanInstances0$$anon$12."<init>":(Lscalaz/LanInstances0;)V
      12: areturn

  public abstract H v();

  public abstract A f(G);

  public static java.lang.Object toLan$(scalaz.Lan, scalaz.NaturalTransformation, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #109                // InterfaceMethod toLan:(Lscalaz/NaturalTransformation;Lscalaz/Functor;)Ljava/lang/Object;
       6: areturn

  public default <F$> F$ toLan(scalaz.NaturalTransformation<H, ?>, scalaz.Functor<F$>);
    Code:
       0: getstatic     #115                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: pop
       4: aload_2
       5: aload_1
       6: aload_0
       7: invokeinterface #117,  1          // InterfaceMethod v:()Ljava/lang/Object;
      12: invokeinterface #122,  2          // InterfaceMethod scalaz/NaturalTransformation.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      17: aload_0
      18: invokedynamic #139,  0            // InvokeDynamic #0:apply:(Lscalaz/Lan;)Lscala/Function1;
      23: invokeinterface #145,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      28: areturn

  public static java.lang.Object toAdjoint$(scalaz.Lan, scalaz.Functor, scalaz.Adjunction);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #153                // InterfaceMethod toAdjoint:(Lscalaz/Functor;Lscalaz/Adjunction;)Ljava/lang/Object;
       6: areturn

  public default <F$> H toAdjoint(scalaz.Functor<H>, scalaz.Adjunction<G, F$>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #117,  1          // InterfaceMethod v:()Ljava/lang/Object;
       7: aload_0
       8: aload_2
       9: invokedynamic #162,  0            // InvokeDynamic #1:apply:(Lscalaz/Lan;Lscalaz/Adjunction;)Lscala/Function1;
      14: invokeinterface #145,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      19: areturn

  public static scalaz.Lan map$(scalaz.Lan, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #168                // InterfaceMethod map:(Lscala/Function1;)Lscalaz/Lan;
       5: areturn

  public default <B> scalaz.Lan<G, H, B> map(scala.Function1<A, B>);
    Code:
       0: new           #20                 // class scalaz/Lan$$anon$6
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #173                // Method scalaz/Lan$$anon$6."<init>":(Lscalaz/Lan;Lscala/Function1;)V
       9: areturn

  public static java.lang.Object $anonfun$toLan$1(scalaz.Lan, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #175,  2          // InterfaceMethod f:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object $anonfun$toAdjoint$4(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$toAdjoint$5(scalaz.Lan, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #175,  2          // InterfaceMethod f:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object $anonfun$toAdjoint$3(scalaz.Lan, scalaz.Adjunction, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokedynamic #187,  0            // InvokeDynamic #2:apply:(Ljava/lang/Object;)Lscala/Function0;
       7: aload_0
       8: invokedynamic #191,  0            // InvokeDynamic #3:apply:(Lscalaz/Lan;)Lscala/Function1;
      13: invokevirtual #197                // Method scalaz/Adjunction.leftAdjunct:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      16: areturn

  public static void $init$(scalaz.Lan);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #211,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
