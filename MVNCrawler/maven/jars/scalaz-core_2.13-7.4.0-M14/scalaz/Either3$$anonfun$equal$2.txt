Compiled from "Either3.scala"
public final class scalaz.Either3$$anonfun$equal$2 implements scalaz.Equal<scalaz.Either3<A, B, C>> {
  private scalaz.syntax.EqualSyntax<scalaz.Either3<A, B, C>> equalSyntax;

  private final scalaz.Equal evidence$1$1;

  private final scalaz.Equal evidence$2$1;

  private final scalaz.Equal evidence$3$1;

  public <G> scalaz.Equal<G> contramap(scala.Function1<G, scalaz.Either3<A, B, C>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #31                 // InterfaceMethod scalaz/Equal.contramap$:(Lscalaz/Equal;Lscala/Function1;)Lscalaz/Equal;
       5: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #40                 // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.Either3<A, B, C>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #47                 // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.EqualSyntax<scalaz.Either3<A, B, C>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #51                 // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.Either3<A, B, C>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public final boolean equal(scalaz.Either3<A, B, C>, scalaz.Either3<A, B, C>);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: getfield      #61                 // Field evidence$1$1:Lscalaz/Equal;
       6: aload_0
       7: getfield      #63                 // Field evidence$2$1:Lscalaz/Equal;
      10: aload_0
      11: getfield      #65                 // Field evidence$3$1:Lscalaz/Equal;
      14: invokestatic  #69                 // Method scalaz/Either3$.scalaz$Either3$$$anonfun$equal$1:(Lscalaz/Either3;Lscalaz/Either3;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;)Z
      17: ireturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #73                 // class scalaz/Either3
       5: aload_2
       6: checkcast     #73                 // class scalaz/Either3
       9: invokevirtual #75                 // Method equal:(Lscalaz/Either3;Lscalaz/Either3;)Z
      12: ireturn

  public scalaz.Either3$$anonfun$equal$2(scalaz.Equal, scalaz.Equal, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field evidence$1$1:Lscalaz/Equal;
       5: aload_0
       6: aload_2
       7: putfield      #63                 // Field evidence$2$1:Lscalaz/Equal;
      10: aload_0
      11: aload_3
      12: putfield      #65                 // Field evidence$3$1:Lscalaz/Equal;
      15: aload_0
      16: invokespecial #81                 // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #85                 // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      23: invokestatic  #90                 // Method scala/runtime/Statics.releaseFence:()V
      26: return
}
