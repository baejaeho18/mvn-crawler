Compiled from "IStream.scala"
public final class scalaz.IStream$ {
  public static final scalaz.IStream$ MODULE$;

  private static final scalaz.IStream$Nil<scala.runtime.Nothing$> _empty;

  private static final scalaz.IsCovariant<scalaz.IStream> iStreamIsCovariant;

  private static final scalaz.Value<scalaz.IStream$Nil<scala.runtime.Nothing$>> __empty;

  private static final scalaz.MonadPlus<scalaz.IStream> instances;

  public static {};
    Code:
       0: new           #2                  // class scalaz/IStream$
       3: dup
       4: invokespecial #72                 // Method "<init>":()V
       7: putstatic     #74                 // Field MODULE$:Lscalaz/IStream$;
      10: new           #37                 // class scalaz/IStream$Nil
      13: dup
      14: invokespecial #75                 // Method scalaz/IStream$Nil."<init>":()V
      17: putstatic     #77                 // Field _empty:Lscalaz/IStream$Nil;
      20: getstatic     #82                 // Field scalaz/IsCovariant$.MODULE$:Lscalaz/IsCovariant$;
      23: pop
      24: new           #43                 // class scalaz/IsCovariant$$anon$3
      27: dup
      28: invokespecial #83                 // Method scalaz/IsCovariant$$anon$3."<init>":()V
      31: putstatic     #85                 // Field iStreamIsCovariant:Lscalaz/IsCovariant;
      34: new           #87                 // class scalaz/Value
      37: dup
      38: getstatic     #77                 // Field _empty:Lscalaz/IStream$Nil;
      41: invokespecial #90                 // Method scalaz/Value."<init>":(Ljava/lang/Object;)V
      44: putstatic     #92                 // Field __empty:Lscalaz/Value;
      47: new           #25                 // class scalaz/IStream$$anon$1
      50: dup
      51: invokespecial #93                 // Method scalaz/IStream$$anon$1."<init>":()V
      54: putstatic     #95                 // Field instances:Lscalaz/MonadPlus;
      57: return

  public <A> scalaz.IStream<A> empty();
    Code:
       0: getstatic     #77                 // Field _empty:Lscalaz/IStream$Nil;
       3: areturn

  public <A> scalaz.IStream<A> fromLazyList(scala.collection.immutable.LazyList<A>);
    Code:
       0: aload_1
       1: ifnull        61
       4: getstatic     #108                // Field scala/package$.MODULE$:Lscala/package$;
       7: invokevirtual #112                // Method scala/package$.LazyList:()Lscala/collection/immutable/LazyList$;
      10: aload_1
      11: invokevirtual #118                // Method scala/collection/immutable/LazyList$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
      14: astore_2
      15: getstatic     #121                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
      18: aload_2
      19: invokevirtual #125                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
      22: ifne          61
      25: new           #12                 // class scala/collection/SeqFactory$UnapplySeqWrapper
      28: getstatic     #121                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
      31: aload_2
      32: invokevirtual #128                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
      35: invokespecial #131                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
      38: getstatic     #121                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
      41: getstatic     #121                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
      44: aload_2
      45: invokevirtual #128                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
      48: iconst_0
      49: invokevirtual #135                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
      52: iconst_0
      53: if_icmpne     61
      56: aload_0
      57: invokevirtual #137                // Method empty:()Lscalaz/IStream;
      60: areturn
      61: aload_1
      62: ifnull        163
      65: getstatic     #140                // Field scala/package$$hash$colon$colon$.MODULE$:Lscala/package$$hash$colon$colon$;
      68: aload_1
      69: invokevirtual #144                // Method scala/package$$hash$colon$colon$.unapply:(Lscala/collection/immutable/LazyList;)Lscala/Option;
      72: astore_3
      73: aload_3
      74: invokevirtual #150                // Method scala/Option.isEmpty:()Z
      77: ifne          163
      80: aload_3
      81: invokevirtual #154                // Method scala/Option.get:()Ljava/lang/Object;
      84: checkcast     #156                // class scala/Tuple2
      87: invokevirtual #159                // Method scala/Tuple2._1:()Ljava/lang/Object;
      90: astore        4
      92: aload_3
      93: invokevirtual #154                // Method scala/Option.get:()Ljava/lang/Object;
      96: checkcast     #156                // class scala/Tuple2
      99: invokevirtual #162                // Method scala/Tuple2._2:()Ljava/lang/Object;
     102: checkcast     #164                // class scala/collection/immutable/LazyList
     105: astore        5
     107: getstatic     #167                // Field scalaz/IStream$Lazy$.MODULE$:Lscalaz/IStream$Lazy$;
     110: pop
     111: aload         4
     113: invokedynamic #185,  0            // InvokeDynamic #0:apply:(Ljava/lang/Object;)Lscala/Function0;
     118: aload         5
     120: invokedynamic #194,  0            // InvokeDynamic #1:apply:(Lscala/collection/immutable/LazyList;)Lscala/Function0;
     125: astore        7
     127: astore        6
     129: new           #29                 // class scalaz/IStream$Cons
     132: dup
     133: getstatic     #199                // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
     136: pop
     137: new           #201                // class scalaz/Need
     140: dup
     141: aload         6
     143: invokespecial #204                // Method scalaz/Need."<init>":(Lscala/Function0;)V
     146: getstatic     #199                // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
     149: pop
     150: new           #201                // class scalaz/Need
     153: dup
     154: aload         7
     156: invokespecial #204                // Method scalaz/Need."<init>":(Lscala/Function0;)V
     159: invokespecial #207                // Method scalaz/IStream$Cons."<init>":(Lscalaz/Name;Lscalaz/Name;)V
     162: areturn
     163: new           #209                // class scala/MatchError
     166: dup
     167: aload_1
     168: invokespecial #210                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     171: athrow

  public <A> scalaz.IStream<A> fromMaybe(scalaz.Maybe<A>);
    Code:
       0: aload_1
       1: instanceof    #50                 // class scalaz/Maybe$Just
       4: ifeq          23
       7: aload_1
       8: checkcast     #50                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: astore_2
      15: getstatic     #225                // Field scalaz/IStream$Strict$.MODULE$:Lscalaz/IStream$Strict$;
      18: aload_2
      19: invokevirtual #228                // Method scalaz/IStream$Strict$.apply:(Ljava/lang/Object;)Lscalaz/IStream;
      22: areturn
      23: aload_1
      24: instanceof    #45                 // class scalaz/Maybe$Empty
      27: ifeq          35
      30: aload_0
      31: invokevirtual #137                // Method empty:()Lscalaz/IStream;
      34: areturn
      35: new           #209                // class scala/MatchError
      38: dup
      39: aload_1
      40: invokespecial #210                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      43: athrow

  public <F, A> scalaz.IStream<A> fromFoldable(F, scalaz.Foldable<F>);
    Code:
       0: getstatic     #240                // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: pop
       4: aload_2
       5: aload_1
       6: invokedynamic #247,  0            // InvokeDynamic #2:apply:()Lscala/Function0;
      11: invokedynamic #258,  0            // InvokeDynamic #3:apply:()Lscala/Function2;
      16: invokeinterface #264,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      21: checkcast     #31                 // class scalaz/IStream
      24: areturn

  public scalaz.IsCovariant<scalaz.IStream> iStreamIsCovariant();
    Code:
       0: getstatic     #85                 // Field iStreamIsCovariant:Lscalaz/IsCovariant;
       3: areturn

  public final <A> scalaz.Name<scalaz.IStream<A>> scalaz$IStream$$nil();
    Code:
       0: getstatic     #92                 // Field __empty:Lscalaz/Value;
       3: areturn

  public scalaz.MonadPlus<scalaz.IStream> instances();
    Code:
       0: getstatic     #95                 // Field instances:Lscalaz/MonadPlus;
       3: areturn

  public <A> scalaz.Equal<scalaz.IStream<A>> equal(scalaz.Equal<A>);
    Code:
       0: getstatic     #281                // Field scalaz/Equal$.MODULE$:Lscalaz/Equal$;
       3: pop
       4: getstatic     #286                // Field scalaz/Name$.MODULE$:Lscalaz/Name$;
       7: pop
       8: new           #53                 // class scalaz/Name$$anonfun$nameEqual$2
      11: dup
      12: aload_1
      13: invokespecial #289                // Method scalaz/Name$$anonfun$nameEqual$2."<init>":(Lscalaz/Equal;)V
      16: astore_3
      17: aload_3
      18: aconst_null
      19: astore_3
      20: astore_2
      21: new           #27                 // class scalaz/IStream$$anonfun$equal$2
      24: dup
      25: aload_2
      26: invokespecial #290                // Method scalaz/IStream$$anonfun$equal$2."<init>":(Lscalaz/Equal;)V
      29: areturn

  public static final java.lang.Object $anonfun$fromLazyList$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.IStream $anonfun$fromLazyList$2(scala.collection.immutable.LazyList);
    Code:
       0: getstatic     #74                 // Field MODULE$:Lscalaz/IStream$;
       3: aload_0
       4: invokevirtual #297                // Method fromLazyList:(Lscala/collection/immutable/LazyList;)Lscalaz/IStream;
       7: areturn

  public static final scalaz.IStream $anonfun$fromFoldable$1();
    Code:
       0: getstatic     #74                 // Field MODULE$:Lscalaz/IStream$;
       3: invokevirtual #137                // Method empty:()Lscalaz/IStream;
       6: areturn

  public static final java.lang.Object $anonfun$fromFoldable$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.IStream $anonfun$fromFoldable$2(java.lang.Object, scala.Function0);
    Code:
       0: getstatic     #167                // Field scalaz/IStream$Lazy$.MODULE$:Lscalaz/IStream$Lazy$;
       3: pop
       4: aload_0
       5: invokedynamic #303,  0            // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
      10: astore_2
      11: new           #29                 // class scalaz/IStream$Cons
      14: dup
      15: getstatic     #199                // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
      18: pop
      19: new           #201                // class scalaz/Need
      22: dup
      23: aload_2
      24: invokespecial #204                // Method scalaz/Need."<init>":(Lscala/Function0;)V
      27: getstatic     #199                // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
      30: pop
      31: new           #201                // class scalaz/Need
      34: dup
      35: aload_1
      36: invokespecial #204                // Method scalaz/Need."<init>":(Lscala/Function0;)V
      39: invokespecial #207                // Method scalaz/IStream$Cons."<init>":(Lscalaz/Name;Lscalaz/Name;)V
      42: areturn

  private final boolean loop$5(scalaz.IStream, scalaz.IStream, scalaz.Equal);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpeq     112
       5: aload_1
       6: instanceof    #29                 // class scalaz/IStream$Cons
       9: ifeq          97
      12: aload_1
      13: checkcast     #29                 // class scalaz/IStream$Cons
      16: astore        4
      18: aload         4
      20: invokevirtual #311                // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      23: astore        5
      25: aload         4
      27: invokevirtual #314                // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      30: astore        6
      32: aload_2
      33: instanceof    #29                 // class scalaz/IStream$Cons
      36: ifeq          93
      39: aload_2
      40: checkcast     #29                 // class scalaz/IStream$Cons
      43: astore        7
      45: aload         7
      47: invokevirtual #311                // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      50: astore        8
      52: aload         7
      54: invokevirtual #314                // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      57: astore        9
      59: aload_3
      60: aload         5
      62: aload         8
      64: invokeinterface #319,  3          // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      69: ifeq          93
      72: aload         6
      74: invokevirtual #324                // Method scalaz/Name.value:()Ljava/lang/Object;
      77: checkcast     #31                 // class scalaz/IStream
      80: aload         9
      82: invokevirtual #324                // Method scalaz/Name.value:()Ljava/lang/Object;
      85: checkcast     #31                 // class scalaz/IStream
      88: astore_2
      89: astore_1
      90: goto          0
      93: iconst_0
      94: goto          109
      97: aload_2
      98: instanceof    #29                 // class scalaz/IStream$Cons
     101: ifeq          108
     104: iconst_0
     105: goto          109
     108: iconst_1
     109: ifeq          114
     112: iconst_1
     113: ireturn
     114: iconst_0
     115: ireturn

  public final boolean scalaz$IStream$$$anonfun$equal$1(scalaz.IStream, scalaz.IStream, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #333                // Method loop$5:(Lscalaz/IStream;Lscalaz/IStream;Lscalaz/Equal;)Z
       7: ireturn

  private scalaz.IStream$();
    Code:
       0: aload_0
       1: invokespecial #334                // Method java/lang/Object."<init>":()V
       4: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #346,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
