Compiled from "OneAnd.scala"
public interface scalaz.OneAndFoldable<F> extends scalaz.Foldable1<?> {
  public abstract scalaz.Foldable<F> F();

  public static scala.Option findLeft$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #42                 // InterfaceMethod findLeft:(Lscalaz/OneAnd;Lscala/Function1;)Lscala/Option;
       6: areturn

  public default <A> scala.Option<A> findLeft(scalaz.OneAnd<F, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: invokeinterface #58,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #64                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ifeq          28
      16: new           #66                 // class scala/Some
      19: dup
      20: aload_1
      21: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      24: invokespecial #70                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      27: areturn
      28: aload_0
      29: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
      34: aload_1
      35: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      38: aload_2
      39: invokeinterface #80,  3           // InterfaceMethod scalaz/Foldable.findLeft:(Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
      44: areturn

  public static scala.Option findRight$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #85                 // InterfaceMethod findRight:(Lscalaz/OneAnd;Lscala/Function1;)Lscala/Option;
       6: areturn

  public default <A> scala.Option<A> findRight(scalaz.OneAnd<F, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: aload_2
      11: invokeinterface #87,  3           // InterfaceMethod scalaz/Foldable.findRight:(Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
      16: astore_3
      17: aload_3
      18: instanceof    #66                 // class scala/Some
      21: ifeq          29
      24: aload_3
      25: checkcast     #66                 // class scala/Some
      28: areturn
      29: getstatic     #93                 // Field scala/None$.MODULE$:Lscala/None$;
      32: aload_3
      33: invokevirtual #96                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      36: ifeq          71
      39: aload_2
      40: aload_1
      41: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      44: invokeinterface #58,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      49: invokestatic  #64                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      52: ifeq          67
      55: new           #66                 // class scala/Some
      58: dup
      59: aload_1
      60: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      63: invokespecial #70                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      66: areturn
      67: getstatic     #93                 // Field scala/None$.MODULE$:Lscala/None$;
      70: areturn
      71: new           #98                 // class scala/MatchError
      74: dup
      75: aload_3
      76: invokespecial #99                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      79: athrow

  public static java.lang.Object foldMap1$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #108                // InterfaceMethod foldMap1:(Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldMap1(scalaz.OneAnd<F, A>, scala.Function1<A, B>, scalaz.Semigroup<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #130,  0            // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
       8: getstatic     #135                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
      11: pop
      12: new           #30                 // class scalaz/std/OptionInstances$$anon$5
      15: dup
      16: aconst_null
      17: aload_3
      18: invokespecial #138                // Method scalaz/std/OptionInstances$$anon$5."<init>":(Lscalaz/std/OptionInstances;Lscalaz/Semigroup;)V
      21: invokeinterface #142,  4          // InterfaceMethod foldMap:(Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      26: checkcast     #101                // class scala/Option
      29: aload_2
      30: aload_1
      31: invokedynamic #151,  0            // InvokeDynamic #1:apply:(Lscala/Function1;Lscalaz/OneAnd;)Lscala/Function0;
      36: invokevirtual #155                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      39: areturn

  public static java.lang.Object foldMapRight1$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #162                // InterfaceMethod foldMapRight1:(Lscalaz/OneAnd;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldMapRight1(scalaz.OneAnd<F, A>, scala.Function1<A, B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_0
       1: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: invokedynamic #173,  0            // InvokeDynamic #2:apply:()Lscala/Function0;
      15: aload_3
      16: aload_2
      17: invokedynamic #185,  0            // InvokeDynamic #3:apply:(Lscala/Function2;Lscala/Function1;)Lscala/Function2;
      22: invokeinterface #189,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      27: checkcast     #101                // class scala/Option
      30: aload_3
      31: aload_1
      32: invokedynamic #197,  0            // InvokeDynamic #4:apply:(Lscala/Function2;Lscalaz/OneAnd;)Lscala/Function1;
      37: invokevirtual #201                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      40: aload_2
      41: aload_1
      42: invokedynamic #206,  0            // InvokeDynamic #5:apply:(Lscala/Function1;Lscalaz/OneAnd;)Lscala/Function0;
      47: invokevirtual #155                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      50: areturn

  public static java.lang.Object foldMapLeft1$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #210                // InterfaceMethod foldMapLeft1:(Lscalaz/OneAnd;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldMapLeft1(scalaz.OneAnd<F, A>, scala.Function1<A, B>, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: aload_2
      11: aload_1
      12: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      15: invokeinterface #58,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: aload_3
      21: invokeinterface #215,  4          // InterfaceMethod scalaz/Foldable.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      26: areturn

  public static java.lang.Object foldMap$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #142                // InterfaceMethod foldMap:(Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldMap(scalaz.OneAnd<F, A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_3
       1: aload_2
       2: aload_1
       3: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       6: invokeinterface #58,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: aload_0
      12: aload_1
      13: aload_2
      14: aload_3
      15: invokedynamic #227,  0            // InvokeDynamic #6:apply:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Monoid;)Lscala/Function0;
      20: invokeinterface #233,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      25: areturn

  public static java.lang.Object foldRight$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #238                // InterfaceMethod foldRight:(Lscalaz/OneAnd;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldRight(scalaz.OneAnd<F, A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: aload_0
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokedynamic #247,  0            // InvokeDynamic #7:apply:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      14: invokeinterface #251,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public static java.lang.Object foldLeft$(scalaz.OneAndFoldable, scalaz.OneAnd, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #256                // InterfaceMethod foldLeft:(Lscalaz/OneAnd;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldLeft(scalaz.OneAnd<F, A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: aload_3
      11: aload_2
      12: aload_1
      13: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      16: invokeinterface #251,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: aload_3
      22: invokeinterface #215,  4          // InterfaceMethod scalaz/Foldable.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      27: areturn

  public static scalaz.IndexedStateT traverseS_$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #264                // InterfaceMethod traverseS_:(Lscalaz/OneAnd;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public default <S, A, B> scalaz.IndexedStateT<S, S, java.lang.Object, scala.runtime.BoxedUnit> traverseS_(scalaz.OneAnd<F, A>, scala.Function1<A, scalaz.IndexedStateT<S, S, ?, B>>);
    Code:
       0: getstatic     #270                // Field scalaz/State$.MODULE$:Lscalaz/State$;
       3: pop
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokedynamic #280,  0            // InvokeDynamic #8:apply:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Lscala/Function1;)Lscala/Function1;
      12: astore_3
      13: getstatic     #285                // Field scalaz/StateT$.MODULE$:Lscalaz/StateT$;
      16: pop
      17: getstatic     #290                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      20: pop
      21: new           #25                 // class scalaz/IndexedStateT$Wrap
      24: dup
      25: aload_3
      26: invokespecial #293                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      29: areturn

  public static int length$(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #300                // InterfaceMethod length:(Lscalaz/OneAnd;)I
       5: ireturn

  public default <A> int length(scalaz.OneAnd<F, A>);
    Code:
       0: iconst_1
       1: aload_0
       2: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       7: aload_1
       8: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      11: invokeinterface #304,  2          // InterfaceMethod scalaz/Foldable.length:(Ljava/lang/Object;)I
      16: iadd
      17: ireturn

  public static scala.Option index$(scalaz.OneAndFoldable, scalaz.OneAnd, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #311                // InterfaceMethod index:(Lscalaz/OneAnd;I)Lscala/Option;
       6: areturn

  public default <A> scala.Option<A> index(scalaz.OneAnd<F, A>, int);
    Code:
       0: iload_2
       1: iconst_0
       2: if_icmpne     17
       5: new           #66                 // class scala/Some
       8: dup
       9: aload_1
      10: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      13: invokespecial #70                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      16: areturn
      17: aload_0
      18: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
      23: aload_1
      24: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      27: iload_2
      28: iconst_1
      29: isub
      30: invokeinterface #316,  3          // InterfaceMethod scalaz/Foldable.index:(Ljava/lang/Object;I)Lscala/Option;
      35: areturn

  public static scala.collection.immutable.Vector toVector$(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #322                // InterfaceMethod toVector:(Lscalaz/OneAnd;)Lscala/collection/immutable/Vector;
       5: areturn

  public default <A> scala.collection.immutable.Vector<A> toVector(scalaz.OneAnd<F, A>);
    Code:
       0: aload_1
       1: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
      11: aload_1
      12: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      15: invokeinterface #326,  2          // InterfaceMethod scalaz/Foldable.toVector:(Ljava/lang/Object;)Lscala/collection/immutable/Vector;
      20: aload_2
      21: invokevirtual #331                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #328                // class scala/collection/immutable/Vector
      27: areturn

  public static scala.collection.immutable.List toList$(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #337                // InterfaceMethod toList:(Lscalaz/OneAnd;)Lscala/collection/immutable/List;
       5: areturn

  public default <A> scala.collection.immutable.List<A> toList(scalaz.OneAnd<F, A>);
    Code:
       0: aload_1
       1: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
      11: aload_1
      12: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      15: invokeinterface #341,  2          // InterfaceMethod scalaz/Foldable.toList:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      20: aload_2
      21: invokevirtual #346                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      24: areturn

  public static scalaz.IList toIList$(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #352                // InterfaceMethod toIList:(Lscalaz/OneAnd;)Lscalaz/IList;
       5: areturn

  public default <A> scalaz.IList<A> toIList(scalaz.OneAnd<F, A>);
    Code:
       0: aload_1
       1: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
      11: aload_1
      12: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      15: invokeinterface #356,  2          // InterfaceMethod scalaz/Foldable.toIList:(Ljava/lang/Object;)Lscalaz/IList;
      20: dup
      21: ifnonnull     26
      24: aconst_null
      25: athrow
      26: astore_3
      27: new           #358                // class scalaz/ICons
      30: dup
      31: aload_2
      32: aload_3
      33: invokespecial #361                // Method scalaz/ICons."<init>":(Ljava/lang/Object;Lscalaz/IList;)V
      36: areturn

  public static scala.collection.immutable.Set toSet$(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #371                // InterfaceMethod toSet:(Lscalaz/OneAnd;)Lscala/collection/immutable/Set;
       5: areturn

  public default <A> scala.collection.immutable.Set<A> toSet(scalaz.OneAnd<F, A>);
    Code:
       0: aload_0
       1: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: invokeinterface #375,  2          // InterfaceMethod scalaz/Foldable.toSet:(Ljava/lang/Object;)Lscala/collection/immutable/Set;
      15: aload_1
      16: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      19: invokeinterface #381,  2          // InterfaceMethod scala/collection/immutable/Set.$plus:(Ljava/lang/Object;)Lscala/collection/immutable/SetOps;
      24: checkcast     #377                // class scala/collection/immutable/Set
      27: areturn

  public static scala.collection.immutable.LazyList toLazyList$(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #387                // InterfaceMethod toLazyList:(Lscalaz/OneAnd;)Lscala/collection/immutable/LazyList;
       5: areturn

  public default <A> scala.collection.immutable.LazyList<A> toLazyList(scalaz.OneAnd<F, A>);
    Code:
       0: getstatic     #391                // Field scala/collection/immutable/LazyList$Deferrer$.MODULE$:Lscala/collection/immutable/LazyList$Deferrer$;
       3: getstatic     #396                // Field scala/collection/immutable/LazyList$.MODULE$:Lscala/collection/immutable/LazyList$;
       6: aload_0
       7: aload_1
       8: invokedynamic #405,  0            // InvokeDynamic #9:apply:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;)Lscala/Function0;
      13: invokevirtual #409                // Method scala/collection/immutable/LazyList$.toDeferrer:(Lscala/Function0;)Lscala/Function0;
      16: aload_1
      17: invokedynamic #417,  0            // InvokeDynamic #10:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      22: invokevirtual #421                // Method scala/collection/immutable/LazyList$Deferrer$.$hash$colon$colon$extension:(Lscala/Function0;Lscala/Function0;)Lscala/collection/immutable/LazyList;
      25: areturn

  public static scalaz.EphemeralStream toEphemeralStream$(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #427                // InterfaceMethod toEphemeralStream:(Lscalaz/OneAnd;)Lscalaz/EphemeralStream;
       5: areturn

  public default <A> scalaz.EphemeralStream<A> toEphemeralStream(scalaz.OneAnd<F, A>);
    Code:
       0: getstatic     #433                // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
       3: pop
       4: aload_1
       5: invokedynamic #438,  0            // InvokeDynamic #11:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      10: aload_0
      11: aload_1
      12: invokedynamic #445,  0            // InvokeDynamic #12:apply:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;)Lscala/Function0;
      17: astore_3
      18: astore_2
      19: new           #23                 // class scalaz/EphemeralStream$$anon$5
      22: dup
      23: aload_2
      24: aload_3
      25: invokespecial #448                // Method scalaz/EphemeralStream$$anon$5."<init>":(Lscala/Function0;Lscala/Function0;)V
      28: areturn

  public static boolean all$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #456                // InterfaceMethod all:(Lscalaz/OneAnd;Lscala/Function1;)Z
       6: ireturn

  public default <A> boolean all(scalaz.OneAnd<F, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: invokeinterface #58,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #64                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ifeq          37
      16: aload_0
      17: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
      22: aload_1
      23: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      26: aload_2
      27: invokeinterface #460,  3          // InterfaceMethod scalaz/Foldable.all:(Ljava/lang/Object;Lscala/Function1;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn

  public static boolean any$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #464                // InterfaceMethod any:(Lscalaz/OneAnd;Lscala/Function1;)Z
       6: ireturn

  public default <A> boolean any(scalaz.OneAnd<F, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: invokeinterface #58,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #64                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ifne          35
      16: aload_0
      17: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
      22: aload_1
      23: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      26: aload_2
      27: invokeinterface #466,  3          // InterfaceMethod scalaz/Foldable.any:(Ljava/lang/Object;Lscala/Function1;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn

  public static scala.Option $anonfun$foldMap1$1(scala.Function1, java.lang.Object);
    Code:
       0: getstatic     #135                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: pop
       4: aload_0
       5: aload_1
       6: invokeinterface #58,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_2
      12: new           #66                 // class scala/Some
      15: dup
      16: aload_2
      17: invokespecial #70                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      20: areturn

  public static java.lang.Object $anonfun$foldMap1$2(scala.Function1, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: invokeinterface #58,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static scala.Option $anonfun$foldMapRight1$1();
    Code:
       0: getstatic     #135                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: invokevirtual #473                // Method scalaz/std/option$.none:()Lscala/Option;
       6: areturn

  public static java.lang.Object $anonfun$foldMapRight1$4(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$foldMapRight1$3(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #486,  0            // InvokeDynamic #13:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #251,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public static scala.Option $anonfun$foldMapRight1$5(scala.Function1, java.lang.Object);
    Code:
       0: getstatic     #135                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: pop
       4: aload_0
       5: aload_1
       6: invokeinterface #58,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_2
      12: new           #66                 // class scala/Some
      15: dup
      16: aload_2
      17: invokespecial #70                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      20: areturn

  public static scala.Option $anonfun$foldMapRight1$2(scala.Function2, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: aload_3
       1: invokeinterface #493,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #101                // class scala/Option
       9: aload_0
      10: aload_2
      11: invokedynamic #499,  0            // InvokeDynamic #14:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      16: invokevirtual #201                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      19: aload_1
      20: aload_2
      21: invokedynamic #505,  0            // InvokeDynamic #15:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      26: invokevirtual #509                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
      29: areturn

  public static java.lang.Object $anonfun$foldMapRight1$7(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$foldMapRight1$6(scala.Function2, scalaz.OneAnd, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: aload_2
       6: invokedynamic #517,  0            // InvokeDynamic #16:apply:(Ljava/lang/Object;)Lscala/Function0;
      11: invokeinterface #251,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public static java.lang.Object $anonfun$foldMapRight1$8(scala.Function1, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: invokeinterface #58,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static java.lang.Object $anonfun$foldMap$1(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: aload_2
      11: aload_3
      12: invokeinterface #523,  4          // InterfaceMethod scalaz/Foldable.foldMap:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      17: areturn

  public static java.lang.Object $anonfun$foldRight$1(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: aload_2
      11: aload_3
      12: invokeinterface #189,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      17: areturn

  public static scala.Tuple2 $anonfun$traverseS_$1(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: aload_2
      11: invokeinterface #532,  3          // InterfaceMethod scalaz/Foldable.traverseS_:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
      16: aload_2
      17: aload_1
      18: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      21: invokeinterface #58,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #27                 // class scalaz/IndexedStateT
      29: aload_3
      30: getstatic     #537                // Field scalaz/Bind$.MODULE$:Lscalaz/Bind$;
      33: pop
      34: getstatic     #542                // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      37: invokevirtual #546                // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      40: checkcast     #548                // class scalaz/Bind
      43: invokevirtual #551                // Method scalaz/IndexedStateT.apply:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      46: checkcast     #553                // class scala/Tuple2
      49: invokevirtual #556                // Method scala/Tuple2._1:()Ljava/lang/Object;
      52: getstatic     #537                // Field scalaz/Bind$.MODULE$:Lscalaz/Bind$;
      55: pop
      56: getstatic     #542                // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      59: invokevirtual #546                // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      62: checkcast     #548                // class scalaz/Bind
      65: invokevirtual #551                // Method scalaz/IndexedStateT.apply:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      68: checkcast     #553                // class scala/Tuple2
      71: areturn

  public static scala.collection.immutable.LazyList $anonfun$toLazyList$1(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: invokeinterface #560,  2          // InterfaceMethod scalaz/Foldable.toLazyList:(Ljava/lang/Object;)Lscala/collection/immutable/LazyList;
      15: areturn

  public static java.lang.Object $anonfun$toLazyList$2(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       4: areturn

  public static java.lang.Object $anonfun$toEphemeralStream$1(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       4: areturn

  public static scalaz.EphemeralStream $anonfun$toEphemeralStream$2(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokeinterface #72,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #75                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: invokeinterface #564,  2          // InterfaceMethod scalaz/Foldable.toEphemeralStream:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
      15: areturn

  public static void $init$(scalaz.OneAndFoldable);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #578,  0            // InvokeDynamic #17:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
