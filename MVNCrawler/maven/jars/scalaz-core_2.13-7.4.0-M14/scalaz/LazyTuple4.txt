Compiled from "LazyTuple.scala"
public abstract class scalaz.LazyTuple4<A, B, C, D> {
  public static <A, B, C, D> scalaz.LazyTuple4<A, B, C, D> apply(scala.Function0<A>, scala.Function0<B>, scala.Function0<C>, scala.Function0<D>);
    Code:
       0: getstatic     #38                 // Field scalaz/LazyTuple4$.MODULE$:Lscalaz/LazyTuple4$;
       3: pop
       4: new           #11                 // class scalaz/LazyTuple4$$anon$3
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokespecial #42                 // Method scalaz/LazyTuple4$$anon$3."<init>":(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)V
      15: areturn

  public static <A1, A2, A3> scalaz.Monad<?> lazyTuple4Monad(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>);
    Code:
       0: getstatic     #38                 // Field scalaz/LazyTuple4$.MODULE$:Lscalaz/LazyTuple4$;
       3: pop
       4: new           #19                 // class scalaz/LazyTuple4Instances$$anon$28
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokespecial #52                 // Method scalaz/LazyTuple4Instances$$anon$28."<init>":(Lscalaz/LazyTuple4Instances;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)V
      15: areturn

  public static <A1, A2, A3, A4> scalaz.Monoid<scalaz.LazyTuple4<A1, A2, A3, A4>> lazyTuple4Monoid(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>);
    Code:
       0: getstatic     #38                 // Field scalaz/LazyTuple4$.MODULE$:Lscalaz/LazyTuple4$;
       3: pop
       4: new           #17                 // class scalaz/LazyTuple4Instances$$anon$27
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: aload_2
      12: aload_3
      13: invokespecial #60                 // Method scalaz/LazyTuple4Instances$$anon$27."<init>":(Lscalaz/LazyTuple4Instances;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)V
      16: areturn

  public static <A1, A2, A3, A4> scalaz.Order<scalaz.LazyTuple4<A1, A2, A3, A4>> lazyTuple4Order(scalaz.Order<A1>, scalaz.Order<A2>, scalaz.Order<A3>, scalaz.Order<A4>);
    Code:
       0: getstatic     #38                 // Field scalaz/LazyTuple4$.MODULE$:Lscalaz/LazyTuple4$;
       3: pop
       4: new           #15                 // class scalaz/LazyTuple4Instances$$anon$26
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: aload_2
      12: aload_3
      13: invokespecial #66                 // Method scalaz/LazyTuple4Instances$$anon$26."<init>":(Lscalaz/LazyTuple4Instances;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;)V
      16: areturn

  public static <A1, A2, A3, A4> scalaz.Show<scalaz.LazyTuple4<A1, A2, A3, A4>> lazyTuple4Show(scalaz.Show<A1>, scalaz.Show<A2>, scalaz.Show<A3>, scalaz.Show<A4>);
    Code:
       0: getstatic     #38                 // Field scalaz/LazyTuple4$.MODULE$:Lscalaz/LazyTuple4$;
       3: pop
       4: new           #13                 // class scalaz/LazyTuple4Instances$$anon$25
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: aload_2
      12: aload_3
      13: invokespecial #73                 // Method scalaz/LazyTuple4Instances$$anon$25."<init>":(Lscalaz/LazyTuple4Instances;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;)V
      16: areturn

  public static <A1, A2, A3, A4> scalaz.Equal<scalaz.LazyTuple4<A1, A2, A3, A4>> lazyTuple4Equal(scalaz.Equal<A1>, scalaz.Equal<A2>, scalaz.Equal<A3>, scalaz.Equal<A4>);
    Code:
       0: getstatic     #38                 // Field scalaz/LazyTuple4$.MODULE$:Lscalaz/LazyTuple4$;
       3: pop
       4: new           #25                 // class scalaz/LazyTuple4Instances0$$anon$24
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: aload_2
      12: aload_3
      13: invokespecial #80                 // Method scalaz/LazyTuple4Instances0$$anon$24."<init>":(Lscalaz/LazyTuple4Instances0;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;)V
      16: areturn

  public static <A1, A2, A3> scalaz.Functor<?> lazyTuple4Functor();
    Code:
       0: getstatic     #38                 // Field scalaz/LazyTuple4$.MODULE$:Lscalaz/LazyTuple4$;
       3: pop
       4: new           #23                 // class scalaz/LazyTuple4Instances0$$anon$23
       7: dup
       8: aconst_null
       9: invokespecial #87                 // Method scalaz/LazyTuple4Instances0$$anon$23."<init>":(Lscalaz/LazyTuple4Instances0;)V
      12: areturn

  public static <A1, A2, A3, A4> scalaz.Semigroup<scalaz.LazyTuple4<A1, A2, A3, A4>> lazyTuple4Semigroup(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>);
    Code:
       0: getstatic     #38                 // Field scalaz/LazyTuple4$.MODULE$:Lscalaz/LazyTuple4$;
       3: pop
       4: new           #21                 // class scalaz/LazyTuple4Instances0$$anon$22
       7: dup
       8: aconst_null
       9: aload_0
      10: aload_1
      11: aload_2
      12: aload_3
      13: invokespecial #93                 // Method scalaz/LazyTuple4Instances0$$anon$22."<init>":(Lscalaz/LazyTuple4Instances0;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)V
      16: areturn

  public abstract A _1();

  public abstract B _2();

  public abstract C _3();

  public abstract D _4();

  public scalaz.LazyTuple4();
    Code:
       0: aload_0
       1: invokespecial #106                // Method java/lang/Object."<init>":()V
       4: return
}
