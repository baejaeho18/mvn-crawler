Compiled from "LazyOption.scala"
public final class scalaz.LazyOptionInstances$$anon$1 implements scalaz.Traverse<scalaz.LazyOption>, scalaz.MonadPlus<scalaz.LazyOption>, scalaz.Alt<scalaz.LazyOption>, scalaz.BindRec<scalaz.LazyOption>, scalaz.Cozip<scalaz.LazyOption>, scalaz.Zip<scalaz.LazyOption>, scalaz.Unzip<scalaz.LazyOption>, scalaz.Align<scalaz.LazyOption>, scalaz.Cobind<scalaz.LazyOption>, scalaz.Optional<scalaz.LazyOption>, scalaz.IsEmpty<scalaz.LazyOption> {
  private scalaz.syntax.IsEmptySyntax<scalaz.LazyOption> isEmptySyntax;

  private scalaz.syntax.OptionalSyntax<scalaz.LazyOption> optionalSyntax;

  private scalaz.syntax.CobindSyntax<scalaz.LazyOption> cobindSyntax;

  private scalaz.syntax.AlignSyntax<scalaz.LazyOption> alignSyntax;

  private scalaz.syntax.UnzipSyntax<scalaz.LazyOption> unzipSyntax;

  private scalaz.syntax.ZipSyntax<scalaz.LazyOption> zipSyntax;

  private scalaz.syntax.CozipSyntax<scalaz.LazyOption> cozipSyntax;

  private scalaz.syntax.BindRecSyntax<scalaz.LazyOption> bindRecSyntax;

  private scalaz.syntax.AltSyntax<scalaz.LazyOption> altSyntax;

  private scalaz.syntax.InvariantAltSyntax<scalaz.LazyOption> invariantAltSyntax;

  private scalaz.syntax.MonadPlusSyntax<scalaz.LazyOption> monadPlusSyntax;

  private scalaz.syntax.ApplicativePlusSyntax<scalaz.LazyOption> applicativePlusSyntax;

  private scalaz.syntax.PlusEmptySyntax<scalaz.LazyOption> plusEmptySyntax;

  private scalaz.syntax.PlusSyntax<scalaz.LazyOption> plusSyntax;

  private scalaz.syntax.MonadSyntax<scalaz.LazyOption> monadSyntax;

  private scalaz.syntax.BindSyntax<scalaz.LazyOption> bindSyntax;

  private scalaz.syntax.ApplicativeSyntax<scalaz.LazyOption> applicativeSyntax;

  private scalaz.syntax.InvariantApplicativeSyntax<scalaz.LazyOption> invariantApplicativeSyntax;

  private scalaz.syntax.ApplySyntax<scalaz.LazyOption> applySyntax;

  private scalaz.syntax.TraverseSyntax<scalaz.LazyOption> traverseSyntax;

  private scalaz.syntax.FoldableSyntax<scalaz.LazyOption> foldableSyntax;

  private scalaz.syntax.FunctorSyntax<scalaz.LazyOption> functorSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<scalaz.LazyOption> invariantFunctorSyntax;

  public scalaz.IsEmpty<scalaz.LazyOption>.IsEmptyLaw isEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #202                // InterfaceMethod scalaz/IsEmpty.isEmptyLaw$:(Lscalaz/IsEmpty;)Lscalaz/IsEmpty$IsEmptyLaw;
       4: areturn

  public java.lang.Object getOrElse(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #212                // InterfaceMethod scalaz/Optional.getOrElse$:(Lscalaz/Optional;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final boolean nonEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #220                // InterfaceMethod scalaz/Optional.nonEmpty$:(Lscalaz/Optional;Ljava/lang/Object;)Z
       5: ireturn

  public final boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #224                // InterfaceMethod scalaz/Optional.isEmpty$:(Lscalaz/Optional;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.Object orElse(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #229                // InterfaceMethod scalaz/Optional.orElse$:(Lscalaz/Optional;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object $qmark(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #237                // InterfaceMethod scalaz/Optional.$qmark$:(Lscalaz/Optional;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public scala.Option toOption(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #243                // InterfaceMethod scalaz/Optional.toOption$:(Lscalaz/Optional;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public scalaz.Maybe toMaybe(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #249                // InterfaceMethod scalaz/Optional.toMaybe$:(Lscalaz/Optional;Ljava/lang/Object;)Lscalaz/Maybe;
       5: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #256                // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.Cobind<scalaz.LazyOption>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #264                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public <G> scalaz.Align<?> product(scalaz.Align<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #272                // InterfaceMethod scalaz/Align.product$:(Lscalaz/Align;Lscalaz/Align;)Lscalaz/Align;
       5: areturn

  public java.lang.Object align(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #281                // InterfaceMethod scalaz/Align.align$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public <A, B, C> scala.Function2<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>> padWith(scala.Function2<scala.Option<A>, scala.Option<B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #288                // InterfaceMethod scalaz/Align.padWith$:(Lscalaz/Align;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B> scala.Function2<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<scala.Tuple2<scala.Option<A>, scala.Option<B>>>> pad();
    Code:
       0: aload_0
       1: invokestatic  #296                // InterfaceMethod scalaz/Align.pad$:(Lscalaz/Align;)Lscala/Function2;
       4: areturn

  public java.lang.Object merge(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #305                // InterfaceMethod scalaz/Align.merge$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object alignSwap(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #310                // InterfaceMethod scalaz/Align.alignSwap$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignA(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #314                // InterfaceMethod scalaz/Align.alignA$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignB(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #318                // InterfaceMethod scalaz/Align.alignB$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThis(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #322                // InterfaceMethod scalaz/Align.alignThis$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThat(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #326                // InterfaceMethod scalaz/Align.alignThat$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignBoth(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #330                // InterfaceMethod scalaz/Align.alignBoth$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scalaz.Align<scalaz.LazyOption>.AlignLaw alignLaw();
    Code:
       0: aload_0
       1: invokestatic  #337                // InterfaceMethod scalaz/Align.alignLaw$:(Lscalaz/Align;)Lscalaz/Align$AlignLaw;
       4: areturn

  public java.lang.Object firsts(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #343                // InterfaceMethod scalaz/Unzip.firsts$:(Lscalaz/Unzip;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object seconds(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #347                // InterfaceMethod scalaz/Unzip.seconds$:(Lscalaz/Unzip;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Unzip<?> compose(scalaz.Functor<scalaz.LazyOption>, scalaz.Unzip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #355                // InterfaceMethod scalaz/Unzip.compose$:(Lscalaz/Unzip;Lscalaz/Functor;Lscalaz/Unzip;)Lscalaz/Unzip;
       6: areturn

  public <G> scalaz.Unzip<?> product(scalaz.Unzip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #362                // InterfaceMethod scalaz/Unzip.product$:(Lscalaz/Unzip;Lscalaz/Unzip;)Lscalaz/Unzip;
       5: areturn

  public scala.Tuple3 unzip3(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #369                // InterfaceMethod scalaz/Unzip.unzip3$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple3;
       5: areturn

  public scala.Tuple4 unzip4(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #375                // InterfaceMethod scalaz/Unzip.unzip4$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple4;
       5: areturn

  public scala.Tuple5 unzip5(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #381                // InterfaceMethod scalaz/Unzip.unzip5$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple5;
       5: areturn

  public scala.Tuple6 unzip6(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #387                // InterfaceMethod scalaz/Unzip.unzip6$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple6;
       5: areturn

  public scala.Tuple7 unzip7(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #393                // InterfaceMethod scalaz/Unzip.unzip7$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple7;
       5: areturn

  public <G> scalaz.Zip<?> compose(scalaz.Functor<scalaz.LazyOption>, scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #398                // InterfaceMethod scalaz/Zip.compose$:(Lscalaz/Zip;Lscalaz/Functor;Lscalaz/Zip;)Lscalaz/Zip;
       6: areturn

  public <G> scalaz.Zip<?> product(scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #404                // InterfaceMethod scalaz/Zip.product$:(Lscalaz/Zip;Lscalaz/Zip;)Lscalaz/Zip;
       5: areturn

  public java.lang.Object zipWith(scala.Function0, scala.Function0, scala.Function2, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #412                // InterfaceMethod scalaz/Zip.zipWith$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Functor;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apzip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #418                // InterfaceMethod scalaz/Zip.apzip$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apzipPL(scala.Function0, scala.Function0, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #425                // InterfaceMethod scalaz/Zip.apzipPL$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scalaz.Apply<scalaz.LazyOption> ap(scalaz.Functor<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #433                // InterfaceMethod scalaz/Zip.ap$:(Lscalaz/Zip;Lscalaz/Functor;)Lscalaz/Apply;
       5: areturn

  public scalaz.Zip<scalaz.LazyOption>.ZipLaw zipLaw();
    Code:
       0: aload_0
       1: invokestatic  #440                // InterfaceMethod scalaz/Zip.zipLaw$:(Lscalaz/Zip;)Lscalaz/Zip$ZipLaw;
       4: areturn

  public scalaz.$bslash$div cozip3(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #446                // InterfaceMethod scalaz/Cozip.cozip3$:(Lscalaz/Cozip;Ljava/lang/Object;)Lscalaz/$bslash$div;
       5: areturn

  public scalaz.$bslash$div cozip4(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #450                // InterfaceMethod scalaz/Cozip.cozip4$:(Lscalaz/Cozip;Ljava/lang/Object;)Lscalaz/$bslash$div;
       5: areturn

  public scalaz.$bslash$div cozip5(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #454                // InterfaceMethod scalaz/Cozip.cozip5$:(Lscalaz/Cozip;Ljava/lang/Object;)Lscalaz/$bslash$div;
       5: areturn

  public scalaz.$bslash$div cozip6(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #458                // InterfaceMethod scalaz/Cozip.cozip6$:(Lscalaz/Cozip;Ljava/lang/Object;)Lscalaz/$bslash$div;
       5: areturn

  public scalaz.$bslash$div cozip7(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #462                // InterfaceMethod scalaz/Cozip.cozip7$:(Lscalaz/Cozip;Ljava/lang/Object;)Lscalaz/$bslash$div;
       5: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #467                // InterfaceMethod scalaz/BindRec.forever$:(Lscalaz/BindRec;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.BindRec<?> product(scalaz.BindRec<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #472                // InterfaceMethod scalaz/BindRec.product$:(Lscalaz/BindRec;Lscalaz/BindRec;)Lscalaz/BindRec;
       5: areturn

  public scalaz.BindRec<scalaz.LazyOption>.BindRecLaw bindRecLaw();
    Code:
       0: aload_0
       1: invokestatic  #480                // InterfaceMethod scalaz/BindRec.bindRecLaw$:(Lscalaz/BindRec;)Lscalaz/BindRec$BindRecLaw;
       4: areturn

  public java.lang.Object optional(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #485                // InterfaceMethod scalaz/Alt.optional$:(Lscalaz/Alt;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object altly1(scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #491                // InterfaceMethod scalaz/Alt.altly1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object altly2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #497                // InterfaceMethod scalaz/Alt.altly2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object altly3(scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #504                // InterfaceMethod scalaz/Alt.altly3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object altly4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #511                // InterfaceMethod scalaz/Alt.altly4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object either2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #516                // InterfaceMethod scalaz/Alt.either2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #522                // InterfaceMethod scalaz/Alt.altlying1$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #528                // InterfaceMethod scalaz/Alt.altlying2$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object altlying3(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #534                // InterfaceMethod scalaz/Alt.altlying3$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object altlying4(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #540                // InterfaceMethod scalaz/Alt.altlying4$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #547                // InterfaceMethod scalaz/Alt.xcoproduct1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xcoproduct2(scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #553                // InterfaceMethod scalaz/Alt.xcoproduct2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xcoproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #559                // InterfaceMethod scalaz/Alt.xcoproduct3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #565                // InterfaceMethod scalaz/Alt.xcoproduct4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public scalaz.Alt<scalaz.LazyOption>.AltLaw altLaw();
    Code:
       0: aload_0
       1: invokestatic  #572                // InterfaceMethod scalaz/Alt.altLaw$:(Lscalaz/Alt;)Lscalaz/Alt$AltLaw;
       4: areturn

  public final java.lang.Object xcoderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #580                // InterfaceMethod scalaz/InvariantAlt.xcoderiving1$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xcoderiving2(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #586                // InterfaceMethod scalaz/InvariantAlt.xcoderiving2$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xcoderiving3(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #592                // InterfaceMethod scalaz/InvariantAlt.xcoderiving3$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xcoderiving4(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #598                // InterfaceMethod scalaz/InvariantAlt.xcoderiving4$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object filter(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #603                // InterfaceMethod scalaz/MonadPlus.filter$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unite(java.lang.Object, scalaz.Foldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #611                // InterfaceMethod scalaz/MonadPlus.unite$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Foldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object lefts(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #619                // InterfaceMethod scalaz/MonadPlus.lefts$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object rights(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #624                // InterfaceMethod scalaz/MonadPlus.rights$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 separate(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #630                // InterfaceMethod scalaz/MonadPlus.separate$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Lscala/Tuple2;
       6: areturn

  public final java.lang.Object uniteU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #636                // InterfaceMethod scalaz/MonadPlus.uniteU$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.MonadPlus<?> product(scalaz.MonadPlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #642                // InterfaceMethod scalaz/MonadPlus.product$:(Lscalaz/MonadPlus;Lscalaz/MonadPlus;)Lscalaz/MonadPlus;
       5: areturn

  public scalaz.MonadPlus<scalaz.LazyOption>.MonadPlusLaw monadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #650                // InterfaceMethod scalaz/MonadPlus.monadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$MonadPlusLaw;
       4: areturn

  public scalaz.MonadPlus<scalaz.LazyOption>.StrongMonadPlusLaw strongMonadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #657                // InterfaceMethod scalaz/MonadPlus.strongMonadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$StrongMonadPlusLaw;
       4: areturn

  public <G> scalaz.ApplicativePlus<?> compose(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #664                // InterfaceMethod scalaz/ApplicativePlus.compose$:(Lscalaz/ApplicativePlus;Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public <G> scalaz.ApplicativePlus<?> product(scalaz.ApplicativePlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #670                // InterfaceMethod scalaz/ApplicativePlus.product$:(Lscalaz/ApplicativePlus;Lscalaz/ApplicativePlus;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #677                // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #681                // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #686                // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #690                // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<scalaz.LazyOption<A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #698                // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<scalaz.LazyOption>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #705                // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S$, A> scalaz.Maybe<scalaz.LazyOption<A>> unfoldlPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<S$, scalaz.LazyOption<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #712                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S$, A> scalaz.Maybe<scalaz.LazyOption<A>> unfoldrPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scalaz.LazyOption<A>, S$>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #717                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #722                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.LazyOption<A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #730                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<scalaz.LazyOption>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #737                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #742                // InterfaceMethod scalaz/Monad.map$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whileM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #750                // InterfaceMethod scalaz/Monad.whileM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object whileM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #755                // InterfaceMethod scalaz/Monad.whileM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object untilM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #760                // InterfaceMethod scalaz/Monad.untilM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object untilM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #764                // InterfaceMethod scalaz/Monad.untilM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateWhile(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #768                // InterfaceMethod scalaz/Monad.iterateWhile$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateUntil(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #772                // InterfaceMethod scalaz/Monad.iterateUntil$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Monad<?> product(scalaz.Monad<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #777                // InterfaceMethod scalaz/Monad.product$:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public scalaz.Monad<scalaz.LazyOption>.MonadLaw monadLaw();
    Code:
       0: aload_0
       1: invokestatic  #785                // InterfaceMethod scalaz/Monad.monadLaw$:(Lscalaz/Monad;)Lscalaz/Monad$MonadLaw;
       4: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #791                // InterfaceMethod scalaz/Bind.apply2$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #797                // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #804                // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #809                // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Bind<?> product(scalaz.Bind<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #814                // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<scalaz.LazyOption>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #822                // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #828                // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #834                // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #843                // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #850                // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #855                // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #860                // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #866                // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #872                // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #879                // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #887                // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #892                // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.$eq$eq$greater$greater, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #899                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #906                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #911                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #918                // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #923                // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Applicative<?> product(scalaz.Applicative<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #927                // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scalaz.LazyOption> flip();
    Code:
       0: aload_0
       1: invokestatic  #932                // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #940                // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scalaz.LazyOption>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #947                // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #954                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #959                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #965                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #971                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #977                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #983                // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #990                // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public <S$, A, B> scalaz.Maybe<scalaz.LazyOption<B>> unfoldrOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scalaz.LazyOption<A>, S$>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #998                // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G$> scalaz.Apply<?> compose(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1004               // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G$> scalaz.Apply<?> product(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1007               // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scalaz.LazyOption<A>, scalaz.LazyOption<B>> apF(scala.Function0<scalaz.LazyOption<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1014               // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1020               // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1027               // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1034               // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1041               // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1048               // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1055               // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1062               // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1068               // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1074               // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1080               // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1087               // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1094               // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1101               // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #1109               // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #1117               // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #1125               // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #1133               // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1139               // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1145               // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1151               // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1157               // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1162               // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1168               // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1174               // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1180               // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1186               // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1193               // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1200               // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R$> scala.Function5<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>, scalaz.LazyOption<R$>> lift5(scala.Function5<A, B, C, D, E, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1207               // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R$> scala.Function6<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>, scalaz.LazyOption<FF>, scalaz.LazyOption<R$>> lift6(scala.Function6<A, B, C, D, E, FF, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1214               // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G$, R$> scala.Function7<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>, scalaz.LazyOption<FF>, scalaz.LazyOption<G$>, scalaz.LazyOption<R$>> lift7(scala.Function7<A, B, C, D, E, FF, G$, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1221               // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, R$> scala.Function8<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>, scalaz.LazyOption<FF>, scalaz.LazyOption<G$>, scalaz.LazyOption<H>, scalaz.LazyOption<R$>> lift8(scala.Function8<A, B, C, D, E, FF, G$, H, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1228               // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, R$> scala.Function9<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>, scalaz.LazyOption<FF>, scalaz.LazyOption<G$>, scalaz.LazyOption<H>, scalaz.LazyOption<I>, scalaz.LazyOption<R$>> lift9(scala.Function9<A, B, C, D, E, FF, G$, H, I, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1235               // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, R$> scala.Function10<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>, scalaz.LazyOption<FF>, scalaz.LazyOption<G$>, scalaz.LazyOption<H>, scalaz.LazyOption<I>, scalaz.LazyOption<J>, scalaz.LazyOption<R$>> lift10(scala.Function10<A, B, C, D, E, FF, G$, H, I, J, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1242               // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, R$> scala.Function11<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>, scalaz.LazyOption<FF>, scalaz.LazyOption<G$>, scalaz.LazyOption<H>, scalaz.LazyOption<I>, scalaz.LazyOption<J>, scalaz.LazyOption<K>, scalaz.LazyOption<R$>> lift11(scala.Function11<A, B, C, D, E, FF, G$, H, I, J, K, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1249               // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, L, R$> scala.Function12<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>, scalaz.LazyOption<FF>, scalaz.LazyOption<G$>, scalaz.LazyOption<H>, scalaz.LazyOption<I>, scalaz.LazyOption<J>, scalaz.LazyOption<K>, scalaz.LazyOption<L>, scalaz.LazyOption<R$>> lift12(scala.Function12<A, B, C, D, E, FF, G$, H, I, J, K, L, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1256               // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1260               // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1264               // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #1269               // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scalaz.LazyOption<A>, scalaz.LazyOption<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1277               // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scalaz.LazyOption>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #1284               // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1289               // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1297               // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1300               // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1307               // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<scalaz.LazyOption>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1315               // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<scalaz.LazyOption>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #1322               // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1327               // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1333               // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1339               // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1345               // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1352               // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1359               // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1366               // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1372               // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1378               // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1384               // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1391               // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1397               // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1403               // InterfaceMethod scalaz/Traverse.foldLeft$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1409               // InterfaceMethod scalaz/Traverse.foldMap$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1414               // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1416               // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1420               // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1424               // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1428               // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1433               // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1437               // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1441               // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1445               // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<scalaz.LazyOption>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #1452               // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1458               // InterfaceMethod scalaz/Foldable.foldMap1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1463               // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1468               // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1470               // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1475               // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1482               // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1488               // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1495               // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1502               // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1508               // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1513               // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1518               // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1523               // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1528               // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1533               // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1539               // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1545               // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1551               // InterfaceMethod scalaz/Foldable.foldMapRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1557               // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1563               // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1569               // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1573               // InterfaceMethod scalaz/Foldable.foldMapLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1577               // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1581               // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1587               // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1591               // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1597               // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1601               // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1605               // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1611               // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1615               // InterfaceMethod scalaz/Foldable.length$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1622               // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #1628               // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1634               // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1640               // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1646               // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1652               // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scala.collection.immutable.LazyList toLazyList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1658               // InterfaceMethod scalaz/Foldable.toLazyList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/LazyList;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1664               // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1670               // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1676               // InterfaceMethod scalaz/Foldable.all$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1680               // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1684               // InterfaceMethod scalaz/Foldable.any$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1688               // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1694               // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1700               // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1706               // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1710               // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1715               // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1720               // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1725               // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1730               // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1735               // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1740               // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1745               // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1749               // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1753               // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1757               // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1763               // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1769               // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1773               // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1780               // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/$less$colon$less;)J
       6: lreturn

  public boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1786               // InterfaceMethod scalaz/Foldable.empty$:(Lscalaz/Foldable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1793               // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1800               // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1806               // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1813               // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1819               // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1823               // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1829               // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1835               // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1840               // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1846               // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scalaz.LazyOption>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #1853               // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1859               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1864               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.LazyOption<A>, scalaz.LazyOption<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1871               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1876               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1880               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1884               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1889               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1893               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1897               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1903               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G$> scalaz.Functor<?> compose(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1909               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G$> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1916               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G$> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1922               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G$> scalaz.Functor<?> product(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1925               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1932               // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<scalaz.LazyOption>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1940               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1947               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1955               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scalaz.LazyOption>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1963               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.IsEmptySyntax<scalaz.LazyOption> isEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1967               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       4: areturn

  public void scalaz$IsEmpty$_setter_$isEmptySyntax_$eq(scalaz.syntax.IsEmptySyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1967               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       5: return

  public scalaz.syntax.OptionalSyntax<scalaz.LazyOption> optionalSyntax();
    Code:
       0: aload_0
       1: getfield      #1975               // Field optionalSyntax:Lscalaz/syntax/OptionalSyntax;
       4: areturn

  public void scalaz$Optional$_setter_$optionalSyntax_$eq(scalaz.syntax.OptionalSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1975               // Field optionalSyntax:Lscalaz/syntax/OptionalSyntax;
       5: return

  public scalaz.syntax.CobindSyntax<scalaz.LazyOption> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #1982               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1982               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.AlignSyntax<scalaz.LazyOption> alignSyntax();
    Code:
       0: aload_0
       1: getfield      #1989               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       4: areturn

  public void scalaz$Align$_setter_$alignSyntax_$eq(scalaz.syntax.AlignSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1989               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       5: return

  public scalaz.syntax.UnzipSyntax<scalaz.LazyOption> unzipSyntax();
    Code:
       0: aload_0
       1: getfield      #1996               // Field unzipSyntax:Lscalaz/syntax/UnzipSyntax;
       4: areturn

  public void scalaz$Unzip$_setter_$unzipSyntax_$eq(scalaz.syntax.UnzipSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1996               // Field unzipSyntax:Lscalaz/syntax/UnzipSyntax;
       5: return

  public scalaz.syntax.ZipSyntax<scalaz.LazyOption> zipSyntax();
    Code:
       0: aload_0
       1: getfield      #2003               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       4: areturn

  public void scalaz$Zip$_setter_$zipSyntax_$eq(scalaz.syntax.ZipSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2003               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       5: return

  public scalaz.syntax.CozipSyntax<scalaz.LazyOption> cozipSyntax();
    Code:
       0: aload_0
       1: getfield      #2010               // Field cozipSyntax:Lscalaz/syntax/CozipSyntax;
       4: areturn

  public void scalaz$Cozip$_setter_$cozipSyntax_$eq(scalaz.syntax.CozipSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2010               // Field cozipSyntax:Lscalaz/syntax/CozipSyntax;
       5: return

  public scalaz.syntax.BindRecSyntax<scalaz.LazyOption> bindRecSyntax();
    Code:
       0: aload_0
       1: getfield      #2017               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       4: areturn

  public void scalaz$BindRec$_setter_$bindRecSyntax_$eq(scalaz.syntax.BindRecSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2017               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       5: return

  public scalaz.syntax.AltSyntax<scalaz.LazyOption> altSyntax();
    Code:
       0: aload_0
       1: getfield      #2024               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       4: areturn

  public void scalaz$Alt$_setter_$altSyntax_$eq(scalaz.syntax.AltSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2024               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       5: return

  public scalaz.syntax.InvariantAltSyntax<scalaz.LazyOption> invariantAltSyntax();
    Code:
       0: aload_0
       1: getfield      #2031               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       4: areturn

  public void scalaz$InvariantAlt$_setter_$invariantAltSyntax_$eq(scalaz.syntax.InvariantAltSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2031               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       5: return

  public scalaz.syntax.MonadPlusSyntax<scalaz.LazyOption> monadPlusSyntax();
    Code:
       0: aload_0
       1: getfield      #2038               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       4: areturn

  public void scalaz$MonadPlus$_setter_$monadPlusSyntax_$eq(scalaz.syntax.MonadPlusSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2038               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       5: return

  public scalaz.syntax.ApplicativePlusSyntax<scalaz.LazyOption> applicativePlusSyntax();
    Code:
       0: aload_0
       1: getfield      #2045               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       4: areturn

  public void scalaz$ApplicativePlus$_setter_$applicativePlusSyntax_$eq(scalaz.syntax.ApplicativePlusSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2045               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       5: return

  public scalaz.syntax.PlusEmptySyntax<scalaz.LazyOption> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #2052               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2052               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<scalaz.LazyOption> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #2059               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2059               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.syntax.MonadSyntax<scalaz.LazyOption> monadSyntax();
    Code:
       0: aload_0
       1: getfield      #2066               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       4: areturn

  public void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2066               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       5: return

  public scalaz.syntax.BindSyntax<scalaz.LazyOption> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #2073               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2073               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scalaz.LazyOption> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #2080               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2080               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scalaz.LazyOption> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #2087               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2087               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scalaz.LazyOption> applySyntax();
    Code:
       0: aload_0
       1: getfield      #2094               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2094               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.TraverseSyntax<scalaz.LazyOption> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #2101               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2101               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scalaz.LazyOption> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #2108               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2108               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scalaz.LazyOption> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #2115               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2115               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scalaz.LazyOption> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #2122               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2122               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A, B> scalaz.LazyOption<B> cobind(scalaz.LazyOption<A>, scala.Function1<scalaz.LazyOption<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2132               // Method cojoin:(Lscalaz/LazyOption;)Lscalaz/LazyOption;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aconst_null
      11: athrow
      12: aload_3
      13: instanceof    #2134               // class scalaz/LazySome
      16: ifeq          62
      19: aload_3
      20: checkcast     #2134               // class scalaz/LazySome
      23: invokevirtual #2137               // Method scalaz/LazySome.a:()Lscala/Function0;
      26: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      31: astore        4
      33: aload_2
      34: aload         4
      36: invokedynamic #2158,  0           // InvokeDynamic #0:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      41: astore        5
      43: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      46: pop
      47: new           #2134               // class scalaz/LazySome
      50: dup
      51: aload         5
      53: invokespecial #2168               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      56: aconst_null
      57: astore        5
      59: goto          91
      62: aload_3
      63: instanceof    #2170               // class scalaz/LazyNone
      66: ifeq          82
      69: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      72: pop
      73: getstatic     #2175               // Field scalaz/LazyNone$.MODULE$:Lscalaz/LazyNone$;
      76: invokevirtual #2178               // Method scalaz/LazyNone$.none:()Lscalaz/LazyNone;
      79: goto          91
      82: new           #2180               // class scala/MatchError
      85: dup
      86: aload_3
      87: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      90: athrow
      91: checkcast     #2185               // class scalaz/LazyOption
      94: areturn

  public <A> scalaz.LazyOption<scalaz.LazyOption<A>> cojoin(scalaz.LazyOption<A>);
    Code:
       0: aload_1
       1: instanceof    #2170               // class scalaz/LazyNone
       4: ifeq          18
       7: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      10: pop
      11: getstatic     #2175               // Field scalaz/LazyNone$.MODULE$:Lscalaz/LazyNone$;
      14: invokevirtual #2178               // Method scalaz/LazyNone$.none:()Lscalaz/LazyNone;
      17: areturn
      18: aload_1
      19: instanceof    #2134               // class scalaz/LazySome
      22: ifeq          44
      25: aload_1
      26: checkcast     #2134               // class scalaz/LazySome
      29: astore_2
      30: new           #2134               // class scalaz/LazySome
      33: dup
      34: aload_2
      35: invokedynamic #2200,  0           // InvokeDynamic #1:apply:(Lscalaz/LazySome;)Lscala/Function0;
      40: invokespecial #2168               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      43: areturn
      44: new           #2180               // class scala/MatchError
      47: dup
      48: aload_1
      49: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      52: athrow

  public <G, A, B> G traverseImpl(scalaz.LazyOption<A>, scala.Function1<A, G>, scalaz.Applicative<G>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #2134               // class scalaz/LazySome
      10: ifeq          51
      13: aload_1
      14: checkcast     #2134               // class scalaz/LazySome
      17: invokevirtual #2137               // Method scalaz/LazySome.a:()Lscala/Function0;
      20: astore        4
      22: getstatic     #2208               // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      25: pop
      26: aload_3
      27: aload_2
      28: aload         4
      30: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      35: invokeinterface #2212,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: invokedynamic #2222,  0           // InvokeDynamic #2:apply:()Lscala/Function1;
      45: invokeinterface #2224,  3         // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      50: areturn
      51: aload_1
      52: instanceof    #2170               // class scalaz/LazyNone
      55: ifeq          63
      58: aload_3
      59: invokestatic  #2228               // Method scalaz/LazyOption.$anonfun$traverse$4:(Lscalaz/Applicative;)Ljava/lang/Object;
      62: areturn
      63: new           #2180               // class scala/MatchError
      66: dup
      67: aload_1
      68: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      71: athrow

  public <A, B> B foldRight(scalaz.LazyOption<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #2134               // class scalaz/LazySome
      10: ifeq          37
      13: aload_1
      14: checkcast     #2134               // class scalaz/LazySome
      17: invokevirtual #2137               // Method scalaz/LazySome.a:()Lscala/Function0;
      20: astore        4
      22: aload_3
      23: aload         4
      25: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      30: aload_2
      31: invokeinterface #2235,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: areturn
      37: aload_1
      38: instanceof    #2170               // class scalaz/LazyNone
      41: ifeq          51
      44: aload_2
      45: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      50: areturn
      51: new           #2180               // class scala/MatchError
      54: dup
      55: aload_1
      56: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      59: athrow

  public <A, B> scalaz.LazyOption<B> ap(scala.Function0<scalaz.LazyOption<A>>, scala.Function0<scalaz.LazyOption<scala.Function1<A, B>>>);
    Code:
       0: aload_1
       1: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2185               // class scalaz/LazyOption
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: astore_3
      16: aload_3
      17: instanceof    #2134               // class scalaz/LazySome
      20: ifeq          155
      23: aload_3
      24: checkcast     #2134               // class scalaz/LazySome
      27: invokevirtual #2137               // Method scalaz/LazySome.a:()Lscala/Function0;
      30: astore        4
      32: aload_2
      33: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      38: checkcast     #2185               // class scalaz/LazyOption
      41: aload         4
      43: invokedynamic #2244,  0           // InvokeDynamic #3:apply:(Lscala/Function0;)Lscala/Function1;
      48: astore        6
      50: dup
      51: ifnonnull     56
      54: aconst_null
      55: athrow
      56: astore        5
      58: aload         5
      60: instanceof    #2134               // class scalaz/LazySome
      63: ifeq          106
      66: aload         5
      68: checkcast     #2134               // class scalaz/LazySome
      71: invokevirtual #2137               // Method scalaz/LazySome.a:()Lscala/Function0;
      74: astore        7
      76: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      79: pop
      80: aload         6
      82: aload         7
      84: invokedynamic #2251,  0           // InvokeDynamic #4:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
      89: astore        8
      91: new           #2134               // class scalaz/LazySome
      94: dup
      95: aload         8
      97: invokespecial #2168               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
     100: aconst_null
     101: astore        8
     103: goto          137
     106: aload         5
     108: instanceof    #2170               // class scalaz/LazyNone
     111: ifeq          127
     114: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
     117: pop
     118: getstatic     #2175               // Field scalaz/LazyNone$.MODULE$:Lscalaz/LazyNone$;
     121: invokevirtual #2178               // Method scalaz/LazyNone$.none:()Lscalaz/LazyNone;
     124: goto          137
     127: new           #2180               // class scala/MatchError
     130: dup
     131: aload         5
     133: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     136: athrow
     137: checkcast     #2185               // class scalaz/LazyOption
     140: aconst_null
     141: astore        5
     143: aconst_null
     144: astore        6
     146: aconst_null
     147: astore        7
     149: aconst_null
     150: astore        8
     152: goto          184
     155: aload_3
     156: instanceof    #2170               // class scalaz/LazyNone
     159: ifeq          175
     162: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
     165: pop
     166: getstatic     #2175               // Field scalaz/LazyNone$.MODULE$:Lscalaz/LazyNone$;
     169: invokevirtual #2178               // Method scalaz/LazyNone$.none:()Lscalaz/LazyNone;
     172: goto          184
     175: new           #2180               // class scala/MatchError
     178: dup
     179: aload_3
     180: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     183: athrow
     184: checkcast     #2185               // class scalaz/LazyOption
     187: areturn

  public <A> scalaz.LazyOption<A> plus(scalaz.LazyOption<A>, scala.Function0<scalaz.LazyOption<A>>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #2134               // class scalaz/LazySome
      10: ifeq          25
      13: aload_1
      14: checkcast     #2134               // class scalaz/LazySome
      17: invokevirtual #2137               // Method scalaz/LazySome.a:()Lscala/Function0;
      20: pop
      21: aload_1
      22: goto          50
      25: aload_1
      26: instanceof    #2170               // class scalaz/LazyNone
      29: ifeq          41
      32: aload_2
      33: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      38: goto          50
      41: new           #2180               // class scala/MatchError
      44: dup
      45: aload_1
      46: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      49: athrow
      50: checkcast     #2185               // class scalaz/LazyOption
      53: areturn

  public <A> scalaz.LazyOption<A> alt(scala.Function0<scalaz.LazyOption<A>>, scala.Function0<scalaz.LazyOption<A>>);
    Code:
       0: aload_1
       1: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2185               // class scalaz/LazyOption
       9: astore_3
      10: aload_3
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: aload_3
      17: instanceof    #2134               // class scalaz/LazySome
      20: ifeq          35
      23: aload_3
      24: checkcast     #2134               // class scalaz/LazySome
      27: invokevirtual #2137               // Method scalaz/LazySome.a:()Lscala/Function0;
      30: pop
      31: aload_3
      32: goto          60
      35: aload_3
      36: instanceof    #2170               // class scalaz/LazyNone
      39: ifeq          51
      42: aload_2
      43: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      48: goto          60
      51: new           #2180               // class scala/MatchError
      54: dup
      55: aload_3
      56: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      59: athrow
      60: checkcast     #2185               // class scalaz/LazyOption
      63: areturn

  public <A, B> scalaz.LazyOption<B> bind(scalaz.LazyOption<A>, scala.Function1<A, scalaz.LazyOption<B>>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #2134               // class scalaz/LazySome
      10: ifeq          39
      13: aload_1
      14: checkcast     #2134               // class scalaz/LazySome
      17: invokevirtual #2137               // Method scalaz/LazySome.a:()Lscala/Function0;
      20: astore_3
      21: aload_2
      22: aload_3
      23: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      28: invokeinterface #2212,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #2185               // class scalaz/LazyOption
      36: goto          68
      39: aload_1
      40: instanceof    #2170               // class scalaz/LazyNone
      43: ifeq          59
      46: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      49: pop
      50: getstatic     #2175               // Field scalaz/LazyNone$.MODULE$:Lscalaz/LazyNone$;
      53: invokevirtual #2178               // Method scalaz/LazyNone$.none:()Lscalaz/LazyNone;
      56: goto          68
      59: new           #2180               // class scala/MatchError
      62: dup
      63: aload_1
      64: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      67: athrow
      68: checkcast     #2185               // class scalaz/LazyOption
      71: areturn

  public <A> scalaz.LazyOption<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
       3: pop
       4: new           #2134               // class scalaz/LazySome
       7: dup
       8: aload_1
       9: invokespecial #2168               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      12: areturn

  public <A> scalaz.LazyOption<A> empty();
    Code:
       0: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
       3: pop
       4: getstatic     #2175               // Field scalaz/LazyNone$.MODULE$:Lscalaz/LazyNone$;
       7: invokevirtual #2178               // Method scalaz/LazyNone$.none:()Lscalaz/LazyNone;
      10: areturn

  public <A, B> scalaz.$bslash$div<scalaz.LazyOption<A>, scalaz.LazyOption<B>> cozip(scalaz.LazyOption<scalaz.$bslash$div<A, B>>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #2134               // class scalaz/LazySome
      10: ifeq          182
      13: aload_1
      14: checkcast     #2134               // class scalaz/LazySome
      17: invokevirtual #2137               // Method scalaz/LazySome.a:()Lscala/Function0;
      20: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      25: checkcast     #2273               // class scalaz/$bslash$div
      28: astore_2
      29: aload_2
      30: instanceof    #2275               // class scalaz/$minus$bslash$div
      33: ifeq          89
      36: aload_2
      37: checkcast     #2275               // class scalaz/$minus$bslash$div
      40: invokevirtual #2277               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      43: astore_3
      44: getstatic     #2282               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      47: pop
      48: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      51: pop
      52: aload_3
      53: invokedynamic #2289,  0           // InvokeDynamic #5:apply:(Ljava/lang/Object;)Lscala/Function0;
      58: astore        5
      60: new           #2134               // class scalaz/LazySome
      63: dup
      64: aload         5
      66: invokespecial #2168               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      69: aconst_null
      70: astore        5
      72: astore        7
      74: new           #2275               // class scalaz/$minus$bslash$div
      77: dup
      78: aload         7
      80: invokespecial #2290               // Method scalaz/$minus$bslash$div."<init>":(Ljava/lang/Object;)V
      83: aconst_null
      84: astore        7
      86: goto          160
      89: aload_2
      90: instanceof    #2292               // class scalaz/$bslash$div$minus
      93: ifeq          151
      96: aload_2
      97: checkcast     #2292               // class scalaz/$bslash$div$minus
     100: invokevirtual #2294               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
     103: astore        4
     105: getstatic     #2299               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
     108: pop
     109: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
     112: pop
     113: aload         4
     115: invokedynamic #2304,  0           // InvokeDynamic #6:apply:(Ljava/lang/Object;)Lscala/Function0;
     120: astore        6
     122: new           #2134               // class scalaz/LazySome
     125: dup
     126: aload         6
     128: invokespecial #2168               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
     131: aconst_null
     132: astore        6
     134: astore        8
     136: new           #2292               // class scalaz/$bslash$div$minus
     139: dup
     140: aload         8
     142: invokespecial #2305               // Method scalaz/$bslash$div$minus."<init>":(Ljava/lang/Object;)V
     145: aconst_null
     146: astore        8
     148: goto          160
     151: new           #2180               // class scala/MatchError
     154: dup
     155: aload_2
     156: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     159: athrow
     160: aconst_null
     161: astore_2
     162: aconst_null
     163: astore_3
     164: aconst_null
     165: astore        4
     167: aconst_null
     168: astore        5
     170: aconst_null
     171: astore        6
     173: aconst_null
     174: astore        7
     176: aconst_null
     177: astore        8
     179: goto          204
     182: aload_1
     183: instanceof    #2170               // class scalaz/LazyNone
     186: ifeq          195
     189: invokestatic  #2309               // Method $anonfun$cozip$4:()Lscalaz/$bslash$div;
     192: goto          204
     195: new           #2180               // class scala/MatchError
     198: dup
     199: aload_1
     200: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     203: athrow
     204: checkcast     #2273               // class scalaz/$bslash$div
     207: areturn

  public <A, B> scalaz.LazyOption<scala.Tuple2<A, B>> zip(scala.Function0<scalaz.LazyOption<A>>, scala.Function0<scalaz.LazyOption<B>>);
    Code:
       0: aload_1
       1: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2185               // class scalaz/LazyOption
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: astore_3
      16: aload_3
      17: instanceof    #2134               // class scalaz/LazySome
      20: ifeq          155
      23: aload_3
      24: checkcast     #2134               // class scalaz/LazySome
      27: invokevirtual #2137               // Method scalaz/LazySome.a:()Lscala/Function0;
      30: astore        4
      32: aload_2
      33: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      38: checkcast     #2185               // class scalaz/LazyOption
      41: aload         4
      43: invokedynamic #2324,  0           // InvokeDynamic #7:apply:(Lscala/Function0;)Lscala/Function1;
      48: astore        6
      50: dup
      51: ifnonnull     56
      54: aconst_null
      55: athrow
      56: astore        5
      58: aload         5
      60: instanceof    #2134               // class scalaz/LazySome
      63: ifeq          106
      66: aload         5
      68: checkcast     #2134               // class scalaz/LazySome
      71: invokevirtual #2137               // Method scalaz/LazySome.a:()Lscala/Function0;
      74: astore        7
      76: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      79: pop
      80: aload         6
      82: aload         7
      84: invokedynamic #2251,  0           // InvokeDynamic #4:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
      89: astore        8
      91: new           #2134               // class scalaz/LazySome
      94: dup
      95: aload         8
      97: invokespecial #2168               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
     100: aconst_null
     101: astore        8
     103: goto          137
     106: aload         5
     108: instanceof    #2170               // class scalaz/LazyNone
     111: ifeq          127
     114: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
     117: pop
     118: getstatic     #2175               // Field scalaz/LazyNone$.MODULE$:Lscalaz/LazyNone$;
     121: invokevirtual #2178               // Method scalaz/LazyNone$.none:()Lscalaz/LazyNone;
     124: goto          137
     127: new           #2180               // class scala/MatchError
     130: dup
     131: aload         5
     133: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     136: athrow
     137: checkcast     #2185               // class scalaz/LazyOption
     140: aconst_null
     141: astore        5
     143: aconst_null
     144: astore        6
     146: aconst_null
     147: astore        7
     149: aconst_null
     150: astore        8
     152: goto          184
     155: aload_3
     156: instanceof    #2170               // class scalaz/LazyNone
     159: ifeq          175
     162: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
     165: pop
     166: getstatic     #2175               // Field scalaz/LazyNone$.MODULE$:Lscalaz/LazyNone$;
     169: invokevirtual #2178               // Method scalaz/LazyNone$.none:()Lscalaz/LazyNone;
     172: goto          184
     175: new           #2180               // class scala/MatchError
     178: dup
     179: aload_3
     180: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     183: athrow
     184: checkcast     #2185               // class scalaz/LazyOption
     187: areturn

  public <A, B> scala.Tuple2<scalaz.LazyOption<A>, scalaz.LazyOption<B>> unzip(scalaz.LazyOption<scala.Tuple2<A, B>>);
    Code:
       0: aload_1
       1: getstatic     #2336               // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
       4: invokevirtual #2340               // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
       7: invokevirtual #2343               // Method scalaz/LazyOption.unzip:(Lscala/$less$colon$less;)Lscala/Tuple2;
      10: areturn

  public <A, B, C> scala.Function2<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>> alignWith(scala.Function1<scalaz.$bslash$amp$div<A, B>, C>);
    Code:
       0: aload_1
       1: invokedynamic #2356,  0           // InvokeDynamic #8:apply:(Lscala/Function1;)Lscala/Function2;
       6: areturn

  public <B, A> scalaz.$bslash$div<scalaz.LazyOption<B>, A> pextract(scalaz.LazyOption<A>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #2134               // class scalaz/LazySome
      10: ifeq          45
      13: aload_1
      14: checkcast     #2134               // class scalaz/LazySome
      17: invokevirtual #2137               // Method scalaz/LazySome.a:()Lscala/Function0;
      20: astore_2
      21: getstatic     #2299               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
      24: pop
      25: aload_2
      26: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      31: astore_3
      32: new           #2292               // class scalaz/$bslash$div$minus
      35: dup
      36: aload_3
      37: invokespecial #2305               // Method scalaz/$bslash$div$minus."<init>":(Ljava/lang/Object;)V
      40: aconst_null
      41: astore_3
      42: goto          67
      45: aload_1
      46: instanceof    #2170               // class scalaz/LazyNone
      49: ifeq          58
      52: invokestatic  #2361               // Method $anonfun$pextract$2:()Lscalaz/$bslash$div;
      55: goto          67
      58: new           #2180               // class scala/MatchError
      61: dup
      62: aload_1
      63: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      66: athrow
      67: checkcast     #2273               // class scalaz/$bslash$div
      70: areturn

  public <A> boolean isDefined(scalaz.LazyOption<A>);
    Code:
       0: aload_1
       1: invokevirtual #2368               // Method scalaz/LazyOption.isDefined:()Z
       4: ireturn

  public <A, B> scalaz.LazyOption<B> tailrecM(A, scala.Function1<A, scalaz.LazyOption<scalaz.$bslash$div<A, B>>>);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #2212,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #2185               // class scalaz/LazyOption
      10: astore_3
      11: aload_3
      12: instanceof    #2170               // class scalaz/LazyNone
      15: ifeq          29
      18: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      21: pop
      22: getstatic     #2175               // Field scalaz/LazyNone$.MODULE$:Lscalaz/LazyNone$;
      25: invokevirtual #2178               // Method scalaz/LazyNone$.none:()Lscalaz/LazyNone;
      28: areturn
      29: aload_3
      30: instanceof    #2134               // class scalaz/LazySome
      33: ifeq          126
      36: aload_3
      37: checkcast     #2134               // class scalaz/LazySome
      40: invokevirtual #2137               // Method scalaz/LazySome.a:()Lscala/Function0;
      43: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      48: checkcast     #2273               // class scalaz/$bslash$div
      51: astore        4
      53: aload         4
      55: instanceof    #2292               // class scalaz/$bslash$div$minus
      58: ifeq          94
      61: aload         4
      63: checkcast     #2292               // class scalaz/$bslash$div$minus
      66: invokevirtual #2294               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      69: astore        5
      71: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      74: pop
      75: aload         5
      77: invokedynamic #2376,  0           // InvokeDynamic #9:apply:(Ljava/lang/Object;)Lscala/Function0;
      82: astore        6
      84: new           #2134               // class scalaz/LazySome
      87: dup
      88: aload         6
      90: invokespecial #2168               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      93: areturn
      94: aload         4
      96: instanceof    #2275               // class scalaz/$minus$bslash$div
      99: ifeq          116
     102: aload         4
     104: checkcast     #2275               // class scalaz/$minus$bslash$div
     107: invokevirtual #2277               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
     110: aload_2
     111: astore_2
     112: astore_1
     113: goto          0
     116: new           #2180               // class scala/MatchError
     119: dup
     120: aload         4
     122: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     125: athrow
     126: new           #2180               // class scala/MatchError
     129: dup
     130: aload_3
     131: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     134: athrow

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #2380               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #2383               // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.Applicative compose(scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2385               // Method compose:(Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object tailrecM(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2387               // Method tailrecM:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/LazyOption;
       6: areturn

  public boolean isDefined(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2185               // class scalaz/LazyOption
       5: invokevirtual #2389               // Method isDefined:(Lscalaz/LazyOption;)Z
       8: ireturn

  public scalaz.$bslash$div pextract(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2185               // class scalaz/LazyOption
       5: invokevirtual #2391               // Method pextract:(Lscalaz/LazyOption;)Lscalaz/$bslash$div;
       8: areturn

  public scala.Tuple2 unzip(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2185               // class scalaz/LazyOption
       5: invokevirtual #2394               // Method unzip:(Lscalaz/LazyOption;)Lscala/Tuple2;
       8: areturn

  public java.lang.Object zip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2396               // Method zip:(Lscala/Function0;Lscala/Function0;)Lscalaz/LazyOption;
       6: areturn

  public scalaz.$bslash$div cozip(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2185               // class scalaz/LazyOption
       5: invokevirtual #2398               // Method cozip:(Lscalaz/LazyOption;)Lscalaz/$bslash$div;
       8: areturn

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #2400               // Method empty:()Lscalaz/LazyOption;
       4: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2402               // Method point:(Lscala/Function0;)Lscalaz/LazyOption;
       5: areturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2185               // class scalaz/LazyOption
       5: aload_2
       6: invokevirtual #2404               // Method bind:(Lscalaz/LazyOption;Lscala/Function1;)Lscalaz/LazyOption;
       9: areturn

  public java.lang.Object alt(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2406               // Method alt:(Lscala/Function0;Lscala/Function0;)Lscalaz/LazyOption;
       6: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2185               // class scalaz/LazyOption
       5: aload_2
       6: invokevirtual #2408               // Method plus:(Lscalaz/LazyOption;Lscala/Function0;)Lscalaz/LazyOption;
       9: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2410               // Method ap:(Lscala/Function0;Lscala/Function0;)Lscalaz/LazyOption;
       6: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2185               // class scalaz/LazyOption
       5: aload_2
       6: aload_3
       7: invokevirtual #2413               // Method foldRight:(Lscalaz/LazyOption;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2185               // class scalaz/LazyOption
       5: aload_2
       6: aload_3
       7: invokevirtual #2415               // Method traverseImpl:(Lscalaz/LazyOption;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2185               // class scalaz/LazyOption
       5: invokevirtual #2132               // Method cojoin:(Lscalaz/LazyOption;)Lscalaz/LazyOption;
       8: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2185               // class scalaz/LazyOption
       5: aload_2
       6: invokevirtual #2417               // Method cobind:(Lscalaz/LazyOption;Lscala/Function1;)Lscalaz/LazyOption;
       9: areturn

  public static final scalaz.LazySome $anonfun$cojoin$1(scalaz.LazySome);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$traverseImpl$1(scala.Function1, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: invokeinterface #2212,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public static final scalaz.LazyOption $anonfun$bind$1(scala.Function1, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: invokeinterface #2212,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #2185               // class scalaz/LazyOption
      15: areturn

  public static final java.lang.Object $anonfun$cozip$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$cozip$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.$bslash$div $anonfun$cozip$1(scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2273               // class scalaz/$bslash$div
       9: astore_1
      10: aload_1
      11: instanceof    #2275               // class scalaz/$minus$bslash$div
      14: ifeq          65
      17: aload_1
      18: checkcast     #2275               // class scalaz/$minus$bslash$div
      21: invokevirtual #2277               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      24: astore_2
      25: getstatic     #2282               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      28: pop
      29: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      32: pop
      33: aload_2
      34: invokedynamic #2289,  0           // InvokeDynamic #5:apply:(Ljava/lang/Object;)Lscala/Function0;
      39: astore        4
      41: new           #2134               // class scalaz/LazySome
      44: dup
      45: aload         4
      47: invokespecial #2168               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      50: aconst_null
      51: astore        4
      53: astore        6
      55: new           #2275               // class scalaz/$minus$bslash$div
      58: dup
      59: aload         6
      61: invokespecial #2290               // Method scalaz/$minus$bslash$div."<init>":(Ljava/lang/Object;)V
      64: areturn
      65: aload_1
      66: instanceof    #2292               // class scalaz/$bslash$div$minus
      69: ifeq          120
      72: aload_1
      73: checkcast     #2292               // class scalaz/$bslash$div$minus
      76: invokevirtual #2294               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      79: astore_3
      80: getstatic     #2299               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
      83: pop
      84: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      87: pop
      88: aload_3
      89: invokedynamic #2304,  0           // InvokeDynamic #6:apply:(Ljava/lang/Object;)Lscala/Function0;
      94: astore        5
      96: new           #2134               // class scalaz/LazySome
      99: dup
     100: aload         5
     102: invokespecial #2168               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
     105: aconst_null
     106: astore        5
     108: astore        7
     110: new           #2292               // class scalaz/$bslash$div$minus
     113: dup
     114: aload         7
     116: invokespecial #2305               // Method scalaz/$bslash$div$minus."<init>":(Ljava/lang/Object;)V
     119: areturn
     120: new           #2180               // class scala/MatchError
     123: dup
     124: aload_1
     125: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     128: athrow

  public static final scalaz.$bslash$div $anonfun$cozip$4();
    Code:
       0: getstatic     #2282               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
       3: pop
       4: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
       7: pop
       8: getstatic     #2175               // Field scalaz/LazyNone$.MODULE$:Lscalaz/LazyNone$;
      11: invokevirtual #2178               // Method scalaz/LazyNone$.none:()Lscalaz/LazyNone;
      14: astore_0
      15: new           #2275               // class scalaz/$minus$bslash$div
      18: dup
      19: aload_0
      20: invokespecial #2290               // Method scalaz/$minus$bslash$div."<init>":(Ljava/lang/Object;)V
      23: areturn

  public static final scalaz.$bslash$amp$div$Both $anonfun$alignWith$4(scala.Function0, scala.Function0);
    Code:
       0: new           #37                 // class scalaz/$bslash$amp$div$Both
       3: dup
       4: aload_0
       5: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: aload_1
      11: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: invokespecial #2438               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      19: areturn

  public static final scalaz.$bslash$amp$div$This $anonfun$alignWith$5(scala.Function0);
    Code:
       0: new           #45                 // class scalaz/$bslash$amp$div$This
       3: dup
       4: aload_0
       5: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: invokespecial #2441               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
      13: areturn

  public static final java.lang.Object $anonfun$alignWith$3(scala.Function1, scalaz.LazyOption, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     7
       5: aconst_null
       6: athrow
       7: aload_1
       8: instanceof    #2134               // class scalaz/LazySome
      11: ifeq          44
      14: aload_1
      15: checkcast     #2134               // class scalaz/LazySome
      18: invokevirtual #2137               // Method scalaz/LazySome.a:()Lscala/Function0;
      21: astore_3
      22: new           #37                 // class scalaz/$bslash$amp$div$Both
      25: dup
      26: aload_2
      27: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      32: aload_3
      33: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      38: invokespecial #2438               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      41: goto          76
      44: aload_1
      45: instanceof    #2170               // class scalaz/LazyNone
      48: ifeq          67
      51: new           #45                 // class scalaz/$bslash$amp$div$This
      54: dup
      55: aload_2
      56: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      61: invokespecial #2441               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
      64: goto          76
      67: new           #2180               // class scala/MatchError
      70: dup
      71: aload_1
      72: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      75: athrow
      76: invokeinterface #2212,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      81: areturn

  public static final scalaz.LazyOption $anonfun$alignWith$2(scala.Function1, scalaz.LazyOption, scala.Function0);
    Code:
       0: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
       3: pop
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokedynamic #2454,  0           // InvokeDynamic #10:apply:(Lscala/Function1;Lscalaz/LazyOption;Lscala/Function0;)Lscala/Function0;
      12: astore_3
      13: new           #2134               // class scalaz/LazySome
      16: dup
      17: aload_3
      18: invokespecial #2168               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      21: areturn

  public static final java.lang.Object $anonfun$alignWith$8(scala.Function1, scala.Function0);
    Code:
       0: aload_0
       1: new           #42                 // class scalaz/$bslash$amp$div$That
       4: dup
       5: aload_1
       6: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      11: invokespecial #2457               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
      14: invokeinterface #2212,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public static final scalaz.LazyOption $anonfun$alignWith$7(scala.Function1, scala.Function0);
    Code:
       0: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
       3: pop
       4: aload_0
       5: aload_1
       6: invokedynamic #2462,  0           // InvokeDynamic #11:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
      11: astore_2
      12: new           #2134               // class scalaz/LazySome
      15: dup
      16: aload_2
      17: invokespecial #2168               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      20: areturn

  public static final scalaz.LazyOption $anonfun$alignWith$9();
    Code:
       0: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
       3: invokevirtual #2466               // Method scalaz/LazyOption$.lazyNone:()Lscalaz/LazyOption;
       6: areturn

  public static final scalaz.LazyOption $anonfun$alignWith$6(scalaz.LazyOption, scala.Function1);
    Code:
       0: aload_0
       1: instanceof    #2134               // class scalaz/LazySome
       4: ifeq          40
       7: aload_0
       8: checkcast     #2134               // class scalaz/LazySome
      11: invokevirtual #2137               // Method scalaz/LazySome.a:()Lscala/Function0;
      14: astore_2
      15: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      18: pop
      19: aload_1
      20: aload_2
      21: invokedynamic #2462,  0           // InvokeDynamic #11:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
      26: astore_3
      27: new           #2134               // class scalaz/LazySome
      30: dup
      31: aload_3
      32: invokespecial #2168               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      35: aconst_null
      36: astore_3
      37: goto          69
      40: aload_0
      41: instanceof    #2170               // class scalaz/LazyNone
      44: ifeq          60
      47: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      50: pop
      51: getstatic     #2175               // Field scalaz/LazyNone$.MODULE$:Lscalaz/LazyNone$;
      54: invokevirtual #2178               // Method scalaz/LazyNone$.none:()Lscalaz/LazyNone;
      57: goto          69
      60: new           #2180               // class scala/MatchError
      63: dup
      64: aload_0
      65: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      68: athrow
      69: checkcast     #2185               // class scalaz/LazyOption
      72: areturn

  public static final scalaz.LazyOption $anonfun$alignWith$1(scala.Function1, scalaz.LazyOption, scalaz.LazyOption);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #2134               // class scalaz/LazySome
      10: ifeq          50
      13: aload_1
      14: checkcast     #2134               // class scalaz/LazySome
      17: invokevirtual #2137               // Method scalaz/LazySome.a:()Lscala/Function0;
      20: astore_3
      21: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      24: pop
      25: aload_0
      26: aload_2
      27: aload_3
      28: invokedynamic #2454,  0           // InvokeDynamic #10:apply:(Lscala/Function1;Lscalaz/LazyOption;Lscala/Function0;)Lscala/Function0;
      33: astore        4
      35: new           #2134               // class scalaz/LazySome
      38: dup
      39: aload         4
      41: invokespecial #2168               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      44: aconst_null
      45: astore        4
      47: goto          149
      50: aload_1
      51: instanceof    #2170               // class scalaz/LazyNone
      54: ifeq          140
      57: aload_2
      58: instanceof    #2134               // class scalaz/LazySome
      61: ifeq          102
      64: aload_2
      65: checkcast     #2134               // class scalaz/LazySome
      68: invokevirtual #2137               // Method scalaz/LazySome.a:()Lscala/Function0;
      71: astore        5
      73: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      76: pop
      77: aload_0
      78: aload         5
      80: invokedynamic #2462,  0           // InvokeDynamic #11:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
      85: astore        6
      87: new           #2134               // class scalaz/LazySome
      90: dup
      91: aload         6
      93: invokespecial #2168               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      96: aconst_null
      97: astore        6
      99: goto          131
     102: aload_2
     103: instanceof    #2170               // class scalaz/LazyNone
     106: ifeq          122
     109: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
     112: pop
     113: getstatic     #2175               // Field scalaz/LazyNone$.MODULE$:Lscalaz/LazyNone$;
     116: invokevirtual #2178               // Method scalaz/LazyNone$.none:()Lscalaz/LazyNone;
     119: goto          131
     122: new           #2180               // class scala/MatchError
     125: dup
     126: aload_2
     127: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     130: athrow
     131: checkcast     #2185               // class scalaz/LazyOption
     134: aconst_null
     135: astore        5
     137: goto          149
     140: new           #2180               // class scala/MatchError
     143: dup
     144: aload_1
     145: invokespecial #2183               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     148: athrow
     149: checkcast     #2185               // class scalaz/LazyOption
     152: areturn

  public static final scalaz.$bslash$div $anonfun$pextract$1(scala.Function0);
    Code:
       0: getstatic     #2299               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
       3: pop
       4: aload_0
       5: invokeinterface #2142,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: astore_1
      11: new           #2292               // class scalaz/$bslash$div$minus
      14: dup
      15: aload_1
      16: invokespecial #2305               // Method scalaz/$bslash$div$minus."<init>":(Ljava/lang/Object;)V
      19: areturn

  public static final scalaz.$bslash$div $anonfun$pextract$2();
    Code:
       0: getstatic     #2282               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
       3: pop
       4: getstatic     #2164               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
       7: pop
       8: getstatic     #2175               // Field scalaz/LazyNone$.MODULE$:Lscalaz/LazyNone$;
      11: invokevirtual #2178               // Method scalaz/LazyNone$.none:()Lscalaz/LazyNone;
      14: astore_0
      15: new           #2275               // class scalaz/$minus$bslash$div
      18: dup
      19: aload_0
      20: invokespecial #2290               // Method scalaz/$minus$bslash$div."<init>":(Ljava/lang/Object;)V
      23: areturn

  public static final java.lang.Object $anonfun$tailrecM$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public scalaz.LazyOptionInstances$$anon$1(scalaz.LazyOptionInstances);
    Code:
       0: aload_0
       1: invokespecial #2476               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2480               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #2483               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #2486               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      16: aload_0
      17: invokestatic  #2489               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      20: aload_0
      21: invokestatic  #2492               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      24: aload_0
      25: invokestatic  #2495               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      28: aload_0
      29: invokestatic  #2498               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      32: aload_0
      33: invokestatic  #2501               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      36: aload_0
      37: invokestatic  #2504               // InterfaceMethod scalaz/Monad.$init$:(Lscalaz/Monad;)V
      40: aload_0
      41: invokestatic  #2507               // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      44: aload_0
      45: invokestatic  #2510               // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      48: aload_0
      49: invokestatic  #2513               // InterfaceMethod scalaz/ApplicativePlus.$init$:(Lscalaz/ApplicativePlus;)V
      52: aload_0
      53: invokestatic  #2516               // InterfaceMethod scalaz/MonadPlus.$init$:(Lscalaz/MonadPlus;)V
      56: aload_0
      57: invokestatic  #2519               // InterfaceMethod scalaz/InvariantAlt.$init$:(Lscalaz/InvariantAlt;)V
      60: aload_0
      61: invokestatic  #2522               // InterfaceMethod scalaz/Alt.$init$:(Lscalaz/Alt;)V
      64: aload_0
      65: invokestatic  #2525               // InterfaceMethod scalaz/BindRec.$init$:(Lscalaz/BindRec;)V
      68: aload_0
      69: invokestatic  #2528               // InterfaceMethod scalaz/Cozip.$init$:(Lscalaz/Cozip;)V
      72: aload_0
      73: invokestatic  #2531               // InterfaceMethod scalaz/Zip.$init$:(Lscalaz/Zip;)V
      76: aload_0
      77: invokestatic  #2534               // InterfaceMethod scalaz/Unzip.$init$:(Lscalaz/Unzip;)V
      80: aload_0
      81: invokestatic  #2537               // InterfaceMethod scalaz/Align.$init$:(Lscalaz/Align;)V
      84: aload_0
      85: invokestatic  #2540               // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      88: aload_0
      89: invokestatic  #2543               // InterfaceMethod scalaz/Optional.$init$:(Lscalaz/Optional;)V
      92: aload_0
      93: invokestatic  #2546               // InterfaceMethod scalaz/IsEmpty.$init$:(Lscalaz/IsEmpty;)V
      96: invokestatic  #2551               // Method scala/runtime/Statics.releaseFence:()V
      99: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2564,  0           // InvokeDynamic #12:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
