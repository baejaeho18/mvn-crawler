Compiled from "Coyoneda.scala"
public final class scalaz.CoyonedaInstances5$$anon$15 implements scalaz.IsomorphismPlusEmpty<?, F> {
  private scalaz.syntax.PlusEmptySyntax<?> plusEmptySyntax;

  private scalaz.syntax.PlusSyntax<?> plusSyntax;

  private final scalaz.PlusEmpty evidence$10$1;

  private final scalaz.Functor evidence$11$1;

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokestatic  #46                 // InterfaceMethod scalaz/IsomorphismPlusEmpty.empty$:(Lscalaz/IsomorphismPlusEmpty;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #58                 // InterfaceMethod scalaz/IsomorphismPlus.plus$:(Lscalaz/IsomorphismPlus;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #68                 // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #73                 // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #80                 // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #87                 // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<scalaz.Coyoneda<F, A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #94                 // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<?>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #101                // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S$, A> scalaz.Maybe<scalaz.Coyoneda<F, A>> unfoldlPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<S$, scalaz.Coyoneda<F, A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #108                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S$, A> scalaz.Maybe<scalaz.Coyoneda<F, A>> unfoldrPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scalaz.Coyoneda<F, A>, S$>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #113                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #118                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.Coyoneda<F, A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #126                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<?>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #133                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public scalaz.syntax.PlusEmptySyntax<?> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #137                // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #137                // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<?> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #145                // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #145                // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.PlusEmpty<F> G();
    Code:
       0: getstatic     #156                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #158                // Field evidence$10$1:Lscalaz/PlusEmpty;
       7: invokevirtual #162                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #29                 // class scalaz/PlusEmpty
      13: areturn

  public scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, ?, F> iso();
    Code:
       0: getstatic     #170                // Field scalaz/Coyoneda$.MODULE$:Lscalaz/Coyoneda$;
       3: pop
       4: aload_0
       5: getfield      #172                // Field evidence$11$1:Lscalaz/Functor;
       8: astore_1
       9: new           #15                 // class scalaz/Coyoneda$$anon$4
      12: dup
      13: aload_1
      14: invokespecial #176                // Method scalaz/Coyoneda$$anon$4."<init>":(Lscalaz/Functor;)V
      17: areturn

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #180                // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.Plus G();
    Code:
       0: aload_0
       1: invokevirtual #182                // Method G:()Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.CoyonedaInstances5$$anon$15(scalaz.CoyonedaInstances5, scalaz.PlusEmpty, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #158                // Field evidence$10$1:Lscalaz/PlusEmpty;
       5: aload_0
       6: aload_3
       7: putfield      #172                // Field evidence$11$1:Lscalaz/Functor;
      10: aload_0
      11: invokespecial #187                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #191                // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      18: aload_0
      19: invokestatic  #194                // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      22: invokestatic  #199                // Method scala/runtime/Statics.releaseFence:()V
      25: return
}
