Compiled from "LazyTuple.scala"
public final class scalaz.LazyTuple3Instances$$anon$19 implements scalaz.LazyTuple3Order<A1, A2, A3> {
  private scalaz.syntax.OrderSyntax<scalaz.LazyTuple3<A1, A2, A3>> orderSyntax;

  private scalaz.syntax.EqualSyntax<scalaz.LazyTuple3<A1, A2, A3>> equalSyntax;

  private final scalaz.Order A1$9;

  private final scalaz.Order A2$8;

  private final scalaz.Order A3$4;

  public scalaz.Ordering order(scalaz.LazyTuple3<A1, A2, A3>, scalaz.LazyTuple3<A1, A2, A3>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #42                 // InterfaceMethod scalaz/LazyTuple3Order.order$:(Lscalaz/LazyTuple3Order;Lscalaz/LazyTuple3;Lscalaz/LazyTuple3;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(scalaz.LazyTuple3<A1, A2, A3>, scalaz.LazyTuple3<A1, A2, A3>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #54                 // InterfaceMethod scalaz/LazyTuple3Equal.equal$:(Lscalaz/LazyTuple3Equal;Lscalaz/LazyTuple3;Lscalaz/LazyTuple3;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #62                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #69                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #73                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #77                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #81                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #87                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #91                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #97                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scalaz.LazyTuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #105                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scalaz.LazyTuple3<A1, A2, A3>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #113                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scalaz.LazyTuple3<A1, A2, A3>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #120                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scalaz.LazyTuple3<A1, A2, A3>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #127                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #133                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.LazyTuple3<A1, A2, A3>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #140                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<scalaz.LazyTuple3<A1, A2, A3>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #144                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scalaz.LazyTuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #144                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scalaz.LazyTuple3<A1, A2, A3>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #152                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.LazyTuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #152                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<A1> _1();
    Code:
       0: aload_0
       1: getfield      #159                // Field A1$9:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A2> _2();
    Code:
       0: aload_0
       1: getfield      #163                // Field A2$8:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A3> _3();
    Code:
       0: aload_0
       1: getfield      #167                // Field A3$4:Lscalaz/Order;
       4: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #170                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #172                // class scalaz/LazyTuple3
       5: aload_2
       6: checkcast     #172                // class scalaz/LazyTuple3
       9: invokevirtual #174                // Method equal:(Lscalaz/LazyTuple3;Lscalaz/LazyTuple3;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #172                // class scalaz/LazyTuple3
       5: aload_2
       6: checkcast     #172                // class scalaz/LazyTuple3
       9: invokevirtual #176                // Method order:(Lscalaz/LazyTuple3;Lscalaz/LazyTuple3;)Lscalaz/Ordering;
      12: areturn

  public scalaz.Equal _3();
    Code:
       0: aload_0
       1: invokevirtual #179                // Method _3:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _2();
    Code:
       0: aload_0
       1: invokevirtual #181                // Method _2:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _1();
    Code:
       0: aload_0
       1: invokevirtual #183                // Method _1:()Lscalaz/Order;
       4: areturn

  public scalaz.LazyTuple3Instances$$anon$19(scalaz.LazyTuple3Instances, scalaz.Order, scalaz.Order, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #159                // Field A1$9:Lscalaz/Order;
       5: aload_0
       6: aload_3
       7: putfield      #163                // Field A2$8:Lscalaz/Order;
      10: aload_0
      11: aload         4
      13: putfield      #167                // Field A3$4:Lscalaz/Order;
      16: aload_0
      17: invokespecial #189                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #193                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      24: aload_0
      25: invokestatic  #196                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      28: invokestatic  #201                // Method scala/runtime/Statics.releaseFence:()V
      31: return
}
