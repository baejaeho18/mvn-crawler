Compiled from "Profunctor.scala"
public final class scalaz.Profunctor$$anon$8 implements scalaz.Profunctor<?> {
  private scalaz.syntax.ProfunctorSyntax<?> profunctorSyntax;

  private final scalaz.Functor evidence$2$1;

  public <A, B, C, D> java.lang.Object dimap(java.lang.Object, scala.Function1<C, A>, scala.Function1<B, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #41                 // InterfaceMethod scalaz/Profunctor.dimap$:(Lscalaz/Profunctor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scalaz.InvariantFunctor<?> invariantFunctor();
    Code:
       0: aload_0
       1: invokestatic  #52                 // InterfaceMethod scalaz/Profunctor.invariantFunctor$:(Lscalaz/Profunctor;)Lscalaz/InvariantFunctor;
       4: areturn

  public <C> scalaz.Functor<?> covariantInstance();
    Code:
       0: aload_0
       1: invokestatic  #59                 // InterfaceMethod scalaz/Profunctor.covariantInstance$:(Lscalaz/Profunctor;)Lscalaz/Functor;
       4: areturn

  public <C> scalaz.Contravariant<?> contravariantInstance();
    Code:
       0: aload_0
       1: invokestatic  #66                 // InterfaceMethod scalaz/Profunctor.contravariantInstance$:(Lscalaz/Profunctor;)Lscalaz/Contravariant;
       4: areturn

  public scalaz.Profunctor<?>.ProfunctorLaw profunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #73                 // InterfaceMethod scalaz/Profunctor.profunctorLaw$:(Lscalaz/Profunctor;)Lscalaz/Profunctor$ProfunctorLaw;
       4: areturn

  public scalaz.syntax.ProfunctorSyntax<?> profunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #77                 // Field profunctorSyntax:Lscalaz/syntax/ProfunctorSyntax;
       4: areturn

  public void scalaz$Profunctor$_setter_$profunctorSyntax_$eq(scalaz.syntax.ProfunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #77                 // Field profunctorSyntax:Lscalaz/syntax/ProfunctorSyntax;
       5: return

  public <A, B, C> java.lang.Object mapfst(java.lang.Object, scala.Function1<C, A>);
    Code:
       0: getstatic     #89                 // Field scalaz/Profunctor$.MODULE$:Lscalaz/Profunctor$;
       3: invokevirtual #93                 // Method scalaz/Profunctor$.DownStar:()Lscalaz/Tag$TagOf;
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokedynamic #112,  0            // InvokeDynamic #0:apply:(Lscalaz/Profunctor$$anon$8;Ljava/lang/Object;Lscala/Function1;)Lscala/Function1;
      14: astore_3
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: getstatic     #117                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      23: invokevirtual #121                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      26: aload_3
      27: invokevirtual #125                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      30: areturn

  public <A, B, C> java.lang.Object mapsnd(java.lang.Object, scala.Function1<B, C>);
    Code:
       0: getstatic     #89                 // Field scalaz/Profunctor$.MODULE$:Lscalaz/Profunctor$;
       3: invokevirtual #93                 // Method scalaz/Profunctor$.DownStar:()Lscalaz/Tag$TagOf;
       6: aload_2
       7: getstatic     #117                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      10: invokevirtual #121                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      13: aload_1
      14: invokevirtual #133                // Method scalaz/TagKind.unwrap:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #128                // class scala/Function1
      20: invokeinterface #137,  2          // InterfaceMethod scala/Function1.compose:(Lscala/Function1;)Lscala/Function1;
      25: astore_3
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: getstatic     #117                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      34: invokevirtual #121                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      37: aload_3
      38: invokevirtual #125                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      41: areturn

  public static final java.lang.Object $anonfun$mapfst$1(scalaz.Profunctor$$anon$8, java.lang.Object, scala.Function1, java.lang.Object);
    Code:
       0: getstatic     #117                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: invokevirtual #121                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
       6: aload_1
       7: invokevirtual #133                // Method scalaz/TagKind.unwrap:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #128                // class scala/Function1
      13: getstatic     #146                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
      16: pop
      17: aload_0
      18: getfield      #148                // Field evidence$2$1:Lscalaz/Functor;
      21: aload_3
      22: aload_2
      23: invokeinterface #153,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      28: invokeinterface #154,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      33: areturn

  public scalaz.Profunctor$$anon$8(scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #148                // Field evidence$2$1:Lscalaz/Functor;
       5: aload_0
       6: invokespecial #159                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #163                // InterfaceMethod scalaz/Profunctor.$init$:(Lscalaz/Profunctor;)V
      13: invokestatic  #168                // Method scala/runtime/Statics.releaseFence:()V
      16: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #180,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
