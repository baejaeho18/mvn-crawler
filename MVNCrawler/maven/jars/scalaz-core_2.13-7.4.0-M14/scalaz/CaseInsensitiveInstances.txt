Compiled from "CaseInsensitive.scala"
public abstract class scalaz.CaseInsensitiveInstances {
  public <A> scalaz.Monoid<scalaz.CaseInsensitive<A>> CaseInsensitiveMonoid(scalaz.FoldCase<A>, scalaz.Monoid<A>);
    Code:
       0: new           #10                 // class scalaz/CaseInsensitiveInstances$$anon$2
       3: dup
       4: aconst_null
       5: aload_2
       6: invokespecial #25                 // Method scalaz/CaseInsensitiveInstances$$anon$2."<init>":(Lscalaz/CaseInsensitiveInstances;Lscalaz/Monoid;)V
       9: areturn

  public <A> scalaz.Equal<scalaz.CaseInsensitive<A>> CaseInsensitiveEqual(scalaz.Equal<A>);
    Code:
       0: new           #12                 // class scalaz/CaseInsensitiveInstances$$anonfun$CaseInsensitiveEqual$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #36                 // Method scalaz/CaseInsensitiveInstances$$anonfun$CaseInsensitiveEqual$2."<init>":(Lscalaz/CaseInsensitiveInstances;Lscalaz/Equal;)V
       9: areturn

  public <A> scalaz.Order<scalaz.CaseInsensitive<A>> CaseInsensitiveOrder(scalaz.Order<A>);
    Code:
       0: new           #14                 // class scalaz/CaseInsensitiveInstances$$anonfun$CaseInsensitiveOrder$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #44                 // Method scalaz/CaseInsensitiveInstances$$anonfun$CaseInsensitiveOrder$2."<init>":(Lscalaz/CaseInsensitiveInstances;Lscalaz/Order;)V
       9: areturn

  public <A> scalaz.Show<scalaz.CaseInsensitive<A>> CaseInsensitiveShow(scalaz.Show<A>);
    Code:
       0: new           #16                 // class scalaz/CaseInsensitiveInstances$$anonfun$CaseInsensitiveShow$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #52                 // Method scalaz/CaseInsensitiveInstances$$anonfun$CaseInsensitiveShow$2."<init>":(Lscalaz/CaseInsensitiveInstances;Lscalaz/Show;)V
       9: areturn

  public static final boolean scalaz$CaseInsensitiveInstances$$$anonfun$CaseInsensitiveEqual$1(scalaz.CaseInsensitive, scalaz.CaseInsensitive, scalaz.Equal);
    Code:
       0: getstatic     #64                 // Field scalaz/Equal$.MODULE$:Lscalaz/Equal$;
       3: pop
       4: aload_2
       5: aload_0
       6: invokevirtual #70                 // Method scalaz/CaseInsensitive.foldedCase:()Ljava/lang/Object;
       9: aload_1
      10: invokevirtual #70                 // Method scalaz/CaseInsensitive.foldedCase:()Ljava/lang/Object;
      13: invokeinterface #76,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      18: ireturn

  public static final scalaz.Ordering scalaz$CaseInsensitiveInstances$$$anonfun$CaseInsensitiveOrder$1(scalaz.CaseInsensitive, scalaz.CaseInsensitive, scalaz.Order);
    Code:
       0: getstatic     #85                 // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: pop
       4: aload_2
       5: aload_0
       6: invokevirtual #70                 // Method scalaz/CaseInsensitive.foldedCase:()Ljava/lang/Object;
       9: aload_1
      10: invokevirtual #70                 // Method scalaz/CaseInsensitive.foldedCase:()Ljava/lang/Object;
      13: invokeinterface #91,  3           // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      18: areturn

  public static final scalaz.Cord scalaz$CaseInsensitiveInstances$$$anonfun$CaseInsensitiveShow$1(scalaz.CaseInsensitive, scalaz.Show);
    Code:
       0: getstatic     #99                 // Field scalaz/Show$.MODULE$:Lscalaz/Show$;
       3: pop
       4: aload_1
       5: aload_0
       6: invokevirtual #102                // Method scalaz/CaseInsensitive.original:()Ljava/lang/Object;
       9: invokeinterface #108,  2          // InterfaceMethod scalaz/Show.show:(Ljava/lang/Object;)Lscalaz/Cord;
      14: areturn

  public scalaz.CaseInsensitiveInstances();
    Code:
       0: aload_0
       1: invokespecial #111                // Method java/lang/Object."<init>":()V
       4: return
}
