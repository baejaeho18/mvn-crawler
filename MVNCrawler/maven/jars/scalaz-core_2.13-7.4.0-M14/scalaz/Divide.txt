Compiled from "Divide.scala"
public interface scalaz.Divide<F> extends scalaz.Contravariant<F> {
  public static <F, G> scalaz.Divide<F> fromIso(scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, F, G>, scalaz.Divide<G>);
    Code:
       0: getstatic     #41                 // Field scalaz/Divide$.MODULE$:Lscalaz/Divide$;
       3: pop
       4: new           #22                 // class scalaz/Divide$$anon$3
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #45                 // Method scalaz/Divide$$anon$3."<init>":(Lscalaz/Divide;Lscalaz/Isomorphisms$Iso2;)V
      13: areturn

  public static <F> scalaz.Divide<F> apply(scalaz.Divide<F>);
    Code:
       0: getstatic     #41                 // Field scalaz/Divide$.MODULE$:Lscalaz/Divide$;
       3: pop
       4: aload_0
       5: areturn

  public abstract void scalaz$Divide$_setter_$divideSyntax_$eq(scalaz.syntax.DivideSyntax<F>);

  public static java.lang.Object divide$(scalaz.Divide, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #65                 // InterfaceMethod divide:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public default <A, B, C> F divide(scala.Function0<F>, scala.Function0<F>, scala.Function1<C, scala.Tuple2<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #71,  4           // InterfaceMethod divide2:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public static java.lang.Object divide1$(scalaz.Divide, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #79                 // InterfaceMethod divide1:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <A1, Z> F divide1(F, scala.Function1<Z, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #84,  3           // InterfaceMethod contramap:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       8: areturn

  public abstract <A1, A2, Z> F divide2(scala.Function0<F>, scala.Function0<F>, scala.Function1<Z, scala.Tuple2<A1, A2>>);

  public static java.lang.Object divide3$(scalaz.Divide, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #93                 // InterfaceMethod divide3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public default <A1, A2, A3, Z> F divide3(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function1<Z, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #112,  0            // InvokeDynamic #0:apply:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;)Lscala/Function0;
       9: aload_3
      10: aload         4
      12: invokedynamic #125,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
      17: invokeinterface #71,  4           // InterfaceMethod divide2:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      22: areturn

  public static java.lang.Object divide4$(scalaz.Divide, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #132                // InterfaceMethod divide4:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public default <A1, A2, A3, A4, Z> F divide4(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function1<Z, scala.Tuple4<A1, A2, A3, A4>>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #138,  0            // InvokeDynamic #2:apply:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;)Lscala/Function0;
       9: aload_0
      10: aload_3
      11: aload         4
      13: invokedynamic #143,  0            // InvokeDynamic #3:apply:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;)Lscala/Function0;
      18: aload         5
      20: invokedynamic #148,  0            // InvokeDynamic #4:apply:(Lscala/Function1;)Lscala/Function1;
      25: invokeinterface #71,  4           // InterfaceMethod divide2:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      30: areturn

  public static java.lang.Object tuple2$(scalaz.Divide, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #153                // InterfaceMethod tuple2:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public default <A1, A2> F tuple2(scala.Function0<F>, scala.Function0<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #163,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
       8: invokeinterface #71,  4           // InterfaceMethod divide2:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object dividing1$(scalaz.Divide, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #169                // InterfaceMethod dividing1:(Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public default <A1, Z> F dividing1(scala.Function1<Z, A1>, F);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokeinterface #84,  3           // InterfaceMethod contramap:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       8: areturn

  public static java.lang.Object dividing2$(scalaz.Divide, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #176                // InterfaceMethod dividing2:(Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public default <A1, A2, Z> F dividing2(scala.Function1<Z, scala.Tuple2<A1, A2>>, F, F);
    Code:
       0: aload_0
       1: aload_2
       2: invokedynamic #184,  0            // InvokeDynamic #6:apply:(Ljava/lang/Object;)Lscala/Function0;
       7: aload_3
       8: invokedynamic #189,  0            // InvokeDynamic #7:apply:(Ljava/lang/Object;)Lscala/Function0;
      13: aload_1
      14: invokeinterface #71,  4           // InterfaceMethod divide2:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      19: areturn

  public static java.lang.Object dividing3$(scalaz.Divide, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #195                // InterfaceMethod dividing3:(Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public default <A1, A2, A3, Z> F dividing3(scala.Function1<Z, scala.Tuple3<A1, A2, A3>>, F, F, F);
    Code:
       0: aload_0
       1: aload_2
       2: invokedynamic #201,  0            // InvokeDynamic #8:apply:(Ljava/lang/Object;)Lscala/Function0;
       7: aload_3
       8: invokedynamic #206,  0            // InvokeDynamic #9:apply:(Ljava/lang/Object;)Lscala/Function0;
      13: aload         4
      15: invokedynamic #211,  0            // InvokeDynamic #10:apply:(Ljava/lang/Object;)Lscala/Function0;
      20: aload_1
      21: invokeinterface #93,  5           // InterfaceMethod divide3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      26: areturn

  public static java.lang.Object dividing4$(scalaz.Divide, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #217                // InterfaceMethod dividing4:(Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public default <A1, A2, A3, A4, Z> F dividing4(scala.Function1<Z, scala.Tuple4<A1, A2, A3, A4>>, F, F, F, F);
    Code:
       0: aload_0
       1: aload_2
       2: invokedynamic #223,  0            // InvokeDynamic #11:apply:(Ljava/lang/Object;)Lscala/Function0;
       7: aload_3
       8: invokedynamic #228,  0            // InvokeDynamic #12:apply:(Ljava/lang/Object;)Lscala/Function0;
      13: aload         4
      15: invokedynamic #233,  0            // InvokeDynamic #13:apply:(Ljava/lang/Object;)Lscala/Function0;
      20: aload         5
      22: invokedynamic #238,  0            // InvokeDynamic #14:apply:(Ljava/lang/Object;)Lscala/Function0;
      27: aload_1
      28: invokeinterface #132,  6          // InterfaceMethod divide4:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      33: areturn

  public static scalaz.Divide$DivideLaw divideLaw$(scalaz.Divide);
    Code:
       0: aload_0
       1: invokespecial #244                // InterfaceMethod divideLaw:()Lscalaz/Divide$DivideLaw;
       4: areturn

  public default scalaz.Divide<F>.DivideLaw divideLaw();
    Code:
       0: new           #18                 // class scalaz/Divide$$anon$1
       3: dup
       4: aload_0
       5: invokespecial #248                // Method scalaz/Divide$$anon$1."<init>":(Lscalaz/Divide;)V
       8: areturn

  public abstract scalaz.syntax.DivideSyntax<F> divideSyntax();

  public static java.lang.Object $anonfun$divide3$1(scalaz.Divide, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #153,  3          // InterfaceMethod tuple2:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       8: areturn

  public static scala.Tuple2 $anonfun$divide3$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #259,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #261                // class scala/Tuple3
      10: astore_2
      11: new           #263                // class scala/Tuple2
      14: dup
      15: new           #263                // class scala/Tuple2
      18: dup
      19: aload_2
      20: invokevirtual #266                // Method scala/Tuple3._1:()Ljava/lang/Object;
      23: aload_2
      24: invokevirtual #269                // Method scala/Tuple3._2:()Ljava/lang/Object;
      27: invokespecial #272                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      30: aload_2
      31: invokevirtual #275                // Method scala/Tuple3._3:()Ljava/lang/Object;
      34: invokespecial #272                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      37: areturn

  public static java.lang.Object $anonfun$divide4$1(scalaz.Divide, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #153,  3          // InterfaceMethod tuple2:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       8: areturn

  public static java.lang.Object $anonfun$divide4$2(scalaz.Divide, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #153,  3          // InterfaceMethod tuple2:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       8: areturn

  public static scala.Tuple2 $anonfun$divide4$3(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #259,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #284                // class scala/Tuple4
      10: astore_2
      11: new           #263                // class scala/Tuple2
      14: dup
      15: new           #263                // class scala/Tuple2
      18: dup
      19: aload_2
      20: invokevirtual #285                // Method scala/Tuple4._1:()Ljava/lang/Object;
      23: aload_2
      24: invokevirtual #286                // Method scala/Tuple4._2:()Ljava/lang/Object;
      27: invokespecial #272                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      30: new           #263                // class scala/Tuple2
      33: dup
      34: aload_2
      35: invokevirtual #287                // Method scala/Tuple4._3:()Ljava/lang/Object;
      38: aload_2
      39: invokevirtual #290                // Method scala/Tuple4._4:()Ljava/lang/Object;
      42: invokespecial #272                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      45: invokespecial #272                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      48: areturn

  public static scala.Tuple2 $anonfun$tuple2$1(scala.Tuple2);
    Code:
       0: getstatic     #297                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokevirtual #300                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #263                // class scala/Tuple2
      10: areturn

  public static java.lang.Object $anonfun$dividing2$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$dividing2$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$dividing3$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$dividing3$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$dividing3$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$dividing4$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$dividing4$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$dividing4$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$dividing4$4(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static void $init$(scalaz.Divide);
    Code:
       0: aload_0
       1: new           #20                 // class scalaz/Divide$$anon$2
       4: dup
       5: aload_0
       6: invokespecial #312                // Method scalaz/Divide$$anon$2."<init>":(Lscalaz/Divide;)V
       9: invokeinterface #314,  2          // InterfaceMethod scalaz$Divide$_setter_$divideSyntax_$eq:(Lscalaz/syntax/DivideSyntax;)V
      14: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #326,  0            // InvokeDynamic #15:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
