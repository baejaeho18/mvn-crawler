Compiled from "MonadTrans.scala"
public interface scalaz.MonadTrans$MonadTransLaw {
  public static boolean identity$(scalaz.MonadTrans$MonadTransLaw, java.lang.Object, scalaz.Monad, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #23                 // InterfaceMethod identity:(Ljava/lang/Object;Lscalaz/Monad;Lscalaz/Equal;)Z
       7: ireturn

  public default <G, A> boolean identity(A, scalaz.Monad<G>, scalaz.Equal<F>);
    Code:
       0: aload_3
       1: aload_0
       2: invokeinterface #32,  1           // InterfaceMethod scalaz$MonadTrans$MonadTransLaw$$$outer:()Lscalaz/MonadTrans;
       7: aload_2
       8: aload_1
       9: invokedynamic #51,  0             // InvokeDynamic #0:apply:(Ljava/lang/Object;)Lscala/Function0;
      14: invokeinterface #57,  2           // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      19: aload_2
      20: invokeinterface #61,  3           // InterfaceMethod scalaz/MonadTrans.liftM:(Ljava/lang/Object;Lscalaz/Monad;)Ljava/lang/Object;
      25: getstatic     #67                 // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      28: pop
      29: aload_0
      30: invokeinterface #32,  1           // InterfaceMethod scalaz$MonadTrans$MonadTransLaw$$$outer:()Lscalaz/MonadTrans;
      35: aload_2
      36: invokeinterface #70,  2           // InterfaceMethod scalaz/MonadTrans.apply:(Lscalaz/Monad;)Lscalaz/Monad;
      41: aload_1
      42: invokedynamic #75,  0             // InvokeDynamic #1:apply:(Ljava/lang/Object;)Lscala/Function0;
      47: invokeinterface #57,  2           // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      52: invokeinterface #81,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      57: ireturn

  public static boolean composition$(scalaz.MonadTrans$MonadTransLaw, java.lang.Object, scala.Function1, scalaz.Monad, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #91                 // InterfaceMethod composition:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;Lscalaz/Equal;)Z
       9: ireturn

  public default <G, A, B> boolean composition(G, scala.Function1<A, G>, scalaz.Monad<G>, scalaz.Equal<F>);
    Code:
       0: aload         4
       2: aload_0
       3: invokeinterface #32,  1           // InterfaceMethod scalaz$MonadTrans$MonadTransLaw$$$outer:()Lscalaz/MonadTrans;
       8: getstatic     #67                 // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      11: pop
      12: aload_3
      13: aload_1
      14: aload_2
      15: invokeinterface #97,  3           // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: aload_3
      21: invokeinterface #61,  3           // InterfaceMethod scalaz/MonadTrans.liftM:(Ljava/lang/Object;Lscalaz/Monad;)Ljava/lang/Object;
      26: getstatic     #67                 // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      29: pop
      30: aload_0
      31: invokeinterface #32,  1           // InterfaceMethod scalaz$MonadTrans$MonadTransLaw$$$outer:()Lscalaz/MonadTrans;
      36: aload_3
      37: invokeinterface #70,  2           // InterfaceMethod scalaz/MonadTrans.apply:(Lscalaz/Monad;)Lscalaz/Monad;
      42: aload_0
      43: invokeinterface #32,  1           // InterfaceMethod scalaz$MonadTrans$MonadTransLaw$$$outer:()Lscalaz/MonadTrans;
      48: aload_1
      49: aload_3
      50: invokeinterface #61,  3           // InterfaceMethod scalaz/MonadTrans.liftM:(Ljava/lang/Object;Lscalaz/Monad;)Ljava/lang/Object;
      55: aload_0
      56: aload_2
      57: aload_3
      58: invokedynamic #106,  0            // InvokeDynamic #2:apply:(Lscalaz/MonadTrans$MonadTransLaw;Lscala/Function1;Lscalaz/Monad;)Lscala/Function1;
      63: invokeinterface #97,  3           // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      68: invokeinterface #81,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      73: ireturn

  public abstract scalaz.MonadTrans scalaz$MonadTrans$MonadTransLaw$$$outer();

  public static java.lang.Object $anonfun$identity$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$identity$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$composition$1(scalaz.MonadTrans$MonadTransLaw, scala.Function1, scalaz.Monad, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod scalaz$MonadTrans$MonadTransLaw$$$outer:()Lscalaz/MonadTrans;
       6: aload_1
       7: aload_3
       8: invokeinterface #113,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: aload_2
      14: invokeinterface #61,  3           // InterfaceMethod scalaz/MonadTrans.liftM:(Ljava/lang/Object;Lscalaz/Monad;)Ljava/lang/Object;
      19: areturn

  public static void $init$(scalaz.MonadTrans<F>.MonadTransLaw);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #128,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
