Compiled from "EitherT.scala"
public final class scalaz.EitherT$ extends scalaz.EitherTInstances implements java.io.Serializable {
  public static final scalaz.EitherT$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scalaz/EitherT$
       3: dup
       4: invokespecial #28                 // Method "<init>":()V
       7: putstatic     #30                 // Field MODULE$:Lscalaz/EitherT$;
      10: return

  public <A, F, B> scalaz.EitherT<A, F, B> eitherT(F);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: aload_1
       5: invokespecial #37                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
       8: areturn

  public <A, F, B> scalaz.EitherT<A, F, B> either(scalaz.$bslash$div<A, B>, scalaz.Applicative<F>);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: getstatic     #49                 // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       7: pop
       8: aload_2
       9: aload_1
      10: invokedynamic #71,  0             // InvokeDynamic #0:apply:(Lscalaz/$bslash$div;)Lscala/Function0;
      15: invokeinterface #77,  2           // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      20: invokespecial #37                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      23: areturn

  public <A, F, B> scalaz.EitherT<A, F, B> leftT(F, scalaz.Functor<F>);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: getstatic     #89                 // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       7: pop
       8: aload_2
       9: aload_1
      10: invokedynamic #100,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      15: invokeinterface #106,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokespecial #37                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      23: areturn

  public <A, F, B> scalaz.EitherT<A, F, B> rightT(F, scalaz.Functor<F>);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: getstatic     #89                 // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       7: pop
       8: aload_2
       9: aload_1
      10: invokedynamic #115,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      15: invokeinterface #106,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokespecial #37                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      23: areturn

  public <A, F, B> scalaz.EitherT<A, F, B> left(A, scalaz.Applicative<F>);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: getstatic     #49                 // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       7: pop
       8: aload_2
       9: aload_1
      10: invokedynamic #126,  0            // InvokeDynamic #3:apply:(Ljava/lang/Object;)Lscala/Function0;
      15: invokeinterface #77,  2           // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      20: invokespecial #37                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      23: areturn

  public <A, F, B> scalaz.EitherT<A, F, B> right(B, scalaz.Applicative<F>);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: getstatic     #49                 // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       7: pop
       8: aload_2
       9: aload_1
      10: invokedynamic #135,  0            // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
      15: invokeinterface #77,  2           // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      20: invokespecial #37                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      23: areturn

  public <A, F, B> scalaz.EitherT<A, F, B> pure(B, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #139                // Method right:(Ljava/lang/Object;Lscalaz/Applicative;)Lscalaz/EitherT;
       6: areturn

  public <F> scalaz.EitherT$FromDisjunctionAux<F> fromDisjunction();
    Code:
       0: new           #18                 // class scalaz/EitherT$FromDisjunctionAux
       3: dup
       4: invokespecial #143                // Method scalaz/EitherT$FromDisjunctionAux."<init>":()V
       7: areturn

  public <FAB, AB, A0, B0> scalaz.EitherT<A0, java.lang.Object, B0> eitherTU(FAB, scalaz.Unapply<scalaz.Functor, FAB>, scalaz.Unapply2<scalaz.Bifunctor, AB>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, AB, scalaz.$bslash$div<A0, B0>>);
    Code:
       0: aload         4
       2: aload_2
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_2
       9: invokeinterface #156,  1          // InterfaceMethod scalaz/Unapply.leibniz:()Lscalaz/Leibniz;
      14: dup
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: aload_1
      21: invokevirtual #161                // Method scalaz/Leibniz.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      24: invokevirtual #161                // Method scalaz/Leibniz.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      27: astore        5
      29: new           #20                 // class scalaz/EitherT
      32: dup
      33: aload         5
      35: invokespecial #37                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      38: areturn

  public <F, W, A> scalaz.EitherTMonadTell<F, W, A> monadTell(scalaz.MonadTell<F, W>);
    Code:
       0: new           #14                 // class scalaz/EitherT$$anon$1
       3: dup
       4: aload_1
       5: invokespecial #176                // Method scalaz/EitherT$$anon$1."<init>":(Lscalaz/MonadTell;)V
       8: areturn

  public <F, W, A> scalaz.EitherTMonadListen<F, W, A> monadListen(scalaz.MonadListen<F, W>);
    Code:
       0: new           #16                 // class scalaz/EitherT$$anon$2
       3: dup
       4: aload_1
       5: invokespecial #184                // Method scalaz/EitherT$$anon$2."<init>":(Lscalaz/MonadListen;)V
       8: areturn

  public <B> boolean leftU();
    Code:
       0: iconst_1
       1: ireturn

  public <A> boolean rightU();
    Code:
       0: iconst_1
       1: ireturn

  public <F, A, B> scalaz.EitherT<A, F, B> fromEither(F, scalaz.Functor<F>);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: aload_2
       5: aload_1
       6: invokedynamic #201,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
      11: invokeinterface #106,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      16: invokespecial #37                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      19: areturn

  public <F, A, B> scalaz.EitherT<A, F, B> fromOption(scala.Function0<A>, F, scalaz.Functor<F>);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: aload_3
       5: aload_2
       6: aload_1
       7: invokedynamic #216,  0            // InvokeDynamic #6:apply:(Lscala/Function0;)Lscala/Function1;
      12: invokeinterface #106,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      17: invokespecial #37                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      20: areturn

  public <A, F, B> scalaz.EitherT<A, F, B> apply(F);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: aload_1
       5: invokespecial #37                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
       8: areturn

  public <A, F, B> scala.Option<F> unapply(scalaz.EitherT<A, F, B>);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #227                // Field scala/None$.MODULE$:Lscala/None$;
       7: areturn
       8: new           #229                // class scala/Some
      11: dup
      12: aload_1
      13: invokevirtual #231                // Method scalaz/EitherT.run:()Ljava/lang/Object;
      16: invokespecial #232                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      19: areturn

  private java.lang.Object writeReplace();
    Code:
       0: new           #236                // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class scalaz/EitherT$
       6: invokespecial #239                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public static final scalaz.$bslash$div $anonfun$either$1(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.$bslash$div $anonfun$leftT$1(java.lang.Object);
    Code:
       0: getstatic     #246                // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
       3: aload_0
       4: invokevirtual #248                // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
       7: areturn

  public static final scalaz.$bslash$div $anonfun$rightT$1(java.lang.Object);
    Code:
       0: getstatic     #254                // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
       3: aload_0
       4: invokevirtual #255                // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
       7: areturn

  public static final scalaz.$bslash$div $anonfun$left$1(java.lang.Object);
    Code:
       0: getstatic     #246                // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
       3: aload_0
       4: invokevirtual #248                // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
       7: areturn

  public static final scalaz.$bslash$div $anonfun$right$1(java.lang.Object);
    Code:
       0: getstatic     #254                // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
       3: aload_0
       4: invokevirtual #255                // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
       7: areturn

  public static final scalaz.$bslash$div $anonfun$fromEither$1(scala.util.Either);
    Code:
       0: aload_0
       1: getstatic     #263                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
       4: invokevirtual #265                // Method scalaz/$bslash$div$.left:()Lscala/Function1;
       7: getstatic     #263                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
      10: invokevirtual #267                // Method scalaz/$bslash$div$.right:()Lscala/Function1;
      13: invokevirtual #273                // Method scala/util/Either.fold:(Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      16: checkcast     #275                // class scalaz/$bslash$div
      19: areturn

  public static final scalaz.$bslash$div $anonfun$fromOption$1(scala.Function0, scala.Option);
    Code:
       0: getstatic     #263                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
       3: aload_0
       4: aload_1
       5: invokevirtual #280                // Method scalaz/$bslash$div$.fromOption:(Lscala/Function0;Lscala/Option;)Lscalaz/$bslash$div;
       8: areturn

  private scalaz.EitherT$();
    Code:
       0: aload_0
       1: invokespecial #282                // Method scalaz/EitherTInstances."<init>":()V
       4: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #294,  0            // InvokeDynamic #7:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
