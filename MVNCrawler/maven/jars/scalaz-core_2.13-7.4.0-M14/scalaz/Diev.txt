Compiled from "Diev.scala"
public abstract class scalaz.Diev<A> {
  public static <A> scalaz.Diev<A> fromIntervalsSeq(scala.collection.immutable.Seq<scala.Tuple2<A, A>>, scalaz.Enum<A>);
    Code:
       0: getstatic     #24                 // Field scalaz/Diev$.MODULE$:Lscalaz/Diev$;
       3: aload_0
       4: aload_1
       5: invokevirtual #26                 // Method scalaz/Diev$.fromIntervalsSeq:(Lscala/collection/immutable/Seq;Lscalaz/Enum;)Lscalaz/Diev;
       8: areturn

  public static <A> scalaz.Diev<A> fromValuesSeq(scala.collection.immutable.Seq<A>, scalaz.Enum<A>);
    Code:
       0: getstatic     #24                 // Field scalaz/Diev$.MODULE$:Lscalaz/Diev$;
       3: aload_0
       4: aload_1
       5: invokevirtual #33                 // Method scalaz/Diev$.fromValuesSeq:(Lscala/collection/immutable/Seq;Lscalaz/Enum;)Lscalaz/Diev;
       8: areturn

  public static <A> scalaz.Diev<A> empty(scalaz.Enum<A>);
    Code:
       0: getstatic     #24                 // Field scalaz/Diev$.MODULE$:Lscalaz/Diev$;
       3: aload_0
       4: invokevirtual #38                 // Method scalaz/Diev$.empty:(Lscalaz/Enum;)Lscalaz/Diev;
       7: areturn

  public static <A> scalaz.Show<scalaz.Diev<A>> dievShow(scalaz.Show<A>);
    Code:
       0: getstatic     #24                 // Field scalaz/Diev$.MODULE$:Lscalaz/Diev$;
       3: astore_1
       4: new           #13                 // class scalaz/DievInstances$$anonfun$dievShow$2
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #46                 // Method scalaz/DievInstances$$anonfun$dievShow$2."<init>":(Lscalaz/DievInstances;Lscalaz/Show;)V
      13: areturn

  public static <A> scalaz.Monoid<scalaz.Diev<A>> dievMonoid(scalaz.Enum<A>);
    Code:
       0: getstatic     #24                 // Field scalaz/Diev$.MODULE$:Lscalaz/Diev$;
       3: astore_1
       4: new           #11                 // class scalaz/DievInstances$$anon$1
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #56                 // Method scalaz/DievInstances$$anon$1."<init>":(Lscalaz/DievInstances;Lscalaz/Enum;)V
      13: areturn

  public static <A> scalaz.Equal<scalaz.Diev<A>> dievEqual(scalaz.Equal<A>);
    Code:
       0: getstatic     #24                 // Field scalaz/Diev$.MODULE$:Lscalaz/Diev$;
       3: aload_0
       4: invokevirtual #63                 // Method scalaz/Diev$.dievEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public abstract scalaz.Diev<A> $plus(scala.Tuple2<A, A>);

  public abstract scalaz.Diev<A> $plus(A);

  public abstract scalaz.Diev<A> $minus(scala.Tuple2<A, A>);

  public abstract scalaz.Diev<A> $minus(A);

  public abstract scalaz.Diev<A> $plus$plus(scalaz.Diev<A>);

  public abstract scalaz.Diev<A> $minus$minus(scalaz.Diev<A>);

  public abstract scala.collection.immutable.Vector<scala.Tuple2<A, A>> intervals();

  public abstract boolean contains(A);

  public abstract boolean contains(scala.Tuple2<A, A>);

  public abstract <B> scalaz.Diev<B> map(scala.Function1<A, B>, scalaz.Enum<B>);

  public abstract <B> scalaz.Diev<B> flatMap(scala.Function1<A, scalaz.Diev<B>>, scalaz.Enum<B>);

  public abstract scalaz.Diev<A> filter(scala.Function1<A, java.lang.Object>);

  public abstract void foreach(scala.Function1<A, scala.runtime.BoxedUnit>);

  public abstract <B> B foldLeft(B, scala.Function2<B, A, B>);

  public abstract scala.collection.immutable.Set<A> toSet();

  public abstract scala.collection.immutable.List<A> toList();

  public abstract scalaz.IList<A> toIList();

  public scalaz.Diev();
    Code:
       0: aload_0
       1: invokespecial #113                // Method java/lang/Object."<init>":()V
       4: return
}
