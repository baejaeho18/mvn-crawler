Compiled from "Traverse.scala"
public interface scalaz.Traverse$TraverseLaw extends scalaz.Functor<F>.FunctorLaw {
  public static boolean identityTraverse$(scalaz.Traverse$TraverseLaw, java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #29                 // InterfaceMethod identityTraverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Z
       7: ireturn

  public default <A, B> boolean identityTraverse(F, scala.Function1<A, B>, scalaz.Equal<F>);
    Code:
       0: aload_3
       1: aload_0
       2: invokeinterface #38,  1           // InterfaceMethod scalaz$Traverse$TraverseLaw$$$outer:()Lscalaz/Traverse;
       7: aload_1
       8: aload_2
       9: getstatic     #44                 // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      12: pop
      13: getstatic     #49                 // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      16: invokevirtual #53                 // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      19: checkcast     #55                 // class scalaz/Applicative
      22: invokeinterface #59,  4           // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      27: aload_0
      28: invokeinterface #38,  1           // InterfaceMethod scalaz$Traverse$TraverseLaw$$$outer:()Lscalaz/Traverse;
      33: aload_1
      34: aload_2
      35: invokeinterface #63,  3           // InterfaceMethod scalaz/Traverse.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      40: invokeinterface #69,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      45: ireturn

  public static boolean sequentialFusion$(scalaz.Traverse$TraverseLaw, java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative, scalaz.Applicative, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokespecial #81                 // InterfaceMethod sequentialFusion:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Applicative;Lscalaz/Equal;)Z
      13: ireturn

  public default <N, M, A, B, C> boolean sequentialFusion(F, scala.Function1<A, M>, scala.Function1<B, N>, scalaz.Applicative<N>, scalaz.Applicative<M>, scalaz.Equal<M>);
    Code:
       0: aload         5
       2: aload_0
       3: invokeinterface #38,  1           // InterfaceMethod scalaz$Traverse$TraverseLaw$$$outer:()Lscalaz/Traverse;
       8: aload_1
       9: aload_2
      10: aload         5
      12: invokeinterface #59,  4           // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      17: aload_0
      18: aload_3
      19: aload         4
      21: invokedynamic #102,  0            // InvokeDynamic #0:apply:(Lscalaz/Traverse$TraverseLaw;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
      26: invokeinterface #103,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      31: astore        7
      33: aload_0
      34: invokeinterface #38,  1           // InterfaceMethod scalaz$Traverse$TraverseLaw$$$outer:()Lscalaz/Traverse;
      39: aload_1
      40: aload         5
      42: aload_2
      43: aload_3
      44: invokedynamic #111,  0            // InvokeDynamic #1:apply:(Lscalaz/Applicative;Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      49: aload         5
      51: aload         4
      53: invokeinterface #115,  2          // InterfaceMethod scalaz/Applicative.compose:(Lscalaz/Applicative;)Lscalaz/Applicative;
      58: invokeinterface #59,  4           // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      63: astore        8
      65: aload         6
      67: aload         7
      69: aload         8
      71: invokeinterface #69,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      76: ireturn

  public static boolean purity$(scalaz.Traverse$TraverseLaw, java.lang.Object, scalaz.Applicative, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #125                // InterfaceMethod purity:(Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Equal;)Z
       7: ireturn

  public default <G, A> boolean purity(F, scalaz.Applicative<G>, scalaz.Equal<G>);
    Code:
       0: aload_3
       1: aload_0
       2: invokeinterface #38,  1           // InterfaceMethod scalaz$Traverse$TraverseLaw$$$outer:()Lscalaz/Traverse;
       7: aload_1
       8: aload_2
       9: invokedynamic #134,  0            // InvokeDynamic #2:apply:(Lscalaz/Applicative;)Lscala/Function1;
      14: aload_2
      15: invokeinterface #59,  4           // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      20: aload_2
      21: aload_1
      22: invokedynamic #143,  0            // InvokeDynamic #3:apply:(Ljava/lang/Object;)Lscala/Function0;
      27: invokeinterface #147,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      32: invokeinterface #69,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      37: ireturn

  public static boolean naturality$(scalaz.Traverse$TraverseLaw, scalaz.NaturalTransformation, java.lang.Object, scalaz.Applicative, scalaz.Applicative, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #156                // InterfaceMethod naturality:(Lscalaz/NaturalTransformation;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Applicative;Lscalaz/Equal;)Z
      11: ireturn

  public default <N, M, A> boolean naturality(scalaz.NaturalTransformation<M, N>, F, scalaz.Applicative<N>, scalaz.Applicative<M>, scalaz.Equal<N>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #38,  1           // InterfaceMethod scalaz$Traverse$TraverseLaw$$$outer:()Lscalaz/Traverse;
       7: aload_2
       8: aload         4
      10: invokeinterface #162,  3          // InterfaceMethod scalaz/Traverse.sequence:(Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
      15: invokeinterface #166,  2          // InterfaceMethod scalaz/NaturalTransformation.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: astore        6
      22: aload_0
      23: invokeinterface #38,  1           // InterfaceMethod scalaz$Traverse$TraverseLaw$$$outer:()Lscalaz/Traverse;
      28: aload_0
      29: invokeinterface #38,  1           // InterfaceMethod scalaz$Traverse$TraverseLaw$$$outer:()Lscalaz/Traverse;
      34: aload_2
      35: aload_1
      36: invokedynamic #174,  0            // InvokeDynamic #4:apply:(Lscalaz/NaturalTransformation;)Lscala/Function1;
      41: invokeinterface #63,  3           // InterfaceMethod scalaz/Traverse.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      46: aload_3
      47: invokeinterface #162,  3          // InterfaceMethod scalaz/Traverse.sequence:(Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
      52: astore        7
      54: aload         5
      56: aload         6
      58: aload         7
      60: invokeinterface #69,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      65: ireturn

  public static boolean parallelFusion$(scalaz.Traverse$TraverseLaw, java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative, scalaz.Applicative, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokespecial #181                // InterfaceMethod parallelFusion:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Applicative;Lscalaz/Equal;)Z
      13: ireturn

  public default <N, M, A, B> boolean parallelFusion(F, scala.Function1<A, M>, scala.Function1<A, N>, scalaz.Applicative<N>, scalaz.Applicative<M>, scalaz.Equal<scala.Tuple2<M, N>>);
    Code:
       0: new           #184                // class scala/Tuple2
       3: dup
       4: aload_0
       5: invokeinterface #38,  1           // InterfaceMethod scalaz$Traverse$TraverseLaw$$$outer:()Lscalaz/Traverse;
      10: aload_1
      11: aload_2
      12: aload         5
      14: invokeinterface #59,  4           // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      19: aload_0
      20: invokeinterface #38,  1           // InterfaceMethod scalaz$Traverse$TraverseLaw$$$outer:()Lscalaz/Traverse;
      25: aload_1
      26: aload_3
      27: aload         4
      29: invokeinterface #59,  4           // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      34: invokespecial #188                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      37: astore        7
      39: aload_0
      40: invokeinterface #38,  1           // InterfaceMethod scalaz$Traverse$TraverseLaw$$$outer:()Lscalaz/Traverse;
      45: aload_1
      46: aload_2
      47: aload_3
      48: invokedynamic #199,  0            // InvokeDynamic #5:apply:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      53: aload         5
      55: aload         4
      57: invokeinterface #202,  2          // InterfaceMethod scalaz/Applicative.product:(Lscalaz/Applicative;)Lscalaz/Applicative;
      62: invokeinterface #59,  4           // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      67: checkcast     #184                // class scala/Tuple2
      70: astore        8
      72: aload         6
      74: aload         7
      76: aload         8
      78: invokeinterface #69,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      83: ireturn

  public abstract scalaz.Traverse scalaz$Traverse$TraverseLaw$$$outer();

  public static java.lang.Object $anonfun$sequentialFusion$1(scalaz.Traverse$TraverseLaw, scala.Function1, scalaz.Applicative, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #38,  1           // InterfaceMethod scalaz$Traverse$TraverseLaw$$$outer:()Lscalaz/Traverse;
       6: aload_3
       7: aload_1
       8: aload_2
       9: invokeinterface #59,  4           // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      14: areturn

  public static java.lang.Object $anonfun$sequentialFusion$2(scalaz.Applicative, scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokeinterface #212,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_2
       9: invokeinterface #103,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      14: areturn

  public static java.lang.Object $anonfun$purity$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$purity$1(scalaz.Applicative, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #220,  0            // InvokeDynamic #6:apply:(Ljava/lang/Object;)Lscala/Function0;
       7: invokeinterface #147,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static java.lang.Object $anonfun$purity$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$naturality$1(scalaz.NaturalTransformation, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #166,  2          // InterfaceMethod scalaz/NaturalTransformation.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static scala.Tuple2 $anonfun$parallelFusion$1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: new           #184                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_2
       6: invokeinterface #212,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: aload_1
      12: aload_2
      13: invokeinterface #212,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: invokespecial #188                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      21: areturn

  public static void $init$(scalaz.Traverse<F>.TraverseLaw);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #240,  0            // InvokeDynamic #7:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
