Compiled from "Optional.scala"
public interface scalaz.Optional<F> {
  public static scalaz.Optional<java.lang.Object> idInstance();
    Code:
       0: getstatic     #27                 // Field scalaz/Optional$.MODULE$:Lscalaz/Optional$;
       3: pop
       4: getstatic     #32                 // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
       7: invokevirtual #36                 // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      10: checkcast     #2                  // class scalaz/Optional
      13: areturn

  public static <F, G> scalaz.Optional<F> fromIso(scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, F, G>, scalaz.Optional<G>);
    Code:
       0: getstatic     #27                 // Field scalaz/Optional$.MODULE$:Lscalaz/Optional$;
       3: pop
       4: new           #18                 // class scalaz/Optional$$anon$2
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #45                 // Method scalaz/Optional$$anon$2."<init>":(Lscalaz/Optional;Lscalaz/Isomorphisms$Iso2;)V
      13: areturn

  public static <F> scalaz.Optional<F> apply(scalaz.Optional<F>);
    Code:
       0: getstatic     #27                 // Field scalaz/Optional$.MODULE$:Lscalaz/Optional$;
       3: pop
       4: aload_0
       5: areturn

  public abstract void scalaz$Optional$_setter_$optionalSyntax_$eq(scalaz.syntax.OptionalSyntax<F>);

  public abstract <B, A> scalaz.$bslash$div<F, A> pextract(F);

  public static java.lang.Object getOrElse$(scalaz.Optional, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #67                 // InterfaceMethod getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public default <A> A getOrElse(F, scala.Function0<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #72,  2           // InterfaceMethod pextract:(Ljava/lang/Object;)Lscalaz/$bslash$div;
       7: dup
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: astore_3
      14: aload_3
      15: instanceof    #74                 // class scalaz/$minus$bslash$div
      18: ifeq          28
      21: aload_2
      22: invokeinterface #79,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      27: areturn
      28: aload_3
      29: instanceof    #81                 // class scalaz/$bslash$div$minus
      32: ifeq          43
      35: aload_3
      36: checkcast     #81                 // class scalaz/$bslash$div$minus
      39: invokevirtual #84                 // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      42: areturn
      43: new           #86                 // class scala/MatchError
      46: dup
      47: aload_3
      48: invokespecial #89                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      51: athrow

  public static boolean isDefined$(scalaz.Optional, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #100                // InterfaceMethod isDefined:(Ljava/lang/Object;)Z
       5: ireturn

  public default <A> boolean isDefined(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #72,  2           // InterfaceMethod pextract:(Ljava/lang/Object;)Lscalaz/$bslash$div;
       7: invokevirtual #105                // Method scalaz/$bslash$div.isRight:()Z
      10: ireturn

  public static boolean nonEmpty$(scalaz.Optional, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #109                // InterfaceMethod nonEmpty:(Ljava/lang/Object;)Z
       5: ireturn

  public default <A> boolean nonEmpty(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #100,  2          // InterfaceMethod isDefined:(Ljava/lang/Object;)Z
       7: ireturn

  public static boolean isEmpty$(scalaz.Optional, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #113                // InterfaceMethod isEmpty:(Ljava/lang/Object;)Z
       5: ireturn

  public default <A> boolean isEmpty(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #100,  2          // InterfaceMethod isDefined:(Ljava/lang/Object;)Z
       7: ifne          12
      10: iconst_1
      11: ireturn
      12: iconst_0
      13: ireturn

  public static java.lang.Object orElse$(scalaz.Optional, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #118                // InterfaceMethod orElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public default <A> F orElse(F, scala.Function0<F>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #100,  2          // InterfaceMethod isDefined:(Ljava/lang/Object;)Z
       7: ifeq          12
      10: aload_1
      11: areturn
      12: aload_2
      13: invokeinterface #79,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      18: areturn

  public static java.lang.Object $qmark$(scalaz.Optional, java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #127                // InterfaceMethod $qmark:(Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public default <A, X> X $qmark(F, scala.Function0<X>, scala.Function0<X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #100,  2          // InterfaceMethod isDefined:(Ljava/lang/Object;)Z
       7: ifeq          17
      10: aload_2
      11: invokeinterface #79,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: areturn
      17: aload_3
      18: invokeinterface #79,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      23: areturn

  public static scala.Option toOption$(scalaz.Optional, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #134                // InterfaceMethod toOption:(Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public default <A> scala.Option<A> toOption(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #72,  2           // InterfaceMethod pextract:(Ljava/lang/Object;)Lscalaz/$bslash$div;
       7: invokevirtual #138                // Method scalaz/$bslash$div.toOption:()Lscala/Option;
      10: areturn

  public static scalaz.Maybe toMaybe$(scalaz.Optional, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #144                // InterfaceMethod toMaybe:(Ljava/lang/Object;)Lscalaz/Maybe;
       5: areturn

  public default <A> scalaz.Maybe<A> toMaybe(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #72,  2           // InterfaceMethod pextract:(Ljava/lang/Object;)Lscalaz/$bslash$div;
       7: invokevirtual #148                // Method scalaz/$bslash$div.toMaybe:()Lscalaz/Maybe;
      10: areturn

  public abstract scalaz.syntax.OptionalSyntax<F> optionalSyntax();

  public static void $init$(scalaz.Optional);
    Code:
       0: aload_0
       1: new           #16                 // class scalaz/Optional$$anon$1
       4: dup
       5: aload_0
       6: invokespecial #155                // Method scalaz/Optional$$anon$1."<init>":(Lscalaz/Optional;)V
       9: invokeinterface #157,  2          // InterfaceMethod scalaz$Optional$_setter_$optionalSyntax_$eq:(Lscalaz/syntax/OptionalSyntax;)V
      14: return
}
