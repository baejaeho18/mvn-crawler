Compiled from "OneAnd.scala"
public final class scalaz.OneAnd$$anon$17 implements scalaz.Isomorphisms$IsoFunctorTemplate<scalaz.NonEmptyList, ?> {
  private scalaz.NaturalTransformation<scalaz.NonEmptyList, ?> to;

  private scalaz.NaturalTransformation<?, scalaz.NonEmptyList> from;

  public scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, ?, scalaz.NonEmptyList> flip();
    Code:
       0: aload_0
       1: invokestatic  #36                 // InterfaceMethod scalaz/Isomorphisms$Iso2.flip$:(Lscalaz/Isomorphisms$Iso2;)Lscalaz/Isomorphisms$Iso2;
       4: areturn

  public <A$> scalaz.Isomorphisms$Iso<scala.Function1, scalaz.NonEmptyList<A$>, scalaz.OneAnd<scalaz.IList, A$>> unlift(scalaz.Liskov<scalaz.NaturalTransformation<scalaz.NonEmptyList, ?>, scalaz.NaturalTransformation<scalaz.NonEmptyList, ?>>, scalaz.Liskov<scalaz.NaturalTransformation<?, scalaz.NonEmptyList>, scalaz.NaturalTransformation<?, scalaz.NonEmptyList>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #47                 // InterfaceMethod scalaz/Isomorphisms$Iso2.unlift$:(Lscalaz/Isomorphisms$Iso2;Lscalaz/Liskov;Lscalaz/Liskov;)Lscalaz/Isomorphisms$Iso;
       6: areturn

  public scalaz.NaturalTransformation<scalaz.NonEmptyList, scalaz.NonEmptyList> $percent$tilde(scalaz.NaturalTransformation<?, ?>, scalaz.Liskov<scalaz.NaturalTransformation<scalaz.NonEmptyList, ?>, scalaz.NaturalTransformation<scalaz.NonEmptyList, ?>>, scalaz.Liskov<scalaz.NaturalTransformation<?, scalaz.NonEmptyList>, scalaz.NaturalTransformation<?, scalaz.NonEmptyList>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #56                 // InterfaceMethod scalaz/Isomorphisms$Iso2.$percent$tilde$:(Lscalaz/Isomorphisms$Iso2;Lscalaz/NaturalTransformation;Lscalaz/Liskov;Lscalaz/Liskov;)Lscalaz/NaturalTransformation;
       7: areturn

  public final scalaz.NaturalTransformation<scalaz.NonEmptyList, ?> to();
    Code:
       0: aload_0
       1: getfield      #60                 // Field to:Lscalaz/NaturalTransformation;
       4: areturn

  public final scalaz.NaturalTransformation<?, scalaz.NonEmptyList> from();
    Code:
       0: aload_0
       1: getfield      #63                 // Field from:Lscalaz/NaturalTransformation;
       4: areturn

  public final void scalaz$Isomorphisms$IsoFunctorTemplate$_setter_$to_$eq(scalaz.NaturalTransformation<scalaz.NonEmptyList, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field to:Lscalaz/NaturalTransformation;
       5: return

  public final void scalaz$Isomorphisms$IsoFunctorTemplate$_setter_$from_$eq(scalaz.NaturalTransformation<?, scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #63                 // Field from:Lscalaz/NaturalTransformation;
       5: return

  public <A> scalaz.OneAnd<scalaz.IList, A> to_(scalaz.NonEmptyList<A>);
    Code:
       0: getstatic     #77                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: pop
       4: aload_1
       5: invokevirtual #83                 // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
       8: aload_1
       9: invokevirtual #87                 // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      12: astore_3
      13: astore_2
      14: getstatic     #90                 // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
      17: aload_2
      18: aload_3
      19: invokevirtual #94                 // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
      22: areturn

  public <A> scalaz.NonEmptyList<A> from_(scalaz.OneAnd<scalaz.IList, A>);
    Code:
       0: getstatic     #107                // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
       3: pop
       4: aload_1
       5: invokevirtual #108                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       8: aload_1
       9: invokevirtual #110                // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      12: checkcast     #112                // class scalaz/IList
      15: astore_3
      16: astore_2
      17: new           #79                 // class scalaz/NonEmptyList
      20: dup
      21: aload_2
      22: aload_3
      23: invokespecial #116                // Method scalaz/NonEmptyList."<init>":(Ljava/lang/Object;Lscalaz/IList;)V
      26: areturn

  public scalaz.Isomorphisms scalaz$Isomorphisms$IsoFunctorTemplate$$$outer();
    Code:
       0: getstatic     #127                // Field scalaz/Isomorphism$.MODULE$:Lscalaz/Isomorphism$;
       3: areturn

  public scalaz.Isomorphisms scalaz$Isomorphisms$Iso2$$$outer();
    Code:
       0: getstatic     #127                // Field scalaz/Isomorphism$.MODULE$:Lscalaz/Isomorphism$;
       3: areturn

  public java.lang.Object from();
    Code:
       0: aload_0
       1: invokevirtual #130                // Method from:()Lscalaz/NaturalTransformation;
       4: areturn

  public java.lang.Object to();
    Code:
       0: aload_0
       1: invokevirtual #132                // Method to:()Lscalaz/NaturalTransformation;
       4: areturn

  public java.lang.Object from_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #23                 // class scalaz/OneAnd
       5: invokevirtual #135                // Method from_:(Lscalaz/OneAnd;)Lscalaz/NonEmptyList;
       8: areturn

  public java.lang.Object to_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #79                 // class scalaz/NonEmptyList
       5: invokevirtual #137                // Method to_:(Lscalaz/NonEmptyList;)Lscalaz/OneAnd;
       8: areturn

  public scalaz.OneAnd$$anon$17();
    Code:
       0: aload_0
       1: invokespecial #140                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #144                // InterfaceMethod scalaz/Isomorphisms$IsoFunctorTemplate.$init$:(Lscalaz/Isomorphisms$IsoFunctorTemplate;)V
       8: invokestatic  #149                // Method scala/runtime/Statics.releaseFence:()V
      11: return
}
