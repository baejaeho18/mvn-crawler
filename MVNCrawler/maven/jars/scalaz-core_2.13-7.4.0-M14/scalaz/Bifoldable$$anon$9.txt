Compiled from "Bifoldable.scala"
public final class scalaz.Bifoldable$$anon$9 implements scalaz.IsomorphismBifoldable<F, G> {
  private scalaz.syntax.BifoldableSyntax<F> bifoldableSyntax;

  private final scalaz.Bifoldable E$1;

  private final scalaz.BiNaturalTransformation D$1;

  public <A, B, M> M bifoldMap(F, scala.Function1<A, M>, scala.Function1<B, M>, scalaz.Monoid<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #36                 // InterfaceMethod scalaz/IsomorphismBifoldable.bifoldMap$:(Lscalaz/IsomorphismBifoldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public <A, B, C> C bifoldRight(F, scala.Function0<C>, scala.Function2<A, scala.Function0<C>, C>, scala.Function2<B, scala.Function0<C>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #49                 // InterfaceMethod scalaz/IsomorphismBifoldable.bifoldRight$:(Lscalaz/IsomorphismBifoldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  public <A, B, C> C bifoldLeft(F, C, scala.Function2<C, A, C>, scala.Function2<C, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #59                 // InterfaceMethod scalaz/IsomorphismBifoldable.bifoldLeft$:(Lscalaz/IsomorphismBifoldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  public <G> scalaz.Bifoldable<?> compose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #67                 // InterfaceMethod scalaz/Bifoldable.compose$:(Lscalaz/Bifoldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> product(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // InterfaceMethod scalaz/Bifoldable.product$:(Lscalaz/Bifoldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <A, B, M> scala.Option<M> bifoldMap1(F, scala.Function1<A, M>, scala.Function1<B, M>, scalaz.Semigroup<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #79                 // InterfaceMethod scalaz/Bifoldable.bifoldMap1$:(Lscalaz/Bifoldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       9: areturn

  public final <A, B, C> C bifoldR(F, scala.Function0<C>, scala.Function1<A, scala.Function1<scala.Function0<C>, C>>, scala.Function1<B, scala.Function1<scala.Function0<C>, C>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #87                 // InterfaceMethod scalaz/Bifoldable.bifoldR$:(Lscalaz/Bifoldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public final <A, B, C> C bifoldL(F, C, scala.Function1<C, scala.Function1<A, C>>, scala.Function1<C, scala.Function1<B, C>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #94                 // InterfaceMethod scalaz/Bifoldable.bifoldL$:(Lscalaz/Bifoldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public <X> scalaz.Foldable<?> leftFoldable();
    Code:
       0: aload_0
       1: invokestatic  #101                // InterfaceMethod scalaz/Bifoldable.leftFoldable$:(Lscalaz/Bifoldable;)Lscalaz/Foldable;
       4: areturn

  public <X> scalaz.Foldable<?> rightFoldable();
    Code:
       0: aload_0
       1: invokestatic  #105                // InterfaceMethod scalaz/Bifoldable.rightFoldable$:(Lscalaz/Bifoldable;)Lscalaz/Foldable;
       4: areturn

  public scalaz.Foldable<?> uFoldable();
    Code:
       0: aload_0
       1: invokestatic  #110                // InterfaceMethod scalaz/Bifoldable.uFoldable$:(Lscalaz/Bifoldable;)Lscalaz/Foldable;
       4: areturn

  public <G, H> scalaz.Bifoldable<?> embed(scalaz.Foldable<G>, scalaz.Foldable<H>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #118                // InterfaceMethod scalaz/Bifoldable.embed$:(Lscalaz/Bifoldable;Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Bifoldable;
       6: areturn

  public <G> scalaz.Bifoldable<?> embedLeft(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #126                // InterfaceMethod scalaz/Bifoldable.embedLeft$:(Lscalaz/Bifoldable;Lscalaz/Foldable;)Lscalaz/Bifoldable;
       5: areturn

  public <H> scalaz.Bifoldable<?> embedRight(scalaz.Foldable<H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #131                // InterfaceMethod scalaz/Bifoldable.embedRight$:(Lscalaz/Bifoldable;Lscalaz/Foldable;)Lscalaz/Bifoldable;
       5: areturn

  public scalaz.Bifoldable<F>.BifoldableLaw bifoldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #138                // InterfaceMethod scalaz/Bifoldable.bifoldableLaw$:(Lscalaz/Bifoldable;)Lscalaz/Bifoldable$BifoldableLaw;
       4: areturn

  public scalaz.syntax.BifoldableSyntax<F> bifoldableSyntax();
    Code:
       0: aload_0
       1: getfield      #142                // Field bifoldableSyntax:Lscalaz/syntax/BifoldableSyntax;
       4: areturn

  public void scalaz$Bifoldable$_setter_$bifoldableSyntax_$eq(scalaz.syntax.BifoldableSyntax<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #142                // Field bifoldableSyntax:Lscalaz/syntax/BifoldableSyntax;
       5: return

  public scalaz.Bifoldable<G> G();
    Code:
       0: aload_0
       1: getfield      #151                // Field E$1:Lscalaz/Bifoldable;
       4: areturn

  public scalaz.BiNaturalTransformation<F, G> biNaturalTrans();
    Code:
       0: aload_0
       1: getfield      #156                // Field D$1:Lscalaz/BiNaturalTransformation;
       4: areturn

  public scalaz.Bifoldable$$anon$9(scalaz.Bifoldable, scalaz.BiNaturalTransformation);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #151                // Field E$1:Lscalaz/Bifoldable;
       5: aload_0
       6: aload_2
       7: putfield      #156                // Field D$1:Lscalaz/BiNaturalTransformation;
      10: aload_0
      11: invokespecial #161                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #165                // InterfaceMethod scalaz/Bifoldable.$init$:(Lscalaz/Bifoldable;)V
      18: invokestatic  #170                // Method scala/runtime/Statics.releaseFence:()V
      21: return
}
