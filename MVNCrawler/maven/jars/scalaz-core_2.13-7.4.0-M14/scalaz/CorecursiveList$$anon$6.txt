Compiled from "CorecursiveList.scala"
public final class scalaz.CorecursiveList$$anon$6 implements scalaz.Order<scalaz.CorecursiveList<A>>, scalaz.CorecursiveListEqual<A> {
  private final scalaz.Order<A> A;

  private scalaz.syntax.OrderSyntax<scalaz.CorecursiveList<A>> orderSyntax;

  private scalaz.syntax.EqualSyntax<scalaz.CorecursiveList<A>> equalSyntax;

  public boolean equal(scalaz.CorecursiveList<A>, scalaz.CorecursiveList<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #60                 // InterfaceMethod scalaz/CorecursiveListEqual.equal$:(Lscalaz/CorecursiveListEqual;Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #71                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #78                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #82                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #86                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #90                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #96                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #100                // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #106                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scalaz.CorecursiveList<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #114                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scalaz.CorecursiveList<A>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #122                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scalaz.CorecursiveList<A>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #128                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scalaz.CorecursiveList<A>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #135                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #141                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.CorecursiveList<A>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #148                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<scalaz.CorecursiveList<A>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #152                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scalaz.CorecursiveList<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #152                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scalaz.CorecursiveList<A>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #160                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.CorecursiveList<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #160                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<A> A();
    Code:
       0: aload_0
       1: getfield      #166                // Field A:Lscalaz/Order;
       4: areturn

  public scalaz.Ordering order(scalaz.CorecursiveList<A>, scalaz.CorecursiveList<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #175                // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
       5: aload_2
       6: invokevirtual #175                // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
       9: aload_1
      10: aload_2
      11: invokespecial #179                // Method rec$4:(Ljava/lang/Object;Ljava/lang/Object;Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Lscalaz/Ordering;
      14: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #182                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #171                // class scalaz/CorecursiveList
       5: aload_2
       6: checkcast     #171                // class scalaz/CorecursiveList
       9: invokevirtual #184                // Method equal:(Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #171                // class scalaz/CorecursiveList
       5: aload_2
       6: checkcast     #171                // class scalaz/CorecursiveList
       9: invokevirtual #186                // Method order:(Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Lscalaz/Ordering;
      12: areturn

  public scalaz.Equal A();
    Code:
       0: aload_0
       1: invokevirtual #189                // Method A:()Lscalaz/Order;
       4: areturn

  private final scalaz.Ordering rec$4(java.lang.Object, java.lang.Object, scalaz.CorecursiveList, scalaz.CorecursiveList);
    Code:
       0: aload_3
       1: invokevirtual #197                // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_1
       5: invokeinterface #202,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: aload         4
      12: invokevirtual #197                // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      15: aload_2
      16: invokeinterface #202,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      21: astore        17
      23: astore        16
      25: aload         16
      27: checkcast     #24                 // class scalaz/Maybe
      30: astore        5
      32: aload         17
      34: checkcast     #24                 // class scalaz/Maybe
      37: astore        6
      39: aload         5
      41: instanceof    #22                 // class scalaz/Maybe$Empty
      44: ifeq          63
      47: aload         6
      49: instanceof    #22                 // class scalaz/Maybe$Empty
      52: ifeq          59
      55: getstatic     #206                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      58: areturn
      59: getstatic     #209                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      62: areturn
      63: aload         16
      65: checkcast     #24                 // class scalaz/Maybe
      68: astore        7
      70: aload         17
      72: checkcast     #24                 // class scalaz/Maybe
      75: astore        8
      77: aload         7
      79: instanceof    #27                 // class scalaz/Maybe$Just
      82: ifeq          195
      85: aload         7
      87: checkcast     #27                 // class scalaz/Maybe$Just
      90: invokevirtual #212                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      93: checkcast     #214                // class scala/Tuple2
      96: astore        9
      98: aload         9
     100: ifnull        195
     103: aload         9
     105: invokevirtual #217                // Method scala/Tuple2._1:()Ljava/lang/Object;
     108: astore        10
     110: aload         9
     112: invokevirtual #220                // Method scala/Tuple2._2:()Ljava/lang/Object;
     115: astore        11
     117: aload         8
     119: instanceof    #27                 // class scalaz/Maybe$Just
     122: ifeq          195
     125: aload         8
     127: checkcast     #27                 // class scalaz/Maybe$Just
     130: invokevirtual #212                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     133: checkcast     #214                // class scala/Tuple2
     136: astore        12
     138: aload         12
     140: ifnull        195
     143: aload         12
     145: invokevirtual #217                // Method scala/Tuple2._1:()Ljava/lang/Object;
     148: astore        13
     150: aload         12
     152: invokevirtual #220                // Method scala/Tuple2._2:()Ljava/lang/Object;
     155: astore        14
     157: aload_0
     158: invokevirtual #189                // Method A:()Lscalaz/Order;
     161: aload         11
     163: aload         14
     165: invokeinterface #222,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
     170: astore        15
     172: getstatic     #206                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
     175: aload         15
     177: invokevirtual #226                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     180: ifeq          192
     183: aload         10
     185: aload         13
     187: astore_2
     188: astore_1
     189: goto          0
     192: aload         15
     194: areturn
     195: getstatic     #229                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
     198: areturn

  public scalaz.CorecursiveList$$anon$6(scalaz.Order);
    Code:
       0: aload_0
       1: invokespecial #241                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #245                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
       8: aload_0
       9: invokestatic  #247                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      12: aload_0
      13: getstatic     #252                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
      16: pop
      17: aload_1
      18: putfield      #166                // Field A:Lscalaz/Order;
      21: invokestatic  #257                // Method scala/runtime/Statics.releaseFence:()V
      24: return
}
