Compiled from "Category.scala"
public interface scalaz.Category<$eq$greater$colon> extends scalaz.Compose<$eq$greater$colon> {
  public static <F, G> scalaz.Category<F> fromIso(scalaz.Isomorphisms$Iso3<scalaz.BiNaturalTransformation, F, G>, scalaz.Category<G>);
    Code:
       0: getstatic     #40                 // Field scalaz/Category$.MODULE$:Lscalaz/Category$;
       3: pop
       4: new           #21                 // class scalaz/Category$$anon$5
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #44                 // Method scalaz/Category$$anon$5."<init>":(Lscalaz/Category;Lscalaz/Isomorphisms$Iso3;)V
      13: areturn

  public static <F> scalaz.Category<F> apply(scalaz.Category<F>);
    Code:
       0: getstatic     #40                 // Field scalaz/Category$.MODULE$:Lscalaz/Category$;
       3: pop
       4: aload_0
       5: areturn

  public abstract void scalaz$Category$_setter_$categorySyntax_$eq(scalaz.syntax.CategorySyntax<$eq$greater$colon>);

  public abstract <A> $eq$greater$colon id();

  public static scalaz.PlusEmpty empty$(scalaz.Category);
    Code:
       0: aload_0
       1: invokespecial #64                 // InterfaceMethod empty:()Lscalaz/PlusEmpty;
       4: areturn

  public default scalaz.PlusEmpty<?> empty();
    Code:
       0: new           #13                 // class scalaz/Category$$anon$1
       3: dup
       4: aload_0
       5: invokespecial #68                 // Method scalaz/Category$$anon$1."<init>":(Lscalaz/Category;)V
       8: areturn

  public static scalaz.Monoid monoid$(scalaz.Category);
    Code:
       0: aload_0
       1: invokespecial #75                 // InterfaceMethod monoid:()Lscalaz/Monoid;
       4: areturn

  public default <A> scalaz.Monoid<$eq$greater$colon> monoid();
    Code:
       0: new           #15                 // class scalaz/Category$$anon$2
       3: dup
       4: aload_0
       5: invokespecial #77                 // Method scalaz/Category$$anon$2."<init>":(Lscalaz/Category;)V
       8: areturn

  public static scalaz.Category$CategoryLaw categoryLaw$(scalaz.Category);
    Code:
       0: aload_0
       1: invokespecial #83                 // InterfaceMethod categoryLaw:()Lscalaz/Category$CategoryLaw;
       4: areturn

  public default scalaz.Category<$eq$greater$colon>.CategoryLaw categoryLaw();
    Code:
       0: new           #17                 // class scalaz/Category$$anon$3
       3: dup
       4: aload_0
       5: invokespecial #85                 // Method scalaz/Category$$anon$3."<init>":(Lscalaz/Category;)V
       8: areturn

  public abstract scalaz.syntax.CategorySyntax<$eq$greater$colon> categorySyntax();

  public static void $init$(scalaz.Category);
    Code:
       0: aload_0
       1: new           #19                 // class scalaz/Category$$anon$4
       4: dup
       5: aload_0
       6: invokespecial #90                 // Method scalaz/Category$$anon$4."<init>":(Lscalaz/Category;)V
       9: invokeinterface #92,  2           // InterfaceMethod scalaz$Category$_setter_$categorySyntax_$eq:(Lscalaz/syntax/CategorySyntax;)V
      14: return
}
