Compiled from "Scalaz.scala"
public final class scalaz.Scalaz {
  public static scalaz.Traverse1<java.lang.Object> id();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #47                 // Method scalaz/Scalaz$.id:()Lscalaz/Traverse1;
       6: areturn

  public static scala.util.Try ToTryOpsFromTry(scala.util.Try);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #52                 // Method scalaz/Scalaz$.ToTryOpsFromTry:(Lscala/util/Try;)Lscala/util/Try;
       7: areturn

  public static scala.util.Left ToLeftOpsFromLeft(scala.util.Left);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #58                 // Method scalaz/Scalaz$.ToLeftOpsFromLeft:(Lscala/util/Left;)Lscala/util/Left;
       7: areturn

  public static scala.util.Right ToRightOpsFromRight(scala.util.Right);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #63                 // Method scalaz/Scalaz$.ToRightOpsFromRight:(Lscala/util/Right;)Lscala/util/Right;
       7: areturn

  public static scala.util.Either ToEitherOpsFromEither(scala.util.Either);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #68                 // Method scalaz/Scalaz$.ToEitherOpsFromEither:(Lscala/util/Either;)Lscala/util/Either;
       7: areturn

  public static scala.collection.immutable.Map ToMapOpsFromMap(scala.collection.immutable.Map);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #74                 // Method scalaz/Scalaz$.ToMapOpsFromMap:(Lscala/collection/immutable/Map;)Lscala/collection/immutable/Map;
       7: areturn

  public static scala.Tuple12 ToTuple12Ops(scala.Tuple12);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #80                 // Method scalaz/Scalaz$.ToTuple12Ops:(Lscala/Tuple12;)Lscala/Tuple12;
       7: areturn

  public static scala.Tuple11 ToTuple11Ops(scala.Tuple11);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #85                 // Method scalaz/Scalaz$.ToTuple11Ops:(Lscala/Tuple11;)Lscala/Tuple11;
       7: areturn

  public static scala.Tuple10 ToTuple10Ops(scala.Tuple10);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #90                 // Method scalaz/Scalaz$.ToTuple10Ops:(Lscala/Tuple10;)Lscala/Tuple10;
       7: areturn

  public static scala.Tuple9 ToTuple9Ops(scala.Tuple9);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #95                 // Method scalaz/Scalaz$.ToTuple9Ops:(Lscala/Tuple9;)Lscala/Tuple9;
       7: areturn

  public static scala.Tuple8 ToTuple8Ops(scala.Tuple8);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #100                // Method scalaz/Scalaz$.ToTuple8Ops:(Lscala/Tuple8;)Lscala/Tuple8;
       7: areturn

  public static scala.Tuple7 ToTuple7Ops(scala.Tuple7);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #105                // Method scalaz/Scalaz$.ToTuple7Ops:(Lscala/Tuple7;)Lscala/Tuple7;
       7: areturn

  public static scala.Tuple6 ToTuple6Ops(scala.Tuple6);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #110                // Method scalaz/Scalaz$.ToTuple6Ops:(Lscala/Tuple6;)Lscala/Tuple6;
       7: areturn

  public static scala.Tuple5 ToTuple5Ops(scala.Tuple5);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #115                // Method scalaz/Scalaz$.ToTuple5Ops:(Lscala/Tuple5;)Lscala/Tuple5;
       7: areturn

  public static scala.Tuple4 ToTuple4Ops(scala.Tuple4);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #120                // Method scalaz/Scalaz$.ToTuple4Ops:(Lscala/Tuple4;)Lscala/Tuple4;
       7: areturn

  public static scala.Tuple3 ToTuple3Ops(scala.Tuple3);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #125                // Method scalaz/Scalaz$.ToTuple3Ops:(Lscala/Tuple3;)Lscala/Tuple3;
       7: areturn

  public static scala.Tuple2 ToTuple2Ops(scala.Tuple2);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #130                // Method scalaz/Scalaz$.ToTuple2Ops:(Lscala/Tuple2;)Lscala/Tuple2;
       7: areturn

  public static java.lang.String ToStringOpsFromString(java.lang.String);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #135                // Method scalaz/Scalaz$.ToStringOpsFromString:(Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public static scala.Function1 ToFunction1OpsFromBoolean(scala.Function1);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #141                // Method scalaz/Scalaz$.ToFunction1OpsFromBoolean:(Lscala/Function1;)Lscala/Function1;
       7: areturn

  public static scala.Function2 ToFunction2Ops(scala.Function2);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #146                // Method scalaz/Scalaz$.ToFunction2Ops:(Lscala/Function2;)Lscala/Function2;
       7: areturn

  public static scala.collection.immutable.LazyList ToLazyListOpsFromLazyList(scala.collection.immutable.LazyList);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #151                // Method scalaz/Scalaz$.ToLazyListOpsFromLazyList:(Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
       7: areturn

  public static scala.collection.immutable.Vector ToVectorOpsFromVector(scala.collection.immutable.Vector);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #156                // Method scalaz/Scalaz$.ToVectorOpsFromVector:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: areturn

  public static scala.collection.immutable.Stream ToStreamOpsFromStream(scala.collection.immutable.Stream);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #161                // Method scalaz/Scalaz$.ToStreamOpsFromStream:(Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       7: areturn

  public static scala.collection.immutable.List ToListOpsFromList(scala.collection.immutable.List);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #166                // Method scalaz/Scalaz$.ToListOpsFromList:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       7: areturn

  public static java.lang.Object ToOptionIdOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #171                // Method scalaz/Scalaz$.ToOptionIdOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static <A> scalaz.syntax.std.OptionOps2<A> ToOptionOps2FromOption(scala.Option<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #177                // Method scalaz/Scalaz$.ToOptionOps2FromOption:(Lscala/Option;)Lscalaz/syntax/std/OptionOps2;
       7: areturn

  public static scala.Option ToOptionOpsFromOption(scala.Option);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #182                // Method scalaz/Scalaz$.ToOptionOpsFromOption:(Lscala/Option;)Lscala/Option;
       7: areturn

  public static scalaz.syntax.std.BooleanOps2 ToBooleanOps2FromBoolean(boolean);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: invokevirtual #186                // Method scalaz/Scalaz$.ToBooleanOps2FromBoolean:(Z)Lscalaz/syntax/std/BooleanOps2;
       7: areturn

  public static boolean ToBooleanOpsFromBoolean(boolean);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: invokevirtual #191                // Method scalaz/Scalaz$.ToBooleanOpsFromBoolean:(Z)Z
       7: ireturn

  public static <A> A fix(scala.Function1<scala.Function0<A>, A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #196                // Method scalaz/Scalaz$.fix:(Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public static scalaz.Validation<java.lang.String, java.lang.Object> parseBoolean(java.lang.String);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #202                // Method scalaz/Scalaz$.parseBoolean:(Ljava/lang/String;)Lscalaz/Validation;
       7: areturn

  public static scalaz.Validation<java.lang.String, java.math.BigDecimal> parseBigDecimal(java.lang.String);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #206                // Method scalaz/Scalaz$.parseBigDecimal:(Ljava/lang/String;)Lscalaz/Validation;
       7: areturn

  public static scalaz.Validation<java.lang.String, java.math.BigInteger> parseBigInt(java.lang.String);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #210                // Method scalaz/Scalaz$.parseBigInt:(Ljava/lang/String;)Lscalaz/Validation;
       7: areturn

  public static scalaz.Validation<java.lang.String, java.lang.Object> parseFloat(java.lang.String);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #213                // Method scalaz/Scalaz$.parseFloat:(Ljava/lang/String;)Lscalaz/Validation;
       7: areturn

  public static scalaz.Validation<java.lang.String, java.lang.Object> parseDouble(java.lang.String);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #216                // Method scalaz/Scalaz$.parseDouble:(Ljava/lang/String;)Lscalaz/Validation;
       7: areturn

  public static scalaz.Validation<java.lang.String, java.lang.Object> parseShort(java.lang.String);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #219                // Method scalaz/Scalaz$.parseShort:(Ljava/lang/String;)Lscalaz/Validation;
       7: areturn

  public static scalaz.Validation<java.lang.String, java.lang.Object> parseByte(java.lang.String);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #222                // Method scalaz/Scalaz$.parseByte:(Ljava/lang/String;)Lscalaz/Validation;
       7: areturn

  public static scalaz.Validation<java.lang.String, java.lang.Object> parseInt(java.lang.String);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #225                // Method scalaz/Scalaz$.parseInt:(Ljava/lang/String;)Lscalaz/Validation;
       7: areturn

  public static scalaz.Validation<java.lang.String, java.lang.Object> parseLong(java.lang.String);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #228                // Method scalaz/Scalaz$.parseLong:(Ljava/lang/String;)Lscalaz/Validation;
       7: areturn

  public static scalaz.NonEmptyList<java.lang.Object> charsNel(java.lang.String, scala.Function0<scalaz.NonEmptyList<java.lang.Object>>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #233                // Method scalaz/Scalaz$.charsNel:(Ljava/lang/String;Lscala/Function0;)Lscalaz/NonEmptyList;
       8: areturn

  public static scalaz.Maybe<scalaz.NonEmptyList<java.lang.Object>> charsNel(java.lang.String);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #238                // Method scalaz/Scalaz$.charsNel:(Ljava/lang/String;)Lscalaz/Maybe;
       7: areturn

  public static java.lang.String plural(java.lang.String, long);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: lload_1
       5: invokevirtual #243                // Method scalaz/Scalaz$.plural:(Ljava/lang/String;J)Ljava/lang/String;
       8: areturn

  public static <A> scalaz.Order<A> ToScalazOrderFromOrdering(scala.math.Ordering<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #250                // Method scalaz/Scalaz$.ToScalazOrderFromOrdering:(Lscala/math/Ordering;)Lscalaz/Order;
       7: areturn

  public static <M> scalaz.NaturalTransformation<java.lang.Object, M> emptyOrPointNT(boolean, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #259                // Method scalaz/Scalaz$.emptyOrPointNT:(ZLscalaz/Applicative;Lscalaz/PlusEmpty;)Lscalaz/NaturalTransformation;
       9: areturn

  public static <M> scalaz.NaturalTransformation<java.lang.Object, M> pointOrEmptyNT(boolean, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #264                // Method scalaz/Scalaz$.pointOrEmptyNT:(ZLscalaz/Applicative;Lscalaz/PlusEmpty;)Lscalaz/NaturalTransformation;
       9: areturn

  public static <M, A> M emptyOrPoint(boolean, scala.Function0<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #269                // Method scalaz/Scalaz$.emptyOrPoint:(ZLscala/Function0;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
      10: areturn

  public static <M, A> M pointOrEmpty(boolean, scala.Function0<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #272                // Method scalaz/Scalaz$.pointOrEmpty:(ZLscala/Function0;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
      10: areturn

  public static <A> A zeroOrValue(boolean, scala.Function0<A>, scalaz.Monoid<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #279                // Method scalaz/Scalaz$.zeroOrValue:(ZLscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public static <A> A valueOrZero(boolean, scala.Function0<A>, scalaz.Monoid<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #283                // Method scalaz/Scalaz$.valueOrZero:(ZLscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public static int test(boolean);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: invokevirtual #288                // Method scalaz/Scalaz$.test:(Z)I
       7: ireturn

  public static <A> scala.Option<A> option(boolean, scala.Function0<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: invokevirtual #293                // Method scalaz/Scalaz$.option:(ZLscala/Function0;)Lscala/Option;
       8: areturn

  public static <A> A fold(boolean, scala.Function0<A>, scala.Function0<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #298                // Method scalaz/Scalaz$.fold:(ZLscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public static <MA> java.lang.Object whenMU(boolean, scala.Function0<MA>, scalaz.Unapply<scalaz.Applicative, MA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #303                // Method scalaz/Scalaz$.whenMU:(ZLscala/Function0;Lscalaz/Unapply;)Ljava/lang/Object;
       9: areturn

  public static <M, A> M whenM(boolean, scala.Function0<M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #309                // Method scalaz/Scalaz$.whenM:(ZLscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public static <MA> java.lang.Object unlessMU(boolean, scala.Function0<MA>, scalaz.Unapply<scalaz.Applicative, MA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #312                // Method scalaz/Scalaz$.unlessMU:(ZLscala/Function0;Lscalaz/Unapply;)Ljava/lang/Object;
       9: areturn

  public static <M, A> M unlessM(boolean, scala.Function0<M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #315                // Method scalaz/Scalaz$.unlessM:(ZLscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public static void when(boolean, scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: invokevirtual #320                // Method scalaz/Scalaz$.when:(ZLscala/Function0;)V
       8: return

  public static void unless(boolean, scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: invokevirtual #323                // Method scalaz/Scalaz$.unless:(ZLscala/Function0;)V
       8: return

  public static boolean negInverseConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: invokevirtual #329                // Method scalaz/Scalaz$.negInverseConditional:(ZLscala/Function0;)Z
       8: ireturn

  public static boolean negConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: invokevirtual #332                // Method scalaz/Scalaz$.negConditional:(ZLscala/Function0;)Z
       8: ireturn

  public static boolean inverseConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: invokevirtual #335                // Method scalaz/Scalaz$.inverseConditional:(ZLscala/Function0;)Z
       8: ireturn

  public static boolean conditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: invokevirtual #338                // Method scalaz/Scalaz$.conditional:(ZLscala/Function0;)Z
       8: ireturn

  public static boolean nand(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: invokevirtual #341                // Method scalaz/Scalaz$.nand:(ZLscala/Function0;)Z
       8: ireturn

  public static boolean nor(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: invokevirtual #344                // Method scalaz/Scalaz$.nor:(ZLscala/Function0;)Z
       8: ireturn

  public static boolean disjunction(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: invokevirtual #347                // Method scalaz/Scalaz$.disjunction:(ZLscala/Function0;)Z
       8: ireturn

  public static boolean conjunction(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: iload_0
       4: aload_1
       5: invokevirtual #350                // Method scalaz/Scalaz$.conjunction:(ZLscala/Function0;)Z
       8: ireturn

  public static <A, B> scala.collection.immutable.LazyList<B> unfoldm(A, scala.Function1<A, scalaz.Maybe<scala.Tuple2<B, A>>>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #356                // Method scalaz/Scalaz$.unfoldm:(Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/LazyList;
       8: areturn

  public static <A, B> scala.collection.immutable.LazyList<B> unfold(A, scala.Function1<A, scala.Option<scala.Tuple2<B, A>>>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #360                // Method scalaz/Scalaz$.unfold:(Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/LazyList;
       8: areturn

  public static <A> scala.collection.immutable.LazyList<A> intersperse(scala.collection.immutable.LazyList<A>, A);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #366                // Method scalaz/Scalaz$.intersperse:(Lscala/collection/immutable/LazyList;Ljava/lang/Object;)Lscala/collection/immutable/LazyList;
       8: areturn

  public static <A, B, M> M unfoldForestM(scala.collection.immutable.LazyList<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #372                // Method scalaz/Scalaz$.unfoldForestM:(Lscala/collection/immutable/LazyList;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public static <A, B> scala.collection.immutable.LazyList<scalaz.Tree<B>> unfoldForest(scala.collection.immutable.LazyList<A>, scala.Function1<A, scala.Tuple2<B, scala.Function0<scala.collection.immutable.LazyList<A>>>>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #378                // Method scalaz/Scalaz$.unfoldForest:(Lscala/collection/immutable/LazyList;Lscala/Function1;)Lscala/collection/immutable/LazyList;
       8: areturn

  public static <A, B, C> scala.collection.immutable.LazyList<scala.Function1<B, C>> zapp(scala.collection.immutable.LazyList<A>, scala.collection.immutable.LazyList<scala.Function1<A, scala.Function1<B, C>>>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #383                // Method scalaz/Scalaz$.zapp:(Lscala/collection/immutable/LazyList;Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
       8: areturn

  public static <A> scala.collection.immutable.LazyList<scala.collection.immutable.LazyList<A>> tails(scala.collection.immutable.LazyList<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #387                // Method scalaz/Scalaz$.tails:(Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
       7: areturn

  public static <A> scala.collection.immutable.LazyList<scala.collection.immutable.LazyList<A>> heads(scala.collection.immutable.LazyList<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #390                // Method scalaz/Scalaz$.heads:(Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
       7: areturn

  public static <A> scalaz.Maybe<scalaz.Zipper<A>> zipperEnd(scala.collection.immutable.LazyList<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #395                // Method scalaz/Scalaz$.zipperEnd:(Lscala/collection/immutable/LazyList;)Lscalaz/Maybe;
       7: areturn

  public static <A> scalaz.Maybe<scalaz.Zipper<A>> toZipper(scala.collection.immutable.LazyList<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #398                // Method scalaz/Scalaz$.toZipper:(Lscala/collection/immutable/LazyList;)Lscalaz/Maybe;
       7: areturn

  public static <A> scala.collection.immutable.LazyList<A> interleave(scala.collection.immutable.LazyList<A>, scala.collection.immutable.LazyList<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #404                // Method scalaz/Scalaz$.interleave:(Lscala/collection/immutable/LazyList;Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
       8: areturn

  public static <A, B> B foldLiftOpt(scala.Option<A>, scala.Function0<B>, scala.Function1<scala.Option<A>, B>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #411                // Method scalaz/Scalaz$.foldLiftOpt:(Lscala/Option;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public static <F, A, B> B foldLift(scala.Option<A>, scala.Function0<B>, scala.Function1<F, B>, scalaz.Applicative<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #416                // Method scalaz/Scalaz$.foldLift:(Lscala/Option;Lscala/Function0;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      10: areturn

  public static <A, F> F getOrElseF(scala.Option<A>, scala.Function0<F>, scalaz.Applicative<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #423                // Method scalaz/Scalaz$.getOrElseF:(Lscala/Option;Lscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public static <A, M> M orEmpty(scala.Option<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #430                // Method scalaz/Scalaz$.orEmpty:(Lscala/Option;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       9: areturn

  public static <A> scalaz.Maybe<A> toMaybe(scala.Option<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #435                // Method scalaz/Scalaz$.toMaybe:(Lscala/Option;)Lscalaz/Maybe;
       7: areturn

  public static <A, B> scalaz.$bslash$div<A, B> toLeft(scala.Option<A>, scala.Function0<B>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #440                // Method scalaz/Scalaz$.toLeft:(Lscala/Option;Lscala/Function0;)Lscalaz/$bslash$div;
       8: areturn

  public static <A, E> scalaz.$bslash$div<E, A> toRight(scala.Option<A>, scala.Function0<E>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #444                // Method scalaz/Scalaz$.toRight:(Lscala/Option;Lscala/Function0;)Lscalaz/$bslash$div;
       8: areturn

  public static <A, B> scalaz.Validation<scalaz.NonEmptyList<A>, B> toFailureNel(scala.Option<A>, scala.Function0<B>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #449                // Method scalaz/Scalaz$.toFailureNel:(Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       8: areturn

  public static <A, E> scalaz.Validation<scalaz.NonEmptyList<E>, A> toSuccessNel(scala.Option<A>, scala.Function0<E>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #453                // Method scalaz/Scalaz$.toSuccessNel:(Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       8: areturn

  public static <A, B> scalaz.Validation<A, B> toFailure(scala.Option<A>, scala.Function0<B>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #457                // Method scalaz/Scalaz$.toFailure:(Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       8: areturn

  public static <A, E> scalaz.Validation<E, A> toSuccess(scala.Option<A>, scala.Function0<E>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #461                // Method scalaz/Scalaz$.toSuccess:(Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       8: areturn

  public static <A, X> X fold(scala.Option<A>, scala.Function1<A, X>, scala.Function0<X>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #467                // Method scalaz/Scalaz$.fold:(Lscala/Option;Lscala/Function1;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public static <A, X> X cata(scala.Option<A>, scala.Function1<A, X>, scala.Function0<X>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #470                // Method scalaz/Scalaz$.cata:(Lscala/Option;Lscala/Function1;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public static <A> scala.Option<A> none();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #474                // Method scalaz/Scalaz$.none:()Lscala/Option;
       6: areturn

  public static <A> scala.Option<A> some(A);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #478                // Method scalaz/Scalaz$.some:(Ljava/lang/Object;)Lscala/Option;
       7: areturn

  public static <A> scala.collection.immutable.List<scala.Tuple2<A, A>> adjacentPairs(scala.collection.immutable.List<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #482                // Method scalaz/Scalaz$.adjacentPairs:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       7: areturn

  public static <A> scala.collection.immutable.List<scala.Tuple2<A, A>> allPairs(scala.collection.immutable.List<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #485                // Method scalaz/Scalaz$.allPairs:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       7: areturn

  public static <A> scala.collection.immutable.List<scala.collection.immutable.List<A>> initz(scala.collection.immutable.List<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #489                // Method scalaz/Scalaz$.initz:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       7: areturn

  public static <A> scala.collection.immutable.List<scala.collection.immutable.List<A>> tailz(scala.collection.immutable.List<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #492                // Method scalaz/Scalaz$.tailz:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       7: areturn

  public static <A, B, C> scala.Tuple2<C, scala.collection.immutable.List<B>> mapAccumRight(scala.collection.immutable.List<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #498                // Method scalaz/Scalaz$.mapAccumRight:(Lscala/collection/immutable/List;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       9: areturn

  public static <A, B, C> scala.Tuple2<C, scala.collection.immutable.List<B>> mapAccumLeft(scala.collection.immutable.List<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #501                // Method scalaz/Scalaz$.mapAccumLeft:(Lscala/collection/immutable/List;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       9: areturn

  public static <A> scala.collection.immutable.List<scalaz.NonEmptyList<A>> groupWhen(scala.collection.immutable.List<A>, scala.Function2<A, A, java.lang.Object>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #506                // Method scalaz/Scalaz$.groupWhen:(Lscala/collection/immutable/List;Lscala/Function2;)Lscala/collection/immutable/List;
       8: areturn

  public static <A, B> scala.collection.immutable.Map<B, scalaz.NonEmptyList<A>> groupBy1(scala.collection.immutable.List<A>, scala.Function1<A, B>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #511                // Method scalaz/Scalaz$.groupBy1:(Lscala/collection/immutable/List;Lscala/Function1;)Lscala/collection/immutable/Map;
       8: areturn

  public static <A, M> M groupWhenM(scala.collection.immutable.List<A>, scala.Function2<A, A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #517                // Method scalaz/Scalaz$.groupWhenM:(Lscala/collection/immutable/List;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public static <A, M> M breakM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #523                // Method scalaz/Scalaz$.breakM:(Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public static <A, M> M spanM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #527                // Method scalaz/Scalaz$.spanM:(Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public static <A, M> M partitionM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #533                // Method scalaz/Scalaz$.partitionM:(Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public static <A> scala.collection.immutable.List<scala.collection.immutable.List<A>> powerset(scala.collection.immutable.List<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #536                // Method scalaz/Scalaz$.powerset:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       7: areturn

  public static <A, M> M findM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #540                // Method scalaz/Scalaz$.findM:(Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public static <A, M> M filterM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #544                // Method scalaz/Scalaz$.filterM:(Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public static <A, M> M takeUntilM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #548                // Method scalaz/Scalaz$.takeUntilM:(Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public static <A, M> M takeWhileM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #552                // Method scalaz/Scalaz$.takeWhileM:(Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public static <A, B> B $less$up$greater(scala.collection.immutable.List<A>, scala.Function1<scalaz.NonEmptyList<A>, B>, scalaz.Monoid<B>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #557                // Method scalaz/Scalaz$.$less$up$greater:(Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public static <A> scalaz.Maybe<scalaz.Zipper<A>> zipperEnd(scala.collection.immutable.List<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #561                // Method scalaz/Scalaz$.zipperEnd:(Lscala/collection/immutable/List;)Lscalaz/Maybe;
       7: areturn

  public static <A> scalaz.Maybe<scalaz.Zipper<A>> toZipper(scala.collection.immutable.List<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #563                // Method scalaz/Scalaz$.toZipper:(Lscala/collection/immutable/List;)Lscalaz/Maybe;
       7: areturn

  public static <A> scalaz.Maybe<scalaz.NonEmptyList<A>> toNel(scala.collection.immutable.List<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #567                // Method scalaz/Scalaz$.toNel:(Lscala/collection/immutable/List;)Lscalaz/Maybe;
       7: areturn

  public static <A> scala.collection.immutable.List<A> nil();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #572                // Method scalaz/Scalaz$.nil:()Lscala/collection/immutable/List;
       6: areturn

  public static <A> scala.Option<scala.collection.immutable.List<A>> tailOption(scala.collection.immutable.List<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #577                // Method scalaz/Scalaz$.tailOption:(Lscala/collection/immutable/List;)Lscala/Option;
       7: areturn

  public static <A> scala.collection.immutable.List<A> intersperse(scala.collection.immutable.List<A>, A);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #581                // Method scalaz/Scalaz$.intersperse:(Lscala/collection/immutable/List;Ljava/lang/Object;)Lscala/collection/immutable/List;
       8: areturn

  public static scalaz.Enum<java.time.Month> monthInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #586                // Method scalaz/Scalaz$.monthInstance:()Lscalaz/Enum;
       6: areturn

  public static scalaz.Enum<java.time.LocalDate> localDateInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #590                // Method scalaz/Scalaz$.localDateInstance:()Lscalaz/Enum;
       6: areturn

  public static scalaz.Enum<java.time.Year> yearInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #594                // Method scalaz/Scalaz$.yearInstance:()Lscalaz/Enum;
       6: areturn

  public static scalaz.Order<java.time.LocalTime> localTimeInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #599                // Method scalaz/Scalaz$.localTimeInstance:()Lscalaz/Order;
       6: areturn

  public static scalaz.Order<java.time.MonthDay> monthDayInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #603                // Method scalaz/Scalaz$.monthDayInstance:()Lscalaz/Order;
       6: areturn

  public static scalaz.Enum<java.time.YearMonth> yearMonthInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #607                // Method scalaz/Scalaz$.yearMonthInstance:()Lscalaz/Enum;
       6: areturn

  public static scalaz.Monoid<java.time.Period> periodInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #612                // Method scalaz/Scalaz$.periodInstance:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monoid<java.time.Duration> durationInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #616                // Method scalaz/Scalaz$.durationInstance:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Order<java.time.Instant> instantInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #620                // Method scalaz/Scalaz$.instantInstance:()Lscalaz/Order;
       6: areturn

  public static scalaz.Enum<java.time.DayOfWeek> dayOfWeekInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #624                // Method scalaz/Scalaz$.dayOfWeekInstance:()Lscalaz/Enum;
       6: areturn

  public static scalaz.Order<java.time.ZoneOffset> zoneOffsetInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #628                // Method scalaz/Scalaz$.zoneOffsetInstance:()Lscalaz/Order;
       6: areturn

  public static scalaz.Order<java.time.ZonedDateTime> zonedDateTime();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #632                // Method scalaz/Scalaz$.zonedDateTime:()Lscalaz/Order;
       6: areturn

  public static scalaz.Order<java.time.OffsetTime> offsetTimeInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #636                // Method scalaz/Scalaz$.offsetTimeInstance:()Lscalaz/Order;
       6: areturn

  public static scalaz.Order<java.time.OffsetDateTime> offsetDateTimeInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #640                // Method scalaz/Scalaz$.offsetDateTimeInstance:()Lscalaz/Order;
       6: areturn

  public static scalaz.Order<java.time.LocalDateTime> localDateTimeInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #644                // Method scalaz/Scalaz$.localDateTimeInstance:()Lscalaz/Order;
       6: areturn

  public static scalaz.Monad<java.util.concurrent.Callable> callableMonad();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #649                // Method scalaz/Scalaz$.callableMonad:()Lscalaz/Monad;
       6: areturn

  public static <A> scalaz.Order<java.util.concurrent.Callable<A>> callableOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #654                // Method scalaz/Scalaz$.callableOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <E extends java.lang.Enum<E>> scalaz.Enum<E> enumInstance(scala.reflect.ClassTag<E>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #660                // Method scalaz/Scalaz$.enumInstance:(Lscala/reflect/ClassTag;)Lscalaz/Enum;
       7: areturn

  public static scalaz.Monoid<java.lang.Object> bigIntegerMultiplication();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #665                // Method scalaz/Scalaz$.bigIntegerMultiplication:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monoid<java.math.BigInteger> bigIntegerInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #669                // Method scalaz/Scalaz$.bigIntegerInstance:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Show<java.math.BigDecimal> javaBigDecimalInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #674                // Method scalaz/Scalaz$.javaBigDecimalInstance:()Lscalaz/Show;
       6: areturn

  public static scalaz.Bitraverse<java.util.Map$Entry> mapEntryBitraverse();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #679                // Method scalaz/Scalaz$.mapEntryBitraverse:()Lscalaz/Bitraverse;
       6: areturn

  public static <A> scalaz.Monoid<scala.math.Ordering<A>> orderingMonoid();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #683                // Method scalaz/Scalaz$.orderingMonoid:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monoid<java.lang.Object> bigIntMultiplication();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #686                // Method scalaz/Scalaz$.bigIntMultiplication:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monoid<scala.math.BigInt> bigIntInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #690                // Method scalaz/Scalaz$.bigIntInstance:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monoid<java.lang.Object> BigDecimalMultiplicationNewType();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #693                // Method scalaz/Scalaz$.BigDecimalMultiplicationNewType:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monoid<scala.math.BigDecimal> bigDecimalInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #697                // Method scalaz/Scalaz$.bigDecimalInstance:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Category<scala.$eq$colon$eq> $eq$colon$eq();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #702                // Method scalaz/Scalaz$.$eq$colon$eq:()Lscalaz/Category;
       6: areturn

  public static scalaz.Category<scala.$less$colon$less> $less$colon$less();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #706                // Method scalaz/Scalaz$.$less$colon$less:()Lscalaz/Category;
       6: areturn

  public static scalaz.Arrow<scala.PartialFunction> partialFunctionInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #711                // Method scalaz/Scalaz$.partialFunctionInstance:()Lscalaz/Arrow;
       6: areturn

  public static <A, B> scalaz.Show<scala.util.Either<A, B>> eitherShow(scalaz.Show<A>, scalaz.Show<B>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #718                // Method scalaz/Scalaz$.eitherShow:(Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
       8: areturn

  public static scalaz.Associative<scala.util.Either> eitherAssociative();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #724                // Method scalaz/Scalaz$.eitherAssociative:()Lscalaz/Associative;
       6: areturn

  public static <A, B> scalaz.Order<scala.util.Either<A, B>> eitherOrder(scalaz.Order<A>, scalaz.Order<B>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #731                // Method scalaz/Scalaz$.eitherOrder:(Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
       8: areturn

  public static <L> scalaz.Traverse<?> eitherMonad();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #736                // Method scalaz/Scalaz$.eitherMonad:()Lscalaz/Traverse;
       6: areturn

  public static scalaz.Bitraverse<scala.util.Either> eitherInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #740                // Method scalaz/Scalaz$.eitherInstance:()Lscalaz/Bitraverse;
       6: areturn

  public static <A, B> scalaz.Equal<scala.util.Either<A, B>> eitherEqual(scalaz.Equal<A>, scalaz.Equal<B>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #747                // Method scalaz/Scalaz$.eitherEqual:(Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
       8: areturn

  public static <A> scalaz.Monoid<scala.concurrent.Future<A>> futureMonoid(scalaz.Monoid<A>, scala.concurrent.ExecutionContext);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #755                // Method scalaz/Scalaz$.futureMonoid:(Lscalaz/Monoid;Lscala/concurrent/ExecutionContext;)Lscalaz/Monoid;
       8: areturn

  public static scalaz.Comonad<scala.concurrent.Future> futureComonad(scala.concurrent.duration.Duration, scala.concurrent.ExecutionContext);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #763                // Method scalaz/Scalaz$.futureComonad:(Lscala/concurrent/duration/Duration;Lscala/concurrent/ExecutionContext;)Lscalaz/Comonad;
       8: areturn

  public static <A> scalaz.Semigroup<scala.concurrent.Future<A>> futureSemigroup(scalaz.Semigroup<A>, scala.concurrent.ExecutionContext);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #769                // Method scalaz/Scalaz$.futureSemigroup:(Lscalaz/Semigroup;Lscala/concurrent/ExecutionContext;)Lscalaz/Semigroup;
       8: areturn

  public static scalaz.Nondeterminism<scala.concurrent.Future> futureInstance(scala.concurrent.ExecutionContext);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #775                // Method scalaz/Scalaz$.futureInstance:(Lscala/concurrent/ExecutionContext;)Lscalaz/Nondeterminism;
       7: areturn

  public static <A> scalaz.Order<scala.collection.immutable.Vector<A>> vectorOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #779                // Method scalaz/Scalaz$.vectorOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Show<scala.collection.immutable.Vector<A>> vectorShow(scalaz.Show<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #784                // Method scalaz/Scalaz$.vectorShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Monoid<scala.collection.immutable.Vector<A>> vectorMonoid();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #788                // Method scalaz/Scalaz$.vectorMonoid:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Traverse<scala.collection.immutable.Vector> vectorInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #792                // Method scalaz/Scalaz$.vectorInstance:()Lscalaz/Traverse;
       6: areturn

  public static <A> scalaz.Equal<scala.collection.immutable.Vector<A>> vectorEqual(scalaz.Equal<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #797                // Method scalaz/Scalaz$.vectorEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <A1, A2, A3, A4, A5, A6, A7, A8> scalaz.SemiLattice<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> tuple8SemiLattice(scalaz.SemiLattice<A1>, scalaz.SemiLattice<A2>, scalaz.SemiLattice<A3>, scalaz.SemiLattice<A4>, scalaz.SemiLattice<A5>, scalaz.SemiLattice<A6>, scalaz.SemiLattice<A7>, scalaz.SemiLattice<A8>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: invokevirtual #810                // Method scalaz/Scalaz$.tuple8SemiLattice:(Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
      18: areturn

  public static <A1, A2, A3, A4, A5, A6, A7> scalaz.SemiLattice<scala.Tuple7<A1, A2, A3, A4, A5, A6, A7>> tuple7SemiLattice(scalaz.SemiLattice<A1>, scalaz.SemiLattice<A2>, scalaz.SemiLattice<A3>, scalaz.SemiLattice<A4>, scalaz.SemiLattice<A5>, scalaz.SemiLattice<A6>, scalaz.SemiLattice<A7>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #816                // Method scalaz/Scalaz$.tuple7SemiLattice:(Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
      16: areturn

  public static <A1, A2, A3, A4, A5, A6> scalaz.SemiLattice<scala.Tuple6<A1, A2, A3, A4, A5, A6>> tuple6SemiLattice(scalaz.SemiLattice<A1>, scalaz.SemiLattice<A2>, scalaz.SemiLattice<A3>, scalaz.SemiLattice<A4>, scalaz.SemiLattice<A5>, scalaz.SemiLattice<A6>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #821                // Method scalaz/Scalaz$.tuple6SemiLattice:(Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
      14: areturn

  public static <A1, A2, A3, A4, A5> scalaz.SemiLattice<scala.Tuple5<A1, A2, A3, A4, A5>> tuple5SemiLattice(scalaz.SemiLattice<A1>, scalaz.SemiLattice<A2>, scalaz.SemiLattice<A3>, scalaz.SemiLattice<A4>, scalaz.SemiLattice<A5>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #826                // Method scalaz/Scalaz$.tuple5SemiLattice:(Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
      12: areturn

  public static <A1, A2, A3, A4> scalaz.SemiLattice<scala.Tuple4<A1, A2, A3, A4>> tuple4SemiLattice(scalaz.SemiLattice<A1>, scalaz.SemiLattice<A2>, scalaz.SemiLattice<A3>, scalaz.SemiLattice<A4>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #831                // Method scalaz/Scalaz$.tuple4SemiLattice:(Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
      10: areturn

  public static <A1, A2, A3> scalaz.SemiLattice<scala.Tuple3<A1, A2, A3>> tuple3SemiLattice(scalaz.SemiLattice<A1>, scalaz.SemiLattice<A2>, scalaz.SemiLattice<A3>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #836                // Method scalaz/Scalaz$.tuple3SemiLattice:(Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
       9: areturn

  public static <A1, A2> scalaz.SemiLattice<scala.Tuple2<A1, A2>> tuple2SemiLattice(scalaz.SemiLattice<A1>, scalaz.SemiLattice<A2>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #841                // Method scalaz/Scalaz$.tuple2SemiLattice:(Lscalaz/SemiLattice;Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
       8: areturn

  public static <A1> scalaz.SemiLattice<scala.Tuple1<A1>> tuple1SemiLattice(scalaz.SemiLattice<A1>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #846                // Method scalaz/Scalaz$.tuple1SemiLattice:(Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
       7: areturn

  public static <A1, A2, A3, A4, A5, A6, A7> scalaz.Monad<?> tuple8Monad(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>, scalaz.Monoid<A5>, scalaz.Monoid<A6>, scalaz.Monoid<A7>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #851                // Method scalaz/Scalaz$.tuple8Monad:(Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monad;
      16: areturn

  public static <A1, A2, A3, A4, A5, A6> scalaz.Monad<?> tuple7Monad(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>, scalaz.Monoid<A5>, scalaz.Monoid<A6>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #856                // Method scalaz/Scalaz$.tuple7Monad:(Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monad;
      14: areturn

  public static <A1, A2, A3, A4, A5> scalaz.Monad<?> tuple6Monad(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>, scalaz.Monoid<A5>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #861                // Method scalaz/Scalaz$.tuple6Monad:(Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monad;
      12: areturn

  public static <A1, A2, A3, A4> scalaz.Monad<?> tuple5Monad(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #866                // Method scalaz/Scalaz$.tuple5Monad:(Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monad;
      10: areturn

  public static <A1, A2, A3> scalaz.Monad<?> tuple4Monad(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #871                // Method scalaz/Scalaz$.tuple4Monad:(Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monad;
       9: areturn

  public static <A1, A2> scalaz.Monad<?> tuple3Monad(scalaz.Monoid<A1>, scalaz.Monoid<A2>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #876                // Method scalaz/Scalaz$.tuple3Monad:(Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monad;
       8: areturn

  public static <A1> scalaz.Monad<?> tuple2Monad(scalaz.Monoid<A1>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #881                // Method scalaz/Scalaz$.tuple2Monad:(Lscalaz/Monoid;)Lscalaz/Monad;
       7: areturn

  public static <A1, A2, A3, A4, A5, A6, A7> scalaz.Cozip<?> tuple8Cozip();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #886                // Method scalaz/Scalaz$.tuple8Cozip:()Lscalaz/Cozip;
       6: areturn

  public static <A1, A2, A3, A4, A5, A6> scalaz.Cozip<?> tuple7Cozip();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #890                // Method scalaz/Scalaz$.tuple7Cozip:()Lscalaz/Cozip;
       6: areturn

  public static <A1, A2, A3, A4, A5> scalaz.Cozip<?> tuple6Cozip();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #894                // Method scalaz/Scalaz$.tuple6Cozip:()Lscalaz/Cozip;
       6: areturn

  public static <A1, A2, A3, A4> scalaz.Cozip<?> tuple5Cozip();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #898                // Method scalaz/Scalaz$.tuple5Cozip:()Lscalaz/Cozip;
       6: areturn

  public static <A1, A2, A3> scalaz.Cozip<?> tuple4Cozip();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #902                // Method scalaz/Scalaz$.tuple4Cozip:()Lscalaz/Cozip;
       6: areturn

  public static <A1, A2> scalaz.Cozip<?> tuple3Cozip();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #906                // Method scalaz/Scalaz$.tuple3Cozip:()Lscalaz/Cozip;
       6: areturn

  public static <A1> scalaz.Cozip<?> tuple2Cozip();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #910                // Method scalaz/Scalaz$.tuple2Cozip:()Lscalaz/Cozip;
       6: areturn

  public static scalaz.Cozip<scala.Tuple1> tuple1Cozip();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #914                // Method scalaz/Scalaz$.tuple1Cozip:()Lscalaz/Cozip;
       6: areturn

  public static <A1, A2, A3, A4, A5, A6, A7, A8> scalaz.Order<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> tuple8Order(scalaz.Order<A1>, scalaz.Order<A2>, scalaz.Order<A3>, scalaz.Order<A4>, scalaz.Order<A5>, scalaz.Order<A6>, scalaz.Order<A7>, scalaz.Order<A8>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: invokevirtual #919                // Method scalaz/Scalaz$.tuple8Order:(Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
      18: areturn

  public static <A1, A2, A3, A4, A5, A6, A7> scalaz.Order<scala.Tuple7<A1, A2, A3, A4, A5, A6, A7>> tuple7Order(scalaz.Order<A1>, scalaz.Order<A2>, scalaz.Order<A3>, scalaz.Order<A4>, scalaz.Order<A5>, scalaz.Order<A6>, scalaz.Order<A7>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #924                // Method scalaz/Scalaz$.tuple7Order:(Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
      16: areturn

  public static <A1, A2, A3, A4, A5, A6> scalaz.Order<scala.Tuple6<A1, A2, A3, A4, A5, A6>> tuple6Order(scalaz.Order<A1>, scalaz.Order<A2>, scalaz.Order<A3>, scalaz.Order<A4>, scalaz.Order<A5>, scalaz.Order<A6>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #929                // Method scalaz/Scalaz$.tuple6Order:(Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
      14: areturn

  public static <A1, A2, A3, A4, A5> scalaz.Order<scala.Tuple5<A1, A2, A3, A4, A5>> tuple5Order(scalaz.Order<A1>, scalaz.Order<A2>, scalaz.Order<A3>, scalaz.Order<A4>, scalaz.Order<A5>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #934                // Method scalaz/Scalaz$.tuple5Order:(Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
      12: areturn

  public static <A1, A2, A3, A4> scalaz.Order<scala.Tuple4<A1, A2, A3, A4>> tuple4Order(scalaz.Order<A1>, scalaz.Order<A2>, scalaz.Order<A3>, scalaz.Order<A4>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #939                // Method scalaz/Scalaz$.tuple4Order:(Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
      10: areturn

  public static <A1, A2, A3> scalaz.Order<scala.Tuple3<A1, A2, A3>> tuple3Order(scalaz.Order<A1>, scalaz.Order<A2>, scalaz.Order<A3>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #944                // Method scalaz/Scalaz$.tuple3Order:(Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
       9: areturn

  public static <A1, A2> scalaz.Order<scala.Tuple2<A1, A2>> tuple2Order(scalaz.Order<A1>, scalaz.Order<A2>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #948                // Method scalaz/Scalaz$.tuple2Order:(Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
       8: areturn

  public static <A1> scalaz.Order<scala.Tuple1<A1>> tuple1Order(scalaz.Order<A1>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #952                // Method scalaz/Scalaz$.tuple1Order:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A1, A2, A3, A4, A5, A6, A7, A8> scalaz.Show<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> tuple8Show(scalaz.Show<A1>, scalaz.Show<A2>, scalaz.Show<A3>, scalaz.Show<A4>, scalaz.Show<A5>, scalaz.Show<A6>, scalaz.Show<A7>, scalaz.Show<A8>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: invokevirtual #957                // Method scalaz/Scalaz$.tuple8Show:(Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
      18: areturn

  public static <A1, A2, A3, A4, A5, A6, A7> scalaz.Show<scala.Tuple7<A1, A2, A3, A4, A5, A6, A7>> tuple7Show(scalaz.Show<A1>, scalaz.Show<A2>, scalaz.Show<A3>, scalaz.Show<A4>, scalaz.Show<A5>, scalaz.Show<A6>, scalaz.Show<A7>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #962                // Method scalaz/Scalaz$.tuple7Show:(Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
      16: areturn

  public static <A1, A2, A3, A4, A5, A6> scalaz.Show<scala.Tuple6<A1, A2, A3, A4, A5, A6>> tuple6Show(scalaz.Show<A1>, scalaz.Show<A2>, scalaz.Show<A3>, scalaz.Show<A4>, scalaz.Show<A5>, scalaz.Show<A6>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #967                // Method scalaz/Scalaz$.tuple6Show:(Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
      14: areturn

  public static <A1, A2, A3, A4, A5> scalaz.Show<scala.Tuple5<A1, A2, A3, A4, A5>> tuple5Show(scalaz.Show<A1>, scalaz.Show<A2>, scalaz.Show<A3>, scalaz.Show<A4>, scalaz.Show<A5>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #972                // Method scalaz/Scalaz$.tuple5Show:(Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
      12: areturn

  public static <A1, A2, A3, A4> scalaz.Show<scala.Tuple4<A1, A2, A3, A4>> tuple4Show(scalaz.Show<A1>, scalaz.Show<A2>, scalaz.Show<A3>, scalaz.Show<A4>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #977                // Method scalaz/Scalaz$.tuple4Show:(Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
      10: areturn

  public static <A1, A2, A3> scalaz.Show<scala.Tuple3<A1, A2, A3>> tuple3Show(scalaz.Show<A1>, scalaz.Show<A2>, scalaz.Show<A3>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #982                // Method scalaz/Scalaz$.tuple3Show:(Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
       9: areturn

  public static <A1, A2> scalaz.Show<scala.Tuple2<A1, A2>> tuple2Show(scalaz.Show<A1>, scalaz.Show<A2>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #986                // Method scalaz/Scalaz$.tuple2Show:(Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
       8: areturn

  public static <A1> scalaz.Show<scala.Tuple1<A1>> tuple1Show(scalaz.Show<A1>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #990                // Method scalaz/Scalaz$.tuple1Show:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A1, A2, A3, A4, A5, A6, A7, A8> scalaz.Equal<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> tuple8Equal(scalaz.Equal<A1>, scalaz.Equal<A2>, scalaz.Equal<A3>, scalaz.Equal<A4>, scalaz.Equal<A5>, scalaz.Equal<A6>, scalaz.Equal<A7>, scalaz.Equal<A8>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: invokevirtual #995                // Method scalaz/Scalaz$.tuple8Equal:(Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
      18: areturn

  public static <A1, A2, A3, A4, A5, A6, A7> scalaz.Equal<scala.Tuple7<A1, A2, A3, A4, A5, A6, A7>> tuple7Equal(scalaz.Equal<A1>, scalaz.Equal<A2>, scalaz.Equal<A3>, scalaz.Equal<A4>, scalaz.Equal<A5>, scalaz.Equal<A6>, scalaz.Equal<A7>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #1000               // Method scalaz/Scalaz$.tuple7Equal:(Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
      16: areturn

  public static <A1, A2, A3, A4, A5, A6> scalaz.Equal<scala.Tuple6<A1, A2, A3, A4, A5, A6>> tuple6Equal(scalaz.Equal<A1>, scalaz.Equal<A2>, scalaz.Equal<A3>, scalaz.Equal<A4>, scalaz.Equal<A5>, scalaz.Equal<A6>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #1005               // Method scalaz/Scalaz$.tuple6Equal:(Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
      14: areturn

  public static <A1, A2, A3, A4, A5> scalaz.Equal<scala.Tuple5<A1, A2, A3, A4, A5>> tuple5Equal(scalaz.Equal<A1>, scalaz.Equal<A2>, scalaz.Equal<A3>, scalaz.Equal<A4>, scalaz.Equal<A5>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #1010               // Method scalaz/Scalaz$.tuple5Equal:(Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
      12: areturn

  public static <A1, A2, A3, A4> scalaz.Equal<scala.Tuple4<A1, A2, A3, A4>> tuple4Equal(scalaz.Equal<A1>, scalaz.Equal<A2>, scalaz.Equal<A3>, scalaz.Equal<A4>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #1015               // Method scalaz/Scalaz$.tuple4Equal:(Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
      10: areturn

  public static <A1, A2, A3> scalaz.Equal<scala.Tuple3<A1, A2, A3>> tuple3Equal(scalaz.Equal<A1>, scalaz.Equal<A2>, scalaz.Equal<A3>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #1020               // Method scalaz/Scalaz$.tuple3Equal:(Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
       9: areturn

  public static <A1, A2> scalaz.Equal<scala.Tuple2<A1, A2>> tuple2Equal(scalaz.Equal<A1>, scalaz.Equal<A2>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1024               // Method scalaz/Scalaz$.tuple2Equal:(Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
       8: areturn

  public static <A1> scalaz.Equal<scala.Tuple1<A1>> tuple1Equal(scalaz.Equal<A1>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1028               // Method scalaz/Scalaz$.tuple1Equal:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <A1, A2, A3, A4, A5, A6, A7> scalaz.BindRec<?> tuple8BindRec(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>, scalaz.Semigroup<A5>, scalaz.Semigroup<A6>, scalaz.Semigroup<A7>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #1040               // Method scalaz/Scalaz$.tuple8BindRec:(Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/BindRec;
      16: areturn

  public static <A1, A2, A3, A4, A5, A6> scalaz.BindRec<?> tuple7BindRec(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>, scalaz.Semigroup<A5>, scalaz.Semigroup<A6>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #1051               // Method scalaz/Scalaz$.tuple7BindRec:(Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/BindRec;
      14: areturn

  public static <A1, A2, A3, A4, A5> scalaz.BindRec<?> tuple6BindRec(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>, scalaz.Semigroup<A5>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #1058               // Method scalaz/Scalaz$.tuple6BindRec:(Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/BindRec;
      12: areturn

  public static <A1, A2, A3, A4> scalaz.BindRec<?> tuple5BindRec(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #1066               // Method scalaz/Scalaz$.tuple5BindRec:(Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/BindRec;
      10: areturn

  public static <A1, A2, A3> scalaz.BindRec<?> tuple4BindRec(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #1071               // Method scalaz/Scalaz$.tuple4BindRec:(Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/BindRec;
       9: areturn

  public static <A1, A2> scalaz.BindRec<?> tuple3BindRec(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1076               // Method scalaz/Scalaz$.tuple3BindRec:(Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/BindRec;
       8: areturn

  public static <A1> scalaz.BindRec<?> tuple2BindRec(scalaz.Semigroup<A1>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1081               // Method scalaz/Scalaz$.tuple2BindRec:(Lscalaz/Semigroup;)Lscalaz/BindRec;
       7: areturn

  public static scalaz.Traverse<scala.Tuple1> tuple1Instance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1085               // Method scalaz/Scalaz$.tuple1Instance:()Lscalaz/Traverse;
       6: areturn

  public static <A1, A2, A3, A4, A5, A6, A7, A8> scalaz.Band<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> tuple8Band(scalaz.Band<A1>, scalaz.Band<A2>, scalaz.Band<A3>, scalaz.Band<A4>, scalaz.Band<A5>, scalaz.Band<A6>, scalaz.Band<A7>, scalaz.Band<A8>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: invokevirtual #1090               // Method scalaz/Scalaz$.tuple8Band:(Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;)Lscalaz/Band;
      18: areturn

  public static <A1, A2, A3, A4, A5, A6, A7> scalaz.Band<scala.Tuple7<A1, A2, A3, A4, A5, A6, A7>> tuple7Band(scalaz.Band<A1>, scalaz.Band<A2>, scalaz.Band<A3>, scalaz.Band<A4>, scalaz.Band<A5>, scalaz.Band<A6>, scalaz.Band<A7>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #1096               // Method scalaz/Scalaz$.tuple7Band:(Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;)Lscalaz/Band;
      16: areturn

  public static <A1, A2, A3, A4, A5, A6> scalaz.Band<scala.Tuple6<A1, A2, A3, A4, A5, A6>> tuple6Band(scalaz.Band<A1>, scalaz.Band<A2>, scalaz.Band<A3>, scalaz.Band<A4>, scalaz.Band<A5>, scalaz.Band<A6>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #1101               // Method scalaz/Scalaz$.tuple6Band:(Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;)Lscalaz/Band;
      14: areturn

  public static <A1, A2, A3, A4, A5> scalaz.Band<scala.Tuple5<A1, A2, A3, A4, A5>> tuple5Band(scalaz.Band<A1>, scalaz.Band<A2>, scalaz.Band<A3>, scalaz.Band<A4>, scalaz.Band<A5>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #1106               // Method scalaz/Scalaz$.tuple5Band:(Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;)Lscalaz/Band;
      12: areturn

  public static <A1, A2, A3, A4> scalaz.Band<scala.Tuple4<A1, A2, A3, A4>> tuple4Band(scalaz.Band<A1>, scalaz.Band<A2>, scalaz.Band<A3>, scalaz.Band<A4>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #1111               // Method scalaz/Scalaz$.tuple4Band:(Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;)Lscalaz/Band;
      10: areturn

  public static <A1, A2, A3> scalaz.Band<scala.Tuple3<A1, A2, A3>> tuple3Band(scalaz.Band<A1>, scalaz.Band<A2>, scalaz.Band<A3>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #1116               // Method scalaz/Scalaz$.tuple3Band:(Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;)Lscalaz/Band;
       9: areturn

  public static <A1, A2> scalaz.Band<scala.Tuple2<A1, A2>> tuple2Band(scalaz.Band<A1>, scalaz.Band<A2>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1121               // Method scalaz/Scalaz$.tuple2Band:(Lscalaz/Band;Lscalaz/Band;)Lscalaz/Band;
       8: areturn

  public static <A1> scalaz.Band<scala.Tuple1<A1>> tuple1Band(scalaz.Band<A1>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1126               // Method scalaz/Scalaz$.tuple1Band:(Lscalaz/Band;)Lscalaz/Band;
       7: areturn

  public static scalaz.Associative<scala.Tuple2> tuple2Associative();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1130               // Method scalaz/Scalaz$.tuple2Associative:()Lscalaz/Associative;
       6: areturn

  public static scalaz.Bitraverse<scala.Tuple2> tuple2Bitraverse();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1134               // Method scalaz/Scalaz$.tuple2Bitraverse:()Lscalaz/Bitraverse;
       6: areturn

  public static <A1, A2, A3, A4, A5, A6, A7, A8> scalaz.Monoid<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> tuple8Monoid(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>, scalaz.Monoid<A5>, scalaz.Monoid<A6>, scalaz.Monoid<A7>, scalaz.Monoid<A8>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: invokevirtual #1139               // Method scalaz/Scalaz$.tuple8Monoid:(Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monoid;
      18: areturn

  public static <A1, A2, A3, A4, A5, A6, A7> scalaz.Monoid<scala.Tuple7<A1, A2, A3, A4, A5, A6, A7>> tuple7Monoid(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>, scalaz.Monoid<A5>, scalaz.Monoid<A6>, scalaz.Monoid<A7>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #1144               // Method scalaz/Scalaz$.tuple7Monoid:(Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monoid;
      16: areturn

  public static <A1, A2, A3, A4, A5, A6> scalaz.Monoid<scala.Tuple6<A1, A2, A3, A4, A5, A6>> tuple6Monoid(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>, scalaz.Monoid<A5>, scalaz.Monoid<A6>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #1149               // Method scalaz/Scalaz$.tuple6Monoid:(Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monoid;
      14: areturn

  public static <A1, A2, A3, A4, A5> scalaz.Monoid<scala.Tuple5<A1, A2, A3, A4, A5>> tuple5Monoid(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>, scalaz.Monoid<A5>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #1154               // Method scalaz/Scalaz$.tuple5Monoid:(Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monoid;
      12: areturn

  public static <A1, A2, A3, A4> scalaz.Monoid<scala.Tuple4<A1, A2, A3, A4>> tuple4Monoid(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #1159               // Method scalaz/Scalaz$.tuple4Monoid:(Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monoid;
      10: areturn

  public static <A1, A2, A3> scalaz.Monoid<scala.Tuple3<A1, A2, A3>> tuple3Monoid(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #1164               // Method scalaz/Scalaz$.tuple3Monoid:(Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monoid;
       9: areturn

  public static <A1, A2> scalaz.Monoid<scala.Tuple2<A1, A2>> tuple2Monoid(scalaz.Monoid<A1>, scalaz.Monoid<A2>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1169               // Method scalaz/Scalaz$.tuple2Monoid:(Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monoid;
       8: areturn

  public static <A1> scalaz.Monoid<scala.Tuple1<A1>> tuple1Monoid(scalaz.Monoid<A1>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1174               // Method scalaz/Scalaz$.tuple1Monoid:(Lscalaz/Monoid;)Lscalaz/Monoid;
       7: areturn

  public static <A1, A2, A3, A4, A5, A6, A7> scalaz.Traverse<?> tuple8Functor();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1178               // Method scalaz/Scalaz$.tuple8Functor:()Lscalaz/Traverse;
       6: areturn

  public static <A1, A2, A3, A4, A5, A6> scalaz.Traverse<?> tuple7Functor();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1182               // Method scalaz/Scalaz$.tuple7Functor:()Lscalaz/Traverse;
       6: areturn

  public static <A1, A2, A3, A4, A5> scalaz.Traverse<?> tuple6Functor();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1186               // Method scalaz/Scalaz$.tuple6Functor:()Lscalaz/Traverse;
       6: areturn

  public static <A1, A2, A3, A4> scalaz.Traverse<?> tuple5Functor();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1190               // Method scalaz/Scalaz$.tuple5Functor:()Lscalaz/Traverse;
       6: areturn

  public static <A1, A2, A3> scalaz.Traverse<?> tuple4Functor();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1194               // Method scalaz/Scalaz$.tuple4Functor:()Lscalaz/Traverse;
       6: areturn

  public static <A1, A2> scalaz.Traverse<?> tuple3Functor();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1198               // Method scalaz/Scalaz$.tuple3Functor:()Lscalaz/Traverse;
       6: areturn

  public static <A1> scalaz.Traverse<?> tuple2Instance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1202               // Method scalaz/Scalaz$.tuple2Instance:()Lscalaz/Traverse;
       6: areturn

  public static <A1, A2, A3, A4, A5, A6, A7, A8> scalaz.Semigroup<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> tuple8Semigroup(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>, scalaz.Semigroup<A5>, scalaz.Semigroup<A6>, scalaz.Semigroup<A7>, scalaz.Semigroup<A8>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: invokevirtual #1207               // Method scalaz/Scalaz$.tuple8Semigroup:(Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/Semigroup;
      18: areturn

  public static <A1, A2, A3, A4, A5, A6, A7> scalaz.Semigroup<scala.Tuple7<A1, A2, A3, A4, A5, A6, A7>> tuple7Semigroup(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>, scalaz.Semigroup<A5>, scalaz.Semigroup<A6>, scalaz.Semigroup<A7>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #1212               // Method scalaz/Scalaz$.tuple7Semigroup:(Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/Semigroup;
      16: areturn

  public static <A1, A2, A3, A4, A5, A6> scalaz.Semigroup<scala.Tuple6<A1, A2, A3, A4, A5, A6>> tuple6Semigroup(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>, scalaz.Semigroup<A5>, scalaz.Semigroup<A6>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #1217               // Method scalaz/Scalaz$.tuple6Semigroup:(Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/Semigroup;
      14: areturn

  public static <A1, A2, A3, A4, A5> scalaz.Semigroup<scala.Tuple5<A1, A2, A3, A4, A5>> tuple5Semigroup(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>, scalaz.Semigroup<A5>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #1222               // Method scalaz/Scalaz$.tuple5Semigroup:(Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/Semigroup;
      12: areturn

  public static <A1, A2, A3, A4> scalaz.Semigroup<scala.Tuple4<A1, A2, A3, A4>> tuple4Semigroup(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #1227               // Method scalaz/Scalaz$.tuple4Semigroup:(Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/Semigroup;
      10: areturn

  public static <A1, A2, A3> scalaz.Semigroup<scala.Tuple3<A1, A2, A3>> tuple3Semigroup(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #1232               // Method scalaz/Scalaz$.tuple3Semigroup:(Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/Semigroup;
       9: areturn

  public static <A1, A2> scalaz.Semigroup<scala.Tuple2<A1, A2>> tuple2Semigroup(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1237               // Method scalaz/Scalaz$.tuple2Semigroup:(Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/Semigroup;
       8: areturn

  public static <A1> scalaz.Semigroup<scala.Tuple1<A1>> tuple1Semigroup(scalaz.Semigroup<A1>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1242               // Method scalaz/Scalaz$.tuple1Semigroup:(Lscalaz/Semigroup;)Lscalaz/Semigroup;
       7: areturn

  public static <A> scalaz.Show<scala.collection.immutable.LazyList<A>> lazylistShow(scalaz.Show<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1246               // Method scalaz/Scalaz$.lazylistShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Order<scala.collection.immutable.LazyList<A>> lazylistOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1250               // Method scalaz/Scalaz$.lazylistOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Equal<scala.collection.immutable.LazyList<A>> lazylistEqual(scalaz.Equal<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1254               // Method scalaz/Scalaz$.lazylistEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <A> scalaz.Monoid<scala.collection.immutable.LazyList<A>> lazylistMonoid();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1258               // Method scalaz/Scalaz$.lazylistMonoid:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Applicative<?> lazylistZipApplicative();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1263               // Method scalaz/Scalaz$.lazylistZipApplicative:()Lscalaz/Applicative;
       6: areturn

  public static scalaz.Traverse<scala.collection.immutable.LazyList> lazylistInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1267               // Method scalaz/Scalaz$.lazylistInstance:()Lscalaz/Traverse;
       6: areturn

  public static <A> scalaz.Show<scala.collection.immutable.Stream<A>> streamShow(scalaz.Show<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1271               // Method scalaz/Scalaz$.streamShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Order<scala.collection.immutable.Stream<A>> streamOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1275               // Method scalaz/Scalaz$.streamOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Equal<scala.collection.immutable.Stream<A>> streamEqual(scalaz.Equal<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1279               // Method scalaz/Scalaz$.streamEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <A> scalaz.Monoid<scala.collection.immutable.Stream<A>> streamMonoid();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1283               // Method scalaz/Scalaz$.streamMonoid:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Applicative<?> streamZipApplicative();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1286               // Method scalaz/Scalaz$.streamZipApplicative:()Lscalaz/Applicative;
       6: areturn

  public static scalaz.Traverse<scala.collection.immutable.Stream> streamInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1290               // Method scalaz/Scalaz$.streamInstance:()Lscalaz/Traverse;
       6: areturn

  public static scalaz.Monoid<java.lang.String> stringInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1294               // Method scalaz/Scalaz$.stringInstance:()Lscalaz/Monoid;
       6: areturn

  public static <A> scalaz.Show<scala.collection.immutable.Set<A>> setShow(scalaz.Show<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1299               // Method scalaz/Scalaz$.setShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Monoid<scala.collection.immutable.Set<A>> setMonoid();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1303               // Method scalaz/Scalaz$.setMonoid:()Lscalaz/Monoid;
       6: areturn

  public static <A> scalaz.Order<scala.collection.immutable.Set<A>> setOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1307               // Method scalaz/Scalaz$.setOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static scalaz.Foldable<scala.collection.immutable.Set> setInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1312               // Method scalaz/Scalaz$.setInstance:()Lscalaz/Foldable;
       6: areturn

  public static scalaz.Monad<java.lang.Object> optionMaxMonad();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1316               // Method scalaz/Scalaz$.optionMaxMonad:()Lscalaz/Monad;
       6: areturn

  public static <A> scalaz.Order<java.lang.Object> optionMaxOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1320               // Method scalaz/Scalaz$.optionMaxOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Show<java.lang.Object> optionMaxShow(scalaz.Show<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1324               // Method scalaz/Scalaz$.optionMaxShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Monoid<java.lang.Object> optionMax(scalaz.Order<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1330               // Method scalaz/Scalaz$.optionMax:(Lscalaz/Order;)Lscalaz/Monoid;
       7: areturn

  public static scalaz.Monad<java.lang.Object> optionMinMonad();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1333               // Method scalaz/Scalaz$.optionMinMonad:()Lscalaz/Monad;
       6: areturn

  public static <A> scalaz.Order<java.lang.Object> optionMinOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1336               // Method scalaz/Scalaz$.optionMinOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Show<java.lang.Object> optionMinShow(scalaz.Show<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1339               // Method scalaz/Scalaz$.optionMinShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Monoid<java.lang.Object> optionMin(scalaz.Order<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1342               // Method scalaz/Scalaz$.optionMin:(Lscalaz/Order;)Lscalaz/Monoid;
       7: areturn

  public static scalaz.Monad<java.lang.Object> optionLastMonad();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1345               // Method scalaz/Scalaz$.optionLastMonad:()Lscalaz/Monad;
       6: areturn

  public static <A> scalaz.Order<java.lang.Object> optionLastOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1348               // Method scalaz/Scalaz$.optionLastOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Show<java.lang.Object> optionLastShow(scalaz.Show<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1351               // Method scalaz/Scalaz$.optionLastShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Monoid<java.lang.Object> optionLast();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1355               // Method scalaz/Scalaz$.optionLast:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monad<java.lang.Object> optionFirstMonad();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1358               // Method scalaz/Scalaz$.optionFirstMonad:()Lscalaz/Monad;
       6: areturn

  public static <A> scalaz.Order<java.lang.Object> optionFirstOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1361               // Method scalaz/Scalaz$.optionFirstOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Show<java.lang.Object> optionFirstShow(scalaz.Show<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1364               // Method scalaz/Scalaz$.optionFirstShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Monoid<java.lang.Object> optionFirst();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1367               // Method scalaz/Scalaz$.optionFirst:()Lscalaz/Monoid;
       6: areturn

  public static <A> scalaz.Show<scala.Option<A>> optionShow(scalaz.Show<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1371               // Method scalaz/Scalaz$.optionShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Order<scala.Option<A>> optionOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1375               // Method scalaz/Scalaz$.optionOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Monoid<scala.Option<A>> optionMonoid(scalaz.Semigroup<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1380               // Method scalaz/Scalaz$.optionMonoid:(Lscalaz/Semigroup;)Lscalaz/Monoid;
       7: areturn

  public static scalaz.Traverse<scala.Option> optionInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1384               // Method scalaz/Scalaz$.optionInstance:()Lscalaz/Traverse;
       6: areturn

  public static <A> scalaz.SemiLattice<scala.Option<A>> optionSemiLattice(scalaz.SemiLattice<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1388               // Method scalaz/Scalaz$.optionSemiLattice:(Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
       7: areturn

  public static <A> scalaz.Equal<scala.Option<A>> optionEqual(scalaz.Equal<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1392               // Method scalaz/Scalaz$.optionEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <A> scalaz.Band<scala.Option<A>> optionBand(scalaz.Band<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1396               // Method scalaz/Scalaz$.optionBand:(Lscalaz/Band;)Lscalaz/Band;
       7: areturn

  public static <K, V> scalaz.Order<scala.collection.immutable.SortedMap<K, V>> sortedMapOrder(scalaz.Order<K>, scalaz.Order<V>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1400               // Method scalaz/Scalaz$.sortedMapOrder:(Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
       8: areturn

  public static <K, V> scalaz.Show<scala.collection.immutable.SortedMap<K, V>> sortedMapShow(scalaz.Show<K>, scalaz.Show<V>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1406               // Method scalaz/Scalaz$.sortedMapShow:(Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
       8: areturn

  public static <K, V> scalaz.Monoid<scala.collection.immutable.SortedMap<K, V>> sortedMapMonoid(scalaz.Semigroup<V>, scala.math.Ordering<K>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1412               // Method scalaz/Scalaz$.sortedMapMonoid:(Lscalaz/Semigroup;Lscala/math/Ordering;)Lscalaz/Monoid;
       8: areturn

  public static <K> scalaz.Traverse<?> sortedMapInstance(scala.math.Ordering<K>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1417               // Method scalaz/Scalaz$.sortedMapInstance:(Lscala/math/Ordering;)Lscalaz/Traverse;
       7: areturn

  public static <F, K, A> F getOrAdd(scala.collection.immutable.SortedMap<K, A>, K, scala.Function0<F>, scalaz.Applicative<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #1422               // Method scalaz/Scalaz$.getOrAdd:(Lscala/collection/immutable/SortedMap;Ljava/lang/Object;Lscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
      10: areturn

  public static <K, A> scala.collection.immutable.SortedMap<K, A> insertWith(scala.collection.immutable.SortedMap<K, A>, K, A, scala.Function2<A, A, A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #1430               // Method scalaz/Scalaz$.insertWith:(Lscala/collection/immutable/SortedMap;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/immutable/SortedMap;
      10: areturn

  public static <K, A> scala.collection.immutable.SortedMap<K, A> unionWith(scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, A>, scala.Function2<A, A, A>, scala.math.Ordering<K>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #1436               // Method scalaz/Scalaz$.unionWith:(Lscala/collection/immutable/SortedMap;Lscala/collection/immutable/SortedMap;Lscala/Function2;Lscala/math/Ordering;)Lscala/collection/immutable/SortedMap;
      10: areturn

  public static <K, A> scala.collection.immutable.SortedMap<K, A> unionWithKey(scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, A>, scala.Function3<K, A, A, A>, scala.math.Ordering<K>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #1441               // Method scalaz/Scalaz$.unionWithKey:(Lscala/collection/immutable/SortedMap;Lscala/collection/immutable/SortedMap;Lscala/Function3;Lscala/math/Ordering;)Lscala/collection/immutable/SortedMap;
      10: areturn

  public static <K, K2, A> scala.collection.immutable.SortedMap<K2, A> mapKeys(scala.collection.immutable.SortedMap<K, A>, scala.Function1<K, K2>, scala.math.Ordering<K2>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #1447               // Method scalaz/Scalaz$.mapKeys:(Lscala/collection/immutable/SortedMap;Lscala/Function1;Lscala/math/Ordering;)Lscala/collection/immutable/SortedMap;
       9: areturn

  public static <K, A, B, C> scala.collection.immutable.SortedMap<K, C> intersectWith(scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.Function2<A, B, C>, scala.math.Ordering<K>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #1451               // Method scalaz/Scalaz$.intersectWith:(Lscala/collection/immutable/SortedMap;Lscala/collection/immutable/SortedMap;Lscala/Function2;Lscala/math/Ordering;)Lscala/collection/immutable/SortedMap;
      10: areturn

  public static <K, A, B, C> scala.collection.immutable.SortedMap<K, C> intersectWithKey(scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.Function3<K, A, B, C>, scala.math.Ordering<K>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #1455               // Method scalaz/Scalaz$.intersectWithKey:(Lscala/collection/immutable/SortedMap;Lscala/collection/immutable/SortedMap;Lscala/Function3;Lscala/math/Ordering;)Lscala/collection/immutable/SortedMap;
      10: areturn

  public static <K, A> scala.collection.immutable.SortedMap<K, A> alter(scala.collection.immutable.SortedMap<K, A>, K, scala.Function1<scala.Option<A>, scala.Option<A>>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #1460               // Method scalaz/Scalaz$.alter:(Lscala/collection/immutable/SortedMap;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/SortedMap;
       9: areturn

  public static <K, V> scalaz.Band<scala.collection.immutable.SortedMap<K, V>> sortedMapBand(scalaz.Band<V>, scala.math.Ordering<K>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1465               // Method scalaz/Scalaz$.sortedMapBand:(Lscalaz/Band;Lscala/math/Ordering;)Lscalaz/Band;
       8: areturn

  public static <K> scalaz.Foldable<?> sortedMapFoldable();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1469               // Method scalaz/Scalaz$.sortedMapFoldable:()Lscalaz/Foldable;
       6: areturn

  public static <K, V> scalaz.Equal<scala.collection.immutable.SortedMap<K, V>> sortedMapEqual(scalaz.Order<K>, scalaz.Equal<V>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1474               // Method scalaz/Scalaz$.sortedMapEqual:(Lscalaz/Order;Lscalaz/Equal;)Lscalaz/Equal;
       8: areturn

  public static <K, V> scalaz.Order<scala.collection.immutable.Map<K, V>> mapOrder(scalaz.Order<K>, scalaz.Order<V>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1478               // Method scalaz/Scalaz$.mapOrder:(Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
       8: areturn

  public static <K, V> scalaz.Show<scala.collection.immutable.Map<K, V>> mapShow(scalaz.Show<K>, scalaz.Show<V>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1482               // Method scalaz/Scalaz$.mapShow:(Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
       8: areturn

  public static <K, V> scalaz.Monoid<scala.collection.immutable.Map<K, V>> mapMonoid(scalaz.Semigroup<V>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1486               // Method scalaz/Scalaz$.mapMonoid:(Lscalaz/Semigroup;)Lscalaz/Monoid;
       7: areturn

  public static <K> scalaz.Traverse<?> mapInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1490               // Method scalaz/Scalaz$.mapInstance:()Lscalaz/Traverse;
       6: areturn

  public static <F, K, A> F getOrAdd(scala.collection.immutable.Map<K, A>, K, scala.Function0<F>, scalaz.Applicative<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #1494               // Method scalaz/Scalaz$.getOrAdd:(Lscala/collection/immutable/Map;Ljava/lang/Object;Lscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
      10: areturn

  public static <K, A> scala.collection.immutable.Map<K, A> insertWith(scala.collection.immutable.Map<K, A>, K, A, scala.Function2<A, A, A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #1498               // Method scalaz/Scalaz$.insertWith:(Lscala/collection/immutable/Map;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/immutable/Map;
      10: areturn

  public static <K, A> scala.collection.immutable.Map<K, A> unionWith(scala.collection.immutable.Map<K, A>, scala.collection.immutable.Map<K, A>, scala.Function2<A, A, A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #1502               // Method scalaz/Scalaz$.unionWith:(Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Function2;)Lscala/collection/immutable/Map;
       9: areturn

  public static <K, A> scala.collection.immutable.Map<K, A> unionWithKey(scala.collection.immutable.Map<K, A>, scala.collection.immutable.Map<K, A>, scala.Function3<K, A, A, A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #1506               // Method scalaz/Scalaz$.unionWithKey:(Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Function3;)Lscala/collection/immutable/Map;
       9: areturn

  public static <K, K2, A> scala.collection.immutable.Map<K2, A> mapKeys(scala.collection.immutable.Map<K, A>, scala.Function1<K, K2>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1510               // Method scalaz/Scalaz$.mapKeys:(Lscala/collection/immutable/Map;Lscala/Function1;)Lscala/collection/immutable/Map;
       8: areturn

  public static <K, A, B, C> scala.collection.immutable.Map<K, C> intersectWith(scala.collection.immutable.Map<K, A>, scala.collection.immutable.Map<K, B>, scala.Function2<A, B, C>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #1513               // Method scalaz/Scalaz$.intersectWith:(Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Function2;)Lscala/collection/immutable/Map;
       9: areturn

  public static <K, A, B, C> scala.collection.immutable.Map<K, C> intersectWithKey(scala.collection.immutable.Map<K, A>, scala.collection.immutable.Map<K, B>, scala.Function3<K, A, B, C>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #1516               // Method scalaz/Scalaz$.intersectWithKey:(Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Function3;)Lscala/collection/immutable/Map;
       9: areturn

  public static <K, A> scala.collection.immutable.Map<K, A> alter(scala.collection.immutable.Map<K, A>, K, scala.Function1<scala.Option<A>, scala.Option<A>>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #1520               // Method scalaz/Scalaz$.alter:(Lscala/collection/immutable/Map;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/Map;
       9: areturn

  public static <K, V> scalaz.Band<scala.collection.immutable.Map<K, V>> mapBand(scalaz.Band<V>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1524               // Method scalaz/Scalaz$.mapBand:(Lscalaz/Band;)Lscalaz/Band;
       7: areturn

  public static <K> scalaz.Foldable<?> mapFoldable();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1527               // Method scalaz/Scalaz$.mapFoldable:()Lscalaz/Foldable;
       6: areturn

  public static <K, V> scalaz.Equal<scala.collection.immutable.Map<K, V>> mapEqual(scalaz.Order<K>, scalaz.Equal<V>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1531               // Method scalaz/Scalaz$.mapEqual:(Lscalaz/Order;Lscalaz/Equal;)Lscalaz/Equal;
       8: areturn

  public static <A> scalaz.Order<scala.collection.immutable.List<A>> listOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1535               // Method scalaz/Scalaz$.listOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Show<scala.collection.immutable.List<A>> listShow(scalaz.Show<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1539               // Method scalaz/Scalaz$.listShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Monoid<scala.collection.immutable.List<A>> listMonoid();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1543               // Method scalaz/Scalaz$.listMonoid:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Traverse<scala.collection.immutable.List> listInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1547               // Method scalaz/Scalaz$.listInstance:()Lscalaz/Traverse;
       6: areturn

  public static <A> scalaz.Equal<scala.collection.immutable.List<A>> listEqual(scalaz.Equal<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1551               // Method scalaz/Scalaz$.listEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <T1, T2, T3, T4, T5, T6, T7, T8> scalaz.Monad<?> function8Instance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1555               // Method scalaz/Scalaz$.function8Instance:()Lscalaz/Monad;
       6: areturn

  public static <T1, T2, T3, T4, T5, T6, T7> scalaz.Monad<?> function7Instance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1559               // Method scalaz/Scalaz$.function7Instance:()Lscalaz/Monad;
       6: areturn

  public static <T1, T2, T3, T4, T5, T6> scalaz.Monad<?> function6Instance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1563               // Method scalaz/Scalaz$.function6Instance:()Lscalaz/Monad;
       6: areturn

  public static <T1, T2, T3, T4, T5> scalaz.Monad<?> function5Instance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1567               // Method scalaz/Scalaz$.function5Instance:()Lscalaz/Monad;
       6: areturn

  public static <T1, T2, T3, T4> scalaz.Monad<?> function4Instance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1571               // Method scalaz/Scalaz$.function4Instance:()Lscalaz/Monad;
       6: areturn

  public static <T1, T2, T3> scalaz.Monad<?> function3Instance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1575               // Method scalaz/Scalaz$.function3Instance:()Lscalaz/Monad;
       6: areturn

  public static <T1, T2> scalaz.Monad<?> function2Instance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1579               // Method scalaz/Scalaz$.function2Instance:()Lscalaz/Monad;
       6: areturn

  public static <R> scalaz.Contravariant<?> function1Contravariant();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1584               // Method scalaz/Scalaz$.function1Contravariant:()Lscalaz/Contravariant;
       6: areturn

  public static <T> scalaz.Monad<?> function1Covariant();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1588               // Method scalaz/Scalaz$.function1Covariant:()Lscalaz/Monad;
       6: areturn

  public static scalaz.Arrow<scala.Function1> function1Instance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1592               // Method scalaz/Scalaz$.function1Instance:()Lscalaz/Arrow;
       6: areturn

  public static <R> scalaz.Equal<scala.Function0<R>> function0Equal(scalaz.Equal<R>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1596               // Method scalaz/Scalaz$.function0Equal:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static scalaz.Traverse<scala.Function0> function0Instance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1600               // Method scalaz/Scalaz$.function0Instance:()Lscalaz/Traverse;
       6: areturn

  public static <T> scalaz.Monad<?> function1CovariantByName();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1603               // Method scalaz/Scalaz$.function1CovariantByName:()Lscalaz/Monad;
       6: areturn

  public static <A, R> scalaz.Comonad<?> function1Comonad(scalaz.Monoid<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1608               // Method scalaz/Scalaz$.function1Comonad:(Lscalaz/Monoid;)Lscalaz/Comonad;
       7: areturn

  public static <A, R> scalaz.Monoid<scala.Function1<A, R>> function1Monoid(scalaz.Monoid<R>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1613               // Method scalaz/Scalaz$.function1Monoid:(Lscalaz/Monoid;)Lscalaz/Monoid;
       7: areturn

  public static <A, R> scalaz.Cobind<?> function1Cobind(scalaz.Semigroup<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1618               // Method scalaz/Scalaz$.function1Cobind:(Lscalaz/Semigroup;)Lscalaz/Cobind;
       7: areturn

  public static <A, R> scalaz.Semigroup<scala.Function1<A, R>> function1Semigroup(scalaz.Semigroup<R>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1622               // Method scalaz/Scalaz$.function1Semigroup:(Lscalaz/Semigroup;)Lscalaz/Semigroup;
       7: areturn

  public static scalaz.Order<java.lang.Object> doubleInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1626               // Method scalaz/Scalaz$.doubleInstance:()Lscalaz/Order;
       6: areturn

  public static scalaz.Order<java.lang.Object> floatInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1629               // Method scalaz/Scalaz$.floatInstance:()Lscalaz/Order;
       6: areturn

  public static scalaz.Monoid<java.lang.Object> longMultiplicationNewType();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1632               // Method scalaz/Scalaz$.longMultiplicationNewType:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monoid<java.lang.Object> longInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1635               // Method scalaz/Scalaz$.longInstance:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monoid<java.lang.Object> intMultiplicationNewType();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1638               // Method scalaz/Scalaz$.intMultiplicationNewType:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monoid<java.lang.Object> intInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1641               // Method scalaz/Scalaz$.intInstance:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monoid<java.lang.Object> shortMultiplicationNewType();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1644               // Method scalaz/Scalaz$.shortMultiplicationNewType:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monoid<java.lang.Object> shortInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1647               // Method scalaz/Scalaz$.shortInstance:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monoid<java.lang.Object> charMultiplicationNewType();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1650               // Method scalaz/Scalaz$.charMultiplicationNewType:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monoid<java.lang.Object> char();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1653               // Method scalaz/Scalaz$.char:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monoid<java.lang.Object> byteMultiplicationNewType();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1656               // Method scalaz/Scalaz$.byteMultiplicationNewType:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monoid<java.lang.Object> byteInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1659               // Method scalaz/Scalaz$.byteInstance:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monoid<java.lang.Object> booleanConjunctionNewTypeInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1662               // Method scalaz/Scalaz$.booleanConjunctionNewTypeInstance:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monoid<java.lang.Object> booleanDisjunctionNewTypeInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1665               // Method scalaz/Scalaz$.booleanDisjunctionNewTypeInstance:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.std.AnyValInstances$booleanInstance$ booleanInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1669               // Method scalaz/Scalaz$.booleanInstance:()Lscalaz/std/AnyValInstances$booleanInstance$;
       6: areturn

  public static scalaz.Monoid<scala.runtime.BoxedUnit> unitInstance();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #1673               // Method scalaz/Scalaz$.unitInstance:()Lscalaz/Monoid;
       6: areturn

  public static java.lang.Object ToConstOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1676               // Method scalaz/Scalaz$.ToConstOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToContTOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1680               // Method scalaz/Scalaz$.ToContTOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToMaybeOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1683               // Method scalaz/Scalaz$.ToMaybeOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static scala.Tuple2 ToThesePairOps(scala.Tuple2);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1686               // Method scalaz/Scalaz$.ToThesePairOps:(Lscala/Tuple2;)Lscala/Tuple2;
       7: areturn

  public static java.lang.Object ToTheseOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1689               // Method scalaz/Scalaz$.ToTheseOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToNelOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1692               // Method scalaz/Scalaz$.ToNelOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToEitherTOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1695               // Method scalaz/Scalaz$.ToEitherTOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToEitherOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1698               // Method scalaz/Scalaz$.ToEitherOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToKleisliFAOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1701               // Method scalaz/Scalaz$.ToKleisliFAOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToKleisliIdOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1704               // Method scalaz/Scalaz$.ToKleisliIdOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToKleisliOpsUnapply(java.lang.Object, scalaz.Unapply);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1709               // Method scalaz/Scalaz$.ToKleisliOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       8: areturn

  public static java.lang.Object ToValidationOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1712               // Method scalaz/Scalaz$.ToValidationOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToStateOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1715               // Method scalaz/Scalaz$.ToStateOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToWriterOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1718               // Method scalaz/Scalaz$.ToWriterOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToReducerOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1721               // Method scalaz/Scalaz$.ToReducerOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToStrictTreeOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1724               // Method scalaz/Scalaz$.ToStrictTreeOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToTreeOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1727               // Method scalaz/Scalaz$.ToTreeOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object ToIdOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1730               // Method scalaz/Scalaz$.ToIdOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static <G, F, A, B> scalaz.syntax.ProChoiceOps<?, A, B> ToProChoiceVFromKleisliLike(F, scalaz.ProChoice<?>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1735               // Method scalaz/Scalaz$.ToProChoiceVFromKleisliLike:(Ljava/lang/Object;Lscalaz/ProChoice;)Lscalaz/syntax/ProChoiceOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.ProChoiceOps<F, A, B> ToProChoiceOps(F, scalaz.ProChoice<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1740               // Method scalaz/Scalaz$.ToProChoiceOps:(Ljava/lang/Object;Lscalaz/ProChoice;)Lscalaz/syntax/ProChoiceOps;
       8: areturn

  public static <FA> scalaz.syntax.ProChoiceOps<java.lang.Object, java.lang.Object, java.lang.Object> ToProChoiceOpsUnapply(FA, scalaz.Unapply2<scalaz.ProChoice, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1745               // Method scalaz/Scalaz$.ToProChoiceOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ProChoiceOps;
       8: areturn

  public static java.lang.Object MonadTransGFGA(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1750               // Method scalaz/Scalaz$.MonadTransGFGA:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static <F, A> scalaz.syntax.AlignOps<F, A> ToAlignOps(F, scalaz.Align<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1755               // Method scalaz/Scalaz$.ToAlignOps:(Ljava/lang/Object;Lscalaz/Align;)Lscalaz/syntax/AlignOps;
       8: areturn

  public static <FA> scalaz.syntax.AlignOps<java.lang.Object, java.lang.Object> ToAlignOpsUnapply(FA, scalaz.Unapply<scalaz.Align, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1761               // Method scalaz/Scalaz$.ToAlignOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/AlignOps;
       8: areturn

  public static <F, A> scalaz.syntax.OptionalOps<F, A> ToOptionalOps(F, scalaz.Optional<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1766               // Method scalaz/Scalaz$.ToOptionalOps:(Ljava/lang/Object;Lscalaz/Optional;)Lscalaz/syntax/OptionalOps;
       8: areturn

  public static <FA> scalaz.syntax.OptionalOps<java.lang.Object, java.lang.Object> ToOptionalOpsUnapply(FA, scalaz.Unapply<scalaz.Optional, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1772               // Method scalaz/Scalaz$.ToOptionalOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/OptionalOps;
       8: areturn

  public static <F, A> scalaz.syntax.Traverse1Ops<F, A> ToTraverse1Ops(F, scalaz.Traverse1<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1777               // Method scalaz/Scalaz$.ToTraverse1Ops:(Ljava/lang/Object;Lscalaz/Traverse1;)Lscalaz/syntax/Traverse1Ops;
       8: areturn

  public static <FA> scalaz.syntax.Traverse1Ops<java.lang.Object, java.lang.Object> ToTraverse1OpsUnapply(FA, scalaz.Unapply<scalaz.Traverse1, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1783               // Method scalaz/Scalaz$.ToTraverse1OpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/Traverse1Ops;
       8: areturn

  public static <F, A> scalaz.syntax.Foldable1Ops<F, A> ToFoldable1Ops(F, scalaz.Foldable1<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1788               // Method scalaz/Scalaz$.ToFoldable1Ops:(Ljava/lang/Object;Lscalaz/Foldable1;)Lscalaz/syntax/Foldable1Ops;
       8: areturn

  public static <FA> scalaz.syntax.Foldable1Ops<java.lang.Object, java.lang.Object> ToFoldable1OpsUnapply(FA, scalaz.Unapply<scalaz.Foldable1, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1794               // Method scalaz/Scalaz$.ToFoldable1OpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/Foldable1Ops;
       8: areturn

  public static <F, S, A> scalaz.syntax.ApplicativeErrorOps<F, S, A> ToApplicativeErrorOps(F, scalaz.ApplicativeError<F, S>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1799               // Method scalaz/Scalaz$.ToApplicativeErrorOps:(Ljava/lang/Object;Lscalaz/ApplicativeError;)Lscalaz/syntax/ApplicativeErrorOps;
       8: areturn

  public static java.lang.Object ToMonadErrorIdOps(java.lang.Object);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #1803               // Method scalaz/Scalaz$.ToMonadErrorIdOps:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static <F, S, A> scalaz.syntax.MonadErrorOps<F, S, A> ToMonadErrorOps(F, scalaz.MonadError<F, S>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1808               // Method scalaz/Scalaz$.ToMonadErrorOps:(Ljava/lang/Object;Lscalaz/MonadError;)Lscalaz/syntax/MonadErrorOps;
       8: areturn

  public static <F, A, W> scalaz.syntax.MonadListenOps<F, W, A> ToMonadListenOps(F, scalaz.MonadListen<F, W>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1814               // Method scalaz/Scalaz$.ToMonadListenOps:(Ljava/lang/Object;Lscalaz/MonadListen;)Lscalaz/syntax/MonadListenOps;
       8: areturn

  public static <F, S, A> scalaz.syntax.MonadTellOps<F, S, A> ToMonadTellOps(F, scalaz.MonadTell<F, S>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1820               // Method scalaz/Scalaz$.ToMonadTellOps:(Ljava/lang/Object;Lscalaz/MonadTell;)Lscalaz/syntax/MonadTellOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.ToUnzipOps0<scalaz.Unzip>.UnzipPairOps<F, A, B> ToUnzipPairOps(F, scalaz.Unzip<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1826               // Method scalaz/Scalaz$.ToUnzipPairOps:(Ljava/lang/Object;Lscalaz/Unzip;)Lscalaz/syntax/ToUnzipOps0$UnzipPairOps;
       8: areturn

  public static <F, A> scalaz.syntax.UnzipOps<F, A> ToUnzipOps(F, scalaz.Unzip<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1832               // Method scalaz/Scalaz$.ToUnzipOps:(Ljava/lang/Object;Lscalaz/Unzip;)Lscalaz/syntax/UnzipOps;
       8: areturn

  public static <FA> scalaz.syntax.UnzipOps<java.lang.Object, java.lang.Object> ToUnzipOpsUnapply(FA, scalaz.Unapply<scalaz.Unzip, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1837               // Method scalaz/Scalaz$.ToUnzipOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/UnzipOps;
       8: areturn

  public static <F, A> scalaz.syntax.ZipOps<F, A> ToZipOps(F, scalaz.Zip<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1842               // Method scalaz/Scalaz$.ToZipOps:(Ljava/lang/Object;Lscalaz/Zip;)Lscalaz/syntax/ZipOps;
       8: areturn

  public static <FA> scalaz.syntax.ZipOps<java.lang.Object, java.lang.Object> ToZipOpsUnapply(FA, scalaz.Unapply<scalaz.Zip, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1848               // Method scalaz/Scalaz$.ToZipOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ZipOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.SplitOps<?, A, B> ToSplitVFromKleisliLike(F, scalaz.Split<?>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1853               // Method scalaz/Scalaz$.ToSplitVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Split;)Lscalaz/syntax/SplitOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.SplitOps<F, A, B> ToSplitOps(F, scalaz.Split<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1858               // Method scalaz/Scalaz$.ToSplitOps:(Ljava/lang/Object;Lscalaz/Split;)Lscalaz/syntax/SplitOps;
       8: areturn

  public static <FA> scalaz.syntax.SplitOps<java.lang.Object, java.lang.Object, java.lang.Object> ToSplitOpsUnapply(FA, scalaz.Unapply2<scalaz.Split, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1863               // Method scalaz/Scalaz$.ToSplitOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/SplitOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.ChoiceOps<?, A, B> ToChoiceVFromKleisliLike(F, scalaz.Choice<?>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1868               // Method scalaz/Scalaz$.ToChoiceVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Choice;)Lscalaz/syntax/ChoiceOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.ChoiceOps<F, A, B> ToChoiceOps(F, scalaz.Choice<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1873               // Method scalaz/Scalaz$.ToChoiceOps:(Ljava/lang/Object;Lscalaz/Choice;)Lscalaz/syntax/ChoiceOps;
       8: areturn

  public static <FA> scalaz.syntax.ChoiceOps<java.lang.Object, java.lang.Object, java.lang.Object> ToChoiceOpsUnapply(FA, scalaz.Unapply2<scalaz.Choice, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1878               // Method scalaz/Scalaz$.ToChoiceOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ChoiceOps;
       8: areturn

  public static <F, A> scalaz.syntax.FoldableOps<F, A> ToFoldableOps(F, scalaz.Foldable<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1883               // Method scalaz/Scalaz$.ToFoldableOps:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/syntax/FoldableOps;
       8: areturn

  public static <FA> scalaz.syntax.FoldableOps<java.lang.Object, java.lang.Object> ToFoldableOpsUnapply(FA, scalaz.Unapply<scalaz.Foldable, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1889               // Method scalaz/Scalaz$.ToFoldableOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/FoldableOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.StrongOps<?, A, B> ToStrongVFromKleisliLike(F, scalaz.Strong<?>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1894               // Method scalaz/Scalaz$.ToStrongVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Strong;)Lscalaz/syntax/StrongOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.StrongOps<F, A, B> ToStrongOps(F, scalaz.Strong<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1899               // Method scalaz/Scalaz$.ToStrongOps:(Ljava/lang/Object;Lscalaz/Strong;)Lscalaz/syntax/StrongOps;
       8: areturn

  public static <FA> scalaz.syntax.StrongOps<java.lang.Object, java.lang.Object, java.lang.Object> ToStrongOpsUnapply(FA, scalaz.Unapply2<scalaz.Strong, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1904               // Method scalaz/Scalaz$.ToStrongOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/StrongOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.ProfunctorOps<?, A, B> ToProfunctorVFromKleisliLike(F, scalaz.Profunctor<?>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1909               // Method scalaz/Scalaz$.ToProfunctorVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Profunctor;)Lscalaz/syntax/ProfunctorOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.ProfunctorOps<F, A, B> ToProfunctorOps(F, scalaz.Profunctor<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1914               // Method scalaz/Scalaz$.ToProfunctorOps:(Ljava/lang/Object;Lscalaz/Profunctor;)Lscalaz/syntax/ProfunctorOps;
       8: areturn

  public static <FA> scalaz.syntax.ProfunctorOps<java.lang.Object, java.lang.Object, java.lang.Object> ToProfunctorOpsUnapply(FA, scalaz.Unapply2<scalaz.Profunctor, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1919               // Method scalaz/Scalaz$.ToProfunctorOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ProfunctorOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.ArrowOps<?, A, B> ToArrowVFromKleisliLike(F, scalaz.Arrow<?>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1924               // Method scalaz/Scalaz$.ToArrowVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Arrow;)Lscalaz/syntax/ArrowOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.ArrowOps<F, A, B> ToArrowOps(F, scalaz.Arrow<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1929               // Method scalaz/Scalaz$.ToArrowOps:(Ljava/lang/Object;Lscalaz/Arrow;)Lscalaz/syntax/ArrowOps;
       8: areturn

  public static <FA> scalaz.syntax.ArrowOps<java.lang.Object, java.lang.Object, java.lang.Object> ToArrowOpsUnapply(FA, scalaz.Unapply2<scalaz.Arrow, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1934               // Method scalaz/Scalaz$.ToArrowOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ArrowOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.CategoryOps<?, A, B> ToCategoryVFromKleisliLike(F, scalaz.Category<?>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1939               // Method scalaz/Scalaz$.ToCategoryVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Category;)Lscalaz/syntax/CategoryOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.CategoryOps<F, A, B> ToCategoryOps(F, scalaz.Category<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1944               // Method scalaz/Scalaz$.ToCategoryOps:(Ljava/lang/Object;Lscalaz/Category;)Lscalaz/syntax/CategoryOps;
       8: areturn

  public static <FA> scalaz.syntax.CategoryOps<java.lang.Object, java.lang.Object, java.lang.Object> ToCategoryOpsUnapply(FA, scalaz.Unapply2<scalaz.Category, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1949               // Method scalaz/Scalaz$.ToCategoryOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/CategoryOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.ComposeOps<?, A, B> ToComposeVFromKleisliLike(F, scalaz.Compose<?>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1954               // Method scalaz/Scalaz$.ToComposeVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Compose;)Lscalaz/syntax/ComposeOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.ComposeOps<F, A, B> ToComposeOps(F, scalaz.Compose<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1959               // Method scalaz/Scalaz$.ToComposeOps:(Ljava/lang/Object;Lscalaz/Compose;)Lscalaz/syntax/ComposeOps;
       8: areturn

  public static <FA> scalaz.syntax.ComposeOps<java.lang.Object, java.lang.Object, java.lang.Object> ToComposeOpsUnapply(FA, scalaz.Unapply2<scalaz.Compose, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1964               // Method scalaz/Scalaz$.ToComposeOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ComposeOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.BitraverseOps<?, A, B> ToBitraverseVFromKleisliLike(F, scalaz.Bitraverse<?>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1969               // Method scalaz/Scalaz$.ToBitraverseVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Bitraverse;)Lscalaz/syntax/BitraverseOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.BitraverseOps<F, A, B> ToBitraverseOps(F, scalaz.Bitraverse<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1974               // Method scalaz/Scalaz$.ToBitraverseOps:(Ljava/lang/Object;Lscalaz/Bitraverse;)Lscalaz/syntax/BitraverseOps;
       8: areturn

  public static <FA> scalaz.syntax.BitraverseOps<java.lang.Object, java.lang.Object, java.lang.Object> ToBitraverseOpsUnapply(FA, scalaz.Unapply2<scalaz.Bitraverse, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1979               // Method scalaz/Scalaz$.ToBitraverseOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/BitraverseOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.AssociativeOps<?, A, B> ToAssociativeVFromKleisliLike(F, scalaz.Associative<?>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1984               // Method scalaz/Scalaz$.ToAssociativeVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Associative;)Lscalaz/syntax/AssociativeOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.AssociativeOps<F, A, B> ToAssociativeOps(F, scalaz.Associative<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1989               // Method scalaz/Scalaz$.ToAssociativeOps:(Ljava/lang/Object;Lscalaz/Associative;)Lscalaz/syntax/AssociativeOps;
       8: areturn

  public static <FA> scalaz.syntax.AssociativeOps<java.lang.Object, java.lang.Object, java.lang.Object> ToAssociativeOpsUnapply(FA, scalaz.Unapply2<scalaz.Associative, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1994               // Method scalaz/Scalaz$.ToAssociativeOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/AssociativeOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.BifunctorOps<?, A, B> ToBifunctorVFromKleisliLike(F, scalaz.Bifunctor<?>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1999               // Method scalaz/Scalaz$.ToBifunctorVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Bifunctor;)Lscalaz/syntax/BifunctorOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.BifunctorOps<F, A, B> ToBifunctorOps(F, scalaz.Bifunctor<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2004               // Method scalaz/Scalaz$.ToBifunctorOps:(Ljava/lang/Object;Lscalaz/Bifunctor;)Lscalaz/syntax/BifunctorOps;
       8: areturn

  public static <FA> scalaz.syntax.BifunctorOps<java.lang.Object, java.lang.Object, java.lang.Object> ToBifunctorOpsUnapply(FA, scalaz.Unapply2<scalaz.Bifunctor, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2009               // Method scalaz/Scalaz$.ToBifunctorOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/BifunctorOps;
       8: areturn

  public static <F, A> scalaz.syntax.TraverseOps<F, A> ToTraverseOps(F, scalaz.Traverse<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2014               // Method scalaz/Scalaz$.ToTraverseOps:(Ljava/lang/Object;Lscalaz/Traverse;)Lscalaz/syntax/TraverseOps;
       8: areturn

  public static <FA> scalaz.syntax.TraverseOps<java.lang.Object, java.lang.Object> ToTraverseOpsUnapply(FA, scalaz.Unapply<scalaz.Traverse, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2020               // Method scalaz/Scalaz$.ToTraverseOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/TraverseOps;
       8: areturn

  public static <F, A> scalaz.syntax.MonadPlusOps<F, A> ToMonadPlusOps(F, scalaz.MonadPlus<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2025               // Method scalaz/Scalaz$.ToMonadPlusOps:(Ljava/lang/Object;Lscalaz/MonadPlus;)Lscalaz/syntax/MonadPlusOps;
       8: areturn

  public static <FA> scalaz.syntax.MonadPlusOps<java.lang.Object, java.lang.Object> ToMonadPlusOpsUnapply(FA, scalaz.Unapply<scalaz.MonadPlus, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2031               // Method scalaz/Scalaz$.ToMonadPlusOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/MonadPlusOps;
       8: areturn

  public static <F, A> scalaz.syntax.AltOps<F, A> ToAltOps(F, scalaz.Alt<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2036               // Method scalaz/Scalaz$.ToAltOps:(Ljava/lang/Object;Lscalaz/Alt;)Lscalaz/syntax/AltOps;
       8: areturn

  public static <FA> scalaz.syntax.AltOps<java.lang.Object, java.lang.Object> ToAltOpsUnapply(FA, scalaz.Unapply<scalaz.Alt, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2042               // Method scalaz/Scalaz$.ToAltOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/AltOps;
       8: areturn

  public static <F, A> scalaz.syntax.ApplicativePlusOps<F, A> ToApplicativePlusOps(F, scalaz.ApplicativePlus<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2047               // Method scalaz/Scalaz$.ToApplicativePlusOps:(Ljava/lang/Object;Lscalaz/ApplicativePlus;)Lscalaz/syntax/ApplicativePlusOps;
       8: areturn

  public static <FA> scalaz.syntax.ApplicativePlusOps<java.lang.Object, java.lang.Object> ToApplicativePlusOpsUnapply(FA, scalaz.Unapply<scalaz.ApplicativePlus, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2053               // Method scalaz/Scalaz$.ToApplicativePlusOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ApplicativePlusOps;
       8: areturn

  public static <F, A> scalaz.syntax.PlusOps<F, A> ToPlusOps(F, scalaz.Plus<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2058               // Method scalaz/Scalaz$.ToPlusOps:(Ljava/lang/Object;Lscalaz/Plus;)Lscalaz/syntax/PlusOps;
       8: areturn

  public static <FA> scalaz.syntax.PlusOps<java.lang.Object, java.lang.Object> ToPlusOpsUnapply(FA, scalaz.Unapply<scalaz.Plus, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2064               // Method scalaz/Scalaz$.ToPlusOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/PlusOps;
       8: areturn

  public static <F, A> scalaz.syntax.CozipOps<F, A> ToCozipOps(F, scalaz.Cozip<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2069               // Method scalaz/Scalaz$.ToCozipOps:(Ljava/lang/Object;Lscalaz/Cozip;)Lscalaz/syntax/CozipOps;
       8: areturn

  public static <FA> scalaz.syntax.CozipOps<java.lang.Object, java.lang.Object> ToCozipOpsUnapply(FA, scalaz.Unapply<scalaz.Cozip, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2075               // Method scalaz/Scalaz$.ToCozipOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/CozipOps;
       8: areturn

  public static <G, F, A, B> scalaz.syntax.BifoldableOps<?, A, B> ToBifoldableVFromKleisliLike(F, scalaz.Bifoldable<?>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2080               // Method scalaz/Scalaz$.ToBifoldableVFromKleisliLike:(Ljava/lang/Object;Lscalaz/Bifoldable;)Lscalaz/syntax/BifoldableOps;
       8: areturn

  public static <F, A, B> scalaz.syntax.BifoldableOps<F, A, B> ToBifoldableOps(F, scalaz.Bifoldable<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2085               // Method scalaz/Scalaz$.ToBifoldableOps:(Ljava/lang/Object;Lscalaz/Bifoldable;)Lscalaz/syntax/BifoldableOps;
       8: areturn

  public static <FA> scalaz.syntax.BifoldableOps<java.lang.Object, java.lang.Object, java.lang.Object> ToBifoldableOpsUnapply(FA, scalaz.Unapply2<scalaz.Bifoldable, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2090               // Method scalaz/Scalaz$.ToBifoldableOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/BifoldableOps;
       8: areturn

  public static <F, A> scalaz.syntax.ComonadOps<F, A> ToComonadOps(F, scalaz.Comonad<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2095               // Method scalaz/Scalaz$.ToComonadOps:(Ljava/lang/Object;Lscalaz/Comonad;)Lscalaz/syntax/ComonadOps;
       8: areturn

  public static <FA> scalaz.syntax.ComonadOps<java.lang.Object, java.lang.Object> ToComonadOpsUnapply(FA, scalaz.Unapply<scalaz.Comonad, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2101               // Method scalaz/Scalaz$.ToComonadOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ComonadOps;
       8: areturn

  public static <F, A> scalaz.syntax.MonadOps<F, A> ToMonadOps(F, scalaz.Monad<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2106               // Method scalaz/Scalaz$.ToMonadOps:(Ljava/lang/Object;Lscalaz/Monad;)Lscalaz/syntax/MonadOps;
       8: areturn

  public static <FA> scalaz.syntax.MonadOps<java.lang.Object, java.lang.Object> ToMonadOpsUnapply(FA, scalaz.Unapply<scalaz.Monad, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2111               // Method scalaz/Scalaz$.ToMonadOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/MonadOps;
       8: areturn

  public static <F, A> scalaz.syntax.BindOps<F, A> ToBindOps(F, scalaz.Bind<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2116               // Method scalaz/Scalaz$.ToBindOps:(Ljava/lang/Object;Lscalaz/Bind;)Lscalaz/syntax/BindOps;
       8: areturn

  public static <FA> scalaz.syntax.BindOps<java.lang.Object, java.lang.Object> ToBindOpsUnapply(FA, scalaz.Unapply<scalaz.Bind, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2122               // Method scalaz/Scalaz$.ToBindOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/BindOps;
       8: areturn

  public static <A> scalaz.syntax.ToApplicativeOps0<scalaz.Applicative>.ApplicativeIdV<A> ApplicativeIdV(scala.Function0<A>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #2126               // Method scalaz/Scalaz$.ApplicativeIdV:(Lscala/Function0;)Lscalaz/syntax/ToApplicativeOps0$ApplicativeIdV;
       7: areturn

  public static <F, A> scalaz.syntax.ApplicativeOps<F, A> ToApplicativeOps(F, scalaz.Applicative<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2131               // Method scalaz/Scalaz$.ToApplicativeOps:(Ljava/lang/Object;Lscalaz/Applicative;)Lscalaz/syntax/ApplicativeOps;
       8: areturn

  public static <FA> scalaz.syntax.ApplicativeOps<java.lang.Object, java.lang.Object> ToApplicativeOpsUnapply(FA, scalaz.Unapply<scalaz.Applicative, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2136               // Method scalaz/Scalaz$.ToApplicativeOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ApplicativeOps;
       8: areturn

  public static <F, A, B, C, D, E, I, J, K> F $up$up$up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function7<A, B, C, D, E, I, J, K>, scalaz.Apply<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: aload         8
      17: invokevirtual #2147               // Method scalaz/Scalaz$.$up$up$up$up$up$up:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;Lscalaz/Apply;)Ljava/lang/Object;
      20: areturn

  public static <F, A, B, C, D, E, I, J> F $up$up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function6<A, B, C, D, E, I, J>, scalaz.Apply<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: invokevirtual #2154               // Method scalaz/Scalaz$.$up$up$up$up$up:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;Lscalaz/Apply;)Ljava/lang/Object;
      18: areturn

  public static <F, A, B, C, D, E, I> F $up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function5<A, B, C, D, E, I>, scalaz.Apply<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #2160               // Method scalaz/Scalaz$.$up$up$up$up:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;Lscalaz/Apply;)Ljava/lang/Object;
      16: areturn

  public static <F, A, B, C, D, E> F $up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function4<A, B, C, D, E>, scalaz.Apply<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #2166               // Method scalaz/Scalaz$.$up$up$up:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscalaz/Apply;)Ljava/lang/Object;
      14: areturn

  public static <F, A, B, C, D> F $up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function3<A, B, C, D>, scalaz.Apply<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #2172               // Method scalaz/Scalaz$.$up$up:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscalaz/Apply;)Ljava/lang/Object;
      12: areturn

  public static <F, A, B, C> F $up(scala.Function0<F>, scala.Function0<F>, scala.Function2<A, B, C>, scalaz.Apply<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #2177               // Method scalaz/Scalaz$.$up:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Apply;)Ljava/lang/Object;
      10: areturn

  public static <F, A> scalaz.syntax.ApplyOps<F, A> ToApplyOps(F, scalaz.Apply<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2182               // Method scalaz/Scalaz$.ToApplyOps:(Ljava/lang/Object;Lscalaz/Apply;)Lscalaz/syntax/ApplyOps;
       8: areturn

  public static <FA> scalaz.syntax.ApplyOps<java.lang.Object, java.lang.Object> ToApplyOpsUnapply(FA, scalaz.Unapply<scalaz.Apply, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2187               // Method scalaz/Scalaz$.ToApplyOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ApplyOps;
       8: areturn

  public static <F, A> scalaz.syntax.ContravariantOps<F, A> ToContravariantOps(F, scalaz.Contravariant<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2192               // Method scalaz/Scalaz$.ToContravariantOps:(Ljava/lang/Object;Lscalaz/Contravariant;)Lscalaz/syntax/ContravariantOps;
       8: areturn

  public static <FA> scalaz.syntax.ContravariantOps<java.lang.Object, java.lang.Object> ToContravariantOpsUnapply(FA, scalaz.Unapply<scalaz.Contravariant, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2198               // Method scalaz/Scalaz$.ToContravariantOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ContravariantOps;
       8: areturn

  public static <A> scalaz.syntax.ToFunctorOps0<scalaz.Functor>.FunctorIdV<A> ToFunctorIdV(A);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #2203               // Method scalaz/Scalaz$.ToFunctorIdV:(Ljava/lang/Object;)Lscalaz/syntax/ToFunctorOps0$FunctorIdV;
       7: areturn

  public static <F$, A, B> scalaz.syntax.ToFunctorOps0<scalaz.Functor>.LiftV<F$, A, B> ToLiftV(scala.Function1<A, B>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #2208               // Method scalaz/Scalaz$.ToLiftV:(Lscala/Function1;)Lscalaz/syntax/ToFunctorOps0$LiftV;
       7: areturn

  public static <F, A> scalaz.syntax.FunctorOps<F, A> ToFunctorOps(F, scalaz.Functor<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2213               // Method scalaz/Scalaz$.ToFunctorOps:(Ljava/lang/Object;Lscalaz/Functor;)Lscalaz/syntax/FunctorOps;
       8: areturn

  public static <FA> scalaz.syntax.FunctorOps<java.lang.Object, java.lang.Object> ToFunctorOpsUnapply(FA, scalaz.Unapply<scalaz.Functor, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2219               // Method scalaz/Scalaz$.ToFunctorOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/FunctorOps;
       8: areturn

  public static <F, A> F mempty(scalaz.PlusEmpty<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #2224               // Method scalaz/Scalaz$.mempty:(Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public static <F, A> scalaz.syntax.PlusEmptyOps<F, A> ToPlusEmptyOps(F, scalaz.PlusEmpty<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2229               // Method scalaz/Scalaz$.ToPlusEmptyOps:(Ljava/lang/Object;Lscalaz/PlusEmpty;)Lscalaz/syntax/PlusEmptyOps;
       8: areturn

  public static <FA> scalaz.syntax.PlusEmptyOps<java.lang.Object, java.lang.Object> ToPlusEmptyOpsUnapply(FA, scalaz.Unapply<scalaz.PlusEmpty, FA>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2234               // Method scalaz/Scalaz$.ToPlusEmptyOpsUnapply:(Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/PlusEmptyOps;
       8: areturn

  public static <F> scalaz.syntax.EnumOps<F> ToEnumOps(F, scalaz.Enum<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2239               // Method scalaz/Scalaz$.ToEnumOps:(Ljava/lang/Object;Lscalaz/Enum;)Lscalaz/syntax/EnumOps;
       8: areturn

  public static <F> scalaz.syntax.OrderOps<F> ToOrderOps(F, scalaz.Order<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2245               // Method scalaz/Scalaz$.ToOrderOps:(Ljava/lang/Object;Lscalaz/Order;)Lscalaz/syntax/OrderOps;
       8: areturn

  public static scala.StringContext cordInterpolator(scala.StringContext);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #2250               // Method scalaz/Scalaz$.cordInterpolator:(Lscala/StringContext;)Lscala/StringContext;
       7: areturn

  public static scala.StringContext showInterpolator(scala.StringContext);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #2254               // Method scalaz/Scalaz$.showInterpolator:(Lscala/StringContext;)Lscala/StringContext;
       7: areturn

  public static <F> scalaz.syntax.ShowOps<F> ToShowOps(F, scalaz.Show<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2259               // Method scalaz/Scalaz$.ToShowOps:(Ljava/lang/Object;Lscalaz/Show;)Lscalaz/syntax/ShowOps;
       8: areturn

  public static <F> scalaz.syntax.EqualOps<F> ToEqualOps(F, scalaz.Equal<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2264               // Method scalaz/Scalaz$.ToEqualOps:(Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/syntax/EqualOps;
       8: areturn

  public static <F> scalaz.syntax.BandOps<F> ToBandOps(F, scalaz.Band<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2269               // Method scalaz/Scalaz$.ToBandOps:(Ljava/lang/Object;Lscalaz/Band;)Lscalaz/syntax/BandOps;
       8: areturn

  public static <F> F $u2205(scalaz.Monoid<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #2274               // Method scalaz/Scalaz$.$u2205:(Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public static <F> F mzero(scalaz.Monoid<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #2277               // Method scalaz/Scalaz$.mzero:(Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public static <F> scalaz.syntax.MonoidOps<F> ToMonoidOps(F, scalaz.Monoid<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2282               // Method scalaz/Scalaz$.ToMonoidOps:(Ljava/lang/Object;Lscalaz/Monoid;)Lscalaz/syntax/MonoidOps;
       8: areturn

  public static <F> scalaz.syntax.SemigroupOps<F> ToSemigroupOps(F, scalaz.Semigroup<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2287               // Method scalaz/Scalaz$.ToSemigroupOps:(Ljava/lang/Object;Lscalaz/Semigroup;)Lscalaz/syntax/SemigroupOps;
       8: areturn

  public static <S> scalaz.IndexedStateT<S, S, java.lang.Object, scala.runtime.BoxedUnit> modify(scala.Function1<S, S>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #2292               // Method scalaz/Scalaz$.modify:(Lscala/Function1;)Lscalaz/IndexedStateT;
       7: areturn

  public static <S> scalaz.IndexedStateT<S, S, java.lang.Object, scala.runtime.BoxedUnit> put(S);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #2297               // Method scalaz/Scalaz$.put:(Ljava/lang/Object;)Lscalaz/IndexedStateT;
       7: areturn

  public static <S, T> scalaz.IndexedStateT<S, S, java.lang.Object, T> gets(scala.Function1<S, T>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #2301               // Method scalaz/Scalaz$.gets:(Lscala/Function1;)Lscalaz/IndexedStateT;
       7: areturn

  public static <S> scalaz.IndexedStateT<S, S, java.lang.Object, S> get();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #2306               // Method scalaz/Scalaz$.get:()Lscalaz/IndexedStateT;
       6: areturn

  public static <S> scalaz.IndexedStateT<S, S, java.lang.Object, S> init();
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: invokevirtual #2309               // Method scalaz/Scalaz$.init:()Lscalaz/IndexedStateT;
       6: areturn

  public static <S, A> scalaz.IndexedStateT<S, S, java.lang.Object, A> state(A);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #2313               // Method scalaz/Scalaz$.state:(Ljava/lang/Object;)Lscalaz/IndexedStateT;
       7: areturn

  public static <S, A> scalaz.IndexedStateT<S, S, java.lang.Object, A> constantState(A, scala.Function0<S>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2318               // Method scalaz/Scalaz$.constantState:(Ljava/lang/Object;Lscala/Function0;)Lscalaz/IndexedStateT;
       8: areturn

  public static <S1, S2> scalaz.IndexedStateT<S1, S2, java.lang.Object, scala.runtime.BoxedUnit> iModify(scala.Function1<S1, S2>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #2322               // Method scalaz/Scalaz$.iModify:(Lscala/Function1;)Lscalaz/IndexedStateT;
       7: areturn

  public static <S1, S2> scalaz.IndexedStateT<S1, S2, java.lang.Object, scala.runtime.BoxedUnit> iPut(S2);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: invokevirtual #2326               // Method scalaz/Scalaz$.iPut:(Ljava/lang/Object;)Lscalaz/IndexedStateT;
       7: areturn

  public static <S1, S2, A> scalaz.IndexedStateT<S1, S2, java.lang.Object, A> constantIndexedState(A, scala.Function0<S2>);
    Code:
       0: getstatic     #45                 // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2330               // Method scalaz/Scalaz$.constantIndexedState:(Ljava/lang/Object;Lscala/Function0;)Lscalaz/IndexedStateT;
       8: areturn
}
