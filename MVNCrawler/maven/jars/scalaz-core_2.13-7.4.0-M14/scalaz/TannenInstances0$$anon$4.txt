Compiled from "Tannen.scala"
public final class scalaz.TannenInstances0$$anon$4 implements scalaz.Bifunctor<?> {
  private scalaz.syntax.BifunctorSyntax<?> bifunctorSyntax;

  private final scalaz.Functor F$4;

  private final scalaz.Bifunctor G$4;

  public <G> scalaz.Bifunctor<?> compose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #33                 // InterfaceMethod scalaz/Bifunctor.compose$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Bifunctor<?> product(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #39                 // InterfaceMethod scalaz/Bifunctor.product$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <X> scalaz.Functor<?> leftFunctor();
    Code:
       0: aload_0
       1: invokestatic  #46                 // InterfaceMethod scalaz/Bifunctor.leftFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public java.lang.Object leftMap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #54                 // InterfaceMethod scalaz/Bifunctor.leftMap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <X> scalaz.Functor<?> rightFunctor();
    Code:
       0: aload_0
       1: invokestatic  #60                 // InterfaceMethod scalaz/Bifunctor.rightFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public scalaz.Functor<?> uFunctor();
    Code:
       0: aload_0
       1: invokestatic  #65                 // InterfaceMethod scalaz/Bifunctor.uFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public java.lang.Object rightMap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #70                 // InterfaceMethod scalaz/Bifunctor.rightMap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object umap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #75                 // InterfaceMethod scalaz/Bifunctor.umap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G, H> scalaz.Bifunctor<?> embed(scalaz.Functor<G>, scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #83                 // InterfaceMethod scalaz/Bifunctor.embed$:(Lscalaz/Bifunctor;Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       6: areturn

  public <G> scalaz.Bifunctor<?> embedLeft(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #90                 // InterfaceMethod scalaz/Bifunctor.embedLeft$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public <H> scalaz.Bifunctor<?> embedRight(scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #95                 // InterfaceMethod scalaz/Bifunctor.embedRight$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public java.lang.Object widen(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #101                // InterfaceMethod scalaz/Bifunctor.widen$:(Lscalaz/Bifunctor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.syntax.BifunctorSyntax<?> bifunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #105                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       4: areturn

  public void scalaz$Bifunctor$_setter_$bifunctorSyntax_$eq(scalaz.syntax.BifunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #105                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       5: return

  public <A, B, C, D> scalaz.Tannen<F, G, C, D> bimap(scalaz.Tannen<F, G, A, B>, scala.Function1<A, C>, scala.Function1<B, D>);
    Code:
       0: new           #114                // class scalaz/Tannen
       3: dup
       4: aload_0
       5: getfield      #116                // Field F$4:Lscalaz/Functor;
       8: aload_1
       9: invokevirtual #119                // Method scalaz/Tannen.f:()Ljava/lang/Object;
      12: aload_0
      13: aload_2
      14: aload_3
      15: invokedynamic #137,  0            // InvokeDynamic #0:apply:(Lscalaz/TannenInstances0$$anon$4;Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      20: invokeinterface #142,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      25: invokespecial #146                // Method scalaz/Tannen."<init>":(Ljava/lang/Object;)V
      28: areturn

  public java.lang.Object bimap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #114                // class scalaz/Tannen
       5: aload_2
       6: aload_3
       7: invokevirtual #150                // Method bimap:(Lscalaz/Tannen;Lscala/Function1;Lscala/Function1;)Lscalaz/Tannen;
      10: areturn

  public static final java.lang.Object $anonfun$bimap$1(scalaz.TannenInstances0$$anon$4, scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #156                // Field G$4:Lscalaz/Bifunctor;
       4: aload_3
       5: aload_1
       6: aload_2
       7: invokeinterface #158,  4          // InterfaceMethod scalaz/Bifunctor.bimap:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      12: areturn

  public scalaz.TannenInstances0$$anon$4(scalaz.TannenInstances0, scalaz.Functor, scalaz.Bifunctor);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #116                // Field F$4:Lscalaz/Functor;
       5: aload_0
       6: aload_3
       7: putfield      #156                // Field G$4:Lscalaz/Bifunctor;
      10: aload_0
      11: invokespecial #163                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #167                // InterfaceMethod scalaz/Bifunctor.$init$:(Lscalaz/Bifunctor;)V
      18: invokestatic  #172                // Method scala/runtime/Statics.releaseFence:()V
      21: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #185,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
