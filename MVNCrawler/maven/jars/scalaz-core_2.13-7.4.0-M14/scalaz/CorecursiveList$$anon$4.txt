Compiled from "CorecursiveList.scala"
public final class scalaz.CorecursiveList$$anon$4 implements scalaz.NaturalTransformation<scala.collection.immutable.IndexedSeq, scalaz.CorecursiveList> {
  public <E> scalaz.NaturalTransformation<E, scalaz.CorecursiveList> compose(scalaz.NaturalTransformation<E, scala.collection.immutable.IndexedSeq>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #36                 // InterfaceMethod scalaz/NaturalTransformation.compose$:(Lscalaz/NaturalTransformation;Lscalaz/NaturalTransformation;)Lscalaz/NaturalTransformation;
       5: areturn

  public <H> scalaz.NaturalTransformation<scala.collection.immutable.IndexedSeq, H> andThen(scalaz.NaturalTransformation<scalaz.CorecursiveList, H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #44                 // InterfaceMethod scalaz/NaturalTransformation.andThen$:(Lscalaz/NaturalTransformation;Lscalaz/NaturalTransformation;)Lscalaz/NaturalTransformation;
       5: areturn

  public <H> scalaz.NaturalTransformation<?, scalaz.CorecursiveList> or(scalaz.NaturalTransformation<H, scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #50                 // InterfaceMethod scalaz/NaturalTransformation.or$:(Lscalaz/NaturalTransformation;Lscalaz/NaturalTransformation;)Lscalaz/NaturalTransformation;
       5: areturn

  public <GG> scalaz.NaturalTransformation<scala.collection.immutable.IndexedSeq, GG> widen(scalaz.LiskovF<scalaz.CorecursiveList, GG>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // InterfaceMethod scalaz/NaturalTransformation.widen$:(Lscalaz/NaturalTransformation;Lscalaz/LiskovF;)Lscalaz/NaturalTransformation;
       5: areturn

  public <FF> scalaz.NaturalTransformation<FF, scalaz.CorecursiveList> narrow(scalaz.LiskovF<FF, scala.collection.immutable.IndexedSeq>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #64                 // InterfaceMethod scalaz/NaturalTransformation.narrow$:(Lscalaz/NaturalTransformation;Lscalaz/LiskovF;)Lscalaz/NaturalTransformation;
       5: areturn

  public <A> scalaz.CorecursiveList<A> apply(scala.collection.immutable.IndexedSeq<A>);
    Code:
       0: getstatic     #72                 // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: pop
       4: iconst_0
       5: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       8: aload_1
       9: invokedynamic #99,  0             // InvokeDynamic #0:apply:(Lscala/collection/immutable/IndexedSeq;)Lscala/Function1;
      14: astore_3
      15: astore_2
      16: new           #17                 // class scalaz/CorecursiveList$CorecursiveListImpl
      19: dup
      20: aload_2
      21: aload_3
      22: invokespecial #103                // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      25: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #110                // class scala/collection/immutable/IndexedSeq
       5: invokevirtual #112                // Method apply:(Lscala/collection/immutable/IndexedSeq;)Lscalaz/CorecursiveList;
       8: areturn

  public static final scalaz.Maybe $anonfun$apply$2(scala.collection.immutable.IndexedSeq, int);
    Code:
       0: iload_1
       1: aload_0
       2: invokeinterface #120,  1          // InterfaceMethod scala/collection/immutable/IndexedSeq.length:()I
       7: if_icmpge     44
      10: getstatic     #125                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      13: pop
      14: new           #127                // class scala/Tuple2
      17: dup
      18: iload_1
      19: iconst_1
      20: iadd
      21: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      24: aload_0
      25: iload_1
      26: invokeinterface #130,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.apply:(I)Ljava/lang/Object;
      31: invokespecial #133                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      34: astore_2
      35: new           #27                 // class scalaz/Maybe$Just
      38: dup
      39: aload_2
      40: invokespecial #136                // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      43: areturn
      44: getstatic     #139                // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      47: invokevirtual #142                // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      50: areturn

  public scalaz.CorecursiveList$$anon$4();
    Code:
       0: aload_0
       1: invokespecial #147                // Method java/lang/Object."<init>":()V
       4: return

  public static final scalaz.Maybe $anonfun$apply$2$adapted(scala.collection.immutable.IndexedSeq, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #151                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokestatic  #153                // Method $anonfun$apply$2:(Lscala/collection/immutable/IndexedSeq;I)Lscalaz/Maybe;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #165,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
