Compiled from "IStream.scala"
public final class scalaz.IStream$$anon$1 implements scalaz.MonadPlus<scalaz.IStream>, scalaz.IsEmpty<scalaz.IStream>, scalaz.Traverse<scalaz.IStream> {
  private scalaz.syntax.TraverseSyntax<scalaz.IStream> traverseSyntax;

  private scalaz.syntax.FoldableSyntax<scalaz.IStream> foldableSyntax;

  private scalaz.syntax.IsEmptySyntax<scalaz.IStream> isEmptySyntax;

  private scalaz.syntax.MonadPlusSyntax<scalaz.IStream> monadPlusSyntax;

  private scalaz.syntax.ApplicativePlusSyntax<scalaz.IStream> applicativePlusSyntax;

  private scalaz.syntax.PlusEmptySyntax<scalaz.IStream> plusEmptySyntax;

  private scalaz.syntax.PlusSyntax<scalaz.IStream> plusSyntax;

  private scalaz.syntax.MonadSyntax<scalaz.IStream> monadSyntax;

  private scalaz.syntax.BindSyntax<scalaz.IStream> bindSyntax;

  private scalaz.syntax.ApplicativeSyntax<scalaz.IStream> applicativeSyntax;

  private scalaz.syntax.InvariantApplicativeSyntax<scalaz.IStream> invariantApplicativeSyntax;

  private scalaz.syntax.ApplySyntax<scalaz.IStream> applySyntax;

  private scalaz.syntax.FunctorSyntax<scalaz.IStream> functorSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<scalaz.IStream> invariantFunctorSyntax;

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #145                // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #156                // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #161                // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #168                // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<scalaz.IStream>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #177                // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<scalaz.IStream>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #185                // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #194                // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #204                // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #211                // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #218                // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #225                // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #232                // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #240                // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #246                // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #253                // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #260                // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #267                // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #274                // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #279                // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #285                // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #289                // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #293                // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #299                // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #303                // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #307                // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #311                // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<scalaz.IStream>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #318                // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #324                // InterfaceMethod scalaz/Foldable.foldMap1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #330                // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #337                // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #340                // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #345                // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #353                // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #361                // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #368                // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #376                // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #382                // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #389                // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #394                // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #399                // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #404                // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #409                // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #416                // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #422                // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #428                // InterfaceMethod scalaz/Foldable.foldMapRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #434                // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #440                // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #446                // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #450                // InterfaceMethod scalaz/Foldable.foldMapLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #454                // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #458                // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #464                // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #468                // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #475                // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #479                // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #483                // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #489                // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #497                // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #504                // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #510                // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #516                // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #522                // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scala.collection.immutable.LazyList toLazyList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #528                // InterfaceMethod scalaz/Foldable.toLazyList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/LazyList;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #534                // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #540                // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #547                // InterfaceMethod scalaz/Foldable.all$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #551                // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #555                // InterfaceMethod scalaz/Foldable.any$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #559                // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #565                // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #571                // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #578                // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #582                // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #587                // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #592                // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #597                // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #602                // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #607                // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #612                // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #617                // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #621                // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #625                // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #629                // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #635                // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #642                // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #646                // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #653                // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/$less$colon$less;)J
       6: lreturn

  public boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #660                // InterfaceMethod scalaz/Foldable.empty$:(Lscalaz/Foldable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #667                // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #674                // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #680                // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #687                // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #694                // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #698                // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #704                // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #710                // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #715                // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #722                // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scalaz.IStream>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #730                // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public scalaz.IsEmpty<scalaz.IStream>.IsEmptyLaw isEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #737                // InterfaceMethod scalaz/IsEmpty.isEmptyLaw$:(Lscalaz/IsEmpty;)Lscalaz/IsEmpty$IsEmptyLaw;
       4: areturn

  public java.lang.Object filter(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #743                // InterfaceMethod scalaz/MonadPlus.filter$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unite(java.lang.Object, scalaz.Foldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #751                // InterfaceMethod scalaz/MonadPlus.unite$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Foldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object lefts(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #757                // InterfaceMethod scalaz/MonadPlus.lefts$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object rights(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #761                // InterfaceMethod scalaz/MonadPlus.rights$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 separate(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #767                // InterfaceMethod scalaz/MonadPlus.separate$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Lscala/Tuple2;
       6: areturn

  public final java.lang.Object uniteU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #772                // InterfaceMethod scalaz/MonadPlus.uniteU$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.MonadPlus<?> product(scalaz.MonadPlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #777                // InterfaceMethod scalaz/MonadPlus.product$:(Lscalaz/MonadPlus;Lscalaz/MonadPlus;)Lscalaz/MonadPlus;
       5: areturn

  public scalaz.MonadPlus<scalaz.IStream>.MonadPlusLaw monadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #785                // InterfaceMethod scalaz/MonadPlus.monadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$MonadPlusLaw;
       4: areturn

  public scalaz.MonadPlus<scalaz.IStream>.StrongMonadPlusLaw strongMonadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #792                // InterfaceMethod scalaz/MonadPlus.strongMonadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$StrongMonadPlusLaw;
       4: areturn

  public <G> scalaz.ApplicativePlus<?> compose(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #799                // InterfaceMethod scalaz/ApplicativePlus.compose$:(Lscalaz/ApplicativePlus;Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public <G> scalaz.ApplicativePlus<?> product(scalaz.ApplicativePlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #804                // InterfaceMethod scalaz/ApplicativePlus.product$:(Lscalaz/ApplicativePlus;Lscalaz/ApplicativePlus;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #810                // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #814                // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #819                // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #823                // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<scalaz.IStream<A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #830                // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<scalaz.IStream>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #837                // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S$, A> scalaz.Maybe<scalaz.IStream<A>> unfoldlPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<S$, scalaz.IStream<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #844                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S$, A> scalaz.Maybe<scalaz.IStream<A>> unfoldrPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scalaz.IStream<A>, S$>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #849                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #854                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.IStream<A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #862                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<scalaz.IStream>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #869                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public java.lang.Object whileM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #876                // InterfaceMethod scalaz/Monad.whileM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object whileM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #882                // InterfaceMethod scalaz/Monad.whileM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object untilM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #887                // InterfaceMethod scalaz/Monad.untilM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object untilM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #891                // InterfaceMethod scalaz/Monad.untilM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateWhile(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #896                // InterfaceMethod scalaz/Monad.iterateWhile$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateUntil(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #900                // InterfaceMethod scalaz/Monad.iterateUntil$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Monad<?> product(scalaz.Monad<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #905                // InterfaceMethod scalaz/Monad.product$:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public scalaz.Monad<scalaz.IStream>.MonadLaw monadLaw();
    Code:
       0: aload_0
       1: invokestatic  #912                // InterfaceMethod scalaz/Monad.monadLaw$:(Lscalaz/Monad;)Lscalaz/Monad$MonadLaw;
       4: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #918                // InterfaceMethod scalaz/Bind.ap$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #924                // InterfaceMethod scalaz/Bind.apply2$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #929                // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #937                // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #942                // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Bind<?> product(scalaz.Bind<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #947                // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<scalaz.IStream>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #954                // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #960                // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #966                // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #971                // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #978                // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #982                // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #990                // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #997                // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1004               // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1012               // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #1020               // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #1024               // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.$eq$eq$greater$greater, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1032               // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1038               // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1043               // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #1050               // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #1055               // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Applicative<?> product(scalaz.Applicative<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1059               // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scalaz.IStream> flip();
    Code:
       0: aload_0
       1: invokestatic  #1064               // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1072               // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scalaz.IStream>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #1079               // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1086               // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1092               // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1098               // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1104               // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1110               // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1116               // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1122               // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1127               // InterfaceMethod scalaz/Apply.forever$:(Lscalaz/Apply;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <S$, A, B> scalaz.Maybe<scalaz.IStream<B>> unfoldrOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scalaz.IStream<A>, S$>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1135               // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G$> scalaz.Apply<?> compose(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1141               // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G$> scalaz.Apply<?> product(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1144               // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scalaz.IStream<A>, scalaz.IStream<B>> apF(scala.Function0<scalaz.IStream<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1151               // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1157               // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1164               // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1171               // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1178               // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1185               // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1192               // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1199               // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1205               // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1211               // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1217               // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1224               // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1231               // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1238               // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #1246               // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #1254               // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #1262               // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #1270               // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1277               // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1283               // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1289               // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1295               // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1300               // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1306               // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1312               // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1318               // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1325               // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1332               // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1339               // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R$> scala.Function5<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>, scalaz.IStream<R$>> lift5(scala.Function5<A, B, C, D, E, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1346               // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R$> scala.Function6<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>, scalaz.IStream<FF>, scalaz.IStream<R$>> lift6(scala.Function6<A, B, C, D, E, FF, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1353               // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G$, R$> scala.Function7<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>, scalaz.IStream<FF>, scalaz.IStream<G$>, scalaz.IStream<R$>> lift7(scala.Function7<A, B, C, D, E, FF, G$, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1360               // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, R$> scala.Function8<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>, scalaz.IStream<FF>, scalaz.IStream<G$>, scalaz.IStream<H>, scalaz.IStream<R$>> lift8(scala.Function8<A, B, C, D, E, FF, G$, H, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1367               // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, R$> scala.Function9<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>, scalaz.IStream<FF>, scalaz.IStream<G$>, scalaz.IStream<H>, scalaz.IStream<I>, scalaz.IStream<R$>> lift9(scala.Function9<A, B, C, D, E, FF, G$, H, I, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1374               // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, R$> scala.Function10<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>, scalaz.IStream<FF>, scalaz.IStream<G$>, scalaz.IStream<H>, scalaz.IStream<I>, scalaz.IStream<J>, scalaz.IStream<R$>> lift10(scala.Function10<A, B, C, D, E, FF, G$, H, I, J, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1381               // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, R$> scala.Function11<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>, scalaz.IStream<FF>, scalaz.IStream<G$>, scalaz.IStream<H>, scalaz.IStream<I>, scalaz.IStream<J>, scalaz.IStream<K>, scalaz.IStream<R$>> lift11(scala.Function11<A, B, C, D, E, FF, G$, H, I, J, K, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1388               // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, L, R$> scala.Function12<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>, scalaz.IStream<FF>, scalaz.IStream<G$>, scalaz.IStream<H>, scalaz.IStream<I>, scalaz.IStream<J>, scalaz.IStream<K>, scalaz.IStream<L>, scalaz.IStream<R$>> lift12(scala.Function12<A, B, C, D, E, FF, G$, H, I, J, K, L, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1395               // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1399               // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1403               // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #1408               // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scalaz.IStream<A>, scalaz.IStream<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1415               // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scalaz.IStream>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #1422               // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1428               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1433               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.IStream<A>, scalaz.IStream<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1440               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1445               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1450               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1454               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1459               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1463               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1467               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1473               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G$> scalaz.Functor<?> compose(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1479               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G$> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1487               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G$> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1493               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G$> scalaz.Functor<?> product(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1496               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1503               // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<scalaz.IStream>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1511               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1518               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1526               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scalaz.IStream>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1534               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.TraverseSyntax<scalaz.IStream> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #1538               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1538               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scalaz.IStream> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #1546               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1546               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.IsEmptySyntax<scalaz.IStream> isEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1553               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       4: areturn

  public void scalaz$IsEmpty$_setter_$isEmptySyntax_$eq(scalaz.syntax.IsEmptySyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1553               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       5: return

  public scalaz.syntax.MonadPlusSyntax<scalaz.IStream> monadPlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1560               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       4: areturn

  public void scalaz$MonadPlus$_setter_$monadPlusSyntax_$eq(scalaz.syntax.MonadPlusSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1560               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       5: return

  public scalaz.syntax.ApplicativePlusSyntax<scalaz.IStream> applicativePlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1567               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       4: areturn

  public void scalaz$ApplicativePlus$_setter_$applicativePlusSyntax_$eq(scalaz.syntax.ApplicativePlusSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1567               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       5: return

  public scalaz.syntax.PlusEmptySyntax<scalaz.IStream> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1574               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1574               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<scalaz.IStream> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #1581               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1581               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.syntax.MonadSyntax<scalaz.IStream> monadSyntax();
    Code:
       0: aload_0
       1: getfield      #1588               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       4: areturn

  public void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1588               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       5: return

  public scalaz.syntax.BindSyntax<scalaz.IStream> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #1595               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1595               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scalaz.IStream> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1602               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1602               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scalaz.IStream> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1609               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1609               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scalaz.IStream> applySyntax();
    Code:
       0: aload_0
       1: getfield      #1616               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1616               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scalaz.IStream> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #1623               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1623               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scalaz.IStream> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #1630               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1630               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A, B> scalaz.IStream<B> map(scalaz.IStream<A>, scala.Function1<A, B>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #1656,  0           // InvokeDynamic #0:apply:(Lscalaz/IStream$$anon$1;)Lscala/Function0;
       7: aload_2
       8: invokedynamic #1667,  0           // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function2;
      13: astore        4
      15: astore_3
      16: ifnonnull     21
      19: aconst_null
      20: athrow
      21: aload_1
      22: instanceof    #54                 // class scalaz/IStream$Nil
      25: ifeq          37
      28: getstatic     #1671               // Field scalaz/IStream$.MODULE$:Lscalaz/IStream$;
      31: invokevirtual #1673               // Method scalaz/IStream$.empty:()Lscalaz/IStream;
      34: goto          147
      37: aload_1
      38: instanceof    #46                 // class scalaz/IStream$Cons
      41: ifeq          138
      44: aload_1
      45: checkcast     #46                 // class scalaz/IStream$Cons
      48: astore        5
      50: aload         5
      52: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      55: astore        6
      57: aload         5
      59: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      62: astore        7
      64: aload         6
      66: invokedynamic #1688,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
      71: aload         7
      73: aload_3
      74: aload         4
      76: invokedynamic #1696,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      81: astore        9
      83: astore        8
      85: getstatic     #1699               // Field scalaz/IStream$Lazy$.MODULE$:Lscalaz/IStream$Lazy$;
      88: pop
      89: aload_2
      90: aload         8
      92: invokedynamic #1707,  0           // InvokeDynamic #4:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
      97: astore        10
      99: new           #46                 // class scalaz/IStream$Cons
     102: dup
     103: getstatic     #1712               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
     106: pop
     107: new           #1714               // class scalaz/Need
     110: dup
     111: aload         10
     113: invokespecial #1718               // Method scalaz/Need."<init>":(Lscala/Function0;)V
     116: getstatic     #1712               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
     119: pop
     120: new           #1714               // class scalaz/Need
     123: dup
     124: aload         9
     126: invokespecial #1718               // Method scalaz/Need."<init>":(Lscala/Function0;)V
     129: invokespecial #1721               // Method scalaz/IStream$Cons."<init>":(Lscalaz/Name;Lscalaz/Name;)V
     132: aconst_null
     133: astore        10
     135: goto          147
     138: new           #1723               // class scala/MatchError
     141: dup
     142: aload_1
     143: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     146: athrow
     147: checkcast     #48                 // class scalaz/IStream
     150: areturn

  public <A> scalaz.IStream<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #1699               // Field scalaz/IStream$Lazy$.MODULE$:Lscalaz/IStream$Lazy$;
       3: pop
       4: new           #46                 // class scalaz/IStream$Cons
       7: dup
       8: getstatic     #1712               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
      11: pop
      12: new           #1714               // class scalaz/Need
      15: dup
      16: aload_1
      17: invokespecial #1718               // Method scalaz/Need."<init>":(Lscala/Function0;)V
      20: getstatic     #1671               // Field scalaz/IStream$.MODULE$:Lscalaz/IStream$;
      23: invokevirtual #1743               // Method scalaz/IStream$.scalaz$IStream$$nil:()Lscalaz/Name;
      26: invokespecial #1721               // Method scalaz/IStream$Cons."<init>":(Lscalaz/Name;Lscalaz/Name;)V
      29: areturn

  public <A, B> scalaz.IStream<B> bind(scalaz.IStream<A>, scala.Function1<A, scalaz.IStream<B>>);
    Code:
       0: aload_0
       1: invokedynamic #1750,  0           // InvokeDynamic #5:apply:(Lscalaz/IStream$$anon$1;)Lscala/Function0;
       6: aload_0
       7: aload_2
       8: invokedynamic #1760,  0           // InvokeDynamic #6:apply:(Lscalaz/IStream$$anon$1;Lscala/Function1;)Lscala/Function2;
      13: astore        4
      15: astore_3
      16: aload_1
      17: instanceof    #54                 // class scalaz/IStream$Nil
      20: ifeq          30
      23: getstatic     #1671               // Field scalaz/IStream$.MODULE$:Lscalaz/IStream$;
      26: invokevirtual #1673               // Method scalaz/IStream$.empty:()Lscalaz/IStream;
      29: areturn
      30: aload_1
      31: instanceof    #46                 // class scalaz/IStream$Cons
      34: ifeq          962
      37: aload_1
      38: checkcast     #46                 // class scalaz/IStream$Cons
      41: astore        5
      43: aload         5
      45: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      48: astore        6
      50: aload         5
      52: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      55: astore        7
      57: aload         6
      59: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
      62: aload_0
      63: aload         7
      65: aload_3
      66: aload         4
      68: invokedynamic #1772,  0           // InvokeDynamic #7:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      73: astore        9
      75: astore        8
      77: aload_2
      78: aload         8
      80: invokeinterface #1776,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      85: checkcast     #48                 // class scalaz/IStream
      88: astore        10
      90: aload         10
      92: invokedynamic #1783,  0           // InvokeDynamic #8:apply:()Lscala/Function2;
      97: astore        11
      99: ifnonnull     104
     102: aconst_null
     103: athrow
     104: aload         10
     106: instanceof    #54                 // class scalaz/IStream$Nil
     109: ifeq          890
     112: aload         7
     114: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
     117: checkcast     #48                 // class scalaz/IStream
     120: astore        17
     122: aload         17
     124: instanceof    #54                 // class scalaz/IStream$Nil
     127: ifeq          137
     130: getstatic     #1671               // Field scalaz/IStream$.MODULE$:Lscalaz/IStream$;
     133: invokevirtual #1673               // Method scalaz/IStream$.empty:()Lscalaz/IStream;
     136: areturn
     137: aload         17
     139: instanceof    #46                 // class scalaz/IStream$Cons
     142: ifeq          880
     145: aload         17
     147: checkcast     #46                 // class scalaz/IStream$Cons
     150: astore        18
     152: aload         18
     154: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
     157: astore        19
     159: aload         18
     161: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
     164: astore        20
     166: aload         19
     168: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
     171: aload_0
     172: aload         20
     174: aload_3
     175: aload         4
     177: invokedynamic #1772,  0           // InvokeDynamic #7:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     182: astore        22
     184: astore        21
     186: aload_2
     187: aload         21
     189: invokeinterface #1776,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     194: checkcast     #48                 // class scalaz/IStream
     197: astore        23
     199: aload         23
     201: invokedynamic #1783,  0           // InvokeDynamic #8:apply:()Lscala/Function2;
     206: astore        24
     208: ifnonnull     213
     211: aconst_null
     212: athrow
     213: aload         23
     215: instanceof    #54                 // class scalaz/IStream$Nil
     218: ifeq          808
     221: aload         20
     223: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
     226: checkcast     #48                 // class scalaz/IStream
     229: astore        30
     231: aload         30
     233: instanceof    #54                 // class scalaz/IStream$Nil
     236: ifeq          246
     239: getstatic     #1671               // Field scalaz/IStream$.MODULE$:Lscalaz/IStream$;
     242: invokevirtual #1673               // Method scalaz/IStream$.empty:()Lscalaz/IStream;
     245: areturn
     246: aload         30
     248: instanceof    #46                 // class scalaz/IStream$Cons
     251: ifeq          798
     254: aload         30
     256: checkcast     #46                 // class scalaz/IStream$Cons
     259: astore        31
     261: aload         31
     263: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
     266: astore        32
     268: aload         31
     270: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
     273: astore        33
     275: aload         32
     277: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
     280: aload_0
     281: aload         33
     283: aload_3
     284: aload         4
     286: invokedynamic #1772,  0           // InvokeDynamic #7:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     291: astore        35
     293: astore        34
     295: aload_2
     296: aload         34
     298: invokeinterface #1776,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     303: checkcast     #48                 // class scalaz/IStream
     306: astore        36
     308: aload         36
     310: invokedynamic #1783,  0           // InvokeDynamic #8:apply:()Lscala/Function2;
     315: astore        37
     317: ifnonnull     322
     320: aconst_null
     321: athrow
     322: aload         36
     324: instanceof    #54                 // class scalaz/IStream$Nil
     327: ifeq          726
     330: aload         33
     332: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
     335: checkcast     #48                 // class scalaz/IStream
     338: astore        43
     340: aload         43
     342: instanceof    #54                 // class scalaz/IStream$Nil
     345: ifeq          353
     348: aload_0
     349: invokevirtual #1784               // Method empty:()Lscalaz/IStream;
     352: areturn
     353: aload         43
     355: instanceof    #46                 // class scalaz/IStream$Cons
     358: ifeq          716
     361: aload         43
     363: checkcast     #46                 // class scalaz/IStream$Cons
     366: astore        44
     368: aload         44
     370: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
     373: astore        45
     375: aload         44
     377: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
     380: astore        46
     382: aload         45
     384: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
     387: aload_0
     388: aload         46
     390: aload_3
     391: aload         4
     393: invokedynamic #1772,  0           // InvokeDynamic #7:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     398: astore        48
     400: astore        47
     402: aload_2
     403: aload         47
     405: invokeinterface #1776,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     410: checkcast     #48                 // class scalaz/IStream
     413: astore        49
     415: aload         49
     417: invokedynamic #1783,  0           // InvokeDynamic #8:apply:()Lscala/Function2;
     422: astore        50
     424: ifnonnull     429
     427: aconst_null
     428: athrow
     429: aload         49
     431: instanceof    #54                 // class scalaz/IStream$Nil
     434: ifeq          644
     437: aload         46
     439: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
     442: checkcast     #48                 // class scalaz/IStream
     445: astore        56
     447: aload         56
     449: instanceof    #54                 // class scalaz/IStream$Nil
     452: ifeq          460
     455: aload_0
     456: invokevirtual #1784               // Method empty:()Lscalaz/IStream;
     459: areturn
     460: aload         56
     462: instanceof    #46                 // class scalaz/IStream$Cons
     465: ifeq          634
     468: aload         56
     470: checkcast     #46                 // class scalaz/IStream$Cons
     473: astore        57
     475: aload         57
     477: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
     480: astore        58
     482: aload         57
     484: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
     487: astore        59
     489: aload         58
     491: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
     494: aload_0
     495: aload         59
     497: aload_3
     498: aload         4
     500: invokedynamic #1772,  0           // InvokeDynamic #7:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     505: astore        61
     507: astore        60
     509: aload_2
     510: aload         60
     512: invokeinterface #1776,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     517: checkcast     #48                 // class scalaz/IStream
     520: astore        62
     522: aload         62
     524: invokedynamic #1783,  0           // InvokeDynamic #8:apply:()Lscala/Function2;
     529: astore        63
     531: ifnonnull     536
     534: aconst_null
     535: athrow
     536: aload         62
     538: instanceof    #54                 // class scalaz/IStream$Nil
     541: ifeq          556
     544: aload_0
     545: aload         59
     547: aload_3
     548: aload         4
     550: invokestatic  #1768               // Method $anonfun$foldRight$1:(Lscalaz/IStream$$anon$1;Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     553: goto          630
     556: aload         62
     558: instanceof    #46                 // class scalaz/IStream$Cons
     561: ifeq          620
     564: aload         62
     566: checkcast     #46                 // class scalaz/IStream$Cons
     569: astore        64
     571: aload         64
     573: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
     576: astore        65
     578: aload         64
     580: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
     583: astore        66
     585: aload         65
     587: invokedynamic #1688,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
     592: aload         66
     594: aload         61
     596: aload         63
     598: invokedynamic #1696,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     603: astore        68
     605: astore        67
     607: getstatic     #1699               // Field scalaz/IStream$Lazy$.MODULE$:Lscalaz/IStream$Lazy$;
     610: aload         67
     612: aload         68
     614: invokevirtual #1787               // Method scalaz/IStream$Lazy$.cons:(Lscala/Function0;Lscala/Function0;)Lscalaz/IStream;
     617: goto          630
     620: new           #1723               // class scala/MatchError
     623: dup
     624: aload         62
     626: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     629: athrow
     630: checkcast     #48                 // class scalaz/IStream
     633: areturn
     634: new           #1723               // class scala/MatchError
     637: dup
     638: aload         56
     640: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     643: athrow
     644: aload         49
     646: instanceof    #46                 // class scalaz/IStream$Cons
     649: ifeq          706
     652: aload         49
     654: checkcast     #46                 // class scalaz/IStream$Cons
     657: astore        51
     659: aload         51
     661: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
     664: astore        52
     666: aload         51
     668: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
     671: astore        53
     673: aload         52
     675: invokedynamic #1688,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
     680: aload         53
     682: aload         48
     684: aload         50
     686: invokedynamic #1696,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     691: astore        55
     693: astore        54
     695: getstatic     #1699               // Field scalaz/IStream$Lazy$.MODULE$:Lscalaz/IStream$Lazy$;
     698: aload         54
     700: aload         55
     702: invokevirtual #1787               // Method scalaz/IStream$Lazy$.cons:(Lscala/Function0;Lscala/Function0;)Lscalaz/IStream;
     705: areturn
     706: new           #1723               // class scala/MatchError
     709: dup
     710: aload         49
     712: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     715: athrow
     716: new           #1723               // class scala/MatchError
     719: dup
     720: aload         43
     722: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     725: athrow
     726: aload         36
     728: instanceof    #46                 // class scalaz/IStream$Cons
     731: ifeq          788
     734: aload         36
     736: checkcast     #46                 // class scalaz/IStream$Cons
     739: astore        38
     741: aload         38
     743: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
     746: astore        39
     748: aload         38
     750: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
     753: astore        40
     755: aload         39
     757: invokedynamic #1688,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
     762: aload         40
     764: aload         35
     766: aload         37
     768: invokedynamic #1696,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     773: astore        42
     775: astore        41
     777: getstatic     #1699               // Field scalaz/IStream$Lazy$.MODULE$:Lscalaz/IStream$Lazy$;
     780: aload         41
     782: aload         42
     784: invokevirtual #1787               // Method scalaz/IStream$Lazy$.cons:(Lscala/Function0;Lscala/Function0;)Lscalaz/IStream;
     787: areturn
     788: new           #1723               // class scala/MatchError
     791: dup
     792: aload         36
     794: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     797: athrow
     798: new           #1723               // class scala/MatchError
     801: dup
     802: aload         30
     804: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     807: athrow
     808: aload         23
     810: instanceof    #46                 // class scalaz/IStream$Cons
     813: ifeq          870
     816: aload         23
     818: checkcast     #46                 // class scalaz/IStream$Cons
     821: astore        25
     823: aload         25
     825: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
     828: astore        26
     830: aload         25
     832: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
     835: astore        27
     837: aload         26
     839: invokedynamic #1688,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
     844: aload         27
     846: aload         22
     848: aload         24
     850: invokedynamic #1696,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     855: astore        29
     857: astore        28
     859: getstatic     #1699               // Field scalaz/IStream$Lazy$.MODULE$:Lscalaz/IStream$Lazy$;
     862: aload         28
     864: aload         29
     866: invokevirtual #1787               // Method scalaz/IStream$Lazy$.cons:(Lscala/Function0;Lscala/Function0;)Lscalaz/IStream;
     869: areturn
     870: new           #1723               // class scala/MatchError
     873: dup
     874: aload         23
     876: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     879: athrow
     880: new           #1723               // class scala/MatchError
     883: dup
     884: aload         17
     886: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     889: athrow
     890: aload         10
     892: instanceof    #46                 // class scalaz/IStream$Cons
     895: ifeq          952
     898: aload         10
     900: checkcast     #46                 // class scalaz/IStream$Cons
     903: astore        12
     905: aload         12
     907: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
     910: astore        13
     912: aload         12
     914: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
     917: astore        14
     919: aload         13
     921: invokedynamic #1688,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
     926: aload         14
     928: aload         9
     930: aload         11
     932: invokedynamic #1696,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     937: astore        16
     939: astore        15
     941: getstatic     #1699               // Field scalaz/IStream$Lazy$.MODULE$:Lscalaz/IStream$Lazy$;
     944: aload         15
     946: aload         16
     948: invokevirtual #1787               // Method scalaz/IStream$Lazy$.cons:(Lscala/Function0;Lscala/Function0;)Lscalaz/IStream;
     951: areturn
     952: new           #1723               // class scala/MatchError
     955: dup
     956: aload         10
     958: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     961: athrow
     962: new           #1723               // class scala/MatchError
     965: dup
     966: aload_1
     967: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     970: athrow

  public <A> scalaz.IStream<A> plus(scalaz.IStream<A>, scala.Function0<scalaz.IStream<A>>);
    Code:
       0: aload_1
       1: invokedynamic #1783,  0           // InvokeDynamic #8:apply:()Lscala/Function2;
       6: astore_3
       7: ifnonnull     12
      10: aconst_null
      11: athrow
      12: aload_1
      13: instanceof    #54                 // class scalaz/IStream$Nil
      16: ifeq          28
      19: aload_2
      20: invokeinterface #1803,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      25: goto          97
      28: aload_1
      29: instanceof    #46                 // class scalaz/IStream$Cons
      32: ifeq          88
      35: aload_1
      36: checkcast     #46                 // class scalaz/IStream$Cons
      39: astore        4
      41: aload         4
      43: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      46: astore        5
      48: aload         4
      50: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      53: astore        6
      55: aload         5
      57: invokedynamic #1688,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
      62: aload         6
      64: aload_2
      65: aload_3
      66: invokedynamic #1696,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      71: astore        8
      73: astore        7
      75: getstatic     #1699               // Field scalaz/IStream$Lazy$.MODULE$:Lscalaz/IStream$Lazy$;
      78: aload         7
      80: aload         8
      82: invokevirtual #1787               // Method scalaz/IStream$Lazy$.cons:(Lscala/Function0;Lscala/Function0;)Lscalaz/IStream;
      85: goto          97
      88: new           #1723               // class scala/MatchError
      91: dup
      92: aload_1
      93: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      96: athrow
      97: checkcast     #48                 // class scalaz/IStream
     100: areturn

  public <A> scalaz.IStream<A> empty();
    Code:
       0: getstatic     #1671               // Field scalaz/IStream$.MODULE$:Lscalaz/IStream$;
       3: invokevirtual #1673               // Method scalaz/IStream$.empty:()Lscalaz/IStream;
       6: areturn

  public <A> boolean isEmpty(scalaz.IStream<A>);
    Code:
       0: aload_1
       1: instanceof    #54                 // class scalaz/IStream$Nil
       4: ireturn

  public <A, B> B foldMap(scalaz.IStream<A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_3
       1: invokedynamic #1818,  0           // InvokeDynamic #9:apply:(Lscalaz/Monoid;)Lscala/Function0;
       6: aload_3
       7: aload_2
       8: invokedynamic #1827,  0           // InvokeDynamic #10:apply:(Lscalaz/Monoid;Lscala/Function1;)Lscala/Function2;
      13: astore        5
      15: astore        4
      17: aload_1
      18: instanceof    #54                 // class scalaz/IStream$Nil
      21: ifeq          31
      24: aload_3
      25: invokeinterface #1832,  1         // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      30: areturn
      31: aload_1
      32: instanceof    #46                 // class scalaz/IStream$Cons
      35: ifeq          96
      38: aload_1
      39: checkcast     #46                 // class scalaz/IStream$Cons
      42: astore        6
      44: aload         6
      46: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      49: astore        7
      51: aload         6
      53: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      56: astore        8
      58: aload         7
      60: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
      63: aload_0
      64: aload         8
      66: aload         4
      68: aload         5
      70: invokedynamic #1772,  0           // InvokeDynamic #7:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      75: astore        10
      77: astore        9
      79: aload_3
      80: aload_2
      81: aload         9
      83: invokeinterface #1776,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      88: aload         10
      90: invokeinterface #1835,  3         // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      95: areturn
      96: new           #1723               // class scala/MatchError
      99: dup
     100: aload_1
     101: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     104: athrow

  public <A, B> B foldRight(scalaz.IStream<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: instanceof    #54                 // class scalaz/IStream$Nil
       4: ifeq          14
       7: aload_2
       8: invokeinterface #1803,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      13: areturn
      14: aload_1
      15: instanceof    #46                 // class scalaz/IStream$Cons
      18: ifeq          63
      21: aload_1
      22: checkcast     #46                 // class scalaz/IStream$Cons
      25: astore        4
      27: aload         4
      29: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      32: astore        5
      34: aload         4
      36: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      39: astore        6
      41: aload_3
      42: aload         5
      44: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
      47: aload_0
      48: aload         6
      50: aload_2
      51: aload_3
      52: invokedynamic #1772,  0           // InvokeDynamic #7:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      57: invokeinterface #1840,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: areturn
      63: new           #1723               // class scala/MatchError
      66: dup
      67: aload_1
      68: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      71: athrow

  public <A> scala.Option<A> index(scalaz.IStream<A>, int);
    Code:
       0: iload_2
       1: iconst_0
       2: if_icmpge     9
       5: getstatic     #1848               // Field scala/None$.MODULE$:Lscala/None$;
       8: areturn
       9: aload_0
      10: iload_2
      11: aload_1
      12: invokespecial #1852               // Method loop$2:(ILscalaz/IStream;)Lscala/Option;
      15: areturn

  public <A, B> B foldLeft(scalaz.IStream<A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_1
       1: aload_2
       2: astore        5
       4: astore        4
       6: aload         4
       8: instanceof    #54                 // class scalaz/IStream$Nil
      11: ifeq          17
      14: aload         5
      16: areturn
      17: aload         4
      19: instanceof    #46                 // class scalaz/IStream$Cons
      22: ifeq          70
      25: aload         4
      27: checkcast     #46                 // class scalaz/IStream$Cons
      30: astore        6
      32: aload         6
      34: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      37: astore        7
      39: aload         6
      41: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      44: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
      47: checkcast     #48                 // class scalaz/IStream
      50: aload_3
      51: aload         5
      53: aload         7
      55: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
      58: invokeinterface #1840,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: astore        5
      65: astore        4
      67: goto          6
      70: new           #1723               // class scala/MatchError
      73: dup
      74: aload         4
      76: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      79: athrow

  public <G, A, B> G traverseImpl(scalaz.IStream<A>, scala.Function1<A, G>, scalaz.Applicative<G>);
    Code:
       0: aload_1
       1: aload_0
       2: aload_3
       3: invokedynamic #1869,  0           // InvokeDynamic #11:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Applicative;)Lscala/Function0;
       8: aload_3
       9: aload_2
      10: invokedynamic #1878,  0           // InvokeDynamic #12:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      15: astore        5
      17: astore        4
      19: ifnonnull     24
      22: aconst_null
      23: athrow
      24: aload_1
      25: instanceof    #54                 // class scalaz/IStream$Nil
      28: ifeq          37
      31: aload_0
      32: aload_3
      33: invokestatic  #1865               // Method $anonfun$traverseImpl$1:(Lscalaz/IStream$$anon$1;Lscalaz/Applicative;)Ljava/lang/Object;
      36: areturn
      37: aload_1
      38: instanceof    #46                 // class scalaz/IStream$Cons
      41: ifeq          108
      44: aload_1
      45: checkcast     #46                 // class scalaz/IStream$Cons
      48: astore        6
      50: aload         6
      52: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      55: astore        7
      57: aload         6
      59: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      62: astore        8
      64: aload         7
      66: invokedynamic #1688,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
      71: aload         8
      73: aload         4
      75: aload         5
      77: invokedynamic #1696,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      82: astore        10
      84: astore        9
      86: aload_3
      87: aload_2
      88: aload         9
      90: invokedynamic #1883,  0           // InvokeDynamic #13:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
      95: aload         10
      97: invokedynamic #1890,  0           // InvokeDynamic #14:apply:()Lscala/Function2;
     102: invokeinterface #1892,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     107: areturn
     108: new           #1723               // class scala/MatchError
     111: dup
     112: aload_1
     113: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     116: athrow

  public <G, A, B> G traverse(scalaz.IStream<A>, scala.Function1<A, G>, scalaz.Applicative<G>);
    Code:
       0: aload_1
       1: aload_0
       2: aload_3
       3: invokedynamic #1869,  0           // InvokeDynamic #11:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Applicative;)Lscala/Function0;
       8: aload_3
       9: aload_2
      10: invokedynamic #1878,  0           // InvokeDynamic #12:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      15: astore        5
      17: astore        4
      19: ifnonnull     24
      22: aconst_null
      23: athrow
      24: aload_1
      25: instanceof    #54                 // class scalaz/IStream$Nil
      28: ifeq          37
      31: aload_0
      32: aload_3
      33: invokestatic  #1865               // Method $anonfun$traverseImpl$1:(Lscalaz/IStream$$anon$1;Lscalaz/Applicative;)Ljava/lang/Object;
      36: areturn
      37: aload_1
      38: instanceof    #46                 // class scalaz/IStream$Cons
      41: ifeq          108
      44: aload_1
      45: checkcast     #46                 // class scalaz/IStream$Cons
      48: astore        6
      50: aload         6
      52: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      55: astore        7
      57: aload         6
      59: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      62: astore        8
      64: aload         7
      66: invokedynamic #1688,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
      71: aload         8
      73: aload         4
      75: aload         5
      77: invokedynamic #1696,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      82: astore        10
      84: astore        9
      86: aload_3
      87: aload_2
      88: aload         9
      90: invokedynamic #1883,  0           // InvokeDynamic #13:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
      95: aload         10
      97: invokedynamic #1890,  0           // InvokeDynamic #14:apply:()Lscala/Function2;
     102: invokeinterface #1892,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     107: areturn
     108: new           #1723               // class scala/MatchError
     111: dup
     112: aload_1
     113: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     116: athrow

  public <A> int length(scalaz.IStream<A>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1903               // Method loop$4:(Lscalaz/IStream;I)I
       6: ireturn

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #1906               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #1909               // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.Applicative compose(scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1911               // Method compose:(Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #48                 // class scalaz/IStream
       5: invokevirtual #1913               // Method length:(Lscalaz/IStream;)I
       8: ireturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #48                 // class scalaz/IStream
       5: aload_2
       6: aload_3
       7: invokevirtual #1915               // Method traverse:(Lscalaz/IStream;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #48                 // class scalaz/IStream
       5: aload_2
       6: aload_3
       7: invokevirtual #1917               // Method traverseImpl:(Lscalaz/IStream;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #48                 // class scalaz/IStream
       5: aload_2
       6: aload_3
       7: invokevirtual #1919               // Method foldLeft:(Lscalaz/IStream;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #48                 // class scalaz/IStream
       5: iload_2
       6: invokevirtual #1922               // Method index:(Lscalaz/IStream;I)Lscala/Option;
       9: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #48                 // class scalaz/IStream
       5: aload_2
       6: aload_3
       7: invokevirtual #1925               // Method foldRight:(Lscalaz/IStream;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #48                 // class scalaz/IStream
       5: aload_2
       6: aload_3
       7: invokevirtual #1928               // Method foldMap:(Lscalaz/IStream;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      10: areturn

  public boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #48                 // class scalaz/IStream
       5: invokevirtual #1930               // Method isEmpty:(Lscalaz/IStream;)Z
       8: ireturn

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #1784               // Method empty:()Lscalaz/IStream;
       4: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #48                 // class scalaz/IStream
       5: aload_2
       6: invokevirtual #1932               // Method plus:(Lscalaz/IStream;Lscala/Function0;)Lscalaz/IStream;
       9: areturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #48                 // class scalaz/IStream
       5: aload_2
       6: invokevirtual #1934               // Method bind:(Lscalaz/IStream;Lscala/Function1;)Lscalaz/IStream;
       9: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1936               // Method point:(Lscala/Function0;)Lscalaz/IStream;
       5: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #48                 // class scalaz/IStream
       5: aload_2
       6: invokevirtual #1938               // Method map:(Lscalaz/IStream;Lscala/Function1;)Lscalaz/IStream;
       9: areturn

  public static final scalaz.IStream $anonfun$map$1(scalaz.IStream$$anon$1);
    Code:
       0: aload_0
       1: invokevirtual #1784               // Method empty:()Lscalaz/IStream;
       4: areturn

  public static final java.lang.Object $anonfun$map$3(scala.Function1, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1803,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: invokeinterface #1776,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public static final scalaz.IStream $anonfun$map$2(scala.Function1, scala.Function0, scala.Function0);
    Code:
       0: getstatic     #1699               // Field scalaz/IStream$Lazy$.MODULE$:Lscalaz/IStream$Lazy$;
       3: pop
       4: aload_0
       5: aload_1
       6: invokedynamic #1707,  0           // InvokeDynamic #4:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
      11: astore_3
      12: new           #46                 // class scalaz/IStream$Cons
      15: dup
      16: getstatic     #1712               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
      19: pop
      20: new           #1714               // class scalaz/Need
      23: dup
      24: aload_3
      25: invokespecial #1718               // Method scalaz/Need."<init>":(Lscala/Function0;)V
      28: getstatic     #1712               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
      31: pop
      32: new           #1714               // class scalaz/Need
      35: dup
      36: aload_2
      37: invokespecial #1718               // Method scalaz/Need."<init>":(Lscala/Function0;)V
      40: invokespecial #1721               // Method scalaz/IStream$Cons."<init>":(Lscalaz/Name;Lscalaz/Name;)V
      43: areturn

  public static final scalaz.IStream $anonfun$bind$1(scalaz.IStream$$anon$1);
    Code:
       0: aload_0
       1: invokevirtual #1784               // Method empty:()Lscalaz/IStream;
       4: areturn

  public static final scalaz.IStream $anonfun$bind$2(scalaz.IStream$$anon$1, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1776,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #48                 // class scalaz/IStream
      10: astore        4
      12: aload         4
      14: invokedynamic #1783,  0           // InvokeDynamic #8:apply:()Lscala/Function2;
      19: astore        5
      21: ifnonnull     26
      24: aconst_null
      25: athrow
      26: aload         4
      28: instanceof    #54                 // class scalaz/IStream$Nil
      31: ifeq          43
      34: aload_3
      35: invokeinterface #1803,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      40: goto          116
      43: aload         4
      45: instanceof    #46                 // class scalaz/IStream$Cons
      48: ifeq          106
      51: aload         4
      53: checkcast     #46                 // class scalaz/IStream$Cons
      56: astore        6
      58: aload         6
      60: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      63: astore        7
      65: aload         6
      67: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      70: astore        8
      72: aload         7
      74: invokedynamic #1688,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
      79: aload         8
      81: aload_3
      82: aload         5
      84: invokedynamic #1696,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      89: astore        10
      91: astore        9
      93: getstatic     #1699               // Field scalaz/IStream$Lazy$.MODULE$:Lscalaz/IStream$Lazy$;
      96: aload         9
      98: aload         10
     100: invokevirtual #1787               // Method scalaz/IStream$Lazy$.cons:(Lscala/Function0;Lscala/Function0;)Lscalaz/IStream;
     103: goto          116
     106: new           #1723               // class scala/MatchError
     109: dup
     110: aload         4
     112: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     115: athrow
     116: checkcast     #48                 // class scalaz/IStream
     119: areturn

  public static final scalaz.IStream $anonfun$plus$1(scala.Function0, scala.Function0);
    Code:
       0: getstatic     #1699               // Field scalaz/IStream$Lazy$.MODULE$:Lscalaz/IStream$Lazy$;
       3: aload_0
       4: aload_1
       5: invokevirtual #1787               // Method scalaz/IStream$Lazy$.cons:(Lscala/Function0;Lscala/Function0;)Lscalaz/IStream;
       8: areturn

  public static final java.lang.Object $anonfun$foldMap$1(scalaz.Monoid);
    Code:
       0: aload_0
       1: invokeinterface #1832,  1         // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
       6: areturn

  public static final java.lang.Object $anonfun$foldMap$2(scalaz.Monoid, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #1776,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_3
       9: invokeinterface #1835,  3         // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static final java.lang.Object $anonfun$foldRight$1(scalaz.IStream$$anon$1, scalaz.Name, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
       4: checkcast     #48                 // class scalaz/IStream
       7: astore        4
       9: aload         4
      11: instanceof    #54                 // class scalaz/IStream$Nil
      14: ifeq          24
      17: aload_2
      18: invokeinterface #1803,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      23: areturn
      24: aload         4
      26: instanceof    #46                 // class scalaz/IStream$Cons
      29: ifeq          75
      32: aload         4
      34: checkcast     #46                 // class scalaz/IStream$Cons
      37: astore        5
      39: aload         5
      41: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      44: astore        6
      46: aload         5
      48: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      51: astore        7
      53: aload_3
      54: aload         6
      56: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
      59: aload_0
      60: aload         7
      62: aload_2
      63: aload_3
      64: invokedynamic #1772,  0           // InvokeDynamic #7:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      69: invokeinterface #1840,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: areturn
      75: new           #1723               // class scala/MatchError
      78: dup
      79: aload         4
      81: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      84: athrow

  private final scala.Option loop$2(int, scalaz.IStream);
    Code:
       0: aload_2
       1: instanceof    #46                 // class scalaz/IStream$Cons
       4: ifeq          58
       7: aload_2
       8: checkcast     #46                 // class scalaz/IStream$Cons
      11: astore_3
      12: aload_3
      13: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      16: astore        4
      18: aload_3
      19: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      22: astore        5
      24: iload_1
      25: iconst_0
      26: if_icmpne     42
      29: new           #1957               // class scala/Some
      32: dup
      33: aload         4
      35: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
      38: invokespecial #1958               // Method scala/Some."<init>":(Ljava/lang/Object;)V
      41: areturn
      42: iload_1
      43: iconst_1
      44: isub
      45: aload         5
      47: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
      50: checkcast     #48                 // class scalaz/IStream
      53: astore_2
      54: istore_1
      55: goto          0
      58: getstatic     #1848               // Field scala/None$.MODULE$:Lscala/None$;
      61: areturn

  private final java.lang.Object loop$3(scalaz.IStream, java.lang.Object, scala.Function2);
    Code:
       0: aload_1
       1: instanceof    #54                 // class scalaz/IStream$Nil
       4: ifeq          9
       7: aload_2
       8: areturn
       9: aload_1
      10: instanceof    #46                 // class scalaz/IStream$Cons
      13: ifeq          57
      16: aload_1
      17: checkcast     #46                 // class scalaz/IStream$Cons
      20: astore        4
      22: aload         4
      24: invokevirtual #1677               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      27: astore        5
      29: aload         4
      31: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      34: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
      37: checkcast     #48                 // class scalaz/IStream
      40: aload_3
      41: aload_2
      42: aload         5
      44: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
      47: invokeinterface #1840,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      52: astore_2
      53: astore_1
      54: goto          0
      57: new           #1723               // class scala/MatchError
      60: dup
      61: aload_1
      62: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      65: athrow

  public static final scalaz.IStream $anonfun$traverseImpl$2(scalaz.IStream$$anon$1);
    Code:
       0: aload_0
       1: invokevirtual #1784               // Method empty:()Lscalaz/IStream;
       4: areturn

  public static final java.lang.Object $anonfun$traverseImpl$1(scalaz.IStream$$anon$1, scalaz.Applicative);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #1967,  0           // InvokeDynamic #15:apply:(Lscalaz/IStream$$anon$1;)Lscala/Function0;
       7: invokeinterface #1969,  2         // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$traverseImpl$4(scala.Function1, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1803,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: invokeinterface #1776,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public static final scalaz.IStream $anonfun$traverseImpl$5(java.lang.Object, scalaz.IStream);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #1976               // Method scalaz/IStream.$bang$colon:(Ljava/lang/Object;)Lscalaz/IStream;
       5: areturn

  public static final java.lang.Object $anonfun$traverseImpl$3(scalaz.Applicative, scala.Function1, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #1883,  0           // InvokeDynamic #13:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
       8: aload_3
       9: invokedynamic #1890,  0           // InvokeDynamic #14:apply:()Lscala/Function2;
      14: invokeinterface #1892,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      19: areturn

  private final int loop$4(scalaz.IStream, int);
    Code:
       0: aload_1
       1: instanceof    #46                 // class scalaz/IStream$Cons
       4: ifeq          28
       7: aload_1
       8: checkcast     #46                 // class scalaz/IStream$Cons
      11: invokevirtual #1680               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      14: invokevirtual #1764               // Method scalaz/Name.value:()Ljava/lang/Object;
      17: checkcast     #48                 // class scalaz/IStream
      20: iload_2
      21: iconst_1
      22: iadd
      23: istore_2
      24: astore_1
      25: goto          0
      28: aload_1
      29: instanceof    #54                 // class scalaz/IStream$Nil
      32: ifeq          37
      35: iload_2
      36: ireturn
      37: new           #1723               // class scala/MatchError
      40: dup
      41: aload_1
      42: invokespecial #1726               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      45: athrow

  public scalaz.IStream$$anon$1();
    Code:
       0: aload_0
       1: invokespecial #1980               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #1984               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #1987               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #1990               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      16: aload_0
      17: invokestatic  #1993               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      20: aload_0
      21: invokestatic  #1996               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      24: aload_0
      25: invokestatic  #1999               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      28: aload_0
      29: invokestatic  #2002               // InterfaceMethod scalaz/Monad.$init$:(Lscalaz/Monad;)V
      32: aload_0
      33: invokestatic  #2005               // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      36: aload_0
      37: invokestatic  #2008               // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      40: aload_0
      41: invokestatic  #2011               // InterfaceMethod scalaz/ApplicativePlus.$init$:(Lscalaz/ApplicativePlus;)V
      44: aload_0
      45: invokestatic  #2014               // InterfaceMethod scalaz/MonadPlus.$init$:(Lscalaz/MonadPlus;)V
      48: aload_0
      49: invokestatic  #2017               // InterfaceMethod scalaz/IsEmpty.$init$:(Lscalaz/IsEmpty;)V
      52: aload_0
      53: invokestatic  #2020               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      56: aload_0
      57: invokestatic  #2023               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      60: invokestatic  #2028               // Method scala/runtime/Statics.releaseFence:()V
      63: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2040,  0           // InvokeDynamic #16:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
