Compiled from "Monoid.scala"
public final class scalaz.Monoid$$anon$1 implements scalaz.Category<?>, scalaz.Semigroup<F>.SemigroupCompose {
  private scalaz.syntax.CategorySyntax<?> categorySyntax;

  private scalaz.syntax.ComposeSyntax<?> composeSyntax;

  private final scalaz.Monoid $outer;

  public <A, B, C> java.lang.Object compose(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #43                 // InterfaceMethod scalaz/Semigroup$SemigroupCompose.compose$:(Lscalaz/Semigroup$SemigroupCompose;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scalaz.PlusEmpty<?> empty();
    Code:
       0: aload_0
       1: invokestatic  #53                 // InterfaceMethod scalaz/Category.empty$:(Lscalaz/Category;)Lscalaz/PlusEmpty;
       4: areturn

  public <A> scalaz.Monoid<F> monoid();
    Code:
       0: aload_0
       1: invokestatic  #60                 // InterfaceMethod scalaz/Category.monoid$:(Lscalaz/Category;)Lscalaz/Monoid;
       4: areturn

  public scalaz.Category<?>.CategoryLaw categoryLaw();
    Code:
       0: aload_0
       1: invokestatic  #67                 // InterfaceMethod scalaz/Category.categoryLaw$:(Lscalaz/Category;)Lscalaz/Category$CategoryLaw;
       4: areturn

  public scalaz.Plus<?> plus();
    Code:
       0: aload_0
       1: invokestatic  #74                 // InterfaceMethod scalaz/Compose.plus$:(Lscalaz/Compose;)Lscalaz/Plus;
       4: areturn

  public <A> scalaz.Semigroup<F> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #81                 // InterfaceMethod scalaz/Compose.semigroup$:(Lscalaz/Compose;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Compose<?>.ComposeLaw composeLaw();
    Code:
       0: aload_0
       1: invokestatic  #88                 // InterfaceMethod scalaz/Compose.composeLaw$:(Lscalaz/Compose;)Lscalaz/Compose$ComposeLaw;
       4: areturn

  public scalaz.syntax.CategorySyntax<?> categorySyntax();
    Code:
       0: aload_0
       1: getfield      #92                 // Field categorySyntax:Lscalaz/syntax/CategorySyntax;
       4: areturn

  public void scalaz$Category$_setter_$categorySyntax_$eq(scalaz.syntax.CategorySyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #92                 // Field categorySyntax:Lscalaz/syntax/CategorySyntax;
       5: return

  public scalaz.syntax.ComposeSyntax<?> composeSyntax();
    Code:
       0: aload_0
       1: getfield      #100                // Field composeSyntax:Lscalaz/syntax/ComposeSyntax;
       4: areturn

  public void scalaz$Compose$_setter_$composeSyntax_$eq(scalaz.syntax.ComposeSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #100                // Field composeSyntax:Lscalaz/syntax/ComposeSyntax;
       5: return

  public <A> F id();
    Code:
       0: aload_0
       1: getfield      #108                // Field $outer:Lscalaz/Monoid;
       4: invokeinterface #111,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
       9: areturn

  public scalaz.Semigroup scalaz$Semigroup$SemigroupCompose$$$outer();
    Code:
       0: aload_0
       1: getfield      #108                // Field $outer:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid$$anon$1(scalaz.Monoid);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #108                // Field $outer:Lscalaz/Monoid;
      11: aload_0
      12: invokespecial #117                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #121                // InterfaceMethod scalaz/Compose.$init$:(Lscalaz/Compose;)V
      19: aload_0
      20: invokestatic  #124                // InterfaceMethod scalaz/Category.$init$:(Lscalaz/Category;)V
      23: invokestatic  #129                // Method scala/runtime/Statics.releaseFence:()V
      26: return
}
