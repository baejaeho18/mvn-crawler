Compiled from "OneAnd.scala"
public final class scalaz.OneAnd$ extends scalaz.OneAndInstances {
  public static final scalaz.OneAnd$ MODULE$;

  private static final scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, scalaz.NonEmptyList, ?> oneAndNelIso;

  public static {};
    Code:
       0: new           #2                  // class scalaz/OneAnd$
       3: dup
       4: invokespecial #27                 // Method "<init>":()V
       7: putstatic     #29                 // Field MODULE$:Lscalaz/OneAnd$;
      10: new           #12                 // class scalaz/OneAnd$$anon$17
      13: dup
      14: invokespecial #30                 // Method scalaz/OneAnd$$anon$17."<init>":()V
      17: putstatic     #32                 // Field oneAndNelIso:Lscalaz/Isomorphisms$Iso2;
      20: return

  public <F, A> scalaz.OneAnd<F, A> apply(A, F);
    Code:
       0: getstatic     #40                 // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
       3: aload_1
       4: aload_2
       5: invokevirtual #42                 // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
       8: areturn

  public <F, A> scala.Some<scala.Tuple2<A, F>> unapply(scalaz.OneAnd<F, A>);
    Code:
       0: new           #50                 // class scala/Some
       3: dup
       4: new           #52                 // class scala/Tuple2
       7: dup
       8: aload_1
       9: invokevirtual #56                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      12: aload_1
      13: invokevirtual #59                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      16: invokespecial #62                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      19: invokespecial #65                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      22: areturn

  public scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, scalaz.NonEmptyList, ?> oneAndNelIso();
    Code:
       0: getstatic     #32                 // Field oneAndNelIso:Lscalaz/Isomorphisms$Iso2;
       3: areturn

  private scalaz.OneAnd$();
    Code:
       0: aload_0
       1: invokespecial #69                 // Method scalaz/OneAndInstances."<init>":()V
       4: return
}
