Compiled from "Either.scala"
public final class scalaz.DisjunctionInstances1$$anon$6 implements scalaz.Traverse<?>, scalaz.BindRec<?>, scalaz.Cozip<?>, scalaz.Plus<?>, scalaz.Alt<?>, scalaz.Optional<?>, scalaz.MonadError<?, L> {
  private scalaz.syntax.MonadErrorSyntax<?, L> monadErrorSyntax;

  private scalaz.syntax.ApplicativeErrorSyntax<?, L> applicativeErrorSyntax;

  private scalaz.syntax.OptionalSyntax<?> optionalSyntax;

  private scalaz.syntax.AltSyntax<?> altSyntax;

  private scalaz.syntax.InvariantAltSyntax<?> invariantAltSyntax;

  private scalaz.syntax.PlusSyntax<?> plusSyntax;

  private scalaz.syntax.CozipSyntax<?> cozipSyntax;

  private scalaz.syntax.BindRecSyntax<?> bindRecSyntax;

  private scalaz.syntax.MonadSyntax<?> monadSyntax;

  private scalaz.syntax.BindSyntax<?> bindSyntax;

  private scalaz.syntax.ApplicativeSyntax<?> applicativeSyntax;

  private scalaz.syntax.InvariantApplicativeSyntax<?> invariantApplicativeSyntax;

  private scalaz.syntax.ApplySyntax<?> applySyntax;

  private scalaz.syntax.TraverseSyntax<?> traverseSyntax;

  private scalaz.syntax.FoldableSyntax<?> foldableSyntax;

  private scalaz.syntax.FunctorSyntax<?> functorSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  public scalaz.MonadError<?, L>.MonadErrorLaw monadErrorLaw();
    Code:
       0: aload_0
       1: invokestatic  #162                // InterfaceMethod scalaz/MonadError.monadErrorLaw$:(Lscalaz/MonadError;)Lscalaz/MonadError$MonadErrorLaw;
       4: areturn

  public scalaz.ApplicativeError<?, L>.ApplicativeErrorLaws applicativeErrorLaws();
    Code:
       0: aload_0
       1: invokestatic  #171                // InterfaceMethod scalaz/ApplicativeError.applicativeErrorLaws$:(Lscalaz/ApplicativeError;)Lscalaz/ApplicativeError$ApplicativeErrorLaws;
       4: areturn

  public java.lang.Object getOrElse(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #179                // InterfaceMethod scalaz/Optional.getOrElse$:(Lscalaz/Optional;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public boolean isDefined(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #187                // InterfaceMethod scalaz/Optional.isDefined$:(Lscalaz/Optional;Ljava/lang/Object;)Z
       5: ireturn

  public final boolean nonEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #191                // InterfaceMethod scalaz/Optional.nonEmpty$:(Lscalaz/Optional;Ljava/lang/Object;)Z
       5: ireturn

  public final boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #195                // InterfaceMethod scalaz/Optional.isEmpty$:(Lscalaz/Optional;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.Object orElse(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #200                // InterfaceMethod scalaz/Optional.orElse$:(Lscalaz/Optional;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object $qmark(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #208                // InterfaceMethod scalaz/Optional.$qmark$:(Lscalaz/Optional;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public scala.Option toOption(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #214                // InterfaceMethod scalaz/Optional.toOption$:(Lscalaz/Optional;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public scalaz.Maybe toMaybe(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #220                // InterfaceMethod scalaz/Optional.toMaybe$:(Lscalaz/Optional;Ljava/lang/Object;)Lscalaz/Maybe;
       5: areturn

  public java.lang.Object optional(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #226                // InterfaceMethod scalaz/Alt.optional$:(Lscalaz/Alt;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object altly1(scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #234                // InterfaceMethod scalaz/Alt.altly1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object altly2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #242                // InterfaceMethod scalaz/Alt.altly2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object altly3(scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #249                // InterfaceMethod scalaz/Alt.altly3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object altly4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #256                // InterfaceMethod scalaz/Alt.altly4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object either2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #262                // InterfaceMethod scalaz/Alt.either2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #268                // InterfaceMethod scalaz/Alt.altlying1$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #274                // InterfaceMethod scalaz/Alt.altlying2$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object altlying3(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #280                // InterfaceMethod scalaz/Alt.altlying3$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object altlying4(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #286                // InterfaceMethod scalaz/Alt.altlying4$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #293                // InterfaceMethod scalaz/Alt.xcoproduct1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xcoproduct2(scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #299                // InterfaceMethod scalaz/Alt.xcoproduct2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xcoproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #305                // InterfaceMethod scalaz/Alt.xcoproduct3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #311                // InterfaceMethod scalaz/Alt.xcoproduct4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public scalaz.Alt<?>.AltLaw altLaw();
    Code:
       0: aload_0
       1: invokestatic  #318                // InterfaceMethod scalaz/Alt.altLaw$:(Lscalaz/Alt;)Lscalaz/Alt$AltLaw;
       4: areturn

  public final java.lang.Object xcoderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #326                // InterfaceMethod scalaz/InvariantAlt.xcoderiving1$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xcoderiving2(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #332                // InterfaceMethod scalaz/InvariantAlt.xcoderiving2$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xcoderiving3(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #338                // InterfaceMethod scalaz/InvariantAlt.xcoderiving3$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xcoderiving4(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #344                // InterfaceMethod scalaz/InvariantAlt.xcoderiving4$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public <S$, A> scalaz.Maybe<scalaz.$bslash$div<L, A>> unfoldlPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<S$, scalaz.$bslash$div<L, A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #352                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S$, A> scalaz.Maybe<scalaz.$bslash$div<L, A>> unfoldrPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scalaz.$bslash$div<L, A>, S$>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #357                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #364                // InterfaceMethod scalaz/Plus.compose$:(Lscalaz/Plus;)Lscalaz/Plus;
       4: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #371                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.$bslash$div<L, A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #379                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<?>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #386                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public scalaz.$bslash$div cozip3(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #393                // InterfaceMethod scalaz/Cozip.cozip3$:(Lscalaz/Cozip;Ljava/lang/Object;)Lscalaz/$bslash$div;
       5: areturn

  public scalaz.$bslash$div cozip4(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #397                // InterfaceMethod scalaz/Cozip.cozip4$:(Lscalaz/Cozip;Ljava/lang/Object;)Lscalaz/$bslash$div;
       5: areturn

  public scalaz.$bslash$div cozip5(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #401                // InterfaceMethod scalaz/Cozip.cozip5$:(Lscalaz/Cozip;Ljava/lang/Object;)Lscalaz/$bslash$div;
       5: areturn

  public scalaz.$bslash$div cozip6(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #405                // InterfaceMethod scalaz/Cozip.cozip6$:(Lscalaz/Cozip;Ljava/lang/Object;)Lscalaz/$bslash$div;
       5: areturn

  public scalaz.$bslash$div cozip7(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #409                // InterfaceMethod scalaz/Cozip.cozip7$:(Lscalaz/Cozip;Ljava/lang/Object;)Lscalaz/$bslash$div;
       5: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #414                // InterfaceMethod scalaz/BindRec.forever$:(Lscalaz/BindRec;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.BindRec<?> product(scalaz.BindRec<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #419                // InterfaceMethod scalaz/BindRec.product$:(Lscalaz/BindRec;Lscalaz/BindRec;)Lscalaz/BindRec;
       5: areturn

  public scalaz.BindRec<?>.BindRecLaw bindRecLaw();
    Code:
       0: aload_0
       1: invokestatic  #427                // InterfaceMethod scalaz/BindRec.bindRecLaw$:(Lscalaz/BindRec;)Lscalaz/BindRec$BindRecLaw;
       4: areturn

  public java.lang.Object whileM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #436                // InterfaceMethod scalaz/Monad.whileM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object whileM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #442                // InterfaceMethod scalaz/Monad.whileM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object untilM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #447                // InterfaceMethod scalaz/Monad.untilM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object untilM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #451                // InterfaceMethod scalaz/Monad.untilM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateWhile(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #457                // InterfaceMethod scalaz/Monad.iterateWhile$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateUntil(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #461                // InterfaceMethod scalaz/Monad.iterateUntil$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Monad<?> product(scalaz.Monad<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #466                // InterfaceMethod scalaz/Monad.product$:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public scalaz.Monad<?>.MonadLaw monadLaw();
    Code:
       0: aload_0
       1: invokestatic  #474                // InterfaceMethod scalaz/Monad.monadLaw$:(Lscalaz/Monad;)Lscalaz/Monad$MonadLaw;
       4: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #480                // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #488                // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #493                // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Bind<?> product(scalaz.Bind<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #498                // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<?>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #506                // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #513                // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #519                // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #528                // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #535                // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #540                // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #545                // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #551                // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #558                // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #565                // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #573                // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #578                // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.$eq$eq$greater$greater, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #586                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #593                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #598                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #605                // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #610                // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Applicative<?> compose(scalaz.Applicative<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #614                // InterfaceMethod scalaz/Applicative.compose$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public <G$> scalaz.Applicative<?> product(scalaz.Applicative<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #617                // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<?> flip();
    Code:
       0: aload_0
       1: invokestatic  #621                // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #629                // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<?>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #637                // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #644                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #649                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #655                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #661                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #667                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #673                // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #680                // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Apply<?> compose(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #685                // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G$> scalaz.Apply<?> product(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #688                // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scalaz.$bslash$div<L, A>, scalaz.$bslash$div<L, B>> apF(scala.Function0<scalaz.$bslash$div<L, scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #695                // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #702                // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #709                // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #716                // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #723                // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #730                // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #737                // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #744                // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #750                // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #756                // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #762                // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #769                // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #776                // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #783                // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #791                // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #799                // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #807                // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #815                // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #821                // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #827                // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #833                // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #839                // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #844                // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #850                // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #856                // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #862                // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scalaz.$bslash$div<L, A>, scalaz.$bslash$div<L, B>, scalaz.$bslash$div<L, C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #869                // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scalaz.$bslash$div<L, A>, scalaz.$bslash$div<L, B>, scalaz.$bslash$div<L, C>, scalaz.$bslash$div<L, D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #876                // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scalaz.$bslash$div<L, A>, scalaz.$bslash$div<L, B>, scalaz.$bslash$div<L, C>, scalaz.$bslash$div<L, D>, scalaz.$bslash$div<L, E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #883                // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R$> scala.Function5<scalaz.$bslash$div<L, A>, scalaz.$bslash$div<L, B>, scalaz.$bslash$div<L, C>, scalaz.$bslash$div<L, D>, scalaz.$bslash$div<L, E>, scalaz.$bslash$div<L, R$>> lift5(scala.Function5<A, B, C, D, E, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #890                // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R$> scala.Function6<scalaz.$bslash$div<L, A>, scalaz.$bslash$div<L, B>, scalaz.$bslash$div<L, C>, scalaz.$bslash$div<L, D>, scalaz.$bslash$div<L, E>, scalaz.$bslash$div<L, FF>, scalaz.$bslash$div<L, R$>> lift6(scala.Function6<A, B, C, D, E, FF, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #897                // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G$, R$> scala.Function7<scalaz.$bslash$div<L, A>, scalaz.$bslash$div<L, B>, scalaz.$bslash$div<L, C>, scalaz.$bslash$div<L, D>, scalaz.$bslash$div<L, E>, scalaz.$bslash$div<L, FF>, scalaz.$bslash$div<L, G$>, scalaz.$bslash$div<L, R$>> lift7(scala.Function7<A, B, C, D, E, FF, G$, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #904                // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, R$> scala.Function8<scalaz.$bslash$div<L, A>, scalaz.$bslash$div<L, B>, scalaz.$bslash$div<L, C>, scalaz.$bslash$div<L, D>, scalaz.$bslash$div<L, E>, scalaz.$bslash$div<L, FF>, scalaz.$bslash$div<L, G$>, scalaz.$bslash$div<L, H>, scalaz.$bslash$div<L, R$>> lift8(scala.Function8<A, B, C, D, E, FF, G$, H, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #911                // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, R$> scala.Function9<scalaz.$bslash$div<L, A>, scalaz.$bslash$div<L, B>, scalaz.$bslash$div<L, C>, scalaz.$bslash$div<L, D>, scalaz.$bslash$div<L, E>, scalaz.$bslash$div<L, FF>, scalaz.$bslash$div<L, G$>, scalaz.$bslash$div<L, H>, scalaz.$bslash$div<L, I>, scalaz.$bslash$div<L, R$>> lift9(scala.Function9<A, B, C, D, E, FF, G$, H, I, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #918                // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, R$> scala.Function10<scalaz.$bslash$div<L, A>, scalaz.$bslash$div<L, B>, scalaz.$bslash$div<L, C>, scalaz.$bslash$div<L, D>, scalaz.$bslash$div<L, E>, scalaz.$bslash$div<L, FF>, scalaz.$bslash$div<L, G$>, scalaz.$bslash$div<L, H>, scalaz.$bslash$div<L, I>, scalaz.$bslash$div<L, J>, scalaz.$bslash$div<L, R$>> lift10(scala.Function10<A, B, C, D, E, FF, G$, H, I, J, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #925                // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, R$> scala.Function11<scalaz.$bslash$div<L, A>, scalaz.$bslash$div<L, B>, scalaz.$bslash$div<L, C>, scalaz.$bslash$div<L, D>, scalaz.$bslash$div<L, E>, scalaz.$bslash$div<L, FF>, scalaz.$bslash$div<L, G$>, scalaz.$bslash$div<L, H>, scalaz.$bslash$div<L, I>, scalaz.$bslash$div<L, J>, scalaz.$bslash$div<L, K>, scalaz.$bslash$div<L, R$>> lift11(scala.Function11<A, B, C, D, E, FF, G$, H, I, J, K, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #932                // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, L, R$> scala.Function12<scalaz.$bslash$div<L, A>, scalaz.$bslash$div<L, B>, scalaz.$bslash$div<L, C>, scalaz.$bslash$div<L, D>, scalaz.$bslash$div<L, E>, scalaz.$bslash$div<L, FF>, scalaz.$bslash$div<L, G$>, scalaz.$bslash$div<L, H>, scalaz.$bslash$div<L, I>, scalaz.$bslash$div<L, J>, scalaz.$bslash$div<L, K>, scalaz.$bslash$div<L, L>, scalaz.$bslash$div<L, R$>> lift12(scala.Function12<A, B, C, D, E, FF, G$, H, I, J, K, L, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #939                // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #943                // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #947                // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #952                // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scalaz.$bslash$div<L, A>, scalaz.$bslash$div<L, B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #960                // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<?>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #968                // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #973                // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #981                // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #984                // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #991                // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<?>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #999                // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<?>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #1006               // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1011               // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1017               // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1025               // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1031               // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1038               // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1045               // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1052               // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1058               // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1064               // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1071               // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1078               // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1084               // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1090               // InterfaceMethod scalaz/Traverse.foldLeft$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1096               // InterfaceMethod scalaz/Traverse.foldMap$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1102               // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1106               // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1110               // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1114               // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1118               // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1124               // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1128               // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1132               // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1136               // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<?>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #1143               // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1149               // InterfaceMethod scalaz/Foldable.foldMap1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1154               // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1160               // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1163               // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1168               // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1176               // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1182               // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1189               // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1196               // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1202               // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1207               // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1212               // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1217               // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1222               // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1227               // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1233               // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1239               // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1245               // InterfaceMethod scalaz/Foldable.foldMapRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1251               // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1257               // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1263               // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1267               // InterfaceMethod scalaz/Foldable.foldMapLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1271               // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1275               // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1281               // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1285               // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1291               // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1295               // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1299               // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1305               // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1309               // InterfaceMethod scalaz/Foldable.length$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1316               // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #1322               // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1328               // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1334               // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1340               // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1346               // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scala.collection.immutable.LazyList toLazyList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1352               // InterfaceMethod scalaz/Foldable.toLazyList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/LazyList;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1358               // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1364               // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1370               // InterfaceMethod scalaz/Foldable.all$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1374               // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1378               // InterfaceMethod scalaz/Foldable.any$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1382               // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1388               // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1394               // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1400               // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1404               // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1409               // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1414               // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1419               // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1424               // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1429               // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1434               // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1439               // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1443               // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1447               // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1451               // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1457               // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1464               // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1468               // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1475               // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/$less$colon$less;)J
       6: lreturn

  public boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1481               // InterfaceMethod scalaz/Foldable.empty$:(Lscalaz/Foldable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1488               // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1495               // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1501               // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1508               // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1514               // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1518               // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1524               // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1530               // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1535               // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1541               // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<?>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #1549               // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1555               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1560               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.$bslash$div<L, A>, scalaz.$bslash$div<L, B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1567               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1572               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1577               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1581               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1586               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1590               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1594               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1600               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G$> scalaz.Functor<?> compose(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1606               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G$> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1614               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G$> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1620               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G$> scalaz.Functor<?> product(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1623               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1630               // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<?>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1638               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1645               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1653               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1661               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.MonadErrorSyntax<?, L> monadErrorSyntax();
    Code:
       0: aload_0
       1: getfield      #1665               // Field monadErrorSyntax:Lscalaz/syntax/MonadErrorSyntax;
       4: areturn

  public void scalaz$MonadError$_setter_$monadErrorSyntax_$eq(scalaz.syntax.MonadErrorSyntax<?, L>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1665               // Field monadErrorSyntax:Lscalaz/syntax/MonadErrorSyntax;
       5: return

  public scalaz.syntax.ApplicativeErrorSyntax<?, L> applicativeErrorSyntax();
    Code:
       0: aload_0
       1: getfield      #1673               // Field applicativeErrorSyntax:Lscalaz/syntax/ApplicativeErrorSyntax;
       4: areturn

  public void scalaz$ApplicativeError$_setter_$applicativeErrorSyntax_$eq(scalaz.syntax.ApplicativeErrorSyntax<?, L>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1673               // Field applicativeErrorSyntax:Lscalaz/syntax/ApplicativeErrorSyntax;
       5: return

  public scalaz.syntax.OptionalSyntax<?> optionalSyntax();
    Code:
       0: aload_0
       1: getfield      #1680               // Field optionalSyntax:Lscalaz/syntax/OptionalSyntax;
       4: areturn

  public void scalaz$Optional$_setter_$optionalSyntax_$eq(scalaz.syntax.OptionalSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1680               // Field optionalSyntax:Lscalaz/syntax/OptionalSyntax;
       5: return

  public scalaz.syntax.AltSyntax<?> altSyntax();
    Code:
       0: aload_0
       1: getfield      #1687               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       4: areturn

  public void scalaz$Alt$_setter_$altSyntax_$eq(scalaz.syntax.AltSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1687               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       5: return

  public scalaz.syntax.InvariantAltSyntax<?> invariantAltSyntax();
    Code:
       0: aload_0
       1: getfield      #1694               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       4: areturn

  public void scalaz$InvariantAlt$_setter_$invariantAltSyntax_$eq(scalaz.syntax.InvariantAltSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1694               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       5: return

  public scalaz.syntax.PlusSyntax<?> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #1701               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1701               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.syntax.CozipSyntax<?> cozipSyntax();
    Code:
       0: aload_0
       1: getfield      #1708               // Field cozipSyntax:Lscalaz/syntax/CozipSyntax;
       4: areturn

  public void scalaz$Cozip$_setter_$cozipSyntax_$eq(scalaz.syntax.CozipSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1708               // Field cozipSyntax:Lscalaz/syntax/CozipSyntax;
       5: return

  public scalaz.syntax.BindRecSyntax<?> bindRecSyntax();
    Code:
       0: aload_0
       1: getfield      #1715               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       4: areturn

  public void scalaz$BindRec$_setter_$bindRecSyntax_$eq(scalaz.syntax.BindRecSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1715               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       5: return

  public scalaz.syntax.MonadSyntax<?> monadSyntax();
    Code:
       0: aload_0
       1: getfield      #1722               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       4: areturn

  public void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1722               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       5: return

  public scalaz.syntax.BindSyntax<?> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #1729               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1729               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<?> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1736               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1736               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<?> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1743               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1743               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<?> applySyntax();
    Code:
       0: aload_0
       1: getfield      #1750               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1750               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.TraverseSyntax<?> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #1757               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1757               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<?> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #1764               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1764               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<?> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #1771               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1771               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #1778               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1778               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A, B> scalaz.$bslash$div<L, B> map(scalaz.$bslash$div<L, A>, scala.Function1<A, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #1785               // class scalaz/$bslash$div$minus
      10: ifeq          44
      13: aload_1
      14: checkcast     #1785               // class scalaz/$bslash$div$minus
      17: invokevirtual #1788               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      20: astore_3
      21: getstatic     #1794               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
      24: pop
      25: aload_2
      26: aload_3
      27: invokeinterface #1798,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      32: astore        4
      34: new           #1785               // class scalaz/$bslash$div$minus
      37: dup
      38: aload         4
      40: invokespecial #1802               // Method scalaz/$bslash$div$minus."<init>":(Ljava/lang/Object;)V
      43: areturn
      44: aload_1
      45: instanceof    #1804               // class scalaz/$minus$bslash$div
      48: ifeq          56
      51: aload_1
      52: checkcast     #1804               // class scalaz/$minus$bslash$div
      55: areturn
      56: new           #1806               // class scala/MatchError
      59: dup
      60: aload_1
      61: invokespecial #1807               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      64: athrow

  public <A, B> scalaz.$bslash$div<L, B> ap(scala.Function0<scalaz.$bslash$div<L, A>>, scala.Function0<scalaz.$bslash$div<L, scala.Function1<A, B>>>);
    Code:
       0: aload_1
       1: invokeinterface #1816,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #1818               // class scalaz/$bslash$div
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: astore_3
      16: aload_2
      17: invokeinterface #1816,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      22: checkcast     #1818               // class scalaz/$bslash$div
      25: dup
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: astore        4
      33: aload         4
      35: instanceof    #1804               // class scalaz/$minus$bslash$div
      38: ifeq          47
      41: aload         4
      43: checkcast     #1804               // class scalaz/$minus$bslash$div
      46: areturn
      47: aload         4
      49: instanceof    #1785               // class scalaz/$bslash$div$minus
      52: ifeq          141
      55: aload         4
      57: checkcast     #1785               // class scalaz/$bslash$div$minus
      60: invokevirtual #1788               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      63: checkcast     #1796               // class scala/Function1
      66: astore        5
      68: aload_3
      69: instanceof    #1785               // class scalaz/$bslash$div$minus
      72: ifeq          114
      75: aload_3
      76: checkcast     #1785               // class scalaz/$bslash$div$minus
      79: invokevirtual #1788               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      82: astore        6
      84: getstatic     #1794               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
      87: pop
      88: aload         5
      90: aload         6
      92: invokeinterface #1798,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      97: astore        7
      99: new           #1785               // class scalaz/$bslash$div$minus
     102: dup
     103: aload         7
     105: invokespecial #1802               // Method scalaz/$bslash$div$minus."<init>":(Ljava/lang/Object;)V
     108: aconst_null
     109: astore        7
     111: goto          137
     114: aload_3
     115: instanceof    #1804               // class scalaz/$minus$bslash$div
     118: ifeq          128
     121: aload_3
     122: checkcast     #1804               // class scalaz/$minus$bslash$div
     125: goto          137
     128: new           #1806               // class scala/MatchError
     131: dup
     132: aload_3
     133: invokespecial #1807               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     136: athrow
     137: checkcast     #1818               // class scalaz/$bslash$div
     140: areturn
     141: new           #1806               // class scala/MatchError
     144: dup
     145: aload         4
     147: invokespecial #1807               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     150: athrow

  public <A, B, C> scalaz.$bslash$div<L, C> apply2(scala.Function0<scalaz.$bslash$div<L, A>>, scala.Function0<scalaz.$bslash$div<L, B>>, scala.Function2<A, B, C>);
    Code:
       0: aload_1
       1: invokeinterface #1816,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #1818               // class scalaz/$bslash$div
       9: astore        4
      11: aload         4
      13: instanceof    #1785               // class scalaz/$bslash$div$minus
      16: ifeq          87
      19: aload         4
      21: checkcast     #1785               // class scalaz/$bslash$div$minus
      24: invokevirtual #1788               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      27: astore        5
      29: aload_2
      30: invokeinterface #1816,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      35: checkcast     #1818               // class scalaz/$bslash$div
      38: astore        6
      40: aload         6
      42: instanceof    #1785               // class scalaz/$bslash$div$minus
      45: ifeq          84
      48: aload         6
      50: checkcast     #1785               // class scalaz/$bslash$div$minus
      53: invokevirtual #1788               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      56: astore        7
      58: getstatic     #1794               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
      61: pop
      62: aload_3
      63: aload         5
      65: aload         7
      67: invokeinterface #1829,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: astore        8
      74: new           #1785               // class scalaz/$bslash$div$minus
      77: dup
      78: aload         8
      80: invokespecial #1802               // Method scalaz/$bslash$div$minus."<init>":(Ljava/lang/Object;)V
      83: areturn
      84: aload         6
      86: areturn
      87: aload         4
      89: areturn

  public <A, B> scalaz.$bslash$div<L, B> tailrecM(A, scala.Function1<A, scalaz.$bslash$div<L, scalaz.$bslash$div<A, B>>>);
    Code:
       0: iconst_0
       1: istore_3
       2: aconst_null
       3: astore        4
       5: aload_2
       6: aload_1
       7: invokeinterface #1798,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #1818               // class scalaz/$bslash$div
      15: astore        5
      17: aload         5
      19: instanceof    #1804               // class scalaz/$minus$bslash$div
      22: ifeq          42
      25: aload         5
      27: checkcast     #1804               // class scalaz/$minus$bslash$div
      30: astore        6
      32: aload         6
      34: ifnonnull     39
      37: aconst_null
      38: athrow
      39: aload         6
      41: areturn
      42: aload         5
      44: instanceof    #1785               // class scalaz/$bslash$div$minus
      47: ifeq          91
      50: iconst_1
      51: istore_3
      52: aload         5
      54: checkcast     #1785               // class scalaz/$bslash$div$minus
      57: astore        4
      59: aload         4
      61: invokevirtual #1788               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      64: checkcast     #1818               // class scalaz/$bslash$div
      67: astore        7
      69: aload         7
      71: instanceof    #1804               // class scalaz/$minus$bslash$div
      74: ifeq          91
      77: aload         7
      79: checkcast     #1804               // class scalaz/$minus$bslash$div
      82: invokevirtual #1835               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      85: aload_2
      86: astore_2
      87: astore_1
      88: goto          0
      91: iload_3
      92: ifeq          130
      95: aload         4
      97: invokevirtual #1788               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
     100: checkcast     #1818               // class scalaz/$bslash$div
     103: astore        8
     105: aload         8
     107: instanceof    #1785               // class scalaz/$bslash$div$minus
     110: ifeq          130
     113: aload         8
     115: checkcast     #1785               // class scalaz/$bslash$div$minus
     118: astore        9
     120: aload         9
     122: ifnonnull     127
     125: aconst_null
     126: athrow
     127: aload         9
     129: areturn
     130: new           #1806               // class scala/MatchError
     133: dup
     134: aload         5
     136: invokespecial #1807               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     139: athrow

  public <A, B> scalaz.$bslash$div<L, B> bind(scalaz.$bslash$div<L, A>, scala.Function1<A, scalaz.$bslash$div<L, B>>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #1804               // class scalaz/$minus$bslash$div
      10: ifeq          18
      13: aload_1
      14: checkcast     #1804               // class scalaz/$minus$bslash$div
      17: areturn
      18: aload_1
      19: instanceof    #1785               // class scalaz/$bslash$div$minus
      22: ifeq          44
      25: aload_1
      26: checkcast     #1785               // class scalaz/$bslash$div$minus
      29: invokevirtual #1788               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      32: astore_3
      33: aload_2
      34: aload_3
      35: invokeinterface #1798,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #1818               // class scalaz/$bslash$div
      43: areturn
      44: new           #1806               // class scala/MatchError
      47: dup
      48: aload_1
      49: invokespecial #1807               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      52: athrow

  public <A, B> scalaz.$bslash$div<L, B> emap(scalaz.$bslash$div<L, A>, scala.Function1<A, scalaz.$bslash$div<L, B>>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #1804               // class scalaz/$minus$bslash$div
      10: ifeq          18
      13: aload_1
      14: checkcast     #1804               // class scalaz/$minus$bslash$div
      17: areturn
      18: aload_1
      19: instanceof    #1785               // class scalaz/$bslash$div$minus
      22: ifeq          44
      25: aload_1
      26: checkcast     #1785               // class scalaz/$bslash$div$minus
      29: invokevirtual #1788               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      32: astore_3
      33: aload_2
      34: aload_3
      35: invokeinterface #1798,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #1818               // class scalaz/$bslash$div
      43: areturn
      44: new           #1806               // class scala/MatchError
      47: dup
      48: aload_1
      49: invokespecial #1807               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      52: athrow

  public <A> scalaz.$bslash$div<L, A> point(scala.Function0<A>);
    Code:
       0: getstatic     #1794               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
       3: pop
       4: aload_1
       5: invokeinterface #1816,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: astore_2
      11: new           #1785               // class scalaz/$bslash$div$minus
      14: dup
      15: aload_2
      16: invokespecial #1802               // Method scalaz/$bslash$div$minus."<init>":(Ljava/lang/Object;)V
      19: areturn

  public <G, A, B> G traverseImpl(scalaz.$bslash$div<L, A>, scala.Function1<A, G>, scalaz.Applicative<G>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #1804               // class scalaz/$minus$bslash$div
      10: ifeq          37
      13: aload_1
      14: checkcast     #1804               // class scalaz/$minus$bslash$div
      17: astore        4
      19: getstatic     #1852               // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      22: pop
      23: aload_3
      24: aload         4
      26: invokedynamic #1872,  0           // InvokeDynamic #0:apply:(Lscalaz/$minus$bslash$div;)Lscala/Function0;
      31: invokeinterface #1874,  2         // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      36: areturn
      37: aload_1
      38: instanceof    #1785               // class scalaz/$bslash$div$minus
      41: ifeq          78
      44: aload_1
      45: checkcast     #1785               // class scalaz/$bslash$div$minus
      48: invokevirtual #1788               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      51: astore        5
      53: getstatic     #1879               // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
      56: pop
      57: aload_3
      58: aload_2
      59: aload         5
      61: invokeinterface #1798,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      66: getstatic     #1884               // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
      69: invokevirtual #1888               // Method scalaz/$bslash$div$.right:()Lscala/Function1;
      72: invokeinterface #1890,  3         // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      77: areturn
      78: new           #1806               // class scala/MatchError
      81: dup
      82: aload_1
      83: invokespecial #1807               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      86: athrow

  public <A, B> B foldRight(scalaz.$bslash$div<L, A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #1804               // class scalaz/$minus$bslash$div
      10: ifeq          20
      13: aload_2
      14: invokeinterface #1816,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      19: areturn
      20: aload_1
      21: instanceof    #1785               // class scalaz/$bslash$div$minus
      24: ifeq          46
      27: aload_1
      28: checkcast     #1785               // class scalaz/$bslash$div$minus
      31: invokevirtual #1788               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      34: astore        4
      36: aload_3
      37: aload         4
      39: aload_2
      40: invokeinterface #1829,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: areturn
      46: new           #1806               // class scala/MatchError
      49: dup
      50: aload_1
      51: invokespecial #1807               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      54: athrow

  public <A, B> scalaz.$bslash$div<scalaz.$bslash$div<L, A>, scalaz.$bslash$div<L, B>> cozip(scalaz.$bslash$div<L, scalaz.$bslash$div<A, B>>);
    Code:
       0: aload_1
       1: instanceof    #1804               // class scalaz/$minus$bslash$div
       4: ifeq          31
       7: aload_1
       8: checkcast     #1804               // class scalaz/$minus$bslash$div
      11: astore_2
      12: getstatic     #1903               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      15: pop
      16: aload_2
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: new           #1804               // class scalaz/$minus$bslash$div
      25: dup
      26: aload_2
      27: invokespecial #1904               // Method scalaz/$minus$bslash$div."<init>":(Ljava/lang/Object;)V
      30: areturn
      31: aload_1
      32: instanceof    #1785               // class scalaz/$bslash$div$minus
      35: ifeq          137
      38: aload_1
      39: checkcast     #1785               // class scalaz/$bslash$div$minus
      42: invokevirtual #1788               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      45: checkcast     #1818               // class scalaz/$bslash$div
      48: astore_3
      49: aload_3
      50: instanceof    #1804               // class scalaz/$minus$bslash$div
      53: ifeq          94
      56: aload_3
      57: checkcast     #1804               // class scalaz/$minus$bslash$div
      60: invokevirtual #1835               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      63: astore        4
      65: getstatic     #1903               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      68: pop
      69: getstatic     #1794               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
      72: pop
      73: new           #1785               // class scalaz/$bslash$div$minus
      76: dup
      77: aload         4
      79: invokespecial #1802               // Method scalaz/$bslash$div$minus."<init>":(Ljava/lang/Object;)V
      82: astore        6
      84: new           #1804               // class scalaz/$minus$bslash$div
      87: dup
      88: aload         6
      90: invokespecial #1904               // Method scalaz/$minus$bslash$div."<init>":(Ljava/lang/Object;)V
      93: areturn
      94: aload_3
      95: instanceof    #1785               // class scalaz/$bslash$div$minus
      98: ifeq          128
     101: aload_3
     102: checkcast     #1785               // class scalaz/$bslash$div$minus
     105: astore        5
     107: getstatic     #1794               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
     110: pop
     111: aload         5
     113: ifnonnull     118
     116: aconst_null
     117: athrow
     118: new           #1785               // class scalaz/$bslash$div$minus
     121: dup
     122: aload         5
     124: invokespecial #1802               // Method scalaz/$bslash$div$minus."<init>":(Ljava/lang/Object;)V
     127: areturn
     128: new           #1806               // class scala/MatchError
     131: dup
     132: aload_3
     133: invokespecial #1807               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     136: athrow
     137: new           #1806               // class scala/MatchError
     140: dup
     141: aload_1
     142: invokespecial #1807               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     145: athrow

  public <A> scalaz.$bslash$div<L, A> plus(scalaz.$bslash$div<L, A>, scala.Function0<scalaz.$bslash$div<L, A>>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #1804               // class scalaz/$minus$bslash$div
      10: ifeq          23
      13: aload_2
      14: invokeinterface #1816,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      19: checkcast     #1818               // class scalaz/$bslash$div
      22: areturn
      23: aload_1
      24: instanceof    #1785               // class scalaz/$bslash$div$minus
      27: ifeq          35
      30: aload_1
      31: checkcast     #1785               // class scalaz/$bslash$div$minus
      34: areturn
      35: new           #1806               // class scala/MatchError
      38: dup
      39: aload_1
      40: invokespecial #1807               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      43: athrow

  public <A> scalaz.$bslash$div<L, A> alt(scala.Function0<scalaz.$bslash$div<L, A>>, scala.Function0<scalaz.$bslash$div<L, A>>);
    Code:
       0: aload_1
       1: invokeinterface #1816,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #1818               // class scalaz/$bslash$div
       9: astore_3
      10: aload_3
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: aload_3
      17: instanceof    #1804               // class scalaz/$minus$bslash$div
      20: ifeq          33
      23: aload_2
      24: invokeinterface #1816,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      29: checkcast     #1818               // class scalaz/$bslash$div
      32: areturn
      33: aload_3
      34: instanceof    #1785               // class scalaz/$bslash$div$minus
      37: ifeq          45
      40: aload_3
      41: checkcast     #1785               // class scalaz/$bslash$div$minus
      44: areturn
      45: new           #1806               // class scala/MatchError
      48: dup
      49: aload_3
      50: invokespecial #1807               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      53: athrow

  public <B, A> scalaz.$bslash$div<scalaz.$bslash$div<L, B>, A> pextract(scalaz.$bslash$div<L, A>);
    Code:
       0: aload_1
       1: instanceof    #1804               // class scalaz/$minus$bslash$div
       4: ifeq          31
       7: aload_1
       8: checkcast     #1804               // class scalaz/$minus$bslash$div
      11: astore_2
      12: getstatic     #1903               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      15: pop
      16: aload_2
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: new           #1804               // class scalaz/$minus$bslash$div
      25: dup
      26: aload_2
      27: invokespecial #1904               // Method scalaz/$minus$bslash$div."<init>":(Ljava/lang/Object;)V
      30: areturn
      31: aload_1
      32: instanceof    #1785               // class scalaz/$bslash$div$minus
      35: ifeq          51
      38: aload_1
      39: checkcast     #1785               // class scalaz/$bslash$div$minus
      42: astore_3
      43: aload_3
      44: ifnonnull     49
      47: aconst_null
      48: athrow
      49: aload_3
      50: areturn
      51: new           #1806               // class scala/MatchError
      54: dup
      55: aload_1
      56: invokespecial #1807               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      59: athrow

  public <A> scalaz.$bslash$div<L, A> raiseError(L);
    Code:
       0: getstatic     #1903               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
       3: pop
       4: new           #1804               // class scalaz/$minus$bslash$div
       7: dup
       8: aload_1
       9: invokespecial #1904               // Method scalaz/$minus$bslash$div."<init>":(Ljava/lang/Object;)V
      12: areturn

  public <A> scalaz.$bslash$div<L, A> handleError(scalaz.$bslash$div<L, A>, scala.Function1<L, scalaz.$bslash$div<L, A>>);
    Code:
       0: aload_1
       1: instanceof    #1804               // class scalaz/$minus$bslash$div
       4: ifeq          26
       7: aload_1
       8: checkcast     #1804               // class scalaz/$minus$bslash$div
      11: invokevirtual #1835               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      14: astore_3
      15: aload_2
      16: aload_3
      17: invokeinterface #1798,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #1818               // class scalaz/$bslash$div
      25: areturn
      26: aload_1
      27: areturn

  public <S, A, B> scalaz.Maybe<scalaz.$bslash$div<L, B>> unfoldrOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.$bslash$div<L, A>, S>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #1798,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #80                 // class scalaz/Maybe
      10: aload_0
      11: aload_3
      12: aload_2
      13: invokedynamic #1932,  0           // InvokeDynamic #1:apply:(Lscalaz/DisjunctionInstances1$$anon$6;Lscalaz/Reducer;Lscala/Function1;)Lscala/Function1;
      18: astore        5
      20: dup
      21: ifnonnull     26
      24: aconst_null
      25: athrow
      26: astore        4
      28: aload         5
      30: invokedynamic #1939,  0           // InvokeDynamic #2:apply:()Lscala/Function1;
      35: invokeinterface #1942,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      40: astore        6
      42: aload         4
      44: instanceof    #86                 // class scalaz/Maybe$Just
      47: ifeq          72
      50: aload         4
      52: checkcast     #86                 // class scalaz/Maybe$Just
      55: invokevirtual #1945               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      58: astore        7
      60: aload         6
      62: aload         7
      64: invokeinterface #1798,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      69: goto          103
      72: aload         4
      74: instanceof    #78                 // class scalaz/Maybe$Empty
      77: ifeq          93
      80: getstatic     #1950               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      83: pop
      84: getstatic     #1953               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      87: invokevirtual #1956               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      90: goto          103
      93: new           #1806               // class scala/MatchError
      96: dup
      97: aload         4
      99: invokespecial #1807               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     102: athrow
     103: checkcast     #80                 // class scalaz/Maybe
     106: areturn

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #1966               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public java.lang.Object handleError(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1818               // class scalaz/$bslash$div
       5: aload_2
       6: invokevirtual #1968               // Method handleError:(Lscalaz/$bslash$div;Lscala/Function1;)Lscalaz/$bslash$div;
       9: areturn

  public java.lang.Object raiseError(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1970               // Method raiseError:(Ljava/lang/Object;)Lscalaz/$bslash$div;
       5: areturn

  public scalaz.$bslash$div pextract(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1818               // class scalaz/$bslash$div
       5: invokevirtual #1972               // Method pextract:(Lscalaz/$bslash$div;)Lscalaz/$bslash$div;
       8: areturn

  public java.lang.Object alt(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1974               // Method alt:(Lscala/Function0;Lscala/Function0;)Lscalaz/$bslash$div;
       6: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1818               // class scalaz/$bslash$div
       5: aload_2
       6: invokevirtual #1976               // Method plus:(Lscalaz/$bslash$div;Lscala/Function0;)Lscalaz/$bslash$div;
       9: areturn

  public scalaz.$bslash$div cozip(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1818               // class scalaz/$bslash$div
       5: invokevirtual #1978               // Method cozip:(Lscalaz/$bslash$div;)Lscalaz/$bslash$div;
       8: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1818               // class scalaz/$bslash$div
       5: aload_2
       6: aload_3
       7: invokevirtual #1981               // Method foldRight:(Lscalaz/$bslash$div;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1818               // class scalaz/$bslash$div
       5: aload_2
       6: aload_3
       7: invokevirtual #1983               // Method traverseImpl:(Lscalaz/$bslash$div;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1985               // Method point:(Lscala/Function0;)Lscalaz/$bslash$div;
       5: areturn

  public java.lang.Object emap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1818               // class scalaz/$bslash$div
       5: aload_2
       6: invokevirtual #1987               // Method emap:(Lscalaz/$bslash$div;Lscala/Function1;)Lscalaz/$bslash$div;
       9: areturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1818               // class scalaz/$bslash$div
       5: aload_2
       6: invokevirtual #1989               // Method bind:(Lscalaz/$bslash$div;Lscala/Function1;)Lscalaz/$bslash$div;
       9: areturn

  public java.lang.Object tailrecM(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1991               // Method tailrecM:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/$bslash$div;
       6: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1994               // Method apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Lscalaz/$bslash$div;
       7: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1996               // Method ap:(Lscala/Function0;Lscala/Function0;)Lscalaz/$bslash$div;
       6: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1818               // class scalaz/$bslash$div
       5: aload_2
       6: invokevirtual #1998               // Method map:(Lscalaz/$bslash$div;Lscala/Function1;)Lscalaz/$bslash$div;
       9: areturn

  private final scalaz.$bslash$div go$1(java.lang.Object, java.lang.Object, scala.Function1, scalaz.Reducer);
    Code:
       0: aload_3
       1: aload_2
       2: invokeinterface #1798,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #80                 // class scalaz/Maybe
      10: astore        5
      12: aload         5
      14: instanceof    #86                 // class scalaz/Maybe$Just
      17: ifeq          125
      20: aload         5
      22: checkcast     #86                 // class scalaz/Maybe$Just
      25: invokevirtual #1945               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      28: checkcast     #2006               // class scala/Tuple2
      31: astore        6
      33: aload         6
      35: ifnull        125
      38: aload         6
      40: invokevirtual #2009               // Method scala/Tuple2._1:()Ljava/lang/Object;
      43: checkcast     #1818               // class scalaz/$bslash$div
      46: astore        7
      48: aload         6
      50: invokevirtual #2012               // Method scala/Tuple2._2:()Ljava/lang/Object;
      53: astore        8
      55: aload         7
      57: instanceof    #1785               // class scalaz/$bslash$div$minus
      60: ifeq          90
      63: aload         7
      65: checkcast     #1785               // class scalaz/$bslash$div$minus
      68: invokevirtual #1788               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      71: astore        9
      73: aload         4
      75: aload_1
      76: aload         9
      78: invokeinterface #2015,  3         // InterfaceMethod scalaz/Reducer.snoc:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: aload         8
      85: astore_2
      86: astore_1
      87: goto          0
      90: aload         7
      92: instanceof    #1804               // class scalaz/$minus$bslash$div
      95: ifeq          115
      98: aload         7
     100: checkcast     #1804               // class scalaz/$minus$bslash$div
     103: astore        10
     105: aload         10
     107: ifnonnull     112
     110: aconst_null
     111: athrow
     112: aload         10
     114: areturn
     115: new           #1806               // class scala/MatchError
     118: dup
     119: aload         7
     121: invokespecial #1807               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     124: athrow
     125: getstatic     #1794               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
     128: pop
     129: new           #1785               // class scalaz/$bslash$div$minus
     132: dup
     133: aload_1
     134: invokespecial #1802               // Method scalaz/$bslash$div$minus."<init>":(Ljava/lang/Object;)V
     137: areturn

  public static final scalaz.$bslash$div $anonfun$unfoldrOpt$1(scalaz.DisjunctionInstances1$$anon$6, scalaz.Reducer, scala.Function1, scala.Tuple2);
    Code:
       0: aload_3
       1: ifnull        193
       4: aload_3
       5: invokevirtual #2009               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: checkcast     #1818               // class scalaz/$bslash$div
      11: astore        4
      13: aload_3
      14: invokevirtual #2012               // Method scala/Tuple2._2:()Ljava/lang/Object;
      17: astore        5
      19: aload         4
      21: instanceof    #1785               // class scalaz/$bslash$div$minus
      24: ifeq          193
      27: aload         4
      29: checkcast     #1785               // class scalaz/$bslash$div$minus
      32: invokevirtual #1788               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      35: astore        6
      37: aload_1
      38: aload         6
      40: invokeinterface #2021,  2         // InterfaceMethod scalaz/Reducer.unit:(Ljava/lang/Object;)Ljava/lang/Object;
      45: aload         5
      47: astore        10
      49: astore        9
      51: aload_2
      52: aload         10
      54: invokeinterface #1798,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #80                 // class scalaz/Maybe
      62: astore        11
      64: aload         11
      66: instanceof    #86                 // class scalaz/Maybe$Just
      69: ifeq          179
      72: aload         11
      74: checkcast     #86                 // class scalaz/Maybe$Just
      77: invokevirtual #1945               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      80: checkcast     #2006               // class scala/Tuple2
      83: astore        12
      85: aload         12
      87: ifnull        179
      90: aload         12
      92: invokevirtual #2009               // Method scala/Tuple2._1:()Ljava/lang/Object;
      95: checkcast     #1818               // class scalaz/$bslash$div
      98: astore        13
     100: aload         12
     102: invokevirtual #2012               // Method scala/Tuple2._2:()Ljava/lang/Object;
     105: astore        14
     107: aload         13
     109: instanceof    #1785               // class scalaz/$bslash$div$minus
     112: ifeq          144
     115: aload         13
     117: checkcast     #1785               // class scalaz/$bslash$div$minus
     120: invokevirtual #1788               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
     123: astore        15
     125: aload_1
     126: aload         9
     128: aload         15
     130: invokeinterface #2015,  3         // InterfaceMethod scalaz/Reducer.snoc:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     135: aload         14
     137: astore        10
     139: astore        9
     141: goto          51
     144: aload         13
     146: instanceof    #1804               // class scalaz/$minus$bslash$div
     149: ifeq          169
     152: aload         13
     154: checkcast     #1804               // class scalaz/$minus$bslash$div
     157: astore        16
     159: aload         16
     161: ifnonnull     166
     164: aconst_null
     165: athrow
     166: aload         16
     168: areturn
     169: new           #1806               // class scala/MatchError
     172: dup
     173: aload         13
     175: invokespecial #1807               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     178: athrow
     179: getstatic     #1794               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
     182: pop
     183: new           #1785               // class scalaz/$bslash$div$minus
     186: dup
     187: aload         9
     189: invokespecial #1802               // Method scalaz/$bslash$div$minus."<init>":(Ljava/lang/Object;)V
     192: areturn
     193: aload_3
     194: ifnull        231
     197: aload_3
     198: invokevirtual #2009               // Method scala/Tuple2._1:()Ljava/lang/Object;
     201: checkcast     #1818               // class scalaz/$bslash$div
     204: astore        7
     206: aload         7
     208: instanceof    #1804               // class scalaz/$minus$bslash$div
     211: ifeq          231
     214: aload         7
     216: checkcast     #1804               // class scalaz/$minus$bslash$div
     219: astore        8
     221: aload         8
     223: ifnonnull     228
     226: aconst_null
     227: athrow
     228: aload         8
     230: areturn
     231: new           #1806               // class scala/MatchError
     234: dup
     235: aload_3
     236: invokespecial #1807               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     239: athrow

  public scalaz.DisjunctionInstances1$$anon$6(scalaz.DisjunctionInstances1);
    Code:
       0: aload_0
       1: invokespecial #2032               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2036               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #2039               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #2042               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      16: aload_0
      17: invokestatic  #2045               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      20: aload_0
      21: invokestatic  #2048               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      24: aload_0
      25: invokestatic  #2051               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      28: aload_0
      29: invokestatic  #2054               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      32: aload_0
      33: invokestatic  #2057               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      36: aload_0
      37: invokestatic  #2060               // InterfaceMethod scalaz/Monad.$init$:(Lscalaz/Monad;)V
      40: aload_0
      41: invokestatic  #2063               // InterfaceMethod scalaz/BindRec.$init$:(Lscalaz/BindRec;)V
      44: aload_0
      45: invokestatic  #2066               // InterfaceMethod scalaz/Cozip.$init$:(Lscalaz/Cozip;)V
      48: aload_0
      49: invokestatic  #2069               // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      52: aload_0
      53: invokestatic  #2072               // InterfaceMethod scalaz/InvariantAlt.$init$:(Lscalaz/InvariantAlt;)V
      56: aload_0
      57: invokestatic  #2075               // InterfaceMethod scalaz/Alt.$init$:(Lscalaz/Alt;)V
      60: aload_0
      61: invokestatic  #2078               // InterfaceMethod scalaz/Optional.$init$:(Lscalaz/Optional;)V
      64: aload_0
      65: invokestatic  #2081               // InterfaceMethod scalaz/ApplicativeError.$init$:(Lscalaz/ApplicativeError;)V
      68: aload_0
      69: invokestatic  #2084               // InterfaceMethod scalaz/MonadError.$init$:(Lscalaz/MonadError;)V
      72: invokestatic  #2089               // Method scala/runtime/Statics.releaseFence:()V
      75: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2102,  0           // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
