Compiled from "Divide.scala"
public interface scalaz.Divide$DivideLaw extends scalaz.Contravariant<F>.ContravariantLaw {
  public static scala.Function1 delta$(scalaz.Divide$DivideLaw);
    Code:
       0: aload_0
       1: invokespecial #26                 // InterfaceMethod delta:()Lscala/Function1;
       4: areturn

  public default <A> scala.Function1<A, scala.Tuple2<A, A>> delta();
    Code:
       0: invokedynamic #48,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
       5: areturn

  public static boolean composition$(scalaz.Divide$DivideLaw, java.lang.Object, java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #59                 // InterfaceMethod composition:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       9: ireturn

  public default <A> boolean composition(F, F, F, scalaz.Equal<F>);
    Code:
       0: aload_0
       1: invokeinterface #66,  1           // InterfaceMethod scalaz$Divide$DivideLaw$$$outer:()Lscalaz/Divide;
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokedynamic #76,  0             // InvokeDynamic #1:apply:(Lscalaz/Divide$DivideLaw;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Function0;
      14: aload_3
      15: invokedynamic #83,  0             // InvokeDynamic #2:apply:(Ljava/lang/Object;)Lscala/Function0;
      20: aload_0
      21: invokeinterface #26,  1           // InterfaceMethod delta:()Lscala/Function1;
      26: astore        10
      28: astore        9
      30: astore        8
      32: dup
      33: ifnonnull     38
      36: aconst_null
      37: athrow
      38: astore        7
      40: aload         7
      42: aload         8
      44: aload         9
      46: aload         10
      48: invokeinterface #87,  4           // InterfaceMethod scalaz/Divide.divide2:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      53: aconst_null
      54: astore        7
      56: aconst_null
      57: astore        8
      59: aconst_null
      60: astore        9
      62: aconst_null
      63: astore        10
      65: astore        5
      67: aload_0
      68: invokeinterface #66,  1           // InterfaceMethod scalaz$Divide$DivideLaw$$$outer:()Lscalaz/Divide;
      73: aload_1
      74: invokedynamic #92,  0             // InvokeDynamic #3:apply:(Ljava/lang/Object;)Lscala/Function0;
      79: aload_0
      80: aload_2
      81: aload_3
      82: invokedynamic #97,  0             // InvokeDynamic #4:apply:(Lscalaz/Divide$DivideLaw;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Function0;
      87: aload_0
      88: invokeinterface #26,  1           // InterfaceMethod delta:()Lscala/Function1;
      93: astore        14
      95: astore        13
      97: astore        12
      99: dup
     100: ifnonnull     105
     103: aconst_null
     104: athrow
     105: astore        11
     107: aload         11
     109: aload         12
     111: aload         13
     113: aload         14
     115: invokeinterface #87,  4           // InterfaceMethod scalaz/Divide.divide2:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
     120: aconst_null
     121: astore        11
     123: aconst_null
     124: astore        12
     126: aconst_null
     127: astore        13
     129: aconst_null
     130: astore        14
     132: astore        6
     134: aload         4
     136: aload         5
     138: aload         6
     140: invokeinterface #103,  3          // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
     145: ireturn

  public abstract scalaz.Divide scalaz$Divide$DivideLaw$$$outer();

  public static scala.Tuple2 $anonfun$delta$1(java.lang.Object);
    Code:
       0: new           #119                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_0
       6: invokespecial #123                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  public static java.lang.Object $anonfun$composition$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$composition$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$composition$1(scalaz.Divide$DivideLaw, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #66,  1           // InterfaceMethod scalaz$Divide$DivideLaw$$$outer:()Lscalaz/Divide;
       6: aload_1
       7: invokedynamic #131,  0            // InvokeDynamic #5:apply:(Ljava/lang/Object;)Lscala/Function0;
      12: aload_2
      13: invokedynamic #135,  0            // InvokeDynamic #6:apply:(Ljava/lang/Object;)Lscala/Function0;
      18: aload_0
      19: invokeinterface #26,  1           // InterfaceMethod delta:()Lscala/Function1;
      24: astore        5
      26: astore        4
      28: astore_3
      29: dup
      30: ifnonnull     35
      33: aconst_null
      34: athrow
      35: aload_3
      36: aload         4
      38: aload         5
      40: invokeinterface #87,  4           // InterfaceMethod scalaz/Divide.divide2:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      45: areturn

  public static java.lang.Object $anonfun$composition$4(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$composition$5(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$composition$7(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$composition$8(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$composition$6(scalaz.Divide$DivideLaw, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #66,  1           // InterfaceMethod scalaz$Divide$DivideLaw$$$outer:()Lscalaz/Divide;
       6: aload_1
       7: invokedynamic #142,  0            // InvokeDynamic #7:apply:(Ljava/lang/Object;)Lscala/Function0;
      12: aload_2
      13: invokedynamic #146,  0            // InvokeDynamic #8:apply:(Ljava/lang/Object;)Lscala/Function0;
      18: aload_0
      19: invokeinterface #26,  1           // InterfaceMethod delta:()Lscala/Function1;
      24: astore        5
      26: astore        4
      28: astore_3
      29: dup
      30: ifnonnull     35
      33: aconst_null
      34: athrow
      35: aload_3
      36: aload         4
      38: aload         5
      40: invokeinterface #87,  4           // InterfaceMethod scalaz/Divide.divide2:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      45: areturn

  public static void $init$(scalaz.Divide<F>.DivideLaw);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #161,  0            // InvokeDynamic #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
