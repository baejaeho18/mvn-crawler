Compiled from "NonEmptyList.scala"
public final class scalaz.NonEmptyListInstances$$anon$1 implements scalaz.Traverse1<scalaz.NonEmptyList>, scalaz.Monad<scalaz.NonEmptyList>, scalaz.Alt<scalaz.NonEmptyList>, scalaz.BindRec<scalaz.NonEmptyList>, scalaz.Plus<scalaz.NonEmptyList>, scalaz.Comonad<scalaz.NonEmptyList>, scalaz.Zip<scalaz.NonEmptyList>, scalaz.Unzip<scalaz.NonEmptyList>, scalaz.Align<scalaz.NonEmptyList> {
  private scalaz.syntax.AlignSyntax<scalaz.NonEmptyList> alignSyntax;

  private scalaz.syntax.UnzipSyntax<scalaz.NonEmptyList> unzipSyntax;

  private scalaz.syntax.ZipSyntax<scalaz.NonEmptyList> zipSyntax;

  private scalaz.syntax.ComonadSyntax<scalaz.NonEmptyList> comonadSyntax;

  private scalaz.syntax.CobindSyntax<scalaz.NonEmptyList> cobindSyntax;

  private scalaz.syntax.PlusSyntax<scalaz.NonEmptyList> plusSyntax;

  private scalaz.syntax.BindRecSyntax<scalaz.NonEmptyList> bindRecSyntax;

  private scalaz.syntax.AltSyntax<scalaz.NonEmptyList> altSyntax;

  private scalaz.syntax.InvariantAltSyntax<scalaz.NonEmptyList> invariantAltSyntax;

  private scalaz.syntax.MonadSyntax<scalaz.NonEmptyList> monadSyntax;

  private scalaz.syntax.BindSyntax<scalaz.NonEmptyList> bindSyntax;

  private scalaz.syntax.ApplicativeSyntax<scalaz.NonEmptyList> applicativeSyntax;

  private scalaz.syntax.InvariantApplicativeSyntax<scalaz.NonEmptyList> invariantApplicativeSyntax;

  private scalaz.syntax.ApplySyntax<scalaz.NonEmptyList> applySyntax;

  private scalaz.syntax.Traverse1Syntax<scalaz.NonEmptyList> traverse1Syntax;

  private scalaz.syntax.Foldable1Syntax<scalaz.NonEmptyList> foldable1Syntax;

  private scalaz.syntax.TraverseSyntax<scalaz.NonEmptyList> traverseSyntax;

  private scalaz.syntax.FoldableSyntax<scalaz.NonEmptyList> foldableSyntax;

  private scalaz.syntax.FunctorSyntax<scalaz.NonEmptyList> functorSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<scalaz.NonEmptyList> invariantFunctorSyntax;

  public <G> scalaz.Align<?> product(scalaz.Align<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #194                // InterfaceMethod scalaz/Align.product$:(Lscalaz/Align;Lscalaz/Align;)Lscalaz/Align;
       5: areturn

  public java.lang.Object align(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #205                // InterfaceMethod scalaz/Align.align$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public <A, B, C> scala.Function2<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>> padWith(scala.Function2<scala.Option<A>, scala.Option<B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #214                // InterfaceMethod scalaz/Align.padWith$:(Lscalaz/Align;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B> scala.Function2<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<scala.Tuple2<scala.Option<A>, scala.Option<B>>>> pad();
    Code:
       0: aload_0
       1: invokestatic  #222                // InterfaceMethod scalaz/Align.pad$:(Lscalaz/Align;)Lscala/Function2;
       4: areturn

  public java.lang.Object merge(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #231                // InterfaceMethod scalaz/Align.merge$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object alignSwap(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #236                // InterfaceMethod scalaz/Align.alignSwap$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignA(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #240                // InterfaceMethod scalaz/Align.alignA$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignB(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #244                // InterfaceMethod scalaz/Align.alignB$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThis(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #248                // InterfaceMethod scalaz/Align.alignThis$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThat(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #252                // InterfaceMethod scalaz/Align.alignThat$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignBoth(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #256                // InterfaceMethod scalaz/Align.alignBoth$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scalaz.Align<scalaz.NonEmptyList>.AlignLaw alignLaw();
    Code:
       0: aload_0
       1: invokestatic  #263                // InterfaceMethod scalaz/Align.alignLaw$:(Lscalaz/Align;)Lscalaz/Align$AlignLaw;
       4: areturn

  public java.lang.Object firsts(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #269                // InterfaceMethod scalaz/Unzip.firsts$:(Lscalaz/Unzip;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object seconds(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #273                // InterfaceMethod scalaz/Unzip.seconds$:(Lscalaz/Unzip;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Unzip<?> compose(scalaz.Functor<scalaz.NonEmptyList>, scalaz.Unzip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #281                // InterfaceMethod scalaz/Unzip.compose$:(Lscalaz/Unzip;Lscalaz/Functor;Lscalaz/Unzip;)Lscalaz/Unzip;
       6: areturn

  public <G> scalaz.Unzip<?> product(scalaz.Unzip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #288                // InterfaceMethod scalaz/Unzip.product$:(Lscalaz/Unzip;Lscalaz/Unzip;)Lscalaz/Unzip;
       5: areturn

  public scala.Tuple3 unzip3(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #295                // InterfaceMethod scalaz/Unzip.unzip3$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple3;
       5: areturn

  public scala.Tuple4 unzip4(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #301                // InterfaceMethod scalaz/Unzip.unzip4$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple4;
       5: areturn

  public scala.Tuple5 unzip5(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #307                // InterfaceMethod scalaz/Unzip.unzip5$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple5;
       5: areturn

  public scala.Tuple6 unzip6(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #313                // InterfaceMethod scalaz/Unzip.unzip6$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple6;
       5: areturn

  public scala.Tuple7 unzip7(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #319                // InterfaceMethod scalaz/Unzip.unzip7$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple7;
       5: areturn

  public <G> scalaz.Zip<?> compose(scalaz.Functor<scalaz.NonEmptyList>, scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #324                // InterfaceMethod scalaz/Zip.compose$:(Lscalaz/Zip;Lscalaz/Functor;Lscalaz/Zip;)Lscalaz/Zip;
       6: areturn

  public <G> scalaz.Zip<?> product(scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #330                // InterfaceMethod scalaz/Zip.product$:(Lscalaz/Zip;Lscalaz/Zip;)Lscalaz/Zip;
       5: areturn

  public java.lang.Object zipWith(scala.Function0, scala.Function0, scala.Function2, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #339                // InterfaceMethod scalaz/Zip.zipWith$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Functor;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apzip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #346                // InterfaceMethod scalaz/Zip.apzip$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apzipPL(scala.Function0, scala.Function0, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #353                // InterfaceMethod scalaz/Zip.apzipPL$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scalaz.Apply<scalaz.NonEmptyList> ap(scalaz.Functor<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #361                // InterfaceMethod scalaz/Zip.ap$:(Lscalaz/Zip;Lscalaz/Functor;)Lscalaz/Apply;
       5: areturn

  public scalaz.Zip<scalaz.NonEmptyList>.ZipLaw zipLaw();
    Code:
       0: aload_0
       1: invokestatic  #368                // InterfaceMethod scalaz/Zip.zipLaw$:(Lscalaz/Zip;)Lscalaz/Zip$ZipLaw;
       4: areturn

  public final java.lang.Object copure(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #374                // InterfaceMethod scalaz/Comonad.copure$:(Lscalaz/Comonad;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Comonad<scalaz.NonEmptyList>.ComonadLaws comonadLaw();
    Code:
       0: aload_0
       1: invokestatic  #381                // InterfaceMethod scalaz/Comonad.comonadLaw$:(Lscalaz/Comonad;)Lscalaz/Comonad$ComonadLaws;
       4: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #387                // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.Cobind<scalaz.NonEmptyList>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #395                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public <S$, A> scalaz.Maybe<scalaz.NonEmptyList<A>> unfoldlPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<S$, scalaz.NonEmptyList<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #403                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S$, A> scalaz.Maybe<scalaz.NonEmptyList<A>> unfoldrPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scalaz.NonEmptyList<A>, S$>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #408                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #413                // InterfaceMethod scalaz/Plus.compose$:(Lscalaz/Plus;)Lscalaz/Plus;
       4: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #417                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.NonEmptyList<A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #425                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<scalaz.NonEmptyList>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #432                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #437                // InterfaceMethod scalaz/BindRec.forever$:(Lscalaz/BindRec;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.BindRec<?> product(scalaz.BindRec<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #442                // InterfaceMethod scalaz/BindRec.product$:(Lscalaz/BindRec;Lscalaz/BindRec;)Lscalaz/BindRec;
       5: areturn

  public scalaz.BindRec<scalaz.NonEmptyList>.BindRecLaw bindRecLaw();
    Code:
       0: aload_0
       1: invokestatic  #450                // InterfaceMethod scalaz/BindRec.bindRecLaw$:(Lscalaz/BindRec;)Lscalaz/BindRec$BindRecLaw;
       4: areturn

  public java.lang.Object optional(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #455                // InterfaceMethod scalaz/Alt.optional$:(Lscalaz/Alt;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object altly1(scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #461                // InterfaceMethod scalaz/Alt.altly1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object altly2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #467                // InterfaceMethod scalaz/Alt.altly2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object altly3(scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #474                // InterfaceMethod scalaz/Alt.altly3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object altly4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #481                // InterfaceMethod scalaz/Alt.altly4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object either2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #486                // InterfaceMethod scalaz/Alt.either2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #492                // InterfaceMethod scalaz/Alt.altlying1$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #498                // InterfaceMethod scalaz/Alt.altlying2$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object altlying3(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #504                // InterfaceMethod scalaz/Alt.altlying3$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object altlying4(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #510                // InterfaceMethod scalaz/Alt.altlying4$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #517                // InterfaceMethod scalaz/Alt.xcoproduct1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xcoproduct2(scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #523                // InterfaceMethod scalaz/Alt.xcoproduct2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xcoproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #529                // InterfaceMethod scalaz/Alt.xcoproduct3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #535                // InterfaceMethod scalaz/Alt.xcoproduct4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public scalaz.Alt<scalaz.NonEmptyList>.AltLaw altLaw();
    Code:
       0: aload_0
       1: invokestatic  #542                // InterfaceMethod scalaz/Alt.altLaw$:(Lscalaz/Alt;)Lscalaz/Alt$AltLaw;
       4: areturn

  public final java.lang.Object xcoderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #550                // InterfaceMethod scalaz/InvariantAlt.xcoderiving1$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xcoderiving2(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #556                // InterfaceMethod scalaz/InvariantAlt.xcoderiving2$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xcoderiving3(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #562                // InterfaceMethod scalaz/InvariantAlt.xcoderiving3$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xcoderiving4(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #568                // InterfaceMethod scalaz/InvariantAlt.xcoderiving4$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #573                // InterfaceMethod scalaz/Monad.map$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whileM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #581                // InterfaceMethod scalaz/Monad.whileM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object whileM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #588                // InterfaceMethod scalaz/Monad.whileM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object untilM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #593                // InterfaceMethod scalaz/Monad.untilM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object untilM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #597                // InterfaceMethod scalaz/Monad.untilM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateWhile(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #601                // InterfaceMethod scalaz/Monad.iterateWhile$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateUntil(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #605                // InterfaceMethod scalaz/Monad.iterateUntil$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Monad<?> product(scalaz.Monad<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #610                // InterfaceMethod scalaz/Monad.product$:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public scalaz.Monad<scalaz.NonEmptyList>.MonadLaw monadLaw();
    Code:
       0: aload_0
       1: invokestatic  #618                // InterfaceMethod scalaz/Monad.monadLaw$:(Lscalaz/Monad;)Lscalaz/Monad$MonadLaw;
       4: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #621                // InterfaceMethod scalaz/Bind.ap$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #627                // InterfaceMethod scalaz/Bind.apply2$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #633                // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #642                // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #647                // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Bind<?> product(scalaz.Bind<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #652                // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<scalaz.NonEmptyList>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #660                // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #666                // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #672                // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #681                // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #688                // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #693                // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #698                // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #704                // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #710                // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #717                // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #725                // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #730                // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.$eq$eq$greater$greater, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #737                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #744                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #749                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #756                // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #761                // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G$> scalaz.Applicative<?> compose(scalaz.Applicative<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #765                // InterfaceMethod scalaz/Applicative.compose$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public <G$> scalaz.Applicative<?> product(scalaz.Applicative<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #768                // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scalaz.NonEmptyList> flip();
    Code:
       0: aload_0
       1: invokestatic  #773                // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #781                // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scalaz.NonEmptyList>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #788                // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #795                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #800                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #806                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #812                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #818                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #824                // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #831                // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public <S$, A, B> scalaz.Maybe<scalaz.NonEmptyList<B>> unfoldrOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scalaz.NonEmptyList<A>, S$>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #839                // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G$> scalaz.Apply<?> compose(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #845                // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G$> scalaz.Apply<?> product(scalaz.Apply<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #848                // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>> apF(scala.Function0<scalaz.NonEmptyList<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #855                // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #861                // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #868                // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #875                // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #882                // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #889                // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #896                // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #903                // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #909                // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #915                // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #921                // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #928                // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #935                // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #942                // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #950                // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #958                // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #966                // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #974                // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #980                // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #986                // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #992                // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #998                // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1003               // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1009               // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1015               // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1021               // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1027               // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1034               // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1041               // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R$> scala.Function5<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>, scalaz.NonEmptyList<R$>> lift5(scala.Function5<A, B, C, D, E, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1048               // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R$> scala.Function6<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>, scalaz.NonEmptyList<FF>, scalaz.NonEmptyList<R$>> lift6(scala.Function6<A, B, C, D, E, FF, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1055               // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G$, R$> scala.Function7<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>, scalaz.NonEmptyList<FF>, scalaz.NonEmptyList<G$>, scalaz.NonEmptyList<R$>> lift7(scala.Function7<A, B, C, D, E, FF, G$, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1062               // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, R$> scala.Function8<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>, scalaz.NonEmptyList<FF>, scalaz.NonEmptyList<G$>, scalaz.NonEmptyList<H>, scalaz.NonEmptyList<R$>> lift8(scala.Function8<A, B, C, D, E, FF, G$, H, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1069               // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, R$> scala.Function9<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>, scalaz.NonEmptyList<FF>, scalaz.NonEmptyList<G$>, scalaz.NonEmptyList<H>, scalaz.NonEmptyList<I>, scalaz.NonEmptyList<R$>> lift9(scala.Function9<A, B, C, D, E, FF, G$, H, I, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1076               // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, R$> scala.Function10<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>, scalaz.NonEmptyList<FF>, scalaz.NonEmptyList<G$>, scalaz.NonEmptyList<H>, scalaz.NonEmptyList<I>, scalaz.NonEmptyList<J>, scalaz.NonEmptyList<R$>> lift10(scala.Function10<A, B, C, D, E, FF, G$, H, I, J, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1083               // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, R$> scala.Function11<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>, scalaz.NonEmptyList<FF>, scalaz.NonEmptyList<G$>, scalaz.NonEmptyList<H>, scalaz.NonEmptyList<I>, scalaz.NonEmptyList<J>, scalaz.NonEmptyList<K>, scalaz.NonEmptyList<R$>> lift11(scala.Function11<A, B, C, D, E, FF, G$, H, I, J, K, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1090               // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G$, H, I, J, K, L, R$> scala.Function12<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>, scalaz.NonEmptyList<FF>, scalaz.NonEmptyList<G$>, scalaz.NonEmptyList<H>, scalaz.NonEmptyList<I>, scalaz.NonEmptyList<J>, scalaz.NonEmptyList<K>, scalaz.NonEmptyList<L>, scalaz.NonEmptyList<R$>> lift12(scala.Function12<A, B, C, D, E, FF, G$, H, I, J, K, L, R$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1097               // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1101               // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1105               // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #1110               // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1118               // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scalaz.NonEmptyList>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #1125               // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public <G> scalaz.Traverse1<?> product(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1130               // InterfaceMethod scalaz/Traverse1.product$:(Lscalaz/Traverse1;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1137               // InterfaceMethod scalaz/Traverse1.product0$:(Lscalaz/Traverse1;Lscalaz/Traverse;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse1<?> compose(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1139               // InterfaceMethod scalaz/Traverse1.compose$:(Lscalaz/Traverse1;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1146               // InterfaceMethod scalaz/Traverse1.traverseImpl$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object traverse1M(java.lang.Object, scala.Function1, scalaz.Apply, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1152               // InterfaceMethod scalaz/Traverse1.traverse1M$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object traverse1U(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1158               // InterfaceMethod scalaz/Traverse1.traverse1U$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1165               // InterfaceMethod scalaz/Traverse1.sequence1$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Apply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequence1M(java.lang.Object, scalaz.Apply, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1172               // InterfaceMethod scalaz/Traverse1.sequence1M$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Apply;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object sequence1U(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1178               // InterfaceMethod scalaz/Traverse1.sequence1U$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public scalaz.Traverse1<scalaz.NonEmptyList>.Traverse1Law traverse1Law();
    Code:
       0: aload_0
       1: invokestatic  #1185               // InterfaceMethod scalaz/Traverse1.traverse1Law$:(Lscalaz/Traverse1;)Lscalaz/Traverse1$Traverse1Law;
       4: areturn

  public <G> scalaz.Foldable1<?> product(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1190               // InterfaceMethod scalaz/Foldable1.product$:(Lscalaz/Foldable1;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public <G> scalaz.Foldable1<?> compose(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1193               // InterfaceMethod scalaz/Foldable1.compose$:(Lscalaz/Foldable1;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1199               // InterfaceMethod scalaz/Foldable1.foldMap1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public java.lang.Object foldRight1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1205               // InterfaceMethod scalaz/Foldable1.foldRight1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1211               // InterfaceMethod scalaz/Foldable1.foldRight$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object foldLeft1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1215               // InterfaceMethod scalaz/Foldable1.foldLeft1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object foldr1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1220               // InterfaceMethod scalaz/Foldable1.foldr1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1226               // InterfaceMethod scalaz/Foldable1.foldMapRight1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1232               // InterfaceMethod scalaz/Foldable1.foldr1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1236               // InterfaceMethod scalaz/Foldable1.foldl1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1240               // InterfaceMethod scalaz/Foldable1.foldMapLeft1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1244               // InterfaceMethod scalaz/Foldable1.foldl1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public java.lang.Object fold1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1252               // InterfaceMethod scalaz/Foldable1.fold1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object foldLeftM1(java.lang.Object, scala.Function1, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1258               // InterfaceMethod scalaz/Foldable1.foldLeftM1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldRightM1(java.lang.Object, scala.Function1, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1262               // InterfaceMethod scalaz/Foldable1.foldRightM1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM1(java.lang.Object, scala.Function1, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1268               // InterfaceMethod scalaz/Foldable1.foldlM1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldrM1(java.lang.Object, scala.Function1, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1272               // InterfaceMethod scalaz/Foldable1.foldrM1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object maximum1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1279               // InterfaceMethod scalaz/Foldable1.maximum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object maximumOf1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1286               // InterfaceMethod scalaz/Foldable1.maximumOf1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object maximumBy1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1291               // InterfaceMethod scalaz/Foldable1.maximumBy1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object minimum1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1296               // InterfaceMethod scalaz/Foldable1.minimum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minimumOf1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1301               // InterfaceMethod scalaz/Foldable1.minimumOf1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object minimumBy1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1306               // InterfaceMethod scalaz/Foldable1.minimumBy1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1313               // InterfaceMethod scalaz/Foldable1.maximum$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1320               // InterfaceMethod scalaz/Foldable1.maximumOf$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1325               // InterfaceMethod scalaz/Foldable1.maximumBy$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1330               // InterfaceMethod scalaz/Foldable1.minimum$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1335               // InterfaceMethod scalaz/Foldable1.minimumOf$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1340               // InterfaceMethod scalaz/Foldable1.minimumBy$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scalaz.NonEmptyList distinct1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1347               // InterfaceMethod scalaz/Foldable1.distinct1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.NonEmptyList distinctE1(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1353               // InterfaceMethod scalaz/Foldable1.distinctE1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/NonEmptyList;
       6: areturn

  public java.lang.Object sumr1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1358               // InterfaceMethod scalaz/Foldable1.sumr1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object suml1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1362               // InterfaceMethod scalaz/Foldable1.suml1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object psum1(java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1368               // InterfaceMethod scalaz/Foldable1.psum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msuml1(java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1372               // InterfaceMethod scalaz/Foldable1.msuml1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object intercalate1(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1377               // InterfaceMethod scalaz/Foldable1.intercalate1$:(Lscalaz/Foldable1;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1384               // InterfaceMethod scalaz/Foldable1.intercalate$:(Lscalaz/Foldable1;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object traverse1_(java.lang.Object, scala.Function1, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1390               // InterfaceMethod scalaz/Foldable1.traverse1_$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object sequence1_(java.lang.Object, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1396               // InterfaceMethod scalaz/Foldable1.sequence1_$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public final boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1402               // InterfaceMethod scalaz/Foldable1.empty$:(Lscalaz/Foldable1;Ljava/lang/Object;)Z
       5: ireturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1407               // InterfaceMethod scalaz/Foldable1.product0$:(Lscalaz/Foldable1;Lscalaz/Foldable;)Lscalaz/Foldable1;
       5: areturn

  public scalaz.NonEmptyList scanLeft1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1414               // InterfaceMethod scalaz/Foldable1.scanLeft1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.NonEmptyList scanRight1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1418               // InterfaceMethod scalaz/Foldable1.scanRight1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.Foldable1<scalaz.NonEmptyList>.Foldable1Law foldable1Law();
    Code:
       0: aload_0
       1: invokestatic  #1425               // InterfaceMethod scalaz/Foldable1.foldable1Law$:(Lscalaz/Foldable1;)Lscalaz/Foldable1$Foldable1Law;
       4: areturn

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1430               // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1437               // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1440               // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1443               // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<scalaz.NonEmptyList>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1450               // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<scalaz.NonEmptyList>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #1457               // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1460               // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1465               // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1471               // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1477               // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1484               // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1490               // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1496               // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1500               // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1506               // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1512               // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1518               // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1524               // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1529               // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1531               // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1537               // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1541               // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1545               // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1550               // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1554               // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1558               // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1562               // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<scalaz.NonEmptyList>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #1569               // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1574               // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1579               // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1582               // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1585               // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1591               // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1597               // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1604               // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1610               // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1616               // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1621               // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1626               // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1631               // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1636               // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1641               // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1647               // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1653               // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1659               // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1665               // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1669               // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1675               // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1679               // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1685               // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1690               // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1696               // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1703               // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #1710               // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1716               // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1722               // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1728               // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1734               // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scala.collection.immutable.LazyList toLazyList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1740               // InterfaceMethod scalaz/Foldable.toLazyList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/LazyList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1746               // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1750               // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1754               // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1760               // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1765               // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1770               // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1774               // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1778               // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1782               // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1786               // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1790               // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1796               // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1803               // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1807               // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1814               // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/$less$colon$less;)J
       6: lreturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1821               // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1827               // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1833               // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1839               // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1843               // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1849               // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1855               // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1859               // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1865               // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scalaz.NonEmptyList>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #1873               // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1879               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1884               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1891               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1896               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1900               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1904               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1909               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1913               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1917               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1923               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G$> scalaz.Functor<?> compose(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1929               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G$> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1936               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G$> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1942               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G$> scalaz.Functor<?> product(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1945               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1952               // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<scalaz.NonEmptyList>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1960               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1967               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1975               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scalaz.NonEmptyList>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1983               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.AlignSyntax<scalaz.NonEmptyList> alignSyntax();
    Code:
       0: aload_0
       1: getfield      #1987               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       4: areturn

  public void scalaz$Align$_setter_$alignSyntax_$eq(scalaz.syntax.AlignSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1987               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       5: return

  public scalaz.syntax.UnzipSyntax<scalaz.NonEmptyList> unzipSyntax();
    Code:
       0: aload_0
       1: getfield      #1995               // Field unzipSyntax:Lscalaz/syntax/UnzipSyntax;
       4: areturn

  public void scalaz$Unzip$_setter_$unzipSyntax_$eq(scalaz.syntax.UnzipSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1995               // Field unzipSyntax:Lscalaz/syntax/UnzipSyntax;
       5: return

  public scalaz.syntax.ZipSyntax<scalaz.NonEmptyList> zipSyntax();
    Code:
       0: aload_0
       1: getfield      #2002               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       4: areturn

  public void scalaz$Zip$_setter_$zipSyntax_$eq(scalaz.syntax.ZipSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2002               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       5: return

  public scalaz.syntax.ComonadSyntax<scalaz.NonEmptyList> comonadSyntax();
    Code:
       0: aload_0
       1: getfield      #2009               // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       4: areturn

  public void scalaz$Comonad$_setter_$comonadSyntax_$eq(scalaz.syntax.ComonadSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2009               // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       5: return

  public scalaz.syntax.CobindSyntax<scalaz.NonEmptyList> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #2016               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2016               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.PlusSyntax<scalaz.NonEmptyList> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #2023               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2023               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.syntax.BindRecSyntax<scalaz.NonEmptyList> bindRecSyntax();
    Code:
       0: aload_0
       1: getfield      #2030               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       4: areturn

  public void scalaz$BindRec$_setter_$bindRecSyntax_$eq(scalaz.syntax.BindRecSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2030               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       5: return

  public scalaz.syntax.AltSyntax<scalaz.NonEmptyList> altSyntax();
    Code:
       0: aload_0
       1: getfield      #2037               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       4: areturn

  public void scalaz$Alt$_setter_$altSyntax_$eq(scalaz.syntax.AltSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2037               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       5: return

  public scalaz.syntax.InvariantAltSyntax<scalaz.NonEmptyList> invariantAltSyntax();
    Code:
       0: aload_0
       1: getfield      #2044               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       4: areturn

  public void scalaz$InvariantAlt$_setter_$invariantAltSyntax_$eq(scalaz.syntax.InvariantAltSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2044               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       5: return

  public scalaz.syntax.MonadSyntax<scalaz.NonEmptyList> monadSyntax();
    Code:
       0: aload_0
       1: getfield      #2051               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       4: areturn

  public void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2051               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       5: return

  public scalaz.syntax.BindSyntax<scalaz.NonEmptyList> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #2058               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2058               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scalaz.NonEmptyList> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #2065               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2065               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scalaz.NonEmptyList> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #2072               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2072               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scalaz.NonEmptyList> applySyntax();
    Code:
       0: aload_0
       1: getfield      #2079               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2079               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.Traverse1Syntax<scalaz.NonEmptyList> traverse1Syntax();
    Code:
       0: aload_0
       1: getfield      #2086               // Field traverse1Syntax:Lscalaz/syntax/Traverse1Syntax;
       4: areturn

  public void scalaz$Traverse1$_setter_$traverse1Syntax_$eq(scalaz.syntax.Traverse1Syntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2086               // Field traverse1Syntax:Lscalaz/syntax/Traverse1Syntax;
       5: return

  public scalaz.syntax.Foldable1Syntax<scalaz.NonEmptyList> foldable1Syntax();
    Code:
       0: aload_0
       1: getfield      #2093               // Field foldable1Syntax:Lscalaz/syntax/Foldable1Syntax;
       4: areturn

  public void scalaz$Foldable1$_setter_$foldable1Syntax_$eq(scalaz.syntax.Foldable1Syntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2093               // Field foldable1Syntax:Lscalaz/syntax/Foldable1Syntax;
       5: return

  public scalaz.syntax.TraverseSyntax<scalaz.NonEmptyList> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #2100               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2100               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scalaz.NonEmptyList> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #2107               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2107               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scalaz.NonEmptyList> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #2114               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2114               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scalaz.NonEmptyList> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #2121               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2121               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A> scala.Option<A> findLeft(scalaz.NonEmptyList<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
       5: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #2142               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ifeq          28
      16: new           #2144               // class scala/Some
      19: dup
      20: aload_1
      21: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      24: invokespecial #2148               // Method scala/Some."<init>":(Ljava/lang/Object;)V
      27: areturn
      28: aload_1
      29: invokevirtual #2152               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      32: dup
      33: ifnonnull     38
      36: aconst_null
      37: athrow
      38: astore_3
      39: aload_3
      40: instanceof    #2154               // class scalaz/INil
      43: ifeq          59
      46: getstatic     #2160               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      49: pop
      50: getstatic     #2163               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      53: invokevirtual #2166               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      56: goto          131
      59: aload_3
      60: instanceof    #2168               // class scalaz/ICons
      63: ifeq          122
      66: aload_3
      67: checkcast     #2168               // class scalaz/ICons
      70: astore        4
      72: aload         4
      74: invokevirtual #2169               // Method scalaz/ICons.head:()Ljava/lang/Object;
      77: astore        5
      79: aload         4
      81: invokevirtual #2170               // Method scalaz/ICons.tail:()Lscalaz/IList;
      84: astore        6
      86: aload_2
      87: aload         5
      89: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      94: invokestatic  #2142               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      97: ifeq          116
     100: getstatic     #2160               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     103: pop
     104: new           #105                // class scalaz/Maybe$Just
     107: dup
     108: aload         5
     110: invokespecial #2171               // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
     113: goto          131
     116: aload         6
     118: astore_3
     119: goto          39
     122: new           #2173               // class scala/MatchError
     125: dup
     126: aload_3
     127: invokespecial #2174               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     130: athrow
     131: aconst_null
     132: astore_3
     133: aconst_null
     134: astore        4
     136: aconst_null
     137: astore        5
     139: aconst_null
     140: astore        6
     142: invokevirtual #2178               // Method scalaz/Maybe.toOption:()Lscala/Option;
     145: areturn

  public <A, B> B foldMap(scalaz.NonEmptyList<A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: getstatic     #2191               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: pop
       4: getstatic     #2196               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
       7: invokevirtual #2200               // Method scalaz/IList$.instances:()Lscalaz/Traverse;
      10: aload_1
      11: invokevirtual #2203               // Method scalaz/NonEmptyList.list:()Lscalaz/IList;
      14: aload_2
      15: aload_3
      16: invokeinterface #2206,  4         // InterfaceMethod scalaz/Foldable.foldMap:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      21: areturn

  public <F, A, B> F traverse1(scalaz.NonEmptyList<A>, scala.Function1<A, F>, scalaz.Apply<F>);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #2203               // Method scalaz/NonEmptyList.list:()Lscalaz/IList;
       5: aload_2
       6: invokedynamic #2227,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      11: getstatic     #2232               // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
      14: invokevirtual #2236               // Method scalaz/Reducer$.ReverseNonEmptyListReducer:()Lscalaz/Reducer;
      17: invokeinterface #2238,  4         // InterfaceMethod scalaz/Apply.unfoldrOpt:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
      22: astore        4
      24: aload         4
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: aload         4
      33: instanceof    #105                // class scalaz/Maybe$Just
      36: ifeq          60
      39: aload         4
      41: checkcast     #105                // class scalaz/Maybe$Just
      44: invokevirtual #2241               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      47: astore        6
      49: getstatic     #2246               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      52: aload         6
      54: invokevirtual #2249               // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
      57: goto          88
      60: aload         4
      62: instanceof    #97                 // class scalaz/Maybe$Empty
      65: ifeq          78
      68: getstatic     #2254               // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
      71: ldc_w         #2256               // String Head cannot be empty
      74: invokevirtual #2260               // Method scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
      77: athrow
      78: new           #2173               // class scala/MatchError
      81: dup
      82: aload         4
      84: invokespecial #2174               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      87: athrow
      88: aconst_null
      89: astore        6
      91: astore        5
      93: aload_3
      94: aload         5
      96: invokedynamic #2269,  0           // InvokeDynamic #1:apply:()Lscala/Function1;
     101: invokeinterface #2271,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     106: areturn

  public <G, A, B> G traverse1Impl(scalaz.NonEmptyList<A>, scala.Function1<A, G>, scalaz.Apply<G>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: invokevirtual #2152               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      10: astore        4
      12: aload         4
      14: instanceof    #2154               // class scalaz/INil
      17: ifeq          42
      20: aload_3
      21: aload_2
      22: aload_1
      23: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      26: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      31: invokedynamic #2284,  0           // InvokeDynamic #2:apply:()Lscala/Function1;
      36: invokeinterface #2271,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      41: areturn
      42: aload         4
      44: instanceof    #2168               // class scalaz/ICons
      47: ifeq          101
      50: aload         4
      52: checkcast     #2168               // class scalaz/ICons
      55: astore        5
      57: aload         5
      59: invokevirtual #2169               // Method scalaz/ICons.head:()Ljava/lang/Object;
      62: astore        6
      64: aload         5
      66: invokevirtual #2170               // Method scalaz/ICons.tail:()Lscalaz/IList;
      69: astore        7
      71: aload_3
      72: aload_1
      73: aload_2
      74: invokedynamic #2293,  0           // InvokeDynamic #3:apply:(Lscalaz/NonEmptyList;Lscala/Function1;)Lscala/Function0;
      79: aload         6
      81: aload         7
      83: aload_2
      84: aload_3
      85: invokedynamic #2301,  0           // InvokeDynamic #4:apply:(Ljava/lang/Object;Lscalaz/IList;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
      90: invokedynamic #2310,  0           // InvokeDynamic #5:apply:()Lscala/Function2;
      95: invokeinterface #2312,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     100: areturn
     101: new           #2173               // class scala/MatchError
     104: dup
     105: aload         4
     107: invokespecial #2174               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     110: athrow

  public <A, B> B foldMapRight1(scalaz.NonEmptyList<A>, scala.Function1<A, B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: invokevirtual #2320               // Method scalaz/NonEmptyList.reverse:()Lscalaz/NonEmptyList;
       4: astore        4
       6: aload         4
       8: invokevirtual #2152               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      11: aload_2
      12: aload         4
      14: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      17: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: astore        5
      24: dup
      25: ifnonnull     30
      28: aconst_null
      29: athrow
      30: aload         5
      32: astore        7
      34: astore        6
      36: aload         6
      38: instanceof    #2154               // class scalaz/INil
      41: ifeq          47
      44: aload         7
      46: areturn
      47: aload         6
      49: instanceof    #2168               // class scalaz/ICons
      52: ifeq          96
      55: aload         6
      57: checkcast     #2168               // class scalaz/ICons
      60: astore        8
      62: aload         8
      64: invokevirtual #2169               // Method scalaz/ICons.head:()Ljava/lang/Object;
      67: astore        9
      69: aload         8
      71: invokevirtual #2170               // Method scalaz/ICons.tail:()Lscalaz/IList;
      74: aload_3
      75: aload         9
      77: aload         7
      79: invokedynamic #2327,  0           // InvokeDynamic #6:apply:(Ljava/lang/Object;)Lscala/Function0;
      84: invokeinterface #2331,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: astore        7
      91: astore        6
      93: goto          36
      96: new           #2173               // class scala/MatchError
      99: dup
     100: aload         6
     102: invokespecial #2174               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     105: athrow

  public <A, B> B foldMapLeft1(scalaz.NonEmptyList<A>, scala.Function1<A, B>, scala.Function2<B, A, B>);
    Code:
       0: aload_1
       1: invokevirtual #2152               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
       4: aload_2
       5: aload_1
       6: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
       9: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore        4
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload         4
      24: astore        6
      26: astore        5
      28: aload         5
      30: instanceof    #2154               // class scalaz/INil
      33: ifeq          39
      36: aload         6
      38: areturn
      39: aload         5
      41: instanceof    #2168               // class scalaz/ICons
      44: ifeq          83
      47: aload         5
      49: checkcast     #2168               // class scalaz/ICons
      52: astore        7
      54: aload         7
      56: invokevirtual #2169               // Method scalaz/ICons.head:()Ljava/lang/Object;
      59: astore        8
      61: aload         7
      63: invokevirtual #2170               // Method scalaz/ICons.tail:()Lscalaz/IList;
      66: aload_3
      67: aload         6
      69: aload         8
      71: invokeinterface #2331,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      76: astore        6
      78: astore        5
      80: goto          28
      83: new           #2173               // class scala/MatchError
      86: dup
      87: aload         5
      89: invokespecial #2174               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      92: athrow

  public <A, B> B foldMap1(scalaz.NonEmptyList<A>, scala.Function1<A, B>, scalaz.Semigroup<B>);
    Code:
       0: aload_1
       1: invokevirtual #2152               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
       4: aload_2
       5: aload_1
       6: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
       9: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore        4
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload         4
      24: astore        6
      26: astore        5
      28: aload         5
      30: instanceof    #2154               // class scalaz/INil
      33: ifeq          39
      36: aload         6
      38: areturn
      39: aload         5
      41: instanceof    #2168               // class scalaz/ICons
      44: ifeq          89
      47: aload         5
      49: checkcast     #2168               // class scalaz/ICons
      52: astore        7
      54: aload         7
      56: invokevirtual #2169               // Method scalaz/ICons.head:()Ljava/lang/Object;
      59: astore        8
      61: aload         7
      63: invokevirtual #2170               // Method scalaz/ICons.tail:()Lscalaz/IList;
      66: aload_3
      67: aload         6
      69: aload_2
      70: aload         8
      72: invokedynamic #2348,  0           // InvokeDynamic #7:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      77: invokeinterface #2353,  3         // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      82: astore        6
      84: astore        5
      86: goto          28
      89: new           #2173               // class scala/MatchError
      92: dup
      93: aload         5
      95: invokespecial #2174               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      98: athrow

  public <A, B, G> G psumMap1(scalaz.NonEmptyList<A>, scala.Function1<A, G>, scalaz.Plus<G>);
    Code:
       0: aload_1
       1: invokevirtual #2152               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
       4: astore        4
       6: aload         4
       8: instanceof    #2154               // class scalaz/INil
      11: ifeq          25
      14: aload_2
      15: aload_1
      16: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      19: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      24: areturn
      25: aload         4
      27: instanceof    #2168               // class scalaz/ICons
      30: ifeq          83
      33: aload         4
      35: checkcast     #2168               // class scalaz/ICons
      38: astore        5
      40: aload         5
      42: invokevirtual #2169               // Method scalaz/ICons.head:()Ljava/lang/Object;
      45: astore        6
      47: aload         5
      49: invokevirtual #2170               // Method scalaz/ICons.tail:()Lscalaz/IList;
      52: astore        7
      54: aload_3
      55: aload_2
      56: aload_1
      57: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      60: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      65: aload_0
      66: aload         6
      68: aload         7
      70: aload_2
      71: aload_3
      72: invokedynamic #2364,  0           // InvokeDynamic #8:apply:(Lscalaz/NonEmptyListInstances$$anon$1;Ljava/lang/Object;Lscalaz/IList;Lscala/Function1;Lscalaz/Plus;)Lscala/Function0;
      77: invokeinterface #2367,  3         // InterfaceMethod scalaz/Plus.plus:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      82: areturn
      83: new           #2173               // class scala/MatchError
      86: dup
      87: aload         4
      89: invokespecial #2174               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      92: athrow

  public <A, B> B foldLeft(scalaz.NonEmptyList<A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_1
       1: invokevirtual #2152               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
       4: aload_3
       5: aload_2
       6: aload_1
       7: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      10: invokeinterface #2331,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: astore        4
      17: dup
      18: ifnonnull     23
      21: aconst_null
      22: athrow
      23: aload         4
      25: astore        6
      27: astore        5
      29: aload         5
      31: instanceof    #2154               // class scalaz/INil
      34: ifeq          40
      37: aload         6
      39: areturn
      40: aload         5
      42: instanceof    #2168               // class scalaz/ICons
      45: ifeq          84
      48: aload         5
      50: checkcast     #2168               // class scalaz/ICons
      53: astore        7
      55: aload         7
      57: invokevirtual #2169               // Method scalaz/ICons.head:()Ljava/lang/Object;
      60: astore        8
      62: aload         7
      64: invokevirtual #2170               // Method scalaz/ICons.tail:()Lscalaz/IList;
      67: aload_3
      68: aload         6
      70: aload         8
      72: invokeinterface #2331,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      77: astore        6
      79: astore        5
      81: goto          29
      84: new           #2173               // class scala/MatchError
      87: dup
      88: aload         5
      90: invokespecial #2174               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      93: athrow

  public <A, B> scalaz.NonEmptyList<B> bind(scalaz.NonEmptyList<A>, scala.Function1<A, scalaz.NonEmptyList<B>>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: invokevirtual #2320               // Method scalaz/NonEmptyList.reverse:()Lscalaz/NonEmptyList;
      10: astore_3
      11: aload_3
      12: invokevirtual #2152               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      15: aload_2
      16: aload_3
      17: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      20: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      25: astore        4
      27: dup
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: aload         4
      35: astore        6
      37: astore        5
      39: aload         5
      41: instanceof    #2154               // class scalaz/INil
      44: ifeq          52
      47: aload         6
      49: goto          119
      52: aload         5
      54: instanceof    #2168               // class scalaz/ICons
      57: ifeq          109
      60: aload         5
      62: checkcast     #2168               // class scalaz/ICons
      65: astore        7
      67: aload         7
      69: invokevirtual #2169               // Method scalaz/ICons.head:()Ljava/lang/Object;
      72: astore        8
      74: aload         7
      76: invokevirtual #2170               // Method scalaz/ICons.tail:()Lscalaz/IList;
      79: aload         6
      81: checkcast     #2129               // class scalaz/NonEmptyList
      84: astore        9
      86: aload_2
      87: aload         8
      89: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      94: checkcast     #2129               // class scalaz/NonEmptyList
      97: aload         9
      99: invokevirtual #2377               // Method scalaz/NonEmptyList.append:(Lscalaz/NonEmptyList;)Lscalaz/NonEmptyList;
     102: astore        6
     104: astore        5
     106: goto          39
     109: new           #2173               // class scala/MatchError
     112: dup
     113: aload         5
     115: invokespecial #2174               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     118: athrow
     119: checkcast     #2129               // class scalaz/NonEmptyList
     122: areturn

  public <A> scalaz.NonEmptyList<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #2390               // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
       3: pop
       4: aload_1
       5: invokeinterface #2394,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: astore_2
      11: getstatic     #2196               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      14: pop
      15: getstatic     #2399               // Field scalaz/INil$.MODULE$:Lscalaz/INil$;
      18: invokevirtual #2401               // Method scalaz/INil$.apply:()Lscalaz/IList;
      21: astore_3
      22: new           #2129               // class scalaz/NonEmptyList
      25: dup
      26: aload_2
      27: aload_3
      28: invokespecial #2404               // Method scalaz/NonEmptyList."<init>":(Ljava/lang/Object;Lscalaz/IList;)V
      31: areturn

  public <A> scalaz.NonEmptyList<A> plus(scalaz.NonEmptyList<A>, scala.Function0<scalaz.NonEmptyList<A>>);
    Code:
       0: aload_1
       1: invokevirtual #2203               // Method scalaz/NonEmptyList.list:()Lscalaz/IList;
       4: astore_3
       5: aload_2
       6: invokeinterface #2394,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      11: checkcast     #2129               // class scalaz/NonEmptyList
      14: aload_3
      15: invokevirtual #2412               // Method scalaz/NonEmptyList.$less$colon$colon$colon:(Lscalaz/IList;)Lscalaz/NonEmptyList;
      18: areturn

  public <A> scalaz.NonEmptyList<A> alt(scala.Function0<scalaz.NonEmptyList<A>>, scala.Function0<scalaz.NonEmptyList<A>>);
    Code:
       0: aload_1
       1: invokeinterface #2394,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2129               // class scalaz/NonEmptyList
       9: invokevirtual #2203               // Method scalaz/NonEmptyList.list:()Lscalaz/IList;
      12: astore_3
      13: aload_2
      14: invokeinterface #2394,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      19: checkcast     #2129               // class scalaz/NonEmptyList
      22: aload_3
      23: invokevirtual #2412               // Method scalaz/NonEmptyList.$less$colon$colon$colon:(Lscalaz/IList;)Lscalaz/NonEmptyList;
      26: areturn

  public <A> A copoint(scalaz.NonEmptyList<A>);
    Code:
       0: aload_1
       1: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
       4: areturn

  public <A, B> scalaz.NonEmptyList<B> cobind(scalaz.NonEmptyList<A>, scala.Function1<scalaz.NonEmptyList<A>, B>);
    Code:
       0: aload_1
       1: invokevirtual #2423               // Method scalaz/NonEmptyList.tails:()Lscalaz/NonEmptyList;
       4: astore_3
       5: aload_3
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_3
      12: invokevirtual #2320               // Method scalaz/NonEmptyList.reverse:()Lscalaz/NonEmptyList;
      15: astore        4
      17: aload         4
      19: invokevirtual #2152               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      22: aload         4
      24: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      27: astore        10
      29: getstatic     #2390               // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      32: pop
      33: aload_2
      34: aload         10
      36: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      41: astore        11
      43: getstatic     #2196               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      46: pop
      47: getstatic     #2399               // Field scalaz/INil$.MODULE$:Lscalaz/INil$;
      50: invokevirtual #2401               // Method scalaz/INil$.apply:()Lscalaz/IList;
      53: astore        12
      55: new           #2129               // class scalaz/NonEmptyList
      58: dup
      59: aload         11
      61: aload         12
      63: invokespecial #2404               // Method scalaz/NonEmptyList."<init>":(Ljava/lang/Object;Lscalaz/IList;)V
      66: aconst_null
      67: astore        12
      69: aconst_null
      70: astore        11
      72: astore        5
      74: dup
      75: ifnonnull     80
      78: aconst_null
      79: athrow
      80: aload         5
      82: astore        7
      84: astore        6
      86: aload         6
      88: instanceof    #2154               // class scalaz/INil
      91: ifeq          97
      94: aload         7
      96: areturn
      97: aload         6
      99: instanceof    #2168               // class scalaz/ICons
     102: ifeq          179
     105: aload         6
     107: checkcast     #2168               // class scalaz/ICons
     110: astore        8
     112: aload         8
     114: invokevirtual #2169               // Method scalaz/ICons.head:()Ljava/lang/Object;
     117: astore        9
     119: aload         8
     121: invokevirtual #2170               // Method scalaz/ICons.tail:()Lscalaz/IList;
     124: getstatic     #2390               // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
     127: pop
     128: aload_2
     129: aload         9
     131: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     136: astore        13
     138: getstatic     #2196               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
     141: pop
     142: getstatic     #2399               // Field scalaz/INil$.MODULE$:Lscalaz/INil$;
     145: invokevirtual #2401               // Method scalaz/INil$.apply:()Lscalaz/IList;
     148: astore        14
     150: new           #2129               // class scalaz/NonEmptyList
     153: dup
     154: aload         13
     156: aload         14
     158: invokespecial #2404               // Method scalaz/NonEmptyList."<init>":(Ljava/lang/Object;Lscalaz/IList;)V
     161: aconst_null
     162: astore        14
     164: aconst_null
     165: astore        13
     167: aload         7
     169: invokevirtual #2377               // Method scalaz/NonEmptyList.append:(Lscalaz/NonEmptyList;)Lscalaz/NonEmptyList;
     172: astore        7
     174: astore        6
     176: goto          86
     179: new           #2173               // class scala/MatchError
     182: dup
     183: aload         6
     185: invokespecial #2174               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     188: athrow

  public <A> scalaz.NonEmptyList<scalaz.NonEmptyList<A>> cojoin(scalaz.NonEmptyList<A>);
    Code:
       0: aload_1
       1: invokevirtual #2423               // Method scalaz/NonEmptyList.tails:()Lscalaz/NonEmptyList;
       4: areturn

  public <A, B> scalaz.NonEmptyList<scala.Tuple2<A, B>> zip(scala.Function0<scalaz.NonEmptyList<A>>, scala.Function0<scalaz.NonEmptyList<B>>);
    Code:
       0: aload_1
       1: invokeinterface #2394,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2129               // class scalaz/NonEmptyList
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: astore_3
      16: aload_2
      17: invokeinterface #2394,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      22: checkcast     #2129               // class scalaz/NonEmptyList
      25: astore        4
      27: getstatic     #2390               // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      30: pop
      31: new           #2437               // class scala/Tuple2
      34: dup
      35: aload_3
      36: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      39: aload         4
      41: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      44: invokespecial #2440               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      47: aload_3
      48: invokevirtual #2152               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      51: aload         4
      53: invokedynamic #2449,  0           // InvokeDynamic #9:apply:(Lscalaz/NonEmptyList;)Lscala/Function0;
      58: invokevirtual #2452               // Method scalaz/IList.zip:(Lscala/Function0;)Lscalaz/IList;
      61: astore        6
      63: astore        5
      65: new           #2129               // class scalaz/NonEmptyList
      68: dup
      69: aload         5
      71: aload         6
      73: invokespecial #2404               // Method scalaz/NonEmptyList."<init>":(Ljava/lang/Object;Lscalaz/IList;)V
      76: areturn

  public <A, B> scala.Tuple2<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>> unzip(scalaz.NonEmptyList<scala.Tuple2<A, B>>);
    Code:
       0: aload_1
       1: getstatic     #2464               // Field scalaz/Liskov$.MODULE$:Lscalaz/Liskov$;
       4: pop
       5: new           #95                 // class scalaz/Liskov$$anon$3
       8: dup
       9: invokespecial #2467               // Method scalaz/Liskov$$anon$3."<init>":()V
      12: invokevirtual #2470               // Method scalaz/NonEmptyList.unzip:(Lscalaz/Liskov;)Lscala/Tuple2;
      15: areturn

  public <A, B, C> scala.Function2<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>> alignWith(scala.Function1<scalaz.$bslash$amp$div<A, B>, C>);
    Code:
       0: aload_1
       1: invokedynamic #2482,  0           // InvokeDynamic #10:apply:(Lscala/Function1;)Lscala/Function2;
       6: areturn

  public <A> int length(scalaz.NonEmptyList<A>);
    Code:
       0: aload_1
       1: invokevirtual #2489               // Method scalaz/NonEmptyList.size:()I
       4: ireturn

  public <A> scalaz.NonEmptyList<A> toNel(scalaz.NonEmptyList<A>);
    Code:
       0: aload_1
       1: areturn

  public <A> scalaz.IList<A> toIList(scalaz.NonEmptyList<A>);
    Code:
       0: aload_1
       1: invokevirtual #2203               // Method scalaz/NonEmptyList.list:()Lscalaz/IList;
       4: areturn

  public <A> boolean all(scalaz.NonEmptyList<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
       5: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #2142               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ifeq          41
      16: getstatic     #2191               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
      19: pop
      20: getstatic     #2196               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      23: invokevirtual #2200               // Method scalaz/IList$.instances:()Lscalaz/Traverse;
      26: aload_1
      27: invokevirtual #2152               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      30: aload_2
      31: invokeinterface #2499,  3         // InterfaceMethod scalaz/Foldable.all:(Ljava/lang/Object;Lscala/Function1;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: iconst_0
      42: ireturn

  public <A> boolean any(scalaz.NonEmptyList<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
       5: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #2142               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ifne          39
      16: getstatic     #2191               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
      19: pop
      20: getstatic     #2196               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      23: invokevirtual #2200               // Method scalaz/IList$.instances:()Lscalaz/Traverse;
      26: aload_1
      27: invokevirtual #2152               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      30: aload_2
      31: invokeinterface #2502,  3         // InterfaceMethod scalaz/Foldable.any:(Ljava/lang/Object;Lscala/Function1;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: iconst_0
      42: ireturn

  public <A, B> scalaz.NonEmptyList<B> tailrecM(A, scala.Function1<A, scalaz.NonEmptyList<scalaz.$bslash$div<A, B>>>);
    Code:
       0: getstatic     #2510               // Field scalaz/BindRec$.MODULE$:Lscalaz/BindRec$;
       3: pop
       4: getstatic     #2196               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
       7: invokevirtual #2200               // Method scalaz/IList$.instances:()Lscalaz/Traverse;
      10: checkcast     #13                 // class scalaz/BindRec
      13: aload_1
      14: aload_2
      15: invokedynamic #2518,  0           // InvokeDynamic #11:apply:(Lscala/Function1;)Lscala/Function1;
      20: invokeinterface #2520,  3         // InterfaceMethod scalaz/BindRec.tailrecM:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      25: checkcast     #2183               // class scalaz/IList
      28: astore_3
      29: aload_3
      30: instanceof    #2168               // class scalaz/ICons
      33: ifeq          72
      36: aload_3
      37: checkcast     #2168               // class scalaz/ICons
      40: astore        4
      42: aload         4
      44: invokevirtual #2169               // Method scalaz/ICons.head:()Ljava/lang/Object;
      47: astore        5
      49: aload         4
      51: invokevirtual #2170               // Method scalaz/ICons.tail:()Lscalaz/IList;
      54: astore        6
      56: getstatic     #2390               // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      59: pop
      60: new           #2129               // class scalaz/NonEmptyList
      63: dup
      64: aload         5
      66: aload         6
      68: invokespecial #2404               // Method scalaz/NonEmptyList."<init>":(Ljava/lang/Object;Lscalaz/IList;)V
      71: areturn
      72: new           #2173               // class scala/MatchError
      75: dup
      76: aload_3
      77: invokespecial #2174               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      80: athrow

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #2524               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public java.lang.Object tailrecM(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2526               // Method tailrecM:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/NonEmptyList;
       6: areturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: aload_2
       6: invokevirtual #2528               // Method any:(Lscalaz/NonEmptyList;Lscala/Function1;)Z
       9: ireturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: aload_2
       6: invokevirtual #2530               // Method all:(Lscalaz/NonEmptyList;Lscala/Function1;)Z
       9: ireturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: invokevirtual #2532               // Method toIList:(Lscalaz/NonEmptyList;)Lscalaz/IList;
       8: areturn

  public scalaz.NonEmptyList toNel(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: invokevirtual #2534               // Method toNel:(Lscalaz/NonEmptyList;)Lscalaz/NonEmptyList;
       8: areturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: invokevirtual #2536               // Method length:(Lscalaz/NonEmptyList;)I
       8: ireturn

  public scala.Tuple2 unzip(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: invokevirtual #2539               // Method unzip:(Lscalaz/NonEmptyList;)Lscala/Tuple2;
       8: areturn

  public java.lang.Object zip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2541               // Method zip:(Lscala/Function0;Lscala/Function0;)Lscalaz/NonEmptyList;
       6: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: invokevirtual #2543               // Method cojoin:(Lscalaz/NonEmptyList;)Lscalaz/NonEmptyList;
       8: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: aload_2
       6: invokevirtual #2545               // Method cobind:(Lscalaz/NonEmptyList;Lscala/Function1;)Lscalaz/NonEmptyList;
       9: areturn

  public java.lang.Object copoint(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: invokevirtual #2547               // Method copoint:(Lscalaz/NonEmptyList;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object alt(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2549               // Method alt:(Lscala/Function0;Lscala/Function0;)Lscalaz/NonEmptyList;
       6: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: aload_2
       6: invokevirtual #2551               // Method plus:(Lscalaz/NonEmptyList;Lscala/Function0;)Lscalaz/NonEmptyList;
       9: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2553               // Method point:(Lscala/Function0;)Lscalaz/NonEmptyList;
       5: areturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: aload_2
       6: invokevirtual #2555               // Method bind:(Lscalaz/NonEmptyList;Lscala/Function1;)Lscalaz/NonEmptyList;
       9: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: aload_2
       6: aload_3
       7: invokevirtual #2557               // Method foldLeft:(Lscalaz/NonEmptyList;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object psumMap1(java.lang.Object, scala.Function1, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: aload_2
       6: aload_3
       7: invokevirtual #2560               // Method psumMap1:(Lscalaz/NonEmptyList;Lscala/Function1;Lscalaz/Plus;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldMap1(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: aload_2
       6: aload_3
       7: invokevirtual #2563               // Method foldMap1:(Lscalaz/NonEmptyList;Lscala/Function1;Lscalaz/Semigroup;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldMapLeft1(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: aload_2
       6: aload_3
       7: invokevirtual #2566               // Method foldMapLeft1:(Lscalaz/NonEmptyList;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldMapRight1(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: aload_2
       6: aload_3
       7: invokevirtual #2568               // Method foldMapRight1:(Lscalaz/NonEmptyList;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object traverse1Impl(java.lang.Object, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: aload_2
       6: aload_3
       7: invokevirtual #2571               // Method traverse1Impl:(Lscalaz/NonEmptyList;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: aload_2
       6: aload_3
       7: invokevirtual #2573               // Method traverse1:(Lscalaz/NonEmptyList;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: aload_2
       6: aload_3
       7: invokevirtual #2575               // Method foldMap:(Lscalaz/NonEmptyList;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      10: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2129               // class scalaz/NonEmptyList
       5: aload_2
       6: invokevirtual #2577               // Method findLeft:(Lscalaz/NonEmptyList;Lscala/Function1;)Lscala/Option;
       9: areturn

  public static final scalaz.Maybe $anonfun$traverse1$5(scala.Function1, scalaz.IList);
    Code:
       0: aload_1
       1: instanceof    #2168               // class scalaz/ICons
       4: ifeq          55
       7: aload_1
       8: checkcast     #2168               // class scalaz/ICons
      11: astore_2
      12: aload_2
      13: invokevirtual #2169               // Method scalaz/ICons.head:()Ljava/lang/Object;
      16: astore_3
      17: aload_2
      18: invokevirtual #2170               // Method scalaz/ICons.tail:()Lscalaz/IList;
      21: astore        4
      23: getstatic     #2160               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      26: pop
      27: new           #2437               // class scala/Tuple2
      30: dup
      31: aload_0
      32: aload_3
      33: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      38: aload         4
      40: invokespecial #2440               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      43: astore        5
      45: new           #105                // class scalaz/Maybe$Just
      48: dup
      49: aload         5
      51: invokespecial #2171               // Method scalaz/Maybe$Just."<init>":(Ljava/lang/Object;)V
      54: areturn
      55: aload_1
      56: instanceof    #2154               // class scalaz/INil
      59: ifeq          73
      62: getstatic     #2160               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      65: pop
      66: getstatic     #2163               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      69: invokevirtual #2166               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      72: areturn
      73: new           #2173               // class scala/MatchError
      76: dup
      77: aload_1
      78: invokespecial #2174               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      81: athrow

  public static final scala.runtime.Nothing$ $anonfun$traverse1$6();
    Code:
       0: getstatic     #2254               // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
       3: ldc_w         #2256               // String Head cannot be empty
       6: invokevirtual #2260               // Method scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
       9: areturn

  public static final scalaz.NonEmptyList $anonfun$traverse1$7(scalaz.NonEmptyList);
    Code:
       0: aload_0
       1: invokevirtual #2320               // Method scalaz/NonEmptyList.reverse:()Lscalaz/NonEmptyList;
       4: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$1(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokedynamic #2327,  0           // InvokeDynamic #6:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #2331,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public static final java.lang.Object $anonfun$foldMap1$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$foldMap1$1(scalaz.Semigroup, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload_3
       4: invokedynamic #2348,  0           // InvokeDynamic #7:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
       9: invokeinterface #2353,  3         // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static final java.lang.Object $anonfun$psumMap1$1(scalaz.NonEmptyListInstances$$anon$1, java.lang.Object, scalaz.IList, scala.Function1, scalaz.Plus);
    Code:
       0: getstatic     #2390               // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
       3: pop
       4: new           #2129               // class scalaz/NonEmptyList
       7: dup
       8: aload_1
       9: aload_2
      10: invokespecial #2404               // Method scalaz/NonEmptyList."<init>":(Ljava/lang/Object;Lscalaz/IList;)V
      13: astore        5
      15: aload         5
      17: invokevirtual #2152               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      20: astore        6
      22: aload         6
      24: instanceof    #2154               // class scalaz/INil
      27: ifeq          42
      30: aload_3
      31: aload         5
      33: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      36: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      41: areturn
      42: aload         6
      44: instanceof    #2168               // class scalaz/ICons
      47: ifeq          103
      50: aload         6
      52: checkcast     #2168               // class scalaz/ICons
      55: astore        7
      57: aload         7
      59: invokevirtual #2169               // Method scalaz/ICons.head:()Ljava/lang/Object;
      62: astore        8
      64: aload         7
      66: invokevirtual #2170               // Method scalaz/ICons.tail:()Lscalaz/IList;
      69: astore        9
      71: aload         4
      73: aload_3
      74: aload         5
      76: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      79: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      84: aload_0
      85: aload         8
      87: aload         9
      89: aload_3
      90: aload         4
      92: invokedynamic #2364,  0           // InvokeDynamic #8:apply:(Lscalaz/NonEmptyListInstances$$anon$1;Ljava/lang/Object;Lscalaz/IList;Lscala/Function1;Lscalaz/Plus;)Lscala/Function0;
      97: invokeinterface #2367,  3         // InterfaceMethod scalaz/Plus.plus:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     102: areturn
     103: new           #2173               // class scala/MatchError
     106: dup
     107: aload         6
     109: invokespecial #2174               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     112: athrow

  public static final scalaz.NonEmptyList $anonfun$alignWith$1(scala.Function1, scalaz.NonEmptyList, scalaz.NonEmptyList);
    Code:
       0: getstatic     #2390               // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
       3: pop
       4: aload_0
       5: new           #33                 // class scalaz/$bslash$amp$div$Both
       8: dup
       9: aload_1
      10: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      13: aload_2
      14: invokevirtual #2133               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      17: invokespecial #2601               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      20: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      25: getstatic     #2606               // Field scalaz/Align$.MODULE$:Lscalaz/Align$;
      28: pop
      29: getstatic     #2196               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      32: invokevirtual #2200               // Method scalaz/IList$.instances:()Lscalaz/Traverse;
      35: checkcast     #23                 // class scalaz/Align
      38: aload_0
      39: invokeinterface #2608,  2         // InterfaceMethod scalaz/Align.alignWith:(Lscala/Function1;)Lscala/Function2;
      44: aload_1
      45: invokevirtual #2152               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      48: aload_2
      49: invokevirtual #2152               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      52: invokeinterface #2331,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: checkcast     #2183               // class scalaz/IList
      60: astore        4
      62: astore_3
      63: new           #2129               // class scalaz/NonEmptyList
      66: dup
      67: aload_3
      68: aload         4
      70: invokespecial #2404               // Method scalaz/NonEmptyList."<init>":(Ljava/lang/Object;Lscalaz/IList;)V
      73: areturn

  public static final scalaz.IList $anonfun$tailrecM$1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2137,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #2129               // class scalaz/NonEmptyList
      10: invokevirtual #2203               // Method scalaz/NonEmptyList.list:()Lscalaz/IList;
      13: areturn

  public scalaz.NonEmptyListInstances$$anon$1(scalaz.NonEmptyListInstances);
    Code:
       0: aload_0
       1: invokespecial #2612               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2616               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #2619               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #2622               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      16: aload_0
      17: invokestatic  #2625               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      20: aload_0
      21: invokestatic  #2628               // InterfaceMethod scalaz/Foldable1.$init$:(Lscalaz/Foldable1;)V
      24: aload_0
      25: invokestatic  #2631               // InterfaceMethod scalaz/Traverse1.$init$:(Lscalaz/Traverse1;)V
      28: aload_0
      29: invokestatic  #2634               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      32: aload_0
      33: invokestatic  #2637               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      36: aload_0
      37: invokestatic  #2640               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      40: aload_0
      41: invokestatic  #2643               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      44: aload_0
      45: invokestatic  #2646               // InterfaceMethod scalaz/Monad.$init$:(Lscalaz/Monad;)V
      48: aload_0
      49: invokestatic  #2649               // InterfaceMethod scalaz/InvariantAlt.$init$:(Lscalaz/InvariantAlt;)V
      52: aload_0
      53: invokestatic  #2652               // InterfaceMethod scalaz/Alt.$init$:(Lscalaz/Alt;)V
      56: aload_0
      57: invokestatic  #2655               // InterfaceMethod scalaz/BindRec.$init$:(Lscalaz/BindRec;)V
      60: aload_0
      61: invokestatic  #2658               // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      64: aload_0
      65: invokestatic  #2661               // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      68: aload_0
      69: invokestatic  #2664               // InterfaceMethod scalaz/Comonad.$init$:(Lscalaz/Comonad;)V
      72: aload_0
      73: invokestatic  #2667               // InterfaceMethod scalaz/Zip.$init$:(Lscalaz/Zip;)V
      76: aload_0
      77: invokestatic  #2670               // InterfaceMethod scalaz/Unzip.$init$:(Lscalaz/Unzip;)V
      80: aload_0
      81: invokestatic  #2673               // InterfaceMethod scalaz/Align.$init$:(Lscalaz/Align;)V
      84: invokestatic  #2678               // Method scala/runtime/Statics.releaseFence:()V
      87: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2691,  0           // InvokeDynamic #12:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
