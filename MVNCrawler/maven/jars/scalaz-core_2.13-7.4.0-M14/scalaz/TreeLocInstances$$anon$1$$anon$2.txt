Compiled from "TreeLoc.scala"
public final class scalaz.TreeLocInstances$$anon$1$$anon$2 implements scalaz.Traverse1<scala.Tuple3> {
  private scalaz.syntax.Traverse1Syntax<scala.Tuple3> traverse1Syntax;

  private scalaz.syntax.Foldable1Syntax<scala.Tuple3> foldable1Syntax;

  private scalaz.syntax.TraverseSyntax<scala.Tuple3> traverseSyntax;

  private scalaz.syntax.FoldableSyntax<scala.Tuple3> foldableSyntax;

  private scalaz.syntax.FunctorSyntax<scala.Tuple3> functorSyntax;

  private scalaz.syntax.InvariantFunctorSyntax<scala.Tuple3> invariantFunctorSyntax;

  private final scalaz.TreeLocInstances$$anon$1 $outer;

  public <G> scalaz.Traverse1<?> product(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #94                 // InterfaceMethod scalaz/Traverse1.product$:(Lscalaz/Traverse1;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #104                // InterfaceMethod scalaz/Traverse1.product0$:(Lscalaz/Traverse1;Lscalaz/Traverse;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse1<?> compose(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #110                // InterfaceMethod scalaz/Traverse1.compose$:(Lscalaz/Traverse1;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #119                // InterfaceMethod scalaz/Traverse1.traverseImpl$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object foldMap1(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #129                // InterfaceMethod scalaz/Traverse1.foldMap1$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #137                // InterfaceMethod scalaz/Traverse1.traverse1$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object traverse1M(java.lang.Object, scala.Function1, scalaz.Apply, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #145                // InterfaceMethod scalaz/Traverse1.traverse1M$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object traverse1U(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #152                // InterfaceMethod scalaz/Traverse1.traverse1U$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #161                // InterfaceMethod scalaz/Traverse1.sequence1$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Apply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequence1M(java.lang.Object, scalaz.Apply, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #168                // InterfaceMethod scalaz/Traverse1.sequence1M$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Apply;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object sequence1U(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #174                // InterfaceMethod scalaz/Traverse1.sequence1U$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public scalaz.Traverse1<scala.Tuple3>.Traverse1Law traverse1Law();
    Code:
       0: aload_0
       1: invokestatic  #181                // InterfaceMethod scalaz/Traverse1.traverse1Law$:(Lscalaz/Traverse1;)Lscalaz/Traverse1$Traverse1Law;
       4: areturn

  public <G> scalaz.Foldable1<?> product(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #186                // InterfaceMethod scalaz/Foldable1.product$:(Lscalaz/Foldable1;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public <G> scalaz.Foldable1<?> compose(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #189                // InterfaceMethod scalaz/Foldable1.compose$:(Lscalaz/Foldable1;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #195                // InterfaceMethod scalaz/Foldable1.foldMap1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public java.lang.Object foldRight1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #201                // InterfaceMethod scalaz/Foldable1.foldRight1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #209                // InterfaceMethod scalaz/Foldable1.foldRight$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object foldMapLeft1(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #216                // InterfaceMethod scalaz/Foldable1.foldMapLeft1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object foldLeft1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #220                // InterfaceMethod scalaz/Foldable1.foldLeft1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object foldr1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #226                // InterfaceMethod scalaz/Foldable1.foldr1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #232                // InterfaceMethod scalaz/Foldable1.foldMapRight1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #238                // InterfaceMethod scalaz/Foldable1.foldr1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #242                // InterfaceMethod scalaz/Foldable1.foldl1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #246                // InterfaceMethod scalaz/Foldable1.foldMapLeft1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #250                // InterfaceMethod scalaz/Foldable1.foldl1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public java.lang.Object fold1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #258                // InterfaceMethod scalaz/Foldable1.fold1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object foldLeftM1(java.lang.Object, scala.Function1, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #264                // InterfaceMethod scalaz/Foldable1.foldLeftM1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldRightM1(java.lang.Object, scala.Function1, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #269                // InterfaceMethod scalaz/Foldable1.foldRightM1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM1(java.lang.Object, scala.Function1, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #275                // InterfaceMethod scalaz/Foldable1.foldlM1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldrM1(java.lang.Object, scala.Function1, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #279                // InterfaceMethod scalaz/Foldable1.foldrM1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object maximum1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #286                // InterfaceMethod scalaz/Foldable1.maximum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object maximumOf1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #294                // InterfaceMethod scalaz/Foldable1.maximumOf1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object maximumBy1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #299                // InterfaceMethod scalaz/Foldable1.maximumBy1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object minimum1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #304                // InterfaceMethod scalaz/Foldable1.minimum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minimumOf1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #309                // InterfaceMethod scalaz/Foldable1.minimumOf1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object minimumBy1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #314                // InterfaceMethod scalaz/Foldable1.minimumBy1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #321                // InterfaceMethod scalaz/Foldable1.maximum$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #328                // InterfaceMethod scalaz/Foldable1.maximumOf$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #333                // InterfaceMethod scalaz/Foldable1.maximumBy$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #338                // InterfaceMethod scalaz/Foldable1.minimum$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #343                // InterfaceMethod scalaz/Foldable1.minimumOf$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #348                // InterfaceMethod scalaz/Foldable1.minimumBy$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scalaz.NonEmptyList distinct1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #355                // InterfaceMethod scalaz/Foldable1.distinct1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.NonEmptyList distinctE1(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #361                // InterfaceMethod scalaz/Foldable1.distinctE1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/NonEmptyList;
       6: areturn

  public java.lang.Object sumr1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #366                // InterfaceMethod scalaz/Foldable1.sumr1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object suml1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #370                // InterfaceMethod scalaz/Foldable1.suml1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object psum1(java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #376                // InterfaceMethod scalaz/Foldable1.psum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object psumMap1(java.lang.Object, scala.Function1, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #383                // InterfaceMethod scalaz/Foldable1.psumMap1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Plus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object msuml1(java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #387                // InterfaceMethod scalaz/Foldable1.msuml1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object intercalate1(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #393                // InterfaceMethod scalaz/Foldable1.intercalate1$:(Lscalaz/Foldable1;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #400                // InterfaceMethod scalaz/Foldable1.intercalate$:(Lscalaz/Foldable1;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object traverse1_(java.lang.Object, scala.Function1, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #408                // InterfaceMethod scalaz/Foldable1.traverse1_$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object sequence1_(java.lang.Object, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #414                // InterfaceMethod scalaz/Foldable1.sequence1_$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public final boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #420                // InterfaceMethod scalaz/Foldable1.empty$:(Lscalaz/Foldable1;Ljava/lang/Object;)Z
       5: ireturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #425                // InterfaceMethod scalaz/Foldable1.product0$:(Lscalaz/Foldable1;Lscalaz/Foldable;)Lscalaz/Foldable1;
       5: areturn

  public scalaz.NonEmptyList toNel(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #432                // InterfaceMethod scalaz/Foldable1.toNel$:(Lscalaz/Foldable1;Ljava/lang/Object;)Lscalaz/NonEmptyList;
       5: areturn

  public scalaz.NonEmptyList scanLeft1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #438                // InterfaceMethod scalaz/Foldable1.scanLeft1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.NonEmptyList scanRight1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #442                // InterfaceMethod scalaz/Foldable1.scanRight1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.Foldable1<scala.Tuple3>.Foldable1Law foldable1Law();
    Code:
       0: aload_0
       1: invokestatic  #449                // InterfaceMethod scalaz/Foldable1.foldable1Law$:(Lscalaz/Foldable1;)Lscalaz/Foldable1$Foldable1Law;
       4: areturn

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #454                // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #461                // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #464                // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #467                // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<scala.Tuple3>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #474                // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<scala.Tuple3>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #481                // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #486                // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #491                // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #497                // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #503                // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #510                // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #516                // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #522                // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #528                // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #534                // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #540                // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #546                // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #551                // InterfaceMethod scalaz/Traverse.map$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #557                // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #563                // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #568                // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #574                // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #578                // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #582                // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #588                // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #592                // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #596                // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #600                // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<scala.Tuple3>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #607                // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #612                // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #617                // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #620                // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #623                // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #630                // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #636                // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #643                // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #649                // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #655                // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #660                // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #665                // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #670                // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #675                // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #680                // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #687                // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #693                // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #699                // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #705                // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #709                // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #715                // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #719                // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #725                // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #730                // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #734                // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #740                // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #744                // InterfaceMethod scalaz/Foldable.length$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #751                // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #759                // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #765                // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #771                // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #777                // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #783                // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scala.collection.immutable.LazyList toLazyList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #789                // InterfaceMethod scalaz/Foldable.toLazyList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/LazyList;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #795                // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #801                // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #806                // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #810                // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #816                // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #821                // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #826                // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #830                // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #834                // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #838                // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #842                // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #846                // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #852                // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #859                // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #863                // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #870                // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/$less$colon$less;)J
       6: lreturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #877                // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #883                // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #889                // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #896                // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #900                // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #906                // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #912                // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #916                // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #922                // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scala.Tuple3>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #930                // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #937                // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #942                // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scala.Tuple3<scalaz.EphemeralStream<scalaz.Tree<A>>, A, scalaz.EphemeralStream<scalaz.Tree<A>>>, scala.Tuple3<scalaz.EphemeralStream<scalaz.Tree<B>>, B, scalaz.EphemeralStream<scalaz.Tree<B>>>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #949                // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #954                // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #959                // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #963                // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #968                // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #972                // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #976                // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #982                // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G$> scalaz.Functor<?> compose(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #988                // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G$> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #996                // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G$> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1002               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G$> scalaz.Functor<?> product(scalaz.Functor<G$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1005               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1012               // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<scala.Tuple3>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1020               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1027               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1035               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scala.Tuple3>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1043               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.Traverse1Syntax<scala.Tuple3> traverse1Syntax();
    Code:
       0: aload_0
       1: getfield      #1047               // Field traverse1Syntax:Lscalaz/syntax/Traverse1Syntax;
       4: areturn

  public void scalaz$Traverse1$_setter_$traverse1Syntax_$eq(scalaz.syntax.Traverse1Syntax<scala.Tuple3>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1047               // Field traverse1Syntax:Lscalaz/syntax/Traverse1Syntax;
       5: return

  public scalaz.syntax.Foldable1Syntax<scala.Tuple3> foldable1Syntax();
    Code:
       0: aload_0
       1: getfield      #1055               // Field foldable1Syntax:Lscalaz/syntax/Foldable1Syntax;
       4: areturn

  public void scalaz$Foldable1$_setter_$foldable1Syntax_$eq(scalaz.syntax.Foldable1Syntax<scala.Tuple3>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1055               // Field foldable1Syntax:Lscalaz/syntax/Foldable1Syntax;
       5: return

  public scalaz.syntax.TraverseSyntax<scala.Tuple3> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #1062               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<scala.Tuple3>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1062               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scala.Tuple3> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #1069               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scala.Tuple3>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1069               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scala.Tuple3> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #1076               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scala.Tuple3>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1076               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scala.Tuple3> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #1083               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scala.Tuple3>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1083               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A> boolean all(scala.Tuple3<scalaz.EphemeralStream<scalaz.Tree<A>>, A, scalaz.EphemeralStream<scalaz.Tree<A>>>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #1091               // Field $outer:Lscalaz/TreeLocInstances$$anon$1;
       4: getfield      #1094               // Field scalaz/TreeLocInstances$$anon$1.scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
       7: aload_1
       8: invokevirtual #1100               // Method scala/Tuple3._1:()Ljava/lang/Object;
      11: aload_2
      12: invokeinterface #1103,  3         // InterfaceMethod scalaz/Traverse.all:(Ljava/lang/Object;Lscala/Function1;)Z
      17: ifeq          58
      20: aload_2
      21: aload_1
      22: invokevirtual #1106               // Method scala/Tuple3._2:()Ljava/lang/Object;
      25: invokeinterface #1110,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      30: invokestatic  #1115               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      33: ifeq          58
      36: aload_0
      37: getfield      #1091               // Field $outer:Lscalaz/TreeLocInstances$$anon$1;
      40: getfield      #1094               // Field scalaz/TreeLocInstances$$anon$1.scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
      43: aload_1
      44: invokevirtual #1118               // Method scala/Tuple3._3:()Ljava/lang/Object;
      47: aload_2
      48: invokeinterface #1103,  3         // InterfaceMethod scalaz/Traverse.all:(Ljava/lang/Object;Lscala/Function1;)Z
      53: ifeq          58
      56: iconst_1
      57: ireturn
      58: iconst_0
      59: ireturn

  public <A> boolean any(scala.Tuple3<scalaz.EphemeralStream<scalaz.Tree<A>>, A, scalaz.EphemeralStream<scalaz.Tree<A>>>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #1091               // Field $outer:Lscalaz/TreeLocInstances$$anon$1;
       4: getfield      #1094               // Field scalaz/TreeLocInstances$$anon$1.scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
       7: aload_1
       8: invokevirtual #1100               // Method scala/Tuple3._1:()Ljava/lang/Object;
      11: aload_2
      12: invokeinterface #1122,  3         // InterfaceMethod scalaz/Traverse.any:(Ljava/lang/Object;Lscala/Function1;)Z
      17: ifne          56
      20: aload_2
      21: aload_1
      22: invokevirtual #1106               // Method scala/Tuple3._2:()Ljava/lang/Object;
      25: invokeinterface #1110,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      30: invokestatic  #1115               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      33: ifne          56
      36: aload_0
      37: getfield      #1091               // Field $outer:Lscalaz/TreeLocInstances$$anon$1;
      40: getfield      #1094               // Field scalaz/TreeLocInstances$$anon$1.scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
      43: aload_1
      44: invokevirtual #1118               // Method scala/Tuple3._3:()Ljava/lang/Object;
      47: aload_2
      48: invokeinterface #1122,  3         // InterfaceMethod scalaz/Traverse.any:(Ljava/lang/Object;Lscala/Function1;)Z
      53: ifeq          58
      56: iconst_1
      57: ireturn
      58: iconst_0
      59: ireturn

  public <A, B> B foldLeft(scala.Tuple3<scalaz.EphemeralStream<scalaz.Tree<A>>, A, scalaz.EphemeralStream<scalaz.Tree<A>>>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: getfield      #1091               // Field $outer:Lscalaz/TreeLocInstances$$anon$1;
       4: getfield      #1094               // Field scalaz/TreeLocInstances$$anon$1.scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
       7: aload_1
       8: invokevirtual #1118               // Method scala/Tuple3._3:()Ljava/lang/Object;
      11: aload_3
      12: aload_0
      13: getfield      #1091               // Field $outer:Lscalaz/TreeLocInstances$$anon$1;
      16: getfield      #1094               // Field scalaz/TreeLocInstances$$anon$1.scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
      19: aload_1
      20: invokevirtual #1100               // Method scala/Tuple3._1:()Ljava/lang/Object;
      23: aload_2
      24: aload_3
      25: invokeinterface #1127,  4         // InterfaceMethod scalaz/Traverse.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      30: aload_1
      31: invokevirtual #1106               // Method scala/Tuple3._2:()Ljava/lang/Object;
      34: invokeinterface #1131,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: aload_3
      40: invokeinterface #1127,  4         // InterfaceMethod scalaz/Traverse.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      45: areturn

  public <A, B> B foldMap(scala.Tuple3<scalaz.EphemeralStream<scalaz.Tree<A>>, A, scalaz.EphemeralStream<scalaz.Tree<A>>>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_3
       1: aload_3
       2: aload_0
       3: getfield      #1091               // Field $outer:Lscalaz/TreeLocInstances$$anon$1;
       6: getfield      #1094               // Field scalaz/TreeLocInstances$$anon$1.scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
       9: aload_1
      10: invokevirtual #1100               // Method scala/Tuple3._1:()Ljava/lang/Object;
      13: aload_2
      14: aload_3
      15: invokeinterface #1137,  4         // InterfaceMethod scalaz/Traverse.foldMap:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      20: aload_2
      21: aload_1
      22: invokedynamic #1154,  0           // InvokeDynamic #0:apply:(Lscala/Function1;Lscala/Tuple3;)Lscala/Function0;
      27: invokeinterface #1160,  3         // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      32: aload_0
      33: aload_1
      34: aload_2
      35: aload_3
      36: invokedynamic #1168,  0           // InvokeDynamic #1:apply:(Lscalaz/TreeLocInstances$$anon$1$$anon$2;Lscala/Tuple3;Lscala/Function1;Lscalaz/Monoid;)Lscala/Function0;
      41: invokeinterface #1160,  3         // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      46: areturn

  public <G, A, B> G traverse1Impl(scala.Tuple3<scalaz.EphemeralStream<scalaz.Tree<A>>, A, scalaz.EphemeralStream<scalaz.Tree<A>>>, scala.Function1<A, G>, scalaz.Apply<G>);
    Code:
       0: new           #1173               // class scala/Tuple2
       3: dup
       4: aload_1
       5: invokevirtual #1100               // Method scala/Tuple3._1:()Ljava/lang/Object;
       8: aload_1
       9: invokevirtual #1118               // Method scala/Tuple3._3:()Ljava/lang/Object;
      12: astore        24
      14: astore        23
      16: aload         23
      18: aload         24
      20: invokespecial #1177               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      23: astore        4
      25: aload         23
      27: checkcast     #21                 // class scalaz/EphemeralStream
      30: astore        5
      32: aload         24
      34: checkcast     #21                 // class scalaz/EphemeralStream
      37: astore        6
      39: aload         5
      41: ifnull        192
      44: getstatic     #1181               // Field scalaz/EphemeralStream$$hash$hash$colon$colon$.MODULE$:Lscalaz/EphemeralStream$$hash$hash$colon$colon$;
      47: aload         5
      49: invokevirtual #1185               // Method scalaz/EphemeralStream$$hash$hash$colon$colon$.unapply:(Lscalaz/EphemeralStream;)Lscala/Option;
      52: astore        7
      54: aload         7
      56: invokevirtual #1191               // Method scala/Option.isEmpty:()Z
      59: ifne          192
      62: aload         7
      64: invokevirtual #1194               // Method scala/Option.get:()Ljava/lang/Object;
      67: checkcast     #1173               // class scala/Tuple2
      70: invokevirtual #1195               // Method scala/Tuple2._1:()Ljava/lang/Object;
      73: checkcast     #1197               // class scalaz/Tree
      76: astore        8
      78: aload         7
      80: invokevirtual #1194               // Method scala/Option.get:()Ljava/lang/Object;
      83: checkcast     #1173               // class scala/Tuple2
      86: invokevirtual #1198               // Method scala/Tuple2._2:()Ljava/lang/Object;
      89: checkcast     #21                 // class scalaz/EphemeralStream
      92: astore        9
      94: aload         6
      96: ifnull        192
      99: getstatic     #1181               // Field scalaz/EphemeralStream$$hash$hash$colon$colon$.MODULE$:Lscalaz/EphemeralStream$$hash$hash$colon$colon$;
     102: aload         6
     104: invokevirtual #1185               // Method scalaz/EphemeralStream$$hash$hash$colon$colon$.unapply:(Lscalaz/EphemeralStream;)Lscala/Option;
     107: astore        10
     109: aload         10
     111: invokevirtual #1191               // Method scala/Option.isEmpty:()Z
     114: ifne          192
     117: aload         10
     119: invokevirtual #1194               // Method scala/Option.get:()Ljava/lang/Object;
     122: checkcast     #1173               // class scala/Tuple2
     125: invokevirtual #1195               // Method scala/Tuple2._1:()Ljava/lang/Object;
     128: checkcast     #1197               // class scalaz/Tree
     131: astore        11
     133: aload         10
     135: invokevirtual #1194               // Method scala/Option.get:()Ljava/lang/Object;
     138: checkcast     #1173               // class scala/Tuple2
     141: invokevirtual #1198               // Method scala/Tuple2._2:()Ljava/lang/Object;
     144: checkcast     #21                 // class scalaz/EphemeralStream
     147: astore        12
     149: aload_3
     150: aload_0
     151: aload         8
     153: aload         9
     155: aload_2
     156: aload_3
     157: invokedynamic #1206,  0           // InvokeDynamic #2:apply:(Lscalaz/TreeLocInstances$$anon$1$$anon$2;Lscalaz/Tree;Lscalaz/EphemeralStream;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     162: aload_2
     163: aload_1
     164: invokedynamic #1211,  0           // InvokeDynamic #3:apply:(Lscala/Function1;Lscala/Tuple3;)Lscala/Function0;
     169: aload_0
     170: aload         11
     172: aload         12
     174: aload_2
     175: aload_3
     176: invokedynamic #1216,  0           // InvokeDynamic #4:apply:(Lscalaz/TreeLocInstances$$anon$1$$anon$2;Lscalaz/Tree;Lscalaz/EphemeralStream;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     181: invokedynamic #1228,  0           // InvokeDynamic #5:apply:()Lscala/Function3;
     186: invokeinterface #1234,  5         // InterfaceMethod scalaz/Apply.apply3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
     191: areturn
     192: aload         23
     194: checkcast     #21                 // class scalaz/EphemeralStream
     197: astore        13
     199: aload         13
     201: ifnull        285
     204: getstatic     #1181               // Field scalaz/EphemeralStream$$hash$hash$colon$colon$.MODULE$:Lscalaz/EphemeralStream$$hash$hash$colon$colon$;
     207: aload         13
     209: invokevirtual #1185               // Method scalaz/EphemeralStream$$hash$hash$colon$colon$.unapply:(Lscalaz/EphemeralStream;)Lscala/Option;
     212: astore        14
     214: aload         14
     216: invokevirtual #1191               // Method scala/Option.isEmpty:()Z
     219: ifne          285
     222: aload         14
     224: invokevirtual #1194               // Method scala/Option.get:()Ljava/lang/Object;
     227: checkcast     #1173               // class scala/Tuple2
     230: invokevirtual #1195               // Method scala/Tuple2._1:()Ljava/lang/Object;
     233: checkcast     #1197               // class scalaz/Tree
     236: astore        15
     238: aload         14
     240: invokevirtual #1194               // Method scala/Option.get:()Ljava/lang/Object;
     243: checkcast     #1173               // class scala/Tuple2
     246: invokevirtual #1198               // Method scala/Tuple2._2:()Ljava/lang/Object;
     249: checkcast     #21                 // class scalaz/EphemeralStream
     252: astore        16
     254: aload_3
     255: aload_0
     256: aload         15
     258: aload         16
     260: aload_2
     261: aload_3
     262: invokedynamic #1239,  0           // InvokeDynamic #6:apply:(Lscalaz/TreeLocInstances$$anon$1$$anon$2;Lscalaz/Tree;Lscalaz/EphemeralStream;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     267: aload_2
     268: aload_1
     269: invokedynamic #1244,  0           // InvokeDynamic #7:apply:(Lscala/Function1;Lscala/Tuple3;)Lscala/Function0;
     274: invokedynamic #1254,  0           // InvokeDynamic #8:apply:()Lscala/Function2;
     279: invokeinterface #1258,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     284: areturn
     285: aload         24
     287: checkcast     #21                 // class scalaz/EphemeralStream
     290: astore        17
     292: aload         17
     294: ifnull        378
     297: getstatic     #1181               // Field scalaz/EphemeralStream$$hash$hash$colon$colon$.MODULE$:Lscalaz/EphemeralStream$$hash$hash$colon$colon$;
     300: aload         17
     302: invokevirtual #1185               // Method scalaz/EphemeralStream$$hash$hash$colon$colon$.unapply:(Lscalaz/EphemeralStream;)Lscala/Option;
     305: astore        18
     307: aload         18
     309: invokevirtual #1191               // Method scala/Option.isEmpty:()Z
     312: ifne          378
     315: aload         18
     317: invokevirtual #1194               // Method scala/Option.get:()Ljava/lang/Object;
     320: checkcast     #1173               // class scala/Tuple2
     323: invokevirtual #1195               // Method scala/Tuple2._1:()Ljava/lang/Object;
     326: checkcast     #1197               // class scalaz/Tree
     329: astore        19
     331: aload         18
     333: invokevirtual #1194               // Method scala/Option.get:()Ljava/lang/Object;
     336: checkcast     #1173               // class scala/Tuple2
     339: invokevirtual #1198               // Method scala/Tuple2._2:()Ljava/lang/Object;
     342: checkcast     #21                 // class scalaz/EphemeralStream
     345: astore        20
     347: aload_3
     348: aload_2
     349: aload_1
     350: invokedynamic #1263,  0           // InvokeDynamic #9:apply:(Lscala/Function1;Lscala/Tuple3;)Lscala/Function0;
     355: aload_0
     356: aload         19
     358: aload         20
     360: aload_2
     361: aload_3
     362: invokedynamic #1268,  0           // InvokeDynamic #10:apply:(Lscalaz/TreeLocInstances$$anon$1$$anon$2;Lscalaz/Tree;Lscalaz/EphemeralStream;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     367: invokedynamic #1275,  0           // InvokeDynamic #11:apply:()Lscala/Function2;
     372: invokeinterface #1258,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     377: areturn
     378: aload         23
     380: checkcast     #21                 // class scalaz/EphemeralStream
     383: astore        21
     385: aload         24
     387: checkcast     #21                 // class scalaz/EphemeralStream
     390: astore        22
     392: aload         21
     394: invokevirtual #1276               // Method scalaz/EphemeralStream.isEmpty:()Z
     397: ifeq          430
     400: aload         22
     402: invokevirtual #1276               // Method scalaz/EphemeralStream.isEmpty:()Z
     405: ifeq          430
     408: aload_3
     409: aload_2
     410: aload_1
     411: invokevirtual #1106               // Method scala/Tuple3._2:()Ljava/lang/Object;
     414: invokeinterface #1110,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     419: invokedynamic #1286,  0           // InvokeDynamic #12:apply:()Lscala/Function1;
     424: invokeinterface #1288,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     429: areturn
     430: new           #1290               // class scala/MatchError
     433: dup
     434: aload         4
     436: invokespecial #1293               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     439: athrow

  public <A, B> B foldMapRight1(scala.Tuple3<scalaz.EphemeralStream<scalaz.Tree<A>>, A, scalaz.EphemeralStream<scalaz.Tree<A>>>, scala.Function1<A, B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_0
       1: getfield      #1091               // Field $outer:Lscalaz/TreeLocInstances$$anon$1;
       4: getfield      #1094               // Field scalaz/TreeLocInstances$$anon$1.scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
       7: aload_1
       8: invokevirtual #1118               // Method scala/Tuple3._3:()Ljava/lang/Object;
      11: aload_2
      12: aload_3
      13: invokeinterface #1303,  4         // InterfaceMethod scalaz/Traverse.foldMapRight1Opt:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
      18: astore        4
      20: aload         4
      22: instanceof    #1305               // class scala/Some
      25: ifeq          65
      28: aload         4
      30: checkcast     #1305               // class scala/Some
      33: invokevirtual #1308               // Method scala/Some.value:()Ljava/lang/Object;
      36: astore        5
      38: aload_0
      39: getfield      #1091               // Field $outer:Lscalaz/TreeLocInstances$$anon$1;
      42: getfield      #1094               // Field scalaz/TreeLocInstances$$anon$1.scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
      45: aload_1
      46: invokevirtual #1100               // Method scala/Tuple3._1:()Ljava/lang/Object;
      49: aload_3
      50: aload_1
      51: aload         5
      53: invokedynamic #1316,  0           // InvokeDynamic #13:apply:(Lscala/Function2;Lscala/Tuple3;Ljava/lang/Object;)Lscala/Function0;
      58: aload_3
      59: invokeinterface #1318,  4         // InterfaceMethod scalaz/Traverse.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      64: areturn
      65: getstatic     #1323               // Field scala/None$.MODULE$:Lscala/None$;
      68: aload         4
      70: invokevirtual #1326               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      73: ifeq          101
      76: aload_0
      77: getfield      #1091               // Field $outer:Lscalaz/TreeLocInstances$$anon$1;
      80: getfield      #1094               // Field scalaz/TreeLocInstances$$anon$1.scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
      83: aload_1
      84: invokevirtual #1100               // Method scala/Tuple3._1:()Ljava/lang/Object;
      87: aload_2
      88: aload_1
      89: invokedynamic #1331,  0           // InvokeDynamic #14:apply:(Lscala/Function1;Lscala/Tuple3;)Lscala/Function0;
      94: aload_3
      95: invokeinterface #1318,  4         // InterfaceMethod scalaz/Traverse.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     100: areturn
     101: new           #1290               // class scala/MatchError
     104: dup
     105: aload         4
     107: invokespecial #1293               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     110: athrow

  public java.lang.Object foldMapRight1(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1096               // class scala/Tuple3
       5: aload_2
       6: aload_3
       7: invokevirtual #1333               // Method foldMapRight1:(Lscala/Tuple3;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object traverse1Impl(java.lang.Object, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1096               // class scala/Tuple3
       5: aload_2
       6: aload_3
       7: invokevirtual #1335               // Method traverse1Impl:(Lscala/Tuple3;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1096               // class scala/Tuple3
       5: aload_2
       6: aload_3
       7: invokevirtual #1337               // Method foldMap:(Lscala/Tuple3;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1096               // class scala/Tuple3
       5: aload_2
       6: aload_3
       7: invokevirtual #1339               // Method foldLeft:(Lscala/Tuple3;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      10: areturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1096               // class scala/Tuple3
       5: aload_2
       6: invokevirtual #1341               // Method any:(Lscala/Tuple3;Lscala/Function1;)Z
       9: ireturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1096               // class scala/Tuple3
       5: aload_2
       6: invokevirtual #1343               // Method all:(Lscala/Tuple3;Lscala/Function1;)Z
       9: ireturn

  public static final java.lang.Object $anonfun$foldMap$4(scala.Function1, scala.Tuple3);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1106               // Method scala/Tuple3._2:()Ljava/lang/Object;
       5: invokeinterface #1110,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static final java.lang.Object $anonfun$foldMap$5(scalaz.TreeLocInstances$$anon$1$$anon$2, scala.Tuple3, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: getfield      #1091               // Field $outer:Lscalaz/TreeLocInstances$$anon$1;
       4: getfield      #1094               // Field scalaz/TreeLocInstances$$anon$1.scalaz$TreeLocInstances$$anon$$ForestT:Lscalaz/Traverse;
       7: aload_1
       8: invokevirtual #1118               // Method scala/Tuple3._3:()Ljava/lang/Object;
      11: aload_2
      12: aload_3
      13: invokeinterface #1137,  4         // InterfaceMethod scalaz/Traverse.foldMap:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      18: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$40(scalaz.TreeLocInstances$$anon$1$$anon$2, scalaz.Tree, scalaz.EphemeralStream, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: getfield      #1091               // Field $outer:Lscalaz/TreeLocInstances$$anon$1;
       4: getfield      #1354               // Field scalaz/TreeLocInstances$$anon$1.scalaz$TreeLocInstances$$anon$$ForestT1:Lscalaz/Traverse1;
       7: getstatic     #1359               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
      10: pop
      11: getstatic     #1362               // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
      14: aload_1
      15: aload_2
      16: invokevirtual #1365               // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
      19: aload_3
      20: aload         4
      22: invokeinterface #1367,  4         // InterfaceMethod scalaz/Traverse1.traverse1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      27: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$41(scala.Function1, scala.Tuple3);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1106               // Method scala/Tuple3._2:()Ljava/lang/Object;
       5: invokeinterface #1110,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$42(scalaz.TreeLocInstances$$anon$1$$anon$2, scalaz.Tree, scalaz.EphemeralStream, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: getfield      #1091               // Field $outer:Lscalaz/TreeLocInstances$$anon$1;
       4: getfield      #1354               // Field scalaz/TreeLocInstances$$anon$1.scalaz$TreeLocInstances$$anon$$ForestT1:Lscalaz/Traverse1;
       7: getstatic     #1359               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
      10: pop
      11: getstatic     #1362               // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
      14: aload_1
      15: aload_2
      16: invokevirtual #1365               // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
      19: aload_3
      20: aload         4
      22: invokeinterface #1367,  4         // InterfaceMethod scalaz/Traverse1.traverse1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      27: areturn

  public static final scalaz.EphemeralStream $anonfun$traverse1Impl$44(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #1376               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #21                 // class scalaz/EphemeralStream
       7: areturn

  public static final scalaz.EphemeralStream $anonfun$traverse1Impl$45(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #1376               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #21                 // class scalaz/EphemeralStream
       7: areturn

  public static final scala.Tuple3 $anonfun$traverse1Impl$43(scalaz.OneAnd, java.lang.Object, scalaz.OneAnd);
    Code:
       0: new           #1096               // class scala/Tuple3
       3: dup
       4: aload_0
       5: invokevirtual #1385               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       8: checkcast     #1197               // class scalaz/Tree
      11: astore_3
      12: getstatic     #1390               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      15: pop
      16: aload_0
      17: invokedynamic #1398,  0           // InvokeDynamic #15:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      22: astore        5
      24: new           #24                 // class scalaz/EphemeralStream$ConsWrap
      27: dup
      28: aload         5
      30: invokespecial #1401               // Method scalaz/EphemeralStream$ConsWrap."<init>":(Lscala/Function0;)V
      33: aconst_null
      34: astore        5
      36: aload_3
      37: invokevirtual #1404               // Method scalaz/EphemeralStream$ConsWrap.$hash$hash$colon$colon:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
      40: aload_1
      41: aload_2
      42: invokevirtual #1385               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      45: checkcast     #1197               // class scalaz/Tree
      48: astore        4
      50: getstatic     #1390               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      53: pop
      54: aload_2
      55: invokedynamic #1408,  0           // InvokeDynamic #16:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      60: astore        6
      62: new           #24                 // class scalaz/EphemeralStream$ConsWrap
      65: dup
      66: aload         6
      68: invokespecial #1401               // Method scalaz/EphemeralStream$ConsWrap."<init>":(Lscala/Function0;)V
      71: aconst_null
      72: astore        6
      74: aload         4
      76: invokevirtual #1404               // Method scalaz/EphemeralStream$ConsWrap.$hash$hash$colon$colon:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
      79: invokespecial #1411               // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      82: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$46(scalaz.TreeLocInstances$$anon$1$$anon$2, scalaz.Tree, scalaz.EphemeralStream, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: getfield      #1091               // Field $outer:Lscalaz/TreeLocInstances$$anon$1;
       4: getfield      #1354               // Field scalaz/TreeLocInstances$$anon$1.scalaz$TreeLocInstances$$anon$$ForestT1:Lscalaz/Traverse1;
       7: getstatic     #1359               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
      10: pop
      11: getstatic     #1362               // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
      14: aload_1
      15: aload_2
      16: invokevirtual #1365               // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
      19: aload_3
      20: aload         4
      22: invokeinterface #1367,  4         // InterfaceMethod scalaz/Traverse1.traverse1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      27: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$47(scala.Function1, scala.Tuple3);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1106               // Method scala/Tuple3._2:()Ljava/lang/Object;
       5: invokeinterface #1110,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static final scalaz.EphemeralStream $anonfun$traverse1Impl$49(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #1376               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #21                 // class scalaz/EphemeralStream
       7: areturn

  public static final scala.Tuple3 $anonfun$traverse1Impl$48(scalaz.OneAnd, java.lang.Object);
    Code:
       0: new           #1096               // class scala/Tuple3
       3: dup
       4: aload_0
       5: invokevirtual #1385               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       8: checkcast     #1197               // class scalaz/Tree
      11: astore_2
      12: getstatic     #1390               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      15: pop
      16: aload_0
      17: invokedynamic #1422,  0           // InvokeDynamic #17:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      22: astore_3
      23: new           #24                 // class scalaz/EphemeralStream$ConsWrap
      26: dup
      27: aload_3
      28: invokespecial #1401               // Method scalaz/EphemeralStream$ConsWrap."<init>":(Lscala/Function0;)V
      31: aconst_null
      32: astore_3
      33: aload_2
      34: invokevirtual #1404               // Method scalaz/EphemeralStream$ConsWrap.$hash$hash$colon$colon:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
      37: aload_1
      38: getstatic     #1390               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      41: pop
      42: new           #17                 // class scalaz/EphemeralStream$$anon$4
      45: dup
      46: invokespecial #1425               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
      49: invokespecial #1411               // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      52: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$50(scala.Function1, scala.Tuple3);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1106               // Method scala/Tuple3._2:()Ljava/lang/Object;
       5: invokeinterface #1110,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$51(scalaz.TreeLocInstances$$anon$1$$anon$2, scalaz.Tree, scalaz.EphemeralStream, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: getfield      #1091               // Field $outer:Lscalaz/TreeLocInstances$$anon$1;
       4: getfield      #1354               // Field scalaz/TreeLocInstances$$anon$1.scalaz$TreeLocInstances$$anon$$ForestT1:Lscalaz/Traverse1;
       7: getstatic     #1359               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
      10: pop
      11: getstatic     #1362               // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
      14: aload_1
      15: aload_2
      16: invokevirtual #1365               // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
      19: aload_3
      20: aload         4
      22: invokeinterface #1367,  4         // InterfaceMethod scalaz/Traverse1.traverse1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      27: areturn

  public static final scalaz.EphemeralStream $anonfun$traverse1Impl$53(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #1376               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #21                 // class scalaz/EphemeralStream
       7: areturn

  public static final scala.Tuple3 $anonfun$traverse1Impl$52(java.lang.Object, scalaz.OneAnd);
    Code:
       0: new           #1096               // class scala/Tuple3
       3: dup
       4: getstatic     #1390               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
       7: pop
       8: new           #17                 // class scalaz/EphemeralStream$$anon$4
      11: dup
      12: invokespecial #1425               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
      15: aload_0
      16: aload_1
      17: invokevirtual #1385               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      20: checkcast     #1197               // class scalaz/Tree
      23: astore_2
      24: getstatic     #1390               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      27: pop
      28: aload_1
      29: invokedynamic #1435,  0           // InvokeDynamic #18:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      34: astore_3
      35: new           #24                 // class scalaz/EphemeralStream$ConsWrap
      38: dup
      39: aload_3
      40: invokespecial #1401               // Method scalaz/EphemeralStream$ConsWrap."<init>":(Lscala/Function0;)V
      43: aconst_null
      44: astore_3
      45: aload_2
      46: invokevirtual #1404               // Method scalaz/EphemeralStream$ConsWrap.$hash$hash$colon$colon:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
      49: invokespecial #1411               // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      52: areturn

  public static final scala.Tuple3 $anonfun$traverse1Impl$54(java.lang.Object);
    Code:
       0: new           #1096               // class scala/Tuple3
       3: dup
       4: getstatic     #1390               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
       7: pop
       8: new           #17                 // class scalaz/EphemeralStream$$anon$4
      11: dup
      12: invokespecial #1425               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
      15: aload_0
      16: getstatic     #1390               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      19: pop
      20: new           #17                 // class scalaz/EphemeralStream$$anon$4
      23: dup
      24: invokespecial #1425               // Method scalaz/EphemeralStream$$anon$4."<init>":()V
      27: invokespecial #1411               // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      30: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$8(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$7(scala.Function2, scala.Tuple3, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1106               // Method scala/Tuple3._2:()Ljava/lang/Object;
       5: aload_2
       6: invokedynamic #1446,  0           // InvokeDynamic #19:apply:(Ljava/lang/Object;)Lscala/Function0;
      11: invokeinterface #1131,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$9(scala.Function1, scala.Tuple3);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1106               // Method scala/Tuple3._2:()Ljava/lang/Object;
       5: invokeinterface #1110,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public scalaz.TreeLocInstances$$anon$1$$anon$2(scalaz.TreeLocInstances$$anon$1);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #1091               // Field $outer:Lscalaz/TreeLocInstances$$anon$1;
      11: aload_0
      12: invokespecial #1449               // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #1453               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      19: aload_0
      20: invokestatic  #1456               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      23: aload_0
      24: invokestatic  #1459               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      27: aload_0
      28: invokestatic  #1462               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      31: aload_0
      32: invokestatic  #1465               // InterfaceMethod scalaz/Foldable1.$init$:(Lscalaz/Foldable1;)V
      35: aload_0
      36: invokestatic  #1468               // InterfaceMethod scalaz/Traverse1.$init$:(Lscalaz/Traverse1;)V
      39: invokestatic  #1473               // Method scala/runtime/Statics.releaseFence:()V
      42: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #1485,  0           // InvokeDynamic #20:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
