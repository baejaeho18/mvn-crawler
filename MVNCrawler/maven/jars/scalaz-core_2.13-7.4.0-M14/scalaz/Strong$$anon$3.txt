Compiled from "Strong.scala"
public final class scalaz.Strong$$anon$3 implements scalaz.IsomorphismStrong<F, G> {
  private scalaz.syntax.StrongSyntax<F> strongSyntax;

  private scalaz.syntax.ProfunctorSyntax<F> profunctorSyntax;

  private final scalaz.Strong E$1;

  private final scalaz.Isomorphisms$Iso3 D$1;

  public <A, B, C> F first(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #46                 // InterfaceMethod scalaz/IsomorphismStrong.first$:(Lscalaz/IsomorphismStrong;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A, B, C> F second(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #53                 // InterfaceMethod scalaz/IsomorphismStrong.second$:(Lscalaz/IsomorphismStrong;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A, B, C> F mapfst(F, scala.Function1<C, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #64                 // InterfaceMethod scalaz/IsomorphismProfunctor.mapfst$:(Lscalaz/IsomorphismProfunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B, C> F mapsnd(F, scala.Function1<B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #70                 // InterfaceMethod scalaz/IsomorphismProfunctor.mapsnd$:(Lscalaz/IsomorphismProfunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.Strong<F>.StrongLaws strongLaw();
    Code:
       0: aload_0
       1: invokestatic  #77                 // InterfaceMethod scalaz/Strong.strongLaw$:(Lscalaz/Strong;)Lscalaz/Strong$StrongLaws;
       4: areturn

  public <A, B, C, D> F dimap(F, scala.Function1<C, A>, scala.Function1<B, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #85                 // InterfaceMethod scalaz/Profunctor.dimap$:(Lscalaz/Profunctor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scalaz.InvariantFunctor<?> invariantFunctor();
    Code:
       0: aload_0
       1: invokestatic  #92                 // InterfaceMethod scalaz/Profunctor.invariantFunctor$:(Lscalaz/Profunctor;)Lscalaz/InvariantFunctor;
       4: areturn

  public <C> scalaz.Functor<?> covariantInstance();
    Code:
       0: aload_0
       1: invokestatic  #99                 // InterfaceMethod scalaz/Profunctor.covariantInstance$:(Lscalaz/Profunctor;)Lscalaz/Functor;
       4: areturn

  public <C> scalaz.Contravariant<?> contravariantInstance();
    Code:
       0: aload_0
       1: invokestatic  #106                // InterfaceMethod scalaz/Profunctor.contravariantInstance$:(Lscalaz/Profunctor;)Lscalaz/Contravariant;
       4: areturn

  public scalaz.Profunctor<F>.ProfunctorLaw profunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #113                // InterfaceMethod scalaz/Profunctor.profunctorLaw$:(Lscalaz/Profunctor;)Lscalaz/Profunctor$ProfunctorLaw;
       4: areturn

  public scalaz.syntax.StrongSyntax<F> strongSyntax();
    Code:
       0: aload_0
       1: getfield      #117                // Field strongSyntax:Lscalaz/syntax/StrongSyntax;
       4: areturn

  public void scalaz$Strong$_setter_$strongSyntax_$eq(scalaz.syntax.StrongSyntax<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #117                // Field strongSyntax:Lscalaz/syntax/StrongSyntax;
       5: return

  public scalaz.syntax.ProfunctorSyntax<F> profunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #125                // Field profunctorSyntax:Lscalaz/syntax/ProfunctorSyntax;
       4: areturn

  public void scalaz$Profunctor$_setter_$profunctorSyntax_$eq(scalaz.syntax.ProfunctorSyntax<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #125                // Field profunctorSyntax:Lscalaz/syntax/ProfunctorSyntax;
       5: return

  public scalaz.Strong<G> G();
    Code:
       0: aload_0
       1: getfield      #133                // Field E$1:Lscalaz/Strong;
       4: areturn

  public scalaz.Isomorphisms$Iso3<scalaz.BiNaturalTransformation, F, G> iso();
    Code:
       0: aload_0
       1: getfield      #138                // Field D$1:Lscalaz/Isomorphisms$Iso3;
       4: areturn

  public scalaz.Profunctor G();
    Code:
       0: aload_0
       1: invokevirtual #141                // Method G:()Lscalaz/Strong;
       4: areturn

  public scalaz.Strong$$anon$3(scalaz.Strong, scalaz.Isomorphisms$Iso3);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #133                // Field E$1:Lscalaz/Strong;
       5: aload_0
       6: aload_2
       7: putfield      #138                // Field D$1:Lscalaz/Isomorphisms$Iso3;
      10: aload_0
      11: invokespecial #146                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #150                // InterfaceMethod scalaz/Profunctor.$init$:(Lscalaz/Profunctor;)V
      18: aload_0
      19: invokestatic  #153                // InterfaceMethod scalaz/Strong.$init$:(Lscalaz/Strong;)V
      22: invokestatic  #158                // Method scala/runtime/Statics.releaseFence:()V
      25: return
}
