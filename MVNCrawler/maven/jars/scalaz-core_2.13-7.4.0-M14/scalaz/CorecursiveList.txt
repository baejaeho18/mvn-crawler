Compiled from "CorecursiveList.scala"
public abstract class scalaz.CorecursiveList<A> {
  public static <A> scalaz.Order<scalaz.CorecursiveList<A>> orderInstance(scalaz.Order<A>);
    Code:
       0: getstatic     #34                 // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: pop
       4: new           #11                 // class scalaz/CorecursiveList$$anon$6
       7: dup
       8: aload_0
       9: invokespecial #38                 // Method scalaz/CorecursiveList$$anon$6."<init>":(Lscalaz/Order;)V
      12: areturn

  public static <A> scalaz.Monoid<scalaz.CorecursiveList<A>> monoidInstance();
    Code:
       0: getstatic     #34                 // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: invokevirtual #44                 // Method scalaz/CorecursiveList$.monoidInstance:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.MonadPlus<scalaz.CorecursiveList> covariantInstance();
    Code:
       0: getstatic     #34                 // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: invokevirtual #49                 // Method scalaz/CorecursiveList$.covariantInstance:()Lscalaz/MonadPlus;
       6: areturn

  public static <A> scalaz.CorecursiveList<A> cons(A, scalaz.CorecursiveList<A>);
    Code:
       0: getstatic     #34                 // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: aload_0
       4: aload_1
       5: invokevirtual #56                 // Method scalaz/CorecursiveList$.cons:(Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscalaz/CorecursiveList;
       8: areturn

  public static <A> scalaz.CorecursiveList<A> fromLazyList(scala.collection.immutable.LazyList<A>);
    Code:
       0: getstatic     #34                 // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: aload_0
       4: invokevirtual #64                 // Method scalaz/CorecursiveList$.fromLazyList:(Lscala/collection/immutable/LazyList;)Lscalaz/CorecursiveList;
       7: areturn

  public static scalaz.NaturalTransformation<scala.collection.immutable.IndexedSeq, scalaz.CorecursiveList> fromVector();
    Code:
       0: getstatic     #34                 // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: invokevirtual #70                 // Method scalaz/CorecursiveList$.fromVector:()Lscalaz/NaturalTransformation;
       6: areturn

  public static scalaz.NaturalTransformation<scala.collection.immutable.LinearSeq, scalaz.CorecursiveList> fromList();
    Code:
       0: getstatic     #34                 // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: invokevirtual #74                 // Method scalaz/CorecursiveList$.fromList:()Lscalaz/NaturalTransformation;
       6: areturn

  public static scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, scala.collection.immutable.LazyList, scalaz.CorecursiveList> lazyListIso();
    Code:
       0: getstatic     #34                 // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: invokevirtual #79                 // Method scalaz/CorecursiveList$.lazyListIso:()Lscalaz/Isomorphisms$Iso2;
       6: areturn

  public static scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, scalaz.EphemeralStream, scalaz.CorecursiveList> ephemeralStreamIso();
    Code:
       0: getstatic     #34                 // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: invokevirtual #83                 // Method scalaz/CorecursiveList$.ephemeralStreamIso:()Lscalaz/Isomorphisms$Iso2;
       6: areturn

  public static <S, A> scalaz.CorecursiveList<A> apply(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, A>>>);
    Code:
       0: getstatic     #34                 // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: pop
       4: new           #13                 // class scalaz/CorecursiveList$CorecursiveListImpl
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #91                 // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      13: areturn

  public static <A> scalaz.Equal<scalaz.CorecursiveList<A>> equalInstance(scalaz.Equal<A>);
    Code:
       0: getstatic     #34                 // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: pop
       4: new           #19                 // class scalaz/CorecursiveListInstances$$anon$7
       7: dup
       8: aconst_null
       9: aload_0
      10: invokespecial #99                 // Method scalaz/CorecursiveListInstances$$anon$7."<init>":(Lscalaz/CorecursiveListInstances;Lscalaz/Equal;)V
      13: areturn

  public abstract java.lang.Object init();

  public abstract scala.Function1<java.lang.Object, scalaz.Maybe<scala.Tuple2<java.lang.Object, A>>> step();

  public scalaz.CorecursiveList();
    Code:
       0: aload_0
       1: invokespecial #106                // Method java/lang/Object."<init>":()V
       4: return
}
