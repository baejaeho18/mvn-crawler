Compiled from "Either.scala"
public abstract class scalaz.DisjunctionInstances extends scalaz.DisjunctionInstances0 {
  public <A, B> scalaz.Order<scalaz.$bslash$div<A, B>> DisjunctionOrder(scalaz.Order<A>, scalaz.Order<B>);
    Code:
       0: new           #10                 // class scalaz/DisjunctionInstances$$anon$1
       3: dup
       4: aconst_null
       5: aload_1
       6: aload_2
       7: invokespecial #21                 // Method scalaz/DisjunctionInstances$$anon$1."<init>":(Lscalaz/DisjunctionInstances;Lscalaz/Order;Lscalaz/Order;)V
      10: areturn

  public <A, B> scalaz.Monoid<scalaz.$bslash$div<A, B>> DisjunctionMonoid(scalaz.Semigroup<A>, scalaz.Monoid<B>);
    Code:
       0: new           #12                 // class scalaz/DisjunctionInstances$$anon$2
       3: dup
       4: aconst_null
       5: aload_2
       6: aload_1
       7: invokespecial #32                 // Method scalaz/DisjunctionInstances$$anon$2."<init>":(Lscalaz/DisjunctionInstances;Lscalaz/Monoid;Lscalaz/Semigroup;)V
      10: areturn

  public scalaz.DisjunctionInstances();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method scalaz/DisjunctionInstances0."<init>":()V
       4: return
}
