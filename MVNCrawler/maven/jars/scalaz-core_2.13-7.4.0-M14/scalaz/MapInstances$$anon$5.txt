Compiled from "Map.scala"
public final class scalaz.MapInstances$$anon$5 implements scalaz.Order<scalaz.$eq$eq$greater$greater<A, B>>, scalaz.MapEqual<A, B> {
  private scalaz.syntax.OrderSyntax<scalaz.$eq$eq$greater$greater<A, B>> orderSyntax;

  private scalaz.syntax.EqualSyntax<scalaz.$eq$eq$greater$greater<A, B>> equalSyntax;

  private final scalaz.Order evidence$6$1;

  private final scalaz.Order evidence$7$1;

  public final boolean equal(scalaz.$eq$eq$greater$greater<A, B>, scalaz.$eq$eq$greater$greater<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #45                 // InterfaceMethod scalaz/MapEqual.equal$:(Lscalaz/MapEqual;Lscalaz/$eq$eq$greater$greater;Lscalaz/$eq$eq$greater$greater;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #63                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #67                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #71                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #75                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #81                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #85                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #91                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scalaz.$eq$eq$greater$greater<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #99                 // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scalaz.$eq$eq$greater$greater<A, B>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #107                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scalaz.$eq$eq$greater$greater<A, B>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #114                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scalaz.$eq$eq$greater$greater<A, B>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #121                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #127                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.$eq$eq$greater$greater<A, B>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #134                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<scalaz.$eq$eq$greater$greater<A, B>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #138                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scalaz.$eq$eq$greater$greater<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #138                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scalaz.$eq$eq$greater$greater<A, B>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #146                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.$eq$eq$greater$greater<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #146                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Equal<A> A();
    Code:
       0: getstatic     #158                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #160                // Field evidence$6$1:Lscalaz/Order;
       7: invokevirtual #164                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #19                 // class scalaz/Equal
      13: areturn

  public scalaz.Equal<B> B();
    Code:
       0: getstatic     #158                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #168                // Field evidence$7$1:Lscalaz/Order;
       7: invokevirtual #164                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #19                 // class scalaz/Equal
      13: areturn

  public scalaz.Ordering order(scalaz.$eq$eq$greater$greater<A, B>, scalaz.$eq$eq$greater$greater<A, B>);
    Code:
       0: getstatic     #178                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: pop
       4: getstatic     #183                // Field scalaz/std/list$.MODULE$:Lscalaz/std/list$;
       7: pop
       8: getstatic     #188                // Field scalaz/std/tuple$.MODULE$:Lscalaz/std/tuple$;
      11: pop
      12: aload_0
      13: getfield      #160                // Field evidence$6$1:Lscalaz/Order;
      16: aload_0
      17: getfield      #168                // Field evidence$7$1:Lscalaz/Order;
      20: astore        4
      22: astore_3
      23: new           #27                 // class scalaz/std/TupleInstances3$$anon$59
      26: dup
      27: aconst_null
      28: aload_3
      29: aload         4
      31: invokespecial #192                // Method scalaz/std/TupleInstances3$$anon$59."<init>":(Lscalaz/std/TupleInstances3;Lscalaz/Order;Lscalaz/Order;)V
      34: aconst_null
      35: astore_3
      36: aconst_null
      37: astore        4
      39: astore        5
      41: new           #25                 // class scalaz/std/ListInstances$$anon$3
      44: dup
      45: aconst_null
      46: aload         5
      48: invokespecial #195                // Method scalaz/std/ListInstances$$anon$3."<init>":(Lscalaz/std/ListInstances;Lscalaz/Order;)V
      51: aconst_null
      52: astore        5
      54: aload_1
      55: invokevirtual #201                // Method scalaz/$eq$eq$greater$greater.toAscList:()Lscala/collection/immutable/List;
      58: aload_2
      59: invokevirtual #201                // Method scalaz/$eq$eq$greater$greater.toAscList:()Lscala/collection/immutable/List;
      62: invokestatic  #207                // InterfaceMethod scalaz/std/ListOrder.order$:(Lscalaz/std/ListOrder;Lscala/collection/immutable/List;Lscala/collection/immutable/List;)Lscalaz/Ordering;
      65: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #213                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #197                // class scalaz/$eq$eq$greater$greater
       5: aload_2
       6: checkcast     #197                // class scalaz/$eq$eq$greater$greater
       9: invokevirtual #215                // Method equal:(Lscalaz/$eq$eq$greater$greater;Lscalaz/$eq$eq$greater$greater;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #197                // class scalaz/$eq$eq$greater$greater
       5: aload_2
       6: checkcast     #197                // class scalaz/$eq$eq$greater$greater
       9: invokevirtual #217                // Method order:(Lscalaz/$eq$eq$greater$greater;Lscalaz/$eq$eq$greater$greater;)Lscalaz/Ordering;
      12: areturn

  public scalaz.MapInstances$$anon$5(scalaz.MapInstances, scalaz.Order, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #160                // Field evidence$6$1:Lscalaz/Order;
       5: aload_0
       6: aload_3
       7: putfield      #168                // Field evidence$7$1:Lscalaz/Order;
      10: aload_0
      11: invokespecial #222                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #226                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      18: aload_0
      19: invokestatic  #229                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      22: invokestatic  #234                // Method scala/runtime/Statics.releaseFence:()V
      25: return
}
