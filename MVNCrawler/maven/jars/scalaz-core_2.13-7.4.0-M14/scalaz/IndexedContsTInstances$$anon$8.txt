Compiled from "IndexedContsT.scala"
public final class scalaz.IndexedContsTInstances$$anon$8 implements scalaz.IndexedContsTBifunctor<W, M, O> {
  private final scalaz.Functor<W> W;

  private final scalaz.Functor<M> M;

  private scalaz.syntax.BifunctorSyntax<?> bifunctorSyntax;

  public <A, B, C, D> scalaz.IndexedContsT<W, C, O, M, D> bimap(scalaz.IndexedContsT<W, A, O, M, B>, scala.Function1<A, C>, scala.Function1<B, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #31                 // InterfaceMethod scalaz/IndexedContsTBifunctor.bimap$:(Lscalaz/IndexedContsTBifunctor;Lscalaz/IndexedContsT;Lscala/Function1;Lscala/Function1;)Lscalaz/IndexedContsT;
       7: areturn

  public <X> scalaz.Functor<?> leftFunctor();
    Code:
       0: aload_0
       1: invokestatic  #42                 // InterfaceMethod scalaz/IndexedContsTBifunctor.leftFunctor$:(Lscalaz/IndexedContsTBifunctor;)Lscalaz/Functor;
       4: areturn

  public <A, B, C> scalaz.IndexedContsT<W, C, O, M, B> leftMap(scalaz.IndexedContsT<W, A, O, M, B>, scala.Function1<A, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #50                 // InterfaceMethod scalaz/IndexedContsTBifunctor.leftMap$:(Lscalaz/IndexedContsTBifunctor;Lscalaz/IndexedContsT;Lscala/Function1;)Lscalaz/IndexedContsT;
       6: areturn

  public <X> scalaz.Functor<?> rightFunctor();
    Code:
       0: aload_0
       1: invokestatic  #54                 // InterfaceMethod scalaz/IndexedContsTBifunctor.rightFunctor$:(Lscalaz/IndexedContsTBifunctor;)Lscalaz/Functor;
       4: areturn

  public <A, B, D> scalaz.IndexedContsT<W, A, O, M, D> rightMap(scalaz.IndexedContsT<W, A, O, M, B>, scala.Function1<B, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #59                 // InterfaceMethod scalaz/IndexedContsTBifunctor.rightMap$:(Lscalaz/IndexedContsTBifunctor;Lscalaz/IndexedContsT;Lscala/Function1;)Lscalaz/IndexedContsT;
       6: areturn

  public <G> scalaz.Bifunctor<?> compose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #69                 // InterfaceMethod scalaz/Bifunctor.compose$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Bifunctor<?> product(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #74                 // InterfaceMethod scalaz/Bifunctor.product$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public scalaz.Functor<?> uFunctor();
    Code:
       0: aload_0
       1: invokestatic  #80                 // InterfaceMethod scalaz/Bifunctor.uFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public java.lang.Object umap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #87                 // InterfaceMethod scalaz/Bifunctor.umap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G, H> scalaz.Bifunctor<?> embed(scalaz.Functor<G>, scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #95                 // InterfaceMethod scalaz/Bifunctor.embed$:(Lscalaz/Bifunctor;Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       6: areturn

  public <G> scalaz.Bifunctor<?> embedLeft(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #102                // InterfaceMethod scalaz/Bifunctor.embedLeft$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public <H> scalaz.Bifunctor<?> embedRight(scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #107                // InterfaceMethod scalaz/Bifunctor.embedRight$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public java.lang.Object widen(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #113                // InterfaceMethod scalaz/Bifunctor.widen$:(Lscalaz/Bifunctor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.syntax.BifunctorSyntax<?> bifunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #117                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       4: areturn

  public void scalaz$Bifunctor$_setter_$bifunctorSyntax_$eq(scalaz.syntax.BifunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #117                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       5: return

  public scalaz.Functor<W> W();
    Code:
       0: aload_0
       1: getfield      #124                // Field W:Lscalaz/Functor;
       4: areturn

  public scalaz.Functor<M> M();
    Code:
       0: aload_0
       1: getfield      #127                // Field M:Lscalaz/Functor;
       4: areturn

  public java.lang.Object rightMap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #129                // class scalaz/IndexedContsT
       5: aload_2
       6: invokevirtual #131                // Method rightMap:(Lscalaz/IndexedContsT;Lscala/Function1;)Lscalaz/IndexedContsT;
       9: areturn

  public java.lang.Object leftMap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #129                // class scalaz/IndexedContsT
       5: aload_2
       6: invokevirtual #133                // Method leftMap:(Lscalaz/IndexedContsT;Lscala/Function1;)Lscalaz/IndexedContsT;
       9: areturn

  public java.lang.Object bimap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #129                // class scalaz/IndexedContsT
       5: aload_2
       6: aload_3
       7: invokevirtual #136                // Method bimap:(Lscalaz/IndexedContsT;Lscala/Function1;Lscala/Function1;)Lscalaz/IndexedContsT;
      10: areturn

  public scalaz.IndexedContsTInstances$$anon$8(scalaz.IndexedContsTInstances, scalaz.Functor, scalaz.Functor);
    Code:
       0: aload_0
       1: invokespecial #144                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #148                // InterfaceMethod scalaz/Bifunctor.$init$:(Lscalaz/Bifunctor;)V
       8: aload_0
       9: aload_2
      10: putfield      #124                // Field W:Lscalaz/Functor;
      13: aload_0
      14: aload_3
      15: putfield      #127                // Field M:Lscalaz/Functor;
      18: invokestatic  #153                // Method scala/runtime/Statics.releaseFence:()V
      21: return
}
