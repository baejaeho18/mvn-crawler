Compiled from "OneAnd.scala"
public final class scalaz.OneAndInstances$$anon$15 implements scalaz.Zip<?> {
  private scalaz.syntax.ZipSyntax<?> zipSyntax;

  private final scalaz.Zip evidence$20$1;

  public <G> scalaz.Zip<?> compose(scalaz.Functor<?>, scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #40                 // InterfaceMethod scalaz/Zip.compose$:(Lscalaz/Zip;Lscalaz/Functor;Lscalaz/Zip;)Lscalaz/Zip;
       6: areturn

  public <G> scalaz.Zip<?> product(scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #49                 // InterfaceMethod scalaz/Zip.product$:(Lscalaz/Zip;Lscalaz/Zip;)Lscalaz/Zip;
       5: areturn

  public java.lang.Object zipWith(scala.Function0, scala.Function0, scala.Function2, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #59                 // InterfaceMethod scalaz/Zip.zipWith$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Functor;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apzip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #68                 // InterfaceMethod scalaz/Zip.apzip$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apzipPL(scala.Function0, scala.Function0, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #75                 // InterfaceMethod scalaz/Zip.apzipPL$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scalaz.Apply<?> ap(scalaz.Functor<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #83                 // InterfaceMethod scalaz/Zip.ap$:(Lscalaz/Zip;Lscalaz/Functor;)Lscalaz/Apply;
       5: areturn

  public scalaz.Zip<?>.ZipLaw zipLaw();
    Code:
       0: aload_0
       1: invokestatic  #90                 // InterfaceMethod scalaz/Zip.zipLaw$:(Lscalaz/Zip;)Lscalaz/Zip$ZipLaw;
       4: areturn

  public scalaz.syntax.ZipSyntax<?> zipSyntax();
    Code:
       0: aload_0
       1: getfield      #94                 // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       4: areturn

  public void scalaz$Zip$_setter_$zipSyntax_$eq(scalaz.syntax.ZipSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #94                 // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       5: return

  public <A, B> scalaz.OneAnd<F, scala.Tuple2<A, B>> zip(scala.Function0<scalaz.OneAnd<F, A>>, scala.Function0<scalaz.OneAnd<F, B>>);
    Code:
       0: aload_1
       1: invokeinterface #108,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #22                 // class scalaz/OneAnd
       9: astore_3
      10: aload_2
      11: invokeinterface #108,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: checkcast     #22                 // class scalaz/OneAnd
      19: astore        4
      21: getstatic     #114                // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
      24: pop
      25: new           #116                // class scala/Tuple2
      28: dup
      29: aload_3
      30: invokevirtual #119                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      33: aload         4
      35: invokevirtual #119                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      38: invokespecial #123                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      41: getstatic     #128                // Field scalaz/Zip$.MODULE$:Lscalaz/Zip$;
      44: pop
      45: aload_0
      46: getfield      #130                // Field evidence$20$1:Lscalaz/Zip;
      49: aload_3
      50: invokedynamic #147,  0            // InvokeDynamic #0:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      55: aload         4
      57: invokedynamic #152,  0            // InvokeDynamic #1:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      62: invokeinterface #154,  3          // InterfaceMethod scalaz/Zip.zip:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      67: astore        6
      69: astore        5
      71: getstatic     #157                // Field scalaz/OneAnd$Strict$.MODULE$:Lscalaz/OneAnd$Strict$;
      74: aload         5
      76: aload         6
      78: invokevirtual #160                // Method scalaz/OneAnd$Strict$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
      81: areturn

  public java.lang.Object zip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #168                // Method zip:(Lscala/Function0;Lscala/Function0;)Lscalaz/OneAnd;
       6: areturn

  public static final java.lang.Object $anonfun$zip$1(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #172                // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: areturn

  public static final java.lang.Object $anonfun$zip$2(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #172                // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: areturn

  public scalaz.OneAndInstances$$anon$15(scalaz.OneAndInstances, scalaz.Zip);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #130                // Field evidence$20$1:Lscalaz/Zip;
       5: aload_0
       6: invokespecial #178                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #182                // InterfaceMethod scalaz/Zip.$init$:(Lscalaz/Zip;)V
      13: invokestatic  #187                // Method scala/runtime/Statics.releaseFence:()V
      16: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #200,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
