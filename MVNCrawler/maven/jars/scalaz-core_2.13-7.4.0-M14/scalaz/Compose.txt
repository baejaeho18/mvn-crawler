Compiled from "Compose.scala"
public interface scalaz.Compose<$eq$greater$colon> {
  public static <F, G> scalaz.Compose<F> fromIso(scalaz.Isomorphisms$Iso3<scalaz.BiNaturalTransformation, F, G>, scalaz.Compose<G>);
    Code:
       0: getstatic     #44                 // Field scalaz/Compose$.MODULE$:Lscalaz/Compose$;
       3: pop
       4: new           #19                 // class scalaz/Compose$$anon$5
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #48                 // Method scalaz/Compose$$anon$5."<init>":(Lscalaz/Compose;Lscalaz/Isomorphisms$Iso3;)V
      13: areturn

  public static <F> scalaz.Compose<F> apply(scalaz.Compose<F>);
    Code:
       0: getstatic     #44                 // Field scalaz/Compose$.MODULE$:Lscalaz/Compose$;
       3: pop
       4: aload_0
       5: areturn

  public abstract void scalaz$Compose$_setter_$composeSyntax_$eq(scalaz.syntax.ComposeSyntax<$eq$greater$colon>);

  public abstract <A, B, C> $eq$greater$colon compose($eq$greater$colon, $eq$greater$colon);

  public static scalaz.Plus plus$(scalaz.Compose);
    Code:
       0: aload_0
       1: invokespecial #70                 // InterfaceMethod plus:()Lscalaz/Plus;
       4: areturn

  public default scalaz.Plus<?> plus();
    Code:
       0: new           #11                 // class scalaz/Compose$$anon$1
       3: dup
       4: aload_0
       5: invokespecial #74                 // Method scalaz/Compose$$anon$1."<init>":(Lscalaz/Compose;)V
       8: areturn

  public static scalaz.Semigroup semigroup$(scalaz.Compose);
    Code:
       0: aload_0
       1: invokespecial #81                 // InterfaceMethod semigroup:()Lscalaz/Semigroup;
       4: areturn

  public default <A> scalaz.Semigroup<$eq$greater$colon> semigroup();
    Code:
       0: new           #13                 // class scalaz/Compose$$anon$2
       3: dup
       4: aload_0
       5: invokespecial #83                 // Method scalaz/Compose$$anon$2."<init>":(Lscalaz/Compose;)V
       8: areturn

  public static scalaz.Compose$ComposeLaw composeLaw$(scalaz.Compose);
    Code:
       0: aload_0
       1: invokespecial #89                 // InterfaceMethod composeLaw:()Lscalaz/Compose$ComposeLaw;
       4: areturn

  public default scalaz.Compose<$eq$greater$colon>.ComposeLaw composeLaw();
    Code:
       0: new           #15                 // class scalaz/Compose$$anon$3
       3: dup
       4: aload_0
       5: invokespecial #91                 // Method scalaz/Compose$$anon$3."<init>":(Lscalaz/Compose;)V
       8: areturn

  public abstract scalaz.syntax.ComposeSyntax<$eq$greater$colon> composeSyntax();

  public static void $init$(scalaz.Compose);
    Code:
       0: aload_0
       1: new           #17                 // class scalaz/Compose$$anon$4
       4: dup
       5: aload_0
       6: invokespecial #96                 // Method scalaz/Compose$$anon$4."<init>":(Lscalaz/Compose;)V
       9: invokeinterface #98,  2           // InterfaceMethod scalaz$Compose$_setter_$composeSyntax_$eq:(Lscalaz/syntax/ComposeSyntax;)V
      14: return
}
