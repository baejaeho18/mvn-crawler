Compiled from "LazyOption.scala"
public final class scalaz.LazyOptionInstances$$anon$2 implements scalaz.Monoid<scalaz.LazyOption<A>> {
  private scalaz.syntax.MonoidSyntax<scalaz.LazyOption<A>> monoidSyntax;

  private scalaz.syntax.SemigroupSyntax<scalaz.LazyOption<A>> semigroupSyntax;

  private final scalaz.Semigroup evidence$4$1;

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #42                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #54                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #63                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #72                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #77                 // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #84                 // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #89                 // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #96                 // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #103                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scalaz.LazyOption<A>>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #110                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #115                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<scalaz.LazyOption<A>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.LazyOption<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #122                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.LazyOption<A>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.LazyOption<A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #127                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #134                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #141                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.LazyOption<A>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #148                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<scalaz.LazyOption<A>> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #152                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scalaz.LazyOption<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #152                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.LazyOption<A>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #160                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.LazyOption<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #160                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.LazyOption<A> zero();
    Code:
       0: getstatic     #172                // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
       3: pop
       4: getstatic     #177                // Field scalaz/LazyNone$.MODULE$:Lscalaz/LazyNone$;
       7: invokevirtual #181                // Method scalaz/LazyNone$.none:()Lscalaz/LazyNone;
      10: areturn

  public scalaz.LazyOption<A> append(scalaz.LazyOption<A>, scala.Function0<scalaz.LazyOption<A>>);
    Code:
       0: new           #187                // class scala/Tuple2
       3: dup
       4: aload_2
       5: invokeinterface #192,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: astore        10
      12: aload_1
      13: aload         10
      15: invokespecial #196                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      18: astore_3
      19: aload         10
      21: checkcast     #198                // class scalaz/LazyOption
      24: astore        4
      26: aload_1
      27: instanceof    #200                // class scalaz/LazySome
      30: ifeq          78
      33: aload_1
      34: checkcast     #200                // class scalaz/LazySome
      37: invokevirtual #203                // Method scalaz/LazySome.a:()Lscala/Function0;
      40: astore        5
      42: aload         4
      44: instanceof    #200                // class scalaz/LazySome
      47: ifeq          78
      50: aload         4
      52: checkcast     #200                // class scalaz/LazySome
      55: invokevirtual #203                // Method scalaz/LazySome.a:()Lscala/Function0;
      58: astore        6
      60: new           #200                // class scalaz/LazySome
      63: dup
      64: aload_0
      65: aload         5
      67: aload         6
      69: invokedynamic #220,  0            // InvokeDynamic #0:apply:(Lscalaz/LazyOptionInstances$$anon$2;Lscala/Function0;Lscala/Function0;)Lscala/Function0;
      74: invokespecial #223                // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      77: areturn
      78: aload         10
      80: checkcast     #198                // class scalaz/LazyOption
      83: astore        7
      85: aload_1
      86: instanceof    #200                // class scalaz/LazySome
      89: ifeq          102
      92: aload         7
      94: instanceof    #225                // class scalaz/LazyNone
      97: ifeq          102
     100: aload_1
     101: areturn
     102: aload         10
     104: checkcast     #198                // class scalaz/LazyOption
     107: astore        8
     109: aload_1
     110: instanceof    #225                // class scalaz/LazyNone
     113: ifeq          130
     116: aload         8
     118: instanceof    #200                // class scalaz/LazySome
     121: ifeq          130
     124: aload         8
     126: checkcast     #200                // class scalaz/LazySome
     129: areturn
     130: aload         10
     132: checkcast     #198                // class scalaz/LazyOption
     135: astore        9
     137: aload_1
     138: instanceof    #225                // class scalaz/LazyNone
     141: ifeq          163
     144: aload         9
     146: instanceof    #225                // class scalaz/LazyNone
     149: ifeq          163
     152: getstatic     #172                // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
     155: pop
     156: getstatic     #177                // Field scalaz/LazyNone$.MODULE$:Lscalaz/LazyNone$;
     159: invokevirtual #181                // Method scalaz/LazyNone$.none:()Lscalaz/LazyNone;
     162: areturn
     163: new           #227                // class scala/MatchError
     166: dup
     167: aload_3
     168: invokespecial #230                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     171: athrow

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #198                // class scalaz/LazyOption
       5: aload_2
       6: invokevirtual #238                // Method append:(Lscalaz/LazyOption;Lscala/Function0;)Lscalaz/LazyOption;
       9: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #240                // Method zero:()Lscalaz/LazyOption;
       4: areturn

  public static final java.lang.Object $anonfun$append$1(scalaz.LazyOptionInstances$$anon$2, scala.Function0, scala.Function0);
    Code:
       0: getstatic     #248                // Field scalaz/Semigroup$.MODULE$:Lscalaz/Semigroup$;
       3: pop
       4: aload_0
       5: getfield      #250                // Field evidence$4$1:Lscalaz/Semigroup;
       8: aload_1
       9: invokeinterface #192,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      14: aload_2
      15: invokeinterface #252,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      20: areturn

  public scalaz.LazyOptionInstances$$anon$2(scalaz.LazyOptionInstances, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #250                // Field evidence$4$1:Lscalaz/Semigroup;
       5: aload_0
       6: invokespecial #257                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #261                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      13: aload_0
      14: invokestatic  #264                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      17: invokestatic  #269                // Method scala/runtime/Statics.releaseFence:()V
      20: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #282,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
