Compiled from "Ordering.scala"
public final class scalaz.OrderingInstances$$anon$1 implements scalaz.Enum<scalaz.Ordering>, scalaz.Show<scalaz.Ordering>, scalaz.Monoid<scalaz.Ordering> {
  private scalaz.syntax.MonoidSyntax<scalaz.Ordering> monoidSyntax;

  private scalaz.syntax.SemigroupSyntax<scalaz.Ordering> semigroupSyntax;

  private scalaz.syntax.ShowSyntax<scalaz.Ordering> showSyntax;

  private scalaz.syntax.EnumSyntax<scalaz.Ordering> enumSyntax;

  private scalaz.syntax.OrderSyntax<scalaz.Ordering> orderSyntax;

  private scalaz.syntax.EqualSyntax<scalaz.Ordering> equalSyntax;

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #80                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #92                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #101                // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #110                // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #115                // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #122                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #127                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #134                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #141                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scalaz.Ordering>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #148                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #153                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<scalaz.Ordering> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.Ordering>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #160                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.Ordering> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.Ordering, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #165                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #172                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #179                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.Ordering>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #186                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.Kleisli<scala.Option, scalaz.Ordering, scalaz.Ordering> succx();
    Code:
       0: aload_0
       1: invokestatic  #193                // InterfaceMethod scalaz/Enum.succx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public scalaz.Kleisli<scala.Option, scalaz.Ordering, scalaz.Ordering> predx();
    Code:
       0: aload_0
       1: invokestatic  #197                // InterfaceMethod scalaz/Enum.predx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public <X> scalaz.IndexedStateT<scalaz.Ordering, scalaz.Ordering, java.lang.Object, X> succState(scala.Function1<scalaz.Ordering, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #204                // InterfaceMethod scalaz/Enum.succState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y succStateZeroM(scala.Function1<scalaz.Ordering, X>, scala.Function1<X, scalaz.IndexedStateT<scalaz.Ordering, scalaz.Ordering, java.lang.Object, Y>>, scalaz.Monoid<scalaz.Ordering>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #213                // InterfaceMethod scalaz/Enum.succStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y succStateZero(scala.Function1<scalaz.Ordering, X>, scala.Function1<X, Y>, scalaz.Monoid<scalaz.Ordering>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #218                // InterfaceMethod scalaz/Enum.succStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> succStateMinM(scala.Function1<scalaz.Ordering, X>, scala.Function1<X, scalaz.IndexedStateT<scalaz.Ordering, scalaz.Ordering, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #225                // InterfaceMethod scalaz/Enum.succStateMinM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> succStateMin(scala.Function1<scalaz.Ordering, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #230                // InterfaceMethod scalaz/Enum.succStateMin$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X> scalaz.IndexedStateT<scalaz.Ordering, scalaz.Ordering, java.lang.Object, X> predState(scala.Function1<scalaz.Ordering, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #234                // InterfaceMethod scalaz/Enum.predState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y predStateZeroM(scala.Function1<scalaz.Ordering, X>, scala.Function1<X, scalaz.IndexedStateT<scalaz.Ordering, scalaz.Ordering, java.lang.Object, Y>>, scalaz.Monoid<scalaz.Ordering>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #238                // InterfaceMethod scalaz/Enum.predStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y predStateZero(scala.Function1<scalaz.Ordering, X>, scala.Function1<X, Y>, scalaz.Monoid<scalaz.Ordering>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #242                // InterfaceMethod scalaz/Enum.predStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> predStateMaxM(scala.Function1<scalaz.Ordering, X>, scala.Function1<X, scalaz.IndexedStateT<scalaz.Ordering, scalaz.Ordering, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #246                // InterfaceMethod scalaz/Enum.predStateMaxM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> predStateMax(scala.Function1<scalaz.Ordering, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #250                // InterfaceMethod scalaz/Enum.predStateMax$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scalaz.EphemeralStream from(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #256                // InterfaceMethod scalaz/Enum.from$:(Lscalaz/Enum;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public scalaz.EphemeralStream fromStep(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #262                // InterfaceMethod scalaz/Enum.fromStep$:(Lscalaz/Enum;ILjava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.EphemeralStream fromTo(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #269                // InterfaceMethod scalaz/Enum.fromTo$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.IList fromToL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #275                // InterfaceMethod scalaz/Enum.fromToL$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       6: areturn

  public scalaz.EphemeralStream fromStepTo(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #281                // InterfaceMethod scalaz/Enum.fromStepTo$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       7: areturn

  public scalaz.IList fromStepToL(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #287                // InterfaceMethod scalaz/Enum.fromStepToL$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       7: areturn

  public scalaz.Enum<scalaz.Ordering>.EnumLaw enumLaw();
    Code:
       0: aload_0
       1: invokestatic  #294                // InterfaceMethod scalaz/Enum.enumLaw$:(Lscalaz/Enum;)Lscalaz/Enum$EnumLaw;
       4: areturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #300                // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #306                // InterfaceMethod scalaz/Order.equal$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #310                // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #314                // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #318                // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #322                // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #328                // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #332                // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #338                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scalaz.Ordering>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #345                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scalaz.Ordering> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #352                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scalaz.Ordering> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #359                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scalaz.Ordering>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #366                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #372                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.Ordering>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #379                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<scalaz.Ordering> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #383                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scalaz.Ordering>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #383                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.Ordering> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #391                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.Ordering>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #391                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.syntax.ShowSyntax<scalaz.Ordering> showSyntax();
    Code:
       0: aload_0
       1: getfield      #398                // Field showSyntax:Lscalaz/syntax/ShowSyntax;
       4: areturn

  public void scalaz$Show$_setter_$showSyntax_$eq(scalaz.syntax.ShowSyntax<scalaz.Ordering>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #398                // Field showSyntax:Lscalaz/syntax/ShowSyntax;
       5: return

  public scalaz.syntax.EnumSyntax<scalaz.Ordering> enumSyntax();
    Code:
       0: aload_0
       1: getfield      #405                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       4: areturn

  public void scalaz$Enum$_setter_$enumSyntax_$eq(scalaz.syntax.EnumSyntax<scalaz.Ordering>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #405                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       5: return

  public scalaz.syntax.OrderSyntax<scalaz.Ordering> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #412                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scalaz.Ordering>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #412                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scalaz.Ordering> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #419                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.Ordering>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #419                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Ordering order(scalaz.Ordering, scalaz.Ordering);
    Code:
       0: new           #428                // class scala/Tuple2
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #432                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: astore_3
      10: getstatic     #436                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      13: aload_1
      14: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      17: ifeq          34
      20: getstatic     #436                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      23: aload_2
      24: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      27: ifeq          34
      30: getstatic     #443                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      33: areturn
      34: getstatic     #436                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      37: aload_1
      38: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      41: ifeq          80
      44: getstatic     #443                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      47: aload_2
      48: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      51: ifeq          58
      54: iconst_1
      55: goto          73
      58: getstatic     #446                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
      61: aload_2
      62: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      65: ifeq          72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: ifeq          80
      76: getstatic     #436                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      79: areturn
      80: getstatic     #443                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      83: aload_1
      84: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      87: ifeq          104
      90: getstatic     #436                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      93: aload_2
      94: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      97: ifeq          104
     100: getstatic     #446                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
     103: areturn
     104: getstatic     #443                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
     107: aload_1
     108: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     111: ifeq          128
     114: getstatic     #443                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
     117: aload_2
     118: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     121: ifeq          128
     124: getstatic     #443                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
     127: areturn
     128: getstatic     #443                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
     131: aload_1
     132: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     135: ifeq          152
     138: getstatic     #446                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
     141: aload_2
     142: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     145: ifeq          152
     148: getstatic     #436                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
     151: areturn
     152: getstatic     #446                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
     155: aload_1
     156: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     159: ifeq          198
     162: getstatic     #436                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
     165: aload_2
     166: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     169: ifeq          176
     172: iconst_1
     173: goto          191
     176: getstatic     #443                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
     179: aload_2
     180: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     183: ifeq          190
     186: iconst_1
     187: goto          191
     190: iconst_0
     191: ifeq          198
     194: getstatic     #446                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
     197: areturn
     198: getstatic     #446                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
     201: aload_1
     202: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     205: ifeq          222
     208: getstatic     #446                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
     211: aload_2
     212: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     215: ifeq          222
     218: getstatic     #443                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
     221: areturn
     222: new           #448                // class scala/MatchError
     225: dup
     226: aload_3
     227: invokespecial #451                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     230: athrow

  public scalaz.Cord show(scalaz.Ordering);
    Code:
       0: getstatic     #459                // Field scalaz/Cord$.MODULE$:Lscalaz/Cord$;
       3: pop
       4: aload_1
       5: invokevirtual #463                // Method scalaz/Ordering.name:()Ljava/lang/String;
       8: astore_2
       9: getstatic     #466                // Field scalaz/Cord$Leaf$.MODULE$:Lscalaz/Cord$Leaf$;
      12: aload_2
      13: invokevirtual #469                // Method scalaz/Cord$Leaf$.apply:(Ljava/lang/String;)Lscalaz/Cord$Leaf;
      16: areturn

  public java.lang.String shows(scalaz.Ordering);
    Code:
       0: aload_1
       1: invokevirtual #463                // Method scalaz/Ordering.name:()Ljava/lang/String;
       4: areturn

  public scalaz.Ordering append(scalaz.Ordering, scala.Function0<scalaz.Ordering>);
    Code:
       0: getstatic     #443                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
       3: aload_1
       4: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          20
      10: aload_2
      11: invokeinterface #483,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: checkcast     #42                 // class scalaz/Ordering
      19: areturn
      20: aload_1
      21: areturn

  public scalaz.Ordering zero();
    Code:
       0: getstatic     #443                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
       3: areturn

  public scalaz.Ordering succ(scalaz.Ordering);
    Code:
       0: getstatic     #436                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
       3: aload_1
       4: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          14
      10: getstatic     #443                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      13: areturn
      14: getstatic     #443                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      17: aload_1
      18: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: getstatic     #446                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
      27: areturn
      28: getstatic     #446                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
      31: aload_1
      32: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      35: ifeq          42
      38: getstatic     #436                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      41: areturn
      42: new           #448                // class scala/MatchError
      45: dup
      46: aload_1
      47: invokespecial #451                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      50: athrow

  public scalaz.Ordering pred(scalaz.Ordering);
    Code:
       0: getstatic     #446                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
       3: aload_1
       4: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          14
      10: getstatic     #443                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      13: areturn
      14: getstatic     #443                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      17: aload_1
      18: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: getstatic     #436                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      27: areturn
      28: getstatic     #436                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      31: aload_1
      32: invokevirtual #440                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      35: ifeq          42
      38: getstatic     #446                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
      41: areturn
      42: new           #448                // class scala/MatchError
      45: dup
      46: aload_1
      47: invokespecial #451                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      50: athrow

  public scalaz.Ordering succn(int, scalaz.Ordering);
    Code:
       0: iload_1
       1: iconst_0
       2: if_icmpge     13
       5: aload_0
       6: iload_1
       7: ineg
       8: aload_2
       9: invokevirtual #494                // Method predn:(ILscalaz/Ordering;)Lscalaz/Ordering;
      12: areturn
      13: iload_1
      14: iconst_3
      15: irem
      16: iconst_0
      17: if_icmpne     22
      20: aload_2
      21: areturn
      22: iload_1
      23: iconst_3
      24: irem
      25: iconst_1
      26: if_icmpne     35
      29: aload_0
      30: aload_2
      31: invokevirtual #496                // Method succ:(Lscalaz/Ordering;)Lscalaz/Ordering;
      34: areturn
      35: aload_0
      36: aload_0
      37: aload_2
      38: invokevirtual #496                // Method succ:(Lscalaz/Ordering;)Lscalaz/Ordering;
      41: invokevirtual #496                // Method succ:(Lscalaz/Ordering;)Lscalaz/Ordering;
      44: areturn

  public scalaz.Ordering predn(int, scalaz.Ordering);
    Code:
       0: iload_1
       1: iconst_0
       2: if_icmpge     13
       5: aload_0
       6: iload_1
       7: ineg
       8: aload_2
       9: invokevirtual #498                // Method succn:(ILscalaz/Ordering;)Lscalaz/Ordering;
      12: areturn
      13: iload_1
      14: iconst_3
      15: irem
      16: iconst_0
      17: if_icmpne     22
      20: aload_2
      21: areturn
      22: iload_1
      23: iconst_3
      24: irem
      25: iconst_1
      26: if_icmpne     35
      29: aload_0
      30: aload_2
      31: invokevirtual #500                // Method pred:(Lscalaz/Ordering;)Lscalaz/Ordering;
      34: areturn
      35: aload_0
      36: aload_0
      37: aload_2
      38: invokevirtual #500                // Method pred:(Lscalaz/Ordering;)Lscalaz/Ordering;
      41: invokevirtual #500                // Method pred:(Lscalaz/Ordering;)Lscalaz/Ordering;
      44: areturn

  public scala.Option<scalaz.Ordering> min();
    Code:
       0: new           #504                // class scala/Some
       3: dup
       4: getstatic     #436                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
       7: invokespecial #505                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      10: areturn

  public scala.Option<scalaz.Ordering> max();
    Code:
       0: new           #504                // class scala/Some
       3: dup
       4: getstatic     #446                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
       7: invokespecial #505                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      10: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #508                // Method contramap:(Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public java.lang.Object predn(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #42                 // class scalaz/Ordering
       6: invokevirtual #494                // Method predn:(ILscalaz/Ordering;)Lscalaz/Ordering;
       9: areturn

  public java.lang.Object succn(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #42                 // class scalaz/Ordering
       6: invokevirtual #498                // Method succn:(ILscalaz/Ordering;)Lscalaz/Ordering;
       9: areturn

  public java.lang.Object pred(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #42                 // class scalaz/Ordering
       5: invokevirtual #500                // Method pred:(Lscalaz/Ordering;)Lscalaz/Ordering;
       8: areturn

  public java.lang.Object succ(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #42                 // class scalaz/Ordering
       5: invokevirtual #496                // Method succ:(Lscalaz/Ordering;)Lscalaz/Ordering;
       8: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #512                // Method zero:()Lscalaz/Ordering;
       4: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #42                 // class scalaz/Ordering
       5: aload_2
       6: invokevirtual #515                // Method append:(Lscalaz/Ordering;Lscala/Function0;)Lscalaz/Ordering;
       9: areturn

  public java.lang.String shows(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #42                 // class scalaz/Ordering
       5: invokevirtual #518                // Method shows:(Lscalaz/Ordering;)Ljava/lang/String;
       8: areturn

  public scalaz.Cord show(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #42                 // class scalaz/Ordering
       5: invokevirtual #521                // Method show:(Lscalaz/Ordering;)Lscalaz/Cord;
       8: areturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #42                 // class scalaz/Ordering
       5: aload_2
       6: checkcast     #42                 // class scalaz/Ordering
       9: invokevirtual #523                // Method order:(Lscalaz/Ordering;Lscalaz/Ordering;)Lscalaz/Ordering;
      12: areturn

  public scalaz.OrderingInstances$$anon$1(scalaz.OrderingInstances);
    Code:
       0: aload_0
       1: invokespecial #528                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #532                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
       8: aload_0
       9: invokestatic  #535                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      12: aload_0
      13: invokestatic  #538                // InterfaceMethod scalaz/Enum.$init$:(Lscalaz/Enum;)V
      16: aload_0
      17: invokestatic  #541                // InterfaceMethod scalaz/Show.$init$:(Lscalaz/Show;)V
      20: aload_0
      21: invokestatic  #544                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      24: aload_0
      25: invokestatic  #547                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      28: invokestatic  #552                // Method scala/runtime/Statics.releaseFence:()V
      31: return
}
