Compiled from "SelectT.scala"
public final class scalaz.SelectTInstances4$$anon$4 implements scalaz.SelectTPlusEmpty<R, M> {
  private scalaz.syntax.PlusEmptySyntax<?> plusEmptySyntax;

  private scalaz.syntax.PlusSyntax<?> plusSyntax;

  private final scalaz.PlusEmpty evidence$4$1;

  public <A> scalaz.SelectT<R, M, A> empty();
    Code:
       0: aload_0
       1: invokestatic  #38                 // InterfaceMethod scalaz/SelectTPlusEmpty.empty$:(Lscalaz/SelectTPlusEmpty;)Lscalaz/SelectT;
       4: areturn

  public <A> scalaz.SelectT<R, M, A> plus(scalaz.SelectT<R, M, A>, scala.Function0<scalaz.SelectT<R, M, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #51                 // InterfaceMethod scalaz/SelectTPlus.plus$:(Lscalaz/SelectTPlus;Lscalaz/SelectT;Lscala/Function0;)Lscalaz/SelectT;
       6: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #61                 // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #67                 // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #73                 // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #80                 // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<scalaz.SelectT<R, M, A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #87                 // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<?>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #94                 // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S$, A> scalaz.Maybe<scalaz.SelectT<R, M, A>> unfoldlPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<S$, scalaz.SelectT<R, M, A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #101                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S$, A> scalaz.Maybe<scalaz.SelectT<R, M, A>> unfoldrPsumOpt(S$, scala.Function1<S$, scalaz.Maybe<scala.Tuple2<scalaz.SelectT<R, M, A>, S$>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #106                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #111                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.SelectT<R, M, A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #119                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<?>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #126                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public scalaz.syntax.PlusEmptySyntax<?> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #130                // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #130                // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<?> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #138                // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #138                // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.PlusEmpty<M> F();
    Code:
       0: getstatic     #149                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #151                // Field evidence$4$1:Lscalaz/PlusEmpty;
       7: invokevirtual #155                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #22                 // class scalaz/PlusEmpty
      13: areturn

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #158                // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #161                // class scalaz/SelectT
       5: aload_2
       6: invokevirtual #163                // Method plus:(Lscalaz/SelectT;Lscala/Function0;)Lscalaz/SelectT;
       9: areturn

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #166                // Method empty:()Lscalaz/SelectT;
       4: areturn

  public scalaz.Plus F();
    Code:
       0: aload_0
       1: invokevirtual #168                // Method F:()Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.SelectTInstances4$$anon$4(scalaz.SelectTInstances4, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #151                // Field evidence$4$1:Lscalaz/PlusEmpty;
       5: aload_0
       6: invokespecial #174                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #178                // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      13: aload_0
      14: invokestatic  #181                // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      17: invokestatic  #186                // Method scala/runtime/Statics.releaseFence:()V
      20: return
}
