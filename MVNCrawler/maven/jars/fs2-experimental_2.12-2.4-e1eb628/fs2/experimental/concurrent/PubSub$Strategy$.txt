Compiled from "PubSub.scala"
public class fs2.experimental.concurrent.PubSub$Strategy$ {
  public static fs2.experimental.concurrent.PubSub$Strategy$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class fs2/experimental/concurrent/PubSub$Strategy$
       3: invokespecial #26                 // Method "<init>":()V
       6: return

  public <I, O, S, Selector> fs2.experimental.concurrent.PubSub$Strategy<I, O, S, Selector> convert(fs2.concurrent.PubSub$Strategy<I, O, S, Selector>);
    Code:
       0: new           #19                 // class fs2/experimental/concurrent/PubSub$Strategy$$anon$2
       3: dup
       4: aload_1
       5: invokespecial #33                 // Method fs2/experimental/concurrent/PubSub$Strategy$$anon$2."<init>":(Lfs2/concurrent/PubSub$Strategy;)V
       8: areturn

  public <A, S> fs2.experimental.concurrent.PubSub$Strategy<A, fs2.Chunk<A>, S, java.lang.Object> bounded(int, fs2.experimental.concurrent.PubSub$Strategy<A, fs2.Chunk<A>, S, java.lang.Object>, scala.Function1<S, java.lang.Object>);
    Code:
       0: aload_0
       1: getstatic     #43                 // Field fs2/concurrent/PubSub$Strategy$.MODULE$:Lfs2/concurrent/PubSub$Strategy$;
       4: iload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #46                 // Method fs2/concurrent/PubSub$Strategy$.bounded:(ILfs2/concurrent/PubSub$Strategy;Lscala/Function1;)Lfs2/concurrent/PubSub$Strategy;
      10: invokevirtual #48                 // Method convert:(Lfs2/concurrent/PubSub$Strategy;)Lfs2/experimental/concurrent/PubSub$Strategy;
      13: areturn

  public <I, O, S, Sel> fs2.experimental.concurrent.PubSub$Strategy<scala.Option<I>, scala.Option<O>, scala.Option<S>, Sel> closeNow(fs2.experimental.concurrent.PubSub$Strategy<I, O, S, Sel>);
    Code:
       0: aload_0
       1: getstatic     #43                 // Field fs2/concurrent/PubSub$Strategy$.MODULE$:Lfs2/concurrent/PubSub$Strategy$;
       4: aload_1
       5: invokevirtual #57                 // Method fs2/concurrent/PubSub$Strategy$.closeNow:(Lfs2/concurrent/PubSub$Strategy;)Lfs2/concurrent/PubSub$Strategy;
       8: invokevirtual #48                 // Method convert:(Lfs2/concurrent/PubSub$Strategy;)Lfs2/experimental/concurrent/PubSub$Strategy;
      11: areturn

  public <I, O, S, Sel> fs2.experimental.concurrent.PubSub$Strategy<scala.Option<I>, scala.Option<O>, scala.Tuple2<java.lang.Object, S>, Sel> closeDrainFirst(fs2.experimental.concurrent.PubSub$Strategy<I, O, S, Sel>);
    Code:
       0: aload_0
       1: getstatic     #43                 // Field fs2/concurrent/PubSub$Strategy$.MODULE$:Lfs2/concurrent/PubSub$Strategy$;
       4: aload_1
       5: invokevirtual #61                 // Method fs2/concurrent/PubSub$Strategy$.closeDrainFirst:(Lfs2/concurrent/PubSub$Strategy;)Lfs2/concurrent/PubSub$Strategy;
       8: invokevirtual #48                 // Method convert:(Lfs2/concurrent/PubSub$Strategy;)Lfs2/experimental/concurrent/PubSub$Strategy;
      11: areturn

  public fs2.experimental.concurrent.PubSub$Strategy$();
    Code:
       0: aload_0
       1: invokespecial #62                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #64                 // Field MODULE$:Lfs2/experimental/concurrent/PubSub$Strategy$;
       8: return
}
