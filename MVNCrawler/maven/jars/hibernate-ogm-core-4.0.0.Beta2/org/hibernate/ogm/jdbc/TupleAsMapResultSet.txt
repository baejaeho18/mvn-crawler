Compiled from "TupleAsMapResultSet.java"
public class org.hibernate.ogm.jdbc.TupleAsMapResultSet implements java.sql.ResultSet {
  private java.util.List<org.hibernate.ogm.datastore.spi.Tuple> tuples;

  private int index;

  public org.hibernate.ogm.jdbc.TupleAsMapResultSet();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field tuples:Ljava/util/List;
      15: aload_0
      16: iconst_m1
      17: putfield      #5                  // Field index:I
      20: return

  public void addTuple(org.hibernate.ogm.datastore.spi.Tuple);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tuples:Ljava/util/List;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public org.hibernate.ogm.datastore.spi.Tuple getTuple();
    Code:
       0: aload_0
       1: getfield      #4                  // Field tuples:Ljava/util/List;
       4: aload_0
       5: getfield      #5                  // Field index:I
       8: invokeinterface #7,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      13: checkcast     #8                  // class org/hibernate/ogm/datastore/spi/Tuple
      16: areturn

  public boolean next() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field index:I
       4: iconst_1
       5: iadd
       6: istore_1
       7: iload_1
       8: aload_0
       9: getfield      #4                  // Field tuples:Ljava/util/List;
      12: invokeinterface #9,  1            // InterfaceMethod java/util/List.size:()I
      17: if_icmpge     27
      20: aload_0
      21: iload_1
      22: putfield      #5                  // Field index:I
      25: iconst_1
      26: ireturn
      27: iconst_0
      28: ireturn

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: if_acmpne     10
       8: aload_0
       9: areturn
      10: new           #11                 // class java/sql/SQLException
      13: dup
      14: new           #12                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #14                 // String Cannot convert to
      23: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #18                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      36: athrow

  public void close() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field tuples:Ljava/util/List;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/List.clear:()V
       9: return

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean wasNull() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getString(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public boolean getBoolean(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public byte getByte(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public short getShort(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public int getInt(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public long getLong(int) throws java.sql.SQLException;
    Code:
       0: lconst_0
       1: lreturn

  public float getFloat(int) throws java.sql.SQLException;
    Code:
       0: fconst_0
       1: freturn

  public double getDouble(int) throws java.sql.SQLException;
    Code:
       0: dconst_0
       1: dreturn

  public java.math.BigDecimal getBigDecimal(int, int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public byte[] getBytes(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: newarray       byte
       3: areturn

  public java.sql.Date getDate(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Time getTime(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Timestamp getTimestamp(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.io.InputStream getAsciiStream(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.io.InputStream getUnicodeStream(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.io.InputStream getBinaryStream(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getString(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public boolean getBoolean(java.lang.String) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public byte getByte(java.lang.String) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public short getShort(java.lang.String) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public int getInt(java.lang.String) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public long getLong(java.lang.String) throws java.sql.SQLException;
    Code:
       0: lconst_0
       1: lreturn

  public float getFloat(java.lang.String) throws java.sql.SQLException;
    Code:
       0: fconst_0
       1: freturn

  public double getDouble(java.lang.String) throws java.sql.SQLException;
    Code:
       0: dconst_0
       1: dreturn

  public java.math.BigDecimal getBigDecimal(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public byte[] getBytes(java.lang.String) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: newarray       byte
       3: areturn

  public java.sql.Date getDate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Time getTime(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Timestamp getTimestamp(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.io.InputStream getAsciiStream(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.io.InputStream getUnicodeStream(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.io.InputStream getBinaryStream(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.SQLWarning getWarnings() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public void clearWarnings() throws java.sql.SQLException;
    Code:
       0: return

  public java.lang.String getCursorName() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSetMetaData getMetaData() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object getObject(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object getObject(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public int findColumn(java.lang.String) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public java.io.Reader getCharacterStream(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.io.Reader getCharacterStream(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.math.BigDecimal getBigDecimal(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.math.BigDecimal getBigDecimal(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public boolean isBeforeFirst() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAfterLast() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean isFirst() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean isLast() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public void beforeFirst() throws java.sql.SQLException;
    Code:
       0: return

  public void afterLast() throws java.sql.SQLException;
    Code:
       0: return

  public boolean first() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean last() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public int getRow() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean absolute(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean relative(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean previous() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public void setFetchDirection(int) throws java.sql.SQLException;
    Code:
       0: return

  public int getFetchDirection() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public void setFetchSize(int) throws java.sql.SQLException;
    Code:
       0: return

  public int getFetchSize() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public int getType() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public int getConcurrency() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean rowUpdated() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean rowInserted() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean rowDeleted() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public void updateNull(int) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBoolean(int, boolean) throws java.sql.SQLException;
    Code:
       0: return

  public void updateByte(int, byte) throws java.sql.SQLException;
    Code:
       0: return

  public void updateShort(int, short) throws java.sql.SQLException;
    Code:
       0: return

  public void updateInt(int, int) throws java.sql.SQLException;
    Code:
       0: return

  public void updateLong(int, long) throws java.sql.SQLException;
    Code:
       0: return

  public void updateFloat(int, float) throws java.sql.SQLException;
    Code:
       0: return

  public void updateDouble(int, double) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBigDecimal(int, java.math.BigDecimal) throws java.sql.SQLException;
    Code:
       0: return

  public void updateString(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBytes(int, byte[]) throws java.sql.SQLException;
    Code:
       0: return

  public void updateDate(int, java.sql.Date) throws java.sql.SQLException;
    Code:
       0: return

  public void updateTime(int, java.sql.Time) throws java.sql.SQLException;
    Code:
       0: return

  public void updateTimestamp(int, java.sql.Timestamp) throws java.sql.SQLException;
    Code:
       0: return

  public void updateAsciiStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBinaryStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: return

  public void updateCharacterStream(int, java.io.Reader, int) throws java.sql.SQLException;
    Code:
       0: return

  public void updateObject(int, java.lang.Object, int) throws java.sql.SQLException;
    Code:
       0: return

  public void updateObject(int, java.lang.Object) throws java.sql.SQLException;
    Code:
       0: return

  public void updateNull(java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBoolean(java.lang.String, boolean) throws java.sql.SQLException;
    Code:
       0: return

  public void updateByte(java.lang.String, byte) throws java.sql.SQLException;
    Code:
       0: return

  public void updateShort(java.lang.String, short) throws java.sql.SQLException;
    Code:
       0: return

  public void updateInt(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: return

  public void updateLong(java.lang.String, long) throws java.sql.SQLException;
    Code:
       0: return

  public void updateFloat(java.lang.String, float) throws java.sql.SQLException;
    Code:
       0: return

  public void updateDouble(java.lang.String, double) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBigDecimal(java.lang.String, java.math.BigDecimal) throws java.sql.SQLException;
    Code:
       0: return

  public void updateString(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBytes(java.lang.String, byte[]) throws java.sql.SQLException;
    Code:
       0: return

  public void updateDate(java.lang.String, java.sql.Date) throws java.sql.SQLException;
    Code:
       0: return

  public void updateTime(java.lang.String, java.sql.Time) throws java.sql.SQLException;
    Code:
       0: return

  public void updateTimestamp(java.lang.String, java.sql.Timestamp) throws java.sql.SQLException;
    Code:
       0: return

  public void updateAsciiStream(java.lang.String, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBinaryStream(java.lang.String, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: return

  public void updateCharacterStream(java.lang.String, java.io.Reader, int) throws java.sql.SQLException;
    Code:
       0: return

  public void updateObject(java.lang.String, java.lang.Object, int) throws java.sql.SQLException;
    Code:
       0: return

  public void updateObject(java.lang.String, java.lang.Object) throws java.sql.SQLException;
    Code:
       0: return

  public void insertRow() throws java.sql.SQLException;
    Code:
       0: return

  public void updateRow() throws java.sql.SQLException;
    Code:
       0: return

  public void deleteRow() throws java.sql.SQLException;
    Code:
       0: return

  public void refreshRow() throws java.sql.SQLException;
    Code:
       0: return

  public void cancelRowUpdates() throws java.sql.SQLException;
    Code:
       0: return

  public void moveToInsertRow() throws java.sql.SQLException;
    Code:
       0: return

  public void moveToCurrentRow() throws java.sql.SQLException;
    Code:
       0: return

  public java.sql.Statement getStatement() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object getObject(int, java.util.Map<java.lang.String, java.lang.Class<?>>) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Ref getRef(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Blob getBlob(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Clob getClob(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Array getArray(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object getObject(java.lang.String, java.util.Map<java.lang.String, java.lang.Class<?>>) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Ref getRef(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Blob getBlob(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Clob getClob(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Array getArray(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Date getDate(int, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Date getDate(java.lang.String, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Time getTime(int, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Time getTime(java.lang.String, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Timestamp getTimestamp(int, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Timestamp getTimestamp(java.lang.String, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.net.URL getURL(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.net.URL getURL(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public void updateRef(int, java.sql.Ref) throws java.sql.SQLException;
    Code:
       0: return

  public void updateRef(java.lang.String, java.sql.Ref) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBlob(int, java.sql.Blob) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBlob(java.lang.String, java.sql.Blob) throws java.sql.SQLException;
    Code:
       0: return

  public void updateClob(int, java.sql.Clob) throws java.sql.SQLException;
    Code:
       0: return

  public void updateClob(java.lang.String, java.sql.Clob) throws java.sql.SQLException;
    Code:
       0: return

  public void updateArray(int, java.sql.Array) throws java.sql.SQLException;
    Code:
       0: return

  public void updateArray(java.lang.String, java.sql.Array) throws java.sql.SQLException;
    Code:
       0: return

  public java.sql.RowId getRowId(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.RowId getRowId(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public void updateRowId(int, java.sql.RowId) throws java.sql.SQLException;
    Code:
       0: return

  public void updateRowId(java.lang.String, java.sql.RowId) throws java.sql.SQLException;
    Code:
       0: return

  public int getHoldability() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean isClosed() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public void updateNString(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public void updateNString(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public void updateNClob(int, java.sql.NClob) throws java.sql.SQLException;
    Code:
       0: return

  public void updateNClob(java.lang.String, java.sql.NClob) throws java.sql.SQLException;
    Code:
       0: return

  public java.sql.NClob getNClob(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.NClob getNClob(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.SQLXML getSQLXML(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.SQLXML getSQLXML(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public void updateSQLXML(int, java.sql.SQLXML) throws java.sql.SQLException;
    Code:
       0: return

  public void updateSQLXML(java.lang.String, java.sql.SQLXML) throws java.sql.SQLException;
    Code:
       0: return

  public java.lang.String getNString(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getNString(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.io.Reader getNCharacterStream(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.io.Reader getNCharacterStream(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public void updateNCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void updateNCharacterStream(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void updateAsciiStream(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBinaryStream(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void updateCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void updateAsciiStream(java.lang.String, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBinaryStream(java.lang.String, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void updateCharacterStream(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBlob(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBlob(java.lang.String, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void updateClob(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void updateClob(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void updateNClob(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void updateNClob(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void updateNCharacterStream(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void updateNCharacterStream(java.lang.String, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void updateAsciiStream(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBinaryStream(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void updateCharacterStream(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void updateAsciiStream(java.lang.String, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBinaryStream(java.lang.String, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void updateCharacterStream(java.lang.String, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBlob(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void updateBlob(java.lang.String, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void updateClob(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void updateClob(java.lang.String, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void updateNClob(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void updateNClob(java.lang.String, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public <T> T getObject(int, java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public <T> T getObject(java.lang.String, java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn
}
