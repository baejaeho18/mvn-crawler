Compiled from "NoopDatabaseMetaData.java"
public class org.hibernate.ogm.jdbc.NoopDatabaseMetaData implements java.sql.DatabaseMetaData {
  private final org.hibernate.ogm.jdbc.NoopConnection connection;

  public org.hibernate.ogm.jdbc.NoopDatabaseMetaData(org.hibernate.ogm.jdbc.NoopConnection);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field connection:Lorg/hibernate/ogm/jdbc/NoopConnection;
       9: return

  public boolean allProceduresAreCallable() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean allTablesAreSelectable() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getURL() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getUserName() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public boolean isReadOnly() throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean nullsAreSortedHigh() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean nullsAreSortedLow() throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean nullsAreSortedAtStart() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean nullsAreSortedAtEnd() throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String getDatabaseProductName() throws java.sql.SQLException;
    Code:
       0: ldc           #3                  // String Hibernate JDBC Noop
       2: areturn

  public java.lang.String getDatabaseProductVersion() throws java.sql.SQLException;
    Code:
       0: ldc           #4                  // String 1.0
       2: areturn

  public java.lang.String getDriverName() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getDriverVersion() throws java.sql.SQLException;
    Code:
       0: ldc           #4                  // String 1.0
       2: areturn

  public int getDriverMajorVersion();
    Code:
       0: iconst_1
       1: ireturn

  public int getDriverMinorVersion();
    Code:
       0: iconst_0
       1: ireturn

  public boolean usesLocalFiles() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean usesLocalFilePerTable() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsMixedCaseIdentifiers() throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean storesUpperCaseIdentifiers() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean storesLowerCaseIdentifiers() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean storesMixedCaseIdentifiers() throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean supportsMixedCaseQuotedIdentifiers() throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean storesUpperCaseQuotedIdentifiers() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean storesLowerCaseQuotedIdentifiers() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean storesMixedCaseQuotedIdentifiers() throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String getIdentifierQuoteString() throws java.sql.SQLException;
    Code:
       0: ldc           #5                  // String `
       2: areturn

  public java.lang.String getSQLKeywords() throws java.sql.SQLException;
    Code:
       0: ldc           #6                  // String
       2: areturn

  public java.lang.String getNumericFunctions() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getStringFunctions() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getSystemFunctions() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getTimeDateFunctions() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getSearchStringEscape() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getExtraNameCharacters() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public boolean supportsAlterTableWithAddColumn() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsAlterTableWithDropColumn() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsColumnAliasing() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean nullPlusNonNullIsNull() throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean supportsConvert() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsConvert(int, int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsTableCorrelationNames() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsDifferentTableCorrelationNames() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsExpressionsInOrderBy() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsOrderByUnrelated() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsGroupBy() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsGroupByUnrelated() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsGroupByBeyondSelect() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsLikeEscapeClause() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsMultipleResultSets() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsMultipleTransactions() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsNonNullableColumns() throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean supportsMinimumSQLGrammar() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsCoreSQLGrammar() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsExtendedSQLGrammar() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsANSI92EntryLevelSQL() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsANSI92IntermediateSQL() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsANSI92FullSQL() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsIntegrityEnhancementFacility() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsOuterJoins() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsFullOuterJoins() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsLimitedOuterJoins() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getSchemaTerm() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getProcedureTerm() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getCatalogTerm() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public boolean isCatalogAtStart() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getCatalogSeparator() throws java.sql.SQLException;
    Code:
       0: ldc           #7                  // String :
       2: areturn

  public boolean supportsSchemasInDataManipulation() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsSchemasInProcedureCalls() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsSchemasInTableDefinitions() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsSchemasInIndexDefinitions() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsSchemasInPrivilegeDefinitions() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsCatalogsInDataManipulation() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsCatalogsInProcedureCalls() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsCatalogsInTableDefinitions() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsCatalogsInIndexDefinitions() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsCatalogsInPrivilegeDefinitions() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsPositionedDelete() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsPositionedUpdate() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsSelectForUpdate() throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean supportsStoredProcedures() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsSubqueriesInComparisons() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsSubqueriesInExists() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsSubqueriesInIns() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsSubqueriesInQuantifieds() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsCorrelatedSubqueries() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsUnion() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsUnionAll() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsOpenCursorsAcrossCommit() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsOpenCursorsAcrossRollback() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsOpenStatementsAcrossCommit() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsOpenStatementsAcrossRollback() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public int getMaxBinaryLiteralLength() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getMaxCharLiteralLength() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getMaxColumnNameLength() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getMaxColumnsInGroupBy() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getMaxColumnsInIndex() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getMaxColumnsInOrderBy() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getMaxColumnsInSelect() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getMaxColumnsInTable() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getMaxConnections() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getMaxCursorNameLength() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getMaxIndexLength() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getMaxSchemaNameLength() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getMaxProcedureNameLength() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getMaxCatalogNameLength() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getMaxRowSize() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public boolean doesMaxRowSizeIncludeBlobs() throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public int getMaxStatementLength() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getMaxStatements() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public int getMaxTableNameLength() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getMaxTablesInSelect() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getMaxUserNameLength() throws java.sql.SQLException;
    Code:
       0: ldc           #8                  // int 2147483647
       2: ireturn

  public int getDefaultTransactionIsolation() throws java.sql.SQLException;
    Code:
       0: iconst_4
       1: ireturn

  public boolean supportsTransactions() throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean supportsTransactionIsolationLevel(int) throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean supportsDataDefinitionAndDataManipulationTransactions() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsDataManipulationTransactionsOnly() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean dataDefinitionCausesTransactionCommit() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean dataDefinitionIgnoredInTransactions() throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public java.sql.ResultSet getProcedures(java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getProcedureColumns(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getTables(java.lang.String, java.lang.String, java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getSchemas() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getCatalogs() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getTableTypes() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getColumns(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getColumnPrivileges(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getTablePrivileges(java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getBestRowIdentifier(java.lang.String, java.lang.String, java.lang.String, int, boolean) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getVersionColumns(java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getPrimaryKeys(java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getImportedKeys(java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getExportedKeys(java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getCrossReference(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getTypeInfo() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getIndexInfo(java.lang.String, java.lang.String, java.lang.String, boolean, boolean) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public boolean supportsResultSetType(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsResultSetConcurrency(int, int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean ownUpdatesAreVisible(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean ownDeletesAreVisible(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean ownInsertsAreVisible(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean othersUpdatesAreVisible(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean othersDeletesAreVisible(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean othersInsertsAreVisible(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean updatesAreDetected(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean deletesAreDetected(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean insertsAreDetected(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsBatchUpdates() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public java.sql.ResultSet getUDTs(java.lang.String, java.lang.String, java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lorg/hibernate/ogm/jdbc/NoopConnection;
       4: areturn

  public boolean supportsSavepoints() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsNamedParameters() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsMultipleOpenResults() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsGetGeneratedKeys() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public java.sql.ResultSet getSuperTypes(java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getSuperTables(java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getAttributes(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public boolean supportsResultSetHoldability(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public int getResultSetHoldability() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public int getDatabaseMajorVersion() throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public int getDatabaseMinorVersion() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public int getJDBCMajorVersion() throws java.sql.SQLException;
    Code:
       0: iconst_4
       1: ireturn

  public int getJDBCMinorVersion() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public int getSQLStateType() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean locatorsUpdateCopy() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsStatementPooling() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public java.sql.RowIdLifetime getRowIdLifetime() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getSchemas(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public boolean supportsStoredFunctionsUsingCallSyntax() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean autoCommitFailureClosesAllResultSets() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public java.sql.ResultSet getClientInfoProperties() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getFunctions(java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getFunctionColumns(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet getPseudoColumns(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public boolean generatedKeyAlwaysReturned() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn
}
