Compiled from "JSON.java"
public class io.lakefs.clients.api.JSON {
  private com.google.gson.Gson gson;

  private boolean isLenientOnJson;

  private io.lakefs.clients.api.JSON$DateTypeAdapter dateTypeAdapter;

  private io.lakefs.clients.api.JSON$SqlDateTypeAdapter sqlDateTypeAdapter;

  private io.lakefs.clients.api.JSON$OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter;

  private io.lakefs.clients.api.JSON$LocalDateTypeAdapter localDateTypeAdapter;

  private io.lakefs.clients.api.JSON$ByteArrayAdapter byteArrayAdapter;

  public static com.google.gson.GsonBuilder createGson();
    Code:
       0: new           #1                  // class io/gsonfire/GsonFireBuilder
       3: dup
       4: invokespecial #2                  // Method io/gsonfire/GsonFireBuilder."<init>":()V
       7: astore_0
       8: aload_0
       9: invokevirtual #3                  // Method io/gsonfire/GsonFireBuilder.createGsonBuilder:()Lcom/google/gson/GsonBuilder;
      12: astore_1
      13: aload_1
      14: areturn

  private static java.lang.String getDiscriminatorValue(com.google.gson.JsonElement, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method com/google/gson/JsonElement.getAsJsonObject:()Lcom/google/gson/JsonObject;
       4: aload_1
       5: invokevirtual #5                  // Method com/google/gson/JsonObject.get:(Ljava/lang/String;)Lcom/google/gson/JsonElement;
       8: astore_2
       9: aconst_null
      10: aload_2
      11: if_acmpne     46
      14: new           #6                  // class java/lang/IllegalArgumentException
      17: dup
      18: new           #7                  // class java/lang/StringBuilder
      21: dup
      22: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #9                  // String missing discriminator field: <
      27: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #11                 // String >
      36: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_2
      47: invokevirtual #14                 // Method com/google/gson/JsonElement.getAsString:()Ljava/lang/String;
      50: areturn

  private static java.lang.Class getClassByDiscriminator(java.util.Map, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #16                 // class java/lang/Class
      10: astore_2
      11: aconst_null
      12: aload_2
      13: if_acmpne     48
      16: new           #6                  // class java/lang/IllegalArgumentException
      19: dup
      20: new           #7                  // class java/lang/StringBuilder
      23: dup
      24: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #17                 // String cannot determine model class of name: <
      29: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_1
      33: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #11                 // String >
      38: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_2
      49: areturn

  public io.lakefs.clients.api.JSON();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #19                 // Field isLenientOnJson:Z
       9: aload_0
      10: new           #20                 // class io/lakefs/clients/api/JSON$DateTypeAdapter
      13: dup
      14: invokespecial #21                 // Method io/lakefs/clients/api/JSON$DateTypeAdapter."<init>":()V
      17: putfield      #22                 // Field dateTypeAdapter:Lio/lakefs/clients/api/JSON$DateTypeAdapter;
      20: aload_0
      21: new           #23                 // class io/lakefs/clients/api/JSON$SqlDateTypeAdapter
      24: dup
      25: invokespecial #24                 // Method io/lakefs/clients/api/JSON$SqlDateTypeAdapter."<init>":()V
      28: putfield      #25                 // Field sqlDateTypeAdapter:Lio/lakefs/clients/api/JSON$SqlDateTypeAdapter;
      31: aload_0
      32: new           #26                 // class io/lakefs/clients/api/JSON$OffsetDateTimeTypeAdapter
      35: dup
      36: invokespecial #27                 // Method io/lakefs/clients/api/JSON$OffsetDateTimeTypeAdapter."<init>":()V
      39: putfield      #28                 // Field offsetDateTimeTypeAdapter:Lio/lakefs/clients/api/JSON$OffsetDateTimeTypeAdapter;
      42: aload_0
      43: new           #29                 // class io/lakefs/clients/api/JSON$LocalDateTypeAdapter
      46: dup
      47: aload_0
      48: invokespecial #30                 // Method io/lakefs/clients/api/JSON$LocalDateTypeAdapter."<init>":(Lio/lakefs/clients/api/JSON;)V
      51: putfield      #31                 // Field localDateTypeAdapter:Lio/lakefs/clients/api/JSON$LocalDateTypeAdapter;
      54: aload_0
      55: new           #32                 // class io/lakefs/clients/api/JSON$ByteArrayAdapter
      58: dup
      59: aload_0
      60: invokespecial #33                 // Method io/lakefs/clients/api/JSON$ByteArrayAdapter."<init>":(Lio/lakefs/clients/api/JSON;)V
      63: putfield      #34                 // Field byteArrayAdapter:Lio/lakefs/clients/api/JSON$ByteArrayAdapter;
      66: aload_0
      67: invokestatic  #35                 // Method createGson:()Lcom/google/gson/GsonBuilder;
      70: ldc           #36                 // class java/util/Date
      72: aload_0
      73: getfield      #22                 // Field dateTypeAdapter:Lio/lakefs/clients/api/JSON$DateTypeAdapter;
      76: invokevirtual #37                 // Method com/google/gson/GsonBuilder.registerTypeAdapter:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Lcom/google/gson/GsonBuilder;
      79: ldc           #38                 // class java/sql/Date
      81: aload_0
      82: getfield      #25                 // Field sqlDateTypeAdapter:Lio/lakefs/clients/api/JSON$SqlDateTypeAdapter;
      85: invokevirtual #37                 // Method com/google/gson/GsonBuilder.registerTypeAdapter:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Lcom/google/gson/GsonBuilder;
      88: ldc           #39                 // class org/threeten/bp/OffsetDateTime
      90: aload_0
      91: getfield      #28                 // Field offsetDateTimeTypeAdapter:Lio/lakefs/clients/api/JSON$OffsetDateTimeTypeAdapter;
      94: invokevirtual #37                 // Method com/google/gson/GsonBuilder.registerTypeAdapter:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Lcom/google/gson/GsonBuilder;
      97: ldc           #40                 // class org/threeten/bp/LocalDate
      99: aload_0
     100: getfield      #31                 // Field localDateTypeAdapter:Lio/lakefs/clients/api/JSON$LocalDateTypeAdapter;
     103: invokevirtual #37                 // Method com/google/gson/GsonBuilder.registerTypeAdapter:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Lcom/google/gson/GsonBuilder;
     106: ldc           #41                 // class "[B"
     108: aload_0
     109: getfield      #34                 // Field byteArrayAdapter:Lio/lakefs/clients/api/JSON$ByteArrayAdapter;
     112: invokevirtual #37                 // Method com/google/gson/GsonBuilder.registerTypeAdapter:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Lcom/google/gson/GsonBuilder;
     115: invokevirtual #42                 // Method com/google/gson/GsonBuilder.create:()Lcom/google/gson/Gson;
     118: putfield      #43                 // Field gson:Lcom/google/gson/Gson;
     121: return

  public com.google.gson.Gson getGson();
    Code:
       0: aload_0
       1: getfield      #43                 // Field gson:Lcom/google/gson/Gson;
       4: areturn

  public io.lakefs.clients.api.JSON setGson(com.google.gson.Gson);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field gson:Lcom/google/gson/Gson;
       5: aload_0
       6: areturn

  public io.lakefs.clients.api.JSON setLenientOnJson(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field isLenientOnJson:Z
       5: aload_0
       6: areturn

  public java.lang.String serialize(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #43                 // Field gson:Lcom/google/gson/Gson;
       4: aload_1
       5: invokevirtual #44                 // Method com/google/gson/Gson.toJson:(Ljava/lang/Object;)Ljava/lang/String;
       8: areturn

  public <T> T deserialize(java.lang.String, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: getfield      #19                 // Field isLenientOnJson:Z
       4: ifeq          38
       7: new           #45                 // class com/google/gson/stream/JsonReader
      10: dup
      11: new           #46                 // class java/io/StringReader
      14: dup
      15: aload_1
      16: invokespecial #47                 // Method java/io/StringReader."<init>":(Ljava/lang/String;)V
      19: invokespecial #48                 // Method com/google/gson/stream/JsonReader."<init>":(Ljava/io/Reader;)V
      22: astore_3
      23: aload_3
      24: iconst_1
      25: invokevirtual #49                 // Method com/google/gson/stream/JsonReader.setLenient:(Z)V
      28: aload_0
      29: getfield      #43                 // Field gson:Lcom/google/gson/Gson;
      32: aload_3
      33: aload_2
      34: invokevirtual #50                 // Method com/google/gson/Gson.fromJson:(Lcom/google/gson/stream/JsonReader;Ljava/lang/reflect/Type;)Ljava/lang/Object;
      37: areturn
      38: aload_0
      39: getfield      #43                 // Field gson:Lcom/google/gson/Gson;
      42: aload_1
      43: aload_2
      44: invokevirtual #51                 // Method com/google/gson/Gson.fromJson:(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;
      47: areturn
      48: astore_3
      49: aload_2
      50: ldc           #53                 // class java/lang/String
      52: invokevirtual #54                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      55: ifeq          60
      58: aload_1
      59: areturn
      60: aload_3
      61: athrow
    Exception table:
       from    to  target type
           0    37    48   Class com/google/gson/JsonParseException
          38    47    48   Class com/google/gson/JsonParseException

  public io.lakefs.clients.api.JSON setOffsetDateTimeFormat(org.threeten.bp.format.DateTimeFormatter);
    Code:
       0: aload_0
       1: getfield      #28                 // Field offsetDateTimeTypeAdapter:Lio/lakefs/clients/api/JSON$OffsetDateTimeTypeAdapter;
       4: aload_1
       5: invokevirtual #55                 // Method io/lakefs/clients/api/JSON$OffsetDateTimeTypeAdapter.setFormat:(Lorg/threeten/bp/format/DateTimeFormatter;)V
       8: aload_0
       9: areturn

  public io.lakefs.clients.api.JSON setLocalDateFormat(org.threeten.bp.format.DateTimeFormatter);
    Code:
       0: aload_0
       1: getfield      #31                 // Field localDateTypeAdapter:Lio/lakefs/clients/api/JSON$LocalDateTypeAdapter;
       4: aload_1
       5: invokevirtual #56                 // Method io/lakefs/clients/api/JSON$LocalDateTypeAdapter.setFormat:(Lorg/threeten/bp/format/DateTimeFormatter;)V
       8: aload_0
       9: areturn

  public io.lakefs.clients.api.JSON setDateFormat(java.text.DateFormat);
    Code:
       0: aload_0
       1: getfield      #22                 // Field dateTypeAdapter:Lio/lakefs/clients/api/JSON$DateTypeAdapter;
       4: aload_1
       5: invokevirtual #57                 // Method io/lakefs/clients/api/JSON$DateTypeAdapter.setFormat:(Ljava/text/DateFormat;)V
       8: aload_0
       9: areturn

  public io.lakefs.clients.api.JSON setSqlDateFormat(java.text.DateFormat);
    Code:
       0: aload_0
       1: getfield      #25                 // Field sqlDateTypeAdapter:Lio/lakefs/clients/api/JSON$SqlDateTypeAdapter;
       4: aload_1
       5: invokevirtual #58                 // Method io/lakefs/clients/api/JSON$SqlDateTypeAdapter.setFormat:(Ljava/text/DateFormat;)V
       8: aload_0
       9: areturn
}
