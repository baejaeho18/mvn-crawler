Compiled from "HealthCheckApi.java"
public class io.lakefs.clients.api.HealthCheckApi {
  private io.lakefs.clients.api.ApiClient localVarApiClient;

  public io.lakefs.clients.api.HealthCheckApi();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method io/lakefs/clients/api/Configuration.getDefaultApiClient:()Lio/lakefs/clients/api/ApiClient;
       4: invokespecial #2                  // Method "<init>":(Lio/lakefs/clients/api/ApiClient;)V
       7: return

  public io.lakefs.clients.api.HealthCheckApi(io.lakefs.clients.api.ApiClient);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
       9: return

  public io.lakefs.clients.api.ApiClient getApiClient();
    Code:
       0: aload_0
       1: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
       4: areturn

  public void setApiClient(io.lakefs.clients.api.ApiClient);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
       5: return

  public okhttp3.Call healthCheckCall(io.lakefs.clients.api.ApiCallback) throws io.lakefs.clients.api.ApiException;
    Code:
       0: aconst_null
       1: astore_2
       2: ldc           #5                  // String /healthcheck
       4: astore_3
       5: new           #6                  // class java/util/ArrayList
       8: dup
       9: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      12: astore        4
      14: new           #6                  // class java/util/ArrayList
      17: dup
      18: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      21: astore        5
      23: new           #8                  // class java/util/HashMap
      26: dup
      27: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      30: astore        6
      32: new           #8                  // class java/util/HashMap
      35: dup
      36: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      39: astore        7
      41: new           #8                  // class java/util/HashMap
      44: dup
      45: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      48: astore        8
      50: iconst_0
      51: anewarray     #10                 // class java/lang/String
      54: astore        9
      56: aload_0
      57: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      60: aload         9
      62: invokevirtual #11                 // Method io/lakefs/clients/api/ApiClient.selectHeaderAccept:([Ljava/lang/String;)Ljava/lang/String;
      65: astore        10
      67: aload         10
      69: ifnull        84
      72: aload         6
      74: ldc           #12                 // String Accept
      76: aload         10
      78: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: iconst_0
      85: anewarray     #10                 // class java/lang/String
      88: astore        11
      90: aload_0
      91: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      94: aload         11
      96: invokevirtual #14                 // Method io/lakefs/clients/api/ApiClient.selectHeaderContentType:([Ljava/lang/String;)Ljava/lang/String;
      99: astore        12
     101: aload         6
     103: ldc           #15                 // String Content-Type
     105: aload         12
     107: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     112: pop
     113: iconst_0
     114: anewarray     #10                 // class java/lang/String
     117: astore        13
     119: aload_0
     120: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
     123: aload_3
     124: ldc           #16                 // String GET
     126: aload         4
     128: aload         5
     130: aload_2
     131: aload         6
     133: aload         7
     135: aload         8
     137: aload         13
     139: aload_1
     140: invokevirtual #17                 // Method io/lakefs/clients/api/ApiClient.buildCall:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/Object;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;[Ljava/lang/String;Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
     143: areturn

  private okhttp3.Call healthCheckValidateBeforeCall(io.lakefs.clients.api.ApiCallback) throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method healthCheckCall:(Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
       5: astore_2
       6: aload_2
       7: areturn

  public void healthCheck() throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method healthCheckWithHttpInfo:()Lio/lakefs/clients/api/ApiResponse;
       4: pop
       5: return

  public io.lakefs.clients.api.ApiResponse<java.lang.Void> healthCheckWithHttpInfo() throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #20                 // Method healthCheckValidateBeforeCall:(Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
       5: astore_1
       6: aload_0
       7: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      10: aload_1
      11: invokevirtual #21                 // Method io/lakefs/clients/api/ApiClient.execute:(Lokhttp3/Call;)Lio/lakefs/clients/api/ApiResponse;
      14: areturn

  public okhttp3.Call healthCheckAsync(io.lakefs.clients.api.ApiCallback<java.lang.Void>) throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method healthCheckValidateBeforeCall:(Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
       5: astore_2
       6: aload_0
       7: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      10: aload_2
      11: aload_1
      12: invokevirtual #22                 // Method io/lakefs/clients/api/ApiClient.executeAsync:(Lokhttp3/Call;Lio/lakefs/clients/api/ApiCallback;)V
      15: aload_2
      16: areturn
}
