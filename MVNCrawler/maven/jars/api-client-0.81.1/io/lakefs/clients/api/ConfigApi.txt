Compiled from "ConfigApi.java"
public class io.lakefs.clients.api.ConfigApi {
  private io.lakefs.clients.api.ApiClient localVarApiClient;

  public io.lakefs.clients.api.ConfigApi();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method io/lakefs/clients/api/Configuration.getDefaultApiClient:()Lio/lakefs/clients/api/ApiClient;
       4: invokespecial #2                  // Method "<init>":(Lio/lakefs/clients/api/ApiClient;)V
       7: return

  public io.lakefs.clients.api.ConfigApi(io.lakefs.clients.api.ApiClient);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
       9: return

  public io.lakefs.clients.api.ApiClient getApiClient();
    Code:
       0: aload_0
       1: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
       4: areturn

  public void setApiClient(io.lakefs.clients.api.ApiClient);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
       5: return

  public okhttp3.Call getLakeFSVersionCall(io.lakefs.clients.api.ApiCallback) throws io.lakefs.clients.api.ApiException;
    Code:
       0: aconst_null
       1: astore_2
       2: ldc           #5                  // String /config/version
       4: astore_3
       5: new           #6                  // class java/util/ArrayList
       8: dup
       9: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      12: astore        4
      14: new           #6                  // class java/util/ArrayList
      17: dup
      18: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      21: astore        5
      23: new           #8                  // class java/util/HashMap
      26: dup
      27: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      30: astore        6
      32: new           #8                  // class java/util/HashMap
      35: dup
      36: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      39: astore        7
      41: new           #8                  // class java/util/HashMap
      44: dup
      45: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      48: astore        8
      50: iconst_1
      51: anewarray     #10                 // class java/lang/String
      54: dup
      55: iconst_0
      56: ldc           #11                 // String application/json
      58: aastore
      59: astore        9
      61: aload_0
      62: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      65: aload         9
      67: invokevirtual #12                 // Method io/lakefs/clients/api/ApiClient.selectHeaderAccept:([Ljava/lang/String;)Ljava/lang/String;
      70: astore        10
      72: aload         10
      74: ifnull        89
      77: aload         6
      79: ldc           #13                 // String Accept
      81: aload         10
      83: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      88: pop
      89: iconst_0
      90: anewarray     #10                 // class java/lang/String
      93: astore        11
      95: aload_0
      96: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      99: aload         11
     101: invokevirtual #15                 // Method io/lakefs/clients/api/ApiClient.selectHeaderContentType:([Ljava/lang/String;)Ljava/lang/String;
     104: astore        12
     106: aload         6
     108: ldc           #16                 // String Content-Type
     110: aload         12
     112: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     117: pop
     118: iconst_4
     119: anewarray     #10                 // class java/lang/String
     122: dup
     123: iconst_0
     124: ldc           #17                 // String basic_auth
     126: aastore
     127: dup
     128: iconst_1
     129: ldc           #18                 // String cookie_auth
     131: aastore
     132: dup
     133: iconst_2
     134: ldc           #19                 // String jwt_token
     136: aastore
     137: dup
     138: iconst_3
     139: ldc           #20                 // String oidc_auth
     141: aastore
     142: astore        13
     144: aload_0
     145: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
     148: aload_3
     149: ldc           #21                 // String GET
     151: aload         4
     153: aload         5
     155: aload_2
     156: aload         6
     158: aload         7
     160: aload         8
     162: aload         13
     164: aload_1
     165: invokevirtual #22                 // Method io/lakefs/clients/api/ApiClient.buildCall:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/Object;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;[Ljava/lang/String;Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
     168: areturn

  private okhttp3.Call getLakeFSVersionValidateBeforeCall(io.lakefs.clients.api.ApiCallback) throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method getLakeFSVersionCall:(Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
       5: astore_2
       6: aload_2
       7: areturn

  public io.lakefs.clients.api.model.VersionConfig getLakeFSVersion() throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getLakeFSVersionWithHttpInfo:()Lio/lakefs/clients/api/ApiResponse;
       4: astore_1
       5: aload_1
       6: invokevirtual #25                 // Method io/lakefs/clients/api/ApiResponse.getData:()Ljava/lang/Object;
       9: checkcast     #26                 // class io/lakefs/clients/api/model/VersionConfig
      12: areturn

  public io.lakefs.clients.api.ApiResponse<io.lakefs.clients.api.model.VersionConfig> getLakeFSVersionWithHttpInfo() throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #27                 // Method getLakeFSVersionValidateBeforeCall:(Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
       5: astore_1
       6: new           #28                 // class io/lakefs/clients/api/ConfigApi$1
       9: dup
      10: aload_0
      11: invokespecial #29                 // Method io/lakefs/clients/api/ConfigApi$1."<init>":(Lio/lakefs/clients/api/ConfigApi;)V
      14: invokevirtual #30                 // Method io/lakefs/clients/api/ConfigApi$1.getType:()Ljava/lang/reflect/Type;
      17: astore_2
      18: aload_0
      19: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      22: aload_1
      23: aload_2
      24: invokevirtual #31                 // Method io/lakefs/clients/api/ApiClient.execute:(Lokhttp3/Call;Ljava/lang/reflect/Type;)Lio/lakefs/clients/api/ApiResponse;
      27: areturn

  public okhttp3.Call getLakeFSVersionAsync(io.lakefs.clients.api.ApiCallback<io.lakefs.clients.api.model.VersionConfig>) throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #27                 // Method getLakeFSVersionValidateBeforeCall:(Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
       5: astore_2
       6: new           #32                 // class io/lakefs/clients/api/ConfigApi$2
       9: dup
      10: aload_0
      11: invokespecial #33                 // Method io/lakefs/clients/api/ConfigApi$2."<init>":(Lio/lakefs/clients/api/ConfigApi;)V
      14: invokevirtual #34                 // Method io/lakefs/clients/api/ConfigApi$2.getType:()Ljava/lang/reflect/Type;
      17: astore_3
      18: aload_0
      19: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      22: aload_2
      23: aload_3
      24: aload_1
      25: invokevirtual #35                 // Method io/lakefs/clients/api/ApiClient.executeAsync:(Lokhttp3/Call;Ljava/lang/reflect/Type;Lio/lakefs/clients/api/ApiCallback;)V
      28: aload_2
      29: areturn

  public okhttp3.Call getSetupStateCall(io.lakefs.clients.api.ApiCallback) throws io.lakefs.clients.api.ApiException;
    Code:
       0: aconst_null
       1: astore_2
       2: ldc           #36                 // String /setup_lakefs
       4: astore_3
       5: new           #6                  // class java/util/ArrayList
       8: dup
       9: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      12: astore        4
      14: new           #6                  // class java/util/ArrayList
      17: dup
      18: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      21: astore        5
      23: new           #8                  // class java/util/HashMap
      26: dup
      27: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      30: astore        6
      32: new           #8                  // class java/util/HashMap
      35: dup
      36: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      39: astore        7
      41: new           #8                  // class java/util/HashMap
      44: dup
      45: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      48: astore        8
      50: iconst_1
      51: anewarray     #10                 // class java/lang/String
      54: dup
      55: iconst_0
      56: ldc           #11                 // String application/json
      58: aastore
      59: astore        9
      61: aload_0
      62: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      65: aload         9
      67: invokevirtual #12                 // Method io/lakefs/clients/api/ApiClient.selectHeaderAccept:([Ljava/lang/String;)Ljava/lang/String;
      70: astore        10
      72: aload         10
      74: ifnull        89
      77: aload         6
      79: ldc           #13                 // String Accept
      81: aload         10
      83: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      88: pop
      89: iconst_0
      90: anewarray     #10                 // class java/lang/String
      93: astore        11
      95: aload_0
      96: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      99: aload         11
     101: invokevirtual #15                 // Method io/lakefs/clients/api/ApiClient.selectHeaderContentType:([Ljava/lang/String;)Ljava/lang/String;
     104: astore        12
     106: aload         6
     108: ldc           #16                 // String Content-Type
     110: aload         12
     112: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     117: pop
     118: iconst_0
     119: anewarray     #10                 // class java/lang/String
     122: astore        13
     124: aload_0
     125: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
     128: aload_3
     129: ldc           #21                 // String GET
     131: aload         4
     133: aload         5
     135: aload_2
     136: aload         6
     138: aload         7
     140: aload         8
     142: aload         13
     144: aload_1
     145: invokevirtual #22                 // Method io/lakefs/clients/api/ApiClient.buildCall:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/Object;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;[Ljava/lang/String;Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
     148: areturn

  private okhttp3.Call getSetupStateValidateBeforeCall(io.lakefs.clients.api.ApiCallback) throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #37                 // Method getSetupStateCall:(Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
       5: astore_2
       6: aload_2
       7: areturn

  public io.lakefs.clients.api.model.SetupState getSetupState() throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getSetupStateWithHttpInfo:()Lio/lakefs/clients/api/ApiResponse;
       4: astore_1
       5: aload_1
       6: invokevirtual #25                 // Method io/lakefs/clients/api/ApiResponse.getData:()Ljava/lang/Object;
       9: checkcast     #39                 // class io/lakefs/clients/api/model/SetupState
      12: areturn

  public io.lakefs.clients.api.ApiResponse<io.lakefs.clients.api.model.SetupState> getSetupStateWithHttpInfo() throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #40                 // Method getSetupStateValidateBeforeCall:(Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
       5: astore_1
       6: new           #41                 // class io/lakefs/clients/api/ConfigApi$3
       9: dup
      10: aload_0
      11: invokespecial #42                 // Method io/lakefs/clients/api/ConfigApi$3."<init>":(Lio/lakefs/clients/api/ConfigApi;)V
      14: invokevirtual #43                 // Method io/lakefs/clients/api/ConfigApi$3.getType:()Ljava/lang/reflect/Type;
      17: astore_2
      18: aload_0
      19: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      22: aload_1
      23: aload_2
      24: invokevirtual #31                 // Method io/lakefs/clients/api/ApiClient.execute:(Lokhttp3/Call;Ljava/lang/reflect/Type;)Lio/lakefs/clients/api/ApiResponse;
      27: areturn

  public okhttp3.Call getSetupStateAsync(io.lakefs.clients.api.ApiCallback<io.lakefs.clients.api.model.SetupState>) throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #40                 // Method getSetupStateValidateBeforeCall:(Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
       5: astore_2
       6: new           #44                 // class io/lakefs/clients/api/ConfigApi$4
       9: dup
      10: aload_0
      11: invokespecial #45                 // Method io/lakefs/clients/api/ConfigApi$4."<init>":(Lio/lakefs/clients/api/ConfigApi;)V
      14: invokevirtual #46                 // Method io/lakefs/clients/api/ConfigApi$4.getType:()Ljava/lang/reflect/Type;
      17: astore_3
      18: aload_0
      19: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      22: aload_2
      23: aload_3
      24: aload_1
      25: invokevirtual #35                 // Method io/lakefs/clients/api/ApiClient.executeAsync:(Lokhttp3/Call;Ljava/lang/reflect/Type;Lio/lakefs/clients/api/ApiCallback;)V
      28: aload_2
      29: areturn

  public okhttp3.Call getStorageConfigCall(io.lakefs.clients.api.ApiCallback) throws io.lakefs.clients.api.ApiException;
    Code:
       0: aconst_null
       1: astore_2
       2: ldc           #47                 // String /config/storage
       4: astore_3
       5: new           #6                  // class java/util/ArrayList
       8: dup
       9: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      12: astore        4
      14: new           #6                  // class java/util/ArrayList
      17: dup
      18: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      21: astore        5
      23: new           #8                  // class java/util/HashMap
      26: dup
      27: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      30: astore        6
      32: new           #8                  // class java/util/HashMap
      35: dup
      36: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      39: astore        7
      41: new           #8                  // class java/util/HashMap
      44: dup
      45: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      48: astore        8
      50: iconst_1
      51: anewarray     #10                 // class java/lang/String
      54: dup
      55: iconst_0
      56: ldc           #11                 // String application/json
      58: aastore
      59: astore        9
      61: aload_0
      62: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      65: aload         9
      67: invokevirtual #12                 // Method io/lakefs/clients/api/ApiClient.selectHeaderAccept:([Ljava/lang/String;)Ljava/lang/String;
      70: astore        10
      72: aload         10
      74: ifnull        89
      77: aload         6
      79: ldc           #13                 // String Accept
      81: aload         10
      83: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      88: pop
      89: iconst_0
      90: anewarray     #10                 // class java/lang/String
      93: astore        11
      95: aload_0
      96: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      99: aload         11
     101: invokevirtual #15                 // Method io/lakefs/clients/api/ApiClient.selectHeaderContentType:([Ljava/lang/String;)Ljava/lang/String;
     104: astore        12
     106: aload         6
     108: ldc           #16                 // String Content-Type
     110: aload         12
     112: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     117: pop
     118: iconst_4
     119: anewarray     #10                 // class java/lang/String
     122: dup
     123: iconst_0
     124: ldc           #17                 // String basic_auth
     126: aastore
     127: dup
     128: iconst_1
     129: ldc           #18                 // String cookie_auth
     131: aastore
     132: dup
     133: iconst_2
     134: ldc           #19                 // String jwt_token
     136: aastore
     137: dup
     138: iconst_3
     139: ldc           #20                 // String oidc_auth
     141: aastore
     142: astore        13
     144: aload_0
     145: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
     148: aload_3
     149: ldc           #21                 // String GET
     151: aload         4
     153: aload         5
     155: aload_2
     156: aload         6
     158: aload         7
     160: aload         8
     162: aload         13
     164: aload_1
     165: invokevirtual #22                 // Method io/lakefs/clients/api/ApiClient.buildCall:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/Object;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;[Ljava/lang/String;Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
     168: areturn

  private okhttp3.Call getStorageConfigValidateBeforeCall(io.lakefs.clients.api.ApiCallback) throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #48                 // Method getStorageConfigCall:(Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
       5: astore_2
       6: aload_2
       7: areturn

  public io.lakefs.clients.api.model.StorageConfig getStorageConfig() throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method getStorageConfigWithHttpInfo:()Lio/lakefs/clients/api/ApiResponse;
       4: astore_1
       5: aload_1
       6: invokevirtual #25                 // Method io/lakefs/clients/api/ApiResponse.getData:()Ljava/lang/Object;
       9: checkcast     #50                 // class io/lakefs/clients/api/model/StorageConfig
      12: areturn

  public io.lakefs.clients.api.ApiResponse<io.lakefs.clients.api.model.StorageConfig> getStorageConfigWithHttpInfo() throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #51                 // Method getStorageConfigValidateBeforeCall:(Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
       5: astore_1
       6: new           #52                 // class io/lakefs/clients/api/ConfigApi$5
       9: dup
      10: aload_0
      11: invokespecial #53                 // Method io/lakefs/clients/api/ConfigApi$5."<init>":(Lio/lakefs/clients/api/ConfigApi;)V
      14: invokevirtual #54                 // Method io/lakefs/clients/api/ConfigApi$5.getType:()Ljava/lang/reflect/Type;
      17: astore_2
      18: aload_0
      19: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      22: aload_1
      23: aload_2
      24: invokevirtual #31                 // Method io/lakefs/clients/api/ApiClient.execute:(Lokhttp3/Call;Ljava/lang/reflect/Type;)Lio/lakefs/clients/api/ApiResponse;
      27: areturn

  public okhttp3.Call getStorageConfigAsync(io.lakefs.clients.api.ApiCallback<io.lakefs.clients.api.model.StorageConfig>) throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #51                 // Method getStorageConfigValidateBeforeCall:(Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
       5: astore_2
       6: new           #55                 // class io/lakefs/clients/api/ConfigApi$6
       9: dup
      10: aload_0
      11: invokespecial #56                 // Method io/lakefs/clients/api/ConfigApi$6."<init>":(Lio/lakefs/clients/api/ConfigApi;)V
      14: invokevirtual #57                 // Method io/lakefs/clients/api/ConfigApi$6.getType:()Ljava/lang/reflect/Type;
      17: astore_3
      18: aload_0
      19: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      22: aload_2
      23: aload_3
      24: aload_1
      25: invokevirtual #35                 // Method io/lakefs/clients/api/ApiClient.executeAsync:(Lokhttp3/Call;Ljava/lang/reflect/Type;Lio/lakefs/clients/api/ApiCallback;)V
      28: aload_2
      29: areturn

  public okhttp3.Call setupCall(io.lakefs.clients.api.model.Setup, io.lakefs.clients.api.ApiCallback) throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_1
       1: astore_3
       2: ldc           #36                 // String /setup_lakefs
       4: astore        4
       6: new           #6                  // class java/util/ArrayList
       9: dup
      10: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      13: astore        5
      15: new           #6                  // class java/util/ArrayList
      18: dup
      19: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      22: astore        6
      24: new           #8                  // class java/util/HashMap
      27: dup
      28: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      31: astore        7
      33: new           #8                  // class java/util/HashMap
      36: dup
      37: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      40: astore        8
      42: new           #8                  // class java/util/HashMap
      45: dup
      46: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      49: astore        9
      51: iconst_1
      52: anewarray     #10                 // class java/lang/String
      55: dup
      56: iconst_0
      57: ldc           #11                 // String application/json
      59: aastore
      60: astore        10
      62: aload_0
      63: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      66: aload         10
      68: invokevirtual #12                 // Method io/lakefs/clients/api/ApiClient.selectHeaderAccept:([Ljava/lang/String;)Ljava/lang/String;
      71: astore        11
      73: aload         11
      75: ifnull        90
      78: aload         7
      80: ldc           #13                 // String Accept
      82: aload         11
      84: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: iconst_1
      91: anewarray     #10                 // class java/lang/String
      94: dup
      95: iconst_0
      96: ldc           #11                 // String application/json
      98: aastore
      99: astore        12
     101: aload_0
     102: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
     105: aload         12
     107: invokevirtual #15                 // Method io/lakefs/clients/api/ApiClient.selectHeaderContentType:([Ljava/lang/String;)Ljava/lang/String;
     110: astore        13
     112: aload         7
     114: ldc           #16                 // String Content-Type
     116: aload         13
     118: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     123: pop
     124: iconst_0
     125: anewarray     #10                 // class java/lang/String
     128: astore        14
     130: aload_0
     131: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
     134: aload         4
     136: ldc           #58                 // String POST
     138: aload         5
     140: aload         6
     142: aload_3
     143: aload         7
     145: aload         8
     147: aload         9
     149: aload         14
     151: aload_2
     152: invokevirtual #22                 // Method io/lakefs/clients/api/ApiClient.buildCall:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/Object;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;[Ljava/lang/String;Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
     155: areturn

  private okhttp3.Call setupValidateBeforeCall(io.lakefs.clients.api.model.Setup, io.lakefs.clients.api.ApiCallback) throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #59                 // class io/lakefs/clients/api/ApiException
       7: dup
       8: ldc           #60                 // String Missing the required parameter \'setup\' when calling setup(Async)
      10: invokespecial #61                 // Method io/lakefs/clients/api/ApiException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokevirtual #62                 // Method setupCall:(Lio/lakefs/clients/api/model/Setup;Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
      20: astore_3
      21: aload_3
      22: areturn

  public io.lakefs.clients.api.model.CredentialsWithSecret setup(io.lakefs.clients.api.model.Setup) throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #63                 // Method setupWithHttpInfo:(Lio/lakefs/clients/api/model/Setup;)Lio/lakefs/clients/api/ApiResponse;
       5: astore_2
       6: aload_2
       7: invokevirtual #25                 // Method io/lakefs/clients/api/ApiResponse.getData:()Ljava/lang/Object;
      10: checkcast     #64                 // class io/lakefs/clients/api/model/CredentialsWithSecret
      13: areturn

  public io.lakefs.clients.api.ApiResponse<io.lakefs.clients.api.model.CredentialsWithSecret> setupWithHttpInfo(io.lakefs.clients.api.model.Setup) throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #65                 // Method setupValidateBeforeCall:(Lio/lakefs/clients/api/model/Setup;Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
       6: astore_2
       7: new           #66                 // class io/lakefs/clients/api/ConfigApi$7
      10: dup
      11: aload_0
      12: invokespecial #67                 // Method io/lakefs/clients/api/ConfigApi$7."<init>":(Lio/lakefs/clients/api/ConfigApi;)V
      15: invokevirtual #68                 // Method io/lakefs/clients/api/ConfigApi$7.getType:()Ljava/lang/reflect/Type;
      18: astore_3
      19: aload_0
      20: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      23: aload_2
      24: aload_3
      25: invokevirtual #31                 // Method io/lakefs/clients/api/ApiClient.execute:(Lokhttp3/Call;Ljava/lang/reflect/Type;)Lio/lakefs/clients/api/ApiResponse;
      28: areturn

  public okhttp3.Call setupAsync(io.lakefs.clients.api.model.Setup, io.lakefs.clients.api.ApiCallback<io.lakefs.clients.api.model.CredentialsWithSecret>) throws io.lakefs.clients.api.ApiException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #65                 // Method setupValidateBeforeCall:(Lio/lakefs/clients/api/model/Setup;Lio/lakefs/clients/api/ApiCallback;)Lokhttp3/Call;
       6: astore_3
       7: new           #69                 // class io/lakefs/clients/api/ConfigApi$8
      10: dup
      11: aload_0
      12: invokespecial #70                 // Method io/lakefs/clients/api/ConfigApi$8."<init>":(Lio/lakefs/clients/api/ConfigApi;)V
      15: invokevirtual #71                 // Method io/lakefs/clients/api/ConfigApi$8.getType:()Ljava/lang/reflect/Type;
      18: astore        4
      20: aload_0
      21: getfield      #4                  // Field localVarApiClient:Lio/lakefs/clients/api/ApiClient;
      24: aload_3
      25: aload         4
      27: aload_2
      28: invokevirtual #35                 // Method io/lakefs/clients/api/ApiClient.executeAsync:(Lokhttp3/Call;Ljava/lang/reflect/Type;Lio/lakefs/clients/api/ApiCallback;)V
      31: aload_3
      32: areturn
}
