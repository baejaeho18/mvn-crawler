Compiled from "ZManaged.scala"
public final class zio.managed.ZManaged$ReleaseMap$unsafe$$anon$3 extends zio.managed.ZManaged$ReleaseMap {
  private final zio.Ref ref$1;

  public zio.managed.ZManaged$ReleaseMap$unsafe$$anon$3(zio.Ref);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field ref$1:Lzio/Ref;
       5: aload_0
       6: invokespecial #30                 // Method zio/managed/ZManaged$ReleaseMap."<init>":()V
       9: return

  public zio.ZIO add(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #39                 // Method addIfOpen:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
       6: aload_0
       7: aload_2
       8: invokedynamic #61,  0             // InvokeDynamic #0:apply:(Lzio/managed/ZManaged$ReleaseMap$unsafe$$anon$3;Ljava/lang/Object;)Lscala/Function1;
      13: aload_2
      14: invokeinterface #66,  3           // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      19: areturn

  public zio.ZIO addIfOpen(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref$1:Lzio/Ref;
       4: getstatic     #72                 // Field zio/managed/ZManaged$ReleaseMap$unsafe$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$unsafe$;
       7: aload_1
       8: aload_2
       9: invokedynamic #82,  0             // InvokeDynamic #1:apply:(Lzio/managed/ZManaged$ReleaseMap$unsafe$;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      14: aload_2
      15: invokevirtual #87                 // Method zio/Ref.modify:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      18: getstatic     #92                 // Field zio/IsSubtypeOfOutput$.MODULE$:Lzio/IsSubtypeOfOutput$;
      21: getstatic     #97                 // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
      24: invokevirtual #101                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
      27: invokevirtual #105                // Method zio/IsSubtypeOfOutput$.impl:(Lscala/$less$colon$less;)Lzio/IsSubtypeOfOutput;
      30: aload_2
      31: invokeinterface #109,  3          // InterfaceMethod zio/ZIO.flatten:(Lzio/IsSubtypeOfOutput;Ljava/lang/Object;)Lzio/ZIO;
      36: areturn

  public zio.ZIO get(long, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref$1:Lzio/Ref;
       4: aload_3
       5: invokevirtual #115                // Method zio/Ref.get:(Ljava/lang/Object;)Lzio/ZIO;
       8: lload_1
       9: invokedynamic #127,  0            // InvokeDynamic #2:apply:(J)Lscala/Function1;
      14: aload_3
      15: invokeinterface #66,  3           // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      20: areturn

  public zio.ZIO release(long, zio.Exit, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref$1:Lzio/Ref;
       4: lload_1
       5: aload_3
       6: invokedynamic #139,  0            // InvokeDynamic #3:apply:(JLzio/Exit;)Lscala/Function1;
      11: aload         4
      13: invokevirtual #87                 // Method zio/Ref.modify:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      16: getstatic     #92                 // Field zio/IsSubtypeOfOutput$.MODULE$:Lzio/IsSubtypeOfOutput$;
      19: getstatic     #97                 // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
      22: invokevirtual #101                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
      25: invokevirtual #105                // Method zio/IsSubtypeOfOutput$.impl:(Lscala/$less$colon$less;)Lzio/IsSubtypeOfOutput;
      28: aload         4
      30: invokeinterface #109,  3          // InterfaceMethod zio/ZIO.flatten:(Lzio/IsSubtypeOfOutput;Ljava/lang/Object;)Lzio/ZIO;
      35: areturn

  public zio.ZIO releaseAll(zio.Exit, zio.ExecutionStrategy, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref$1:Lzio/Ref;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokedynamic #151,  0            // InvokeDynamic #4:apply:(Lzio/Exit;Lzio/ExecutionStrategy;Ljava/lang/Object;)Lscala/Function1;
      12: aload_3
      13: invokevirtual #87                 // Method zio/Ref.modify:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      16: getstatic     #92                 // Field zio/IsSubtypeOfOutput$.MODULE$:Lzio/IsSubtypeOfOutput$;
      19: getstatic     #97                 // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
      22: invokevirtual #101                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
      25: invokevirtual #105                // Method zio/IsSubtypeOfOutput$.impl:(Lscala/$less$colon$less;)Lzio/IsSubtypeOfOutput;
      28: aload_3
      29: invokeinterface #109,  3          // InterfaceMethod zio/ZIO.flatten:(Lzio/IsSubtypeOfOutput;Ljava/lang/Object;)Lzio/ZIO;
      34: areturn

  public zio.ZIO remove(long, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref$1:Lzio/Ref;
       4: lload_1
       5: invokedynamic #159,  0            // InvokeDynamic #5:apply:(J)Lscala/Function1;
      10: aload_3
      11: invokevirtual #87                 // Method zio/Ref.modify:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public zio.ZIO replace(long, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref$1:Lzio/Ref;
       4: lload_1
       5: aload_3
       6: aload         4
       8: invokedynamic #169,  0            // InvokeDynamic #6:apply:(JLscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      13: aload         4
      15: invokevirtual #87                 // Method zio/Ref.modify:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      18: getstatic     #92                 // Field zio/IsSubtypeOfOutput$.MODULE$:Lzio/IsSubtypeOfOutput$;
      21: getstatic     #97                 // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
      24: invokevirtual #101                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
      27: invokevirtual #105                // Method zio/IsSubtypeOfOutput$.impl:(Lscala/$less$colon$less;)Lzio/IsSubtypeOfOutput;
      30: aload         4
      32: invokeinterface #109,  3          // InterfaceMethod zio/ZIO.flatten:(Lzio/IsSubtypeOfOutput;Ljava/lang/Object;)Lzio/ZIO;
      37: areturn

  public zio.ZIO updateAll(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #27                 // Field ref$1:Lzio/Ref;
       4: aload_1
       5: invokedynamic #181,  0            // InvokeDynamic #7:apply:(Lscala/Function1;)Lscala/Function1;
      10: aload_2
      11: invokevirtual #184                // Method zio/Ref.update:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public zio.ZIO get(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #191                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       5: aload_2
       6: invokevirtual #193                // Method get:(JLjava/lang/Object;)Lzio/ZIO;
       9: areturn

  public zio.ZIO release(java.lang.Object, zio.Exit, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #191                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       5: aload_2
       6: aload_3
       7: invokevirtual #196                // Method release:(JLzio/Exit;Ljava/lang/Object;)Lzio/ZIO;
      10: areturn

  public zio.ZIO remove(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #191                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       5: aload_2
       6: invokevirtual #198                // Method remove:(JLjava/lang/Object;)Lzio/ZIO;
       9: areturn

  public zio.ZIO replace(java.lang.Object, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #191                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       5: aload_2
       6: aload_3
       7: invokevirtual #201                // Method replace:(JLscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      10: areturn

  private final zio.ZIO add$$anonfun$1$$anonfun$1(java.lang.Object, long, zio.Exit);
    Code:
       0: aload_0
       1: lload_2
       2: aload         4
       4: aload_1
       5: invokevirtual #196                // Method release:(JLzio/Exit;Ljava/lang/Object;)Lzio/ZIO;
       8: areturn

  private final scala.Function1 add$$anonfun$1(java.lang.Object, scala.Option);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: instanceof    #210                // class scala/Some
       6: ifeq          31
       9: aload_3
      10: checkcast     #210                // class scala/Some
      13: invokevirtual #214                // Method scala/Some.value:()Ljava/lang/Object;
      16: invokestatic  #191                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
      19: lstore        4
      21: aload_0
      22: aload_1
      23: lload         4
      25: invokedynamic #222,  0            // InvokeDynamic #8:apply:(Lzio/managed/ZManaged$ReleaseMap$unsafe$$anon$3;Ljava/lang/Object;J)Lscala/Function1;
      30: areturn
      31: getstatic     #227                // Field scala/None$.MODULE$:Lscala/None$;
      34: aload_3
      35: invokevirtual #233                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      38: ifeq          47
      41: invokedynamic #240,  0            // InvokeDynamic #9:apply:()Lscala/Function1;
      46: areturn
      47: new           #242                // class scala/MatchError
      50: dup
      51: aload_3
      52: invokespecial #245                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      55: athrow

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #260,  0            // InvokeDynamic #10:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
