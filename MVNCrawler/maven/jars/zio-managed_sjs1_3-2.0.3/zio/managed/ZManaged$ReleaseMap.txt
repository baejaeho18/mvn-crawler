Compiled from "ZManaged.scala"
public abstract class zio.managed.ZManaged$ReleaseMap implements java.io.Serializable {
  public static zio.ZIO<java.lang.Object, scala.runtime.Nothing$, zio.managed.ZManaged$ReleaseMap> make(java.lang.Object);
    Code:
       0: getstatic     #20                 // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       3: aload_0
       4: invokevirtual #22                 // Method zio/managed/ZManaged$ReleaseMap$.make:(Ljava/lang/Object;)Lzio/ZIO;
       7: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, zio.managed.ZManaged$ReleaseMap> makeManaged(zio.ExecutionStrategy, java.lang.Object);
    Code:
       0: getstatic     #20                 // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       3: aload_0
       4: aload_1
       5: invokevirtual #27                 // Method zio/managed/ZManaged$ReleaseMap$.makeManaged:(Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, zio.managed.ZManaged$ReleaseMap> makeManagedPar(java.lang.Object);
    Code:
       0: getstatic     #20                 // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       3: aload_0
       4: invokevirtual #32                 // Method zio/managed/ZManaged$ReleaseMap$.makeManagedPar:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public zio.managed.ZManaged$ReleaseMap();
    Code:
       0: aload_0
       1: invokespecial #36                 // Method java/lang/Object."<init>":()V
       4: return

  public abstract zio.ZIO<java.lang.Object, scala.runtime.Nothing$, scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>>> add(scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);

  public abstract zio.ZIO<java.lang.Object, scala.runtime.Nothing$, scala.Option<java.lang.Object>> addIfOpen(scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);

  public abstract zio.ZIO<java.lang.Object, scala.runtime.Nothing$, scala.Option<scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>>>> get(java.lang.Object, java.lang.Object);

  public abstract zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object> release(java.lang.Object, zio.Exit<java.lang.Object, java.lang.Object>, java.lang.Object);

  public abstract zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object> releaseAll(zio.Exit<java.lang.Object, java.lang.Object>, zio.ExecutionStrategy, java.lang.Object);

  public abstract zio.ZIO<java.lang.Object, scala.runtime.Nothing$, scala.Option<scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>>>> remove(java.lang.Object, java.lang.Object);

  public abstract zio.ZIO<java.lang.Object, scala.runtime.Nothing$, scala.Option<scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>>>> replace(java.lang.Object, scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);

  public abstract zio.ZIO<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> updateAll(scala.Function1<scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>>, scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>>>, java.lang.Object);
}
