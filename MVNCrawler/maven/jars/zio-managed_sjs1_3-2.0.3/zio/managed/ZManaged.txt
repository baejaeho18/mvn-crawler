Compiled from "ZManaged.scala"
public abstract class zio.managed.ZManaged<R, E, A> implements zio.managed.ZManagedVersionSpecific<R, E, A>, java.io.Serializable {
  public static <R, E extends java.lang.Throwable, A> zio.managed.ZManaged RefineToOrDieOps(zio.managed.ZManaged<R, E, A>);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #204                // Method zio/managed/ZManaged$.RefineToOrDieOps:(Lzio/managed/ZManaged;)Lzio/managed/ZManaged;
       7: areturn

  public static <R, R1 extends R, E, A> zio.managed.ZManaged<R1, E, A> acquireRelease(scala.Function0<zio.ZIO<R, E, A>>, scala.Function0<zio.ZIO<R1, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #209                // Method zio/managed/ZManaged$.acquireRelease:(Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <A> zio.managed.ZManaged<java.lang.Object, java.lang.Throwable, A> acquireReleaseAttempt(scala.Function0<A>, scala.Function0<java.lang.Object>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #213                // Method zio/managed/ZManaged$.acquireReleaseAttempt:(Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <A> zio.managed.ZManaged<java.lang.Object, java.lang.Throwable, A> acquireReleaseAttemptWith(scala.Function0<A>, scala.Function1<A, java.lang.Object>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #218                // Method zio/managed/ZManaged$.acquireReleaseAttemptWith:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <R, R1 extends R, E, A> zio.managed.ZManaged<R1, E, A> acquireReleaseExit(scala.Function0<zio.ZIO<R, E, A>>, scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<R1, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #222                // Method zio/managed/ZManaged$.acquireReleaseExit:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <R, R1 extends R, E, A> zio.managed.ZManaged<R1, E, A> acquireReleaseExitWith(scala.Function0<zio.ZIO<R, E, A>>, scala.Function2<A, zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<R1, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #227                // Method zio/managed/ZManaged$.acquireReleaseExitWith:(Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <R, R1 extends R, E, A> zio.managed.ZManaged<R1, E, A> acquireReleaseInterruptible(scala.Function0<zio.ZIO<R, E, A>>, scala.Function0<zio.ZIO<R1, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #230                // Method zio/managed/ZManaged$.acquireReleaseInterruptible:(Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <R, R1 extends R, E, A> zio.managed.ZManaged<R1, E, A> acquireReleaseInterruptibleWith(scala.Function0<zio.ZIO<R, E, A>>, scala.Function1<A, zio.ZIO<R1, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #234                // Method zio/managed/ZManaged$.acquireReleaseInterruptibleWith:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <A> zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, A> acquireReleaseSucceed(scala.Function0<A>, scala.Function0<java.lang.Object>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #238                // Method zio/managed/ZManaged$.acquireReleaseSucceed:(Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <A> zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, A> acquireReleaseSucceedWith(scala.Function0<A>, scala.Function1<A, java.lang.Object>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #242                // Method zio/managed/ZManaged$.acquireReleaseSucceedWith:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <R, R1 extends R, E, A> zio.managed.ZManaged<R1, E, A> acquireReleaseWith(scala.Function0<zio.ZIO<R, E, A>>, scala.Function1<A, zio.ZIO<R1, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #245                // Method zio/managed/ZManaged$.acquireReleaseWith:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <R, E, A> zio.managed.ZManaged<R, E, A> apply(zio.ZIO<R, E, scala.Tuple2<scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>>, A>>);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
       7: areturn

  public static <A> zio.managed.ZManaged<java.lang.Object, java.lang.Throwable, A> attempt(scala.Function0<A>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #255                // Method zio/managed/ZManaged$.attempt:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <R, E, A, Collection extends scala.collection.Iterable<java.lang.Object>> zio.managed.ZManaged<R, E, scala.collection.Iterable<A>> collectAll(scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>, scala.collection.BuildFrom<scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>, A, scala.collection.Iterable<A>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #260                // Method zio/managed/ZManaged$.collectAll:(Lscala/collection/Iterable;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <R, E, A> zio.managed.ZManaged<R, E, scala.runtime.BoxedUnit> collectAllDiscard(scala.Function0<scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #264                // Method zio/managed/ZManaged$.collectAllDiscard:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <R, E, A, Collection extends scala.collection.Iterable<java.lang.Object>> zio.managed.ZManaged<R, E, scala.collection.Iterable<A>> collectAllPar(scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>, scala.collection.BuildFrom<scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>, A, scala.collection.Iterable<A>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #267                // Method zio/managed/ZManaged$.collectAllPar:(Lscala/collection/Iterable;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <R, E, A> zio.managed.ZManaged<R, E, scala.runtime.BoxedUnit> collectAllParDiscard(scala.Function0<scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #270                // Method zio/managed/ZManaged$.collectAllParDiscard:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <R, E, A, B> zio.managed.ZManaged<R, E, scala.Option<B>> collectFirst(scala.Function0<scala.collection.Iterable<A>>, scala.Function1<A, zio.managed.ZManaged<R, E, scala.Option<B>>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #274                // Method zio/managed/ZManaged$.collectFirst:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <R, E, A, B, Collection extends scala.collection.Iterable<java.lang.Object>> zio.managed.ZManaged<R, E, scala.collection.Iterable<B>> collectPar(scala.collection.Iterable<A>, scala.Function1<A, zio.managed.ZManaged<R, scala.Option<E>, B>>, scala.collection.BuildFrom<scala.collection.Iterable<A>, B, scala.collection.Iterable<B>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #279                // Method zio/managed/ZManaged$.collectPar:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/managed/ZManaged;
      10: areturn

  public static <E, A> zio.managed.ZManaged<java.lang.Object, E, A> cond(scala.Function0<java.lang.Object>, scala.Function0<A>, scala.Function0<E>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #284                // Method zio/managed/ZManaged$.cond:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      10: areturn

  public static zio.FiberRef<zio.managed.ZManaged$ReleaseMap> currentReleaseMap();
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       6: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.Nothing$> die(scala.Function0<java.lang.Throwable>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #293                // Method zio/managed/ZManaged$.die:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.Nothing$> dieMessage(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #297                // Method zio/managed/ZManaged$.dieMessage:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <E, A> zio.managed.ZManaged<java.lang.Object, E, A> done(scala.Function0<zio.Exit<E, A>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #301                // Method zio/managed/ZManaged$.done:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <R> zio.managed.ZManaged<R, scala.runtime.Nothing$, zio.ZEnvironment<R>> environment(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #306                // Method zio/managed/ZManaged$.environment:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public static <R> boolean environmentWith();
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #311                // Method zio/managed/ZManaged$.environmentWith:()Z
       6: ireturn

  public static <R> boolean environmentWithManaged();
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #314                // Method zio/managed/ZManaged$.environmentWithManaged:()Z
       6: ireturn

  public static <R> boolean environmentWithZIO();
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #317                // Method zio/managed/ZManaged$.environmentWithZIO:()Z
       6: ireturn

  public static <R, E, A> zio.managed.ZManaged<R, E, java.lang.Object> exists(scala.Function0<scala.collection.Iterable<A>>, scala.Function1<A, zio.managed.ZManaged<R, E, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #321                // Method zio/managed/ZManaged$.exists:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <E> zio.managed.ZManaged<java.lang.Object, E, scala.runtime.Nothing$> fail(scala.Function0<E>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <E> zio.managed.ZManaged<java.lang.Object, E, scala.runtime.Nothing$> failCause(scala.Function0<zio.Cause<E>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #329                // Method zio/managed/ZManaged$.failCause:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, zio.FiberId> fiberId(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #333                // Method zio/managed/ZManaged$.fiberId:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public static <R> zio.managed.ZManaged<R, scala.runtime.Nothing$, scala.runtime.BoxedUnit> finalizer(scala.Function0<zio.ZIO<R, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #337                // Method zio/managed/ZManaged$.finalizer:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <R> zio.managed.ZManaged<R, scala.runtime.Nothing$, scala.runtime.BoxedUnit> finalizerExit(scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<R, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #342                // Method zio/managed/ZManaged$.finalizerExit:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <R> zio.managed.ZManaged<R, scala.runtime.Nothing$, zio.Ref<scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>>>> finalizerRef(scala.Function0<scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #346                // Method zio/managed/ZManaged$.finalizerRef:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <R, E, S, A> zio.managed.ZManaged<R, E, S> foldLeft(scala.Function0<scala.collection.Iterable<A>>, scala.Function0<S>, scala.Function2<S, A, zio.managed.ZManaged<R, E, S>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #351                // Method zio/managed/ZManaged$.foldLeft:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/managed/ZManaged;
      10: areturn

  public static <R, E, A> zio.managed.ZManaged<R, E, java.lang.Object> forall(scala.Function0<scala.collection.Iterable<A>>, scala.Function1<A, zio.managed.ZManaged<R, E, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #354                // Method zio/managed/ZManaged$.forall:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <R, E, A1, A2, Collection extends scala.collection.Iterable<java.lang.Object>> zio.managed.ZManaged<R, E, scala.collection.Iterable<A2>> foreach(scala.collection.Iterable<A1>, scala.Function1<A1, zio.managed.ZManaged<R, E, A2>>, scala.collection.BuildFrom<scala.collection.Iterable<A1>, A2, scala.collection.Iterable<A2>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #358                // Method zio/managed/ZManaged$.foreach:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/managed/ZManaged;
      10: areturn

  public static <R, E, A1, A2> zio.managed.ZManaged<R, E, scala.Option<A2>> foreach(scala.Option<A1>, scala.Function1<A1, zio.managed.ZManaged<R, E, A2>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #362                // Method zio/managed/ZManaged$.foreach:(Lscala/Option;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <R, E, A> zio.managed.ZManaged<R, E, scala.runtime.BoxedUnit> foreachDiscard(scala.Function0<scala.collection.Iterable<A>>, scala.Function1<A, zio.managed.ZManaged<R, E, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #366                // Method zio/managed/ZManaged$.foreachDiscard:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <R, E, A, B, Collection extends scala.collection.Iterable<java.lang.Object>> zio.managed.ZManaged<R, E, scala.collection.Iterable<B>> foreachExec(scala.collection.Iterable<A>, scala.Function0<zio.ExecutionStrategy>, scala.Function1<A, zio.managed.ZManaged<R, E, B>>, scala.collection.BuildFrom<scala.collection.Iterable<A>, B, scala.collection.Iterable<B>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #371                // Method zio/managed/ZManaged$.foreachExec:(Lscala/collection/Iterable;Lscala/Function0;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public static <R, E, A1, A2, Collection extends scala.collection.Iterable<java.lang.Object>> zio.managed.ZManaged<R, E, scala.collection.Iterable<A2>> foreachPar(scala.collection.Iterable<A1>, scala.Function1<A1, zio.managed.ZManaged<R, E, A2>>, scala.collection.BuildFrom<scala.collection.Iterable<A1>, A2, scala.collection.Iterable<A2>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #374                // Method zio/managed/ZManaged$.foreachPar:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/managed/ZManaged;
      10: areturn

  public static <R, E, A> zio.managed.ZManaged<R, E, scala.runtime.BoxedUnit> foreachParDiscard(scala.Function0<scala.collection.Iterable<A>>, scala.Function1<A, zio.managed.ZManaged<R, E, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #377                // Method zio/managed/ZManaged$.foreachParDiscard:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <Input> java.lang.Object from(scala.Function0<Input>, zio.managed.ZManaged$ZManagedConstructor<Input>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #382                // Method zio/managed/ZManaged$.from:(Lscala/Function0;Lzio/managed/ZManaged$ZManagedConstructor;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public static <R, E, A extends java.lang.AutoCloseable> zio.managed.ZManaged<R, E, A> fromAutoCloseable(scala.Function0<zio.ZIO<R, E, A>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #386                // Method zio/managed/ZManaged$.fromAutoCloseable:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <E, A> zio.managed.ZManaged<java.lang.Object, E, A> fromEither(scala.Function0<scala.util.Either<E, A>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #390                // Method zio/managed/ZManaged$.fromEither:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <A> zio.managed.ZManaged<java.lang.Object, scala.Option<scala.runtime.Nothing$>, A> fromOption(scala.Function0<scala.Option<A>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #394                // Method zio/managed/ZManaged$.fromOption:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <R, E, A> zio.managed.ZManaged<R, E, A> fromReservation(scala.Function0<zio.managed.Reservation<R, E, A>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #398                // Method zio/managed/ZManaged$.fromReservation:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <R, E, A> zio.managed.ZManaged<R, E, A> fromReservationZIO(scala.Function0<zio.ZIO<R, E, zio.managed.Reservation<R, E, A>>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #402                // Method zio/managed/ZManaged$.fromReservationZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <A> zio.managed.ZManaged<java.lang.Object, java.lang.Throwable, A> fromTry(scala.Function0<scala.util.Try<A>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #406                // Method zio/managed/ZManaged$.fromTry:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <R, E, A> zio.managed.ZManaged<R, E, A> fromZIO(scala.Function0<zio.ZIO<R, E, A>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #410                // Method zio/managed/ZManaged$.fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <R, E, A> zio.managed.ZManaged<R, E, A> fromZIOUninterruptible(scala.Function0<zio.ZIO<R, E, A>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #413                // Method zio/managed/ZManaged$.fromZIOUninterruptible:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <R, E> scala.Function0 ifManaged(scala.Function0<zio.managed.ZManaged<R, E, java.lang.Object>>);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #418                // Method zio/managed/ZManaged$.ifManaged:(Lscala/Function0;)Lscala/Function0;
       7: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.Nothing$> interrupt(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #422                // Method zio/managed/ZManaged$.interrupt:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.Nothing$> interruptAs(scala.Function0<zio.FiberId>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #426                // Method zio/managed/ZManaged$.interruptAs:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <R, E, S> zio.managed.ZManaged<R, E, S> iterate(scala.Function0<S>, scala.Function1<S, java.lang.Object>, scala.Function1<S, zio.managed.ZManaged<R, E, S>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #431                // Method zio/managed/ZManaged$.iterate:(Lscala/Function0;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      10: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> lock(scala.Function0<zio.Executor>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #435                // Method zio/managed/ZManaged$.lock:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> log(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #439                // Method zio/managed/ZManaged$.log:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logAnnotate(scala.Function0<java.lang.String>, scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #443                // Method zio/managed/ZManaged$.logAnnotate:(Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.collection.immutable.Map<java.lang.String, java.lang.String>> logAnnotations(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #447                // Method zio/managed/ZManaged$.logAnnotations:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logDebug(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #450                // Method zio/managed/ZManaged$.logDebug:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logError(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #453                // Method zio/managed/ZManaged$.logError:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logErrorCause(scala.Function0<zio.Cause<java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #457                // Method zio/managed/ZManaged$.logErrorCause:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logFatal(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #460                // Method zio/managed/ZManaged$.logFatal:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logInfo(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #463                // Method zio/managed/ZManaged$.logInfo:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logLevel(zio.LogLevel, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #468                // Method zio/managed/ZManaged$.logLevel:(Lzio/LogLevel;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logSpan(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #471                // Method zio/managed/ZManaged$.logSpan:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logTrace(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #474                // Method zio/managed/ZManaged$.logTrace:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logWarning(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #477                // Method zio/managed/ZManaged$.logWarning:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <R, E, A, S> zio.managed.ZManaged<R, E, scala.collection.immutable.List<A>> loop(scala.Function0<S>, scala.Function1<S, java.lang.Object>, scala.Function1<S, S>, scala.Function1<S, zio.managed.ZManaged<R, E, A>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #482                // Method zio/managed/ZManaged$.loop:(Lscala/Function0;Lscala/Function1;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public static <R, E, S> zio.managed.ZManaged<R, E, scala.runtime.BoxedUnit> loopDiscard(scala.Function0<S>, scala.Function1<S, java.lang.Object>, scala.Function1<S, S>, scala.Function1<S, zio.managed.ZManaged<R, E, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #486                // Method zio/managed/ZManaged$.loopDiscard:(Lscala/Function0;Lscala/Function1;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public static <R, E, A, B> zio.managed.ZManaged<R, E, B> mergeAll(scala.Function0<scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>>, scala.Function0<B>, scala.Function2<B, A, B>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #490                // Method zio/managed/ZManaged$.mergeAll:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/managed/ZManaged;
      10: areturn

  public static <R, E, A, B> zio.managed.ZManaged<R, E, B> mergeAllPar(scala.Function0<scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>>, scala.Function0<B>, scala.Function2<B, A, B>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #493                // Method zio/managed/ZManaged$.mergeAllPar:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/managed/ZManaged;
      10: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.Nothing$> never(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #496                // Method zio/managed/ZManaged$.never:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.Option<java.lang.Object>> parallelism(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #500                // Method zio/managed/ZManaged$.parallelism:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, zio.managed.ZManaged$PreallocationScope> preallocationScope(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #504                // Method zio/managed/ZManaged$.preallocationScope:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public static <R, E, A> zio.managed.ZManaged<R, E, A> reduceAll(scala.Function0<zio.managed.ZManaged<R, E, A>>, scala.Function0<scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>>, scala.Function2<A, A, A>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #508                // Method zio/managed/ZManaged$.reduceAll:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/managed/ZManaged;
      10: areturn

  public static <R, E, A> zio.managed.ZManaged<R, E, A> reduceAllPar(scala.Function0<zio.managed.ZManaged<R, E, A>>, scala.Function0<scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>>, scala.Function2<A, A, A>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #511                // Method zio/managed/ZManaged$.reduceAllPar:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/managed/ZManaged;
      10: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, zio.managed.ZManaged$ReleaseMap> releaseMap(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #515                // Method zio/managed/ZManaged$.releaseMap:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public static <R> zio.managed.ZManaged<R, scala.runtime.Nothing$, zio.Runtime<R>> runtime(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #519                // Method zio/managed/ZManaged$.runtime:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, zio.managed.ZManaged$Scope> scope(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #523                // Method zio/managed/ZManaged$.scope:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public static <A> zio.managed.ZManaged<A, scala.runtime.Nothing$, A> service(zio.package$Tag<A>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #528                // Method zio/managed/ZManaged$.service:(Lzio/package$Tag;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <Service> boolean serviceAt();
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #532                // Method zio/managed/ZManaged$.serviceAt:()Z
       6: ireturn

  public static <Service> boolean serviceWith();
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #535                // Method zio/managed/ZManaged$.serviceWith:()Z
       6: ireturn

  public static <Service> boolean serviceWithManaged();
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #538                // Method zio/managed/ZManaged$.serviceWithManaged:()Z
       6: ireturn

  public static <Service> boolean serviceWithZIO();
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #541                // Method zio/managed/ZManaged$.serviceWithZIO:()Z
       6: ireturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> shift(scala.Function0<zio.Executor>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #544                // Method zio/managed/ZManaged$.shift:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <A> zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, A> succeed(scala.Function0<A>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #548                // Method zio/managed/ZManaged$.succeed:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <A> zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, A> succeedNow(A);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public static <R, E, A> zio.managed.ZManaged<R, E, A> suspend(scala.Function0<zio.managed.ZManaged<R, E, A>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #556                // Method zio/managed/ZManaged$.suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <R, E, A> zio.managed.ZManaged<R, scala.runtime.Nothing$, scala.Function1<zio.managed.ZManaged<R, E, A>, zio.ZIO<R, E, A>>> switchable(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #560                // Method zio/managed/ZManaged$.switchable:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public static <R, E, A> zio.managed.ZManaged<R, E, A> unwrap(scala.Function0<zio.ZIO<R, E, zio.managed.ZManaged<R, E, A>>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #564                // Method zio/managed/ZManaged$.unwrap:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static <R, E, A, B> zio.managed.ZManaged<R, E, scala.Option<B>> whenCase(scala.Function0<A>, scala.PartialFunction<A, zio.managed.ZManaged<R, E, B>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #569                // Method zio/managed/ZManaged$.whenCase:(Lscala/Function0;Lscala/PartialFunction;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <R, E, A, B> zio.managed.ZManaged<R, E, scala.Option<B>> whenCaseManaged(scala.Function0<zio.managed.ZManaged<R, E, A>>, scala.PartialFunction<A, zio.managed.ZManaged<R, E, B>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #573                // Method zio/managed/ZManaged$.whenCaseManaged:(Lscala/Function0;Lscala/PartialFunction;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public static <R, E, A> zio.managed.ZManaged<R, E, A> withChildren(scala.Function1<zio.ZIO<java.lang.Object, scala.runtime.Nothing$, zio.Chunk<zio.Fiber$Runtime<java.lang.Object, java.lang.Object>>>, zio.managed.ZManaged<R, E, A>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #577                // Method zio/managed/ZManaged$.withChildren:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> withParallism(scala.Function0<java.lang.Object>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #581                // Method zio/managed/ZManaged$.withParallism:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  public static zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> withParallismUnbounded(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #585                // Method zio/managed/ZManaged$.withParallismUnbounded:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public zio.managed.ZManaged();
    Code:
       0: aload_0
       1: invokespecial #589                // Method java/lang/Object."<init>":()V
       4: return

  public zio.managed.ZManaged provideSome();
    Code:
       0: aload_0
       1: invokestatic  #597                // InterfaceMethod zio/managed/ZManagedVersionSpecific.provideSome$:(Lzio/managed/ZManagedVersionSpecific;)Lzio/managed/ZManaged;
       4: areturn

  public abstract zio.ZIO<R, E, scala.Tuple2<scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>>, A>> zio();

  public final <LowerR extends UpperR, UpperR extends R, LowerE, UpperE, LowerA, UpperA> zio.managed.ZManaged<UpperR, LowerE, LowerA> $at$at(scala.Function0<zio.managed.ZManagedAspect<LowerR, UpperR, LowerE, UpperE, LowerA, UpperA>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokedynamic #624,  0            // InvokeDynamic #0:apply:(Lzio/managed/ZManaged;Lscala/Function0;)Lscala/Function0;
      10: aload_2
      11: invokevirtual #556                // Method zio/managed/ZManaged$.suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  public final zio.managed.ZManaged<R, scala.runtime.Nothing$, A> $bang(scala.$less$colon$less<E, java.lang.Throwable>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #636                // Field zio/IsSubtypeOfError$.MODULE$:Lzio/IsSubtypeOfError$;
       4: aload_1
       5: invokevirtual #640                // Method zio/IsSubtypeOfError$.impl:(Lscala/$less$colon$less;)Lzio/IsSubtypeOfError;
       8: aload_2
       9: aload_3
      10: invokevirtual #644                // Method orDie:(Lzio/IsSubtypeOfError;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <R1 extends R, E1, A1> zio.managed.ZManaged<R1, E1, A1> $amp$greater(scala.Function0<zio.managed.ZManaged<R1, E1, A1>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #654                // Field zio/Zippable$.MODULE$:Lzio/Zippable$;
       5: invokevirtual #658                // Method zio/Zippable$.Zippable2:()Lzio/Zippable;
       8: aload_2
       9: invokevirtual #662                // Method zipPar:(Lscala/Function0;Lzio/Zippable;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: invokedynamic #673,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      17: aload_2
      18: invokevirtual #676                // Method map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      21: areturn

  public <R1 extends R, E1, A1> zio.managed.ZManaged<R1, E1, A1> $times$greater(scala.Function0<zio.managed.ZManaged<R1, E1, A1>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #685,  0            // InvokeDynamic #2:apply:(Lscala/Function0;)Lscala/Function1;
       7: aload_2
       8: invokevirtual #688                // Method flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      11: areturn

  public <R1 extends R, E1, A1> zio.managed.ZManaged<R1, E1, A> $less$amp(scala.Function0<zio.managed.ZManaged<R1, E1, A1>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #654                // Field zio/Zippable$.MODULE$:Lzio/Zippable$;
       5: invokevirtual #658                // Method zio/Zippable$.Zippable2:()Lzio/Zippable;
       8: aload_2
       9: invokevirtual #662                // Method zipPar:(Lscala/Function0;Lzio/Zippable;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: invokedynamic #695,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
      17: aload_2
      18: invokevirtual #676                // Method map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      21: areturn

  public <R1 extends R, E1, A1> zio.managed.ZManaged<R1, E1, java.lang.Object> $less$amp$greater(scala.Function0<zio.managed.ZManaged<R1, E1, A1>>, zio.Zippable<A, A1>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #708,  0            // InvokeDynamic #4:apply:(Lzio/Zippable;)Lscala/Function2;
       8: aload_3
       9: invokevirtual #711                // Method zipWithPar:(Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public <R1 extends R, E1, A1> zio.managed.ZManaged<R1, E1, A> $less$times(scala.Function0<zio.managed.ZManaged<R1, E1, A1>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #721,  0            // InvokeDynamic #5:apply:(Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
       8: aload_2
       9: invokevirtual #688                // Method flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public <R1 extends R, E1, A1> zio.managed.ZManaged<R1, E1, java.lang.Object> $less$times$greater(scala.Function0<zio.managed.ZManaged<R1, E1, A1>>, zio.Zippable<A, A1>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #727,  0            // InvokeDynamic #6:apply:(Lzio/Zippable;)Lscala/Function2;
       8: aload_3
       9: invokevirtual #730                // Method zipWith:(Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public <R1 extends R, E2, A1> zio.managed.ZManaged<R1, E2, A1> $less$greater(scala.Function0<zio.managed.ZManaged<R1, E2, A1>>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #737                // Method orElse:(Lscala/Function0;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public <E1, B> zio.managed.ZManaged<R, E1, B> absolve(zio.IsSubtypeOfOutput<A, scala.util.Either<E1, B>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokedynamic #747,  0            // InvokeDynamic #7:apply:(Lzio/managed/ZManaged;Lzio/IsSubtypeOfOutput;Ljava/lang/Object;)Lscala/Function0;
      11: aload_2
      12: invokevirtual #749                // Method zio/managed/ZManaged$.absolve:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      15: areturn

  public zio.managed.ZManaged<R, java.lang.Throwable, A> absorb(zio.IsSubtypeOfError<E, java.lang.Throwable>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #756                // Method absorbWith:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: areturn

  public zio.managed.ZManaged<R, java.lang.Throwable, A> absorbWith(scala.Function1<E, java.lang.Throwable>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #762                // Method sandbox:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       5: aload_1
       6: aload_2
       7: invokedynamic #772,  0            // InvokeDynamic #8:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      12: invokedynamic #777,  0            // InvokeDynamic #9:apply:()Lscala/Function1;
      17: getstatic     #782                // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
      20: getstatic     #787                // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
      23: invokevirtual #791                // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      26: invokevirtual #795                // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      29: aload_2
      30: invokevirtual #799                // Method foldManaged:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      33: areturn

  public <B> zio.managed.ZManaged<R, E, B> as(scala.Function0<B>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #809,  0            // InvokeDynamic #10:apply:(Lscala/Function0;)Lscala/Function1;
       7: aload_2
       8: invokevirtual #676                // Method map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      11: areturn

  public final zio.managed.ZManaged<R, E, scala.Option<A>> asSome(java.lang.Object);
    Code:
       0: aload_0
       1: invokedynamic #818,  0            // InvokeDynamic #11:apply:()Lscala/Function1;
       6: aload_1
       7: invokevirtual #676                // Method map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      10: areturn

  public final zio.managed.ZManaged<R, scala.Option<E>, A> asSomeError(java.lang.Object);
    Code:
       0: aload_0
       1: invokedynamic #825,  0            // InvokeDynamic #12:apply:()Lscala/Function1;
       6: getstatic     #782                // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
       9: getstatic     #787                // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
      12: invokevirtual #791                // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      15: invokevirtual #795                // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      18: aload_1
      19: invokevirtual #829                // Method mapError:(Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      22: areturn

  public <R1 extends R, E2, A1> zio.managed.ZManaged<R1, E2, A1> catchAll(scala.Function1<E, zio.managed.ZManaged<R1, E2, A1>>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #837,  0            // InvokeDynamic #13:apply:()Lscala/Function1;
       7: aload_2
       8: aload_3
       9: invokevirtual #799                // Method foldManaged:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public <R1 extends R, E2, A1> zio.managed.ZManaged<R1, E2, A1> catchAllCause(scala.Function1<zio.Cause<E>, zio.managed.ZManaged<R1, E2, A1>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #844,  0            // InvokeDynamic #14:apply:()Lscala/Function1;
       7: aload_2
       8: invokevirtual #848                // Method foldCauseManaged:(Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      11: areturn

  public <R1 extends R, E1, A1> zio.managed.ZManaged<R1, E1, A1> catchSome(scala.PartialFunction<E, zio.managed.ZManaged<R1, E1, A1>>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokedynamic #860,  0            // InvokeDynamic #15:apply:(Lscala/PartialFunction;Ljava/lang/Object;)Lscala/Function1;
       8: invokedynamic #865,  0            // InvokeDynamic #16:apply:()Lscala/Function1;
      13: aload_2
      14: aload_3
      15: invokevirtual #799                // Method foldManaged:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      18: areturn

  public <R1 extends R, E1, A1> zio.managed.ZManaged<R1, E1, A1> catchSomeCause(scala.PartialFunction<zio.Cause<E>, zio.managed.ZManaged<R1, E1, A1>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #875,  0            // InvokeDynamic #17:apply:(Lscala/PartialFunction;Ljava/lang/Object;)Lscala/Function1;
       8: invokedynamic #880,  0            // InvokeDynamic #18:apply:()Lscala/Function1;
      13: aload_2
      14: invokevirtual #848                // Method foldCauseManaged:(Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: areturn

  public <E1, B> zio.managed.ZManaged<R, E1, B> collect(scala.Function0<E1>, scala.PartialFunction<A, B>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #888,  0            // InvokeDynamic #19:apply:()Lscala/Function1;
       8: invokeinterface #894,  2          // InterfaceMethod scala/PartialFunction.andThen:(Lscala/Function1;)Lscala/PartialFunction;
      13: aload_3
      14: invokevirtual #897                // Method collectManaged:(Lscala/Function0;Lscala/PartialFunction;Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: areturn

  public <R1 extends R, E1, B> zio.managed.ZManaged<R1, E1, B> collectManaged(scala.Function0<E1>, scala.PartialFunction<A, zio.managed.ZManaged<R1, E1, B>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #906,  0            // InvokeDynamic #20:apply:(Lscala/Function0;Lscala/PartialFunction;Ljava/lang/Object;)Lscala/Function1;
       9: aload_3
      10: invokevirtual #688                // Method flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public zio.managed.ZManaged<R, scala.runtime.Nothing$, scala.util.Either<E, A>> either(zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: invokedynamic #916,  0            // InvokeDynamic #21:apply:()Lscala/Function1;
       6: invokedynamic #921,  0            // InvokeDynamic #22:apply:()Lscala/Function1;
      11: aload_1
      12: aload_2
      13: invokevirtual #924                // Method fold:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      16: areturn

  public <R1 extends R> zio.managed.ZManaged<R1, E, A> ensuring(scala.Function0<zio.ZIO<R1, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #934,  0            // InvokeDynamic #23:apply:(Lscala/Function0;)Lscala/Function1;
       7: aload_2
       8: invokevirtual #937                // Method onExit:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      11: areturn

  public <R1 extends R> zio.managed.ZManaged<R1, E, A> ensuringFirst(scala.Function0<zio.ZIO<R1, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #943,  0            // InvokeDynamic #24:apply:(Lscala/Function0;)Lscala/Function1;
       7: aload_2
       8: invokevirtual #946                // Method onExitFirst:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      11: areturn

  public zio.managed.ZManaged<R, scala.runtime.Nothing$, A> eventually(zio.CanFail<E>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #950                // Method zio:()Lzio/ZIO;
       7: aload_1
       8: aload_2
       9: invokeinterface #953,  3          // InterfaceMethod zio/ZIO.eventually:(Lzio/CanFail;Ljava/lang/Object;)Lzio/ZIO;
      14: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      17: areturn

  public final <R1 extends R, E1, A1> zio.managed.ZManaged<R1, E1, A1> firstSuccessOf(scala.Function0<scala.collection.Iterable<zio.managed.ZManaged<R1, E1, A1>>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokedynamic #963,  0            // InvokeDynamic #25:apply:(Lzio/managed/ZManaged;)Lscala/Function0;
       9: aload_1
      10: aload_2
      11: invokevirtual #965                // Method zio/managed/ZManaged$.firstSuccessOf:(Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  public <R1 extends R, E1, B> zio.managed.ZManaged<R1, E1, B> flatMap(scala.Function1<A, zio.managed.ZManaged<R1, E1, B>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #950                // Method zio:()Lzio/ZIO;
       7: aload_1
       8: aload_2
       9: invokedynamic #974,  0            // InvokeDynamic #26:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      14: aload_2
      15: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      20: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      23: areturn

  public <R1 extends R, E2> zio.managed.ZManaged<R1, E2, A> flatMapError(scala.Function1<E, zio.managed.ZManaged<R1, scala.runtime.Nothing$, E2>>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokedynamic #986,  0            // InvokeDynamic #27:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
       8: aload_3
       9: invokevirtual #989                // Method flipWith:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public <R1 extends R, E1, B> zio.managed.ZManaged<R1, E1, B> flatten(zio.IsSubtypeOfOutput<A, zio.managed.ZManaged<R1, E1, B>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #688                // Method flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: areturn

  public <R1 extends R, E1, B> zio.managed.ZManaged<R1, E1, B> flattenZIO(zio.IsSubtypeOfOutput<A, zio.ZIO<R1, E1, B>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #996                // Method mapZIO:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: areturn

  public zio.managed.ZManaged<R, A, E> flip(java.lang.Object);
    Code:
       0: aload_0
       1: invokedynamic #1003,  0           // InvokeDynamic #28:apply:()Lscala/Function1;
       6: aload_1
       7: invokedynamic #1011,  0           // InvokeDynamic #29:apply:(Ljava/lang/Object;)Lscala/Function1;
      12: getstatic     #782                // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
      15: getstatic     #787                // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
      18: invokevirtual #791                // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      21: invokevirtual #795                // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      24: aload_1
      25: invokevirtual #799                // Method foldManaged:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      28: areturn

  public <R1, A1, E1> zio.managed.ZManaged<R1, E1, A1> flipWith(scala.Function1<zio.managed.ZManaged<R, A, E>, zio.managed.ZManaged<R1, A1, E1>>, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokevirtual #1014               // Method flip:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #2                  // class zio/managed/ZManaged
      14: aload_2
      15: invokevirtual #1014               // Method flip:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      18: areturn

  public <B> zio.managed.ZManaged<R, scala.runtime.Nothing$, B> fold(scala.Function1<E, B>, scala.Function1<A, B>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1026,  0           // InvokeDynamic #30:apply:()Lscala/Function1;
       7: invokeinterface #1029,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      12: aload_2
      13: invokedynamic #1034,  0           // InvokeDynamic #31:apply:()Lscala/Function1;
      18: invokeinterface #1029,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      23: aload_3
      24: aload         4
      26: invokevirtual #799                // Method foldManaged:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      29: areturn

  public <B> zio.managed.ZManaged<R, scala.runtime.Nothing$, B> foldCause(scala.Function1<zio.Cause<E>, B>, scala.Function1<A, B>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #762                // Method sandbox:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       5: aload_1
       6: aload_2
       7: getstatic     #782                // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
      10: getstatic     #787                // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
      13: invokevirtual #791                // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      16: invokevirtual #795                // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      19: aload_3
      20: invokevirtual #924                // Method fold:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      23: areturn

  public <R1 extends R, E1, A1> zio.managed.ZManaged<R1, E1, A1> foldCauseManaged(scala.Function1<zio.Cause<E>, zio.managed.ZManaged<R1, E1, A1>>, scala.Function1<A, zio.managed.ZManaged<R1, E1, A1>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #950                // Method zio:()Lzio/ZIO;
       7: aload_1
       8: invokedynamic #1046,  0           // InvokeDynamic #32:apply:(Lscala/Function1;)Lscala/Function1;
      13: aload_2
      14: invokedynamic #1052,  0           // InvokeDynamic #33:apply:(Lscala/Function1;)Lscala/Function1;
      19: aload_3
      20: invokeinterface #1056,  4         // InterfaceMethod zio/ZIO.foldCauseZIO:(Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      25: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      28: areturn

  public <R1 extends R, E2, B> zio.managed.ZManaged<R1, E2, B> foldManaged(scala.Function1<E, zio.managed.ZManaged<R1, E2, B>>, scala.Function1<A, zio.managed.ZManaged<R1, E2, B>>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: invokedynamic #1062,  0           // InvokeDynamic #34:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
       9: aload_2
      10: aload         4
      12: invokevirtual #848                // Method foldCauseManaged:(Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      15: areturn

  public zio.managed.ZManaged<R, scala.runtime.Nothing$, zio.Fiber$Runtime<E, A>> fork(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       6: aload_0
       7: aload_1
       8: invokedynamic #1079,  0           // InvokeDynamic #35:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;)Lscala/Function1;
      13: aload_1
      14: invokevirtual #1082               // Method zio/ZIO$.uninterruptibleMask:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      17: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      20: areturn

  public zio.managed.ZManaged<R, scala.runtime.Nothing$, scala.runtime.BoxedUnit> ignore(java.lang.Object);
    Code:
       0: aload_0
       1: invokedynamic #1089,  0           // InvokeDynamic #36:apply:()Lscala/Function1;
       6: invokedynamic #1094,  0           // InvokeDynamic #37:apply:()Lscala/Function1;
      11: getstatic     #782                // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
      14: getstatic     #787                // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
      17: invokevirtual #791                // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      20: invokevirtual #795                // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      23: aload_1
      24: invokevirtual #924                // Method fold:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      27: areturn

  public zio.managed.ZManaged<R, E, A> ignoreReleaseFailures(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       6: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       9: aload_1
      10: invokeinterface #1102,  2         // InterfaceMethod zio/FiberRef.get:(Ljava/lang/Object;)Lzio/ZIO;
      15: aload_1
      16: invokedynamic #1110,  0           // InvokeDynamic #38:apply:(Ljava/lang/Object;)Lscala/Function1;
      21: aload_1
      22: invokeinterface #1113,  3         // InterfaceMethod zio/ZIO.tap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      27: aload_0
      28: invokedynamic #1119,  0           // InvokeDynamic #39:apply:(Lzio/managed/ZManaged;)Lscala/Function0;
      33: aload_1
      34: invokeinterface #1122,  3         // InterfaceMethod zio/ZIO.$times$greater:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      39: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      42: areturn

  public zio.managed.ZManaged<R, scala.runtime.Nothing$, java.lang.Object> isFailure(java.lang.Object);
    Code:
       0: aload_0
       1: invokedynamic #1131,  0           // InvokeDynamic #40:apply:()Lscala/Function1;
       6: invokedynamic #1136,  0           // InvokeDynamic #41:apply:()Lscala/Function1;
      11: getstatic     #782                // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
      14: getstatic     #787                // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
      17: invokevirtual #791                // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      20: invokevirtual #795                // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      23: aload_1
      24: invokevirtual #924                // Method fold:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      27: areturn

  public zio.managed.ZManaged<R, scala.runtime.Nothing$, java.lang.Object> isSuccess(java.lang.Object);
    Code:
       0: aload_0
       1: invokedynamic #1142,  0           // InvokeDynamic #42:apply:()Lscala/Function1;
       6: invokedynamic #1147,  0           // InvokeDynamic #43:apply:()Lscala/Function1;
      11: getstatic     #782                // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
      14: getstatic     #787                // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
      17: invokevirtual #791                // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      20: invokevirtual #795                // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      23: aload_1
      24: invokevirtual #924                // Method fold:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      27: areturn

  public <B> zio.managed.ZManaged<R, E, B> map(scala.Function1<A, B>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #950                // Method zio:()Lzio/ZIO;
       7: aload_1
       8: invokedynamic #1156,  0           // InvokeDynamic #44:apply:(Lscala/Function1;)Lscala/Function1;
      13: aload_2
      14: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      19: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      22: areturn

  public <E1, A1> zio.managed.ZManaged<R, E1, A1> mapBoth(scala.Function1<E, E1>, scala.Function1<A, A1>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload         4
       5: invokevirtual #829                // Method mapError:(Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: aload_2
       9: aload         4
      11: invokevirtual #676                // Method map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  public final <B> zio.managed.ZManaged<R, java.lang.Throwable, B> mapAttempt(scala.Function1<A, B>, zio.IsSubtypeOfError<E, java.lang.Throwable>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokedynamic #1172,  0           // InvokeDynamic #45:apply:(Lzio/IsSubtypeOfError;Ljava/lang/Object;)Lscala/Function1;
       8: aload_1
       9: aload_3
      10: invokedynamic #1178,  0           // InvokeDynamic #46:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      15: getstatic     #782                // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
      18: getstatic     #787                // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
      21: invokevirtual #791                // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      24: invokevirtual #795                // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      27: aload_3
      28: invokevirtual #799                // Method foldManaged:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      31: areturn

  public <E1> zio.managed.ZManaged<R, E1, A> mapError(scala.Function1<E, E1>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #950                // Method zio:()Lzio/ZIO;
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokeinterface #1182,  4         // InterfaceMethod zio/ZIO.mapError:(Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/ZIO;
      15: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      18: areturn

  public <E1> zio.managed.ZManaged<R, E1, A> mapErrorCause(scala.Function1<zio.Cause<E>, zio.Cause<E1>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #950                // Method zio:()Lzio/ZIO;
       7: aload_1
       8: aload_2
       9: invokeinterface #1186,  3         // InterfaceMethod zio/ZIO.mapErrorCause:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      17: areturn

  public <R1 extends R, E1, B> zio.managed.ZManaged<R1, E1, B> mapZIO(scala.Function1<A, zio.ZIO<R1, E1, B>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #950                // Method zio:()Lzio/ZIO;
       7: aload_1
       8: aload_2
       9: invokedynamic #1192,  0           // InvokeDynamic #47:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      14: aload_2
      15: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      20: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      23: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, zio.managed.ZManaged<R, E, A>> memoize(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokevirtual #515                // Method zio/managed/ZManaged$.releaseMap:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: aload_0
       8: aload_1
       9: invokedynamic #1199,  0           // InvokeDynamic #48:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;)Lscala/Function1;
      14: aload_1
      15: invokevirtual #996                // Method mapZIO:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      18: areturn

  public <A1> zio.managed.ZManaged<R, scala.runtime.Nothing$, A1> merge(zio.IsSubtypeOfError<E, A1>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1208,  0           // InvokeDynamic #49:apply:(Lzio/IsSubtypeOfError;)Lscala/Function1;
       7: invokedynamic #1213,  0           // InvokeDynamic #50:apply:()Lscala/Function1;
      12: aload_2
      13: aload_3
      14: invokevirtual #799                // Method foldManaged:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: areturn

  public final <B> zio.managed.ZManaged<R, scala.Option<E>, scala.runtime.BoxedUnit> none(zio.IsSubtypeOfOutput<A, scala.Option<B>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokedynamic #1220,  0           // InvokeDynamic #51:apply:(Ljava/lang/Object;)Lscala/Function1;
       7: aload_1
       8: aload_2
       9: invokedynamic #1228,  0           // InvokeDynamic #52:apply:(Lzio/IsSubtypeOfOutput;Ljava/lang/Object;)Lscala/Function1;
      14: getstatic     #782                // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
      17: getstatic     #787                // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
      20: invokevirtual #791                // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      23: invokevirtual #795                // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      26: aload_2
      27: invokevirtual #799                // Method foldManaged:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      30: areturn

  public final zio.managed.ZManaged<R, E, A> onExecutor(scala.Function0<zio.Executor>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: aload_2
       5: invokevirtual #1233               // Method zio/managed/ZManaged$.onExecutor:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: aload_0
       9: invokedynamic #1238,  0           // InvokeDynamic #53:apply:(Lzio/managed/ZManaged;)Lscala/Function0;
      14: aload_2
      15: invokevirtual #1240               // Method $times$greater:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      18: areturn

  public final zio.managed.ZManaged<R, E, A> onExecutionContext(scala.Function0<scala.concurrent.ExecutionContext>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1252,  0           // InvokeDynamic #54:apply:(Lscala/Function0;)Lscala/Function0;
       7: aload_2
       8: invokevirtual #1253               // Method onExecutor:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      11: areturn

  public <R1 extends R> zio.managed.ZManaged<R1, E, A> onExit(scala.Function1<zio.Exit<E, A>, zio.ZIO<R1, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokedynamic #1263,  0           // InvokeDynamic #55:apply:(Lzio/managed/ZManaged;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      14: aload_2
      15: invokevirtual #1082               // Method zio/ZIO$.uninterruptibleMask:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      18: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      21: areturn

  public <R1 extends R> zio.managed.ZManaged<R1, E, A> onExitFirst(scala.Function1<zio.Exit<E, A>, zio.ZIO<R1, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokedynamic #1268,  0           // InvokeDynamic #56:apply:(Lzio/managed/ZManaged;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      14: aload_2
      15: invokevirtual #1082               // Method zio/ZIO$.uninterruptibleMask:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      18: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      21: areturn

  public zio.managed.ZManaged<R, scala.runtime.Nothing$, scala.Option<A>> option(zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: invokedynamic #1277,  0           // InvokeDynamic #57:apply:()Lscala/Function1;
       6: invokedynamic #1282,  0           // InvokeDynamic #58:apply:()Lscala/Function1;
      11: aload_1
      12: aload_2
      13: invokevirtual #924                // Method fold:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      16: areturn

  public zio.managed.ZManaged<R, scala.runtime.Nothing$, A> orDie(zio.IsSubtypeOfError<E, java.lang.Throwable>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1286               // Method orDieWith:(Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public zio.managed.ZManaged<R, scala.runtime.Nothing$, A> orDieWith(scala.Function1<E, java.lang.Throwable>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #829                // Method mapError:(Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: aload_3
       8: invokedynamic #1295,  0           // InvokeDynamic #59:apply:(Ljava/lang/Object;)Lscala/Function1;
      13: getstatic     #782                // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
      16: getstatic     #787                // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
      19: invokevirtual #791                // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      22: invokevirtual #795                // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      25: aload_3
      26: invokevirtual #1297               // Method catchAll:(Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      29: areturn

  public <R1 extends R, E2, A1> zio.managed.ZManaged<R1, E2, A1> orElse(scala.Function0<zio.managed.ZManaged<R1, E2, A1>>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1302,  0           // InvokeDynamic #60:apply:(Lscala/Function0;)Lscala/Function1;
       7: invokedynamic #1307,  0           // InvokeDynamic #61:apply:()Lscala/Function1;
      12: aload_2
      13: aload_3
      14: invokevirtual #799                // Method foldManaged:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: areturn

  public <R1 extends R, E2, B> zio.managed.ZManaged<R1, E2, scala.util.Either<A, B>> orElseEither(scala.Function0<zio.managed.ZManaged<R1, E2, B>>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokedynamic #1314,  0           // InvokeDynamic #62:apply:(Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
       8: invokedynamic #1319,  0           // InvokeDynamic #63:apply:()Lscala/Function1;
      13: aload_2
      14: aload_3
      15: invokevirtual #799                // Method foldManaged:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      18: areturn

  public final <E1> zio.managed.ZManaged<R, E1, A> orElseFail(scala.Function0<E1>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokedynamic #1329,  0           // InvokeDynamic #64:apply:(Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       8: aload_2
       9: aload_3
      10: invokevirtual #737                // Method orElse:(Lscala/Function0;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public final <R1 extends R, E1, A1> zio.managed.ZManaged<R1, scala.Option<E1>, A1> orElseOptional(scala.Function0<zio.managed.ZManaged<R1, scala.Option<E1>, A1>>, zio.IsSubtypeOfError<E, scala.Option<E1>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #1340,  0           // InvokeDynamic #65:apply:(Lscala/Function0;Lzio/IsSubtypeOfError;Ljava/lang/Object;)Lscala/Function1;
       9: getstatic     #782                // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
      12: getstatic     #787                // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
      15: invokevirtual #791                // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      18: invokevirtual #795                // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      21: aload_3
      22: invokevirtual #1297               // Method catchAll:(Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      25: areturn

  public final <A1> zio.managed.ZManaged<R, scala.runtime.Nothing$, A1> orElseSucceed(scala.Function0<A1>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1348,  0           // InvokeDynamic #66:apply:(Lscala/Function0;)Lscala/Function0;
       7: aload_2
       8: aload_3
       9: invokevirtual #737                // Method orElse:(Lscala/Function0;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public zio.ZIO<R, E, zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, A>> preallocate(java.lang.Object);
    Code:
       0: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: aload_1
       5: invokedynamic #1355,  0           // InvokeDynamic #67:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;)Lscala/Function1;
      10: aload_1
      11: invokevirtual #1082               // Method zio/ZIO$.uninterruptibleMask:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public zio.managed.ZManaged<R, E, zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, A>> preallocateManaged(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #950                // Method zio:()Lzio/ZIO;
       7: aload_1
       8: invokedynamic #1363,  0           // InvokeDynamic #68:apply:(Ljava/lang/Object;)Lscala/Function1;
      13: aload_1
      14: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      19: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      22: areturn

  public zio.managed.ZManaged<java.lang.Object, E, A> provideEnvironment(scala.Function0<zio.ZEnvironment<R>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1374,  0           // InvokeDynamic #69:apply:(Lscala/Function0;)Lscala/Function1;
       7: aload_2
       8: invokevirtual #1377               // Method provideSomeEnvironment:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      11: areturn

  public final <E1, R0> zio.managed.ZManaged<R0, E1, A> provideLayer(scala.Function0<zio.ZLayer<R0, E1, R>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: getstatic     #1385               // Field zio/Scope$.MODULE$:Lzio/Scope$;
       6: aload_2
       7: invokevirtual #1388               // Method zio/Scope$.make:(Ljava/lang/Object;)Lzio/ZIO;
      10: aload_1
      11: aload_2
      12: invokedynamic #1396,  0           // InvokeDynamic #70:apply:(Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
      17: aload_2
      18: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      23: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      26: aload_0
      27: aload_2
      28: invokedynamic #1404,  0           // InvokeDynamic #71:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;)Lscala/Function1;
      33: aload_2
      34: invokevirtual #688                // Method flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      37: areturn

  public <R0> zio.managed.ZManaged<R0, E, A> provideSomeEnvironment(scala.Function1<zio.ZEnvironment<R0>, zio.ZEnvironment<R>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #950                // Method zio:()Lzio/ZIO;
       7: aload_1
       8: aload_2
       9: invokeinterface #1407,  3         // InterfaceMethod zio/ZIO.provideSomeEnvironment:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      17: areturn

  public final <R0> zio.managed.ZManaged provideSomeLayer();
    Code:
       0: aload_0
       1: areturn

  public <E1> zio.managed.ZManaged<R, E1, A> refineOrDie(scala.PartialFunction<E, E1>, zio.IsSubtypeOfError<E, java.lang.Throwable>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #1416               // Method refineOrDieWith:(Lscala/PartialFunction;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  public <E1> zio.managed.ZManaged<R, E1, A> refineOrDieWith(scala.PartialFunction<E, E1>, scala.Function1<E, java.lang.Throwable>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         4
       5: invokedynamic #1425,  0           // InvokeDynamic #72:apply:(Lscala/PartialFunction;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      10: aload_3
      11: aload         4
      13: invokevirtual #1297               // Method catchAll:(Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      16: areturn

  public <E1> zio.managed.ZManaged<R, E1, A> reject(scala.PartialFunction<A, E1>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #1432,  0           // InvokeDynamic #73:apply:(Ljava/lang/Object;)Lscala/Function1;
       8: invokeinterface #894,  2          // InterfaceMethod scala/PartialFunction.andThen:(Lscala/Function1;)Lscala/PartialFunction;
      13: aload_2
      14: invokevirtual #1435               // Method rejectManaged:(Lscala/PartialFunction;Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: areturn

  public <R1 extends R, E1> zio.managed.ZManaged<R1, E1, A> rejectManaged(scala.PartialFunction<A, zio.managed.ZManaged<R1, E1, E1>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #1441,  0           // InvokeDynamic #74:apply:(Lscala/PartialFunction;Ljava/lang/Object;)Lscala/Function1;
       8: aload_2
       9: invokevirtual #688                // Method flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public zio.managed.ZManaged<R, E, A> release(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokedynamic #1449,  0           // InvokeDynamic #75:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;)Lscala/Function0;
      10: aload_1
      11: invokevirtual #410                // Method zio/managed/ZManaged$.fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  public zio.ZIO<java.lang.Object, scala.runtime.Nothing$, zio.managed.Reservation<R, E, A>> reserve(java.lang.Object);
    Code:
       0: getstatic     #1454               // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       3: aload_1
       4: invokevirtual #1455               // Method zio/managed/ZManaged$ReleaseMap$.make:(Ljava/lang/Object;)Lzio/ZIO;
       7: aload_0
       8: aload_1
       9: invokedynamic #1463,  0           // InvokeDynamic #76:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;)Lscala/Function1;
      14: aload_1
      15: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      20: areturn

  public <R1 extends R, S> zio.managed.ZManaged<R1, E, A> retry(scala.Function0<zio.Schedule<R1, E, S>>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #950                // Method zio:()Lzio/ZIO;
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokeinterface #1469,  4         // InterfaceMethod zio/ZIO.retry:(Lscala/Function0;Lzio/CanFail;Ljava/lang/Object;)Lzio/ZIO;
      15: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      18: areturn

  public zio.managed.ZManaged<R, scala.runtime.Nothing$, zio.Exit<E, A>> exit(java.lang.Object);
    Code:
       0: aload_0
       1: invokedynamic #1476,  0           // InvokeDynamic #77:apply:()Lscala/Function1;
       6: invokedynamic #1481,  0           // InvokeDynamic #78:apply:()Lscala/Function1;
      11: aload_1
      12: invokevirtual #848                // Method foldCauseManaged:(Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      15: areturn

  public zio.managed.ZManaged<R, zio.Cause<E>, A> sandbox(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #950                // Method zio:()Lzio/ZIO;
       7: aload_1
       8: invokeinterface #1484,  2         // InterfaceMethod zio/ZIO.sandbox:(Ljava/lang/Object;)Lzio/ZIO;
      13: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      16: areturn

  public <R1 extends R, E2, B> zio.managed.ZManaged<R1, E2, B> sandboxWith(scala.Function1<zio.managed.ZManaged<R1, zio.Cause<E>, A>, zio.managed.ZManaged<R1, zio.Cause<E2>, B>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokedynamic #1493,  0           // InvokeDynamic #79:apply:(Lzio/managed/ZManaged;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      11: aload_2
      12: invokevirtual #1496               // Method zio/managed/ZManaged$.unsandbox:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      15: areturn

  public zio.ZIO<R, E, A> scoped(java.lang.Object);
    Code:
       0: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: invokevirtual #1500               // Method zio/ZIO$.scope:(Ljava/lang/Object;)Lzio/ZIO;
       7: aload_0
       8: aload_1
       9: invokedynamic #1508,  0           // InvokeDynamic #80:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;)Lscala/Function1;
      14: aload_1
      15: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      20: areturn

  public final <B> zio.managed.ZManaged<R, scala.Option<E>, B> some(zio.IsSubtypeOfOutput<A, scala.Option<B>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokedynamic #1515,  0           // InvokeDynamic #81:apply:(Ljava/lang/Object;)Lscala/Function1;
       7: aload_1
       8: aload_2
       9: invokedynamic #1520,  0           // InvokeDynamic #82:apply:(Lzio/IsSubtypeOfOutput;Ljava/lang/Object;)Lscala/Function1;
      14: getstatic     #782                // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
      17: getstatic     #787                // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
      20: invokevirtual #791                // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      23: invokevirtual #795                // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      26: aload_2
      27: invokevirtual #799                // Method foldManaged:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      30: areturn

  public final <B> zio.managed.ZManaged<R, E, B> someOrElse(scala.Function0<B>, zio.IsSubtypeOfOutput<A, scala.Option<B>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #1532,  0           // InvokeDynamic #83:apply:(Lscala/Function0;Lzio/IsSubtypeOfOutput;)Lscala/Function1;
       8: aload_3
       9: invokevirtual #676                // Method map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public final <B, R1 extends R, E1> zio.managed.ZManaged<R1, E1, B> someOrElseManaged(scala.Function0<zio.managed.ZManaged<R1, E1, B>>, zio.IsSubtypeOfOutput<A, scala.Option<B>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #1539,  0           // InvokeDynamic #84:apply:(Lscala/Function0;Lzio/IsSubtypeOfOutput;)Lscala/Function1;
       8: aload_3
       9: invokevirtual #688                // Method flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public final <B, E1> zio.managed.ZManaged<R, E1, B> someOrFail(scala.Function0<E1>, zio.IsSubtypeOfOutput<A, scala.Option<B>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #1549,  0           // InvokeDynamic #85:apply:(Lscala/Function0;Lzio/IsSubtypeOfOutput;Ljava/lang/Object;)Lscala/Function1;
       9: aload_3
      10: invokevirtual #688                // Method flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public final <B, E1> zio.managed.ZManaged<R, E1, B> someOrFailException(zio.IsSubtypeOfOutput<A, scala.Option<B>>, scala.$less$colon$less<java.util.NoSuchElementException, E1>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_3
       2: invokedynamic #1557,  0           // InvokeDynamic #86:apply:(Ljava/lang/Object;)Lscala/Function1;
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokedynamic #1565,  0           // InvokeDynamic #87:apply:(Lzio/IsSubtypeOfOutput;Lscala/$less$colon$less;Ljava/lang/Object;)Lscala/Function1;
      15: getstatic     #782                // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
      18: getstatic     #787                // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
      21: invokevirtual #791                // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      24: invokevirtual #795                // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      27: aload_3
      28: invokevirtual #799                // Method foldManaged:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      31: areturn

  public <R1 extends R, E1> zio.managed.ZManaged<R1, E1, A> tap(scala.Function1<A, zio.managed.ZManaged<R1, E1, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #1571,  0           // InvokeDynamic #88:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
       8: aload_2
       9: invokevirtual #688                // Method flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public <R1 extends R, E1> zio.managed.ZManaged<R1, E1, A> tapBoth(scala.Function1<E, zio.managed.ZManaged<R1, E1, java.lang.Object>>, scala.Function1<A, zio.managed.ZManaged<R1, E1, java.lang.Object>>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: invokedynamic #1578,  0           // InvokeDynamic #89:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
       9: aload_2
      10: aload         4
      12: invokedynamic #1583,  0           // InvokeDynamic #90:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      17: aload_3
      18: aload         4
      20: invokevirtual #799                // Method foldManaged:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      23: areturn

  public final <R1 extends R, E1> zio.managed.ZManaged<R1, E1, A> tapDefect(scala.Function1<zio.Cause<scala.runtime.Nothing$>, zio.managed.ZManaged<R1, E1, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #1590,  0           // InvokeDynamic #91:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
       8: aload_2
       9: invokevirtual #1592               // Method catchAllCause:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public <R1 extends R, E1> zio.managed.ZManaged<R1, E1, A> tapError(scala.Function1<E, zio.managed.ZManaged<R1, E1, java.lang.Object>>, zio.CanFail<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1599,  0           // InvokeDynamic #92:apply:()Lscala/Function1;
       7: aload_2
       8: aload_3
       9: invokevirtual #1601               // Method tapBoth:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public final <R1 extends R, E1> zio.managed.ZManaged<R1, E1, A> tapErrorCause(scala.Function1<zio.Cause<E>, zio.managed.ZManaged<R1, E1, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #1608,  0           // InvokeDynamic #93:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
       8: aload_2
       9: invokevirtual #1592               // Method catchAllCause:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public <R1 extends R, E1> zio.managed.ZManaged<R1, E1, A> tapZIO(scala.Function1<A, zio.ZIO<R1, E1, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #1617,  0           // InvokeDynamic #94:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
       8: aload_2
       9: invokevirtual #996                // Method mapZIO:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public zio.managed.ZManaged<R, E, scala.Tuple2<java.time.Duration, A>> timed(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #950                // Method zio:()Lzio/ZIO;
       7: aload_1
       8: invokeinterface #1621,  2         // InterfaceMethod zio/ZIO.timed:(Ljava/lang/Object;)Lzio/ZIO;
      13: invokedynamic #1626,  0           // InvokeDynamic #95:apply:()Lscala/Function1;
      18: aload_1
      19: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      24: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      27: areturn

  public zio.managed.ZManaged<R, E, scala.Option<A>> timeout(scala.Function0<java.time.Duration>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokedynamic #1637,  0           // InvokeDynamic #96:apply:(Lzio/managed/ZManaged;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
      14: aload_2
      15: invokevirtual #1082               // Method zio/ZIO$.uninterruptibleMask:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      18: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      21: areturn

  public <A1> zio.ZLayer<R, E, A1> toLayer(zio.package$Tag<A1>, java.lang.Object);
    Code:
       0: getstatic     #1646               // Field zio/ZLayer$.MODULE$:Lzio/ZLayer$;
       3: invokevirtual #1648               // Method zio/ZLayer$.scoped:()Z
       6: istore_3
       7: getstatic     #1651               // Field zio/ZLayer$ScopedPartiallyApplied$.MODULE$:Lzio/ZLayer$ScopedPartiallyApplied$;
      10: iload_3
      11: aload_0
      12: aload_2
      13: invokedynamic #1656,  0           // InvokeDynamic #97:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;)Lscala/Function0;
      18: aload_1
      19: aload_2
      20: invokevirtual #1660               // Method zio/ZLayer$ScopedPartiallyApplied$.apply$extension:(ZLscala/Function0;Lzio/package$Tag;Ljava/lang/Object;)Lzio/ZLayer;
      23: areturn

  public final <B> zio.ZLayer<R, E, B> toLayerEnvironment(scala.$less$colon$less<A, zio.ZEnvironment<B>>, java.lang.Object);
    Code:
       0: getstatic     #1646               // Field zio/ZLayer$.MODULE$:Lzio/ZLayer$;
       3: invokevirtual #1667               // Method zio/ZLayer$.scopedEnvironment:()Z
       6: istore_3
       7: getstatic     #1670               // Field zio/ZLayer$ScopedEnvironmentPartiallyApplied$.MODULE$:Lzio/ZLayer$ScopedEnvironmentPartiallyApplied$;
      10: iload_3
      11: aload_0
      12: aload_1
      13: aload_2
      14: invokedynamic #1678,  0           // InvokeDynamic #98:apply:(Lzio/managed/ZManaged;Lscala/$less$colon$less;Ljava/lang/Object;)Lscala/Function0;
      19: aload_2
      20: invokevirtual #1681               // Method zio/ZLayer$ScopedEnvironmentPartiallyApplied$.apply$extension:(ZLscala/Function0;Ljava/lang/Object;)Lzio/ZLayer;
      23: areturn

  public zio.managed.ZManaged<R, E, scala.runtime.BoxedUnit> unit(java.lang.Object);
    Code:
       0: aload_0
       1: invokedynamic #1690,  0           // InvokeDynamic #99:apply:()Lscala/Function0;
       6: aload_1
       7: invokevirtual #1692               // Method as:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      10: areturn

  public final zio.managed.ZManaged<R, E, scala.Option<A>> unless(scala.Function0<java.lang.Object>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: aload_0
       5: invokedynamic #1699,  0           // InvokeDynamic #100:apply:(Lzio/managed/ZManaged;)Lscala/Function0;
      10: aload_2
      11: invokevirtual #1701               // Method zio/managed/ZManaged$.unless:(Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  public final <R1 extends R, E1> zio.managed.ZManaged<R1, E1, scala.Option<A>> unlessManaged(scala.Function0<zio.managed.ZManaged<R1, E1, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokevirtual #1705               // Method zio/managed/ZManaged$.unlessManaged:(Lscala/Function0;)Lscala/Function0;
       7: astore_3
       8: getstatic     #1708               // Field zio/managed/ZManaged$UnlessManaged$.MODULE$:Lzio/managed/ZManaged$UnlessManaged$;
      11: aload_3
      12: aload_0
      13: invokedynamic #1713,  0           // InvokeDynamic #101:apply:(Lzio/managed/ZManaged;)Lscala/Function0;
      18: aload_2
      19: invokevirtual #1715               // Method zio/managed/ZManaged$UnlessManaged$.apply$extension:(Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      22: areturn

  public <E1> zio.managed.ZManaged<R, E1, A> unsandbox(zio.IsSubtypeOfError<E, zio.Cause<E1>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokedynamic #1723,  0           // InvokeDynamic #102:apply:(Lzio/managed/ZManaged;Lzio/IsSubtypeOfError;Ljava/lang/Object;)Lscala/Function0;
      11: aload_2
      12: invokevirtual #1496               // Method zio/managed/ZManaged$.unsandbox:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      15: areturn

  public final <E1> zio.managed.ZManaged<R, E1, scala.Option<A>> unsome(zio.IsSubtypeOfError<E, scala.Option<E1>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #1730,  0           // InvokeDynamic #103:apply:(Lzio/IsSubtypeOfError;Ljava/lang/Object;)Lscala/Function1;
       8: invokedynamic #1735,  0           // InvokeDynamic #104:apply:()Lscala/Function1;
      13: getstatic     #782                // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
      16: getstatic     #787                // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
      19: invokevirtual #791                // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      22: invokevirtual #795                // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      25: aload_2
      26: invokevirtual #799                // Method foldManaged:(Lscala/Function1;Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      29: areturn

  public final <M> zio.managed.ZManaged updateService();
    Code:
       0: aload_0
       1: areturn

  public final <Service> zio.managed.ZManaged updateServiceAt();
    Code:
       0: aload_0
       1: areturn

  public <R1 extends R, E1, B> zio.ZIO<R1, E1, B> use(scala.Function1<A, zio.ZIO<R1, E1, B>>, java.lang.Object);
    Code:
       0: getstatic     #1454               // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       3: aload_2
       4: invokevirtual #1455               // Method zio/managed/ZManaged$ReleaseMap$.make:(Ljava/lang/Object;)Lzio/ZIO;
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokedynamic #1747,  0           // InvokeDynamic #105:apply:(Lzio/managed/ZManaged;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      15: aload_2
      16: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      21: areturn

  public <R1 extends R, E1, B> zio.ZIO<R1, E1, B> useDiscard(scala.Function0<zio.ZIO<R1, E1, B>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1754,  0           // InvokeDynamic #106:apply:(Lscala/Function0;)Lscala/Function1;
       7: aload_2
       8: invokevirtual #1756               // Method use:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<R, E, scala.runtime.Nothing$> useForever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1764,  0           // InvokeDynamic #107:apply:(Ljava/lang/Object;)Lscala/Function1;
       7: aload_1
       8: invokevirtual #1756               // Method use:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<R, E, A> useNow(java.lang.Object);
    Code:
       0: aload_0
       1: invokedynamic #1770,  0           // InvokeDynamic #108:apply:()Lscala/Function1;
       6: aload_1
       7: invokevirtual #1756               // Method use:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      10: areturn

  public zio.managed.ZManaged<R, E, scala.Option<A>> when(scala.Function0<java.lang.Object>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: aload_0
       5: invokedynamic #1776,  0           // InvokeDynamic #109:apply:(Lzio/managed/ZManaged;)Lscala/Function0;
      10: aload_2
      11: invokevirtual #1778               // Method zio/managed/ZManaged$.when:(Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  public <R1 extends R, E1> zio.managed.ZManaged<R1, E1, scala.Option<A>> whenManaged(scala.Function0<zio.managed.ZManaged<R1, E1, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokevirtual #1781               // Method zio/managed/ZManaged$.whenManaged:(Lscala/Function0;)Lscala/Function0;
       7: astore_3
       8: getstatic     #1784               // Field zio/managed/ZManaged$WhenManaged$.MODULE$:Lzio/managed/ZManaged$WhenManaged$;
      11: aload_3
      12: aload_0
      13: invokedynamic #1789,  0           // InvokeDynamic #110:apply:(Lzio/managed/ZManaged;)Lscala/Function0;
      18: aload_2
      19: invokevirtual #1790               // Method zio/managed/ZManaged$WhenManaged$.apply$extension:(Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      22: areturn

  public zio.managed.ZManaged<R, E, scala.Tuple2<zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>, A>> withEarlyRelease(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokevirtual #333                // Method zio/managed/ZManaged$.fiberId:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: aload_0
       8: aload_1
       9: invokedynamic #1800,  0           // InvokeDynamic #111:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;)Lscala/Function1;
      14: aload_1
      15: invokevirtual #688                // Method flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      18: areturn

  public zio.managed.ZManaged<R, E, scala.Tuple2<zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>, A>> withEarlyReleaseExit(scala.Function0<zio.Exit<java.lang.Object, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #950                // Method zio:()Lzio/ZIO;
       7: aload_1
       8: aload_2
       9: invokedynamic #1808,  0           // InvokeDynamic #112:apply:(Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
      14: aload_2
      15: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      20: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      23: areturn

  public zio.managed.ZManaged<R, E, A> withParallelism(scala.Function0<java.lang.Object>, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: aload_2
       5: invokevirtual #581                // Method zio/managed/ZManaged$.withParallism:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: aload_0
       9: invokedynamic #1816,  0           // InvokeDynamic #113:apply:(Lzio/managed/ZManaged;)Lscala/Function0;
      14: aload_2
      15: invokevirtual #1240               // Method $times$greater:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      18: areturn

  public zio.managed.ZManaged<R, E, A> withParallelismUnbounded(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokevirtual #585                // Method zio/managed/ZManaged$.withParallismUnbounded:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: aload_0
       8: invokedynamic #1822,  0           // InvokeDynamic #114:apply:(Lzio/managed/ZManaged;)Lscala/Function0;
      13: aload_1
      14: invokevirtual #1240               // Method $times$greater:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: areturn

  public <R1 extends R, E1, A1> zio.managed.ZManaged<R1, E1, java.lang.Object> zip(scala.Function0<zio.managed.ZManaged<R1, E1, A1>>, zio.Zippable<A, A1>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1825               // Method $less$times$greater:(Lscala/Function0;Lzio/Zippable;Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public <R1 extends R, E1, A1> zio.managed.ZManaged<R1, E1, A> zipLeft(scala.Function0<zio.managed.ZManaged<R1, E1, A1>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1828               // Method $less$times:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: areturn

  public <R1 extends R, E1, A1> zio.managed.ZManaged<R1, E1, java.lang.Object> zipPar(scala.Function0<zio.managed.ZManaged<R1, E1, A1>>, zio.Zippable<A, A1>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #1830               // Method $less$amp$greater:(Lscala/Function0;Lzio/Zippable;Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  public <R1 extends R, E1, A1> zio.managed.ZManaged<R1, E1, A> zipParLeft(scala.Function0<zio.managed.ZManaged<R1, E1, A1>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1833               // Method $less$amp:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: areturn

  public <R1 extends R, E1, A1> zio.managed.ZManaged<R1, E1, A1> zipParRight(scala.Function0<zio.managed.ZManaged<R1, E1, A1>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1836               // Method $amp$greater:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: areturn

  public <R1 extends R, E1, A1> zio.managed.ZManaged<R1, E1, A1> zipRight(scala.Function0<zio.managed.ZManaged<R1, E1, A1>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1240               // Method $times$greater:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: areturn

  public <R1 extends R, E1, A1, A2> zio.managed.ZManaged<R1, E1, A2> zipWith(scala.Function0<zio.managed.ZManaged<R1, E1, A1>>, scala.Function2<A, A1, A2>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #1846,  0           // InvokeDynamic #115:apply:(Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
       9: aload_3
      10: invokevirtual #688                // Method flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <R1 extends R, E1, A1, A2> zio.managed.ZManaged<R1, E1, A2> zipWithPar(scala.Function0<zio.managed.ZManaged<R1, E1, A1>>, scala.Function2<A, A1, A2>, java.lang.Object);
    Code:
       0: getstatic     #1454               // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       3: getstatic     #1850               // Field zio/ExecutionStrategy$Parallel$.MODULE$:Lzio/ExecutionStrategy$Parallel$;
       6: aload_3
       7: invokevirtual #1854               // Method zio/managed/ZManaged$ReleaseMap$.makeManaged:(Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/managed/ZManaged;
      10: aload_0
      11: aload_1
      12: aload_2
      13: aload_3
      14: invokedynamic #1862,  0           // InvokeDynamic #116:apply:(Lzio/managed/ZManaged;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      19: aload_3
      20: invokevirtual #996                // Method mapZIO:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      23: areturn

  private final zio.managed.ZManaged $at$at$$anonfun$1(scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #1867,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #1869               // class zio/managed/ZManagedAspect
       9: aload_0
      10: invokeinterface #1871,  2         // InterfaceMethod zio/managed/ZManagedAspect.apply:(Lzio/managed/ZManaged;)Lzio/managed/ZManaged;
      15: areturn

  private static final java.lang.Object $amp$greater$$anonfun$1(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  private static final zio.managed.ZManaged $times$greater$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #1867,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2                  // class zio/managed/ZManaged
       9: areturn

  private static final java.lang.Object $less$amp$$anonfun$1(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1884               // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: areturn

  private static final java.lang.Object $less$amp$greater$$anonfun$1(zio.Zippable, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #1891,  3         // InterfaceMethod zio/Zippable.zip:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  private static final java.lang.Object $less$times$$anonfun$1$$anonfun$1(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  private static final zio.managed.ZManaged $less$times$$anonfun$1(scala.Function0, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #1867,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2                  // class zio/managed/ZManaged
       9: aload_2
      10: invokedynamic #1900,  0           // InvokeDynamic #117:apply:(Ljava/lang/Object;)Lscala/Function1;
      15: aload_1
      16: invokevirtual #676                // Method map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      19: areturn

  private static final java.lang.Object $less$times$greater$$anonfun$1(zio.Zippable, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #1891,  3         // InterfaceMethod zio/Zippable.zip:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  private final zio.managed.ZManaged absolve$$anonfun$1(zio.IsSubtypeOfOutput, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #676                // Method map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: areturn

  private static final java.lang.Throwable absorbWith$$anonfun$1$$anonfun$1(scala.Function1, zio.Cause);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #1915               // Method zio/Cause.squashWith:(Lscala/Function1;)Ljava/lang/Throwable;
       5: areturn

  private static final zio.managed.ZManaged absorbWith$$anonfun$1(scala.Function1, java.lang.Object, zio.Cause);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_2
       5: invokedynamic #1927,  0           // InvokeDynamic #118:apply:(Lscala/Function1;Lzio/Cause;)Lscala/Function0;
      10: aload_1
      11: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  private static final zio.managed.ZManaged absorbWith$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  private static final java.lang.Object as$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #1867,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: areturn

  private static final scala.Some asSome$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #1935               // Field scala/Some$.MODULE$:Lscala/Some$;
       3: aload_0
       4: invokevirtual #1937               // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
       7: areturn

  private static final scala.Some asSomeError$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #1935               // Field scala/Some$.MODULE$:Lscala/Some$;
       3: aload_0
       4: invokevirtual #1937               // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
       7: areturn

  private static final zio.managed.ZManaged catchAll$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  private static final zio.managed.ZManaged catchAllCause$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  private static final java.lang.Object catchSome$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  private static final zio.managed.ZManaged catchSome$$anonfun$1$$anonfun$1(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokedynamic #1949,  0           // InvokeDynamic #119:apply:(Ljava/lang/Object;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final zio.managed.ZManaged catchSome$$anonfun$1(scala.PartialFunction, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokedynamic #1956,  0           // InvokeDynamic #120:apply:(Ljava/lang/Object;)Lscala/Function1;
       8: invokeinterface #1960,  3         // InterfaceMethod scala/PartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #2                  // class zio/managed/ZManaged
      16: areturn

  private static final zio.managed.ZManaged catchSome$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  private static final zio.Cause catchSomeCause$$anonfun$1$$anonfun$1$$anonfun$1(zio.Cause);
    Code:
       0: aload_0
       1: areturn

  private static final zio.managed.ZManaged catchSomeCause$$anonfun$1$$anonfun$1(java.lang.Object, zio.Cause);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokedynamic #1975,  0           // InvokeDynamic #121:apply:(Lzio/Cause;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #329                // Method zio/managed/ZManaged$.failCause:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final zio.managed.ZManaged catchSomeCause$$anonfun$1(scala.PartialFunction, java.lang.Object, zio.Cause);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokedynamic #1982,  0           // InvokeDynamic #122:apply:(Ljava/lang/Object;)Lscala/Function1;
       8: invokeinterface #1960,  3         // InterfaceMethod scala/PartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #2                  // class zio/managed/ZManaged
      16: areturn

  private static final zio.managed.ZManaged catchSomeCause$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  private static final zio.managed.ZManaged collect$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  private static final zio.managed.ZManaged collectManaged$$anonfun$1$$anonfun$1(scala.Function0, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  private static final zio.managed.ZManaged collectManaged$$anonfun$1(scala.Function0, scala.PartialFunction, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_3
       2: aload_0
       3: aload_2
       4: invokedynamic #1995,  0           // InvokeDynamic #123:apply:(Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
       9: invokeinterface #1960,  3         // InterfaceMethod scala/PartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      14: checkcast     #2                  // class zio/managed/ZManaged
      17: areturn

  private static final scala.util.Either either$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #2000               // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #2004               // Method scala/package$.Left:()Lscala/util/Left$;
       6: aload_0
       7: invokevirtual #2009               // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
      10: areturn

  private static final scala.util.Either either$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #2000               // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #2013               // Method scala/package$.Right:()Lscala/util/Right$;
       6: aload_0
       7: invokevirtual #2018               // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
      10: areturn

  private static final zio.ZIO ensuring$$anonfun$1(scala.Function0, zio.Exit);
    Code:
       0: aload_0
       1: invokeinterface #1867,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #36                 // class zio/ZIO
       9: areturn

  private static final zio.ZIO ensuringFirst$$anonfun$1(scala.Function0, zio.Exit);
    Code:
       0: aload_0
       1: invokeinterface #1867,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #36                 // class zio/ZIO
       9: areturn

  private final zio.managed.ZManaged firstSuccessOf$$anonfun$1();
    Code:
       0: aload_0
       1: areturn

  private static final zio.Exit flatMap$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(zio.Exit, zio.Exit);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2032,  2         // InterfaceMethod zio/Exit.$times$greater:(Lzio/Exit;)Lzio/Exit;
       7: areturn

  private static final zio.ZIO flatMap$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object, zio.Exit, zio.Exit);
    Code:
       0: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: aload_2
       5: invokedynamic #2045,  0           // InvokeDynamic #124:apply:(Lzio/Exit;Lzio/Exit;)Lscala/Function0;
      10: aload_0
      11: invokevirtual #2047               // Method zio/ZIO$.done:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  private static final zio.ZIO flatMap$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object, scala.Function1, zio.Exit, zio.Exit);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #36                 // class zio/ZIO
      10: aload_0
      11: invokeinterface #2054,  2         // InterfaceMethod zio/ZIO.exit:(Ljava/lang/Object;)Lzio/ZIO;
      16: aload_0
      17: aload_3
      18: invokedynamic #2060,  0           // InvokeDynamic #125:apply:(Ljava/lang/Object;Lzio/Exit;)Lscala/Function1;
      23: aload_0
      24: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      29: areturn

  private static final zio.ZIO flatMap$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object, scala.Function1, scala.Function1, zio.Exit);
    Code:
       0: aload_2
       1: aload_3
       2: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #36                 // class zio/ZIO
      10: aload_0
      11: invokeinterface #2054,  2         // InterfaceMethod zio/ZIO.exit:(Ljava/lang/Object;)Lzio/ZIO;
      16: aload_0
      17: aload_1
      18: aload_3
      19: invokedynamic #2071,  0           // InvokeDynamic #126:apply:(Ljava/lang/Object;Lscala/Function1;Lzio/Exit;)Lscala/Function1;
      24: aload_0
      25: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      30: areturn

  private static final scala.Tuple2 flatMap$$anonfun$1$$anonfun$1(java.lang.Object, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: ifnull        39
       6: aload_3
       7: invokevirtual #1884               // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #1016               // class scala/Function1
      13: astore        4
      15: aload_3
      16: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      19: astore        5
      21: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      24: aload_0
      25: aload_1
      26: aload         4
      28: invokedynamic #2087,  0           // InvokeDynamic #127:apply:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      33: aload         5
      35: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      38: areturn
      39: new           #2092               // class scala/MatchError
      42: dup
      43: aload_3
      44: invokespecial #2095               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      47: athrow

  private static final zio.ZIO flatMap$$anonfun$1(scala.Function1, java.lang.Object, scala.Tuple2);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: ifnull        50
       6: aload_3
       7: invokevirtual #1884               // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #1016               // class scala/Function1
      13: astore        4
      15: aload_3
      16: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      19: astore        5
      21: aload_0
      22: aload         5
      24: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #2                  // class zio/managed/ZManaged
      32: invokevirtual #950                // Method zio:()Lzio/ZIO;
      35: aload_1
      36: aload         4
      38: invokedynamic #2104,  0           // InvokeDynamic #128:apply:(Ljava/lang/Object;Lscala/Function1;)Lscala/Function1;
      43: aload_1
      44: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      49: areturn
      50: new           #2092               // class scala/MatchError
      53: dup
      54: aload_3
      55: invokespecial #2095               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      58: athrow

  private static final zio.managed.ZManaged flatMapError$$anonfun$1(scala.Function1, java.lang.Object, zio.managed.ZManaged);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokevirtual #688                // Method flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: areturn

  private static final zio.managed.ZManaged flip$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  private static final java.lang.Object flip$$anonfun$2$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  private static final zio.managed.ZManaged flip$$anonfun$2(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokedynamic #2117,  0           // InvokeDynamic #129:apply:(Ljava/lang/Object;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final zio.managed.ZManaged fold$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  private static final zio.managed.ZManaged fold$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  private static final zio.ZIO foldCauseManaged$$anonfun$1(scala.Function1, zio.Cause);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #2                  // class zio/managed/ZManaged
      10: invokevirtual #950                // Method zio:()Lzio/ZIO;
      13: areturn

  private static final zio.ZIO foldCauseManaged$$anonfun$2(scala.Function1, scala.Tuple2);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        25
       6: aload_2
       7: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      10: astore_3
      11: aload_0
      12: aload_3
      13: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #2                  // class zio/managed/ZManaged
      21: invokevirtual #950                // Method zio:()Lzio/ZIO;
      24: areturn
      25: new           #2092               // class scala/MatchError
      28: dup
      29: aload_2
      30: invokespecial #2095               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      33: athrow

  private static final zio.Cause foldManaged$$anonfun$1$$anonfun$1$$anonfun$1(zio.Cause);
    Code:
       0: aload_0
       1: areturn

  private static final zio.managed.ZManaged foldManaged$$anonfun$1$$anonfun$1(java.lang.Object, zio.Cause);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokedynamic #2129,  0           // InvokeDynamic #130:apply:(Lzio/Cause;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #329                // Method zio/managed/ZManaged$.failCause:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final zio.managed.ZManaged foldManaged$$anonfun$1(scala.Function1, java.lang.Object, zio.Cause);
    Code:
       0: aload_2
       1: invokevirtual #2136               // Method zio/Cause.failureOrCause:()Lscala/util/Either;
       4: aload_0
       5: aload_1
       6: invokedynamic #2140,  0           // InvokeDynamic #131:apply:(Ljava/lang/Object;)Lscala/Function1;
      11: invokevirtual #2145               // Method scala/util/Either.fold:(Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      14: checkcast     #2                  // class zio/managed/ZManaged
      17: areturn

  private static final java.lang.Object fork$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  private final zio.ZIO fork$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #950                // Method zio:()Lzio/ZIO;
       4: invokedynamic #2153,  0           // InvokeDynamic #132:apply:()Lscala/Function1;
       9: aload_1
      10: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      15: aload_1
      16: invokeinterface #2156,  2         // InterfaceMethod zio/ZIO.forkDaemon:(Ljava/lang/Object;)Lzio/ZIO;
      21: areturn

  private static final zio.ZIO fork$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap, zio.Exit);
    Code:
       0: aload_1
       1: aload_2
       2: getstatic     #2164               // Field zio/ExecutionStrategy$Sequential$.MODULE$:Lzio/ExecutionStrategy$Sequential$;
       5: aload_0
       6: invokevirtual #2168               // Method zio/managed/ZManaged$ReleaseMap.releaseAll:(Lzio/Exit;Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/ZIO;
       9: areturn

  private static final zio.ZIO fork$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap, zio.Fiber$Runtime, zio.Exit);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #2176               // Method zio/Fiber$Runtime.interrupt:(Ljava/lang/Object;)Lzio/ZIO;
       5: aload_0
       6: aload_1
       7: aload_3
       8: invokedynamic #2182,  0           // InvokeDynamic #133:apply:(Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;Lzio/Exit;)Lscala/Function0;
      13: aload_0
      14: invokeinterface #1122,  3         // InterfaceMethod zio/ZIO.$times$greater:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      19: areturn

  private static final scala.Tuple2 fork$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2(zio.Fiber$Runtime, scala.Function1);
    Code:
       0: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: aload_1
       4: aload_0
       5: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       8: areturn

  private static final zio.ZIO fork$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2(java.lang.Object, zio.managed.ZManaged$ReleaseMap, zio.managed.ZManaged$ReleaseMap, zio.Fiber$Runtime);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: aload_3
       4: invokedynamic #2199,  0           // InvokeDynamic #134:apply:(Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;Lzio/Fiber$Runtime;)Lscala/Function1;
       9: aload_0
      10: invokevirtual #2202               // Method zio/managed/ZManaged$ReleaseMap.add:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      13: aload_3
      14: invokedynamic #2210,  0           // InvokeDynamic #135:apply:(Lzio/Fiber$Runtime;)Lscala/Function1;
      19: aload_0
      20: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      25: areturn

  private final zio.ZIO fork$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object, zio.ZIO$InterruptibilityRestorer, zio.managed.ZManaged$ReleaseMap, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       6: aload         4
       8: aload_2
       9: aload_0
      10: aload_1
      11: invokedynamic #2220,  0           // InvokeDynamic #136:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;)Lscala/Function0;
      16: aload_1
      17: invokeinterface #2222,  3         // InterfaceMethod zio/ZIO$InterruptibilityRestorer.apply:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      22: aload_1
      23: invokeinterface #2226,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      28: aload_1
      29: aload_3
      30: aload         4
      32: invokedynamic #2234,  0           // InvokeDynamic #137:apply:(Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      37: aload_1
      38: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      43: areturn

  private final zio.ZIO fork$$anonfun$1$$anonfun$1(java.lang.Object, zio.ZIO$InterruptibilityRestorer, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: getstatic     #1454               // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       3: aload_1
       4: invokevirtual #1455               // Method zio/managed/ZManaged$ReleaseMap$.make:(Ljava/lang/Object;)Lzio/ZIO;
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokedynamic #2246,  0           // InvokeDynamic #138:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;Lzio/ZIO$InterruptibilityRestorer;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      16: aload_1
      17: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      22: areturn

  private final zio.ZIO fork$$anonfun$1(java.lang.Object, zio.ZIO$InterruptibilityRestorer);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       6: aload_1
       7: invokeinterface #1102,  2         // InterfaceMethod zio/FiberRef.get:(Ljava/lang/Object;)Lzio/ZIO;
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokedynamic #2254,  0           // InvokeDynamic #139:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;Lzio/ZIO$InterruptibilityRestorer;)Lscala/Function1;
      20: aload_1
      21: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      26: areturn

  private static final void ignore$$anonfun$1(java.lang.Object);
    Code:
       0: return

  private static java.lang.Object ignore$$anonfun$adapted$1(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #2258               // Method ignore$$anonfun$1:(Ljava/lang/Object;)V
       4: getstatic     #2264               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       7: areturn

  private static final void ignore$$anonfun$2(java.lang.Object);
    Code:
       0: return

  private static java.lang.Object ignore$$anonfun$adapted$2(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #2268               // Method ignore$$anonfun$2:(Ljava/lang/Object;)V
       4: getstatic     #2264               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       7: areturn

  private static final zio.ZIO ignoreReleaseFailures$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(zio.Cause);
    Code:
       0: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: invokevirtual #2272               // Method zio/ZIO$.unit:()Lzio/ZIO;
       6: areturn

  private static final zio.ZIO ignoreReleaseFailures$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object, scala.Function1, zio.Exit);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #36                 // class zio/ZIO
      10: invokedynamic #2280,  0           // InvokeDynamic #140:apply:()Lscala/Function1;
      15: aload_0
      16: invokeinterface #2282,  3         // InterfaceMethod zio/ZIO.catchAllCause:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      21: areturn

  private static final scala.Function1 ignoreReleaseFailures$$anonfun$1$$anonfun$1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #2288,  0           // InvokeDynamic #141:apply:(Ljava/lang/Object;Lscala/Function1;)Lscala/Function1;
       7: areturn

  private static final zio.ZIO ignoreReleaseFailures$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #2295,  0           // InvokeDynamic #142:apply:(Ljava/lang/Object;)Lscala/Function1;
       7: aload_0
       8: invokevirtual #2298               // Method zio/managed/ZManaged$ReleaseMap.updateAll:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  private final zio.ZIO ignoreReleaseFailures$$anonfun$2();
    Code:
       0: aload_0
       1: invokevirtual #950                // Method zio:()Lzio/ZIO;
       4: areturn

  private static final boolean isFailure$$anonfun$1(java.lang.Object);
    Code:
       0: iconst_1
       1: ireturn

  private static final boolean isFailure$$anonfun$2(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  private static final boolean isSuccess$$anonfun$1(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  private static final boolean isSuccess$$anonfun$2(java.lang.Object);
    Code:
       0: iconst_1
       1: ireturn

  private static final scala.Tuple2 map$$anonfun$1(scala.Function1, scala.Tuple2);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        36
       6: aload_2
       7: invokevirtual #1884               // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #1016               // class scala/Function1
      13: astore_3
      14: aload_2
      15: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: astore        4
      20: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      23: aload_3
      24: aload_0
      25: aload         4
      27: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      32: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      35: areturn
      36: new           #2092               // class scala/MatchError
      39: dup
      40: aload_2
      41: invokespecial #2095               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      44: athrow

  private static final java.lang.Throwable mapAttempt$$anonfun$1$$anonfun$1(zio.IsSubtypeOfError, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2311               // Method zio/IsSubtypeOfError.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #2313               // class java/lang/Throwable
       8: areturn

  private static final zio.managed.ZManaged mapAttempt$$anonfun$1(zio.IsSubtypeOfError, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_2
       5: invokedynamic #2321,  0           // InvokeDynamic #143:apply:(Lzio/IsSubtypeOfError;Ljava/lang/Object;)Lscala/Function0;
      10: aload_1
      11: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  private static final java.lang.Object mapAttempt$$anonfun$2$$anonfun$1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  private static final zio.managed.ZManaged mapAttempt$$anonfun$2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_2
       5: invokedynamic #2333,  0           // InvokeDynamic #144:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      10: aload_1
      11: invokevirtual #255                // Method zio/managed/ZManaged$.attempt:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  private static final scala.Tuple2 mapZIO$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object);
    Code:
       0: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       8: areturn

  private static final zio.ZIO mapZIO$$anonfun$1(scala.Function1, java.lang.Object, scala.Tuple2);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: ifnull        46
       6: aload_3
       7: invokevirtual #1884               // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #1016               // class scala/Function1
      13: astore        4
      15: aload_3
      16: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      19: astore        5
      21: aload_0
      22: aload         5
      24: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #36                 // class zio/ZIO
      32: aload         4
      34: invokedynamic #2345,  0           // InvokeDynamic #145:apply:(Lscala/Function1;)Lscala/Function1;
      39: aload_1
      40: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      45: areturn
      46: new           #2092               // class scala/MatchError
      49: dup
      50: aload_3
      51: invokespecial #2095               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      54: athrow

  private static final java.lang.Object memoize$$anonfun$1$$anonfun$1$$anonfun$1(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  private static final zio.Promise memoize$$anonfun$1$$anonfun$1$$anonfun$2(zio.Promise);
    Code:
       0: aload_0
       1: areturn

  private static final zio.ZIO memoize$$anonfun$1$$anonfun$1$$anonfun$3$$anonfun$1(java.lang.Object, zio.Promise);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #2360               // Method zio/Promise.await:(Ljava/lang/Object;)Lzio/ZIO;
       5: areturn

  private static final zio.managed.ZManaged memoize$$anonfun$1$$anonfun$1$$anonfun$3(java.lang.Object, zio.Promise, zio.ZIO);
    Code:
       0: getstatic     #2370               // Field zio/managed/package$.MODULE$:Lzio/managed/package$;
       3: aload_2
       4: aload_0
       5: aload_1
       6: invokedynamic #2376,  0           // InvokeDynamic #146:apply:(Ljava/lang/Object;Lzio/Promise;)Lscala/Function0;
      11: aload_0
      12: invokeinterface #1122,  3         // InterfaceMethod zio/ZIO.$times$greater:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      17: invokevirtual #2379               // Method zio/managed/package$.ZManagedZIOSyntax:(Lzio/ZIO;)Lzio/managed/package$ZManagedZIOSyntax;
      20: aload_0
      21: invokevirtual #2382               // Method zio/managed/package$ZManagedZIOSyntax.toManaged:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      24: areturn

  private final zio.ZIO memoize$$anonfun$1$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap, zio.Promise);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       6: aload_2
       7: aload_0
       8: invokevirtual #950                // Method zio:()Lzio/ZIO;
      11: aload_1
      12: invokeinterface #2226,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      17: invokedynamic #2392,  0           // InvokeDynamic #147:apply:()Lscala/Function1;
      22: aload_1
      23: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      28: aload_3
      29: invokedynamic #2400,  0           // InvokeDynamic #148:apply:(Lzio/Promise;)Lscala/Function0;
      34: aload_1
      35: invokeinterface #2403,  3         // InterfaceMethod zio/ZIO.intoPromise:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      40: aload_1
      41: invokeinterface #2406,  2         // InterfaceMethod zio/ZIO.once:(Ljava/lang/Object;)Lzio/ZIO;
      46: aload_1
      47: aload_3
      48: invokedynamic #2413,  0           // InvokeDynamic #149:apply:(Ljava/lang/Object;Lzio/Promise;)Lscala/Function1;
      53: aload_1
      54: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      59: areturn

  private final zio.ZIO memoize$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: getstatic     #2420               // Field zio/Promise$.MODULE$:Lzio/Promise$;
       3: aload_1
       4: invokevirtual #2421               // Method zio/Promise$.make:(Ljava/lang/Object;)Lzio/ZIO;
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokedynamic #2429,  0           // InvokeDynamic #150:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      15: aload_1
      16: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      21: areturn

  private static final zio.managed.ZManaged merge$$anonfun$1(zio.IsSubtypeOfError, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2311               // Method zio/IsSubtypeOfError.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      11: areturn

  private static final zio.managed.ZManaged merge$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  private static final scala.Some none$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #1935               // Field scala/Some$.MODULE$:Lscala/Some$;
       3: aload_0
       4: invokevirtual #1937               // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
       7: areturn

  private static final zio.managed.ZManaged none$$anonfun$1(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokedynamic #2439,  0           // InvokeDynamic #151:apply:(Ljava/lang/Object;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final zio.managed.ZManaged none$$anonfun$2$$anonfun$1();
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: getstatic     #2264               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       6: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  private static final scala.None$ none$$anonfun$2$$anonfun$2$$anonfun$1();
    Code:
       0: getstatic     #2447               // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  private static final zio.managed.ZManaged none$$anonfun$2$$anonfun$2(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokedynamic #2455,  0           // InvokeDynamic #152:apply:()Lscala/Function0;
       8: aload_0
       9: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  private static final zio.managed.ZManaged none$$anonfun$2(zio.IsSubtypeOfOutput, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #2460               // Method zio/IsSubtypeOfOutput.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #2462               // class scala/Option
       8: invokedynamic #2466,  0           // InvokeDynamic #153:apply:()Lscala/Function0;
      13: aload_1
      14: invokedynamic #2470,  0           // InvokeDynamic #154:apply:(Ljava/lang/Object;)Lscala/Function1;
      19: invokevirtual #2473               // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      22: checkcast     #2                  // class zio/managed/ZManaged
      25: areturn

  private final zio.managed.ZManaged onExecutor$$anonfun$1();
    Code:
       0: aload_0
       1: areturn

  private static final zio.Executor onExecutionContext$$anonfun$1(scala.Function0);
    Code:
       0: getstatic     #2479               // Field zio/Executor$.MODULE$:Lzio/Executor$;
       3: aload_0
       4: invokeinterface #1867,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       9: checkcast     #2481               // class scala/concurrent/ExecutionContext
      12: invokevirtual #2485               // Method zio/Executor$.fromExecutionContext:(Lscala/concurrent/ExecutionContext;)Lzio/Executor;
      15: areturn

  private static final java.lang.Object onExit$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  private final zio.ZIO onExit$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #950                // Method zio:()Lzio/ZIO;
       4: invokedynamic #2493,  0           // InvokeDynamic #155:apply:()Lscala/Function1;
       9: aload_1
      10: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      15: areturn

  private static final zio.ZEnvironment onExit$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$1$$anonfun$1(zio.ZEnvironment);
    Code:
       0: aload_0
       1: areturn

  private static final zio.ZIO onExit$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object, zio.ZEnvironment, zio.Exit);
    Code:
       0: aload_0
       1: aload_3
       2: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #36                 // class zio/ZIO
      10: aload_2
      11: invokedynamic #2510,  0           // InvokeDynamic #156:apply:(Lzio/ZEnvironment;)Lscala/Function0;
      16: aload_1
      17: invokeinterface #2512,  3         // InterfaceMethod zio/ZIO.provideEnvironment:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      22: aload_1
      23: invokeinterface #2054,  2         // InterfaceMethod zio/ZIO.exit:(Ljava/lang/Object;)Lzio/ZIO;
      28: areturn

  private static final zio.Exit onExit$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$2$$anonfun$1(zio.Exit, zio.Exit);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2032,  2         // InterfaceMethod zio/Exit.$times$greater:(Lzio/Exit;)Lzio/Exit;
       7: areturn

  private static final zio.ZIO onExit$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$2(java.lang.Object, zio.Exit, zio.Exit);
    Code:
       0: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: aload_2
       5: invokedynamic #2522,  0           // InvokeDynamic #157:apply:(Lzio/Exit;Lzio/Exit;)Lscala/Function0;
      10: aload_0
      11: invokevirtual #2047               // Method zio/ZIO$.done:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  private static final zio.ZIO onExit$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1(scala.Function1, java.lang.Object, zio.ZEnvironment, zio.managed.ZManaged$ReleaseMap, zio.Exit, zio.Exit);
    Code:
       0: aload_3
       1: aload         5
       3: getstatic     #2164               // Field zio/ExecutionStrategy$Sequential$.MODULE$:Lzio/ExecutionStrategy$Sequential$;
       6: aload_1
       7: invokevirtual #2168               // Method zio/managed/ZManaged$ReleaseMap.releaseAll:(Lzio/Exit;Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/ZIO;
      10: aload_1
      11: invokeinterface #2054,  2         // InterfaceMethod zio/ZIO.exit:(Ljava/lang/Object;)Lzio/ZIO;
      16: aload_0
      17: aload_1
      18: aload_2
      19: aload         4
      21: invokedynamic #2535,  0           // InvokeDynamic #158:apply:(Lscala/Function1;Ljava/lang/Object;Lzio/ZEnvironment;Lzio/Exit;)Lscala/Function0;
      26: aload_1
      27: invokedynamic #2543,  0           // InvokeDynamic #159:apply:(Ljava/lang/Object;)Lscala/Function2;
      32: aload_1
      33: invokeinterface #2546,  4         // InterfaceMethod zio/ZIO.zipWith:(Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/ZIO;
      38: getstatic     #2551               // Field zio/IsSubtypeOfOutput$.MODULE$:Lzio/IsSubtypeOfOutput$;
      41: getstatic     #2556               // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
      44: invokevirtual #2560               // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
      47: invokevirtual #2563               // Method zio/IsSubtypeOfOutput$.impl:(Lscala/$less$colon$less;)Lzio/IsSubtypeOfOutput;
      50: aload_1
      51: invokeinterface #2566,  3         // InterfaceMethod zio/ZIO.flatten:(Lzio/IsSubtypeOfOutput;Ljava/lang/Object;)Lzio/ZIO;
      56: areturn

  private static final zio.Exit onExit$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2$$anonfun$1(zio.Exit);
    Code:
       0: aload_0
       1: areturn

  private static final scala.Tuple2 onExit$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2$$anonfun$2(scala.Function1, java.lang.Object);
    Code:
       0: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       8: areturn

  private static final zio.ZIO onExit$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2(java.lang.Object, zio.Exit, scala.Function1);
    Code:
       0: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: invokedynamic #2580,  0           // InvokeDynamic #160:apply:(Lzio/Exit;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #2047               // Method zio/ZIO$.done:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      13: aload_2
      14: invokedynamic #2584,  0           // InvokeDynamic #161:apply:(Lscala/Function1;)Lscala/Function1;
      19: aload_0
      20: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      25: areturn

  private static final zio.ZIO onExit$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2(scala.Function1, java.lang.Object, zio.ZEnvironment, zio.managed.ZManaged$ReleaseMap, zio.managed.ZManaged$ReleaseMap, zio.Exit);
    Code:
       0: aload_3
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload         4
       6: aload         5
       8: invokedynamic #2598,  0           // InvokeDynamic #162:apply:(Lscala/Function1;Ljava/lang/Object;Lzio/ZEnvironment;Lzio/managed/ZManaged$ReleaseMap;Lzio/Exit;)Lscala/Function1;
      13: aload_1
      14: invokevirtual #2202               // Method zio/managed/ZManaged$ReleaseMap.add:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      17: aload_1
      18: aload         5
      20: invokedynamic #2604,  0           // InvokeDynamic #163:apply:(Ljava/lang/Object;Lzio/Exit;)Lscala/Function1;
      25: aload_1
      26: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      31: areturn

  private final zio.ZIO onExit$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object, zio.ZIO$InterruptibilityRestorer, zio.ZEnvironment, zio.managed.ZManaged$ReleaseMap, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       6: aload         6
       8: aload_3
       9: aload_0
      10: aload_2
      11: invokedynamic #2615,  0           // InvokeDynamic #164:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;)Lscala/Function0;
      16: aload_2
      17: invokeinterface #2222,  3         // InterfaceMethod zio/ZIO$InterruptibilityRestorer.apply:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      22: aload_2
      23: invokeinterface #2054,  2         // InterfaceMethod zio/ZIO.exit:(Ljava/lang/Object;)Lzio/ZIO;
      28: aload_2
      29: invokeinterface #2226,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      34: aload_1
      35: aload_2
      36: aload         4
      38: aload         5
      40: aload         6
      42: invokedynamic #2621,  0           // InvokeDynamic #165:apply:(Lscala/Function1;Ljava/lang/Object;Lzio/ZEnvironment;Lzio/managed/ZManaged$ReleaseMap;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      47: aload_2
      48: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      53: areturn

  private final zio.ZIO onExit$$anonfun$1$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object, zio.ZIO$InterruptibilityRestorer, zio.ZEnvironment, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: getstatic     #1454               // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       3: aload_2
       4: invokevirtual #1455               // Method zio/managed/ZManaged$ReleaseMap$.make:(Ljava/lang/Object;)Lzio/ZIO;
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: aload         4
      13: aload         5
      15: invokedynamic #2633,  0           // InvokeDynamic #166:apply:(Lzio/managed/ZManaged;Lscala/Function1;Ljava/lang/Object;Lzio/ZIO$InterruptibilityRestorer;Lzio/ZEnvironment;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      20: aload_2
      21: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      26: areturn

  private final zio.ZIO onExit$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object, zio.ZIO$InterruptibilityRestorer, zio.ZEnvironment);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       6: aload_2
       7: invokeinterface #1102,  2         // InterfaceMethod zio/FiberRef.get:(Ljava/lang/Object;)Lzio/ZIO;
      12: aload_0
      13: aload_1
      14: aload_2
      15: aload_3
      16: aload         4
      18: invokedynamic #2645,  0           // InvokeDynamic #167:apply:(Lzio/managed/ZManaged;Lscala/Function1;Ljava/lang/Object;Lzio/ZIO$InterruptibilityRestorer;Lzio/ZEnvironment;)Lscala/Function1;
      23: aload_2
      24: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      29: areturn

  private final zio.ZIO onExit$$anonfun$1(scala.Function1, java.lang.Object, zio.ZIO$InterruptibilityRestorer);
    Code:
       0: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_2
       4: invokevirtual #2649               // Method zio/ZIO$.environment:(Ljava/lang/Object;)Lzio/ZIO;
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokedynamic #2657,  0           // InvokeDynamic #168:apply:(Lzio/managed/ZManaged;Lscala/Function1;Ljava/lang/Object;Lzio/ZIO$InterruptibilityRestorer;)Lscala/Function1;
      16: aload_2
      17: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      22: areturn

  private final zio.ZIO onExitFirst$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1();
    Code:
       0: aload_0
       1: invokevirtual #950                // Method zio:()Lzio/ZIO;
       4: areturn

  private static final java.lang.Object onExitFirst$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  private static final zio.Exit onExitFirst$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2(zio.Exit);
    Code:
       0: aload_0
       1: invokedynamic #2666,  0           // InvokeDynamic #169:apply:()Lscala/Function1;
       6: invokeinterface #2670,  2         // InterfaceMethod zio/Exit.mapExit:(Lscala/Function1;)Lzio/Exit;
      11: areturn

  private static final zio.ZEnvironment onExitFirst$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$3$$anonfun$1$$anonfun$1(zio.ZEnvironment);
    Code:
       0: aload_0
       1: areturn

  private static final zio.ZIO onExitFirst$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$3$$anonfun$1$$anonfun$2(java.lang.Object, zio.managed.ZManaged$ReleaseMap, zio.Exit);
    Code:
       0: aload_1
       1: aload_2
       2: getstatic     #2164               // Field zio/ExecutionStrategy$Sequential$.MODULE$:Lzio/ExecutionStrategy$Sequential$;
       5: aload_0
       6: invokevirtual #2168               // Method zio/managed/ZManaged$ReleaseMap.releaseAll:(Lzio/Exit;Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/ZIO;
       9: aload_0
      10: invokeinterface #2054,  2         // InterfaceMethod zio/ZIO.exit:(Ljava/lang/Object;)Lzio/ZIO;
      15: areturn

  private static final zio.Exit onExitFirst$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$3$$anonfun$1$$anonfun$3$$anonfun$1(zio.Exit, zio.Exit);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2032,  2         // InterfaceMethod zio/Exit.$times$greater:(Lzio/Exit;)Lzio/Exit;
       7: areturn

  private static final zio.ZIO onExitFirst$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$3$$anonfun$1$$anonfun$3(java.lang.Object, zio.Exit, zio.Exit);
    Code:
       0: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: aload_2
       5: invokedynamic #2685,  0           // InvokeDynamic #170:apply:(Lzio/Exit;Lzio/Exit;)Lscala/Function0;
      10: aload_0
      11: invokevirtual #2047               // Method zio/ZIO$.done:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  private static final zio.ZIO onExitFirst$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$3$$anonfun$1(scala.Function1, java.lang.Object, zio.ZEnvironment, zio.managed.ZManaged$ReleaseMap, zio.Exit, zio.Exit);
    Code:
       0: aload_0
       1: aload         4
       3: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #36                 // class zio/ZIO
      11: aload_2
      12: invokedynamic #2695,  0           // InvokeDynamic #171:apply:(Lzio/ZEnvironment;)Lscala/Function0;
      17: aload_1
      18: invokeinterface #2512,  3         // InterfaceMethod zio/ZIO.provideEnvironment:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      23: aload_1
      24: invokeinterface #2054,  2         // InterfaceMethod zio/ZIO.exit:(Ljava/lang/Object;)Lzio/ZIO;
      29: aload_1
      30: aload_3
      31: aload         5
      33: invokedynamic #2699,  0           // InvokeDynamic #172:apply:(Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;Lzio/Exit;)Lscala/Function0;
      38: aload_1
      39: invokedynamic #2703,  0           // InvokeDynamic #173:apply:(Ljava/lang/Object;)Lscala/Function2;
      44: aload_1
      45: invokeinterface #2546,  4         // InterfaceMethod zio/ZIO.zipWith:(Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/ZIO;
      50: getstatic     #2551               // Field zio/IsSubtypeOfOutput$.MODULE$:Lzio/IsSubtypeOfOutput$;
      53: getstatic     #2556               // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
      56: invokevirtual #2560               // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
      59: invokevirtual #2563               // Method zio/IsSubtypeOfOutput$.impl:(Lscala/$less$colon$less;)Lzio/IsSubtypeOfOutput;
      62: aload_1
      63: invokeinterface #2566,  3         // InterfaceMethod zio/ZIO.flatten:(Lzio/IsSubtypeOfOutput;Ljava/lang/Object;)Lzio/ZIO;
      68: areturn

  private static final zio.Exit onExitFirst$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$3$$anonfun$2$$anonfun$1(zio.Exit);
    Code:
       0: aload_0
       1: areturn

  private static final scala.Tuple2 onExitFirst$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$3$$anonfun$2$$anonfun$2(scala.Function1, java.lang.Object);
    Code:
       0: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       8: areturn

  private static final zio.ZIO onExitFirst$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$3$$anonfun$2(java.lang.Object, zio.Exit, scala.Function1);
    Code:
       0: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: invokedynamic #2714,  0           // InvokeDynamic #174:apply:(Lzio/Exit;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #2047               // Method zio/ZIO$.done:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      13: aload_2
      14: invokedynamic #2718,  0           // InvokeDynamic #175:apply:(Lscala/Function1;)Lscala/Function1;
      19: aload_0
      20: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      25: areturn

  private static final zio.ZIO onExitFirst$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$3(scala.Function1, java.lang.Object, zio.ZEnvironment, zio.managed.ZManaged$ReleaseMap, zio.managed.ZManaged$ReleaseMap, zio.Exit);
    Code:
       0: aload_3
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload         4
       6: aload         5
       8: invokedynamic #2728,  0           // InvokeDynamic #176:apply:(Lscala/Function1;Ljava/lang/Object;Lzio/ZEnvironment;Lzio/managed/ZManaged$ReleaseMap;Lzio/Exit;)Lscala/Function1;
      13: aload_1
      14: invokevirtual #2202               // Method zio/managed/ZManaged$ReleaseMap.add:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      17: aload_1
      18: aload         5
      20: invokedynamic #2732,  0           // InvokeDynamic #177:apply:(Ljava/lang/Object;Lzio/Exit;)Lscala/Function1;
      25: aload_1
      26: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      31: areturn

  private final zio.ZIO onExitFirst$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object, zio.ZIO$InterruptibilityRestorer, zio.ZEnvironment, zio.managed.ZManaged$ReleaseMap, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       6: aload         6
       8: aload_3
       9: aload_0
      10: invokedynamic #2742,  0           // InvokeDynamic #178:apply:(Lzio/managed/ZManaged;)Lscala/Function0;
      15: aload_2
      16: invokeinterface #2222,  3         // InterfaceMethod zio/ZIO$InterruptibilityRestorer.apply:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      21: aload_2
      22: invokeinterface #2054,  2         // InterfaceMethod zio/ZIO.exit:(Ljava/lang/Object;)Lzio/ZIO;
      27: invokedynamic #2747,  0           // InvokeDynamic #179:apply:()Lscala/Function1;
      32: aload_2
      33: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      38: aload_2
      39: invokeinterface #2226,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      44: aload_1
      45: aload_2
      46: aload         4
      48: aload         5
      50: aload         6
      52: invokedynamic #2751,  0           // InvokeDynamic #180:apply:(Lscala/Function1;Ljava/lang/Object;Lzio/ZEnvironment;Lzio/managed/ZManaged$ReleaseMap;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      57: aload_2
      58: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      63: areturn

  private final zio.ZIO onExitFirst$$anonfun$1$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object, zio.ZIO$InterruptibilityRestorer, zio.ZEnvironment, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: getstatic     #1454               // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       3: aload_2
       4: invokevirtual #1455               // Method zio/managed/ZManaged$ReleaseMap$.make:(Ljava/lang/Object;)Lzio/ZIO;
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: aload         4
      13: aload         5
      15: invokedynamic #2760,  0           // InvokeDynamic #181:apply:(Lzio/managed/ZManaged;Lscala/Function1;Ljava/lang/Object;Lzio/ZIO$InterruptibilityRestorer;Lzio/ZEnvironment;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      20: aload_2
      21: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      26: areturn

  private final zio.ZIO onExitFirst$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object, zio.ZIO$InterruptibilityRestorer, zio.ZEnvironment);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       6: aload_2
       7: invokeinterface #1102,  2         // InterfaceMethod zio/FiberRef.get:(Ljava/lang/Object;)Lzio/ZIO;
      12: aload_0
      13: aload_1
      14: aload_2
      15: aload_3
      16: aload         4
      18: invokedynamic #2768,  0           // InvokeDynamic #182:apply:(Lzio/managed/ZManaged;Lscala/Function1;Ljava/lang/Object;Lzio/ZIO$InterruptibilityRestorer;Lzio/ZEnvironment;)Lscala/Function1;
      23: aload_2
      24: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      29: areturn

  private final zio.ZIO onExitFirst$$anonfun$1(scala.Function1, java.lang.Object, zio.ZIO$InterruptibilityRestorer);
    Code:
       0: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_2
       4: invokevirtual #2649               // Method zio/ZIO$.environment:(Ljava/lang/Object;)Lzio/ZIO;
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokedynamic #2774,  0           // InvokeDynamic #183:apply:(Lzio/managed/ZManaged;Lscala/Function1;Ljava/lang/Object;Lzio/ZIO$InterruptibilityRestorer;)Lscala/Function1;
      16: aload_2
      17: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      22: areturn

  private static final scala.Option option$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #2447               // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  private static final scala.Option option$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #1935               // Field scala/Some$.MODULE$:Lscala/Some$;
       3: aload_0
       4: invokevirtual #1937               // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
       7: areturn

  private static final java.lang.Throwable orDieWith$$anonfun$1$$anonfun$1(java.lang.Throwable);
    Code:
       0: aload_0
       1: areturn

  private static final zio.managed.ZManaged orDieWith$$anonfun$1(java.lang.Object, java.lang.Throwable);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokedynamic #2788,  0           // InvokeDynamic #184:apply:(Ljava/lang/Throwable;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #293                // Method zio/managed/ZManaged$.die:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final zio.managed.ZManaged orElse$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #1867,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2                  // class zio/managed/ZManaged
       9: areturn

  private static final zio.managed.ZManaged orElse$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  private static final scala.util.Right orElseEither$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #2000               // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #2013               // Method scala/package$.Right:()Lscala/util/Right$;
       6: aload_0
       7: invokevirtual #2018               // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
      10: areturn

  private static final zio.managed.ZManaged orElseEither$$anonfun$1(scala.Function0, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #1867,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2                  // class zio/managed/ZManaged
       9: invokedynamic #2799,  0           // InvokeDynamic #185:apply:()Lscala/Function1;
      14: aload_1
      15: invokevirtual #676                // Method map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      18: areturn

  private static final zio.managed.ZManaged orElseEither$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: getstatic     #2000               // Field scala/package$.MODULE$:Lscala/package$;
       6: invokevirtual #2004               // Method scala/package$.Left:()Lscala/util/Left$;
       9: aload_0
      10: invokevirtual #2009               // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
      13: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      16: areturn

  private static final zio.managed.ZManaged orElseFail$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_1
       5: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: areturn

  private static final scala.Some orElseOptional$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #1935               // Field scala/Some$.MODULE$:Lscala/Some$;
       3: aload_0
       4: invokevirtual #1937               // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
       7: areturn

  private static final zio.managed.ZManaged orElseOptional$$anonfun$1$$anonfun$1(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokedynamic #2809,  0           // InvokeDynamic #186:apply:(Ljava/lang/Object;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final zio.managed.ZManaged orElseOptional$$anonfun$1(scala.Function0, zio.IsSubtypeOfError, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_3
       2: invokevirtual #2311               // Method zio/IsSubtypeOfError.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #2462               // class scala/Option
       8: aload_0
       9: aload_2
      10: invokedynamic #2817,  0           // InvokeDynamic #187:apply:(Ljava/lang/Object;)Lscala/Function1;
      15: invokevirtual #2473               // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      18: checkcast     #2                  // class zio/managed/ZManaged
      21: areturn

  private static final zio.managed.ZManaged orElseSucceed$$anonfun$1(scala.Function0);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokeinterface #1867,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       9: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  private final zio.ZIO preallocate$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       6: aload_2
       7: aload_0
       8: invokevirtual #950                // Method zio:()Lzio/ZIO;
      11: aload_1
      12: invokeinterface #2226,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      17: areturn

  private static final zio.ZIO preallocate$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$1(java.lang.Object, zio.Cause);
    Code:
       0: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: aload_0
       5: invokevirtual #2829               // Method zio/ZIO$.refailCause:(Lzio/Cause;Ljava/lang/Object;)Lzio/ZIO;
       8: areturn

  private static final zio.ZIO preallocate$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap, zio.Cause);
    Code:
       0: aload_1
       1: getstatic     #2839               // Field zio/Exit$.MODULE$:Lzio/Exit$;
       4: aload_2
       5: invokevirtual #2842               // Method zio/Exit$.fail:(Ljava/lang/Object;)Lzio/Exit;
       8: getstatic     #2164               // Field zio/ExecutionStrategy$Sequential$.MODULE$:Lzio/ExecutionStrategy$Sequential$;
      11: aload_0
      12: invokevirtual #2168               // Method zio/managed/ZManaged$ReleaseMap.releaseAll:(Lzio/Exit;Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/ZIO;
      15: aload_0
      16: aload_2
      17: invokedynamic #2848,  0           // InvokeDynamic #188:apply:(Ljava/lang/Object;Lzio/Cause;)Lscala/Function0;
      22: aload_0
      23: invokeinterface #1122,  3         // InterfaceMethod zio/ZIO.$times$greater:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      28: areturn

  private static final scala.Tuple2 preallocate$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object, scala.Function1);
    Code:
       0: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: aload_1
       4: aload_0
       5: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       8: areturn

  private static final zio.ZIO preallocate$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2$$anonfun$1$$anonfun$1(java.lang.Object, scala.Function1, java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: aload_3
       1: aload_1
       2: aload_0
       3: invokevirtual #2202               // Method zio/managed/ZManaged$ReleaseMap.add:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
       6: aload_2
       7: invokedynamic #2861,  0           // InvokeDynamic #189:apply:(Ljava/lang/Object;)Lscala/Function1;
      12: aload_0
      13: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      18: areturn

  private static final zio.managed.ZManaged preallocate$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2$$anonfun$1(java.lang.Object, scala.Function1, java.lang.Object, zio.Unsafe);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       6: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       9: aload_0
      10: invokeinterface #1102,  2         // InterfaceMethod zio/FiberRef.get:(Ljava/lang/Object;)Lzio/ZIO;
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokedynamic #2873,  0           // InvokeDynamic #190:apply:(Ljava/lang/Object;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      23: aload_0
      24: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      29: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      32: areturn

  private static final zio.ZIO preallocate$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2(java.lang.Object, scala.Tuple2);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        37
       6: aload_2
       7: invokevirtual #1884               // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #1016               // class scala/Function1
      13: astore_3
      14: aload_2
      15: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: astore        4
      20: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
      23: aload_0
      24: aload_3
      25: aload         4
      27: invokedynamic #2883,  0           // InvokeDynamic #191:apply:(Ljava/lang/Object;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      32: aload_0
      33: invokevirtual #2885               // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      36: areturn
      37: new           #2092               // class scala/MatchError
      40: dup
      41: aload_2
      42: invokespecial #2095               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      45: athrow

  private static final zio.managed.ZManaged preallocate$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$3(zio.managed.ZManaged);
    Code:
       0: aload_0
       1: areturn

  private static final zio.ZIO preallocate$$anonfun$1$$anonfun$1$$anonfun$2(java.lang.Object, zio.managed.ZManaged$ReleaseMap, zio.Exit);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokedynamic #2897,  0           // InvokeDynamic #192:apply:(Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
       8: aload_0
       9: invokedynamic #2901,  0           // InvokeDynamic #193:apply:(Ljava/lang/Object;)Lscala/Function1;
      14: aload_0
      15: invokeinterface #2904,  4         // InterfaceMethod zio/Exit.foldExitZIO:(Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      20: invokedynamic #2908,  0           // InvokeDynamic #194:apply:()Lscala/Function1;
      25: aload_0
      26: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      31: areturn

  private final zio.ZIO preallocate$$anonfun$1$$anonfun$1(java.lang.Object, zio.ZIO$InterruptibilityRestorer, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: aload_3
       4: invokedynamic #2917,  0           // InvokeDynamic #195:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function0;
       9: aload_1
      10: invokeinterface #2222,  3         // InterfaceMethod zio/ZIO$InterruptibilityRestorer.apply:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      15: aload_1
      16: invokeinterface #2054,  2         // InterfaceMethod zio/ZIO.exit:(Ljava/lang/Object;)Lzio/ZIO;
      21: aload_1
      22: aload_3
      23: invokedynamic #2921,  0           // InvokeDynamic #196:apply:(Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      28: aload_1
      29: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      34: areturn

  private final zio.ZIO preallocate$$anonfun$1(java.lang.Object, zio.ZIO$InterruptibilityRestorer);
    Code:
       0: getstatic     #1454               // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       3: aload_1
       4: invokevirtual #1455               // Method zio/managed/ZManaged$ReleaseMap$.make:(Ljava/lang/Object;)Lzio/ZIO;
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokedynamic #2926,  0           // InvokeDynamic #197:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;Lzio/ZIO$InterruptibilityRestorer;)Lscala/Function1;
      15: aload_1
      16: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      21: areturn

  private static final scala.Tuple2 preallocateManaged$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object, scala.Function1);
    Code:
       0: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: aload_1
       4: aload_0
       5: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       8: areturn

  private static final zio.ZIO preallocateManaged$$anonfun$1$$anonfun$1(java.lang.Object, scala.Function1, java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: aload_3
       1: aload_1
       2: aload_0
       3: invokevirtual #2202               // Method zio/managed/ZManaged$ReleaseMap.add:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
       6: aload_2
       7: invokedynamic #2937,  0           // InvokeDynamic #198:apply:(Ljava/lang/Object;)Lscala/Function1;
      12: aload_0
      13: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      18: areturn

  private static final scala.Tuple2 preallocateManaged$$anonfun$1(java.lang.Object, scala.Tuple2);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        61
       6: aload_2
       7: invokevirtual #1884               // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #1016               // class scala/Function1
      13: astore_3
      14: aload_2
      15: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: astore        4
      20: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      23: aload_3
      24: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
      27: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
      30: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
      33: aload_0
      34: invokeinterface #1102,  2         // InterfaceMethod zio/FiberRef.get:(Ljava/lang/Object;)Lzio/ZIO;
      39: aload_0
      40: aload_3
      41: aload         4
      43: invokedynamic #2942,  0           // InvokeDynamic #199:apply:(Ljava/lang/Object;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      48: aload_0
      49: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      54: invokevirtual #250                // Method zio/managed/ZManaged$.apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      57: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      60: areturn
      61: new           #2092               // class scala/MatchError
      64: dup
      65: aload_2
      66: invokespecial #2095               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      69: athrow

  private static final zio.ZEnvironment provideEnvironment$$anonfun$1(scala.Function0, zio.ZEnvironment);
    Code:
       0: aload_0
       1: invokeinterface #1867,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2946               // class zio/ZEnvironment
       9: areturn

  private static final zio.ZEnvironment provideLayer$$anonfun$1$$anonfun$1(zio.Scope$Closeable, zio.ZEnvironment);
    Code:
       0: aload_1
       1: getstatic     #2955               // Field zio/ZEnvironment$.MODULE$:Lzio/ZEnvironment$;
       4: aload_0
       5: getstatic     #2960               // Field zio/package$.MODULE$:Lzio/package$;
       8: invokevirtual #2964               // Method zio/package$.EnvironmentTag:()Lizumi/reflect/Tag$;
      11: getstatic     #2969               // Field izumi/reflect/Tag$.MODULE$:Lizumi/reflect/Tag$;
      14: ldc           #5                  // class java/lang/Object
      16: getstatic     #2974               // Field izumi/reflect/macrortti/LightTypeTag$.MODULE$:Lizumi/reflect/macrortti/LightTypeTag$;
      19: ldc_w         #2975               // int -533359611
      22: ldc_w         #2977               // String \u0004\u0000\u0001\u0014zio.Scope$.Closeable\u0001\u0002\u0003\u0000\u0000\tzio.Scope\u0001\u0001
      25: ldc_w         #2979               // String \u0000\u0002\u0004\u0000\u0001\tzio.Scope\u0001\u0001\u0001\u0004\u0000\u0001\u0014java.io.Serializable\u0001\u0001\u0004\u0000\u0001\u0014zio.Scope$.Closeable\u0001\u0002\u0003\u0000\u0000\u0090\u0002\u0001\u0001\u0002\u0004\u0000\u0001\u0090\u0003\u0001\u0001\u0004\u0000\u0001\u0090\u0002\u0001\u0001\u0001\u0000\u0001\u0090\u0004\u0001\u0002\u0003\u0000\u0000\u0090\u0002\u0001\u0001\u0005\u0000\u0001\u0090\u0002\u0001\u0001\u0000\u0001\tscala.Any\u0001\u0001\u0000\u0001\u0010java.lang.Object\u0001\u0001\u0000\u0001\u000fscala.Matchable\u0001\u0001\u0000\u0001\u0090\u0003\u0001\u0001
      28: bipush        21
      30: invokevirtual #2983               // Method izumi/reflect/macrortti/LightTypeTag$.parse:(ILjava/lang/String;Ljava/lang/String;I)Lizumi/reflect/macrortti/LightTypeTag;
      33: invokevirtual #2986               // Method izumi/reflect/Tag$.apply:(Ljava/lang/Class;Lizumi/reflect/macrortti/LightTypeTag;)Lizumi/reflect/Tag;
      36: invokevirtual #2989               // Method izumi/reflect/Tag$.apply:(Lizumi/reflect/Tag;)Lizumi/reflect/Tag;
      39: astore_2
      40: new           #53                 // class zio/managed/ZManaged$$anon$1
      43: dup
      44: aload_2
      45: invokespecial #2992               // Method zio/managed/ZManaged$$anon$1."<init>":(Lizumi/reflect/Tag;)V
      48: invokevirtual #2995               // Method zio/ZEnvironment$.apply:(Ljava/lang/Object;Lzio/package$Tag;)Lzio/ZEnvironment;
      51: getstatic     #2969               // Field izumi/reflect/Tag$.MODULE$:Lizumi/reflect/Tag$;
      54: ldc           #5                  // class java/lang/Object
      56: getstatic     #2974               // Field izumi/reflect/macrortti/LightTypeTag$.MODULE$:Lizumi/reflect/macrortti/LightTypeTag$;
      59: ldc_w         #2996               // int 1294249275
      62: ldc_w         #2998               // String \u0004\u0000\u0001\tzio.Scope\u0001\u0001
      65: ldc_w         #3000               // String \u0000\u0001\u0004\u0000\u0001\tzio.Scope\u0001\u0001\u0001\u0004\u0000\u0001\u0014java.io.Serializable\u0001\u0001\u0001\u0000\u0001\u0090\u0002\u0001\u0001\u0004\u0000\u0001\u0090\u0003\u0001\u0001\u0000\u0001\u000fscala.Matchable\u0001\u0001\u0000\u0001\tscala.Any\u0001\u0001\u0000\u0001\u0010java.lang.Object\u0001\u0001
      68: bipush        21
      70: invokevirtual #2983               // Method izumi/reflect/macrortti/LightTypeTag$.parse:(ILjava/lang/String;Ljava/lang/String;I)Lizumi/reflect/macrortti/LightTypeTag;
      73: invokevirtual #2986               // Method izumi/reflect/Tag$.apply:(Ljava/lang/Class;Lizumi/reflect/macrortti/LightTypeTag;)Lizumi/reflect/Tag;
      76: invokevirtual #3004               // Method zio/ZEnvironment.union:(Lzio/ZEnvironment;Lizumi/reflect/Tag;)Lzio/ZEnvironment;
      79: areturn

  private static final zio.Exit provideLayer$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$1(zio.Exit);
    Code:
       0: aload_0
       1: areturn

  private static final zio.ZIO provideLayer$$anonfun$1$$anonfun$2$$anonfun$1(java.lang.Object, zio.Scope$Closeable, zio.Exit);
    Code:
       0: aload_1
       1: aload_2
       2: invokedynamic #3017,  0           // InvokeDynamic #200:apply:(Lzio/Exit;)Lscala/Function0;
       7: aload_0
       8: invokeinterface #3020,  3         // InterfaceMethod zio/Scope$Closeable.close:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      13: areturn

  private static final scala.Tuple2 provideLayer$$anonfun$1$$anonfun$2(java.lang.Object, zio.Scope$Closeable, zio.ZEnvironment);
    Code:
       0: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: aload_0
       4: aload_1
       5: invokedynamic #3030,  0           // InvokeDynamic #201:apply:(Ljava/lang/Object;Lzio/Scope$Closeable;)Lscala/Function1;
      10: aload_2
      11: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      14: areturn

  private static final zio.ZIO provideLayer$$anonfun$1(scala.Function0, java.lang.Object, zio.Scope$Closeable);
    Code:
       0: aload_0
       1: invokeinterface #1867,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #47                 // class zio/ZLayer
       9: aload_1
      10: invokevirtual #3035               // Method zio/ZLayer.build:(Ljava/lang/Object;)Lzio/ZIO;
      13: aload_2
      14: invokedynamic #3041,  0           // InvokeDynamic #202:apply:(Lzio/Scope$Closeable;)Lscala/Function1;
      19: aload_1
      20: invokeinterface #1407,  3         // InterfaceMethod zio/ZIO.provideSomeEnvironment:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      25: aload_1
      26: aload_2
      27: invokedynamic #3047,  0           // InvokeDynamic #203:apply:(Ljava/lang/Object;Lzio/Scope$Closeable;)Lscala/Function1;
      32: aload_1
      33: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      38: areturn

  private static final zio.ZEnvironment provideLayer$$anonfun$2$$anonfun$1(zio.ZEnvironment);
    Code:
       0: aload_0
       1: areturn

  private final zio.managed.ZManaged provideLayer$$anonfun$2(java.lang.Object, zio.ZEnvironment);
    Code:
       0: aload_0
       1: aload_2
       2: invokedynamic #3055,  0           // InvokeDynamic #204:apply:(Lzio/ZEnvironment;)Lscala/Function0;
       7: aload_1
       8: invokevirtual #3057               // Method provideEnvironment:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      11: areturn

  private static final java.lang.Throwable refineOrDieWith$$anonfun$1$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #2313               // class java/lang/Throwable
      10: areturn

  private static final zio.managed.ZManaged refineOrDieWith$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_2
       5: invokedynamic #3069,  0           // InvokeDynamic #205:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      10: aload_1
      11: invokevirtual #293                // Method zio/managed/ZManaged$.die:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  private static final java.lang.Object refineOrDieWith$$anonfun$1$$anonfun$2$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  private static final zio.managed.ZManaged refineOrDieWith$$anonfun$1$$anonfun$2(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokedynamic #3078,  0           // InvokeDynamic #206:apply:(Ljava/lang/Object;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final zio.managed.ZManaged refineOrDieWith$$anonfun$1(scala.PartialFunction, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #3084,  1         // InterfaceMethod scala/PartialFunction.lift:()Lscala/Function1;
       6: aload_3
       7: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #2462               // class scala/Option
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokedynamic #3090,  0           // InvokeDynamic #207:apply:(Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Function0;
      23: aload_2
      24: invokedynamic #3094,  0           // InvokeDynamic #208:apply:(Ljava/lang/Object;)Lscala/Function1;
      29: invokevirtual #2473               // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      32: checkcast     #2                  // class zio/managed/ZManaged
      35: areturn

  private static final java.lang.Object reject$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  private static final zio.managed.ZManaged reject$$anonfun$1(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokedynamic #3102,  0           // InvokeDynamic #209:apply:(Ljava/lang/Object;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final java.lang.Object rejectManaged$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  private static final zio.managed.ZManaged rejectManaged$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokedynamic #3111,  0           // InvokeDynamic #210:apply:(Ljava/lang/Object;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final zio.managed.ZManaged rejectManaged$$anonfun$1$$anonfun$1(java.lang.Object, zio.managed.ZManaged);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #3119,  0           // InvokeDynamic #211:apply:(Ljava/lang/Object;)Lscala/Function1;
       7: aload_0
       8: invokevirtual #688                // Method flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      11: areturn

  private static final zio.managed.ZManaged rejectManaged$$anonfun$1$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  private static final zio.managed.ZManaged rejectManaged$$anonfun$1(scala.PartialFunction, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #3126,  0           // InvokeDynamic #212:apply:(Ljava/lang/Object;)Lscala/Function1;
       7: invokeinterface #894,  2          // InterfaceMethod scala/PartialFunction.andThen:(Lscala/Function1;)Lscala/PartialFunction;
      12: aload_2
      13: invokedynamic #3130,  0           // InvokeDynamic #213:apply:()Lscala/Function1;
      18: invokeinterface #1960,  3         // InterfaceMethod scala/PartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      23: checkcast     #2                  // class zio/managed/ZManaged
      26: areturn

  private final zio.ZIO release$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3133               // Method useNow:(Ljava/lang/Object;)Lzio/ZIO;
       5: areturn

  private static final java.lang.Object reserve$$anonfun$1$$anonfun$1(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  private static final zio.ZIO reserve$$anonfun$1$$anonfun$2(java.lang.Object, zio.managed.ZManaged$ReleaseMap, zio.Exit);
    Code:
       0: aload_1
       1: aload_2
       2: getstatic     #2164               // Field zio/ExecutionStrategy$Sequential$.MODULE$:Lzio/ExecutionStrategy$Sequential$;
       5: aload_0
       6: invokevirtual #2168               // Method zio/managed/ZManaged$ReleaseMap.releaseAll:(Lzio/Exit;Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/ZIO;
       9: areturn

  private final zio.managed.Reservation reserve$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: getstatic     #3145               // Field zio/managed/Reservation$.MODULE$:Lzio/managed/Reservation$;
       3: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       6: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       9: aload_2
      10: aload_0
      11: invokevirtual #950                // Method zio:()Lzio/ZIO;
      14: aload_1
      15: invokeinterface #2226,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      20: invokedynamic #3149,  0           // InvokeDynamic #214:apply:()Lscala/Function1;
      25: aload_1
      26: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      31: aload_1
      32: aload_2
      33: invokedynamic #3153,  0           // InvokeDynamic #215:apply:(Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      38: invokevirtual #3156               // Method zio/managed/Reservation$.apply:(Lzio/ZIO;Lscala/Function1;)Lzio/managed/Reservation;
      41: areturn

  private static final zio.managed.ZManaged exit$$anonfun$1(zio.Cause);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: getstatic     #2839               // Field zio/Exit$.MODULE$:Lzio/Exit$;
       6: aload_0
       7: invokevirtual #3159               // Method zio/Exit$.failCause:(Lzio/Cause;)Lzio/Exit;
      10: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final zio.managed.ZManaged exit$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: getstatic     #2839               // Field zio/Exit$.MODULE$:Lzio/Exit$;
       6: aload_0
       7: invokevirtual #3162               // Method zio/Exit$.succeed:(Ljava/lang/Object;)Lzio/Exit;
      10: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private final zio.managed.ZManaged sandboxWith$$anonfun$1(scala.Function1, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokevirtual #762                // Method sandbox:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #2                  // class zio/managed/ZManaged
      14: areturn

  private static final zio.ZIO scoped$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap, zio.Exit);
    Code:
       0: aload_1
       1: aload_2
       2: getstatic     #2164               // Field zio/ExecutionStrategy$Sequential$.MODULE$:Lzio/ExecutionStrategy$Sequential$;
       5: aload_0
       6: invokevirtual #2168               // Method zio/managed/ZManaged$ReleaseMap.releaseAll:(Lzio/Exit;Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/ZIO;
       9: areturn

  private static final scala.Tuple2 scoped$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1(scala.Tuple2);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: ifnull        26
       6: aload_2
       7: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      10: astore_3
      11: aload_2
      12: astore        4
      14: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      17: aload         4
      19: aload_3
      20: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      23: goto          35
      26: new           #2092               // class scala/MatchError
      29: dup
      30: aload_2
      31: invokespecial #2095               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      34: athrow
      35: astore_1
      36: aload_1
      37: invokevirtual #1884               // Method scala/Tuple2._1:()Ljava/lang/Object;
      40: checkcast     #1874               // class scala/Tuple2
      43: astore        5
      45: aload_1
      46: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      49: astore        6
      51: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      54: aload_0
      55: aload         5
      57: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      60: areturn

  private static final java.lang.Object scoped$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2(scala.Tuple2);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: ifnull        35
       6: aload_1
       7: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      10: checkcast     #1874               // class scala/Tuple2
      13: astore_2
      14: aload_1
      15: invokevirtual #1884               // Method scala/Tuple2._1:()Ljava/lang/Object;
      18: checkcast     #1874               // class scala/Tuple2
      21: astore_3
      22: aload_2
      23: ifnull        35
      26: aload_2
      27: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      30: astore        4
      32: aload         4
      34: areturn
      35: new           #2092               // class scala/MatchError
      38: dup
      39: aload_1
      40: invokespecial #2095               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      43: athrow

  private final zio.ZIO scoped$$anonfun$1$$anonfun$1$$anonfun$2(java.lang.Object, zio.managed.ZManaged$ReleaseMap, scala.runtime.BoxedUnit);
    Code:
       0: getstatic     #2264               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       3: astore        4
       5: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       8: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
      11: aload_2
      12: aload_0
      13: invokevirtual #950                // Method zio:()Lzio/ZIO;
      16: aload_1
      17: invokeinterface #2226,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      22: invokedynamic #3180,  0           // InvokeDynamic #216:apply:()Lscala/Function1;
      27: aload_1
      28: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      33: invokedynamic #3184,  0           // InvokeDynamic #217:apply:()Lscala/Function1;
      38: aload_1
      39: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      44: areturn

  private final zio.ZIO scoped$$anonfun$1$$anonfun$1(java.lang.Object, zio.Scope, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: aload_2
       1: aload_1
       2: aload_3
       3: invokedynamic #3192,  0           // InvokeDynamic #218:apply:(Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
       8: aload_1
       9: invokeinterface #3195,  3         // InterfaceMethod zio/Scope.addFinalizerExit:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: aload_0
      15: aload_1
      16: aload_3
      17: invokedynamic #3201,  0           // InvokeDynamic #219:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      22: aload_1
      23: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      28: areturn

  private final zio.ZIO scoped$$anonfun$1(java.lang.Object, zio.Scope);
    Code:
       0: getstatic     #1454               // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       3: aload_1
       4: invokevirtual #1455               // Method zio/managed/ZManaged$ReleaseMap$.make:(Ljava/lang/Object;)Lzio/ZIO;
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokedynamic #3209,  0           // InvokeDynamic #220:apply:(Lzio/managed/ZManaged;Ljava/lang/Object;Lzio/Scope;)Lscala/Function1;
      15: aload_1
      16: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      21: areturn

  private static final scala.Some some$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #1935               // Field scala/Some$.MODULE$:Lscala/Some$;
       3: aload_0
       4: invokevirtual #1937               // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
       7: areturn

  private static final zio.managed.ZManaged some$$anonfun$1(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokedynamic #3216,  0           // InvokeDynamic #221:apply:(Ljava/lang/Object;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final scala.Option some$$anonfun$2$$anonfun$1$$anonfun$1();
    Code:
       0: getstatic     #3223               // Field scala/Option$.MODULE$:Lscala/Option$;
       3: invokevirtual #3226               // Method scala/Option$.empty:()Lscala/Option;
       6: areturn

  private static final zio.managed.ZManaged some$$anonfun$2$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokedynamic #3233,  0           // InvokeDynamic #222:apply:()Lscala/Function0;
       8: aload_0
       9: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  private static final zio.managed.ZManaged some$$anonfun$2$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  private static final zio.managed.ZManaged some$$anonfun$2(zio.IsSubtypeOfOutput, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #2460               // Method zio/IsSubtypeOfOutput.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #2462               // class scala/Option
       8: aload_1
       9: invokedynamic #3240,  0           // InvokeDynamic #223:apply:(Ljava/lang/Object;)Lscala/Function0;
      14: invokedynamic #3244,  0           // InvokeDynamic #224:apply:()Lscala/Function1;
      19: invokevirtual #2473               // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      22: checkcast     #2                  // class zio/managed/ZManaged
      25: areturn

  private static final java.lang.Object someOrElse$$anonfun$1(scala.Function0, zio.IsSubtypeOfOutput, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #2460               // Method zio/IsSubtypeOfOutput.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #2462               // class scala/Option
       8: aload_0
       9: invokevirtual #3250               // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  private static final zio.managed.ZManaged someOrElseManaged$$anonfun$1(scala.Function0, zio.IsSubtypeOfOutput, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #2460               // Method zio/IsSubtypeOfOutput.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #2462               // class scala/Option
       8: astore_3
       9: aload_3
      10: instanceof    #3255               // class scala/Some
      13: ifeq          34
      16: aload_3
      17: checkcast     #3255               // class scala/Some
      20: invokevirtual #3257               // Method scala/Some.value:()Ljava/lang/Object;
      23: astore        4
      25: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
      28: aload         4
      30: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      33: areturn
      34: getstatic     #2447               // Field scala/None$.MODULE$:Lscala/None$;
      37: aload_3
      38: invokevirtual #3260               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      41: ifeq          54
      44: aload_0
      45: invokeinterface #1867,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      50: checkcast     #2                  // class zio/managed/ZManaged
      53: areturn
      54: new           #2092               // class scala/MatchError
      57: dup
      58: aload_3
      59: invokespecial #2095               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      62: athrow

  private static final zio.managed.ZManaged someOrFail$$anonfun$1(scala.Function0, zio.IsSubtypeOfOutput, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_3
       2: invokevirtual #2460               // Method zio/IsSubtypeOfOutput.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #2462               // class scala/Option
       8: astore        4
      10: aload         4
      12: instanceof    #3255               // class scala/Some
      15: ifeq          37
      18: aload         4
      20: checkcast     #3255               // class scala/Some
      23: invokevirtual #3257               // Method scala/Some.value:()Ljava/lang/Object;
      26: astore        5
      28: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
      31: aload         5
      33: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      36: areturn
      37: getstatic     #2447               // Field scala/None$.MODULE$:Lscala/None$;
      40: aload         4
      42: invokevirtual #3260               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      45: ifeq          57
      48: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
      51: aload_0
      52: aload_2
      53: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      56: areturn
      57: new           #2092               // class scala/MatchError
      60: dup
      61: aload         4
      63: invokespecial #2095               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      66: athrow

  private static final java.lang.Object someOrFailException$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  private static final zio.managed.ZManaged someOrFailException$$anonfun$1(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokedynamic #3271,  0           // InvokeDynamic #225:apply:(Ljava/lang/Object;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final java.lang.Object someOrFailException$$anonfun$2$$anonfun$1(scala.$less$colon$less);
    Code:
       0: aload_0
       1: new           #3276               // class java/util/NoSuchElementException
       4: dup
       5: ldc_w         #3278               // String None.get
       8: invokespecial #3281               // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
      11: invokevirtual #3284               // Method scala/$less$colon$less.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  private static final zio.managed.ZManaged someOrFailException$$anonfun$2(zio.IsSubtypeOfOutput, scala.$less$colon$less, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #2460               // Method zio/IsSubtypeOfOutput.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #2462               // class scala/Option
       8: astore        4
      10: aload         4
      12: instanceof    #3255               // class scala/Some
      15: ifeq          37
      18: aload         4
      20: checkcast     #3255               // class scala/Some
      23: invokevirtual #3257               // Method scala/Some.value:()Ljava/lang/Object;
      26: astore        5
      28: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
      31: aload         5
      33: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      36: areturn
      37: getstatic     #2447               // Field scala/None$.MODULE$:Lscala/None$;
      40: aload         4
      42: invokevirtual #3260               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      45: ifeq          62
      48: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
      51: aload_1
      52: invokedynamic #3294,  0           // InvokeDynamic #226:apply:(Lscala/$less$colon$less;)Lscala/Function0;
      57: aload_2
      58: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      61: areturn
      62: new           #2092               // class scala/MatchError
      65: dup
      66: aload         4
      68: invokespecial #2095               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      71: athrow

  private static final java.lang.Object tap$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  private static final zio.managed.ZManaged tap$$anonfun$1(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #2                  // class zio/managed/ZManaged
      10: aload_2
      11: invokedynamic #3302,  0           // InvokeDynamic #227:apply:(Ljava/lang/Object;)Lscala/Function0;
      16: aload_1
      17: invokevirtual #1692               // Method as:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      20: areturn

  private static final java.lang.Object tapBoth$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  private static final zio.managed.ZManaged tapBoth$$anonfun$1$$anonfun$1(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokedynamic #3311,  0           // InvokeDynamic #228:apply:(Ljava/lang/Object;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final zio.managed.ZManaged tapBoth$$anonfun$1(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #2                  // class zio/managed/ZManaged
      10: aload_1
      11: aload_2
      12: invokedynamic #3319,  0           // InvokeDynamic #229:apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Function0;
      17: aload_1
      18: invokevirtual #1240               // Method $times$greater:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      21: areturn

  private static final java.lang.Object tapBoth$$anonfun$2$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  private static final zio.managed.ZManaged tapBoth$$anonfun$2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #2                  // class zio/managed/ZManaged
      10: aload_2
      11: invokedynamic #3327,  0           // InvokeDynamic #230:apply:(Ljava/lang/Object;)Lscala/Function0;
      16: aload_1
      17: invokevirtual #1692               // Method as:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      20: areturn

  private static final zio.Cause tapDefect$$anonfun$1$$anonfun$1$$anonfun$1(zio.Cause);
    Code:
       0: aload_0
       1: areturn

  private static final zio.managed.ZManaged tapDefect$$anonfun$1$$anonfun$1(java.lang.Object, zio.Cause);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokedynamic #3336,  0           // InvokeDynamic #231:apply:(Lzio/Cause;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #329                // Method zio/managed/ZManaged$.failCause:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final zio.managed.ZManaged tapDefect$$anonfun$1(scala.Function1, java.lang.Object, zio.Cause);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #3341               // Method zio/Cause.stripFailures:()Lzio/Cause;
       5: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #2                  // class zio/managed/ZManaged
      13: aload_1
      14: aload_2
      15: invokedynamic #3345,  0           // InvokeDynamic #232:apply:(Ljava/lang/Object;Lzio/Cause;)Lscala/Function0;
      20: aload_1
      21: invokevirtual #1240               // Method $times$greater:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      24: areturn

  private static final zio.managed.ZManaged tapError$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: areturn

  private static final zio.Cause tapErrorCause$$anonfun$1$$anonfun$1$$anonfun$1(zio.Cause);
    Code:
       0: aload_0
       1: areturn

  private static final zio.managed.ZManaged tapErrorCause$$anonfun$1$$anonfun$1(java.lang.Object, zio.Cause);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokedynamic #3354,  0           // InvokeDynamic #233:apply:(Lzio/Cause;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #329                // Method zio/managed/ZManaged$.failCause:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final zio.managed.ZManaged tapErrorCause$$anonfun$1(scala.Function1, java.lang.Object, zio.Cause);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #2                  // class zio/managed/ZManaged
      10: aload_1
      11: aload_2
      12: invokedynamic #3360,  0           // InvokeDynamic #234:apply:(Ljava/lang/Object;Lzio/Cause;)Lscala/Function0;
      17: aload_1
      18: invokevirtual #1240               // Method $times$greater:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      21: areturn

  private static final java.lang.Object tapZIO$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  private static final zio.ZIO tapZIO$$anonfun$1(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #36                 // class zio/ZIO
      10: aload_2
      11: invokedynamic #3368,  0           // InvokeDynamic #235:apply:(Ljava/lang/Object;)Lscala/Function0;
      16: aload_1
      17: invokeinterface #3370,  3         // InterfaceMethod zio/ZIO.as:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      22: areturn

  private static final scala.Tuple2 timed$$anonfun$1(scala.Tuple2);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: ifnull        59
       6: aload_1
       7: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      10: checkcast     #1874               // class scala/Tuple2
      13: astore_2
      14: aload_1
      15: invokevirtual #1884               // Method scala/Tuple2._1:()Ljava/lang/Object;
      18: checkcast     #3372               // class java/time/Duration
      21: astore_3
      22: aload_2
      23: ifnull        59
      26: aload_2
      27: invokevirtual #1884               // Method scala/Tuple2._1:()Ljava/lang/Object;
      30: checkcast     #1016               // class scala/Function1
      33: astore        4
      35: aload_2
      36: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      39: astore        5
      41: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      44: aload         4
      46: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      49: aload_3
      50: aload         5
      52: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      55: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      58: areturn
      59: new           #2092               // class scala/MatchError
      62: dup
      63: aload_1
      64: invokespecial #2095               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      67: athrow

  private static final zio.ZIO timeout$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap, zio.Exit);
    Code:
       0: aload_1
       1: aload_2
       2: getstatic     #2164               // Field zio/ExecutionStrategy$Sequential$.MODULE$:Lzio/ExecutionStrategy$Sequential$;
       5: aload_0
       6: invokevirtual #2168               // Method zio/managed/ZManaged$ReleaseMap.releaseAll:(Lzio/Exit;Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/ZIO;
       9: areturn

  private static final scala.None$ timeout$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$1$$anonfun$1();
    Code:
       0: getstatic     #2447               // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  private static final zio.ZIO timeout$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: aload_1
       5: invokevirtual #3385               // Method zio/ZIO$.sleep:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
       8: invokedynamic #3389,  0           // InvokeDynamic #236:apply:()Lscala/Function0;
      13: aload_1
      14: invokeinterface #3370,  3         // InterfaceMethod zio/ZIO.as:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      19: areturn

  private static final scala.util.Right timeout$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$1(scala.Tuple2);
    Code:
       0: getstatic     #2000               // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #2013               // Method scala/package$.Right:()Lscala/util/Right$;
       6: aload_0
       7: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      10: invokevirtual #2018               // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
      13: areturn

  private static final zio.ZIO timeout$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$2$$anonfun$1(java.lang.Object, zio.Exit);
    Code:
       0: aload_1
       1: invokedynamic #3400,  0           // InvokeDynamic #237:apply:()Lscala/Function1;
       6: aload_0
       7: invokeinterface #3401,  3         // InterfaceMethod zio/Exit.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      12: areturn

  private static final zio.ZIO timeout$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$2(java.lang.Object, zio.Exit, zio.Fiber);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #3407               // Method zio/Fiber.interrupt:(Ljava/lang/Object;)Lzio/ZIO;
       5: aload_0
       6: aload_1
       7: invokedynamic #3413,  0           // InvokeDynamic #238:apply:(Ljava/lang/Object;Lzio/Exit;)Lscala/Function0;
      12: aload_0
      13: invokeinterface #1122,  3         // InterfaceMethod zio/ZIO.$times$greater:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      18: areturn

  private static final scala.util.Left timeout$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$3$$anonfun$1(zio.Fiber, zio.Unsafe);
    Code:
       0: getstatic     #2000               // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #2004               // Method scala/package$.Left:()Lscala/util/Left$;
       6: aload_0
       7: invokevirtual #2009               // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
      10: areturn

  private static final zio.ZIO timeout$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$3(java.lang.Object, zio.Exit, zio.Fiber);
    Code:
       0: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_2
       4: invokedynamic #3430,  0           // InvokeDynamic #239:apply:(Lzio/Fiber;)Lscala/Function1;
       9: aload_0
      10: invokevirtual #2885               // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      13: areturn

  private final zio.ZIO timeout$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1(scala.Function0, java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       6: aload_3
       7: aload_0
       8: invokevirtual #950                // Method zio:()Lzio/ZIO;
      11: aload_2
      12: invokeinterface #2226,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      17: aload_1
      18: aload_2
      19: invokedynamic #3439,  0           // InvokeDynamic #240:apply:(Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
      24: aload_2
      25: invokedynamic #3445,  0           // InvokeDynamic #241:apply:(Ljava/lang/Object;)Lscala/Function2;
      30: aload_2
      31: invokedynamic #3449,  0           // InvokeDynamic #242:apply:(Ljava/lang/Object;)Lscala/Function2;
      36: aload_2
      37: invokeinterface #3453,  5         // InterfaceMethod zio/ZIO.raceWith:(Lscala/Function0;Lscala/Function2;Lscala/Function2;Ljava/lang/Object;)Lzio/ZIO;
      42: areturn

  private static final scala.Some timeout$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2$$anonfun$1(java.lang.Object, zio.Unsafe);
    Code:
       0: getstatic     #1935               // Field scala/Some$.MODULE$:Lscala/Some$;
       3: aload_0
       4: invokevirtual #1937               // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
       7: areturn

  private static final zio.ZIO timeout$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2$$anonfun$2$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap, zio.FiberId$Runtime);
    Code:
       0: aload_1
       1: getstatic     #2839               // Field zio/Exit$.MODULE$:Lzio/Exit$;
       4: aload_2
       5: invokevirtual #3465               // Method zio/Exit$.interrupt:(Lzio/FiberId;)Lzio/Exit;
       8: getstatic     #2164               // Field zio/ExecutionStrategy$Sequential$.MODULE$:Lzio/ExecutionStrategy$Sequential$;
      11: aload_0
      12: invokevirtual #2168               // Method zio/managed/ZManaged$ReleaseMap.releaseAll:(Lzio/Exit;Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/ZIO;
      15: areturn

  private static final zio.ZIO timeout$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2$$anonfun$2(java.lang.Object, zio.managed.ZManaged$ReleaseMap, zio.Fiber, zio.FiberId$Runtime);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #3407               // Method zio/Fiber.interrupt:(Ljava/lang/Object;)Lzio/ZIO;
       5: aload_0
       6: aload_1
       7: aload_3
       8: invokedynamic #3478,  0           // InvokeDynamic #243:apply:(Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;Lzio/FiberId$Runtime;)Lscala/Function0;
      13: aload_0
      14: invokeinterface #3480,  3         // InterfaceMethod zio/ZIO.ensuring:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      19: aload_0
      20: invokeinterface #2156,  2         // InterfaceMethod zio/ZIO.forkDaemon:(Ljava/lang/Object;)Lzio/ZIO;
      25: areturn

  private static final scala.None$ timeout$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2$$anonfun$3();
    Code:
       0: getstatic     #2447               // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  private static final scala.Tuple2 timeout$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2$$anonfun$4(scala.Function1, scala.Option);
    Code:
       0: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       8: areturn

  private static final zio.ZIO timeout$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2(java.lang.Object, zio.managed.ZManaged$ReleaseMap, scala.Function1, scala.util.Either);
    Code:
       0: aload_3
       1: astore        4
       3: aload         4
       5: instanceof    #3493               // class scala/util/Right
       8: ifeq          38
      11: aload         4
      13: checkcast     #3493               // class scala/util/Right
      16: invokevirtual #3494               // Method scala/util/Right.value:()Ljava/lang/Object;
      19: astore        5
      21: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
      24: aload         5
      26: invokedynamic #3500,  0           // InvokeDynamic #244:apply:(Ljava/lang/Object;)Lscala/Function1;
      31: aload_0
      32: invokevirtual #2885               // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      35: goto          105
      38: aload         4
      40: instanceof    #3502               // class scala/util/Left
      43: ifeq          95
      46: aload         4
      48: checkcast     #3502               // class scala/util/Left
      51: invokevirtual #3503               // Method scala/util/Left.value:()Ljava/lang/Object;
      54: checkcast     #22                 // class zio/Fiber
      57: astore        6
      59: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
      62: aload_0
      63: invokevirtual #3505               // Method zio/ZIO$.fiberId:(Ljava/lang/Object;)Lzio/ZIO;
      66: aload_0
      67: aload_1
      68: aload         6
      70: invokedynamic #3513,  0           // InvokeDynamic #245:apply:(Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;Lzio/Fiber;)Lscala/Function1;
      75: aload_0
      76: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      81: invokedynamic #3517,  0           // InvokeDynamic #246:apply:()Lscala/Function0;
      86: aload_0
      87: invokeinterface #3370,  3         // InterfaceMethod zio/ZIO.as:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      92: goto          105
      95: new           #2092               // class scala/MatchError
      98: dup
      99: aload         4
     101: invokespecial #2095               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     104: athrow
     105: aload_2
     106: invokedynamic #3523,  0           // InvokeDynamic #247:apply:(Lscala/Function1;)Lscala/Function1;
     111: aload_0
     112: invokeinterface #1158,  3         // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
     117: areturn

  private final zio.ZIO timeout$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2(scala.Function0, java.lang.Object, zio.ZIO$InterruptibilityRestorer, zio.managed.ZManaged$ReleaseMap, scala.Function1);
    Code:
       0: aload_3
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload         4
       6: invokedynamic #3537,  0           // InvokeDynamic #248:apply:(Lzio/managed/ZManaged;Lscala/Function0;Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function0;
      11: aload_2
      12: invokeinterface #2222,  3         // InterfaceMethod zio/ZIO$InterruptibilityRestorer.apply:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      17: aload_2
      18: aload         4
      20: aload         5
      22: invokedynamic #3545,  0           // InvokeDynamic #249:apply:(Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;Lscala/Function1;)Lscala/Function1;
      27: aload_2
      28: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      33: areturn

  private final zio.ZIO timeout$$anonfun$1$$anonfun$1$$anonfun$1(scala.Function0, java.lang.Object, zio.ZIO$InterruptibilityRestorer, zio.managed.ZManaged$ReleaseMap, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: aload         4
       2: aload_2
       3: aload         5
       5: invokedynamic #3555,  0           // InvokeDynamic #250:apply:(Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      10: aload_2
      11: invokevirtual #2202               // Method zio/managed/ZManaged$ReleaseMap.add:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: aload_0
      15: aload_1
      16: aload_2
      17: aload_3
      18: aload         5
      20: invokedynamic #3561,  0           // InvokeDynamic #251:apply:(Lzio/managed/ZManaged;Lscala/Function0;Ljava/lang/Object;Lzio/ZIO$InterruptibilityRestorer;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      25: aload_2
      26: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      31: areturn

  private final zio.ZIO timeout$$anonfun$1$$anonfun$1(scala.Function0, java.lang.Object, zio.ZIO$InterruptibilityRestorer, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: getstatic     #1454               // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       3: aload_2
       4: invokevirtual #1455               // Method zio/managed/ZManaged$ReleaseMap$.make:(Ljava/lang/Object;)Lzio/ZIO;
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: aload         4
      13: invokedynamic #3570,  0           // InvokeDynamic #252:apply:(Lzio/managed/ZManaged;Lscala/Function0;Ljava/lang/Object;Lzio/ZIO$InterruptibilityRestorer;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      18: aload_2
      19: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      24: areturn

  private final zio.ZIO timeout$$anonfun$1(scala.Function0, java.lang.Object, zio.ZIO$InterruptibilityRestorer);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       6: aload_2
       7: invokeinterface #1102,  2         // InterfaceMethod zio/FiberRef.get:(Ljava/lang/Object;)Lzio/ZIO;
      12: aload_0
      13: aload_1
      14: aload_2
      15: aload_3
      16: invokedynamic #3578,  0           // InvokeDynamic #253:apply:(Lzio/managed/ZManaged;Lscala/Function0;Ljava/lang/Object;Lzio/ZIO$InterruptibilityRestorer;)Lscala/Function1;
      21: aload_2
      22: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      27: areturn

  private final zio.ZIO toLayer$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3581               // Method scoped:(Ljava/lang/Object;)Lzio/ZIO;
       5: areturn

  private final zio.ZIO toLayerEnvironment$$anonfun$1(scala.$less$colon$less, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #676                // Method map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: aload_2
       7: invokevirtual #3581               // Method scoped:(Ljava/lang/Object;)Lzio/ZIO;
      10: areturn

  private static final void unit$$anonfun$1();
    Code:
       0: return

  private static java.lang.Object unit$$anonfun$adapted$1();
    Code:
       0: invokestatic  #3586               // Method unit$$anonfun$1:()V
       3: getstatic     #2264               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       6: areturn

  private final zio.managed.ZManaged unless$$anonfun$1();
    Code:
       0: aload_0
       1: areturn

  private final zio.managed.ZManaged unlessManaged$$anonfun$1();
    Code:
       0: aload_0
       1: areturn

  private final zio.managed.ZManaged unsandbox$$anonfun$1(zio.IsSubtypeOfError, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #782                // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
       5: getstatic     #787                // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
       8: invokevirtual #791                // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      11: invokevirtual #795                // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      14: aload_2
      15: invokevirtual #829                // Method mapError:(Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      18: areturn

  private static final zio.managed.ZManaged unsome$$anonfun$1$$anonfun$1();
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: getstatic     #3223               // Field scala/Option$.MODULE$:Lscala/Option$;
       6: invokevirtual #3226               // Method scala/Option$.empty:()Lscala/Option;
       9: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  private static final java.lang.Object unsome$$anonfun$1$$anonfun$2$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  private static final zio.managed.ZManaged unsome$$anonfun$1$$anonfun$2(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokedynamic #3598,  0           // InvokeDynamic #254:apply:(Ljava/lang/Object;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #325                // Method zio/managed/ZManaged$.fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final zio.managed.ZManaged unsome$$anonfun$1(zio.IsSubtypeOfError, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #2311               // Method zio/IsSubtypeOfError.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #2462               // class scala/Option
       8: invokedynamic #3604,  0           // InvokeDynamic #255:apply:()Lscala/Function0;
      13: aload_1
      14: invokedynamic #3608,  0           // InvokeDynamic #256:apply:(Ljava/lang/Object;)Lscala/Function1;
      19: invokevirtual #2473               // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      22: checkcast     #2                  // class zio/managed/ZManaged
      25: areturn

  private static final zio.managed.ZManaged unsome$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: getstatic     #1935               // Field scala/Some$.MODULE$:Lscala/Some$;
       6: aload_0
       7: invokevirtual #1937               // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
      10: invokevirtual #552                // Method zio/managed/ZManaged$.succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private static final zio.ZIO use$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       6: aload_0
       7: invokeinterface #1102,  2         // InterfaceMethod zio/FiberRef.get:(Ljava/lang/Object;)Lzio/ZIO;
      12: areturn

  private static final zio.ZIO use$$anonfun$1$$anonfun$2(java.lang.Object, zio.managed.ZManaged$ReleaseMap, zio.Exit);
    Code:
       0: aload_1
       1: aload_2
       2: getstatic     #2164               // Field zio/ExecutionStrategy$Sequential$.MODULE$:Lzio/ExecutionStrategy$Sequential$;
       5: aload_0
       6: invokevirtual #2168               // Method zio/managed/ZManaged$ReleaseMap.releaseAll:(Lzio/Exit;Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/ZIO;
       9: areturn

  private static final zio.ZIO use$$anonfun$1$$anonfun$3$$anonfun$1(scala.Function1, scala.Tuple2);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        22
       6: aload_2
       7: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      10: astore_3
      11: aload_0
      12: aload_3
      13: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #36                 // class zio/ZIO
      21: areturn
      22: new           #2092               // class scala/MatchError
      25: dup
      26: aload_2
      27: invokespecial #2095               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      30: athrow

  private final zio.ZIO use$$anonfun$1$$anonfun$3(scala.Function1, java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: aload_0
       1: invokevirtual #950                // Method zio:()Lzio/ZIO;
       4: aload_1
       5: invokedynamic #3622,  0           // InvokeDynamic #257:apply:(Lscala/Function1;)Lscala/Function1;
      10: aload_2
      11: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      16: areturn

  private final zio.ZIO use$$anonfun$1(scala.Function1, java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       6: aload_3
       7: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
      10: aload_2
      11: invokedynamic #3628,  0           // InvokeDynamic #258:apply:(Ljava/lang/Object;)Lscala/Function0;
      16: invokevirtual #3630               // Method zio/ZIO$.acquireReleaseExitWith:(Lscala/Function0;)Lscala/Function0;
      19: astore        4
      21: getstatic     #3633               // Field zio/ZIO$AcquireExit$.MODULE$:Lzio/ZIO$AcquireExit$;
      24: aload         4
      26: aload_2
      27: invokedynamic #3639,  0           // InvokeDynamic #259:apply:(Ljava/lang/Object;)Lscala/Function2;
      32: invokevirtual #3642               // Method zio/ZIO$AcquireExit$.apply$extension:(Lscala/Function0;Lscala/Function2;)Lzio/ZIO$ReleaseExit;
      35: aload_0
      36: aload_1
      37: aload_2
      38: invokedynamic #3646,  0           // InvokeDynamic #260:apply:(Lzio/managed/ZManaged;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      43: aload_2
      44: invokevirtual #3648               // Method zio/ZIO$ReleaseExit.apply:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      47: aload_2
      48: invokeinterface #2226,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      53: areturn

  private static final zio.ZIO useDiscard$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #1867,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #36                 // class zio/ZIO
       9: areturn

  private static final zio.ZIO useForever$$anonfun$1(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokevirtual #3654               // Method zio/ZIO$.never:(Ljava/lang/Object;)Lzio/ZIO;
       7: areturn

  private static final zio.ZIO useNow$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #1069               // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokevirtual #3656               // Method zio/ZIO$.succeedNow:(Ljava/lang/Object;)Lzio/ZIO;
       7: areturn

  private final zio.managed.ZManaged when$$anonfun$1();
    Code:
       0: aload_0
       1: areturn

  private final zio.managed.ZManaged whenManaged$$anonfun$1();
    Code:
       0: aload_0
       1: areturn

  private static final zio.Exit withEarlyRelease$$anonfun$1$$anonfun$1(zio.FiberId);
    Code:
       0: getstatic     #2839               // Field zio/Exit$.MODULE$:Lzio/Exit$;
       3: aload_0
       4: invokevirtual #3465               // Method zio/Exit$.interrupt:(Lzio/FiberId;)Lzio/Exit;
       7: areturn

  private final zio.managed.ZManaged withEarlyRelease$$anonfun$1(java.lang.Object, zio.FiberId);
    Code:
       0: aload_0
       1: aload_2
       2: invokedynamic #3666,  0           // InvokeDynamic #261:apply:(Lzio/FiberId;)Lscala/Function0;
       7: aload_1
       8: invokevirtual #3668               // Method withEarlyReleaseExit:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      11: areturn

  private static final scala.Tuple2 withEarlyReleaseExit$$anonfun$1(scala.Function0, java.lang.Object, scala.Tuple2);
    Code:
       0: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: aload_2
       4: invokevirtual #1884               // Method scala/Tuple2._1:()Ljava/lang/Object;
       7: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      10: aload_2
      11: invokevirtual #1884               // Method scala/Tuple2._1:()Ljava/lang/Object;
      14: checkcast     #1016               // class scala/Function1
      17: aload_0
      18: invokeinterface #1867,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      23: invokeinterface #1018,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #36                 // class zio/ZIO
      31: aload_1
      32: invokeinterface #3673,  2         // InterfaceMethod zio/ZIO.uninterruptible:(Ljava/lang/Object;)Lzio/ZIO;
      37: aload_2
      38: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      41: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      44: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      47: areturn

  private final zio.managed.ZManaged withParallelism$$anonfun$1();
    Code:
       0: aload_0
       1: areturn

  private final zio.managed.ZManaged withParallelismUnbounded$$anonfun$1();
    Code:
       0: aload_0
       1: areturn

  private static final java.lang.Object zipWith$$anonfun$1$$anonfun$1(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #3681,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  private static final zio.managed.ZManaged zipWith$$anonfun$1(scala.Function0, scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #1867,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2                  // class zio/managed/ZManaged
       9: aload_1
      10: aload_3
      11: invokedynamic #3690,  0           // InvokeDynamic #262:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      16: aload_2
      17: invokevirtual #676                // Method map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      20: areturn

  private static final zio.ZIO zipWithPar$$anonfun$1$$anonfun$1(zio.ZIO);
    Code:
       0: aload_0
       1: areturn

  private static final zio.ZIO zipWithPar$$anonfun$1$$anonfun$2$$anonfun$1(scala.Function0, java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       6: aload_2
       7: aload_0
       8: invokeinterface #1867,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      13: checkcast     #2                  // class zio/managed/ZManaged
      16: invokevirtual #950                // Method zio:()Lzio/ZIO;
      19: aload_1
      20: invokeinterface #2226,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      25: areturn

  private static final java.lang.Object zipWithPar$$anonfun$1$$anonfun$2$$anonfun$2(scala.Function2, scala.Tuple2, scala.Tuple2);
    Code:
       0: getstatic     #2081               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: aload_1
       4: aload_2
       5: invokevirtual #2090               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       8: astore_3
       9: aload_3
      10: ifnull        66
      13: aload_3
      14: invokevirtual #1884               // Method scala/Tuple2._1:()Ljava/lang/Object;
      17: checkcast     #1874               // class scala/Tuple2
      20: astore        4
      22: aload_3
      23: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      26: checkcast     #1874               // class scala/Tuple2
      29: astore        5
      31: aload         4
      33: ifnull        66
      36: aload         4
      38: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      41: astore        6
      43: aload         5
      45: ifnull        66
      48: aload         5
      50: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      53: astore        7
      55: aload_0
      56: aload         6
      58: aload         7
      60: invokeinterface #3681,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: areturn
      66: new           #2092               // class scala/MatchError
      69: dup
      70: aload_3
      71: invokespecial #2095               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      74: athrow

  private final zio.ZIO zipWithPar$$anonfun$1$$anonfun$2(scala.Function0, scala.Function2, java.lang.Object, scala.Tuple3);
    Code:
       0: aload         4
       2: astore        5
       4: aload         5
       6: ifnull        84
       9: aload         5
      11: invokevirtual #3711               // Method scala/Tuple3._3:()Ljava/lang/Object;
      14: checkcast     #1874               // class scala/Tuple2
      17: astore        6
      19: aload         5
      21: invokevirtual #3712               // Method scala/Tuple3._2:()Ljava/lang/Object;
      24: checkcast     #103                // class zio/managed/ZManaged$ReleaseMap
      27: astore        7
      29: aload         6
      31: ifnull        84
      34: aload         6
      36: invokevirtual #1877               // Method scala/Tuple2._2:()Ljava/lang/Object;
      39: checkcast     #103                // class zio/managed/ZManaged$ReleaseMap
      42: astore        8
      44: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
      47: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
      50: aload         7
      52: aload_0
      53: invokevirtual #950                // Method zio:()Lzio/ZIO;
      56: aload_3
      57: invokeinterface #2226,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      62: aload_1
      63: aload_3
      64: aload         8
      66: invokedynamic #3718,  0           // InvokeDynamic #263:apply:(Lscala/Function0;Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function0;
      71: aload_2
      72: invokedynamic #3726,  0           // InvokeDynamic #264:apply:(Lscala/Function2;)Lscala/Function2;
      77: aload_3
      78: invokeinterface #3728,  4         // InterfaceMethod zio/ZIO.zipWithPar:(Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/ZIO;
      83: areturn
      84: new           #2092               // class scala/MatchError
      87: dup
      88: aload         5
      90: invokespecial #2095               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      93: athrow

  private final zio.ZIO zipWithPar$$anonfun$1(scala.Function0, scala.Function2, java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: getstatic     #202                // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #289                // Method zio/managed/ZManaged$.currentReleaseMap:()Lzio/FiberRef;
       6: aload         4
       8: getstatic     #1454               // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
      11: getstatic     #2164               // Field zio/ExecutionStrategy$Sequential$.MODULE$:Lzio/ExecutionStrategy$Sequential$;
      14: aload_3
      15: invokevirtual #1854               // Method zio/managed/ZManaged$ReleaseMap$.makeManaged:(Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/managed/ZManaged;
      18: invokevirtual #950                // Method zio:()Lzio/ZIO;
      21: aload_3
      22: invokeinterface #2226,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      27: astore        5
      29: aload         5
      31: aload         5
      33: invokedynamic #3739,  0           // InvokeDynamic #265:apply:(Lzio/ZIO;)Lscala/Function0;
      38: getstatic     #654                // Field zio/Zippable$.MODULE$:Lzio/Zippable$;
      41: invokevirtual #3742               // Method zio/Zippable$.Zippable3:()Lzio/Zippable;
      44: aload_3
      45: invokeinterface #3745,  4         // InterfaceMethod zio/ZIO.zip:(Lscala/Function0;Lzio/Zippable;Ljava/lang/Object;)Lzio/ZIO;
      50: aload_0
      51: aload_1
      52: aload_2
      53: aload_3
      54: invokedynamic #3751,  0           // InvokeDynamic #266:apply:(Lzio/managed/ZManaged;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      59: aload_3
      60: invokeinterface #977,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      65: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #3766,  0           // InvokeDynamic #267:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
       7: aload_0
       8: invokedynamic #3767,  0           // InvokeDynamic #268:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
      13: areturn
    Exception table:
       from    to  target type
           0     7     7   Class java/lang/IllegalArgumentException
}
