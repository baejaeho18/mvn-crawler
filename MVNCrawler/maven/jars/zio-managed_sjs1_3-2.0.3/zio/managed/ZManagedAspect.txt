Compiled from "ZManagedAspect.scala"
public interface zio.managed.ZManagedAspect<LowerR, UpperR, LowerE, UpperE, LowerA, UpperA> {
  public abstract <R extends UpperR, E extends UpperE, A extends UpperA> zio.managed.ZManaged<R, E, A> apply(zio.managed.ZManaged<R, E, A>);

  public static zio.managed.ZManagedAspect $greater$greater$greater$(zio.managed.ZManagedAspect, zio.managed.ZManagedAspect);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // InterfaceMethod $greater$greater$greater:(Lzio/managed/ZManagedAspect;)Lzio/managed/ZManagedAspect;
       5: areturn

  public default <LowerR1, UpperR1 extends UpperR, LowerE1, UpperE1 extends UpperE, LowerA1, UpperA1 extends UpperA> zio.managed.ZManagedAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> $greater$greater$greater(zio.managed.ZManagedAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #25,  2           // InterfaceMethod andThen:(Lzio/managed/ZManagedAspect;)Lzio/managed/ZManagedAspect;
       7: areturn

  public static zio.managed.ZManagedAspect $at$at$(zio.managed.ZManagedAspect, zio.managed.ZManagedAspect);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #30                 // InterfaceMethod $at$at:(Lzio/managed/ZManagedAspect;)Lzio/managed/ZManagedAspect;
       5: areturn

  public default <LowerR1, UpperR1 extends UpperR, LowerE1, UpperE1 extends UpperE, LowerA1, UpperA1 extends UpperA> zio.managed.ZManagedAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> $at$at(zio.managed.ZManagedAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #20,  2           // InterfaceMethod $greater$greater$greater:(Lzio/managed/ZManagedAspect;)Lzio/managed/ZManagedAspect;
       7: areturn

  public static zio.managed.ZManagedAspect andThen$(zio.managed.ZManagedAspect, zio.managed.ZManagedAspect);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // InterfaceMethod andThen:(Lzio/managed/ZManagedAspect;)Lzio/managed/ZManagedAspect;
       5: areturn

  public default <LowerR1, UpperR1 extends UpperR, LowerE1, UpperE1 extends UpperE, LowerA1, UpperA1 extends UpperA> zio.managed.ZManagedAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> andThen(zio.managed.ZManagedAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1>);
    Code:
       0: new           #8                  // class zio/managed/ZManagedAspect$$anon$1
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #35                 // Method zio/managed/ZManagedAspect$$anon$1."<init>":(Lzio/managed/ZManagedAspect;Lzio/managed/ZManagedAspect;)V
       9: areturn
}
