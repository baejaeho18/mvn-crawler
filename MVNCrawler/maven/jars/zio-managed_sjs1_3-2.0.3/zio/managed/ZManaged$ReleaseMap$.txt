Compiled from "ZManaged.scala"
public final class zio.managed.ZManaged$ReleaseMap$ implements java.io.Serializable {
  public static final zio.managed.ZManaged$ReleaseMap$unsafe$ unsafe;

  public static final zio.managed.ZManaged$ReleaseMap$ MODULE$;

  public zio.managed.ZManaged$ReleaseMap$();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method java/lang/Object."<init>":()V
       4: return

  public static {};
    Code:
       0: new           #2                  // class zio/managed/ZManaged$ReleaseMap$
       3: dup
       4: invokespecial #38                 // Method "<init>":()V
       7: putstatic     #40                 // Field MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
      10: return

  private java.lang.Object writeReplace();
    Code:
       0: new           #44                 // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class zio/managed/ZManaged$ReleaseMap$
       6: invokespecial #47                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, zio.managed.ZManaged$ReleaseMap> makeManagedPar(java.lang.Object);
    Code:
       0: getstatic     #56                 // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_1
       4: invokevirtual #59                 // Method zio/managed/ZManaged$.parallelism:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: aload_0
       8: aload_1
       9: invokedynamic #81,  0             // InvokeDynamic #0:apply:(Lzio/managed/ZManaged$ReleaseMap$;Ljava/lang/Object;)Lscala/Function1;
      14: aload_1
      15: invokevirtual #85                 // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      18: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, zio.managed.ZManaged$ReleaseMap> makeManaged(zio.ExecutionStrategy, java.lang.Object);
    Code:
       0: getstatic     #56                 // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: aload_0
       4: aload_2
       5: invokedynamic #101,  0            // InvokeDynamic #1:apply:(Lzio/managed/ZManaged$ReleaseMap$;Ljava/lang/Object;)Lscala/Function0;
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokedynamic #113,  0            // InvokeDynamic #2:apply:(Lzio/managed/ZManaged$ReleaseMap$;Lzio/ExecutionStrategy;Ljava/lang/Object;)Lscala/Function2;
      18: aload_2
      19: invokevirtual #117                // Method zio/managed/ZManaged$.acquireReleaseExitWith:(Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/managed/ZManaged;
      22: areturn

  public zio.ZIO<java.lang.Object, scala.runtime.Nothing$, zio.managed.ZManaged$ReleaseMap> make(java.lang.Object);
    Code:
       0: getstatic     #125                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #134,  0            // InvokeDynamic #3:apply:(Lzio/managed/ZManaged$ReleaseMap$;)Lscala/Function1;
       9: aload_1
      10: invokevirtual #138                // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      13: areturn

  private final zio.managed.ZManaged makeManagedPar$$anonfun$1(java.lang.Object, scala.Option);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: instanceof    #142                // class scala/Some
       6: ifeq          35
       9: aload_3
      10: checkcast     #142                // class scala/Some
      13: invokevirtual #145                // Method scala/Some.value:()Ljava/lang/Object;
      16: invokestatic  #151                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      19: istore        4
      21: aload_0
      22: getstatic     #154                // Field zio/ExecutionStrategy$ParallelN$.MODULE$:Lzio/ExecutionStrategy$ParallelN$;
      25: iload         4
      27: invokevirtual #157                // Method zio/ExecutionStrategy$ParallelN$.apply:(I)Lzio/ExecutionStrategy$ParallelN;
      30: aload_1
      31: invokevirtual #159                // Method makeManaged:(Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/managed/ZManaged;
      34: areturn
      35: getstatic     #164                // Field scala/None$.MODULE$:Lscala/None$;
      38: aload_3
      39: invokevirtual #168                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      42: ifeq          54
      45: aload_0
      46: getstatic     #171                // Field zio/ExecutionStrategy$Parallel$.MODULE$:Lzio/ExecutionStrategy$Parallel$;
      49: aload_1
      50: invokevirtual #159                // Method makeManaged:(Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/managed/ZManaged;
      53: areturn
      54: new           #173                // class scala/MatchError
      57: dup
      58: aload_3
      59: invokespecial #176                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      62: athrow

  private final zio.ZIO makeManaged$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #184                // Method make:(Ljava/lang/Object;)Lzio/ZIO;
       5: areturn

  private final zio.ZIO makeManaged$$anonfun$2(zio.ExecutionStrategy, java.lang.Object, zio.managed.ZManaged$ReleaseMap, zio.Exit);
    Code:
       0: aload_3
       1: aload         4
       3: aload_1
       4: aload_2
       5: invokevirtual #192                // Method zio/managed/ZManaged$ReleaseMap.releaseAll:(Lzio/Exit;Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/ZIO;
       8: areturn

  private final zio.managed.ZManaged$ReleaseMap make$$anonfun$1(zio.Unsafe);
    Code:
       0: getstatic     #197                // Field zio/managed/ZManaged$ReleaseMap$unsafe$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$unsafe$;
       3: getstatic     #202                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       6: invokevirtual #205                // Method zio/Unsafe$.unsafe:()Lzio/Unsafe;
       9: invokevirtual #207                // Method zio/managed/ZManaged$ReleaseMap$unsafe$.make:(Lzio/Unsafe;)Lzio/managed/ZManaged$ReleaseMap;
      12: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #220,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
