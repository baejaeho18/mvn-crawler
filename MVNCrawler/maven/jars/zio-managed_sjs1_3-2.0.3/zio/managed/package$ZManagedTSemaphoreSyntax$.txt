Compiled from "package.scala"
public final class zio.managed.package$ZManagedTSemaphoreSyntax$ implements java.io.Serializable {
  public static final zio.managed.package$ZManagedTSemaphoreSyntax$ MODULE$;

  public zio.managed.package$ZManagedTSemaphoreSyntax$();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object."<init>":()V
       4: return

  public static {};
    Code:
       0: new           #2                  // class zio/managed/package$ZManagedTSemaphoreSyntax$
       3: dup
       4: invokespecial #27                 // Method "<init>":()V
       7: putstatic     #29                 // Field MODULE$:Lzio/managed/package$ZManagedTSemaphoreSyntax$;
      10: return

  private java.lang.Object writeReplace();
    Code:
       0: new           #33                 // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class zio/managed/package$ZManagedTSemaphoreSyntax$
       6: invokespecial #36                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public final int hashCode$extension(zio.stm.TSemaphore);
    Code:
       0: aload_1
       1: invokevirtual #45                 // Method zio/stm/TSemaphore.hashCode:()I
       4: ireturn

  public final boolean equals$extension(zio.stm.TSemaphore, java.lang.Object);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: instanceof    #14                 // class zio/managed/package$ZManagedTSemaphoreSyntax
       6: ifeq          58
       9: aload_3
      10: ifnonnull     17
      13: aconst_null
      14: goto          24
      17: aload_3
      18: checkcast     #14                 // class zio/managed/package$ZManagedTSemaphoreSyntax
      21: invokevirtual #53                 // Method zio/managed/package$ZManagedTSemaphoreSyntax.zio$managed$package$ZManagedTSemaphoreSyntax$$self:()Lzio/stm/TSemaphore;
      24: astore        4
      26: aload_1
      27: aload         4
      29: astore        5
      31: dup
      32: ifnonnull     44
      35: pop
      36: aload         5
      38: ifnull        52
      41: goto          56
      44: aload         5
      46: invokevirtual #57                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      49: ifeq          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ireturn
      58: iconst_0
      59: ireturn

  public final zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> withPermitManaged$extension(zio.stm.TSemaphore, java.lang.Object);
    Code:
       0: getstatic     #67                 // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #71                 // Method zio/managed/ZManaged$.scoped:()Z
       6: istore_3
       7: getstatic     #74                 // Field zio/managed/ZManaged$ScopedPartiallyApplied$.MODULE$:Lzio/managed/ZManaged$ScopedPartiallyApplied$;
      10: iload_3
      11: aload_0
      12: aload_1
      13: aload_2
      14: invokedynamic #95,  0             // InvokeDynamic #0:apply:(Lzio/managed/package$ZManagedTSemaphoreSyntax$;Lzio/stm/TSemaphore;Ljava/lang/Object;)Lscala/Function0;
      19: aload_2
      20: invokevirtual #99                 // Method zio/managed/ZManaged$ScopedPartiallyApplied$.apply$extension:(ZLscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      23: areturn

  public final zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> withPermitsManaged$extension(zio.stm.TSemaphore, long, java.lang.Object);
    Code:
       0: getstatic     #67                 // Field zio/managed/ZManaged$.MODULE$:Lzio/managed/ZManaged$;
       3: invokevirtual #71                 // Method zio/managed/ZManaged$.scoped:()Z
       6: istore        5
       8: getstatic     #74                 // Field zio/managed/ZManaged$ScopedPartiallyApplied$.MODULE$:Lzio/managed/ZManaged$ScopedPartiallyApplied$;
      11: iload         5
      13: aload_0
      14: aload_1
      15: lload_2
      16: aload         4
      18: invokedynamic #111,  0            // InvokeDynamic #1:apply:(Lzio/managed/package$ZManagedTSemaphoreSyntax$;Lzio/stm/TSemaphore;JLjava/lang/Object;)Lscala/Function0;
      23: aload         4
      25: invokevirtual #99                 // Method zio/managed/ZManaged$ScopedPartiallyApplied$.apply$extension:(ZLscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      28: areturn

  private final zio.ZIO withPermitManaged$extension$$anonfun$1(zio.stm.TSemaphore, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #118                // Method zio/stm/TSemaphore.withPermitScoped:(Ljava/lang/Object;)Lzio/ZIO;
       5: areturn

  private final zio.ZIO withPermitsManaged$extension$$anonfun$1(zio.stm.TSemaphore, long, java.lang.Object);
    Code:
       0: aload_1
       1: lload_2
       2: aload         4
       4: invokevirtual #125                // Method zio/stm/TSemaphore.withPermitsScoped:(JLjava/lang/Object;)Lzio/ZIO;
       7: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #137,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
