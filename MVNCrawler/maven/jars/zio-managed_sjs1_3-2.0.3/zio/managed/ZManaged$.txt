Compiled from "ZManaged.scala"
public final class zio.managed.ZManaged$ implements zio.managed.ZManagedPlatformSpecific,java.io.Serializable {
  private static zio.FiberRef currentReleaseMap$lzy1;

  private boolean currentReleaseMapbitmap$1;

  public static final zio.managed.ZManaged$Exited$ zio$managed$ZManaged$$$Exited;

  public static final zio.managed.ZManaged$Running$ zio$managed$ZManaged$$$Running;

  public static final zio.managed.ZManaged$EnvironmentWithPartiallyApplied$ EnvironmentWithPartiallyApplied;

  public static final zio.managed.ZManaged$EnvironmentWithZIOPartiallyApplied$ EnvironmentWithZIOPartiallyApplied;

  public static final zio.managed.ZManaged$EnvironmentWithManagedPartiallyApplied$ EnvironmentWithManagedPartiallyApplied;

  public static final zio.managed.ZManaged$ScopedPartiallyApplied$ ScopedPartiallyApplied;

  public static final zio.managed.ZManaged$ServiceAtPartiallyApplied$ ServiceAtPartiallyApplied;

  public static final zio.managed.ZManaged$ServiceWithPartiallyApplied$ ServiceWithPartiallyApplied;

  public static final zio.managed.ZManaged$ServiceWithZIOPartiallyApplied$ ServiceWithZIOPartiallyApplied;

  public static final zio.managed.ZManaged$ServiceWithManagedPartiallyApplied$ ServiceWithManagedPartiallyApplied;

  public static final zio.managed.ZManaged$Finalizer$ Finalizer;

  public static final zio.managed.ZManaged$IfManaged$ IfManaged;

  public static final zio.managed.ZManaged$ProvideSomeLayer$ ProvideSomeLayer;

  public static final zio.managed.ZManaged$UnlessManaged$ UnlessManaged;

  public static final zio.managed.ZManaged$UpdateService$ UpdateService;

  public static final zio.managed.ZManaged$UpdateServiceAt$ UpdateServiceAt;

  public static final zio.managed.ZManaged$WhenManaged$ WhenManaged;

  public static final zio.managed.ZManaged$ReleaseMap$ ReleaseMap;

  private static final zio.managed.ZManaged none;

  private static zio.managed.ZManaged unit$lzy1;

  private boolean unitbitmap$1;

  public static final zio.managed.ZManaged$ZManagedConstructor$ ZManagedConstructor;

  public static final zio.managed.ZManaged$RefineToOrDieOps$ RefineToOrDieOps;

  public static final zio.managed.ZManaged$ MODULE$;

  private zio.managed.ZManaged$();
    Code:
       0: aload_0
       1: invokespecial #238                // Method java/lang/Object."<init>":()V
       4: return

  public static {};
    Code:
       0: new           #2                  // class zio/managed/ZManaged$
       3: dup
       4: invokespecial #241                // Method "<init>":()V
       7: putstatic     #243                // Field MODULE$:Lzio/managed/ZManaged$;
      10: getstatic     #243                // Field MODULE$:Lzio/managed/ZManaged$;
      13: getstatic     #248                // Field scala/None$.MODULE$:Lscala/None$;
      16: invokevirtual #252                // Method succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      19: putstatic     #254                // Field none:Lzio/managed/ZManaged;
      22: return

  private java.lang.Object writeReplace();
    Code:
       0: new           #258                // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class zio/managed/ZManaged$
       6: invokespecial #261                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public zio.FiberRef<zio.managed.ZManaged$ReleaseMap> currentReleaseMap();
    Code:
       0: aload_0
       1: getfield      #266                // Field currentReleaseMapbitmap$1:Z
       4: ifne          51
       7: getstatic     #269                // Field zio/FiberRef$unsafe$.MODULE$:Lzio/FiberRef$unsafe$;
      10: getstatic     #272                // Field zio/managed/ZManaged$ReleaseMap$unsafe$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$unsafe$;
      13: getstatic     #277                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
      16: invokevirtual #281                // Method zio/Unsafe$.unsafe:()Lzio/Unsafe;
      19: invokevirtual #285                // Method zio/managed/ZManaged$ReleaseMap$unsafe$.make:(Lzio/Unsafe;)Lzio/managed/ZManaged$ReleaseMap;
      22: getstatic     #269                // Field zio/FiberRef$unsafe$.MODULE$:Lzio/FiberRef$unsafe$;
      25: invokevirtual #289                // Method zio/FiberRef$unsafe$.make$default$2:()Lscala/Function1;
      28: getstatic     #269                // Field zio/FiberRef$unsafe$.MODULE$:Lzio/FiberRef$unsafe$;
      31: invokevirtual #293                // Method zio/FiberRef$unsafe$.make$default$3:()Lscala/Function2;
      34: getstatic     #277                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
      37: invokevirtual #281                // Method zio/Unsafe$.unsafe:()Lzio/Unsafe;
      40: invokevirtual #296                // Method zio/FiberRef$unsafe$.make:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;Lzio/Unsafe;)Lzio/FiberRef;
      43: putstatic     #298                // Field currentReleaseMap$lzy1:Lzio/FiberRef;
      46: aload_0
      47: iconst_1
      48: putfield      #266                // Field currentReleaseMapbitmap$1:Z
      51: getstatic     #298                // Field currentReleaseMap$lzy1:Lzio/FiberRef;
      54: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, A> absolve(scala.Function0<zio.managed.ZManaged<R, E, scala.util.Either<E, A>>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #323,  0            // InvokeDynamic #0:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <R, R1 extends R, E, A> zio.managed.ZManaged<R1, E, A> acquireRelease(scala.Function0<zio.ZIO<R, E, A>>, scala.Function0<zio.ZIO<R1, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: invokedynamic #345,  0            // InvokeDynamic #1:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function1;
       9: aload_3
      10: invokevirtual #349                // Method acquireReleaseWith:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <A> zio.managed.ZManaged<java.lang.Object, java.lang.Throwable, A> acquireReleaseAttempt(scala.Function0<A>, scala.Function0<java.lang.Object>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: invokedynamic #357,  0            // InvokeDynamic #2:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function1;
       9: aload_3
      10: invokevirtual #360                // Method acquireReleaseAttemptWith:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <A> zio.managed.ZManaged<java.lang.Object, java.lang.Throwable, A> acquireReleaseAttemptWith(scala.Function0<A>, scala.Function1<A, java.lang.Object>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_3
       4: invokedynamic #368,  0            // InvokeDynamic #3:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_0
      10: aload_2
      11: aload_3
      12: invokedynamic #376,  0            // InvokeDynamic #4:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      17: aload_3
      18: invokevirtual #349                // Method acquireReleaseWith:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      21: areturn

  public <R, R1 extends R, E, A> zio.managed.ZManaged<R1, E, A> acquireReleaseExit(scala.Function0<zio.ZIO<R, E, A>>, scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<R1, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: invokedynamic #391,  0            // InvokeDynamic #5:apply:(Lzio/managed/ZManaged$;Lscala/Function1;)Lscala/Function2;
       9: aload_3
      10: invokevirtual #395                // Method acquireReleaseExitWith:(Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <R, R1 extends R, E, A> zio.managed.ZManaged<R1, E, A> acquireReleaseExitWith(scala.Function0<zio.ZIO<R, E, A>>, scala.Function2<A, zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<R1, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       4: aload_3
       5: invokevirtual #404                // Method zio/ZIO$.environment:(Ljava/lang/Object;)Lzio/ZIO;
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokedynamic #414,  0            // InvokeDynamic #6:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      17: aload_3
      18: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      23: aload_3
      24: invokeinterface #421,  2          // InterfaceMethod zio/ZIO.uninterruptible:(Ljava/lang/Object;)Lzio/ZIO;
      29: invokevirtual #424                // Method apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      32: areturn

  public <R, R1 extends R, E, A> zio.managed.ZManaged<R1, E, A> acquireReleaseInterruptible(scala.Function0<zio.ZIO<R, E, A>>, scala.Function0<zio.ZIO<R1, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: invokedynamic #431,  0            // InvokeDynamic #7:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function1;
       9: aload_3
      10: invokevirtual #434                // Method acquireReleaseInterruptibleWith:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <R, R1 extends R, E, A> zio.managed.ZManaged<R1, E, A> acquireReleaseInterruptibleWith(scala.Function0<zio.ZIO<R, E, A>>, scala.Function1<A, zio.ZIO<R1, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: aload_0
       7: aload_2
       8: aload_3
       9: invokedynamic #445,  0            // InvokeDynamic #8:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      14: aload_3
      15: invokevirtual #449                // Method zio/managed/ZManaged.onExitFirst:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      18: areturn

  public <A> zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, A> acquireReleaseSucceed(scala.Function0<A>, scala.Function0<java.lang.Object>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: invokedynamic #456,  0            // InvokeDynamic #9:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function1;
       9: aload_3
      10: invokevirtual #459                // Method acquireReleaseSucceedWith:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <A> zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, A> acquireReleaseSucceedWith(scala.Function0<A>, scala.Function1<A, java.lang.Object>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_3
       4: invokedynamic #465,  0            // InvokeDynamic #10:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_0
      10: aload_2
      11: aload_3
      12: invokedynamic #470,  0            // InvokeDynamic #11:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      17: aload_3
      18: invokevirtual #349                // Method acquireReleaseWith:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      21: areturn

  public <R, R1 extends R, E, A> zio.managed.ZManaged<R1, E, A> acquireReleaseWith(scala.Function0<zio.ZIO<R, E, A>>, scala.Function1<A, zio.ZIO<R1, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: invokedynamic #475,  0            // InvokeDynamic #12:apply:(Lzio/managed/ZManaged$;Lscala/Function1;)Lscala/Function2;
       9: aload_3
      10: invokevirtual #395                // Method acquireReleaseExitWith:(Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, A> apply(zio.ZIO<R, E, scala.Tuple2<scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>>, A>>);
    Code:
       0: new           #51                 // class zio/managed/ZManaged$$anon$4
       3: dup
       4: aload_1
       5: invokespecial #480                // Method zio/managed/ZManaged$$anon$4."<init>":(Lzio/ZIO;)V
       8: areturn

  public <A> zio.managed.ZManaged<java.lang.Object, java.lang.Throwable, A> attempt(scala.Function0<A>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #489,  0            // InvokeDynamic #13:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <R, E, A, B, Collection extends scala.collection.Iterable<java.lang.Object>> zio.managed.ZManaged<R, E, scala.collection.Iterable<B>> collect(scala.collection.Iterable<A>, scala.Function1<A, zio.managed.ZManaged<R, scala.Option<E>, B>>, scala.collection.BuildFrom<scala.collection.Iterable<A>, B, scala.collection.Iterable<B>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: aload         4
       6: invokedynamic #502,  0            // InvokeDynamic #14:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      11: getstatic     #507                // Field scala/collection/BuildFrom$.MODULE$:Lscala/collection/BuildFrom$;
      14: invokevirtual #511                // Method scala/collection/BuildFrom$.buildFromIterableOps:()Lscala/collection/BuildFrom;
      17: aload         4
      19: invokevirtual #514                // Method foreach:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/managed/ZManaged;
      22: aload_0
      23: invokedynamic #523,  0            // InvokeDynamic #15:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      28: aload         4
      30: invokevirtual #526                // Method zio/managed/ZManaged.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      33: aload_0
      34: aload_1
      35: aload_3
      36: invokedynamic #534,  0            // InvokeDynamic #16:apply:(Lzio/managed/ZManaged$;Lscala/collection/Iterable;Lscala/collection/BuildFrom;)Lscala/Function1;
      41: aload         4
      43: invokevirtual #526                // Method zio/managed/ZManaged.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      46: areturn

  public <R, E, A, Collection extends scala.collection.Iterable<java.lang.Object>> zio.managed.ZManaged<R, E, scala.collection.Iterable<A>> collectAll(scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>, scala.collection.BuildFrom<scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>, A, scala.collection.Iterable<A>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       5: invokevirtual #543                // Method zio/ZIO$.identityFn:()Lscala/Function1;
       8: aload_2
       9: aload_3
      10: invokevirtual #514                // Method foreach:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, scala.runtime.BoxedUnit> collectAllDiscard(scala.Function0<scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       5: invokevirtual #543                // Method zio/ZIO$.identityFn:()Lscala/Function1;
       8: aload_2
       9: invokevirtual #548                // Method foreachDiscard:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public <R, E, A, Collection extends scala.collection.Iterable<java.lang.Object>> zio.managed.ZManaged<R, E, scala.collection.Iterable<A>> collectAllPar(scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>, scala.collection.BuildFrom<scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>, A, scala.collection.Iterable<A>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       5: invokevirtual #543                // Method zio/ZIO$.identityFn:()Lscala/Function1;
       8: aload_2
       9: aload_3
      10: invokevirtual #553                // Method foreachPar:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, scala.runtime.BoxedUnit> collectAllParDiscard(scala.Function0<scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       5: invokevirtual #543                // Method zio/ZIO$.identityFn:()Lscala/Function1;
       8: aload_2
       9: invokevirtual #557                // Method foreachParDiscard:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public <R, E, A, B> zio.managed.ZManaged<R, E, scala.Option<B>> collectFirst(scala.Function0<scala.collection.Iterable<A>>, scala.Function1<A, zio.managed.ZManaged<R, E, scala.Option<B>>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #569,  0            // InvokeDynamic #17:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function0;
       8: aload_3
       9: invokevirtual #572                // Method succeed:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: aload_0
      13: aload_2
      14: aload_3
      15: invokedynamic #580,  0            // InvokeDynamic #18:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      20: aload_3
      21: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      24: areturn

  public <R, E, A, B, Collection extends scala.collection.Iterable<java.lang.Object>> zio.managed.ZManaged<R, E, scala.collection.Iterable<B>> collectPar(scala.collection.Iterable<A>, scala.Function1<A, zio.managed.ZManaged<R, scala.Option<E>, B>>, scala.collection.BuildFrom<scala.collection.Iterable<A>, B, scala.collection.Iterable<B>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: aload         4
       6: invokedynamic #588,  0            // InvokeDynamic #19:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      11: getstatic     #507                // Field scala/collection/BuildFrom$.MODULE$:Lscala/collection/BuildFrom$;
      14: invokevirtual #511                // Method scala/collection/BuildFrom$.buildFromIterableOps:()Lscala/collection/BuildFrom;
      17: aload         4
      19: invokevirtual #553                // Method foreachPar:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/managed/ZManaged;
      22: aload_0
      23: invokedynamic #593,  0            // InvokeDynamic #20:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      28: aload         4
      30: invokevirtual #526                // Method zio/managed/ZManaged.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      33: aload_0
      34: aload_1
      35: aload_3
      36: invokedynamic #598,  0            // InvokeDynamic #21:apply:(Lzio/managed/ZManaged$;Lscala/collection/Iterable;Lscala/collection/BuildFrom;)Lscala/Function1;
      41: aload         4
      43: invokevirtual #526                // Method zio/managed/ZManaged.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      46: areturn

  public <E, A> zio.managed.ZManaged<java.lang.Object, E, A> cond(scala.Function0<java.lang.Object>, scala.Function0<A>, scala.Function0<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #611,  0            // InvokeDynamic #22:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
      12: aload         4
      14: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.Nothing$> die(scala.Function0<java.lang.Throwable>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #622,  0            // InvokeDynamic #23:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function0;
       8: aload_2
       9: invokevirtual #625                // Method failCause:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.Nothing$> dieMessage(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #636,  0            // InvokeDynamic #24:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function0;
       8: aload_2
       9: invokevirtual #638                // Method die:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public <E, A> zio.managed.ZManaged<java.lang.Object, E, A> done(scala.Function0<zio.Exit<E, A>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #645,  0            // InvokeDynamic #25:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <R> zio.managed.ZManaged<R, scala.runtime.Nothing$, zio.ZEnvironment<R>> environment(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #653,  0            // InvokeDynamic #26:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function0;
       8: aload_1
       9: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public boolean environmentWith();
    Code:
       0: getstatic     #657                // Field zio/managed/ZManaged$EnvironmentWithPartiallyApplied$.MODULE$:Lzio/managed/ZManaged$EnvironmentWithPartiallyApplied$;
       3: invokevirtual #660                // Method zio/managed/ZManaged$EnvironmentWithPartiallyApplied$.$lessinit$greater$default$1:()Z
       6: ireturn

  public boolean environmentWithManaged();
    Code:
       0: getstatic     #663                // Field zio/managed/ZManaged$EnvironmentWithManagedPartiallyApplied$.MODULE$:Lzio/managed/ZManaged$EnvironmentWithManagedPartiallyApplied$;
       3: invokevirtual #664                // Method zio/managed/ZManaged$EnvironmentWithManagedPartiallyApplied$.$lessinit$greater$default$1:()Z
       6: ireturn

  public boolean environmentWithZIO();
    Code:
       0: getstatic     #667                // Field zio/managed/ZManaged$EnvironmentWithZIOPartiallyApplied$.MODULE$:Lzio/managed/ZManaged$EnvironmentWithZIOPartiallyApplied$;
       3: invokevirtual #668                // Method zio/managed/ZManaged$EnvironmentWithZIOPartiallyApplied$.$lessinit$greater$default$1:()Z
       6: ireturn

  public <R, E, A> zio.managed.ZManaged<R, E, java.lang.Object> exists(scala.Function0<scala.collection.Iterable<A>>, scala.Function1<A, zio.managed.ZManaged<R, E, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #675,  0            // InvokeDynamic #27:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function0;
       8: aload_3
       9: invokevirtual #572                // Method succeed:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: aload_0
      13: aload_2
      14: aload_3
      15: invokedynamic #680,  0            // InvokeDynamic #28:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      20: aload_3
      21: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      24: areturn

  public <E> zio.managed.ZManaged<java.lang.Object, E, scala.runtime.Nothing$> fail(scala.Function0<E>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #687,  0            // InvokeDynamic #29:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function0;
       8: aload_2
       9: invokevirtual #625                // Method failCause:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public <E> zio.managed.ZManaged<java.lang.Object, E, scala.runtime.Nothing$> failCause(scala.Function0<zio.Cause<E>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #694,  0            // InvokeDynamic #30:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, zio.FiberId> fiberId(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #701,  0            // InvokeDynamic #31:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function0;
       8: aload_1
       9: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public <R> zio.managed.ZManaged<R, scala.runtime.Nothing$, scala.runtime.BoxedUnit> finalizer(scala.Function0<zio.ZIO<R, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #709,  0            // InvokeDynamic #32:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function1;
       8: aload_2
       9: invokevirtual #712                // Method finalizerExit:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public <R> zio.managed.ZManaged<R, scala.runtime.Nothing$, scala.runtime.BoxedUnit> finalizerExit(scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<R, scala.runtime.Nothing$, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: invokedynamic #720,  0            // InvokeDynamic #33:apply:(Lzio/managed/ZManaged$;)Lscala/Function0;
       7: aload_0
       8: aload_1
       9: invokedynamic #728,  0            // InvokeDynamic #34:apply:(Lzio/managed/ZManaged$;Lscala/Function1;)Lscala/Function2;
      14: aload_2
      15: invokevirtual #395                // Method acquireReleaseExitWith:(Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/managed/ZManaged;
      18: areturn

  public <R> zio.managed.ZManaged<R, scala.runtime.Nothing$, zio.Ref<scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>>>> finalizerRef(scala.Function0<scala.Function1<zio.Exit<java.lang.Object, java.lang.Object>, zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object>>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #736,  0            // InvokeDynamic #35:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_0
      10: aload_2
      11: invokedynamic #746,  0            // InvokeDynamic #36:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function2;
      16: aload_2
      17: invokevirtual #395                // Method acquireReleaseExitWith:(Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/managed/ZManaged;
      20: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, A> firstSuccessOf(scala.Function0<zio.managed.ZManaged<R, E, A>>, scala.Function0<scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #757,  0            // InvokeDynamic #37:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
      10: aload_3
      11: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, A> flatten(scala.Function0<zio.managed.ZManaged<R, E, zio.managed.ZManaged<R, E, A>>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #765,  0            // InvokeDynamic #38:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, A> flattenZIO(scala.Function0<zio.managed.ZManaged<R, E, zio.ZIO<R, E, A>>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #772,  0            // InvokeDynamic #39:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <R, E, S, A> zio.managed.ZManaged<R, E, S> foldLeft(scala.Function0<scala.collection.Iterable<A>>, scala.Function0<S>, scala.Function2<S, A, zio.managed.ZManaged<R, E, S>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #783,  0            // InvokeDynamic #40:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/Function0;
      12: aload         4
      14: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, java.lang.Object> forall(scala.Function0<scala.collection.Iterable<A>>, scala.Function1<A, zio.managed.ZManaged<R, E, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #789,  0            // InvokeDynamic #41:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function0;
       8: aload_3
       9: invokevirtual #572                // Method succeed:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: aload_0
      13: aload_2
      14: aload_3
      15: invokedynamic #794,  0            // InvokeDynamic #42:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      20: aload_3
      21: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      24: areturn

  public <R, E, A1, A2, Collection extends scala.collection.Iterable<java.lang.Object>> zio.managed.ZManaged<R, E, scala.collection.Iterable<A2>> foreach(scala.collection.Iterable<A1>, scala.Function1<A1, zio.managed.ZManaged<R, E, A2>>, scala.collection.BuildFrom<scala.collection.Iterable<A1>, A2, scala.collection.Iterable<A2>>, java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       4: aload_1
       5: invokeinterface #801,  1          // InterfaceMethod scala/collection/Iterable.toList:()Lscala/collection/immutable/List;
      10: aload_0
      11: aload_2
      12: invokedynamic #808,  0            // InvokeDynamic #43:apply:(Lzio/managed/ZManaged$;Lscala/Function1;)Lscala/Function1;
      17: getstatic     #507                // Field scala/collection/BuildFrom$.MODULE$:Lscala/collection/BuildFrom$;
      20: invokevirtual #511                // Method scala/collection/BuildFrom$.buildFromIterableOps:()Lscala/collection/BuildFrom;
      23: aload         4
      25: invokevirtual #811                // Method zio/ZIO$.foreach:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/ZIO;
      28: aload_0
      29: aload_1
      30: aload_3
      31: aload         4
      33: invokedynamic #821,  0            // InvokeDynamic #44:apply:(Lzio/managed/ZManaged$;Lscala/collection/Iterable;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lscala/Function1;
      38: aload         4
      40: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      45: invokevirtual #424                // Method apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      48: areturn

  public final <R, E, A1, A2> zio.managed.ZManaged<R, E, scala.Option<A2>> foreach(scala.Option<A1>, scala.Function1<A1, zio.managed.ZManaged<R, E, A2>>, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_3
       3: invokedynamic #830,  0            // InvokeDynamic #45:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function0;
       8: aload_0
       9: aload_2
      10: aload_3
      11: invokedynamic #835,  0            // InvokeDynamic #46:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      16: invokevirtual #841                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      19: checkcast     #59                 // class zio/managed/ZManaged
      22: areturn

  public final <R, E, A, B, Collection extends scala.collection.Iterable<java.lang.Object>> zio.managed.ZManaged<R, E, scala.collection.Iterable<B>> foreachExec(scala.collection.Iterable<A>, scala.Function0<zio.ExecutionStrategy>, scala.Function1<A, zio.managed.ZManaged<R, E, B>>, scala.collection.BuildFrom<scala.collection.Iterable<A>, B, scala.collection.Iterable<B>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: invokedynamic #853,  0            // InvokeDynamic #47:apply:(Lzio/managed/ZManaged$;Lscala/collection/Iterable;Lscala/Function0;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lscala/Function0;
      14: aload         5
      16: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      19: areturn

  public <R, E, A1, A2, Collection extends scala.collection.Iterable<java.lang.Object>> zio.managed.ZManaged<R, E, scala.collection.Iterable<A2>> foreachPar(scala.collection.Iterable<A1>, scala.Function1<A1, zio.managed.ZManaged<R, E, A2>>, scala.collection.BuildFrom<scala.collection.Iterable<A1>, A2, scala.collection.Iterable<A2>>, java.lang.Object);
    Code:
       0: getstatic     #855                // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       3: aload         4
       5: invokevirtual #858                // Method zio/managed/ZManaged$ReleaseMap$.makeManagedPar:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: aload         4
      14: invokedynamic #868,  0            // InvokeDynamic #48:apply:(Lzio/managed/ZManaged$;Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lscala/Function1;
      19: aload         4
      21: invokevirtual #871                // Method zio/managed/ZManaged.mapZIO:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      24: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, scala.runtime.BoxedUnit> foreachDiscard(scala.Function0<scala.collection.Iterable<A>>, scala.Function1<A, zio.managed.ZManaged<R, E, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokedynamic #880,  0            // InvokeDynamic #49:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      13: aload_3
      14: invokevirtual #883                // Method zio/ZIO$.suspendSucceed:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      17: invokevirtual #424                // Method apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      20: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, scala.runtime.BoxedUnit> foreachParDiscard(scala.Function0<scala.collection.Iterable<A>>, scala.Function1<A, zio.managed.ZManaged<R, E, java.lang.Object>>, java.lang.Object);
    Code:
       0: getstatic     #855                // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       3: aload_3
       4: invokevirtual #858                // Method zio/managed/ZManaged$ReleaseMap$.makeManagedPar:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokedynamic #891,  0            // InvokeDynamic #50:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      16: aload_3
      17: invokevirtual #871                // Method zio/managed/ZManaged.mapZIO:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      20: areturn

  public <Input> java.lang.Object from(scala.Function0<Input>, zio.managed.ZManaged$ZManagedConstructor<Input>, java.lang.Object);
    Code:
       0: aload_2
       1: aload_1
       2: aload_3
       3: invokeinterface #898,  3          // InterfaceMethod zio/managed/ZManaged$ZManagedConstructor.make:(Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public <R, E, A extends java.lang.AutoCloseable> zio.managed.ZManaged<R, E, A> fromAutoCloseable(scala.Function0<zio.ZIO<R, E, A>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: invokedynamic #912,  0            // InvokeDynamic #51:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
       9: aload_2
      10: invokevirtual #349                // Method acquireReleaseWith:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <E, A> zio.managed.ZManaged<java.lang.Object, E, A> fromEither(scala.Function0<scala.util.Either<E, A>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #572                // Method succeed:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: aload_0
       7: aload_2
       8: invokedynamic #922,  0            // InvokeDynamic #52:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      13: aload_2
      14: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: areturn

  public <A> zio.managed.ZManaged<java.lang.Object, scala.Option<scala.runtime.Nothing$>, A> fromOption(scala.Function0<scala.Option<A>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #572                // Method succeed:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: aload_0
       7: aload_2
       8: invokedynamic #932,  0            // InvokeDynamic #53:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      13: aload_2
      14: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, A> fromReservation(scala.Function0<zio.managed.Reservation<R, E, A>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #940,  0            // InvokeDynamic #54:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #943                // Method fromReservationZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, A> fromReservationZIO(scala.Function0<zio.ZIO<R, E, zio.managed.Reservation<R, E, A>>>, java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokedynamic #954,  0            // InvokeDynamic #55:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
      12: aload_2
      13: invokevirtual #957                // Method zio/ZIO$.uninterruptibleMask:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      16: invokevirtual #424                // Method apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      19: areturn

  public <A> zio.managed.ZManaged<java.lang.Object, java.lang.Throwable, A> fromTry(scala.Function0<scala.util.Try<A>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #962                // Method attempt:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: aload_0
       7: aload_2
       8: invokedynamic #970,  0            // InvokeDynamic #56:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      13: aload_2
      14: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, A> fromZIO(scala.Function0<zio.ZIO<R, E, A>>, java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokedynamic #976,  0            // InvokeDynamic #57:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
      12: aload_2
      13: invokevirtual #957                // Method zio/ZIO$.uninterruptibleMask:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      16: invokevirtual #424                // Method apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      19: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, A> fromZIOUninterruptible(scala.Function0<zio.ZIO<R, E, A>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #982,  0            // InvokeDynamic #58:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <R, E> scala.Function0 ifManaged(scala.Function0<zio.managed.ZManaged<R, E, java.lang.Object>>);
    Code:
       0: aload_1
       1: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.Nothing$> interrupt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #993,  0            // InvokeDynamic #59:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function0;
       8: aload_1
       9: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: aload_0
      13: aload_1
      14: invokedynamic #1001,  0           // InvokeDynamic #60:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      19: aload_1
      20: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      23: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.Nothing$> interruptAs(scala.Function0<zio.FiberId>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #1008,  0           // InvokeDynamic #61:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function0;
       8: aload_2
       9: invokevirtual #625                // Method failCause:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public <R, E, S> zio.managed.ZManaged<R, E, S> iterate(scala.Function0<S>, scala.Function1<S, java.lang.Object>, scala.Function1<S, zio.managed.ZManaged<R, E, S>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #1020,  0           // InvokeDynamic #62:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      12: aload         4
      14: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> lock(scala.Function0<zio.Executor>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1026               // Method onExecutor:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> log(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #1033,  0           // InvokeDynamic #63:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logAnnotate(scala.Function0<java.lang.String>, scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #1039               // Method scoped:()Z
       4: istore        4
       6: getstatic     #1041               // Field zio/managed/ZManaged$ScopedPartiallyApplied$.MODULE$:Lzio/managed/ZManaged$ScopedPartiallyApplied$;
       9: iload         4
      11: aload_0
      12: aload_1
      13: aload_2
      14: aload_3
      15: invokedynamic #1047,  0           // InvokeDynamic #64:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
      20: aload_3
      21: invokevirtual #1051               // Method zio/managed/ZManaged$ScopedPartiallyApplied$.apply$extension:(ZLscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      24: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.collection.immutable.Map<java.lang.String, java.lang.String>> logAnnotations(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #1058,  0           // InvokeDynamic #65:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function0;
       8: aload_1
       9: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logDebug(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #1064,  0           // InvokeDynamic #66:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logError(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #1070,  0           // InvokeDynamic #67:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logErrorCause(scala.Function0<zio.Cause<java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #1077,  0           // InvokeDynamic #68:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logFatal(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #1083,  0           // InvokeDynamic #69:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logInfo(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #1089,  0           // InvokeDynamic #70:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logLevel(zio.LogLevel, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #1039               // Method scoped:()Z
       4: istore_3
       5: getstatic     #1041               // Field zio/managed/ZManaged$ScopedPartiallyApplied$.MODULE$:Lzio/managed/ZManaged$ScopedPartiallyApplied$;
       8: iload_3
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokedynamic #1101,  0           // InvokeDynamic #71:apply:(Lzio/managed/ZManaged$;Lzio/LogLevel;Ljava/lang/Object;)Lscala/Function0;
      17: aload_2
      18: invokevirtual #1051               // Method zio/managed/ZManaged$ScopedPartiallyApplied$.apply$extension:(ZLscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      21: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logSpan(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #1039               // Method scoped:()Z
       4: istore_3
       5: getstatic     #1041               // Field zio/managed/ZManaged$ScopedPartiallyApplied$.MODULE$:Lzio/managed/ZManaged$ScopedPartiallyApplied$;
       8: iload_3
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokedynamic #1109,  0           // InvokeDynamic #72:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
      17: aload_2
      18: invokevirtual #1051               // Method zio/managed/ZManaged$ScopedPartiallyApplied$.apply$extension:(ZLscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      21: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logTrace(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #1115,  0           // InvokeDynamic #73:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> logWarning(scala.Function0<java.lang.String>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #1121,  0           // InvokeDynamic #74:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <R, E, A, S> zio.managed.ZManaged<R, E, scala.collection.immutable.List<A>> loop(scala.Function0<S>, scala.Function1<S, java.lang.Object>, scala.Function1<S, S>, scala.Function1<S, zio.managed.ZManaged<R, E, A>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: invokedynamic #1132,  0           // InvokeDynamic #75:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function1;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      14: aload         5
      16: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      19: areturn

  public <R, E, S> zio.managed.ZManaged<R, E, scala.runtime.BoxedUnit> loopDiscard(scala.Function0<S>, scala.Function1<S, java.lang.Object>, scala.Function1<S, S>, scala.Function1<S, zio.managed.ZManaged<R, E, java.lang.Object>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: invokedynamic #1139,  0           // InvokeDynamic #76:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function1;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      14: aload         5
      16: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      19: areturn

  public <R, E, A, B> zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.Function1<A, zio.ZIO<R, E, B>>> memoize(scala.Function1<A, zio.managed.ZManaged<R, E, B>>, java.lang.Object);
    Code:
       0: getstatic     #1146               // Field zio/managed/package$.MODULE$:Lzio/managed/package$;
       3: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       6: aload_2
       7: invokevirtual #1148               // Method zio/ZIO$.fiberId:(Ljava/lang/Object;)Lzio/ZIO;
      10: invokevirtual #1151               // Method zio/managed/package$.ZManagedZIOSyntax:(Lzio/ZIO;)Lzio/managed/package$ZManagedZIOSyntax;
      13: aload_2
      14: invokevirtual #1154               // Method zio/managed/package$ZManagedZIOSyntax.toManaged:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokedynamic #1162,  0           // InvokeDynamic #77:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      25: aload_2
      26: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      29: areturn

  public <R, E, A, B> zio.managed.ZManaged<R, E, B> mergeAll(scala.Function0<scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>>, scala.Function0<B>, scala.Function2<B, A, B>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #1169,  0           // InvokeDynamic #78:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/Function0;
      12: aload         4
      14: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: areturn

  public <R, E, A, B> zio.managed.ZManaged<R, E, B> mergeAllPar(scala.Function0<scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>>, scala.Function0<B>, scala.Function2<B, A, B>, java.lang.Object);
    Code:
       0: getstatic     #855                // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       3: aload         4
       5: invokevirtual #858                // Method zio/managed/ZManaged$ReleaseMap$.makeManagedPar:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: aload         4
      14: invokedynamic #1178,  0           // InvokeDynamic #79:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      19: aload         4
      21: invokevirtual #871                // Method zio/managed/ZManaged.mapZIO:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      24: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.Nothing$> never(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #1184,  0           // InvokeDynamic #80:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function0;
       8: aload_1
       9: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.Option<scala.runtime.Nothing$>> none();
    Code:
       0: getstatic     #254                // Field none:Lzio/managed/ZManaged;
       3: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> onExecutor(scala.Function0<zio.Executor>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #1190,  0           // InvokeDynamic #81:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_0
      10: aload_2
      11: invokedynamic #1198,  0           // InvokeDynamic #82:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      16: aload_2
      17: invokevirtual #349                // Method acquireReleaseWith:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      20: aload_2
      21: invokevirtual #1201               // Method zio/managed/ZManaged.unit:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      24: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.Option<java.lang.Object>> parallelism(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #1208,  0           // InvokeDynamic #83:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function0;
       8: aload_1
       9: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, zio.managed.ZManaged$PreallocationScope> preallocationScope(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1213               // Method scope:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       5: aload_0
       6: aload_1
       7: invokedynamic #1221,  0           // InvokeDynamic #84:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      12: aload_1
      13: invokevirtual #526                // Method zio/managed/ZManaged.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      16: areturn

  public <RIn, E, ROut, RIn2, ROut2> zio.managed.ZManaged<RIn, E, ROut2> provideLayer(zio.ZLayer<RIn, E, ROut>, zio.managed.ZManaged<ROut, E, ROut2>, izumi.reflect.Tag<RIn2>, izumi.reflect.Tag<ROut>, java.lang.Object);
    Code:
       0: aload_2
       1: invokevirtual #1231               // Method zio/managed/ZManaged.provideSomeLayer:()Lzio/managed/ZManaged;
       4: astore        6
       6: getstatic     #1233               // Field zio/managed/ZManaged$ProvideSomeLayer$.MODULE$:Lzio/managed/ZManaged$ProvideSomeLayer$;
       9: aload         6
      11: aload_0
      12: aload_1
      13: aload         4
      15: aload         5
      17: invokedynamic #1243,  0           // InvokeDynamic #85:apply:(Lzio/managed/ZManaged$;Lzio/ZLayer;Lizumi/reflect/Tag;Ljava/lang/Object;)Lscala/Function0;
      22: getstatic     #1248               // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
      25: invokevirtual #1252               // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
      28: getstatic     #1257               // Field izumi/reflect/Tag$.MODULE$:Lizumi/reflect/Tag$;
      31: ldc           #4                  // class java/lang/Object
      33: getstatic     #1262               // Field scala/package$.MODULE$:Lscala/package$;
      36: invokevirtual #1266               // Method scala/package$.List:()Lscala/collection/immutable/List$;
      39: getstatic     #1271               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      42: iconst_2
      43: anewarray     #1273               // class izumi/reflect/macrortti/LightTypeTag
      46: dup
      47: iconst_0
      48: aload_3
      49: invokeinterface #1278,  1         // InterfaceMethod izumi/reflect/Tag.tag:()Lizumi/reflect/macrortti/LightTypeTag;
      54: aastore
      55: dup
      56: iconst_1
      57: aload         4
      59: invokeinterface #1278,  1         // InterfaceMethod izumi/reflect/Tag.tag:()Lizumi/reflect/macrortti/LightTypeTag;
      64: aastore
      65: invokevirtual #1282               // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      68: invokevirtual #1287               // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
      71: checkcast     #1289               // class scala/collection/immutable/List
      74: getstatic     #1294               // Field izumi/reflect/macrortti/LightTypeTag$.MODULE$:Lizumi/reflect/macrortti/LightTypeTag$;
      77: ldc_w         #1295               // int 1581490254
      80: ldc_w         #1297               // String \u0002\u0000\u0002\u0003\u0000\u0001\u001czio.managed.ZManaged$._$RIn2\u0001\u0001\u0003\u0000\u0001\u001czio.managed.ZManaged$._$ROut\u0001\u0001
      83: ldc_w         #1299               // String \u0000\u0000\u0002\u0000\u0001\u001czio.managed.ZManaged$._$ROut\u0001\u0001\u0001\u0000\u0001\tscala.Any\u0001\u0001\u0000\u0001\u001czio.managed.ZManaged$._$RIn2\u0001\u0001\u0001\u0000\u0001\u0090\u0003\u0001\u0001
      86: bipush        21
      88: invokevirtual #1303               // Method izumi/reflect/macrortti/LightTypeTag$.parse:(ILjava/lang/String;Ljava/lang/String;I)Lizumi/reflect/macrortti/LightTypeTag;
      91: getstatic     #1308               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      94: invokevirtual #1312               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      97: invokevirtual #1318               // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
     100: invokevirtual #1322               // Method izumi/reflect/Tag$.refinedTag:(Ljava/lang/Class;Lscala/collection/immutable/List;Lizumi/reflect/macrortti/LightTypeTag;Lscala/collection/immutable/Map;)Lizumi/reflect/Tag;
     103: aload         5
     105: invokevirtual #1325               // Method zio/managed/ZManaged$ProvideSomeLayer$.apply$extension:(Lzio/managed/ZManaged;Lscala/Function0;Lscala/$less$colon$less;Lizumi/reflect/Tag;Ljava/lang/Object;)Lzio/managed/ZManaged;
     108: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, A> reduceAll(scala.Function0<zio.managed.ZManaged<R, E, A>>, scala.Function0<scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>>, scala.Function2<A, A, A>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #1335,  0           // InvokeDynamic #86:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/Function0;
      12: aload         4
      14: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, A> reduceAllPar(scala.Function0<zio.managed.ZManaged<R, E, A>>, scala.Function0<scala.collection.Iterable<zio.managed.ZManaged<R, E, A>>>, scala.Function2<A, A, A>, java.lang.Object);
    Code:
       0: getstatic     #855                // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       3: aload         4
       5: invokevirtual #858                // Method zio/managed/ZManaged$ReleaseMap$.makeManagedPar:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: aload         4
      14: invokedynamic #1341,  0           // InvokeDynamic #87:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      19: aload         4
      21: invokevirtual #871                // Method zio/managed/ZManaged.mapZIO:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      24: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, zio.managed.ZManaged$ReleaseMap> releaseMap(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #1345               // Method currentReleaseMap:()Lzio/FiberRef;
       5: aload_1
       6: invokeinterface #1348,  2         // InterfaceMethod zio/FiberRef.get:(Ljava/lang/Object;)Lzio/ZIO;
      11: aload_0
      12: invokedynamic #1355,  0           // InvokeDynamic #88:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      17: aload_1
      18: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      23: invokevirtual #424                // Method apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      26: areturn

  public <R> zio.managed.ZManaged<R, scala.runtime.Nothing$, zio.Runtime<R>> runtime(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #1362,  0           // InvokeDynamic #89:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function0;
       8: aload_1
       9: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public <R, E, A> zio.managed.ZManaged<R, zio.Cause<E>, A> sandbox(zio.managed.ZManaged<R, E, A>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #1372,  0           // InvokeDynamic #90:apply:(Lzio/managed/ZManaged$;Lzio/managed/ZManaged;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> shift(scala.Function0<zio.Executor>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #1378,  0           // InvokeDynamic #91:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, zio.managed.ZManaged$Scope> scope(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1381               // Method releaseMap:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       5: aload_0
       6: aload_1
       7: invokedynamic #1389,  0           // InvokeDynamic #92:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      12: aload_1
      13: invokevirtual #526                // Method zio/managed/ZManaged.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      16: areturn

  public boolean scoped();
    Code:
       0: getstatic     #1041               // Field zio/managed/ZManaged$ScopedPartiallyApplied$.MODULE$:Lzio/managed/ZManaged$ScopedPartiallyApplied$;
       3: invokevirtual #1390               // Method zio/managed/ZManaged$ScopedPartiallyApplied$.$lessinit$greater$default$1:()Z
       6: ireturn

  public <A> zio.managed.ZManaged<A, scala.runtime.Nothing$, A> service(zio.package$Tag<A>, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #1396               // Method environmentWith:()Z
       4: istore_3
       5: getstatic     #657                // Field zio/managed/ZManaged$EnvironmentWithPartiallyApplied$.MODULE$:Lzio/managed/ZManaged$EnvironmentWithPartiallyApplied$;
       8: iload_3
       9: aload_0
      10: aload_1
      11: invokedynamic #1406,  0           // InvokeDynamic #93:apply:(Lzio/managed/ZManaged$;Lzio/package$Tag;)Lscala/Function1;
      16: aload_2
      17: invokevirtual #1409               // Method zio/managed/ZManaged$EnvironmentWithPartiallyApplied$.apply$extension:(ZLscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      20: areturn

  public boolean serviceAt();
    Code:
       0: getstatic     #1413               // Field zio/managed/ZManaged$ServiceAtPartiallyApplied$.MODULE$:Lzio/managed/ZManaged$ServiceAtPartiallyApplied$;
       3: invokevirtual #1414               // Method zio/managed/ZManaged$ServiceAtPartiallyApplied$.$lessinit$greater$default$1:()Z
       6: ireturn

  public boolean serviceWith();
    Code:
       0: getstatic     #1417               // Field zio/managed/ZManaged$ServiceWithPartiallyApplied$.MODULE$:Lzio/managed/ZManaged$ServiceWithPartiallyApplied$;
       3: invokevirtual #1418               // Method zio/managed/ZManaged$ServiceWithPartiallyApplied$.$lessinit$greater$default$1:()Z
       6: ireturn

  public boolean serviceWithZIO();
    Code:
       0: getstatic     #1421               // Field zio/managed/ZManaged$ServiceWithZIOPartiallyApplied$.MODULE$:Lzio/managed/ZManaged$ServiceWithZIOPartiallyApplied$;
       3: invokevirtual #1422               // Method zio/managed/ZManaged$ServiceWithZIOPartiallyApplied$.$lessinit$greater$default$1:()Z
       6: ireturn

  public boolean serviceWithManaged();
    Code:
       0: getstatic     #1425               // Field zio/managed/ZManaged$ServiceWithManagedPartiallyApplied$.MODULE$:Lzio/managed/ZManaged$ServiceWithManagedPartiallyApplied$;
       3: invokevirtual #1426               // Method zio/managed/ZManaged$ServiceWithManagedPartiallyApplied$.$lessinit$greater$default$1:()Z
       6: ireturn

  public <A> zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.Option<A>> some(scala.Function0<A>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #1436,  0           // InvokeDynamic #94:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function0;
       8: aload_2
       9: invokevirtual #572                // Method succeed:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  public <A> zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, A> succeed(scala.Function0<A>, java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       4: aload_0
       5: aload_1
       6: invokedynamic #1445,  0           // InvokeDynamic #95:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function1;
      11: aload_2
      12: invokevirtual #1447               // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      15: invokevirtual #424                // Method apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      18: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, A> suspend(scala.Function0<zio.managed.ZManaged<R, E, A>>, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #1450               // Method unit:()Lzio/managed/ZManaged;
       4: aload_0
       5: aload_1
       6: invokedynamic #1458,  0           // InvokeDynamic #96:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function1;
      11: aload_2
      12: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      15: areturn

  public <R, E, A> zio.managed.ZManaged<R, scala.runtime.Nothing$, scala.Function1<zio.managed.ZManaged<R, E, A>, zio.ZIO<R, E, A>>> switchable(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1381               // Method releaseMap:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       5: aload_0
       6: aload_1
       7: invokedynamic #1468,  0           // InvokeDynamic #97:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      12: aload_1
      13: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      16: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> unit();
    Code:
       0: aload_0
       1: getfield      #1471               // Field unitbitmap$1:Z
       4: ifne          22
       7: aload_0
       8: getstatic     #1477               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      11: invokevirtual #252                // Method succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: putstatic     #1479               // Field unit$lzy1:Lzio/managed/ZManaged;
      17: aload_0
      18: iconst_1
      19: putfield      #1471               // Field unitbitmap$1:Z
      22: getstatic     #1479               // Field unit$lzy1:Lzio/managed/ZManaged;
      25: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, scala.Option<A>> unless(scala.Function0<java.lang.Object>, scala.Function0<zio.managed.ZManaged<R, E, A>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #1486,  0           // InvokeDynamic #98:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
      10: aload_3
      11: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  public <R, E> scala.Function0 unlessManaged(scala.Function0<zio.managed.ZManaged<R, E, java.lang.Object>>);
    Code:
       0: aload_1
       1: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, A> unsandbox(scala.Function0<zio.managed.ZManaged<R, zio.Cause<E>, A>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #1494,  0           // InvokeDynamic #99:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, A> unwrap(scala.Function0<zio.ZIO<R, E, zio.managed.ZManaged<R, E, A>>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #438                // Method fromZIO:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
       6: getstatic     #1501               // Field zio/IsSubtypeOfOutput$.MODULE$:Lzio/IsSubtypeOfOutput$;
       9: getstatic     #1248               // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
      12: invokevirtual #1252               // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
      15: invokevirtual #1505               // Method zio/IsSubtypeOfOutput$.impl:(Lscala/$less$colon$less;)Lzio/IsSubtypeOfOutput;
      18: aload_2
      19: invokevirtual #1508               // Method zio/managed/ZManaged.flatten:(Lzio/IsSubtypeOfOutput;Ljava/lang/Object;)Lzio/managed/ZManaged;
      22: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, scala.Option<A>> when(scala.Function0<java.lang.Object>, scala.Function0<zio.managed.ZManaged<R, E, A>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #1514,  0           // InvokeDynamic #100:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
      10: aload_3
      11: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  public <R, E, A, B> zio.managed.ZManaged<R, E, scala.Option<B>> whenCase(scala.Function0<A>, scala.PartialFunction<A, zio.managed.ZManaged<R, E, B>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #1525,  0           // InvokeDynamic #101:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/PartialFunction;Ljava/lang/Object;)Lscala/Function0;
      10: aload_3
      11: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  public <R, E, A, B> zio.managed.ZManaged<R, E, scala.Option<B>> whenCaseManaged(scala.Function0<zio.managed.ZManaged<R, E, A>>, scala.PartialFunction<A, zio.managed.ZManaged<R, E, B>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #1533,  0           // InvokeDynamic #102:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/PartialFunction;Ljava/lang/Object;)Lscala/Function0;
      10: aload_3
      11: invokevirtual #326                // Method suspend:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  public <R, E> scala.Function0 whenManaged(scala.Function0<zio.managed.ZManaged<R, E, java.lang.Object>>);
    Code:
       0: aload_1
       1: areturn

  public <R, E, A> zio.managed.ZManaged<R, E, A> withChildren(scala.Function1<zio.ZIO<java.lang.Object, scala.runtime.Nothing$, zio.Chunk<zio.Fiber$Runtime<java.lang.Object, java.lang.Object>>>, zio.managed.ZManaged<R, E, A>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #1543,  0           // InvokeDynamic #103:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
       9: aload_2
      10: invokevirtual #1545               // Method unwrap:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> withParallism(scala.Function0<java.lang.Object>, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #1039               // Method scoped:()Z
       4: istore_3
       5: getstatic     #1041               // Field zio/managed/ZManaged$ScopedPartiallyApplied$.MODULE$:Lzio/managed/ZManaged$ScopedPartiallyApplied$;
       8: iload_3
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokedynamic #1553,  0           // InvokeDynamic #104:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
      17: aload_2
      18: invokevirtual #1051               // Method zio/managed/ZManaged$ScopedPartiallyApplied$.apply$extension:(ZLscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      21: areturn

  public zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit> withParallismUnbounded(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #1039               // Method scoped:()Z
       4: istore_2
       5: getstatic     #1041               // Field zio/managed/ZManaged$ScopedPartiallyApplied$.MODULE$:Lzio/managed/ZManaged$ScopedPartiallyApplied$;
       8: iload_2
       9: aload_0
      10: aload_1
      11: invokedynamic #1560,  0           // InvokeDynamic #105:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function0;
      16: aload_1
      17: invokevirtual #1051               // Method zio/managed/ZManaged$ScopedPartiallyApplied$.apply$extension:(ZLscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      20: areturn

  public <A> zio.managed.ZManaged<java.lang.Object, scala.runtime.Nothing$, A> succeedNow(A);
    Code:
       0: aload_0
       1: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       4: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       7: getstatic     #1568               // Field zio/managed/ZManaged$Finalizer$.MODULE$:Lzio/managed/ZManaged$Finalizer$;
      10: invokevirtual #1571               // Method zio/managed/ZManaged$Finalizer$.noop:()Lscala/Function1;
      13: aload_1
      14: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      17: invokevirtual #1576               // Method zio/ZIO$.succeedNow:(Ljava/lang/Object;)Lzio/ZIO;
      20: invokevirtual #424                // Method apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      23: areturn

  public final <R, E extends java.lang.Throwable, A> zio.managed.ZManaged RefineToOrDieOps(zio.managed.ZManaged<R, E, A>);
    Code:
       0: aload_1
       1: areturn

  public static final zio.ZIO zio$managed$ZManaged$ReleaseMap$unsafe$$anon$3$$_$add$$anonfun$1$$anonfun$2(zio.Exit);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: invokevirtual #1583               // Method zio/ZIO$.unit:()Lzio/ZIO;
       6: areturn

  public static final scala.None$ zio$managed$ZManaged$ReleaseMap$unsafe$$$_$addIfOpen$$anonfun$1$$anonfun$1();
    Code:
       0: getstatic     #248                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  public static final scala.Some zio$managed$ZManaged$ReleaseMap$unsafe$$$_$addIfOpen$$anonfun$1$$anonfun$2(long, zio.Unsafe);
    Code:
       0: getstatic     #1595               // Field scala/Some$.MODULE$:Lscala/Some$;
       3: lload_0
       4: invokestatic  #1601               // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
       7: invokevirtual #1604               // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
      10: areturn

  public static final scala.Option zio$managed$ZManaged$ReleaseMap$unsafe$$anon$3$$_$get$$anonfun$1(long, zio.managed.ZManaged$State);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: instanceof    #77                 // class zio/managed/ZManaged$Exited
       6: ifeq          46
       9: getstatic     #1612               // Field zio/managed/ZManaged$Exited$.MODULE$:Lzio/managed/ZManaged$Exited$;
      12: aload_3
      13: checkcast     #77                 // class zio/managed/ZManaged$Exited
      16: invokevirtual #1616               // Method zio/managed/ZManaged$Exited$.unapply:(Lzio/managed/ZManaged$Exited;)Lzio/managed/ZManaged$Exited;
      19: astore        4
      21: aload         4
      23: invokevirtual #1620               // Method zio/managed/ZManaged$Exited._1:()J
      26: lstore        5
      28: aload         4
      30: invokevirtual #1624               // Method zio/managed/ZManaged$Exited._2:()Lzio/Exit;
      33: astore        7
      35: aload         4
      37: invokevirtual #1627               // Method zio/managed/ZManaged$Exited._3:()Lscala/Function1;
      40: astore        8
      42: getstatic     #248                // Field scala/None$.MODULE$:Lscala/None$;
      45: areturn
      46: aload_3
      47: instanceof    #115                // class zio/managed/ZManaged$Running
      50: ifeq          97
      53: getstatic     #1629               // Field zio/managed/ZManaged$Running$.MODULE$:Lzio/managed/ZManaged$Running$;
      56: aload_3
      57: checkcast     #115                // class zio/managed/ZManaged$Running
      60: invokevirtual #1632               // Method zio/managed/ZManaged$Running$.unapply:(Lzio/managed/ZManaged$Running;)Lzio/managed/ZManaged$Running;
      63: astore        9
      65: aload         9
      67: invokevirtual #1633               // Method zio/managed/ZManaged$Running._1:()J
      70: lstore        10
      72: aload         9
      74: invokevirtual #1636               // Method zio/managed/ZManaged$Running._2:()Lscala/collection/immutable/LongMap;
      77: astore        12
      79: aload         9
      81: invokevirtual #1637               // Method zio/managed/ZManaged$Running._3:()Lscala/Function1;
      84: astore        13
      86: aload         12
      88: astore        14
      90: aload         14
      92: lload_0
      93: invokevirtual #1642               // Method scala/collection/immutable/LongMap.get:(J)Lscala/Option;
      96: areturn
      97: new           #1644               // class scala/MatchError
     100: dup
     101: aload_3
     102: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     105: athrow

  private static final zio.ZIO release$$anonfun$2$$anonfun$1();
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: invokevirtual #1583               // Method zio/ZIO$.unit:()Lzio/ZIO;
       6: areturn

  private static final zio.ZIO release$$anonfun$2$$anonfun$2(zio.Exit, scala.Function1, scala.Function1);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #1658               // class scala/Function1
      10: aload_0
      11: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #48                 // class zio/ZIO
      19: areturn

  public static final scala.Tuple2 zio$managed$ZManaged$ReleaseMap$unsafe$$anon$3$$_$release$$anonfun$2(long, zio.Exit, zio.managed.ZManaged$State);
    Code:
       0: aload_3
       1: astore        4
       3: aload         4
       5: instanceof    #77                 // class zio/managed/ZManaged$Exited
       8: ifeq          67
      11: getstatic     #1612               // Field zio/managed/ZManaged$Exited$.MODULE$:Lzio/managed/ZManaged$Exited$;
      14: aload         4
      16: checkcast     #77                 // class zio/managed/ZManaged$Exited
      19: invokevirtual #1616               // Method zio/managed/ZManaged$Exited$.unapply:(Lzio/managed/ZManaged$Exited;)Lzio/managed/ZManaged$Exited;
      22: astore        5
      24: aload         5
      26: invokevirtual #1620               // Method zio/managed/ZManaged$Exited._1:()J
      29: lstore        6
      31: aload         5
      33: invokevirtual #1624               // Method zio/managed/ZManaged$Exited._2:()Lzio/Exit;
      36: astore        8
      38: aload         5
      40: invokevirtual #1627               // Method zio/managed/ZManaged$Exited._3:()Lscala/Function1;
      43: astore        9
      45: aload         4
      47: checkcast     #77                 // class zio/managed/ZManaged$Exited
      50: astore        10
      52: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      55: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
      58: invokevirtual #1583               // Method zio/ZIO$.unit:()Lzio/ZIO;
      61: aload         10
      63: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      66: areturn
      67: aload         4
      69: instanceof    #115                // class zio/managed/ZManaged$Running
      72: ifeq          193
      75: aload         4
      77: checkcast     #115                // class zio/managed/ZManaged$Running
      80: astore        11
      82: getstatic     #1629               // Field zio/managed/ZManaged$Running$.MODULE$:Lzio/managed/ZManaged$Running$;
      85: aload         11
      87: invokevirtual #1632               // Method zio/managed/ZManaged$Running$.unapply:(Lzio/managed/ZManaged$Running;)Lzio/managed/ZManaged$Running;
      90: astore        12
      92: aload         12
      94: invokevirtual #1633               // Method zio/managed/ZManaged$Running._1:()J
      97: lstore        13
      99: aload         12
     101: invokevirtual #1636               // Method zio/managed/ZManaged$Running._2:()Lscala/collection/immutable/LongMap;
     104: astore        15
     106: aload         12
     108: invokevirtual #1637               // Method zio/managed/ZManaged$Running._3:()Lscala/Function1;
     111: astore        16
     113: aload         15
     115: astore        17
     117: aload         16
     119: astore        18
     121: aload         11
     123: astore        19
     125: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
     128: aload         17
     130: lload_0
     131: invokevirtual #1642               // Method scala/collection/immutable/LongMap.get:(J)Lscala/Option;
     134: invokedynamic #1670,  0           // InvokeDynamic #106:apply:()Lscala/Function0;
     139: aload_2
     140: aload         18
     142: invokedynamic #1678,  0           // InvokeDynamic #107:apply:(Lzio/Exit;Lscala/Function1;)Lscala/Function1;
     147: invokevirtual #841                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
     150: aload         17
     152: lload_0
     153: invokestatic  #1601               // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
     156: invokevirtual #1682               // Method scala/collection/immutable/LongMap.$minus:(Ljava/lang/Object;)Lscala/collection/immutable/MapOps;
     159: checkcast     #1639               // class scala/collection/immutable/LongMap
     162: astore        20
     164: aload         19
     166: invokevirtual #1685               // Method zio/managed/ZManaged$Running.copy$default$1:()J
     169: lstore        21
     171: aload         19
     173: invokevirtual #1688               // Method zio/managed/ZManaged$Running.copy$default$3:()Lscala/Function1;
     176: astore        23
     178: aload         19
     180: lload         21
     182: aload         20
     184: aload         23
     186: invokevirtual #1692               // Method zio/managed/ZManaged$Running.copy:(JLscala/collection/immutable/LongMap;Lscala/Function1;)Lzio/managed/ZManaged$Running;
     189: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     192: areturn
     193: new           #1644               // class scala/MatchError
     196: dup
     197: aload         4
     199: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     202: athrow

  private static final zio.ZIO releaseAll$$anonfun$1$$anonfun$1(zio.Exit, java.lang.Object, scala.Function1, scala.Tuple2);
    Code:
       0: aload_3
       1: astore        4
       3: aload         4
       5: ifnull        45
       8: aload         4
      10: invokevirtual #1705               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: checkcast     #1658               // class scala/Function1
      16: astore        5
      18: aload_2
      19: aload         5
      21: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #1658               // class scala/Function1
      29: aload_0
      30: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #48                 // class zio/ZIO
      38: aload_1
      39: invokeinterface #1708,  2         // InterfaceMethod zio/ZIO.exit:(Ljava/lang/Object;)Lzio/ZIO;
      44: areturn
      45: new           #1644               // class scala/MatchError
      48: dup
      49: aload         4
      51: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      54: athrow

  private static final zio.Exit releaseAll$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$1();
    Code:
       0: getstatic     #1715               // Field zio/Exit$.MODULE$:Lzio/Exit$;
       3: invokevirtual #1717               // Method zio/Exit$.unit:()Lzio/Exit;
       6: areturn

  private static final zio.Exit releaseAll$$anonfun$1$$anonfun$2$$anonfun$1(scala.collection.Iterable);
    Code:
       0: getstatic     #1715               // Field zio/Exit$.MODULE$:Lzio/Exit$;
       3: aload_0
       4: invokevirtual #1723               // Method zio/Exit$.collectAll:(Lscala/collection/Iterable;)Lscala/Option;
       7: invokedynamic #1728,  0           // InvokeDynamic #108:apply:()Lscala/Function0;
      12: invokevirtual #1732               // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      15: checkcast     #1734               // class zio/Exit
      18: areturn

  private static final zio.ZIO releaseAll$$anonfun$1$$anonfun$2(java.lang.Object, scala.collection.Iterable);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: invokedynamic #1744,  0           // InvokeDynamic #109:apply:(Lscala/collection/Iterable;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #1746               // Method zio/ZIO$.done:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      13: areturn

  private static final zio.ZIO releaseAll$$anonfun$1$$anonfun$3(zio.Exit, java.lang.Object, scala.Function1, scala.Tuple2);
    Code:
       0: aload_3
       1: astore        4
       3: aload         4
       5: ifnull        45
       8: aload         4
      10: invokevirtual #1705               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: checkcast     #1658               // class scala/Function1
      16: astore        5
      18: aload_2
      19: aload         5
      21: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #1658               // class scala/Function1
      29: aload_0
      30: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #48                 // class zio/ZIO
      38: aload_1
      39: invokeinterface #1708,  2         // InterfaceMethod zio/ZIO.exit:(Ljava/lang/Object;)Lzio/ZIO;
      44: areturn
      45: new           #1644               // class scala/MatchError
      48: dup
      49: aload         4
      51: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      54: athrow

  private static final zio.Exit releaseAll$$anonfun$1$$anonfun$4$$anonfun$1$$anonfun$1();
    Code:
       0: getstatic     #1715               // Field zio/Exit$.MODULE$:Lzio/Exit$;
       3: invokevirtual #1717               // Method zio/Exit$.unit:()Lzio/Exit;
       6: areturn

  private static final zio.Exit releaseAll$$anonfun$1$$anonfun$4$$anonfun$1(scala.collection.Iterable);
    Code:
       0: getstatic     #1715               // Field zio/Exit$.MODULE$:Lzio/Exit$;
       3: aload_0
       4: invokevirtual #1755               // Method zio/Exit$.collectAllPar:(Lscala/collection/Iterable;)Lscala/Option;
       7: invokedynamic #1759,  0           // InvokeDynamic #110:apply:()Lscala/Function0;
      12: invokevirtual #1732               // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      15: checkcast     #1734               // class zio/Exit
      18: areturn

  private static final zio.ZIO releaseAll$$anonfun$1$$anonfun$4(java.lang.Object, scala.collection.Iterable);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: invokedynamic #1765,  0           // InvokeDynamic #111:apply:(Lscala/collection/Iterable;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #1746               // Method zio/ZIO$.done:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      13: areturn

  private static final zio.ZIO releaseAll$$anonfun$1$$anonfun$5(zio.Exit, java.lang.Object, scala.Function1, scala.Tuple2);
    Code:
       0: aload_3
       1: astore        4
       3: aload         4
       5: ifnull        45
       8: aload         4
      10: invokevirtual #1705               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: checkcast     #1658               // class scala/Function1
      16: astore        5
      18: aload_2
      19: aload         5
      21: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #1658               // class scala/Function1
      29: aload_0
      30: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #48                 // class zio/ZIO
      38: aload_1
      39: invokeinterface #1708,  2         // InterfaceMethod zio/ZIO.exit:(Ljava/lang/Object;)Lzio/ZIO;
      44: areturn
      45: new           #1644               // class scala/MatchError
      48: dup
      49: aload         4
      51: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      54: athrow

  private static final zio.Exit releaseAll$$anonfun$1$$anonfun$6$$anonfun$1$$anonfun$1();
    Code:
       0: getstatic     #1715               // Field zio/Exit$.MODULE$:Lzio/Exit$;
       3: invokevirtual #1717               // Method zio/Exit$.unit:()Lzio/Exit;
       6: areturn

  private static final zio.Exit releaseAll$$anonfun$1$$anonfun$6$$anonfun$1(scala.collection.Iterable);
    Code:
       0: getstatic     #1715               // Field zio/Exit$.MODULE$:Lzio/Exit$;
       3: aload_0
       4: invokevirtual #1755               // Method zio/Exit$.collectAllPar:(Lscala/collection/Iterable;)Lscala/Option;
       7: invokedynamic #1776,  0           // InvokeDynamic #112:apply:()Lscala/Function0;
      12: invokevirtual #1732               // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      15: checkcast     #1734               // class zio/Exit
      18: areturn

  private static final zio.ZIO releaseAll$$anonfun$1$$anonfun$6(java.lang.Object, scala.collection.Iterable);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: invokedynamic #1782,  0           // InvokeDynamic #113:apply:(Lscala/collection/Iterable;)Lscala/Function0;
       9: aload_0
      10: invokevirtual #1746               // Method zio/ZIO$.done:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      13: areturn

  private static final int releaseAll$$anonfun$1$$anonfun$7(int);
    Code:
       0: iload_0
       1: ireturn

  public static final scala.Tuple2 zio$managed$ZManaged$ReleaseMap$unsafe$$anon$3$$_$releaseAll$$anonfun$1(zio.Exit, zio.ExecutionStrategy, java.lang.Object, zio.managed.ZManaged$State);
    Code:
       0: aload_3
       1: astore        4
       3: aload         4
       5: instanceof    #77                 // class zio/managed/ZManaged$Exited
       8: ifeq          67
      11: getstatic     #1612               // Field zio/managed/ZManaged$Exited$.MODULE$:Lzio/managed/ZManaged$Exited$;
      14: aload         4
      16: checkcast     #77                 // class zio/managed/ZManaged$Exited
      19: invokevirtual #1616               // Method zio/managed/ZManaged$Exited$.unapply:(Lzio/managed/ZManaged$Exited;)Lzio/managed/ZManaged$Exited;
      22: astore        5
      24: aload         5
      26: invokevirtual #1620               // Method zio/managed/ZManaged$Exited._1:()J
      29: lstore        6
      31: aload         5
      33: invokevirtual #1624               // Method zio/managed/ZManaged$Exited._2:()Lzio/Exit;
      36: astore        8
      38: aload         5
      40: invokevirtual #1627               // Method zio/managed/ZManaged$Exited._3:()Lscala/Function1;
      43: astore        9
      45: aload         4
      47: checkcast     #77                 // class zio/managed/ZManaged$Exited
      50: astore        10
      52: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      55: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
      58: invokevirtual #1583               // Method zio/ZIO$.unit:()Lzio/ZIO;
      61: aload         10
      63: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      66: areturn
      67: aload         4
      69: instanceof    #115                // class zio/managed/ZManaged$Running
      72: ifeq          363
      75: getstatic     #1629               // Field zio/managed/ZManaged$Running$.MODULE$:Lzio/managed/ZManaged$Running$;
      78: aload         4
      80: checkcast     #115                // class zio/managed/ZManaged$Running
      83: invokevirtual #1632               // Method zio/managed/ZManaged$Running$.unapply:(Lzio/managed/ZManaged$Running;)Lzio/managed/ZManaged$Running;
      86: astore        11
      88: aload         11
      90: invokevirtual #1633               // Method zio/managed/ZManaged$Running._1:()J
      93: lstore        12
      95: aload         11
      97: invokevirtual #1636               // Method zio/managed/ZManaged$Running._2:()Lscala/collection/immutable/LongMap;
     100: astore        14
     102: aload         11
     104: invokevirtual #1637               // Method zio/managed/ZManaged$Running._3:()Lscala/Function1;
     107: astore        15
     109: lload         12
     111: lstore        16
     113: aload         14
     115: astore        18
     117: aload         15
     119: astore        19
     121: aload_1
     122: astore        20
     124: getstatic     #1794               // Field zio/ExecutionStrategy$Sequential$.MODULE$:Lzio/ExecutionStrategy$Sequential$;
     127: aload         20
     129: invokevirtual #1798               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     132: ifeq          189
     135: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
     138: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
     141: aload         18
     143: aload_0
     144: aload_2
     145: aload         19
     147: invokedynamic #1806,  0           // InvokeDynamic #114:apply:(Lzio/Exit;Ljava/lang/Object;Lscala/Function1;)Lscala/Function1;
     152: getstatic     #507                // Field scala/collection/BuildFrom$.MODULE$:Lscala/collection/BuildFrom$;
     155: invokevirtual #511                // Method scala/collection/BuildFrom$.buildFromIterableOps:()Lscala/collection/BuildFrom;
     158: aload_2
     159: invokevirtual #811                // Method zio/ZIO$.foreach:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/ZIO;
     162: aload_2
     163: invokedynamic #1814,  0           // InvokeDynamic #115:apply:(Ljava/lang/Object;)Lscala/Function1;
     168: aload_2
     169: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
     174: getstatic     #1612               // Field zio/managed/ZManaged$Exited$.MODULE$:Lzio/managed/ZManaged$Exited$;
     177: lload         16
     179: aload_0
     180: aload         19
     182: invokevirtual #1817               // Method zio/managed/ZManaged$Exited$.apply:(JLzio/Exit;Lscala/Function1;)Lzio/managed/ZManaged$Exited;
     185: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     188: areturn
     189: getstatic     #1820               // Field zio/ExecutionStrategy$Parallel$.MODULE$:Lzio/ExecutionStrategy$Parallel$;
     192: aload         20
     194: invokevirtual #1798               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     197: ifeq          254
     200: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
     203: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
     206: aload         18
     208: aload_0
     209: aload_2
     210: aload         19
     212: invokedynamic #1824,  0           // InvokeDynamic #116:apply:(Lzio/Exit;Ljava/lang/Object;Lscala/Function1;)Lscala/Function1;
     217: getstatic     #507                // Field scala/collection/BuildFrom$.MODULE$:Lscala/collection/BuildFrom$;
     220: invokevirtual #511                // Method scala/collection/BuildFrom$.buildFromIterableOps:()Lscala/collection/BuildFrom;
     223: aload_2
     224: invokevirtual #1826               // Method zio/ZIO$.foreachPar:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/ZIO;
     227: aload_2
     228: invokedynamic #1830,  0           // InvokeDynamic #117:apply:(Ljava/lang/Object;)Lscala/Function1;
     233: aload_2
     234: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
     239: getstatic     #1612               // Field zio/managed/ZManaged$Exited$.MODULE$:Lzio/managed/ZManaged$Exited$;
     242: lload         16
     244: aload_0
     245: aload         19
     247: invokevirtual #1817               // Method zio/managed/ZManaged$Exited$.apply:(JLzio/Exit;Lscala/Function1;)Lzio/managed/ZManaged$Exited;
     250: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     253: areturn
     254: aload         20
     256: instanceof    #16                 // class zio/ExecutionStrategy$ParallelN
     259: ifeq          353
     262: getstatic     #1833               // Field zio/ExecutionStrategy$ParallelN$.MODULE$:Lzio/ExecutionStrategy$ParallelN$;
     265: aload         20
     267: checkcast     #16                 // class zio/ExecutionStrategy$ParallelN
     270: invokevirtual #1836               // Method zio/ExecutionStrategy$ParallelN$.unapply:(Lzio/ExecutionStrategy$ParallelN;)Lzio/ExecutionStrategy$ParallelN;
     273: astore        21
     275: aload         21
     277: invokevirtual #1839               // Method zio/ExecutionStrategy$ParallelN._1:()I
     280: istore        22
     282: iload         22
     284: istore        23
     286: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
     289: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
     292: aload         18
     294: aload_0
     295: aload_2
     296: aload         19
     298: invokedynamic #1843,  0           // InvokeDynamic #118:apply:(Lzio/Exit;Ljava/lang/Object;Lscala/Function1;)Lscala/Function1;
     303: getstatic     #507                // Field scala/collection/BuildFrom$.MODULE$:Lscala/collection/BuildFrom$;
     306: invokevirtual #511                // Method scala/collection/BuildFrom$.buildFromIterableOps:()Lscala/collection/BuildFrom;
     309: aload_2
     310: invokevirtual #1826               // Method zio/ZIO$.foreachPar:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/ZIO;
     313: aload_2
     314: invokedynamic #1847,  0           // InvokeDynamic #119:apply:(Ljava/lang/Object;)Lscala/Function1;
     319: aload_2
     320: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
     325: iload         23
     327: invokedynamic #1854,  0           // InvokeDynamic #120:apply:(I)Lscala/Function0;
     332: aload_2
     333: invokeinterface #1857,  3         // InterfaceMethod zio/ZIO.withParallelism:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
     338: getstatic     #1612               // Field zio/managed/ZManaged$Exited$.MODULE$:Lzio/managed/ZManaged$Exited$;
     341: lload         16
     343: aload_0
     344: aload         19
     346: invokevirtual #1817               // Method zio/managed/ZManaged$Exited$.apply:(JLzio/Exit;Lscala/Function1;)Lzio/managed/ZManaged$Exited;
     349: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     352: areturn
     353: new           #1644               // class scala/MatchError
     356: dup
     357: aload         20
     359: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     362: athrow
     363: new           #1644               // class scala/MatchError
     366: dup
     367: aload         4
     369: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     372: athrow

  public static final scala.Tuple2 zio$managed$ZManaged$ReleaseMap$unsafe$$anon$3$$_$remove$$anonfun$1(long, zio.managed.ZManaged$State);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: instanceof    #77                 // class zio/managed/ZManaged$Exited
       6: ifeq          76
       9: getstatic     #1612               // Field zio/managed/ZManaged$Exited$.MODULE$:Lzio/managed/ZManaged$Exited$;
      12: aload_3
      13: checkcast     #77                 // class zio/managed/ZManaged$Exited
      16: invokevirtual #1616               // Method zio/managed/ZManaged$Exited$.unapply:(Lzio/managed/ZManaged$Exited;)Lzio/managed/ZManaged$Exited;
      19: astore        4
      21: aload         4
      23: invokevirtual #1620               // Method zio/managed/ZManaged$Exited._1:()J
      26: lstore        5
      28: aload         4
      30: invokevirtual #1624               // Method zio/managed/ZManaged$Exited._2:()Lzio/Exit;
      33: astore        7
      35: aload         4
      37: invokevirtual #1627               // Method zio/managed/ZManaged$Exited._3:()Lscala/Function1;
      40: astore        8
      42: lload         5
      44: lstore        9
      46: aload         7
      48: astore        11
      50: aload         8
      52: astore        12
      54: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      57: getstatic     #248                // Field scala/None$.MODULE$:Lscala/None$;
      60: getstatic     #1612               // Field zio/managed/ZManaged$Exited$.MODULE$:Lzio/managed/ZManaged$Exited$;
      63: lload         9
      65: aload         11
      67: aload         12
      69: invokevirtual #1817               // Method zio/managed/ZManaged$Exited$.apply:(JLzio/Exit;Lscala/Function1;)Lzio/managed/ZManaged$Exited;
      72: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      75: areturn
      76: aload_3
      77: instanceof    #115                // class zio/managed/ZManaged$Running
      80: ifeq          163
      83: getstatic     #1629               // Field zio/managed/ZManaged$Running$.MODULE$:Lzio/managed/ZManaged$Running$;
      86: aload_3
      87: checkcast     #115                // class zio/managed/ZManaged$Running
      90: invokevirtual #1632               // Method zio/managed/ZManaged$Running$.unapply:(Lzio/managed/ZManaged$Running;)Lzio/managed/ZManaged$Running;
      93: astore        13
      95: aload         13
      97: invokevirtual #1633               // Method zio/managed/ZManaged$Running._1:()J
     100: lstore        14
     102: aload         13
     104: invokevirtual #1636               // Method zio/managed/ZManaged$Running._2:()Lscala/collection/immutable/LongMap;
     107: astore        16
     109: aload         13
     111: invokevirtual #1637               // Method zio/managed/ZManaged$Running._3:()Lscala/Function1;
     114: astore        17
     116: lload         14
     118: lstore        18
     120: aload         16
     122: astore        20
     124: aload         17
     126: astore        21
     128: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
     131: aload         20
     133: lload_0
     134: invokevirtual #1642               // Method scala/collection/immutable/LongMap.get:(J)Lscala/Option;
     137: getstatic     #1629               // Field zio/managed/ZManaged$Running$.MODULE$:Lzio/managed/ZManaged$Running$;
     140: lload         18
     142: aload         20
     144: lload_0
     145: invokestatic  #1601               // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
     148: invokevirtual #1682               // Method scala/collection/immutable/LongMap.$minus:(Ljava/lang/Object;)Lscala/collection/immutable/MapOps;
     151: checkcast     #1639               // class scala/collection/immutable/LongMap
     154: aload         21
     156: invokevirtual #1864               // Method zio/managed/ZManaged$Running$.apply:(JLscala/collection/immutable/LongMap;Lscala/Function1;)Lzio/managed/ZManaged$Running;
     159: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     162: areturn
     163: new           #1644               // class scala/MatchError
     166: dup
     167: aload_3
     168: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     171: athrow

  private static final scala.None$ replace$$anonfun$1$$anonfun$1();
    Code:
       0: getstatic     #248                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  private static final scala.Option replace$$anonfun$1$$anonfun$2(long, scala.collection.immutable.LongMap, zio.Unsafe);
    Code:
       0: aload_2
       1: lload_0
       2: invokevirtual #1642               // Method scala/collection/immutable/LongMap.get:(J)Lscala/Option;
       5: areturn

  public static final scala.Tuple2 zio$managed$ZManaged$ReleaseMap$unsafe$$anon$3$$_$replace$$anonfun$1(long, scala.Function1, java.lang.Object, zio.managed.ZManaged$State);
    Code:
       0: aload         4
       2: astore        5
       4: aload         5
       6: instanceof    #77                 // class zio/managed/ZManaged$Exited
       9: ifeq          99
      12: getstatic     #1612               // Field zio/managed/ZManaged$Exited$.MODULE$:Lzio/managed/ZManaged$Exited$;
      15: aload         5
      17: checkcast     #77                 // class zio/managed/ZManaged$Exited
      20: invokevirtual #1616               // Method zio/managed/ZManaged$Exited$.unapply:(Lzio/managed/ZManaged$Exited;)Lzio/managed/ZManaged$Exited;
      23: astore        6
      25: aload         6
      27: invokevirtual #1620               // Method zio/managed/ZManaged$Exited._1:()J
      30: lstore        7
      32: aload         6
      34: invokevirtual #1624               // Method zio/managed/ZManaged$Exited._2:()Lzio/Exit;
      37: astore        9
      39: aload         6
      41: invokevirtual #1627               // Method zio/managed/ZManaged$Exited._3:()Lscala/Function1;
      44: astore        10
      46: lload         7
      48: lstore        11
      50: aload         9
      52: astore        13
      54: aload         10
      56: astore        14
      58: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      61: aload_2
      62: aload         13
      64: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #48                 // class zio/ZIO
      72: invokedynamic #1881,  0           // InvokeDynamic #121:apply:()Lscala/Function0;
      77: aload_3
      78: invokeinterface #1883,  3         // InterfaceMethod zio/ZIO.as:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      83: getstatic     #1612               // Field zio/managed/ZManaged$Exited$.MODULE$:Lzio/managed/ZManaged$Exited$;
      86: lload         11
      88: aload         13
      90: aload         14
      92: invokevirtual #1817               // Method zio/managed/ZManaged$Exited$.apply:(JLzio/Exit;Lscala/Function1;)Lzio/managed/ZManaged$Exited;
      95: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      98: areturn
      99: aload         5
     101: instanceof    #115                // class zio/managed/ZManaged$Running
     104: ifeq          192
     107: getstatic     #1629               // Field zio/managed/ZManaged$Running$.MODULE$:Lzio/managed/ZManaged$Running$;
     110: aload         5
     112: checkcast     #115                // class zio/managed/ZManaged$Running
     115: invokevirtual #1632               // Method zio/managed/ZManaged$Running$.unapply:(Lzio/managed/ZManaged$Running;)Lzio/managed/ZManaged$Running;
     118: astore        15
     120: aload         15
     122: invokevirtual #1633               // Method zio/managed/ZManaged$Running._1:()J
     125: lstore        16
     127: aload         15
     129: invokevirtual #1636               // Method zio/managed/ZManaged$Running._2:()Lscala/collection/immutable/LongMap;
     132: astore        18
     134: aload         15
     136: invokevirtual #1637               // Method zio/managed/ZManaged$Running._3:()Lscala/Function1;
     139: astore        19
     141: lload         16
     143: lstore        20
     145: aload         18
     147: astore        22
     149: aload         19
     151: astore        23
     153: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
     156: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
     159: lload_0
     160: aload         22
     162: invokedynamic #1891,  0           // InvokeDynamic #122:apply:(JLscala/collection/immutable/LongMap;)Lscala/Function1;
     167: aload_3
     168: invokevirtual #1447               // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
     171: getstatic     #1629               // Field zio/managed/ZManaged$Running$.MODULE$:Lzio/managed/ZManaged$Running$;
     174: lload         20
     176: aload         22
     178: lload_0
     179: aload_2
     180: invokevirtual #1895               // Method scala/collection/immutable/LongMap.updated:(JLjava/lang/Object;)Lscala/collection/immutable/LongMap;
     183: aload         23
     185: invokevirtual #1864               // Method zio/managed/ZManaged$Running$.apply:(JLscala/collection/immutable/LongMap;Lscala/Function1;)Lzio/managed/ZManaged$Running;
     188: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     191: areturn
     192: new           #1644               // class scala/MatchError
     195: dup
     196: aload         5
     198: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     201: athrow

  public static final zio.managed.ZManaged$State zio$managed$ZManaged$ReleaseMap$unsafe$$anon$3$$_$updateAll$$anonfun$1(scala.Function1, zio.managed.ZManaged$State);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #77                 // class zio/managed/ZManaged$Exited
       6: ifeq          71
       9: getstatic     #1612               // Field zio/managed/ZManaged$Exited$.MODULE$:Lzio/managed/ZManaged$Exited$;
      12: aload_2
      13: checkcast     #77                 // class zio/managed/ZManaged$Exited
      16: invokevirtual #1616               // Method zio/managed/ZManaged$Exited$.unapply:(Lzio/managed/ZManaged$Exited;)Lzio/managed/ZManaged$Exited;
      19: astore_3
      20: aload_3
      21: invokevirtual #1620               // Method zio/managed/ZManaged$Exited._1:()J
      24: lstore        4
      26: aload_3
      27: invokevirtual #1624               // Method zio/managed/ZManaged$Exited._2:()Lzio/Exit;
      30: astore        6
      32: aload_3
      33: invokevirtual #1627               // Method zio/managed/ZManaged$Exited._3:()Lscala/Function1;
      36: astore        7
      38: lload         4
      40: lstore        8
      42: aload         6
      44: astore        10
      46: aload         7
      48: astore        11
      50: getstatic     #1612               // Field zio/managed/ZManaged$Exited$.MODULE$:Lzio/managed/ZManaged$Exited$;
      53: lload         8
      55: aload         10
      57: aload         11
      59: aload_0
      60: invokeinterface #1902,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      65: invokevirtual #1817               // Method zio/managed/ZManaged$Exited$.apply:(JLzio/Exit;Lscala/Function1;)Lzio/managed/ZManaged$Exited;
      68: goto          153
      71: aload_2
      72: instanceof    #115                // class zio/managed/ZManaged$Running
      75: ifeq          144
      78: getstatic     #1629               // Field zio/managed/ZManaged$Running$.MODULE$:Lzio/managed/ZManaged$Running$;
      81: aload_2
      82: checkcast     #115                // class zio/managed/ZManaged$Running
      85: invokevirtual #1632               // Method zio/managed/ZManaged$Running$.unapply:(Lzio/managed/ZManaged$Running;)Lzio/managed/ZManaged$Running;
      88: astore        12
      90: aload         12
      92: invokevirtual #1633               // Method zio/managed/ZManaged$Running._1:()J
      95: lstore        13
      97: aload         12
      99: invokevirtual #1636               // Method zio/managed/ZManaged$Running._2:()Lscala/collection/immutable/LongMap;
     102: astore        15
     104: aload         12
     106: invokevirtual #1637               // Method zio/managed/ZManaged$Running._3:()Lscala/Function1;
     109: astore        16
     111: lload         13
     113: lstore        17
     115: aload         15
     117: astore        19
     119: aload         16
     121: astore        20
     123: getstatic     #1629               // Field zio/managed/ZManaged$Running$.MODULE$:Lzio/managed/ZManaged$Running$;
     126: lload         17
     128: aload         19
     130: aload         20
     132: aload_0
     133: invokeinterface #1902,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     138: invokevirtual #1864               // Method zio/managed/ZManaged$Running$.apply:(JLscala/collection/immutable/LongMap;Lscala/Function1;)Lzio/managed/ZManaged$Running;
     141: goto          153
     144: new           #1644               // class scala/MatchError
     147: dup
     148: aload_2
     149: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     152: athrow
     153: checkcast     #154                // class zio/managed/ZManaged$State
     156: areturn

  private final scala.util.Either absolve$$anonfun$2$$anonfun$1$$anonfun$1(scala.util.Either);
    Code:
       0: aload_1
       1: areturn

  private final zio.managed.ZManaged absolve$$anonfun$2$$anonfun$1(java.lang.Object, scala.util.Either);
    Code:
       0: aload_0
       1: aload_0
       2: aload_2
       3: invokedynamic #1917,  0           // InvokeDynamic #123:apply:(Lzio/managed/ZManaged$;Lscala/util/Either;)Lscala/Function0;
       8: aload_1
       9: invokevirtual #1919               // Method fromEither:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  private final zio.managed.ZManaged absolve$$anonfun$2(scala.Function0, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #59                 // class zio/managed/ZManaged
       9: aload_0
      10: aload_2
      11: invokedynamic #1929,  0           // InvokeDynamic #124:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      16: aload_2
      17: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      20: areturn

  private final zio.ZIO acquireRelease$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #48                 // class zio/ZIO
       9: areturn

  private final java.lang.Object acquireReleaseAttempt$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: areturn

  private final java.lang.Object acquireReleaseAttemptWith$$anonfun$1$$anonfun$1(scala.Function0, zio.Unsafe);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: areturn

  private final zio.ZIO acquireReleaseAttemptWith$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: aload_1
       5: invokedynamic #1945,  0           // InvokeDynamic #125:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function1;
      10: aload_2
      11: invokevirtual #1947               // Method zio/ZIO$.attempt:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  private final java.lang.Object acquireReleaseAttemptWith$$anonfun$2$$anonfun$1(scala.Function1, java.lang.Object, zio.Unsafe);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  private final zio.ZIO acquireReleaseAttemptWith$$anonfun$2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: aload_1
       5: aload_3
       6: invokedynamic #1958,  0           // InvokeDynamic #126:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      11: aload_2
      12: invokevirtual #1947               // Method zio/ZIO$.attempt:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      15: getstatic     #1963               // Field zio/IsSubtypeOfError$.MODULE$:Lzio/IsSubtypeOfError$;
      18: getstatic     #1248               // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
      21: invokevirtual #1252               // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
      24: invokevirtual #1966               // Method zio/IsSubtypeOfError$.impl:(Lscala/$less$colon$less;)Lzio/IsSubtypeOfError;
      27: getstatic     #1971               // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
      30: getstatic     #1976               // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
      33: invokevirtual #1979               // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      36: invokevirtual #1983               // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      39: aload_2
      40: invokeinterface #1987,  4         // InterfaceMethod zio/ZIO.orDie:(Lzio/IsSubtypeOfError;Lzio/CanFail;Ljava/lang/Object;)Lzio/ZIO;
      45: areturn

  private final zio.ZIO acquireReleaseExit$$anonfun$1(scala.Function1, java.lang.Object, zio.Exit);
    Code:
       0: aload_1
       1: aload_3
       2: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #48                 // class zio/ZIO
      10: areturn

  private final zio.ZEnvironment acquireReleaseExitWith$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(zio.ZEnvironment);
    Code:
       0: aload_1
       1: areturn

  private final zio.ZIO acquireReleaseExitWith$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(scala.Function2, java.lang.Object, zio.ZEnvironment, java.lang.Object, zio.Exit);
    Code:
       0: aload_1
       1: aload         4
       3: aload         5
       5: invokeinterface #2004,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #48                 // class zio/ZIO
      13: aload_0
      14: aload_3
      15: invokedynamic #2012,  0           // InvokeDynamic #127:apply:(Lzio/managed/ZManaged$;Lzio/ZEnvironment;)Lscala/Function0;
      20: aload_2
      21: invokeinterface #2015,  3         // InterfaceMethod zio/ZIO.provideEnvironment:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      26: areturn

  private final scala.Tuple2 acquireReleaseExitWith$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2(java.lang.Object, scala.Function1);
    Code:
       0: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: aload_2
       4: aload_1
       5: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       8: areturn

  private final zio.ZIO acquireReleaseExitWith$$anonfun$1$$anonfun$1$$anonfun$1(scala.Function2, java.lang.Object, zio.ZEnvironment, zio.managed.ZManaged$ReleaseMap, java.lang.Object);
    Code:
       0: aload         4
       2: aload_0
       3: aload_1
       4: aload_2
       5: aload_3
       6: aload         5
       8: invokedynamic #2031,  0           // InvokeDynamic #128:apply:(Lzio/managed/ZManaged$;Lscala/Function2;Ljava/lang/Object;Lzio/ZEnvironment;Ljava/lang/Object;)Lscala/Function1;
      13: aload_2
      14: invokevirtual #2034               // Method zio/managed/ZManaged$ReleaseMap.add:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      17: aload_0
      18: aload         5
      20: invokedynamic #2040,  0           // InvokeDynamic #129:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      25: aload_2
      26: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      31: areturn

  private final zio.ZIO acquireReleaseExitWith$$anonfun$1$$anonfun$1(scala.Function0, scala.Function2, java.lang.Object, zio.ZEnvironment, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #48                 // class zio/ZIO
       9: aload_0
      10: aload_2
      11: aload_3
      12: aload         4
      14: aload         5
      16: invokedynamic #2053,  0           // InvokeDynamic #130:apply:(Lzio/managed/ZManaged$;Lscala/Function2;Ljava/lang/Object;Lzio/ZEnvironment;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      21: aload_3
      22: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      27: areturn

  private final zio.ZIO acquireReleaseExitWith$$anonfun$1(scala.Function0, scala.Function2, java.lang.Object, zio.ZEnvironment);
    Code:
       0: aload_0
       1: invokevirtual #1345               // Method currentReleaseMap:()Lzio/FiberRef;
       4: aload_3
       5: invokeinterface #1348,  2         // InterfaceMethod zio/FiberRef.get:(Ljava/lang/Object;)Lzio/ZIO;
      10: aload_0
      11: aload_1
      12: aload_2
      13: aload_3
      14: aload         4
      16: invokedynamic #2062,  0           // InvokeDynamic #131:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;Lzio/ZEnvironment;)Lscala/Function1;
      21: aload_3
      22: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      27: areturn

  private final zio.ZIO acquireReleaseInterruptible$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #48                 // class zio/ZIO
       9: areturn

  private final zio.ZIO acquireReleaseInterruptibleWith$$anonfun$1(scala.Function1, java.lang.Object, zio.Exit);
    Code:
       0: aload_3
       1: aload_1
       2: aload_2
       3: invokeinterface #2069,  3         // InterfaceMethod zio/Exit.foreach:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
       8: areturn

  private final java.lang.Object acquireReleaseSucceed$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: areturn

  private final java.lang.Object acquireReleaseSucceedWith$$anonfun$1$$anonfun$1(scala.Function0, zio.Unsafe);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: areturn

  private final zio.ZIO acquireReleaseSucceedWith$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: aload_1
       5: invokedynamic #2080,  0           // InvokeDynamic #132:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function1;
      10: aload_2
      11: invokevirtual #1447               // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  private final java.lang.Object acquireReleaseSucceedWith$$anonfun$2$$anonfun$1(scala.Function1, java.lang.Object, zio.Unsafe);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  private final zio.ZIO acquireReleaseSucceedWith$$anonfun$2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: aload_1
       5: aload_3
       6: invokedynamic #2090,  0           // InvokeDynamic #133:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      11: aload_2
      12: invokevirtual #1447               // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      15: areturn

  private final zio.ZIO acquireReleaseWith$$anonfun$1(scala.Function1, java.lang.Object, zio.Exit);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #48                 // class zio/ZIO
      10: areturn

  private final java.lang.Object attempt$$anonfun$1$$anonfun$1(scala.Function0, zio.Unsafe);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: areturn

  private final zio.ZIO attempt$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: aload_1
       5: invokedynamic #2101,  0           // InvokeDynamic #134:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function1;
      10: aload_2
      11: invokevirtual #1947               // Method zio/ZIO$.attempt:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  private final zio.managed.ZManaged collect$$anonfun$2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_3
       2: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #59                 // class zio/managed/ZManaged
      10: getstatic     #1963               // Field zio/IsSubtypeOfError$.MODULE$:Lzio/IsSubtypeOfError$;
      13: getstatic     #1248               // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
      16: invokevirtual #1252               // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
      19: invokevirtual #1966               // Method zio/IsSubtypeOfError$.impl:(Lscala/$less$colon$less;)Lzio/IsSubtypeOfError;
      22: aload_2
      23: invokevirtual #2107               // Method zio/managed/ZManaged.unsome:(Lzio/IsSubtypeOfError;Ljava/lang/Object;)Lzio/managed/ZManaged;
      26: areturn

  private final scala.collection.Iterable collect$$anonfun$3(scala.collection.Iterable);
    Code:
       0: aload_1
       1: getstatic     #1308               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       4: invokevirtual #2111               // Method scala/Predef$.$conforms:()Lscala/Function1;
       7: invokeinterface #2114,  2         // InterfaceMethod scala/collection/Iterable.flatten:(Lscala/Function1;)Ljava/lang/Object;
      12: checkcast     #797                // class scala/collection/Iterable
      15: areturn

  private final scala.collection.Iterable collect$$anonfun$4(scala.collection.Iterable, scala.collection.BuildFrom, scala.collection.Iterable);
    Code:
       0: aload_2
       1: aload_1
       2: aload_3
       3: invokeinterface #2123,  3         // InterfaceMethod scala/collection/BuildFrom.fromSpecific:(Ljava/lang/Object;Lscala/collection/IterableOnce;)Ljava/lang/Object;
       8: checkcast     #797                // class scala/collection/Iterable
      11: areturn

  private final scala.collection.Iterator collectFirst$$anonfun$1(scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2126               // class scala/collection/IterableOnce
       9: invokeinterface #2129,  1         // InterfaceMethod scala/collection/IterableOnce.iterator:()Lscala/collection/Iterator;
      14: areturn

  private final zio.managed.ZManaged loop$1$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object, scala.collection.Iterator);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #2136               // Method loop$1:(Lscala/Function1;Ljava/lang/Object;Lscala/collection/Iterator;)Lzio/managed/ZManaged;
       7: areturn

  private final java.lang.Object loop$1$$anonfun$1$$anonfun$2$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final zio.managed.ZManaged loop$1$$anonfun$1$$anonfun$2(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_2
       3: invokedynamic #2147,  0           // InvokeDynamic #135:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function0;
       8: aload_1
       9: invokevirtual #2149               // Method some:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  private final zio.managed.ZManaged loop$1$$anonfun$1(scala.Function1, java.lang.Object, scala.collection.Iterator, scala.Option);
    Code:
       0: aload         4
       2: aload_0
       3: aload_1
       4: aload_2
       5: aload_3
       6: invokedynamic #2161,  0           // InvokeDynamic #136:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;Lscala/collection/Iterator;)Lscala/Function0;
      11: aload_0
      12: aload_2
      13: invokedynamic #2165,  0           // InvokeDynamic #137:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      18: invokevirtual #841                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      21: checkcast     #59                 // class zio/managed/ZManaged
      24: areturn

  private final zio.managed.ZManaged loop$1(scala.Function1, java.lang.Object, scala.collection.Iterator);
    Code:
       0: aload_3
       1: invokeinterface #2173,  1         // InterfaceMethod scala/collection/Iterator.hasNext:()Z
       6: ifeq          38
       9: aload_1
      10: aload_3
      11: invokeinterface #2176,  1         // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      16: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #59                 // class zio/managed/ZManaged
      24: aload_0
      25: aload_1
      26: aload_2
      27: aload_3
      28: invokedynamic #2182,  0           // InvokeDynamic #138:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;Lscala/collection/Iterator;)Lscala/Function1;
      33: aload_2
      34: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      37: areturn
      38: aload_0
      39: invokevirtual #2184               // Method none:()Lzio/managed/ZManaged;
      42: areturn

  private final zio.managed.ZManaged collectFirst$$anonfun$2(scala.Function1, java.lang.Object, scala.collection.Iterator);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #2136               // Method loop$1:(Lscala/Function1;Ljava/lang/Object;Lscala/collection/Iterator;)Lzio/managed/ZManaged;
       7: areturn

  private final zio.managed.ZManaged collectPar$$anonfun$1(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_3
       2: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #59                 // class zio/managed/ZManaged
      10: getstatic     #1963               // Field zio/IsSubtypeOfError$.MODULE$:Lzio/IsSubtypeOfError$;
      13: getstatic     #1248               // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
      16: invokevirtual #1252               // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
      19: invokevirtual #1966               // Method zio/IsSubtypeOfError$.impl:(Lscala/$less$colon$less;)Lzio/IsSubtypeOfError;
      22: aload_2
      23: invokevirtual #2107               // Method zio/managed/ZManaged.unsome:(Lzio/IsSubtypeOfError;Ljava/lang/Object;)Lzio/managed/ZManaged;
      26: areturn

  private final scala.collection.Iterable collectPar$$anonfun$2(scala.collection.Iterable);
    Code:
       0: aload_1
       1: getstatic     #1308               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       4: invokevirtual #2111               // Method scala/Predef$.$conforms:()Lscala/Function1;
       7: invokeinterface #2114,  2         // InterfaceMethod scala/collection/Iterable.flatten:(Lscala/Function1;)Ljava/lang/Object;
      12: checkcast     #797                // class scala/collection/Iterable
      15: areturn

  private final scala.collection.Iterable collectPar$$anonfun$3(scala.collection.Iterable, scala.collection.BuildFrom, scala.collection.Iterable);
    Code:
       0: aload_2
       1: aload_1
       2: aload_3
       3: invokeinterface #2123,  3         // InterfaceMethod scala/collection/BuildFrom.fromSpecific:(Ljava/lang/Object;Lscala/collection/IterableOnce;)Ljava/lang/Object;
       8: checkcast     #797                // class scala/collection/Iterable
      11: areturn

  private final zio.managed.ZManaged cond$$anonfun$1(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: invokestatic  #2198               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       9: ifeq          20
      12: aload_0
      13: aload_2
      14: aload         4
      16: invokevirtual #572                // Method succeed:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      19: areturn
      20: aload_0
      21: aload_3
      22: aload         4
      24: invokevirtual #2200               // Method fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      27: areturn

  private final zio.Cause die$$anonfun$1(scala.Function0);
    Code:
       0: getstatic     #2206               // Field zio/Cause$.MODULE$:Lzio/Cause$;
       3: aload_1
       4: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       9: checkcast     #2208               // class java/lang/Throwable
      12: getstatic     #2206               // Field zio/Cause$.MODULE$:Lzio/Cause$;
      15: invokevirtual #2212               // Method zio/Cause$.die$default$2:()Lzio/StackTrace;
      18: invokevirtual #2215               // Method zio/Cause$.die:(Ljava/lang/Throwable;Lzio/StackTrace;)Lzio/Cause;
      21: areturn

  private final java.lang.RuntimeException dieMessage$$anonfun$1(scala.Function0);
    Code:
       0: new           #2218               // class java/lang/RuntimeException
       3: dup
       4: aload_1
       5: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: checkcast     #2220               // class java/lang/String
      13: invokespecial #2223               // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      16: areturn

  private final zio.ZIO done$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: aload_2
       5: invokevirtual #1746               // Method zio/ZIO$.done:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
       8: areturn

  private final zio.ZIO environment$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: invokevirtual #404                // Method zio/ZIO$.environment:(Ljava/lang/Object;)Lzio/ZIO;
       7: areturn

  private final scala.collection.Iterator exists$$anonfun$1(scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2126               // class scala/collection/IterableOnce
       9: invokeinterface #2129,  1         // InterfaceMethod scala/collection/IterableOnce.iterator:()Lscala/collection/Iterator;
      14: areturn

  private final zio.managed.ZManaged loop$2$$anonfun$1(scala.Function1, java.lang.Object, scala.collection.Iterator, boolean);
    Code:
       0: iload         4
       2: ifeq          15
       5: aload_0
       6: iload         4
       8: invokestatic  #2236               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      11: invokevirtual #252                // Method succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn
      15: aload_0
      16: aload_1
      17: aload_2
      18: aload_3
      19: invokespecial #2239               // Method loop$2:(Lscala/Function1;Ljava/lang/Object;Lscala/collection/Iterator;)Lzio/managed/ZManaged;
      22: areturn

  private zio.managed.ZManaged loop$2$$anonfun$adapted$1(scala.Function1, java.lang.Object, scala.collection.Iterator, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #2198               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       9: invokespecial #2246               // Method loop$2$$anonfun$1:(Lscala/Function1;Ljava/lang/Object;Lscala/collection/Iterator;Z)Lzio/managed/ZManaged;
      12: areturn

  private final zio.managed.ZManaged loop$2(scala.Function1, java.lang.Object, scala.collection.Iterator);
    Code:
       0: aload_3
       1: invokeinterface #2173,  1         // InterfaceMethod scala/collection/Iterator.hasNext:()Z
       6: ifeq          38
       9: aload_1
      10: aload_3
      11: invokeinterface #2176,  1         // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      16: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #59                 // class zio/managed/ZManaged
      24: aload_0
      25: aload_1
      26: aload_2
      27: aload_3
      28: invokedynamic #2253,  0           // InvokeDynamic #139:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;Lscala/collection/Iterator;)Lscala/Function1;
      33: aload_2
      34: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      37: areturn
      38: aload_0
      39: iconst_0
      40: invokestatic  #2236               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      43: invokevirtual #252                // Method succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      46: areturn

  private final zio.managed.ZManaged exists$$anonfun$2(scala.Function1, java.lang.Object, scala.collection.Iterator);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #2239               // Method loop$2:(Lscala/Function1;Ljava/lang/Object;Lscala/collection/Iterator;)Lzio/managed/ZManaged;
       7: areturn

  private final zio.Cause fail$$anonfun$1(scala.Function0);
    Code:
       0: getstatic     #2206               // Field zio/Cause$.MODULE$:Lzio/Cause$;
       3: aload_1
       4: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       9: getstatic     #2206               // Field zio/Cause$.MODULE$:Lzio/Cause$;
      12: invokevirtual #2259               // Method zio/Cause$.fail$default$2:()Lzio/StackTrace;
      15: invokevirtual #2262               // Method zio/Cause$.fail:(Ljava/lang/Object;Lzio/StackTrace;)Lzio/Cause;
      18: areturn

  private final zio.ZIO failCause$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: aload_2
       5: invokevirtual #2266               // Method zio/ZIO$.failCause:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
       8: areturn

  private final zio.ZIO fiberId$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: invokevirtual #1148               // Method zio/ZIO$.fiberId:(Ljava/lang/Object;)Lzio/ZIO;
       7: areturn

  private final zio.ZIO finalizer$$anonfun$1(scala.Function0, zio.Exit);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #48                 // class zio/ZIO
       9: areturn

  private final zio.ZIO finalizerExit$$anonfun$1();
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: invokevirtual #1583               // Method zio/ZIO$.unit:()Lzio/ZIO;
       6: areturn

  private final zio.ZIO finalizerExit$$anonfun$2(scala.Function1, scala.runtime.BoxedUnit, zio.Exit);
    Code:
       0: aload_1
       1: aload_3
       2: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #48                 // class zio/ZIO
      10: areturn

  private final zio.ZIO finalizerRef$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #2279               // Field zio/Ref$.MODULE$:Lzio/Ref$;
       3: aload_1
       4: aload_2
       5: invokevirtual #2281               // Method zio/Ref$.make:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
       8: areturn

  private final zio.ZIO finalizerRef$$anonfun$2$$anonfun$1(zio.Exit, scala.Function1);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #48                 // class zio/ZIO
      10: areturn

  private final zio.ZIO finalizerRef$$anonfun$2(java.lang.Object, zio.Ref, zio.Exit);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #2290               // Method zio/Ref.get:(Ljava/lang/Object;)Lzio/ZIO;
       5: aload_0
       6: aload_3
       7: invokedynamic #2296,  0           // InvokeDynamic #140:apply:(Lzio/managed/ZManaged$;Lzio/Exit;)Lscala/Function1;
      12: aload_1
      13: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      18: areturn

  private final zio.managed.ZManaged firstSuccessOf$$anonfun$2$$anonfun$1$$anonfun$1(zio.managed.ZManaged);
    Code:
       0: aload_1
       1: areturn

  private final zio.managed.ZManaged firstSuccessOf$$anonfun$2$$anonfun$1(java.lang.Object, zio.managed.ZManaged, zio.managed.ZManaged);
    Code:
       0: aload_2
       1: aload_0
       2: aload_3
       3: invokedynamic #2310,  0           // InvokeDynamic #141:apply:(Lzio/managed/ZManaged$;Lzio/managed/ZManaged;)Lscala/Function0;
       8: getstatic     #1971               // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
      11: getstatic     #1976               // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
      14: invokevirtual #1979               // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      17: invokevirtual #1983               // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      20: aload_1
      21: invokevirtual #2314               // Method zio/managed/ZManaged.$less$greater:(Lscala/Function0;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      24: areturn

  private final zio.managed.ZManaged firstSuccessOf$$anonfun$2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_2
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2319               // class scala/collection/IterableOnceOps
       9: aload_1
      10: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      15: aload_0
      16: aload_3
      17: invokedynamic #2325,  0           // InvokeDynamic #142:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function2;
      22: invokeinterface #2328,  3         // InterfaceMethod scala/collection/IterableOnceOps.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      27: checkcast     #59                 // class zio/managed/ZManaged
      30: areturn

  private final zio.managed.ZManaged flatten$$anonfun$1$$anonfun$1(zio.managed.ZManaged);
    Code:
       0: getstatic     #1308               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_1
       4: invokevirtual #2333               // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #59                 // class zio/managed/ZManaged
      10: areturn

  private final zio.managed.ZManaged flatten$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #59                 // class zio/managed/ZManaged
       9: aload_0
      10: invokedynamic #2340,  0           // InvokeDynamic #143:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      15: aload_2
      16: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      19: areturn

  private final zio.ZIO flattenZIO$$anonfun$1$$anonfun$1(zio.ZIO);
    Code:
       0: getstatic     #1308               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_1
       4: invokevirtual #2333               // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #48                 // class zio/ZIO
      10: areturn

  private final zio.managed.ZManaged flattenZIO$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #59                 // class zio/managed/ZManaged
       9: aload_0
      10: invokedynamic #2349,  0           // InvokeDynamic #144:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      15: aload_2
      16: invokevirtual #871                // Method zio/managed/ZManaged.mapZIO:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      19: areturn

  private final zio.managed.ZManaged foldLeft$$anonfun$1$$anonfun$1$$anonfun$1(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_3
       2: aload_2
       3: invokeinterface #2004,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #59                 // class zio/managed/ZManaged
      11: areturn

  private final zio.managed.ZManaged foldLeft$$anonfun$1$$anonfun$1(scala.Function2, java.lang.Object, zio.managed.ZManaged, java.lang.Object);
    Code:
       0: aload_3
       1: aload_0
       2: aload_1
       3: aload         4
       5: invokedynamic #2366,  0           // InvokeDynamic #145:apply:(Lzio/managed/ZManaged$;Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      10: aload_2
      11: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  private final zio.managed.ZManaged foldLeft$$anonfun$1(scala.Function0, scala.Function0, scala.Function2, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2319               // class scala/collection/IterableOnceOps
       9: aload_0
      10: aload_2
      11: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: invokevirtual #252                // Method succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      19: aload_0
      20: aload_3
      21: aload         4
      23: invokedynamic #2377,  0           // InvokeDynamic #146:apply:(Lzio/managed/ZManaged$;Lscala/Function2;Ljava/lang/Object;)Lscala/Function2;
      28: invokeinterface #2328,  3         // InterfaceMethod scala/collection/IterableOnceOps.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      33: checkcast     #59                 // class zio/managed/ZManaged
      36: areturn

  private final scala.collection.Iterator forall$$anonfun$1(scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2126               // class scala/collection/IterableOnce
       9: invokeinterface #2129,  1         // InterfaceMethod scala/collection/IterableOnce.iterator:()Lscala/collection/Iterator;
      14: areturn

  private final zio.managed.ZManaged loop$3$$anonfun$1(scala.Function1, java.lang.Object, scala.collection.Iterator, boolean);
    Code:
       0: iload         4
       2: ifeq          13
       5: aload_0
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokespecial #2385               // Method loop$3:(Lscala/Function1;Ljava/lang/Object;Lscala/collection/Iterator;)Lzio/managed/ZManaged;
      12: areturn
      13: aload_0
      14: iload         4
      16: invokestatic  #2236               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      19: invokevirtual #252                // Method succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      22: areturn

  private zio.managed.ZManaged loop$3$$anonfun$adapted$1(scala.Function1, java.lang.Object, scala.collection.Iterator, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #2198               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       9: invokespecial #2391               // Method loop$3$$anonfun$1:(Lscala/Function1;Ljava/lang/Object;Lscala/collection/Iterator;Z)Lzio/managed/ZManaged;
      12: areturn

  private final zio.managed.ZManaged loop$3(scala.Function1, java.lang.Object, scala.collection.Iterator);
    Code:
       0: aload_3
       1: invokeinterface #2173,  1         // InterfaceMethod scala/collection/Iterator.hasNext:()Z
       6: ifeq          38
       9: aload_1
      10: aload_3
      11: invokeinterface #2176,  1         // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      16: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #59                 // class zio/managed/ZManaged
      24: aload_0
      25: aload_1
      26: aload_2
      27: aload_3
      28: invokedynamic #2398,  0           // InvokeDynamic #147:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;Lscala/collection/Iterator;)Lscala/Function1;
      33: aload_2
      34: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      37: areturn
      38: aload_0
      39: iconst_1
      40: invokestatic  #2236               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      43: invokevirtual #252                // Method succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      46: areturn

  private final zio.managed.ZManaged forall$$anonfun$2(scala.Function1, java.lang.Object, scala.collection.Iterator);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #2385               // Method loop$3:(Lscala/Function1;Ljava/lang/Object;Lscala/collection/Iterator;)Lzio/managed/ZManaged;
       7: areturn

  private final zio.ZIO foreach$$anonfun$1(scala.Function1, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #59                 // class zio/managed/ZManaged
      10: invokevirtual #2405               // Method zio/managed/ZManaged.zio:()Lzio/ZIO;
      13: areturn

  private final zio.ZIO foreach$$anonfun$2$$anonfun$1$$anonfun$1(zio.Exit, scala.Function1);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #48                 // class zio/ZIO
      10: areturn

  private final zio.ZIO foreach$$anonfun$2$$anonfun$1(java.lang.Object, scala.collection.immutable.List, zio.Exit);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_2
       4: invokevirtual #2415               // Method scala/collection/immutable/List.reverse:()Lscala/collection/immutable/List;
       7: aload_0
       8: aload_3
       9: invokedynamic #2419,  0           // InvokeDynamic #148:apply:(Lzio/managed/ZManaged$;Lzio/Exit;)Lscala/Function1;
      14: getstatic     #507                // Field scala/collection/BuildFrom$.MODULE$:Lscala/collection/BuildFrom$;
      17: invokevirtual #511                // Method scala/collection/BuildFrom$.buildFromIterableOps:()Lscala/collection/BuildFrom;
      20: aload_1
      21: invokevirtual #811                // Method zio/ZIO$.foreach:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/ZIO;
      24: areturn

  private final scala.Tuple2 foreach$$anonfun$2(scala.collection.Iterable, scala.collection.BuildFrom, java.lang.Object, scala.collection.immutable.List);
    Code:
       0: aload         4
       2: getstatic     #1308               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       5: invokevirtual #2111               // Method scala/Predef$.$conforms:()Lscala/Function1;
       8: invokevirtual #2426               // Method scala/collection/immutable/List.unzip:(Lscala/Function1;)Lscala/Tuple2;
      11: astore        6
      13: aload         6
      15: ifnull        51
      18: aload         6
      20: invokevirtual #2428               // Method scala/Tuple2._1:()Ljava/lang/Object;
      23: checkcast     #1289               // class scala/collection/immutable/List
      26: astore        7
      28: aload         6
      30: invokevirtual #1705               // Method scala/Tuple2._2:()Ljava/lang/Object;
      33: checkcast     #1289               // class scala/collection/immutable/List
      36: astore        8
      38: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      41: aload         7
      43: aload         8
      45: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      48: goto          61
      51: new           #1644               // class scala/MatchError
      54: dup
      55: aload         6
      57: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      60: athrow
      61: astore        5
      63: aload         5
      65: invokevirtual #2428               // Method scala/Tuple2._1:()Ljava/lang/Object;
      68: checkcast     #1289               // class scala/collection/immutable/List
      71: astore        9
      73: aload         5
      75: invokevirtual #1705               // Method scala/Tuple2._2:()Ljava/lang/Object;
      78: checkcast     #1289               // class scala/collection/immutable/List
      81: astore        10
      83: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      86: aload_0
      87: aload_3
      88: aload         9
      90: invokedynamic #2434,  0           // InvokeDynamic #149:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;Lscala/collection/immutable/List;)Lscala/Function1;
      95: aload_2
      96: aload_1
      97: aload         10
      99: invokeinterface #2123,  3         // InterfaceMethod scala/collection/BuildFrom.fromSpecific:(Ljava/lang/Object;Lscala/collection/IterableOnce;)Ljava/lang/Object;
     104: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     107: areturn

  private final scala.None$ foreach$$anonfun$3$$anonfun$1();
    Code:
       0: getstatic     #248                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  private final zio.managed.ZManaged foreach$$anonfun$3(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: invokedynamic #2440,  0           // InvokeDynamic #150:apply:(Lzio/managed/ZManaged$;)Lscala/Function0;
       7: aload_1
       8: invokevirtual #572                // Method succeed:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      11: areturn

  private final scala.Some foreach$$anonfun$4$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #1595               // Field scala/Some$.MODULE$:Lscala/Some$;
       3: aload_1
       4: invokevirtual #1604               // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
       7: areturn

  private final zio.managed.ZManaged foreach$$anonfun$4(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_3
       2: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #59                 // class zio/managed/ZManaged
      10: aload_0
      11: invokedynamic #2450,  0           // InvokeDynamic #151:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      16: aload_2
      17: invokevirtual #526                // Method zio/managed/ZManaged.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      20: areturn

  private final int foreachExec$$anonfun$1$$anonfun$1(int);
    Code:
       0: iload_1
       1: ireturn

  private final zio.managed.ZManaged foreachExec$$anonfun$1(scala.collection.Iterable, scala.Function0, scala.Function1, scala.collection.BuildFrom, java.lang.Object);
    Code:
       0: aload_2
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #13                 // class zio/ExecutionStrategy
       9: astore        6
      11: getstatic     #1820               // Field zio/ExecutionStrategy$Parallel$.MODULE$:Lzio/ExecutionStrategy$Parallel$;
      14: aload         6
      16: invokevirtual #1798               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      19: ifeq          38
      22: aload_0
      23: aload_1
      24: aload_3
      25: aload         4
      27: aload         5
      29: invokevirtual #553                // Method foreachPar:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/managed/ZManaged;
      32: aload         5
      34: invokevirtual #2460               // Method zio/managed/ZManaged.withParallelismUnbounded:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      37: areturn
      38: aload         6
      40: instanceof    #16                 // class zio/ExecutionStrategy$ParallelN
      43: ifeq          94
      46: getstatic     #1833               // Field zio/ExecutionStrategy$ParallelN$.MODULE$:Lzio/ExecutionStrategy$ParallelN$;
      49: aload         6
      51: checkcast     #16                 // class zio/ExecutionStrategy$ParallelN
      54: invokevirtual #1836               // Method zio/ExecutionStrategy$ParallelN$.unapply:(Lzio/ExecutionStrategy$ParallelN;)Lzio/ExecutionStrategy$ParallelN;
      57: astore        7
      59: aload         7
      61: invokevirtual #1839               // Method zio/ExecutionStrategy$ParallelN._1:()I
      64: istore        8
      66: iload         8
      68: istore        9
      70: aload_0
      71: aload_1
      72: aload_3
      73: aload         4
      75: aload         5
      77: invokevirtual #553                // Method foreachPar:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/managed/ZManaged;
      80: aload_0
      81: iload         9
      83: invokedynamic #2466,  0           // InvokeDynamic #152:apply:(Lzio/managed/ZManaged$;I)Lscala/Function0;
      88: aload         5
      90: invokevirtual #2468               // Method zio/managed/ZManaged.withParallelism:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      93: areturn
      94: getstatic     #1794               // Field zio/ExecutionStrategy$Sequential$.MODULE$:Lzio/ExecutionStrategy$Sequential$;
      97: aload         6
      99: invokevirtual #1798               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     102: ifeq          116
     105: aload_0
     106: aload_1
     107: aload_3
     108: aload         4
     110: aload         5
     112: invokevirtual #514                // Method foreach:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/managed/ZManaged;
     115: areturn
     116: new           #1644               // class scala/MatchError
     119: dup
     120: aload         6
     122: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     125: athrow

  private final zio.managed.ZManaged$ReleaseMap $anonfun$2(scala.Tuple2);
    Code:
       0: aload_1
       1: invokevirtual #1705               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: checkcast     #107                // class zio/managed/ZManaged$ReleaseMap
       7: areturn

  private final java.lang.Object foreachPar$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(scala.Tuple2);
    Code:
       0: aload_1
       1: invokevirtual #1705               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  private final zio.ZIO foreachPar$$anonfun$1$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object, java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: aload_0
       1: invokevirtual #1345               // Method currentReleaseMap:()Lzio/FiberRef;
       4: aload         4
       6: aload_1
       7: aload_3
       8: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #59                 // class zio/managed/ZManaged
      16: invokevirtual #2405               // Method zio/managed/ZManaged.zio:()Lzio/ZIO;
      19: aload_0
      20: invokedynamic #2485,  0           // InvokeDynamic #153:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      25: aload_2
      26: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      31: aload_2
      32: invokeinterface #2489,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      37: areturn

  private final zio.ZIO foreachPar$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object, zio.ZIO, java.lang.Object);
    Code:
       0: aload_3
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload         4
       6: invokedynamic #2500,  0           // InvokeDynamic #154:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Function1;
      11: aload_2
      12: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      17: areturn

  private final scala.collection.Iterable foreachPar$$anonfun$1$$anonfun$2(scala.collection.Iterable, scala.collection.BuildFrom, scala.collection.Iterable);
    Code:
       0: aload_2
       1: aload_1
       2: aload_3
       3: invokeinterface #2123,  3         // InterfaceMethod scala/collection/BuildFrom.fromSpecific:(Ljava/lang/Object;Lscala/collection/IterableOnce;)Ljava/lang/Object;
       8: checkcast     #797                // class scala/collection/Iterable
      11: areturn

  private final zio.ZIO foreachPar$$anonfun$1(scala.collection.Iterable, scala.Function1, scala.collection.BuildFrom, java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: aload_0
       1: invokevirtual #1345               // Method currentReleaseMap:()Lzio/FiberRef;
       4: aload         5
       6: getstatic     #855                // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       9: getstatic     #1794               // Field zio/ExecutionStrategy$Sequential$.MODULE$:Lzio/ExecutionStrategy$Sequential$;
      12: aload         4
      14: invokevirtual #2512               // Method zio/managed/ZManaged$ReleaseMap$.makeManaged:(Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: invokevirtual #2405               // Method zio/managed/ZManaged.zio:()Lzio/ZIO;
      20: aload_0
      21: invokedynamic #2517,  0           // InvokeDynamic #155:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      26: aload         4
      28: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      33: aload         4
      35: invokeinterface #2489,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      40: astore        6
      42: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
      45: aload_1
      46: aload_0
      47: aload_2
      48: aload         4
      50: aload         6
      52: invokedynamic #2523,  0           // InvokeDynamic #156:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;Lzio/ZIO;)Lscala/Function1;
      57: aload_3
      58: aload         4
      60: invokevirtual #1826               // Method zio/ZIO$.foreachPar:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/ZIO;
      63: aload_0
      64: aload_1
      65: aload_3
      66: invokedynamic #2527,  0           // InvokeDynamic #157:apply:(Lzio/managed/ZManaged$;Lscala/collection/Iterable;Lscala/collection/BuildFrom;)Lscala/Function1;
      71: aload         4
      73: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      78: areturn

  private final zio.ZIO foreachDiscard$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #59                 // class zio/managed/ZManaged
      10: invokevirtual #2405               // Method zio/managed/ZManaged.zio:()Lzio/ZIO;
      13: areturn

  private final zio.ZIO foreachDiscard$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$1(zio.Exit, scala.Function1);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #48                 // class zio/ZIO
      10: areturn

  private final zio.ZIO foreachDiscard$$anonfun$1$$anonfun$2$$anonfun$1(java.lang.Object, scala.collection.Iterable, zio.Exit);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_2
       4: invokeinterface #801,  1          // InterfaceMethod scala/collection/Iterable.toList:()Lscala/collection/immutable/List;
       9: invokevirtual #2415               // Method scala/collection/immutable/List.reverse:()Lscala/collection/immutable/List;
      12: aload_0
      13: aload_3
      14: invokedynamic #2542,  0           // InvokeDynamic #158:apply:(Lzio/managed/ZManaged$;Lzio/Exit;)Lscala/Function1;
      19: getstatic     #507                // Field scala/collection/BuildFrom$.MODULE$:Lscala/collection/BuildFrom$;
      22: invokevirtual #511                // Method scala/collection/BuildFrom$.buildFromIterableOps:()Lscala/collection/BuildFrom;
      25: aload_1
      26: invokevirtual #811                // Method zio/ZIO$.foreach:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/ZIO;
      29: areturn

  private final scala.Tuple2 foreachDiscard$$anonfun$1$$anonfun$2(java.lang.Object, scala.collection.Iterable);
    Code:
       0: aload_2
       1: getstatic     #1308               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       4: invokevirtual #2111               // Method scala/Predef$.$conforms:()Lscala/Function1;
       7: invokeinterface #2546,  2         // InterfaceMethod scala/collection/Iterable.unzip:(Lscala/Function1;)Lscala/Tuple2;
      12: astore        4
      14: aload         4
      16: ifnull        34
      19: aload         4
      21: invokevirtual #2428               // Method scala/Tuple2._1:()Ljava/lang/Object;
      24: checkcast     #797                // class scala/collection/Iterable
      27: astore        5
      29: aload         5
      31: goto          44
      34: new           #1644               // class scala/MatchError
      37: dup
      38: aload         4
      40: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      43: athrow
      44: astore_3
      45: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      48: aload_0
      49: aload_1
      50: aload_3
      51: invokedynamic #2552,  0           // InvokeDynamic #159:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;Lscala/collection/Iterable;)Lscala/Function1;
      56: getstatic     #1477               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      59: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      62: areturn

  private final zio.ZIO foreachDiscard$$anonfun$1(scala.Function0, scala.Function1, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       9: checkcast     #797                // class scala/collection/Iterable
      12: aload_0
      13: aload_2
      14: invokedynamic #2559,  0           // InvokeDynamic #160:apply:(Lzio/managed/ZManaged$;Lscala/Function1;)Lscala/Function1;
      19: getstatic     #507                // Field scala/collection/BuildFrom$.MODULE$:Lscala/collection/BuildFrom$;
      22: invokevirtual #511                // Method scala/collection/BuildFrom$.buildFromIterableOps:()Lscala/collection/BuildFrom;
      25: aload_3
      26: invokevirtual #811                // Method zio/ZIO$.foreach:(Lscala/collection/Iterable;Lscala/Function1;Lscala/collection/BuildFrom;Ljava/lang/Object;)Lzio/ZIO;
      29: aload_0
      30: aload_3
      31: invokedynamic #2565,  0           // InvokeDynamic #161:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      36: aload_3
      37: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      42: areturn

  private final zio.managed.ZManaged$ReleaseMap $anonfun$3(scala.Tuple2);
    Code:
       0: aload_1
       1: invokevirtual #1705               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: checkcast     #107                // class zio/managed/ZManaged$ReleaseMap
       7: areturn

  private final java.lang.Object foreachParDiscard$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(scala.Tuple2);
    Code:
       0: aload_1
       1: invokevirtual #1705               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  private final zio.ZIO foreachParDiscard$$anonfun$1$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object, java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: aload_0
       1: invokevirtual #1345               // Method currentReleaseMap:()Lzio/FiberRef;
       4: aload         4
       6: aload_1
       7: aload_3
       8: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #59                 // class zio/managed/ZManaged
      16: invokevirtual #2405               // Method zio/managed/ZManaged.zio:()Lzio/ZIO;
      19: aload_0
      20: invokedynamic #2577,  0           // InvokeDynamic #162:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      25: aload_2
      26: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      31: aload_2
      32: invokeinterface #2489,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      37: areturn

  private final zio.ZIO foreachParDiscard$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object, zio.ZIO, java.lang.Object);
    Code:
       0: aload_3
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload         4
       6: invokedynamic #2585,  0           // InvokeDynamic #163:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Function1;
      11: aload_2
      12: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      17: areturn

  private final zio.ZIO foreachParDiscard$$anonfun$1(scala.Function0, scala.Function1, java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: aload_0
       1: invokevirtual #1345               // Method currentReleaseMap:()Lzio/FiberRef;
       4: aload         4
       6: getstatic     #855                // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       9: getstatic     #1794               // Field zio/ExecutionStrategy$Sequential$.MODULE$:Lzio/ExecutionStrategy$Sequential$;
      12: aload_3
      13: invokevirtual #2512               // Method zio/managed/ZManaged$ReleaseMap$.makeManaged:(Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/managed/ZManaged;
      16: invokevirtual #2405               // Method zio/managed/ZManaged.zio:()Lzio/ZIO;
      19: aload_0
      20: invokedynamic #2592,  0           // InvokeDynamic #164:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      25: aload_3
      26: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      31: aload_3
      32: invokeinterface #2489,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      37: astore        5
      39: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
      42: aload_1
      43: aload_0
      44: aload_2
      45: aload_3
      46: aload         5
      48: invokedynamic #2596,  0           // InvokeDynamic #165:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;Lzio/ZIO;)Lscala/Function1;
      53: aload_3
      54: invokevirtual #2598               // Method zio/ZIO$.foreachParDiscard:(Lscala/Function0;Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      57: areturn

  private final void fromAutoCloseable$$anonfun$1$$anonfun$1(java.lang.AutoCloseable, zio.Unsafe);
    Code:
       0: aload_1
       1: invokeinterface #2607,  1         // InterfaceMethod java/lang/AutoCloseable.close:()V
       6: return

  private java.lang.Object fromAutoCloseable$$anonfun$1$$anonfun$adapted$1(java.lang.AutoCloseable, zio.Unsafe);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2613               // Method fromAutoCloseable$$anonfun$1$$anonfun$1:(Ljava/lang/AutoCloseable;Lzio/Unsafe;)V
       6: getstatic     #1477               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       9: areturn

  private final zio.ZIO fromAutoCloseable$$anonfun$1(java.lang.Object, java.lang.AutoCloseable);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: aload_2
       5: invokedynamic #2620,  0           // InvokeDynamic #166:apply:(Lzio/managed/ZManaged$;Ljava/lang/AutoCloseable;)Lscala/Function1;
      10: aload_1
      11: invokevirtual #1447               // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  private final java.lang.Object fromEither$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final zio.managed.ZManaged fromEither$$anonfun$1$$anonfun$1(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_2
       3: invokedynamic #2629,  0           // InvokeDynamic #167:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function0;
       8: aload_1
       9: invokevirtual #2200               // Method fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  private final zio.managed.ZManaged fromEither$$anonfun$1$$anonfun$2(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #252                // Method succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       5: areturn

  private final zio.managed.ZManaged fromEither$$anonfun$1(java.lang.Object, scala.util.Either);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokedynamic #2636,  0           // InvokeDynamic #168:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
       8: aload_0
       9: invokedynamic #2640,  0           // InvokeDynamic #169:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      14: invokevirtual #2645               // Method scala/util/Either.fold:(Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      17: checkcast     #59                 // class zio/managed/ZManaged
      20: areturn

  private final scala.None$ fromOption$$anonfun$1$$anonfun$1$$anonfun$1();
    Code:
       0: getstatic     #248                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  private final zio.managed.ZManaged fromOption$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: invokedynamic #2652,  0           // InvokeDynamic #170:apply:(Lzio/managed/ZManaged$;)Lscala/Function0;
       7: aload_1
       8: invokevirtual #2200               // Method fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      11: areturn

  private final zio.managed.ZManaged fromOption$$anonfun$1$$anonfun$2(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #252                // Method succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       5: areturn

  private final zio.managed.ZManaged fromOption$$anonfun$1(java.lang.Object, scala.Option);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokedynamic #2659,  0           // InvokeDynamic #171:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function0;
       8: aload_0
       9: invokedynamic #2663,  0           // InvokeDynamic #172:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      14: invokevirtual #841                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      17: checkcast     #59                 // class zio/managed/ZManaged
      20: areturn

  private final zio.managed.Reservation fromReservation$$anonfun$1$$anonfun$1(scala.Function0, zio.Unsafe);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2669               // class zio/managed/Reservation
       9: areturn

  private final zio.ZIO fromReservation$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: aload_1
       5: invokedynamic #2677,  0           // InvokeDynamic #173:apply:(Lzio/managed/ZManaged$;Lscala/Function0;)Lscala/Function1;
      10: aload_2
      11: invokevirtual #1447               // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  private final zio.ZEnvironment fromReservationZIO$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(zio.ZEnvironment);
    Code:
       0: aload_1
       1: areturn

  private final zio.ZIO fromReservationZIO$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object, zio.ZEnvironment, zio.managed.Reservation, zio.Exit);
    Code:
       0: aload_3
       1: invokevirtual #2687               // Method zio/managed/Reservation.release:()Lscala/Function1;
       4: aload         4
       6: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #48                 // class zio/ZIO
      14: aload_0
      15: aload_2
      16: invokedynamic #2691,  0           // InvokeDynamic #174:apply:(Lzio/managed/ZManaged$;Lzio/ZEnvironment;)Lscala/Function0;
      21: aload_1
      22: invokeinterface #2015,  3         // InterfaceMethod zio/ZIO.provideEnvironment:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      27: areturn

  private final zio.ZIO fromReservationZIO$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1(zio.managed.Reservation);
    Code:
       0: aload_1
       1: invokevirtual #2697               // Method zio/managed/Reservation.acquire:()Lzio/ZIO;
       4: areturn

  private final zio.ZIO fromReservationZIO$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap, java.lang.Object, zio.Exit);
    Code:
       0: aload_2
       1: aload_3
       2: aload         4
       4: aload_1
       5: invokevirtual #2706               // Method zio/managed/ZManaged$ReleaseMap.release:(Ljava/lang/Object;Lzio/Exit;Ljava/lang/Object;)Lzio/ZIO;
       8: areturn

  private final scala.Tuple2 fromReservationZIO$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2(java.lang.Object, zio.managed.ZManaged$ReleaseMap, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokedynamic #2718,  0           // InvokeDynamic #175:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;Ljava/lang/Object;)Lscala/Function1;
      12: aload         4
      14: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      17: areturn

  private final scala.Tuple2 fromReservationZIO$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$3(scala.Tuple2);
    Code:
       0: aload_1
       1: areturn

  private final zio.ZIO fromReservationZIO$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2(java.lang.Object, zio.ZIO$InterruptibilityRestorer, zio.managed.ZManaged$ReleaseMap, zio.managed.Reservation, scala.Option);
    Code:
       0: aload         5
       2: astore        6
       4: aload         6
       6: instanceof    #2730               // class scala/Some
       9: ifeq          56
      12: aload         6
      14: checkcast     #2730               // class scala/Some
      17: invokevirtual #2732               // Method scala/Some.value:()Ljava/lang/Object;
      20: astore        7
      22: aload_2
      23: aload_0
      24: aload         4
      26: invokedynamic #2738,  0           // InvokeDynamic #176:apply:(Lzio/managed/ZManaged$;Lzio/managed/Reservation;)Lscala/Function0;
      31: aload_1
      32: invokeinterface #2740,  3         // InterfaceMethod zio/ZIO$InterruptibilityRestorer.apply:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      37: aload_0
      38: aload_1
      39: aload_3
      40: aload         7
      42: invokedynamic #2746,  0           // InvokeDynamic #177:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;Ljava/lang/Object;)Lscala/Function1;
      47: aload_1
      48: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      53: goto          87
      56: getstatic     #248                // Field scala/None$.MODULE$:Lscala/None$;
      59: aload         6
      61: invokevirtual #1798               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      64: ifeq          77
      67: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
      70: aload_1
      71: invokevirtual #2748               // Method zio/ZIO$.interrupt:(Ljava/lang/Object;)Lzio/ZIO;
      74: goto          87
      77: new           #1644               // class scala/MatchError
      80: dup
      81: aload         6
      83: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      86: athrow
      87: aload_0
      88: invokedynamic #2753,  0           // InvokeDynamic #178:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      93: aload_1
      94: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      99: areturn

  private final zio.ZIO fromReservationZIO$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object, zio.ZIO$InterruptibilityRestorer, zio.ZEnvironment, zio.managed.ZManaged$ReleaseMap, zio.managed.Reservation);
    Code:
       0: aload         4
       2: aload_0
       3: aload_1
       4: aload_3
       5: aload         5
       7: invokedynamic #2767,  0           // InvokeDynamic #179:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;Lzio/ZEnvironment;Lzio/managed/Reservation;)Lscala/Function1;
      12: aload_1
      13: invokevirtual #2770               // Method zio/managed/ZManaged$ReleaseMap.addIfOpen:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      16: aload_0
      17: aload_1
      18: aload_2
      19: aload         4
      21: aload         5
      23: invokedynamic #2776,  0           // InvokeDynamic #180:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;Lzio/ZIO$InterruptibilityRestorer;Lzio/managed/ZManaged$ReleaseMap;Lzio/managed/Reservation;)Lscala/Function1;
      28: aload_1
      29: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      34: areturn

  private final zio.ZIO fromReservationZIO$$anonfun$1$$anonfun$1$$anonfun$1(scala.Function0, java.lang.Object, zio.ZIO$InterruptibilityRestorer, zio.ZEnvironment, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #48                 // class zio/ZIO
       9: aload_0
      10: aload_2
      11: aload_3
      12: aload         4
      14: aload         5
      16: invokedynamic #2789,  0           // InvokeDynamic #181:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;Lzio/ZIO$InterruptibilityRestorer;Lzio/ZEnvironment;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      21: aload_2
      22: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      27: areturn

  private final zio.ZIO fromReservationZIO$$anonfun$1$$anonfun$1(scala.Function0, java.lang.Object, zio.ZIO$InterruptibilityRestorer, zio.ZEnvironment);
    Code:
       0: aload_0
       1: invokevirtual #1345               // Method currentReleaseMap:()Lzio/FiberRef;
       4: aload_2
       5: invokeinterface #1348,  2         // InterfaceMethod zio/FiberRef.get:(Ljava/lang/Object;)Lzio/ZIO;
      10: aload_0
      11: aload_1
      12: aload_2
      13: aload_3
      14: aload         4
      16: invokedynamic #2800,  0           // InvokeDynamic #182:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;Lzio/ZIO$InterruptibilityRestorer;Lzio/ZEnvironment;)Lscala/Function1;
      21: aload_2
      22: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      27: areturn

  private final zio.ZIO fromReservationZIO$$anonfun$1(scala.Function0, java.lang.Object, zio.ZIO$InterruptibilityRestorer);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_2
       4: invokevirtual #404                // Method zio/ZIO$.environment:(Ljava/lang/Object;)Lzio/ZIO;
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokedynamic #2809,  0           // InvokeDynamic #183:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;Lzio/ZIO$InterruptibilityRestorer;)Lscala/Function1;
      16: aload_2
      17: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      22: areturn

  private final java.lang.Throwable fromTry$$anonfun$1$$anonfun$1(java.lang.Throwable);
    Code:
       0: aload_1
       1: areturn

  private final zio.managed.ZManaged fromTry$$anonfun$1(java.lang.Object, scala.util.Try);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: instanceof    #2816               // class scala/util/Success
       6: ifeq          25
       9: aload_3
      10: checkcast     #2816               // class scala/util/Success
      13: invokevirtual #2817               // Method scala/util/Success.value:()Ljava/lang/Object;
      16: astore        4
      18: aload_0
      19: aload         4
      21: invokevirtual #252                // Method succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      24: areturn
      25: aload_3
      26: instanceof    #2819               // class scala/util/Failure
      29: ifeq          55
      32: aload_3
      33: checkcast     #2819               // class scala/util/Failure
      36: invokevirtual #2823               // Method scala/util/Failure.exception:()Ljava/lang/Throwable;
      39: astore        5
      41: aload_0
      42: aload_0
      43: aload         5
      45: invokedynamic #2830,  0           // InvokeDynamic #184:apply:(Lzio/managed/ZManaged$;Ljava/lang/Throwable;)Lscala/Function0;
      50: aload_1
      51: invokevirtual #2200               // Method fail:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      54: areturn
      55: new           #1644               // class scala/MatchError
      58: dup
      59: aload_3
      60: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      63: athrow

  private final scala.Tuple2 fromZIO$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: getstatic     #1568               // Field zio/managed/ZManaged$Finalizer$.MODULE$:Lzio/managed/ZManaged$Finalizer$;
       6: invokevirtual #1571               // Method zio/managed/ZManaged$Finalizer$.noop:()Lscala/Function1;
       9: aload_1
      10: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      13: areturn

  private final zio.ZIO fromZIO$$anonfun$1(scala.Function0, java.lang.Object, zio.ZIO$InterruptibilityRestorer);
    Code:
       0: aload_3
       1: aload_1
       2: aload_2
       3: invokeinterface #2740,  3         // InterfaceMethod zio/ZIO$InterruptibilityRestorer.apply:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
       8: aload_0
       9: invokedynamic #2841,  0           // InvokeDynamic #185:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      14: aload_2
      15: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      20: areturn

  private final zio.ZIO fromZIOUninterruptible$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #48                 // class zio/ZIO
       9: aload_2
      10: invokeinterface #421,  2          // InterfaceMethod zio/ZIO.uninterruptible:(Ljava/lang/Object;)Lzio/ZIO;
      15: areturn

  private final zio.ZIO interrupt$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: invokevirtual #2847               // Method zio/ZIO$.descriptor:(Ljava/lang/Object;)Lzio/ZIO;
       7: areturn

  private final zio.Cause interrupt$$anonfun$2$$anonfun$1(zio.Fiber$Descriptor);
    Code:
       0: getstatic     #2206               // Field zio/Cause$.MODULE$:Lzio/Cause$;
       3: aload_1
       4: invokevirtual #2854               // Method zio/Fiber$Descriptor.id:()Lzio/FiberId$Runtime;
       7: getstatic     #2206               // Field zio/Cause$.MODULE$:Lzio/Cause$;
      10: invokevirtual #2857               // Method zio/Cause$.interrupt$default$2:()Lzio/StackTrace;
      13: invokevirtual #2860               // Method zio/Cause$.interrupt:(Lzio/FiberId;Lzio/StackTrace;)Lzio/Cause;
      16: areturn

  private final zio.managed.ZManaged interrupt$$anonfun$2(java.lang.Object, zio.Fiber$Descriptor);
    Code:
       0: aload_0
       1: aload_0
       2: aload_2
       3: invokedynamic #2869,  0           // InvokeDynamic #186:apply:(Lzio/managed/ZManaged$;Lzio/Fiber$Descriptor;)Lscala/Function0;
       8: aload_1
       9: invokevirtual #625                // Method failCause:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  private final zio.Cause interruptAs$$anonfun$1(scala.Function0);
    Code:
       0: getstatic     #2206               // Field zio/Cause$.MODULE$:Lzio/Cause$;
       3: aload_1
       4: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       9: checkcast     #35                 // class zio/FiberId
      12: getstatic     #2206               // Field zio/Cause$.MODULE$:Lzio/Cause$;
      15: invokevirtual #2857               // Method zio/Cause$.interrupt$default$2:()Lzio/StackTrace;
      18: invokevirtual #2860               // Method zio/Cause$.interrupt:(Lzio/FiberId;Lzio/StackTrace;)Lzio/Cause;
      21: areturn

  private final zio.managed.ZManaged loop$4$$anonfun$1(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #2878               // Method loop$4:(Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Lzio/managed/ZManaged;
       9: areturn

  private final zio.managed.ZManaged loop$4(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload         4
       3: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokestatic  #2198               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      11: ifeq          39
      14: aload_2
      15: aload         4
      17: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #59                 // class zio/managed/ZManaged
      25: aload_0
      26: aload_1
      27: aload_2
      28: aload_3
      29: invokedynamic #2887,  0           // InvokeDynamic #187:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      34: aload_3
      35: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      38: areturn
      39: aload_0
      40: aload         4
      42: invokevirtual #252                // Method succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      45: areturn

  private final zio.managed.ZManaged iterate$$anonfun$1(scala.Function0, scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload         4
       5: aload_1
       6: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      11: invokespecial #2878               // Method loop$4:(Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  private final zio.ZIO log$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: aload_2
       5: invokevirtual #2895               // Method zio/ZIO$.log:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
       8: areturn

  private final zio.ZIO logAnnotate$$anonfun$1$$anonfun$1(scala.Function0, scala.Function0, java.lang.Object, scala.collection.immutable.Map);
    Code:
       0: getstatic     #2906               // Field zio/FiberRef$.MODULE$:Lzio/FiberRef$;
       3: invokevirtual #2909               // Method zio/FiberRef$.currentLogAnnotations:()Lzio/FiberRef;
       6: aload         4
       8: aload_1
       9: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      14: aload_2
      15: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      20: invokeinterface #2914,  3         // InterfaceMethod scala/collection/immutable/Map.updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/MapOps;
      25: aload_3
      26: invokeinterface #2918,  3         // InterfaceMethod zio/FiberRef.locallyScoped:(Ljava/lang/Object;Ljava/lang/Object;)Lzio/ZIO;
      31: areturn

  private final zio.ZIO logAnnotate$$anonfun$1(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #2906               // Field zio/FiberRef$.MODULE$:Lzio/FiberRef$;
       3: invokevirtual #2909               // Method zio/FiberRef$.currentLogAnnotations:()Lzio/FiberRef;
       6: aload_3
       7: invokeinterface #1348,  2         // InterfaceMethod zio/FiberRef.get:(Ljava/lang/Object;)Lzio/ZIO;
      12: aload_0
      13: aload_1
      14: aload_2
      15: aload_3
      16: invokedynamic #2930,  0           // InvokeDynamic #188:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
      21: aload_3
      22: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      27: areturn

  private final zio.ZIO logAnnotations$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #2906               // Field zio/FiberRef$.MODULE$:Lzio/FiberRef$;
       3: invokevirtual #2909               // Method zio/FiberRef$.currentLogAnnotations:()Lzio/FiberRef;
       6: aload_1
       7: invokeinterface #1348,  2         // InterfaceMethod zio/FiberRef.get:(Ljava/lang/Object;)Lzio/ZIO;
      12: areturn

  private final zio.ZIO logDebug$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: aload_2
       5: invokevirtual #2935               // Method zio/ZIO$.logDebug:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
       8: areturn

  private final zio.ZIO logError$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: aload_2
       5: invokevirtual #2939               // Method zio/ZIO$.logError:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
       8: areturn

  private final zio.ZIO logErrorCause$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: aload_2
       5: invokevirtual #2943               // Method zio/ZIO$.logErrorCause:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
       8: areturn

  private final zio.ZIO logFatal$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: aload_2
       5: invokevirtual #2947               // Method zio/ZIO$.logFatal:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
       8: areturn

  private final zio.ZIO logInfo$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: aload_2
       5: invokevirtual #2951               // Method zio/ZIO$.logInfo:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
       8: areturn

  private final zio.ZIO logLevel$$anonfun$1(zio.LogLevel, java.lang.Object);
    Code:
       0: getstatic     #2906               // Field zio/FiberRef$.MODULE$:Lzio/FiberRef$;
       3: invokevirtual #2956               // Method zio/FiberRef$.currentLogLevel:()Lzio/FiberRef;
       6: aload_1
       7: aload_2
       8: invokeinterface #2918,  3         // InterfaceMethod zio/FiberRef.locallyScoped:(Ljava/lang/Object;Ljava/lang/Object;)Lzio/ZIO;
      13: areturn

  private final zio.ZIO logSpan$$anonfun$1$$anonfun$1(scala.Function0, java.lang.Object, scala.collection.immutable.List);
    Code:
       0: invokestatic  #2966               // Method java/lang/System.currentTimeMillis:()J
       3: lstore        4
       5: getstatic     #2971               // Field zio/LogSpan$.MODULE$:Lzio/LogSpan$;
       8: aload_1
       9: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      14: checkcast     #2220               // class java/lang/String
      17: lload         4
      19: invokevirtual #2974               // Method zio/LogSpan$.apply:(Ljava/lang/String;J)Lzio/LogSpan;
      22: astore        6
      24: getstatic     #2906               // Field zio/FiberRef$.MODULE$:Lzio/FiberRef$;
      27: invokevirtual #2977               // Method zio/FiberRef$.currentLogSpan:()Lzio/FiberRef;
      30: aload_3
      31: aload         6
      33: invokevirtual #2981               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      36: aload_2
      37: invokeinterface #2918,  3         // InterfaceMethod zio/FiberRef.locallyScoped:(Ljava/lang/Object;Ljava/lang/Object;)Lzio/ZIO;
      42: areturn

  private final zio.ZIO logSpan$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #2906               // Field zio/FiberRef$.MODULE$:Lzio/FiberRef$;
       3: invokevirtual #2977               // Method zio/FiberRef$.currentLogSpan:()Lzio/FiberRef;
       6: aload_2
       7: invokeinterface #1348,  2         // InterfaceMethod zio/FiberRef.get:(Ljava/lang/Object;)Lzio/ZIO;
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokedynamic #2991,  0           // InvokeDynamic #189:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
      20: aload_2
      21: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      26: areturn

  private final zio.ZIO logTrace$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: aload_2
       5: invokevirtual #2995               // Method zio/ZIO$.logTrace:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
       8: areturn

  private final zio.ZIO logWarning$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: aload_2
       5: invokevirtual #2999               // Method zio/ZIO$.logWarning:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
       8: areturn

  private final scala.collection.immutable.List loop$5$$anonfun$1$$anonfun$1(java.lang.Object, scala.collection.immutable.List);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #2981               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  private final zio.managed.ZManaged loop$5$$anonfun$1(scala.Function1, scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload_2
       7: aload         5
       9: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: invokespecial #3013               // Method loop$5:(Lscala/Function1;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: aload_0
      18: aload         6
      20: invokedynamic #3019,  0           // InvokeDynamic #190:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      25: aload         4
      27: invokevirtual #526                // Method zio/managed/ZManaged.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      30: areturn

  private final zio.managed.ZManaged loop$5(scala.Function1, scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload         5
       3: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokestatic  #2198               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      11: ifeq          44
      14: aload_3
      15: aload         5
      17: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #59                 // class zio/managed/ZManaged
      25: aload_0
      26: aload_1
      27: aload_2
      28: aload_3
      29: aload         4
      31: aload         5
      33: invokedynamic #3029,  0           // InvokeDynamic #191:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Function1;
      38: aload         4
      40: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      43: areturn
      44: aload_0
      45: getstatic     #1262               // Field scala/package$.MODULE$:Lscala/package$;
      48: invokevirtual #1266               // Method scala/package$.List:()Lscala/collection/immutable/List$;
      51: invokevirtual #3031               // Method scala/collection/immutable/List$.empty:()Lscala/collection/immutable/List;
      54: invokevirtual #252                // Method succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      57: areturn

  private final zio.managed.ZManaged loop$$anonfun$1(scala.Function0, scala.Function1, scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload         4
       5: aload         5
       7: aload_1
       8: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      13: invokespecial #3013               // Method loop$5:(Lscala/Function1;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Lzio/managed/ZManaged;
      16: areturn

  private final zio.managed.ZManaged loop$6$$anonfun$1(scala.Function1, scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload_2
       7: aload         5
       9: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: invokespecial #3045               // Method loop$6:(Lscala/Function1;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Lzio/managed/ZManaged;
      17: areturn

  private final zio.managed.ZManaged loop$6(scala.Function1, scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload         5
       3: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokestatic  #2198               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      11: ifeq          44
      14: aload_3
      15: aload         5
      17: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #59                 // class zio/managed/ZManaged
      25: aload_0
      26: aload_1
      27: aload_2
      28: aload_3
      29: aload         4
      31: aload         5
      33: invokedynamic #3055,  0           // InvokeDynamic #192:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Function0;
      38: aload         4
      40: invokevirtual #3058               // Method zio/managed/ZManaged.$times$greater:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      43: areturn
      44: aload_0
      45: invokevirtual #1450               // Method unit:()Lzio/managed/ZManaged;
      48: areturn

  private final zio.managed.ZManaged loopDiscard$$anonfun$1(scala.Function0, scala.Function1, scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload         4
       5: aload         5
       7: aload_1
       8: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      13: invokespecial #3045               // Method loop$6:(Lscala/Function1;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Lzio/managed/ZManaged;
      16: areturn

  private final scala.collection.immutable.Map memoize$$anonfun$2$$anonfun$1();
    Code:
       0: getstatic     #1308               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #1312               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       6: invokevirtual #1318               // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
       9: areturn

  private final zio.managed.ZManaged memoize$$anonfun$2$$anonfun$2$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #59                 // class zio/managed/ZManaged
      10: areturn

  private final java.lang.Object memoize$$anonfun$2$$anonfun$2$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$2(scala.Tuple2);
    Code:
       0: aload_1
       1: invokevirtual #1705               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  private final zio.Promise memoize$$anonfun$2$$anonfun$2$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$3(zio.Promise);
    Code:
       0: aload_1
       1: areturn

  private final zio.ZIO memoize$$anonfun$2$$anonfun$2$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$4(java.lang.Object, zio.Promise);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #3080               // Method zio/Promise.await:(Ljava/lang/Object;)Lzio/ZIO;
       5: areturn

  private final scala.Tuple2 memoize$$anonfun$2$$anonfun$2$$anonfun$1$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object, zio.FiberId$Runtime, zio.managed.ZManaged$Scope, java.lang.Object, scala.collection.immutable.Map);
    Code:
       0: aload         6
       2: aload         5
       4: invokeinterface #3090,  2         // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
       9: astore        7
      11: aload         7
      13: instanceof    #2730               // class scala/Some
      16: ifeq          47
      19: aload         7
      21: checkcast     #2730               // class scala/Some
      24: invokevirtual #2732               // Method scala/Some.value:()Ljava/lang/Object;
      27: checkcast     #44                 // class zio/Promise
      30: astore        8
      32: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      35: aload         8
      37: aload_2
      38: invokevirtual #3080               // Method zio/Promise.await:(Ljava/lang/Object;)Lzio/ZIO;
      41: aload         6
      43: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      46: areturn
      47: getstatic     #248                // Field scala/None$.MODULE$:Lscala/None$;
      50: aload         7
      52: invokevirtual #1798               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      55: ifeq          146
      58: getstatic     #3093               // Field zio/Promise$unsafe$.MODULE$:Lzio/Promise$unsafe$;
      61: aload_3
      62: getstatic     #277                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
      65: invokevirtual #281                // Method zio/Unsafe$.unsafe:()Lzio/Unsafe;
      68: invokevirtual #3096               // Method zio/Promise$unsafe$.make:(Lzio/FiberId;Lzio/Unsafe;)Lzio/Promise;
      71: astore        9
      73: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      76: aload         4
      78: aload_0
      79: aload_1
      80: aload         5
      82: invokedynamic #3100,  0           // InvokeDynamic #193:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      87: invokevirtual #3103               // Method zio/managed/ZManaged$Scope.apply:(Lscala/Function0;)Lzio/ZIO;
      90: aload_0
      91: invokedynamic #3107,  0           // InvokeDynamic #194:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      96: aload_2
      97: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
     102: aload_0
     103: aload         9
     105: invokedynamic #3115,  0           // InvokeDynamic #195:apply:(Lzio/managed/ZManaged$;Lzio/Promise;)Lscala/Function0;
     110: aload_2
     111: invokeinterface #3118,  3         // InterfaceMethod zio/ZIO.intoPromise:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
     116: aload_0
     117: aload_2
     118: aload         9
     120: invokedynamic #3124,  0           // InvokeDynamic #196:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;Lzio/Promise;)Lscala/Function0;
     125: aload_2
     126: invokeinterface #3126,  3         // InterfaceMethod zio/ZIO.$times$greater:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
     131: aload         6
     133: aload         5
     135: aload         9
     137: invokeinterface #2914,  3         // InterfaceMethod scala/collection/immutable/Map.updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/MapOps;
     142: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     145: areturn
     146: new           #1644               // class scala/MatchError
     149: dup
     150: aload         7
     152: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     155: athrow

  private final zio.ZIO memoize$$anonfun$2$$anonfun$2$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object, zio.FiberId$Runtime, zio.Ref, zio.managed.ZManaged$Scope, java.lang.Object);
    Code:
       0: aload         4
       2: aload_0
       3: aload_1
       4: aload_2
       5: aload_3
       6: aload         5
       8: aload         6
      10: invokedynamic #3144,  0           // InvokeDynamic #197:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;Lzio/FiberId$Runtime;Lzio/managed/ZManaged$Scope;Ljava/lang/Object;)Lscala/Function1;
      15: aload_2
      16: invokevirtual #3147               // Method zio/Ref.modify:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      19: getstatic     #1501               // Field zio/IsSubtypeOfOutput$.MODULE$:Lzio/IsSubtypeOfOutput$;
      22: getstatic     #1248               // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
      25: invokevirtual #1252               // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
      28: invokevirtual #1505               // Method zio/IsSubtypeOfOutput$.impl:(Lscala/$less$colon$less;)Lzio/IsSubtypeOfOutput;
      31: aload_2
      32: invokeinterface #3150,  3         // InterfaceMethod zio/ZIO.flatten:(Lzio/IsSubtypeOfOutput;Ljava/lang/Object;)Lzio/ZIO;
      37: areturn

  private final scala.Function1 memoize$$anonfun$2$$anonfun$2$$anonfun$1(scala.Function1, java.lang.Object, zio.FiberId$Runtime, zio.Ref, zio.managed.ZManaged$Scope);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokedynamic #3162,  0           // InvokeDynamic #198:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;Lzio/FiberId$Runtime;Lzio/Ref;Lzio/managed/ZManaged$Scope;)Lscala/Function1;
      13: areturn

  private final zio.managed.ZManaged memoize$$anonfun$2$$anonfun$2(scala.Function1, java.lang.Object, zio.FiberId$Runtime, zio.Ref);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #1213               // Method scope:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       5: aload_0
       6: aload_1
       7: aload_2
       8: aload_3
       9: aload         4
      11: invokedynamic #3175,  0           // InvokeDynamic #199:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;Lzio/FiberId$Runtime;Lzio/Ref;)Lscala/Function1;
      16: aload_2
      17: invokevirtual #526                // Method zio/managed/ZManaged.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      20: areturn

  private final zio.managed.ZManaged memoize$$anonfun$2(scala.Function1, java.lang.Object, zio.FiberId$Runtime);
    Code:
       0: getstatic     #1146               // Field zio/managed/package$.MODULE$:Lzio/managed/package$;
       3: getstatic     #2279               // Field zio/Ref$.MODULE$:Lzio/Ref$;
       6: aload_0
       7: invokedynamic #3182,  0           // InvokeDynamic #200:apply:(Lzio/managed/ZManaged$;)Lscala/Function0;
      12: aload_2
      13: invokevirtual #2281               // Method zio/Ref$.make:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      16: invokevirtual #1151               // Method zio/managed/package$.ZManagedZIOSyntax:(Lzio/ZIO;)Lzio/managed/package$ZManagedZIOSyntax;
      19: aload_2
      20: invokevirtual #1154               // Method zio/managed/package$ZManagedZIOSyntax.toManaged:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      23: aload_0
      24: aload_1
      25: aload_2
      26: aload_3
      27: invokedynamic #3190,  0           // InvokeDynamic #201:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;Lzio/FiberId$Runtime;)Lscala/Function1;
      32: aload_2
      33: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      36: areturn

  private final zio.managed.ZManaged mergeAll$$anonfun$1$$anonfun$1$$anonfun$1(zio.managed.ZManaged);
    Code:
       0: aload_1
       1: areturn

  private final zio.managed.ZManaged mergeAll$$anonfun$1$$anonfun$1(scala.Function2, java.lang.Object, zio.managed.ZManaged, zio.managed.ZManaged);
    Code:
       0: aload_3
       1: aload_0
       2: aload         4
       4: invokedynamic #3202,  0           // InvokeDynamic #202:apply:(Lzio/managed/ZManaged$;Lzio/managed/ZManaged;)Lscala/Function0;
       9: aload_1
      10: aload_2
      11: invokevirtual #3205               // Method zio/managed/ZManaged.zipWith:(Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  private final zio.managed.ZManaged mergeAll$$anonfun$1(scala.Function0, scala.Function0, scala.Function2, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2319               // class scala/collection/IterableOnceOps
       9: aload_0
      10: aload_2
      11: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: invokevirtual #252                // Method succeedNow:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      19: aload_0
      20: aload_3
      21: aload         4
      23: invokedynamic #3213,  0           // InvokeDynamic #203:apply:(Lzio/managed/ZManaged$;Lscala/Function2;Ljava/lang/Object;)Lscala/Function2;
      28: invokeinterface #2328,  3         // InterfaceMethod scala/collection/IterableOnceOps.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      33: checkcast     #59                 // class zio/managed/ZManaged
      36: areturn

  private final java.lang.Object mergeAllPar$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(scala.Tuple2);
    Code:
       0: aload_1
       1: invokevirtual #1705               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  private final zio.ZIO mergeAllPar$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object, zio.managed.ZManaged);
    Code:
       0: aload_2
       1: invokevirtual #2405               // Method zio/managed/ZManaged.zio:()Lzio/ZIO;
       4: aload_0
       5: invokedynamic #3223,  0           // InvokeDynamic #204:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      10: aload_1
      11: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      16: areturn

  private final scala.collection.Iterable mergeAllPar$$anonfun$1$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #3229               // class scala/collection/IterableOps
       9: aload_0
      10: aload_2
      11: invokedynamic #3235,  0           // InvokeDynamic #205:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      16: invokeinterface #3237,  2         // InterfaceMethod scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
      21: checkcast     #797                // class scala/collection/Iterable
      24: areturn

  private final zio.ZIO mergeAllPar$$anonfun$1(scala.Function0, scala.Function0, scala.Function2, java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: aload_0
       1: invokevirtual #1345               // Method currentReleaseMap:()Lzio/FiberRef;
       4: aload         5
       6: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       9: aload_0
      10: aload_1
      11: aload         4
      13: invokedynamic #3247,  0           // InvokeDynamic #206:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
      18: aload_2
      19: aload_3
      20: aload         4
      22: invokevirtual #3250               // Method zio/ZIO$.mergeAllPar:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/ZIO;
      25: aload         4
      27: invokeinterface #2489,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      32: areturn

  private final zio.ZIO never$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: invokevirtual #3253               // Method zio/ZIO$.never:(Ljava/lang/Object;)Lzio/ZIO;
       7: areturn

  private final scala.Some onExecutor$$anonfun$2$$anonfun$1$$anonfun$1(zio.Fiber$Descriptor);
    Code:
       0: getstatic     #1595               // Field scala/Some$.MODULE$:Lscala/Some$;
       3: aload_1
       4: invokevirtual #3259               // Method zio/Fiber$Descriptor.executor:()Lzio/Executor;
       7: invokevirtual #1604               // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
      10: areturn

  private final scala.None$ onExecutor$$anonfun$2$$anonfun$1$$anonfun$2();
    Code:
       0: getstatic     #248                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  private final zio.ZIO onExecutor$$anonfun$2$$anonfun$1(scala.Function0, java.lang.Object, zio.Fiber$Descriptor);
    Code:
       0: aload_3
       1: invokevirtual #3267               // Method zio/Fiber$Descriptor.isLocked:()Z
       4: ifeq          29
       7: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
      10: aload_1
      11: aload_2
      12: invokevirtual #3269               // Method zio/ZIO$.shift:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      15: aload_0
      16: aload_3
      17: invokedynamic #3273,  0           // InvokeDynamic #207:apply:(Lzio/managed/ZManaged$;Lzio/Fiber$Descriptor;)Lscala/Function0;
      22: aload_2
      23: invokeinterface #1883,  3         // InterfaceMethod zio/ZIO.as:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      28: areturn
      29: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
      32: aload_1
      33: aload_2
      34: invokevirtual #3269               // Method zio/ZIO$.shift:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      37: aload_0
      38: invokedynamic #3277,  0           // InvokeDynamic #208:apply:(Lzio/managed/ZManaged$;)Lscala/Function0;
      43: aload_2
      44: invokeinterface #1883,  3         // InterfaceMethod zio/ZIO.as:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      49: areturn

  private final zio.ZIO onExecutor$$anonfun$2(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokedynamic #3285,  0           // InvokeDynamic #209:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
      11: aload_2
      12: invokevirtual #3288               // Method zio/ZIO$.descriptorWith:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      15: areturn

  private final zio.Executor onExecutor$$anonfun$3$$anonfun$1(zio.Executor);
    Code:
       0: aload_1
       1: areturn

  private final zio.ZIO onExecutor$$anonfun$3(java.lang.Object, scala.Option);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: instanceof    #2730               // class scala/Some
       6: ifeq          37
       9: aload_3
      10: checkcast     #2730               // class scala/Some
      13: invokevirtual #2732               // Method scala/Some.value:()Ljava/lang/Object;
      16: checkcast     #3295               // class zio/Executor
      19: astore        4
      21: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
      24: aload_0
      25: aload         4
      27: invokedynamic #3302,  0           // InvokeDynamic #210:apply:(Lzio/managed/ZManaged$;Lzio/Executor;)Lscala/Function0;
      32: aload_1
      33: invokevirtual #3269               // Method zio/ZIO$.shift:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      36: areturn
      37: getstatic     #248                // Field scala/None$.MODULE$:Lscala/None$;
      40: aload_3
      41: invokevirtual #1798               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      44: ifeq          55
      47: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
      50: aload_1
      51: invokevirtual #3305               // Method zio/ZIO$.unshift:(Ljava/lang/Object;)Lzio/ZIO;
      54: areturn
      55: new           #1644               // class scala/MatchError
      58: dup
      59: aload_3
      60: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      63: athrow

  private final zio.ZIO parallelism$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: invokevirtual #3309               // Method zio/ZIO$.Parallelism:()Lzio/FiberRef;
       6: aload_1
       7: invokeinterface #1348,  2         // InterfaceMethod zio/FiberRef.get:(Ljava/lang/Object;)Lzio/ZIO;
      12: areturn

  public static final zio.ZIO zio$managed$ZManaged$$anon$5$$_$apply$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokevirtual #1576               // Method zio/ZIO$.succeedNow:(Ljava/lang/Object;)Lzio/ZIO;
       7: areturn

  public static final zio.ZIO zio$managed$ZManaged$$anon$5$$_$apply$$anonfun$1$$anonfun$2(scala.Function1, java.lang.Object, zio.Exit);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #48                 // class zio/ZIO
      10: areturn

  private final zio.managed.ZManaged$PreallocationScope preallocationScope$$anonfun$1(java.lang.Object, zio.managed.ZManaged$Scope);
    Code:
       0: new           #53                 // class zio/managed/ZManaged$$anon$5
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #3319               // Method zio/managed/ZManaged$$anon$5."<init>":(Ljava/lang/Object;Lzio/managed/ZManaged$Scope;)V
       9: areturn

  private final zio.ZLayer provideLayer$$anonfun$3$$anonfun$1(zio.ZLayer);
    Code:
       0: aload_1
       1: areturn

  private final zio.ZLayer provideLayer$$anonfun$3(zio.ZLayer, izumi.reflect.Tag, java.lang.Object);
    Code:
       0: getstatic     #3330               // Field zio/ZLayer$.MODULE$:Lzio/ZLayer$;
       3: aload_3
       4: invokevirtual #3333               // Method zio/ZLayer$.environment:(Ljava/lang/Object;)Lzio/ZLayer;
       7: aload_0
       8: aload_1
       9: invokedynamic #3339,  0           // InvokeDynamic #211:apply:(Lzio/managed/ZManaged$;Lzio/ZLayer;)Lscala/Function0;
      14: aload_2
      15: invokevirtual #3345               // Method zio/ZLayer.$plus$plus:(Lscala/Function0;Lizumi/reflect/Tag;)Lzio/ZLayer;
      18: areturn

  private final zio.managed.ZManaged reduceAll$$anonfun$1$$anonfun$1$$anonfun$1(zio.managed.ZManaged);
    Code:
       0: aload_1
       1: areturn

  private final zio.managed.ZManaged reduceAll$$anonfun$1$$anonfun$1(scala.Function2, java.lang.Object, zio.managed.ZManaged, zio.managed.ZManaged);
    Code:
       0: aload_3
       1: aload_0
       2: aload         4
       4: invokedynamic #3356,  0           // InvokeDynamic #212:apply:(Lzio/managed/ZManaged$;Lzio/managed/ZManaged;)Lscala/Function0;
       9: aload_1
      10: aload_2
      11: invokevirtual #3205               // Method zio/managed/ZManaged.zipWith:(Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/managed/ZManaged;
      14: areturn

  private final zio.managed.ZManaged reduceAll$$anonfun$1(scala.Function0, scala.Function0, scala.Function2, java.lang.Object);
    Code:
       0: aload_2
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2319               // class scala/collection/IterableOnceOps
       9: aload_1
      10: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      15: aload_0
      16: aload_3
      17: aload         4
      19: invokedynamic #3364,  0           // InvokeDynamic #213:apply:(Lzio/managed/ZManaged$;Lscala/Function2;Ljava/lang/Object;)Lscala/Function2;
      24: invokeinterface #2328,  3         // InterfaceMethod scala/collection/IterableOnceOps.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      29: checkcast     #59                 // class zio/managed/ZManaged
      32: areturn

  private final java.lang.Object reduceAllPar$$anonfun$1$$anonfun$1$$anonfun$1(scala.Tuple2);
    Code:
       0: aload_1
       1: invokevirtual #1705               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  private final zio.ZIO reduceAllPar$$anonfun$1$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #59                 // class zio/managed/ZManaged
       9: invokevirtual #2405               // Method zio/managed/ZManaged.zio:()Lzio/ZIO;
      12: aload_0
      13: invokedynamic #3373,  0           // InvokeDynamic #214:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      18: aload_2
      19: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      24: areturn

  private final java.lang.Object reduceAllPar$$anonfun$1$$anonfun$2$$anonfun$1$$anonfun$1(scala.Tuple2);
    Code:
       0: aload_1
       1: invokevirtual #1705               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  private final zio.ZIO reduceAllPar$$anonfun$1$$anonfun$2$$anonfun$1(java.lang.Object, zio.managed.ZManaged);
    Code:
       0: aload_2
       1: invokevirtual #2405               // Method zio/managed/ZManaged.zio:()Lzio/ZIO;
       4: aload_0
       5: invokedynamic #3382,  0           // InvokeDynamic #215:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      10: aload_1
      11: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      16: areturn

  private final scala.collection.Iterable reduceAllPar$$anonfun$1$$anonfun$2(scala.Function0, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #3229               // class scala/collection/IterableOps
       9: aload_0
      10: aload_2
      11: invokedynamic #3389,  0           // InvokeDynamic #216:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      16: invokeinterface #3237,  2         // InterfaceMethod scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
      21: checkcast     #797                // class scala/collection/Iterable
      24: areturn

  private final zio.ZIO reduceAllPar$$anonfun$1(scala.Function0, scala.Function0, scala.Function2, java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: aload_0
       1: invokevirtual #1345               // Method currentReleaseMap:()Lzio/FiberRef;
       4: aload         5
       6: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       9: aload_0
      10: aload_1
      11: aload         4
      13: invokedynamic #3397,  0           // InvokeDynamic #217:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
      18: aload_0
      19: aload_2
      20: aload         4
      22: invokedynamic #3401,  0           // InvokeDynamic #218:apply:(Lzio/managed/ZManaged$;Lscala/Function0;Ljava/lang/Object;)Lscala/Function0;
      27: aload_3
      28: aload         4
      30: invokevirtual #3403               // Method zio/ZIO$.reduceAllPar:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Lzio/ZIO;
      33: aload         4
      35: invokeinterface #2489,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      40: areturn

  private final scala.Tuple2 releaseMap$$anonfun$1(zio.managed.ZManaged$ReleaseMap);
    Code:
       0: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: getstatic     #1568               // Field zio/managed/ZManaged$Finalizer$.MODULE$:Lzio/managed/ZManaged$Finalizer$;
       6: invokevirtual #1571               // Method zio/managed/ZManaged$Finalizer$.noop:()Lscala/Function1;
       9: aload_1
      10: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      13: areturn

  private final zio.ZIO runtime$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: invokevirtual #3407               // Method zio/ZIO$.runtime:(Ljava/lang/Object;)Lzio/ZIO;
       7: areturn

  private final zio.managed.ZManaged sandbox$$anonfun$1(zio.managed.ZManaged, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #3411               // Method zio/managed/ZManaged.sandbox:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       5: areturn

  private final zio.ZIO shift$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: aload_2
       5: invokevirtual #3269               // Method zio/ZIO$.shift:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
       8: areturn

  public static final scala.Tuple2 zio$managed$ZManaged$$anon$6$$_$apply$$anonfun$2$$anonfun$1(scala.Tuple2);
    Code:
       0: aload_0
       1: areturn

  private final zio.managed.ZManaged$Scope scope$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: new           #55                 // class zio/managed/ZManaged$$anon$6
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #3420               // Method zio/managed/ZManaged$$anon$6."<init>":(Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;)V
       9: areturn

  private final java.lang.Object service$$anonfun$1(zio.package$Tag, zio.ZEnvironment);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #3427               // Method zio/ZEnvironment.get:(Lzio/package$Tag;)Ljava/lang/Object;
       5: areturn

  private final scala.Some some$$anonfun$3(scala.Function0);
    Code:
       0: getstatic     #1595               // Field scala/Some$.MODULE$:Lscala/Some$;
       3: aload_1
       4: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       9: invokevirtual #1604               // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
      12: areturn

  private final scala.Tuple2 succeed$$anonfun$1(scala.Function0, zio.Unsafe);
    Code:
       0: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: getstatic     #1568               // Field zio/managed/ZManaged$Finalizer$.MODULE$:Lzio/managed/ZManaged$Finalizer$;
       6: invokevirtual #1571               // Method zio/managed/ZManaged$Finalizer$.noop:()Lscala/Function1;
       9: aload_1
      10: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      15: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      18: areturn

  private final zio.managed.ZManaged suspend$$anonfun$1(scala.Function0, scala.runtime.BoxedUnit);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #59                 // class zio/managed/ZManaged
       9: areturn

  private final zio.ZIO switchable$$anonfun$1$$anonfun$1(zio.Exit);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: invokevirtual #1583               // Method zio/ZIO$.unit:()Lzio/ZIO;
       6: areturn

  private final java.lang.Object switchable$$anonfun$1$$anonfun$2$$anonfun$1(java.lang.Object, zio.Unsafe);
    Code:
       0: aload_1
       1: areturn

  private final zio.ZIO switchable$$anonfun$1$$anonfun$2(java.lang.Object, scala.Option);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: instanceof    #2730               // class scala/Some
       6: ifeq          34
       9: aload_3
      10: checkcast     #2730               // class scala/Some
      13: invokevirtual #2732               // Method scala/Some.value:()Ljava/lang/Object;
      16: astore        4
      18: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
      21: aload_0
      22: aload         4
      24: invokedynamic #3444,  0           // InvokeDynamic #219:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      29: aload_1
      30: invokevirtual #1447               // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      33: areturn
      34: getstatic     #248                // Field scala/None$.MODULE$:Lscala/None$;
      37: aload_3
      38: invokevirtual #1798               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      41: ifeq          52
      44: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
      47: aload_1
      48: invokevirtual #2748               // Method zio/ZIO$.interrupt:(Ljava/lang/Object;)Lzio/ZIO;
      51: areturn
      52: new           #1644               // class scala/MatchError
      55: dup
      56: aload_3
      57: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      60: athrow

  private final zio.ZIO $anonfun$4$$anonfun$1$$anonfun$1(zio.Exit);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: invokevirtual #1583               // Method zio/ZIO$.unit:()Lzio/ZIO;
       6: areturn

  private final zio.ZIO $anonfun$4$$anonfun$1$$anonfun$2$$anonfun$1(scala.Function1);
    Code:
       0: aload_1
       1: getstatic     #1715               // Field zio/Exit$.MODULE$:Lzio/Exit$;
       4: invokevirtual #1717               // Method zio/Exit$.unit:()Lzio/Exit;
       7: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #48                 // class zio/ZIO
      15: areturn

  private final zio.ZIO $anonfun$4$$anonfun$1$$anonfun$2$$anonfun$2();
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: invokevirtual #1583               // Method zio/ZIO$.unit:()Lzio/ZIO;
       6: areturn

  private final zio.ZIO $anonfun$4$$anonfun$1$$anonfun$2(scala.Option);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #3455,  0           // InvokeDynamic #220:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
       7: invokevirtual #3458               // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      10: aload_0
      11: invokedynamic #3462,  0           // InvokeDynamic #221:apply:(Lzio/managed/ZManaged$;)Lscala/Function0;
      16: invokevirtual #1732               // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      19: checkcast     #48                 // class zio/ZIO
      22: areturn

  private final zio.ZIO $anonfun$4$$anonfun$1$$anonfun$3$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object, zio.managed.ZManaged, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: aload_0
       1: invokevirtual #1345               // Method currentReleaseMap:()Lzio/FiberRef;
       4: aload_3
       5: aload_2
       6: invokevirtual #2405               // Method zio/managed/ZManaged.zio:()Lzio/ZIO;
       9: aload_1
      10: invokeinterface #2489,  4         // InterfaceMethod zio/FiberRef.locally:(Ljava/lang/Object;Lzio/ZIO;Ljava/lang/Object;)Lzio/ZIO;
      15: areturn

  private final zio.ZIO $anonfun$4$$anonfun$1$$anonfun$3$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap, zio.Exit);
    Code:
       0: aload_2
       1: aload_3
       2: getstatic     #1794               // Field zio/ExecutionStrategy$Sequential$.MODULE$:Lzio/ExecutionStrategy$Sequential$;
       5: aload_1
       6: invokevirtual #3476               // Method zio/managed/ZManaged$ReleaseMap.releaseAll:(Lzio/Exit;Lzio/ExecutionStrategy;Ljava/lang/Object;)Lzio/ZIO;
       9: areturn

  private final java.lang.Object $anonfun$4$$anonfun$1$$anonfun$3$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2(scala.Tuple2, scala.Option);
    Code:
       0: aload_2
       1: astore_3
       2: aload_1
       3: invokevirtual #1705               // Method scala/Tuple2._2:()Ljava/lang/Object;
       6: areturn

  private final zio.ZIO $anonfun$4$$anonfun$1$$anonfun$3$$anonfun$1$$anonfun$1$$anonfun$2(java.lang.Object, zio.managed.ZManaged$ReleaseMap, java.lang.Object, zio.managed.ZManaged$ReleaseMap, scala.Tuple2);
    Code:
       0: aload_2
       1: aload_3
       2: aload_0
       3: aload_1
       4: aload         4
       6: invokedynamic #3491,  0           // InvokeDynamic #222:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      11: aload_1
      12: invokevirtual #3495               // Method zio/managed/ZManaged$ReleaseMap.replace:(Ljava/lang/Object;Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      15: aload_0
      16: aload         5
      18: invokedynamic #3503,  0           // InvokeDynamic #223:apply:(Lzio/managed/ZManaged$;Lscala/Tuple2;)Lscala/Function1;
      23: aload_1
      24: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      29: areturn

  private final zio.ZIO $anonfun$4$$anonfun$1$$anonfun$3$$anonfun$1$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap, java.lang.Object, zio.managed.ZManaged, zio.ZIO$InterruptibilityRestorer, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: aload         5
       2: aload_0
       3: aload_1
       4: aload         4
       6: aload         6
       8: invokedynamic #3517,  0           // InvokeDynamic #224:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;Lzio/managed/ZManaged;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function0;
      13: aload_1
      14: invokeinterface #2740,  3         // InterfaceMethod zio/ZIO$InterruptibilityRestorer.apply:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      19: aload_0
      20: aload_1
      21: aload_2
      22: aload_3
      23: aload         6
      25: invokedynamic #3523,  0           // InvokeDynamic #225:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      30: aload_1
      31: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      36: areturn

  private final zio.ZIO $anonfun$4$$anonfun$1$$anonfun$3$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap, java.lang.Object, zio.managed.ZManaged, zio.ZIO$InterruptibilityRestorer, zio.ZEnvironment);
    Code:
       0: getstatic     #855                // Field zio/managed/ZManaged$ReleaseMap$.MODULE$:Lzio/managed/ZManaged$ReleaseMap$;
       3: aload_1
       4: invokevirtual #3532               // Method zio/managed/ZManaged$ReleaseMap$.make:(Ljava/lang/Object;)Lzio/ZIO;
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: aload         4
      13: aload         5
      15: invokedynamic #3538,  0           // InvokeDynamic #226:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;Ljava/lang/Object;Lzio/managed/ZManaged;Lzio/ZIO$InterruptibilityRestorer;)Lscala/Function1;
      20: aload_1
      21: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      26: areturn

  private final zio.ZIO $anonfun$4$$anonfun$1$$anonfun$3(java.lang.Object, zio.managed.ZManaged$ReleaseMap, java.lang.Object, zio.managed.ZManaged, zio.ZIO$InterruptibilityRestorer, java.lang.Object);
    Code:
       0: aload         6
       2: astore        7
       4: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       7: aload_1
       8: invokevirtual #404                // Method zio/ZIO$.environment:(Ljava/lang/Object;)Lzio/ZIO;
      11: aload_0
      12: aload_1
      13: aload_2
      14: aload_3
      15: aload         4
      17: aload         5
      19: invokedynamic #3549,  0           // InvokeDynamic #227:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;Ljava/lang/Object;Lzio/managed/ZManaged;Lzio/ZIO$InterruptibilityRestorer;)Lscala/Function1;
      24: aload_1
      25: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      30: areturn

  private final zio.ZIO $anonfun$4$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap, java.lang.Object, zio.managed.ZManaged, zio.ZIO$InterruptibilityRestorer);
    Code:
       0: aload_2
       1: aload_3
       2: aload_0
       3: invokedynamic #3559,  0           // InvokeDynamic #228:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
       8: aload_1
       9: invokevirtual #3495               // Method zio/managed/ZManaged$ReleaseMap.replace:(Ljava/lang/Object;Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      12: aload_0
      13: invokedynamic #3563,  0           // InvokeDynamic #229:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      18: aload_1
      19: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      24: aload_0
      25: aload_1
      26: aload_2
      27: aload_3
      28: aload         4
      30: aload         5
      32: invokedynamic #3567,  0           // InvokeDynamic #230:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;Ljava/lang/Object;Lzio/managed/ZManaged;Lzio/ZIO$InterruptibilityRestorer;)Lscala/Function1;
      37: aload_1
      38: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      43: areturn

  private final zio.ZIO $anonfun$4(java.lang.Object, zio.managed.ZManaged$ReleaseMap, java.lang.Object, zio.managed.ZManaged);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokedynamic #3579,  0           // InvokeDynamic #231:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;Ljava/lang/Object;Lzio/managed/ZManaged;)Lscala/Function1;
      14: aload_1
      15: invokevirtual #957                // Method zio/ZIO$.uninterruptibleMask:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      18: areturn

  private final scala.Tuple2 switchable$$anonfun$1$$anonfun$3(java.lang.Object, zio.managed.ZManaged$ReleaseMap, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #3587,  0           // InvokeDynamic #232:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;Ljava/lang/Object;)Lscala/Function1;
       9: astore        4
      11: getstatic     #1566               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      14: aload_3
      15: aload         4
      17: invokevirtual #1574               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      20: areturn

  private final scala.Function1 switchable$$anonfun$1$$anonfun$4(scala.Tuple2);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        23
       6: aload_2
       7: invokevirtual #2428               // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: astore_3
      11: aload_2
      12: invokevirtual #1705               // Method scala/Tuple2._2:()Ljava/lang/Object;
      15: checkcast     #1658               // class scala/Function1
      18: astore        4
      20: aload         4
      22: areturn
      23: new           #1644               // class scala/MatchError
      26: dup
      27: aload_2
      28: invokespecial #1647               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      31: athrow

  private final zio.managed.ZManaged switchable$$anonfun$1(java.lang.Object, zio.managed.ZManaged$ReleaseMap);
    Code:
       0: getstatic     #1146               // Field zio/managed/package$.MODULE$:Lzio/managed/package$;
       3: aload_2
       4: aload_0
       5: invokedynamic #3595,  0           // InvokeDynamic #233:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      10: aload_1
      11: invokevirtual #2770               // Method zio/managed/ZManaged$ReleaseMap.addIfOpen:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: aload_0
      15: aload_1
      16: invokedynamic #3599,  0           // InvokeDynamic #234:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      21: aload_1
      22: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      27: invokevirtual #1151               // Method zio/managed/package$.ZManagedZIOSyntax:(Lzio/ZIO;)Lzio/managed/package$ZManagedZIOSyntax;
      30: aload_1
      31: invokevirtual #1154               // Method zio/managed/package$ZManagedZIOSyntax.toManaged:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      34: aload_0
      35: aload_1
      36: aload_2
      37: invokedynamic #3603,  0           // InvokeDynamic #235:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;Lzio/managed/ZManaged$ReleaseMap;)Lscala/Function1;
      42: aload_1
      43: invokevirtual #526                // Method zio/managed/ZManaged.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      46: aload_0
      47: invokedynamic #3608,  0           // InvokeDynamic #236:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      52: aload_1
      53: invokevirtual #526                // Method zio/managed/ZManaged.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      56: areturn

  private final zio.managed.ZManaged unless$$anonfun$2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: invokestatic  #2198               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       9: ifeq          17
      12: aload_0
      13: invokevirtual #2184               // Method none:()Lzio/managed/ZManaged;
      16: areturn
      17: aload_2
      18: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      23: checkcast     #59                 // class zio/managed/ZManaged
      26: aload_3
      27: invokevirtual #3614               // Method zio/managed/ZManaged.asSome:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      30: areturn

  private final zio.Cause unsandbox$$anonfun$2$$anonfun$1$$anonfun$1(zio.Cause);
    Code:
       0: aload_1
       1: areturn

  private final zio.managed.ZManaged unsandbox$$anonfun$2$$anonfun$1(java.lang.Object, zio.Cause);
    Code:
       0: aload_0
       1: aload_0
       2: aload_2
       3: invokedynamic #3628,  0           // InvokeDynamic #237:apply:(Lzio/managed/ZManaged$;Lzio/Cause;)Lscala/Function0;
       8: aload_1
       9: invokevirtual #625                // Method failCause:(Lscala/Function0;Ljava/lang/Object;)Lzio/managed/ZManaged;
      12: areturn

  private final zio.managed.ZManaged unsandbox$$anonfun$2(scala.Function0, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #59                 // class zio/managed/ZManaged
       9: aload_0
      10: aload_2
      11: invokedynamic #3636,  0           // InvokeDynamic #238:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      16: getstatic     #1971               // Field zio/CanFail$.MODULE$:Lzio/CanFail$;
      19: getstatic     #1976               // Field scala/util/NotGiven$.MODULE$:Lscala/util/NotGiven$;
      22: invokevirtual #1979               // Method scala/util/NotGiven$.value:()Lscala/util/NotGiven;
      25: invokevirtual #1983               // Method zio/CanFail$.canFail:(Lscala/util/NotGiven;)Lzio/CanFail;
      28: aload_2
      29: invokevirtual #3640               // Method zio/managed/ZManaged.catchAll:(Lscala/Function1;Lzio/CanFail;Ljava/lang/Object;)Lzio/managed/ZManaged;
      32: areturn

  private final zio.managed.ZManaged when$$anonfun$2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: invokestatic  #2198               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       9: ifeq          26
      12: aload_2
      13: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      18: checkcast     #59                 // class zio/managed/ZManaged
      21: aload_3
      22: invokevirtual #3614               // Method zio/managed/ZManaged.asSome:(Ljava/lang/Object;)Lzio/managed/ZManaged;
      25: areturn
      26: aload_0
      27: invokevirtual #2184               // Method none:()Lzio/managed/ZManaged;
      30: areturn

  private final zio.managed.ZManaged whenCase$$anonfun$1$$anonfun$1(java.lang.Object, zio.managed.ZManaged);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #3614               // Method zio/managed/ZManaged.asSome:(Ljava/lang/Object;)Lzio/managed/ZManaged;
       5: areturn

  private final zio.managed.ZManaged whenCase$$anonfun$1$$anonfun$2(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #2184               // Method none:()Lzio/managed/ZManaged;
       4: areturn

  private final zio.managed.ZManaged whenCase$$anonfun$1(scala.Function0, scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: aload_3
       3: invokedynamic #3656,  0           // InvokeDynamic #239:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
       8: invokeinterface #3661,  2         // InterfaceMethod scala/PartialFunction.andThen:(Lscala/Function1;)Lscala/PartialFunction;
      13: aload_1
      14: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      19: aload_0
      20: invokedynamic #3665,  0           // InvokeDynamic #240:apply:(Lzio/managed/ZManaged$;)Lscala/Function1;
      25: invokeinterface #3669,  3         // InterfaceMethod scala/PartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      30: checkcast     #59                 // class zio/managed/ZManaged
      33: areturn

  private final java.lang.Object whenCaseManaged$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final zio.managed.ZManaged whenCaseManaged$$anonfun$1$$anonfun$1(scala.PartialFunction, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_3
       3: invokedynamic #3680,  0           // InvokeDynamic #241:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function0;
       8: aload_1
       9: aload_2
      10: invokevirtual #3682               // Method whenCase:(Lscala/Function0;Lscala/PartialFunction;Ljava/lang/Object;)Lzio/managed/ZManaged;
      13: areturn

  private final zio.managed.ZManaged whenCaseManaged$$anonfun$1(scala.Function0, scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #59                 // class zio/managed/ZManaged
       9: aload_0
      10: aload_2
      11: aload_3
      12: invokedynamic #3691,  0           // InvokeDynamic #242:apply:(Lzio/managed/ZManaged$;Lscala/PartialFunction;Ljava/lang/Object;)Lscala/Function1;
      17: aload_3
      18: invokevirtual #582                // Method zio/managed/ZManaged.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/managed/ZManaged;
      21: areturn

  private final boolean withChildren$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(zio.Fiber$Descriptor, zio.Fiber$Runtime);
    Code:
       0: aload_2
       1: invokevirtual #3696               // Method zio/Fiber$Runtime.id:()Lzio/FiberId$Runtime;
       4: aload_1
       5: invokevirtual #2854               // Method zio/Fiber$Descriptor.id:()Lzio/FiberId$Runtime;
       8: astore_3
       9: dup
      10: ifnonnull     21
      13: pop
      14: aload_3
      15: ifnull        32
      18: goto          28
      21: aload_3
      22: invokevirtual #1798               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      25: ifne          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  private final zio.Chunk withChildren$$anonfun$1$$anonfun$1$$anonfun$1$$anonfun$1(zio.Chunk, zio.Fiber$Descriptor);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokedynamic #3708,  0           // InvokeDynamic #243:apply:(Lzio/managed/ZManaged$;Lzio/Fiber$Descriptor;)Lscala/Function1;
       8: invokevirtual #3714               // Method zio/Chunk.filter:(Lscala/Function1;)Lzio/Chunk;
      11: areturn

  private final zio.ZIO withChildren$$anonfun$1$$anonfun$1$$anonfun$1(java.lang.Object, zio.Chunk);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_1
       4: invokevirtual #2847               // Method zio/ZIO$.descriptor:(Ljava/lang/Object;)Lzio/ZIO;
       7: aload_0
       8: aload_2
       9: invokedynamic #3727,  0           // InvokeDynamic #244:apply:(Lzio/managed/ZManaged$;Lzio/Chunk;)Lscala/Function1;
      14: aload_1
      15: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      20: areturn

  private final zio.Supervisor withChildren$$anonfun$1$$anonfun$1$$anonfun$2(zio.Supervisor);
    Code:
       0: aload_1
       1: areturn

  private final zio.managed.ZManaged withChildren$$anonfun$1$$anonfun$1(scala.Function1, java.lang.Object, zio.Supervisor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload_2
       4: invokevirtual #3740               // Method zio/Supervisor.value:(Ljava/lang/Object;)Lzio/ZIO;
       7: aload_0
       8: aload_2
       9: invokedynamic #3746,  0           // InvokeDynamic #245:apply:(Lzio/managed/ZManaged$;Ljava/lang/Object;)Lscala/Function1;
      14: aload_2
      15: invokeinterface #418,  3          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      20: invokeinterface #1660,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #59                 // class zio/managed/ZManaged
      28: invokevirtual #2405               // Method zio/managed/ZManaged.zio:()Lzio/ZIO;
      31: aload_0
      32: aload_3
      33: invokedynamic #3754,  0           // InvokeDynamic #246:apply:(Lzio/managed/ZManaged$;Lzio/Supervisor;)Lscala/Function0;
      38: aload_2
      39: invokeinterface #3757,  3         // InterfaceMethod zio/ZIO.supervised:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      44: invokevirtual #424                // Method apply:(Lzio/ZIO;)Lzio/managed/ZManaged;
      47: areturn

  private final zio.ZIO withChildren$$anonfun$1(scala.Function1, java.lang.Object);
    Code:
       0: getstatic     #3764               // Field zio/Supervisor$.MODULE$:Lzio/Supervisor$;
       3: iconst_1
       4: aload_2
       5: invokevirtual #3768               // Method zio/Supervisor$.track:(ZLjava/lang/Object;)Lzio/ZIO;
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokedynamic #3774,  0           // InvokeDynamic #247:apply:(Lzio/managed/ZManaged$;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      16: aload_2
      17: invokeinterface #823,  3          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      22: areturn

  private final zio.ZIO withParallism$$anonfun$1(scala.Function0, java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: invokevirtual #3309               // Method zio/ZIO$.Parallelism:()Lzio/FiberRef;
       6: getstatic     #1595               // Field scala/Some$.MODULE$:Lscala/Some$;
       9: aload_1
      10: invokeinterface #1925,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      15: invokevirtual #1604               // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
      18: aload_2
      19: invokeinterface #2918,  3         // InterfaceMethod zio/FiberRef.locallyScoped:(Ljava/lang/Object;Ljava/lang/Object;)Lzio/ZIO;
      24: areturn

  private final zio.ZIO withParallismUnbounded$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #401                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: invokevirtual #3309               // Method zio/ZIO$.Parallelism:()Lzio/FiberRef;
       6: getstatic     #248                // Field scala/None$.MODULE$:Lscala/None$;
       9: aload_1
      10: invokeinterface #2918,  3         // InterfaceMethod zio/FiberRef.locallyScoped:(Ljava/lang/Object;Ljava/lang/Object;)Lzio/ZIO;
      15: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #3789,  0           // InvokeDynamic #248:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
