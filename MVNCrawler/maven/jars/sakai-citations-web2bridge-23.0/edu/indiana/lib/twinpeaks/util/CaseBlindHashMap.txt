Compiled from "CaseBlindHashMap.java"
public class edu.indiana.lib.twinpeaks.util.CaseBlindHashMap extends java.util.HashMap {
  private static final org.slf4j.Logger log;

  public edu.indiana.lib.twinpeaks.util.CaseBlindHashMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/HashMap."<init>":()V
       4: return

  public edu.indiana.lib.twinpeaks.util.CaseBlindHashMap(edu.indiana.lib.twinpeaks.util.CaseBlindHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
       5: return

  public edu.indiana.lib.twinpeaks.util.CaseBlindHashMap(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #3                  // Method java/util/HashMap."<init>":(I)V
       5: return

  public edu.indiana.lib.twinpeaks.util.CaseBlindHashMap(int, float);
    Code:
       0: aload_0
       1: iload_1
       2: fload_2
       3: invokespecial #4                  // Method java/util/HashMap."<init>":(IF)V
       6: return

  public java.util.Set stringKeySet();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/util/HashMap.keySet:()Ljava/util/Set;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: new           #7                  // class java/util/HashMap
      13: dup
      14: invokespecial #1                  // Method java/util/HashMap."<init>":()V
      17: astore_2
      18: aload_1
      19: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          54
      27: aload_1
      28: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #10                 // class edu/indiana/lib/twinpeaks/util/CaseBlindHashMap$CaseBlindString
      36: invokevirtual #11                 // Method edu/indiana/lib/twinpeaks/util/CaseBlindHashMap$CaseBlindString.toString:()Ljava/lang/String;
      39: astore_3
      40: aload_2
      41: aload_3
      42: aload_0
      43: aload_3
      44: invokevirtual #12                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
      47: invokevirtual #13                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: goto          18
      54: aload_2
      55: invokevirtual #5                  // Method java/util/HashMap.keySet:()Ljava/util/Set;
      58: areturn

  public java.util.Iterator stringKeyIterator();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method stringKeySet:()Ljava/util/Set;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: areturn

  public boolean containsKey(java.lang.String);
    Code:
       0: aload_0
       1: new           #10                 // class edu/indiana/lib/twinpeaks/util/CaseBlindHashMap$CaseBlindString
       4: dup
       5: aload_1
       6: invokespecial #15                 // Method edu/indiana/lib/twinpeaks/util/CaseBlindHashMap$CaseBlindString."<init>":(Ljava/lang/String;)V
       9: invokespecial #16                 // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      12: ireturn

  public java.lang.Object get(java.lang.String);
    Code:
       0: aload_0
       1: new           #10                 // class edu/indiana/lib/twinpeaks/util/CaseBlindHashMap$CaseBlindString
       4: dup
       5: aload_1
       6: invokespecial #15                 // Method edu/indiana/lib/twinpeaks/util/CaseBlindHashMap$CaseBlindString."<init>":(Ljava/lang/String;)V
       9: invokespecial #17                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public void put(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: new           #10                 // class edu/indiana/lib/twinpeaks/util/CaseBlindHashMap$CaseBlindString
       4: dup
       5: aload_1
       6: invokespecial #15                 // Method edu/indiana/lib/twinpeaks/util/CaseBlindHashMap$CaseBlindString."<init>":(Ljava/lang/String;)V
       9: aload_2
      10: invokespecial #13                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: return

  public void remove(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #18                 // class java/lang/UnsupportedOperationException
       7: dup
       8: ldc           #19                 // String null key
      10: invokespecial #20                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: new           #10                 // class edu/indiana/lib/twinpeaks/util/CaseBlindHashMap$CaseBlindString
      18: dup
      19: aload_1
      20: invokespecial #15                 // Method edu/indiana/lib/twinpeaks/util/CaseBlindHashMap$CaseBlindString."<init>":(Ljava/lang/String;)V
      23: invokespecial #21                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: return

  static {};
    Code:
       0: ldc           #22                 // class edu/indiana/lib/twinpeaks/util/CaseBlindHashMap
       2: invokestatic  #23                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #24                 // Field log:Lorg/slf4j/Logger;
       8: return
}
