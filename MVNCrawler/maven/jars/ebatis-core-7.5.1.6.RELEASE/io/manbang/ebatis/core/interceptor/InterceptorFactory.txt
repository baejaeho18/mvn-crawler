Compiled from "InterceptorFactory.java"
public class io.manbang.ebatis.core.interceptor.InterceptorFactory {
  private static final org.apache.commons.lang3.concurrent.LazyInitializer<io.manbang.ebatis.core.interceptor.Interceptor> INTERCEPTORS;

  public io.manbang.ebatis.core.interceptor.InterceptorFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static io.manbang.ebatis.core.interceptor.Interceptor interceptors();
    Code:
       0: getstatic     #2                  // Field INTERCEPTORS:Lorg/apache/commons/lang3/concurrent/LazyInitializer;
       3: invokevirtual #3                  // Method org/apache/commons/lang3/concurrent/LazyInitializer.get:()Ljava/lang/Object;
       6: checkcast     #4                  // class io/manbang/ebatis/core/interceptor/Interceptor
       9: areturn
      10: astore_0
      11: new           #6                  // class io/manbang/ebatis/core/exception/InterceptorExcepiton
      14: dup
      15: ldc           #7                  // String 获取 Interceptor 失败
      17: aload_0
      18: invokespecial #8                  // Method io/manbang/ebatis/core/exception/InterceptorExcepiton."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      21: athrow
    Exception table:
       from    to  target type
           0     9    10   Class org/apache/commons/lang3/concurrent/ConcurrentException

  static {};
    Code:
       0: new           #9                  // class io/manbang/ebatis/core/interceptor/InterceptorFactory$1
       3: dup
       4: invokespecial #10                 // Method io/manbang/ebatis/core/interceptor/InterceptorFactory$1."<init>":()V
       7: putstatic     #2                  // Field INTERCEPTORS:Lorg/apache/commons/lang3/concurrent/LazyInitializer;
      10: return
}
