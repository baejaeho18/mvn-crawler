Compiled from "Interceptors.java"
public class io.manbang.ebatis.core.interceptor.Interceptors implements io.manbang.ebatis.core.interceptor.Interceptor {
  private java.util.List<io.manbang.ebatis.core.interceptor.Interceptor> interceptors;

  public io.manbang.ebatis.core.interceptor.Interceptors(java.util.List<io.manbang.ebatis.core.interceptor.Interceptor>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field interceptors:Ljava/util/List;
       9: return

  public int getOrder();
    Code:
       0: iconst_0
       1: ireturn

  public void handleException(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field interceptors:Ljava/util/List;
       4: aload_1
       5: invokedynamic #3,  0              // InvokeDynamic #0:accept:(Ljava/lang/Throwable;)Ljava/util/function/Consumer;
      10: invokeinterface #4,  2            // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      15: return

  public void preRequest(java.lang.Object[], io.manbang.ebatis.core.cluster.Cluster, io.manbang.ebatis.core.meta.MethodMeta);
    Code:
       0: aload_0
       1: getfield      #2                  // Field interceptors:Ljava/util/List;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokedynamic #5,  0              // InvokeDynamic #1:accept:([Ljava/lang/Object;Lio/manbang/ebatis/core/cluster/Cluster;Lio/manbang/ebatis/core/meta/MethodMeta;)Ljava/util/function/Consumer;
      12: invokeinterface #4,  2            // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      17: return

  public <T extends org.elasticsearch.action.ActionRequest> void postRequest(io.manbang.ebatis.core.interceptor.RequestInfo<T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field interceptors:Ljava/util/List;
       4: aload_1
       5: invokedynamic #6,  0              // InvokeDynamic #2:accept:(Lio/manbang/ebatis/core/interceptor/RequestInfo;)Ljava/util/function/Consumer;
      10: invokeinterface #4,  2            // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      15: return

  public <T extends org.elasticsearch.action.ActionRequest> void preResponse(io.manbang.ebatis.core.interceptor.PreResponseInfo<T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field interceptors:Ljava/util/List;
       4: aload_1
       5: invokedynamic #7,  0              // InvokeDynamic #3:accept:(Lio/manbang/ebatis/core/interceptor/PreResponseInfo;)Ljava/util/function/Consumer;
      10: invokeinterface #4,  2            // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      15: return

  public <T extends org.elasticsearch.action.ActionRequest, R extends org.elasticsearch.action.ActionResponse> void postResponse(io.manbang.ebatis.core.interceptor.PostResponseInfo<T, R>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field interceptors:Ljava/util/List;
       4: aload_1
       5: invokedynamic #8,  0              // InvokeDynamic #4:accept:(Lio/manbang/ebatis/core/interceptor/PostResponseInfo;)Ljava/util/function/Consumer;
      10: invokeinterface #4,  2            // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      15: return

  private static void lambda$postResponse$4(io.manbang.ebatis.core.interceptor.PostResponseInfo, io.manbang.ebatis.core.interceptor.Interceptor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #9,  2            // InterfaceMethod io/manbang/ebatis/core/interceptor/Interceptor.postResponse:(Lio/manbang/ebatis/core/interceptor/PostResponseInfo;)V
       7: return

  private static void lambda$preResponse$3(io.manbang.ebatis.core.interceptor.PreResponseInfo, io.manbang.ebatis.core.interceptor.Interceptor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #10,  2           // InterfaceMethod io/manbang/ebatis/core/interceptor/Interceptor.preResponse:(Lio/manbang/ebatis/core/interceptor/PreResponseInfo;)V
       7: return

  private static void lambda$postRequest$2(io.manbang.ebatis.core.interceptor.RequestInfo, io.manbang.ebatis.core.interceptor.Interceptor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #11,  2           // InterfaceMethod io/manbang/ebatis/core/interceptor/Interceptor.postRequest:(Lio/manbang/ebatis/core/interceptor/RequestInfo;)V
       7: return

  private static void lambda$preRequest$1(java.lang.Object[], io.manbang.ebatis.core.cluster.Cluster, io.manbang.ebatis.core.meta.MethodMeta, io.manbang.ebatis.core.interceptor.Interceptor);
    Code:
       0: aload_3
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokeinterface #12,  4           // InterfaceMethod io/manbang/ebatis/core/interceptor/Interceptor.preRequest:([Ljava/lang/Object;Lio/manbang/ebatis/core/cluster/Cluster;Lio/manbang/ebatis/core/meta/MethodMeta;)V
       9: return

  private static void lambda$handleException$0(java.lang.Throwable, io.manbang.ebatis.core.interceptor.Interceptor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #13,  2           // InterfaceMethod io/manbang/ebatis/core/interceptor/Interceptor.handleException:(Ljava/lang/Throwable;)V
       7: return
}
