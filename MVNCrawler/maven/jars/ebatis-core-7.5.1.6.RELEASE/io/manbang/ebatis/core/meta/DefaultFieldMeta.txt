Compiled from "DefaultFieldMeta.java"
class io.manbang.ebatis.core.meta.DefaultFieldMeta extends io.manbang.ebatis.core.meta.AbstractConditionMeta<java.lang.reflect.Field> implements io.manbang.ebatis.core.meta.FieldMeta {
  private final java.lang.reflect.Field field;

  private final boolean basic;

  private final boolean basicArrayOrCollection;

  private final java.lang.reflect.Method readMethod;

  private final java.lang.Class<? extends java.lang.annotation.Annotation> queryClauseAnnotationClass;

  private final java.lang.annotation.Annotation queryClauseAnnotation;

  private final io.manbang.ebatis.core.builder.QueryBuilderFactory queryBuilderFactory;

  private final boolean termsQuery;

  private final java.util.Map<java.lang.Class<? extends java.lang.annotation.Annotation>, java.util.Optional<? extends java.lang.annotation.Annotation>> metas;

  io.manbang.ebatis.core.meta.DefaultFieldMeta(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #1                  // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
       6: aload_1
       7: invokevirtual #2                  // Method java/lang/reflect/Field.getGenericType:()Ljava/lang/reflect/Type;
      10: invokespecial #3                  // Method io/manbang/ebatis/core/meta/AbstractConditionMeta."<init>":(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/lang/reflect/Type;)V
      13: aload_0
      14: new           #4                  // class java/util/concurrent/ConcurrentHashMap
      17: dup
      18: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      21: putfield      #6                  // Field metas:Ljava/util/Map;
      24: aload_0
      25: aload_1
      26: putfield      #7                  // Field field:Ljava/lang/reflect/Field;
      29: aload_0
      30: aload_0
      31: aload_1
      32: invokespecial #8                  // Method getReadMethod:(Ljava/lang/reflect/Field;)Ljava/lang/reflect/Method;
      35: putfield      #9                  // Field readMethod:Ljava/lang/reflect/Method;
      38: aload_0
      39: aload_1
      40: invokespecial #10                 // Method getActualType:(Ljava/lang/reflect/Field;)Ljava/lang/Class;
      43: astore_2
      44: aload_0
      45: aload_2
      46: invokestatic  #11                 // Method io/manbang/ebatis/core/meta/MetaUtils.isBasic:(Ljava/lang/Class;)Z
      49: putfield      #12                 // Field basic:Z
      52: aload_0
      53: aload_0
      54: invokevirtual #13                 // Method isArrayOrCollection:()Z
      57: ifeq          71
      60: aload_0
      61: getfield      #12                 // Field basic:Z
      64: ifeq          71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: putfield      #14                 // Field basicArrayOrCollection:Z
      75: aload_0
      76: aload_0
      77: invokestatic  #15                 // Method io/manbang/ebatis/core/meta/QueryClauses.getQueryClauseClass:(Lio/manbang/ebatis/core/meta/AnnotatedMeta;)Ljava/lang/Class;
      80: putfield      #16                 // Field queryClauseAnnotationClass:Ljava/lang/Class;
      83: aload_0
      84: aload_0
      85: getfield      #16                 // Field queryClauseAnnotationClass:Ljava/lang/Class;
      88: invokevirtual #17                 // Method findAnnotation:(Ljava/lang/Class;)Ljava/util/Optional;
      91: astore_3
      92: aload_0
      93: aload_3
      94: aconst_null
      95: invokevirtual #18                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      98: checkcast     #19                 // class java/lang/annotation/Annotation
     101: putfield      #20                 // Field queryClauseAnnotation:Ljava/lang/annotation/Annotation;
     104: aload_0
     105: aload_3
     106: invokedynamic #21,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
     111: invokevirtual #22                 // Method java/util/Optional.flatMap:(Ljava/util/function/Function;)Ljava/util/Optional;
     114: getstatic     #23                 // Field io/manbang/ebatis/core/annotation/QueryType.AUTO:Lio/manbang/ebatis/core/annotation/QueryType;
     117: invokevirtual #18                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     120: checkcast     #24                 // class io/manbang/ebatis/core/annotation/QueryType
     123: invokevirtual #25                 // Method io/manbang/ebatis/core/annotation/QueryType.getQueryBuilderFactory:()Lio/manbang/ebatis/core/builder/QueryBuilderFactory;
     126: putfield      #26                 // Field queryBuilderFactory:Lio/manbang/ebatis/core/builder/QueryBuilderFactory;
     129: aload_0
     130: aload_0
     131: getfield      #26                 // Field queryBuilderFactory:Lio/manbang/ebatis/core/builder/QueryBuilderFactory;
     134: invokestatic  #27                 // InterfaceMethod io/manbang/ebatis/core/builder/QueryBuilderFactory.terms:()Lio/manbang/ebatis/core/builder/QueryBuilderFactory;
     137: if_acmpne     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: putfield      #28                 // Field termsQuery:Z
     148: aload_0
     149: invokespecial #29                 // Method validate:()V
     152: return

  private void validate();
    Code:
       0: aload_0
       1: getfield      #26                 // Field queryBuilderFactory:Lio/manbang/ebatis/core/builder/QueryBuilderFactory;
       4: invokestatic  #30                 // InterfaceMethod io/manbang/ebatis/core/builder/QueryBuilderFactory.exists:()Lio/manbang/ebatis/core/builder/QueryBuilderFactory;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: istore_1
      16: getstatic     #31                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      19: aload_0
      20: getfield      #7                  // Field field:Ljava/lang/reflect/Field;
      23: invokevirtual #1                  // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      26: if_acmpeq     41
      29: ldc           #32                 // class java/lang/Boolean
      31: aload_0
      32: getfield      #7                  // Field field:Ljava/lang/reflect/Field;
      35: invokevirtual #1                  // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      38: if_acmpne     45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: istore_2
      47: iload_1
      48: ifeq          85
      51: iload_2
      52: ifne          85
      55: new           #33                 // class io/manbang/ebatis/core/exception/ConditionNotSupportException
      58: dup
      59: new           #34                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      66: aload_0
      67: getfield      #7                  // Field field:Ljava/lang/reflect/Field;
      70: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: ldc           #37                 // String :Exists query must be boolean or Boolean!
      75: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #40                 // Method io/manbang/ebatis/core/exception/ConditionNotSupportException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: return

  private java.lang.Class<?> getActualType(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method isArray:()Z
       4: ifeq          18
       7: aload_0
       8: invokevirtual #42                 // Method getType:()Ljava/lang/Class;
      11: invokevirtual #43                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      14: astore_2
      15: goto          50
      18: aload_0
      19: invokevirtual #44                 // Method isCollection:()Z
      22: ifeq          45
      25: aload_1
      26: invokestatic  #45                 // InterfaceMethod io/manbang/ebatis/core/generic/GenericType.forField:(Ljava/lang/reflect/Field;)Lio/manbang/ebatis/core/generic/GenericType;
      29: iconst_1
      30: newarray       int
      32: dup
      33: iconst_0
      34: iconst_0
      35: iastore
      36: invokeinterface #46,  2           // InterfaceMethod io/manbang/ebatis/core/generic/GenericType.resolveGeneric:([I)Ljava/lang/Class;
      41: astore_2
      42: goto          50
      45: aload_0
      46: invokevirtual #42                 // Method getType:()Ljava/lang/Class;
      49: astore_2
      50: aload_2
      51: areturn

  public java.lang.reflect.Field getElement();
    Code:
       0: aload_0
       1: getfield      #7                  // Field field:Ljava/lang/reflect/Field;
       4: areturn

  private java.lang.reflect.Method getReadMethod(java.lang.reflect.Field);
    Code:
       0: aload_1
       1: invokevirtual #47                 // Method java/lang/reflect/Field.getDeclaringClass:()Ljava/lang/Class;
       4: invokestatic  #48                 // Method java/beans/Introspector.getBeanInfo:(Ljava/lang/Class;)Ljava/beans/BeanInfo;
       7: astore_2
       8: goto          23
      11: astore_3
      12: new           #50                 // class io/manbang/ebatis/core/exception/EbatisException
      15: dup
      16: ldc           #51                 // String Introspect exception!
      18: aload_3
      19: invokespecial #52                 // Method io/manbang/ebatis/core/exception/EbatisException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      22: athrow
      23: aload_2
      24: invokeinterface #53,  1           // InterfaceMethod java/beans/BeanInfo.getPropertyDescriptors:()[Ljava/beans/PropertyDescriptor;
      29: astore_3
      30: aload_3
      31: arraylength
      32: istore        4
      34: iconst_0
      35: istore        5
      37: iload         5
      39: iload         4
      41: if_icmpge     77
      44: aload_3
      45: iload         5
      47: aaload
      48: astore        6
      50: aload         6
      52: invokevirtual #54                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
      55: aload_1
      56: invokevirtual #55                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      59: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      62: ifeq          71
      65: aload         6
      67: invokevirtual #57                 // Method java/beans/PropertyDescriptor.getReadMethod:()Ljava/lang/reflect/Method;
      70: areturn
      71: iinc          5, 1
      74: goto          37
      77: new           #58                 // class io/manbang/ebatis/core/exception/ReadMethodNotFoundException
      80: dup
      81: aload_1
      82: invokevirtual #59                 // Method java/lang/reflect/Field.toString:()Ljava/lang/String;
      85: invokespecial #60                 // Method io/manbang/ebatis/core/exception/ReadMethodNotFoundException."<init>":(Ljava/lang/String;)V
      88: athrow
    Exception table:
       from    to  target type
           0     8    11   Class java/beans/IntrospectionException

  protected java.lang.String getName(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #61                 // Method io/manbang/ebatis/core/meta/AbstractConditionMeta.getName:(Ljava/lang/reflect/AnnotatedElement;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: invokestatic  #62                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
      10: ifeq          20
      13: aload_1
      14: invokevirtual #55                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      17: goto          21
      20: aload_2
      21: astore_2
      22: aload_1
      23: invokevirtual #47                 // Method java/lang/reflect/Field.getDeclaringClass:()Ljava/lang/Class;
      26: astore_3
      27: aload_0
      28: aload_3
      29: invokespecial #63                 // Method getPrefix:(Ljava/lang/Class;)Ljava/lang/String;
      32: astore        4
      34: aload         4
      36: ifnonnull     41
      39: aload_2
      40: areturn
      41: ldc           #64                 // String %s.%s
      43: iconst_2
      44: anewarray     #65                 // class java/lang/Object
      47: dup
      48: iconst_0
      49: aload         4
      51: aastore
      52: dup
      53: iconst_1
      54: aload_2
      55: aastore
      56: invokestatic  #66                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      59: areturn

  private java.lang.String getPrefix(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #67                 // class io/manbang/ebatis/core/annotation/Prefix
       3: invokevirtual #68                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
       6: ifeq          27
       9: aload_1
      10: ldc           #67                 // class io/manbang/ebatis/core/annotation/Prefix
      12: invokevirtual #69                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      15: checkcast     #67                 // class io/manbang/ebatis/core/annotation/Prefix
      18: invokeinterface #70,  1           // InterfaceMethod io/manbang/ebatis/core/annotation/Prefix.value:()Ljava/lang/String;
      23: invokestatic  #71                 // Method org/apache/commons/lang3/StringUtils.trimToNull:(Ljava/lang/String;)Ljava/lang/String;
      26: areturn
      27: aconst_null
      28: areturn

  public <A extends java.lang.annotation.Annotation> java.util.Optional<A> findAttributeAnnotation(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field metas:Ljava/util/Map;
       4: aload_1
       5: aload_0
       6: invokedynamic #72,  0             // InvokeDynamic #1:apply:(Lio/manbang/ebatis/core/meta/DefaultFieldMeta;)Ljava/util/function/Function;
      11: invokeinterface #73,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      16: checkcast     #74                 // class java/util/Optional
      19: areturn

  public java.lang.Object getValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #9                  // Field readMethod:Ljava/lang/reflect/Method;
       4: aload_1
       5: iconst_0
       6: anewarray     #65                 // class java/lang/Object
       9: invokevirtual #75                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn
      13: astore_2
      14: new           #77                 // class io/manbang/ebatis/core/exception/ReadMethodInvokeException
      17: dup
      18: aload_2
      19: invokespecial #78                 // Method io/manbang/ebatis/core/exception/ReadMethodInvokeException."<init>":(Ljava/lang/Exception;)V
      22: athrow
    Exception table:
       from    to  target type
           0    12    13   Class java/lang/Exception

  public boolean isBasic();
    Code:
       0: aload_0
       1: getfield      #12                 // Field basic:Z
       4: ireturn

  public boolean isBasicArrayOrCollection();
    Code:
       0: aload_0
       1: getfield      #14                 // Field basicArrayOrCollection:Z
       4: ireturn

  public java.lang.Class<? extends java.lang.annotation.Annotation> getQueryClauseAnnotationClass();
    Code:
       0: aload_0
       1: getfield      #16                 // Field queryClauseAnnotationClass:Ljava/lang/Class;
       4: areturn

  public io.manbang.ebatis.core.builder.QueryBuilderFactory getQueryBuilderFactory();
    Code:
       0: aload_0
       1: getfield      #26                 // Field queryBuilderFactory:Lio/manbang/ebatis/core/builder/QueryBuilderFactory;
       4: areturn

  public java.util.Optional<java.lang.annotation.Annotation> getQueryClauseAnnotation();
    Code:
       0: aload_0
       1: getfield      #20                 // Field queryClauseAnnotation:Ljava/lang/annotation/Annotation;
       4: invokestatic  #79                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       7: areturn

  public java.util.Map<java.lang.Class<? extends java.lang.annotation.Annotation>, java.util.List<io.manbang.ebatis.core.meta.FieldMeta>> getQueryClauses(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #7                  // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: ifnonnull     12
       8: aconst_null
       9: goto          16
      12: aload_1
      13: invokevirtual #80                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: invokestatic  #81                 // InterfaceMethod io/manbang/ebatis/core/meta/ClassMeta.field:(Ljava/lang/reflect/Field;Ljava/lang/Class;)Lio/manbang/ebatis/core/meta/ClassMeta;
      19: invokeinterface #82,  1           // InterfaceMethod io/manbang/ebatis/core/meta/ClassMeta.getQueryClauses:()Ljava/util/Map;
      24: areturn

  public boolean isTermsQuery();
    Code:
       0: aload_0
       1: getfield      #28                 // Field termsQuery:Z
       4: ireturn

  protected java.lang.String getName(java.lang.reflect.AnnotatedElement);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #83                 // class java/lang/reflect/Field
       5: invokevirtual #84                 // Method getName:(Ljava/lang/reflect/Field;)Ljava/lang/String;
       8: areturn

  public java.lang.reflect.AnnotatedElement getElement();
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method getElement:()Ljava/lang/reflect/Field;
       4: areturn

  private java.util.Optional lambda$findAttributeAnnotation$2(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method getQueryClauseAnnotation:()Ljava/util/Optional;
       4: aload_1
       5: invokedynamic #87,  0             // InvokeDynamic #2:apply:(Ljava/lang/Class;)Ljava/util/function/Function;
      10: invokevirtual #22                 // Method java/util/Optional.flatMap:(Ljava/util/function/Function;)Ljava/util/Optional;
      13: areturn

  private static java.util.Optional lambda$null$1(java.lang.Class, java.lang.annotation.Annotation);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #88                 // Method io/manbang/ebatis/core/common/AnnotationUtils.findAttributeAnnotation:(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Ljava/util/Optional;
       5: areturn

  private static java.util.Optional lambda$new$0(java.lang.annotation.Annotation);
    Code:
       0: aload_0
       1: ldc           #24                 // class io/manbang/ebatis/core/annotation/QueryType
       3: invokestatic  #89                 // Method io/manbang/ebatis/core/common/AnnotationUtils.findAttribute:(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Ljava/util/Optional;
       6: areturn
}
