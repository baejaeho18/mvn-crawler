Compiled from "AbstractScript.java"
abstract class io.manbang.ebatis.core.domain.AbstractScript implements io.manbang.ebatis.core.domain.Script {
  private static final java.lang.String DEFAULT_LANG;

  private final java.lang.String idOrCode;

  private java.util.Map<java.lang.String, java.lang.Object> params;

  private java.lang.String lang;

  private java.util.Map<java.lang.String, java.lang.String> options;

  protected io.manbang.ebatis.core.domain.AbstractScript(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field idOrCode:Ljava/lang/String;
       9: aload_0
      10: aload_0
      11: aload_2
      12: invokespecial #3                  // Method toMap:(Ljava/lang/Object;)Ljava/util/Map;
      15: putfield      #4                  // Field params:Ljava/util/Map;
      18: aload_0
      19: ldc           #6                  // String painless
      21: putfield      #7                  // Field lang:Ljava/lang/String;
      24: aload_0
      25: invokestatic  #8                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      28: putfield      #9                  // Field options:Ljava/util/Map;
      31: return

  public java.lang.String getLang();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lang:Ljava/lang/String;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.String> getOptions();
    Code:
       0: aload_0
       1: getfield      #9                  // Field options:Ljava/util/Map;
       4: areturn

  public void setParams(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #3                  // Method toMap:(Ljava/lang/Object;)Ljava/util/Map;
       6: putfield      #4                  // Field params:Ljava/util/Map;
       9: return

  public void setParams(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field params:Ljava/util/Map;
       5: return

  private java.util.Map<java.lang.String, java.lang.Object> toMap(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #10                 // Method java/util/Objects.isNull:(Ljava/lang/Object;)Z
       4: ifeq          11
       7: invokestatic  #8                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      10: areturn
      11: aload_0
      12: aload_1
      13: invokespecial #11                 // Method beanToMap:(Ljava/lang/Object;)Ljava/util/Map;
      16: areturn

  private java.util.Map<java.lang.String, java.lang.Object> beanToMap(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #12                 // class java/util/Map
       4: ifeq          12
       7: aload_1
       8: checkcast     #12                 // class java/util/Map
      11: areturn
      12: aload_1
      13: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: invokestatic  #14                 // InterfaceMethod io/manbang/ebatis/core/meta/ClassMeta.of:(Ljava/lang/Class;)Lio/manbang/ebatis/core/meta/ClassMeta;
      19: astore_2
      20: aload_2
      21: invokeinterface #15,  1           // InterfaceMethod io/manbang/ebatis/core/meta/ClassMeta.getFieldMetas:()Ljava/util/List;
      26: invokeinterface #16,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      31: invokedynamic #17,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      36: aload_1
      37: invokedynamic #18,  0             // InvokeDynamic #1:apply:(Ljava/lang/Object;)Ljava/util/function/Function;
      42: invokestatic  #19                 // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      45: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      50: checkcast     #12                 // class java/util/Map
      53: areturn

  public java.lang.String getIdOrCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field idOrCode:Ljava/lang/String;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getParams();
    Code:
       0: aload_0
       1: getfield      #4                  // Field params:Ljava/util/Map;
       4: areturn

  public void setLang(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field lang:Ljava/lang/String;
       5: return

  public void setOptions(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field options:Ljava/util/Map;
       5: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #5                  // class io/manbang/ebatis/core/domain/AbstractScript
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #5                  // class io/manbang/ebatis/core/domain/AbstractScript
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #21                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #22                 // Method getIdOrCode:()Ljava/lang/String;
      35: astore_3
      36: aload_2
      37: invokevirtual #22                 // Method getIdOrCode:()Ljava/lang/String;
      40: astore        4
      42: aload_3
      43: ifnonnull     54
      46: aload         4
      48: ifnull        65
      51: goto          63
      54: aload_3
      55: aload         4
      57: invokevirtual #23                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: aload_0
      66: invokevirtual #24                 // Method getParams:()Ljava/util/Map;
      69: astore        5
      71: aload_2
      72: invokevirtual #24                 // Method getParams:()Ljava/util/Map;
      75: astore        6
      77: aload         5
      79: ifnonnull     90
      82: aload         6
      84: ifnull        102
      87: goto          100
      90: aload         5
      92: aload         6
      94: invokevirtual #23                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      97: ifne          102
     100: iconst_0
     101: ireturn
     102: aload_0
     103: invokevirtual #25                 // Method getLang:()Ljava/lang/String;
     106: astore        7
     108: aload_2
     109: invokevirtual #25                 // Method getLang:()Ljava/lang/String;
     112: astore        8
     114: aload         7
     116: ifnonnull     127
     119: aload         8
     121: ifnull        139
     124: goto          137
     127: aload         7
     129: aload         8
     131: invokevirtual #23                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     134: ifne          139
     137: iconst_0
     138: ireturn
     139: aload_0
     140: invokevirtual #26                 // Method getOptions:()Ljava/util/Map;
     143: astore        9
     145: aload_2
     146: invokevirtual #26                 // Method getOptions:()Ljava/util/Map;
     149: astore        10
     151: aload         9
     153: ifnonnull     164
     156: aload         10
     158: ifnull        176
     161: goto          174
     164: aload         9
     166: aload         10
     168: invokevirtual #23                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     171: ifne          176
     174: iconst_0
     175: ireturn
     176: iconst_1
     177: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #5                  // class io/manbang/ebatis/core/domain/AbstractScript
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #22                 // Method getIdOrCode:()Ljava/lang/String;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #27                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: invokevirtual #24                 // Method getParams:()Ljava/util/Map;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #27                 // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: aload_0
      57: invokevirtual #25                 // Method getLang:()Ljava/lang/String;
      60: astore        5
      62: iload_2
      63: bipush        59
      65: imul
      66: aload         5
      68: ifnonnull     76
      71: bipush        43
      73: goto          81
      76: aload         5
      78: invokevirtual #27                 // Method java/lang/Object.hashCode:()I
      81: iadd
      82: istore_2
      83: aload_0
      84: invokevirtual #26                 // Method getOptions:()Ljava/util/Map;
      87: astore        6
      89: iload_2
      90: bipush        59
      92: imul
      93: aload         6
      95: ifnonnull     103
      98: bipush        43
     100: goto          108
     103: aload         6
     105: invokevirtual #27                 // Method java/lang/Object.hashCode:()I
     108: iadd
     109: istore_2
     110: iload_2
     111: ireturn

  public java.lang.String toString();
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #30                 // String AbstractScript(idOrCode=
       9: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #22                 // Method getIdOrCode:()Ljava/lang/String;
      16: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #32                 // String , params=
      21: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #24                 // Method getParams:()Ljava/util/Map;
      28: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #34                 // String , lang=
      33: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #25                 // Method getLang:()Ljava/lang/String;
      40: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #35                 // String , options=
      45: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #26                 // Method getOptions:()Ljava/util/Map;
      52: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #36                 // String )
      57: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn

  private static java.lang.Object lambda$beanToMap$0(java.lang.Object, io.manbang.ebatis.core.meta.FieldMeta);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #38,  2           // InterfaceMethod io/manbang/ebatis/core/meta/FieldMeta.getValue:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn
}
