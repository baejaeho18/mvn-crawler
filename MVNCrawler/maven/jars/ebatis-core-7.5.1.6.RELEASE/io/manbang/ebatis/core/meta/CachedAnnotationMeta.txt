Compiled from "CachedAnnotationMeta.java"
class io.manbang.ebatis.core.meta.CachedAnnotationMeta implements io.manbang.ebatis.core.meta.AnnotationMeta {
  private static final java.util.Map<java.lang.Class<? extends java.lang.annotation.Annotation>, io.manbang.ebatis.core.meta.AnnotationMeta> METAS;

  private final java.lang.Class<? extends java.lang.annotation.Annotation> annotationType;

  private final java.util.List<io.manbang.ebatis.core.meta.AnnotationAttribute> attributes;

  private io.manbang.ebatis.core.meta.CachedAnnotationMeta(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field annotationType:Ljava/lang/Class;
       9: aload_0
      10: aload_0
      11: aload_1
      12: invokespecial #3                  // Method getAttributes:(Ljava/lang/Class;)Ljava/util/List;
      15: putfield      #4                  // Field attributes:Ljava/util/List;
      18: return

  static io.manbang.ebatis.core.meta.AnnotationMeta of(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: getstatic     #5                  // Field METAS:Ljava/util/Map;
       3: aload_0
       4: invokedynamic #6,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
       9: invokeinterface #7,  3            // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      14: checkcast     #8                  // class io/manbang/ebatis/core/meta/AnnotationMeta
      17: areturn

  private java.util.List<io.manbang.ebatis.core.meta.AnnotationAttribute> getAttributes(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method java/lang/Class.getDeclaredMethods:()[Ljava/lang/reflect/Method;
       4: invokestatic  #10                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       7: invokedynamic #11,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      12: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      17: invokestatic  #13                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      20: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      25: checkcast     #15                 // class java/util/List
      28: invokestatic  #16                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      31: areturn

  public java.util.List<io.manbang.ebatis.core.meta.AnnotationAttribute> getAttributes();
    Code:
       0: aload_0
       1: getfield      #4                  // Field attributes:Ljava/util/List;
       4: areturn

  public java.lang.Class<? extends java.lang.annotation.Annotation> getAnnotationType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field annotationType:Ljava/lang/Class;
       4: areturn

  public java.lang.Class<? extends java.lang.annotation.Annotation> getElement();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getAnnotationType:()Ljava/lang/Class;
       4: areturn

  public java.lang.reflect.AnnotatedElement getElement();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getElement:()Ljava/lang/Class;
       4: areturn

  static {};
    Code:
       0: new           #19                 // class java/util/HashMap
       3: dup
       4: invokespecial #20                 // Method java/util/HashMap."<init>":()V
       7: putstatic     #5                  // Field METAS:Ljava/util/Map;
      10: return
}
