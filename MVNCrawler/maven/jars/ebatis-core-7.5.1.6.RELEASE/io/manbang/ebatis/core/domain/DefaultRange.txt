Compiled from "DefaultRange.java"
class io.manbang.ebatis.core.domain.DefaultRange<T extends java.lang.Comparable<T>> implements io.manbang.ebatis.core.domain.Range<T> {
  private final T min;

  private final T max;

  private io.manbang.ebatis.core.domain.IntervalType leftIntervalType;

  private io.manbang.ebatis.core.domain.IntervalType rightIntervalType;

  private java.lang.String name;

  private org.elasticsearch.common.geo.ShapeRelation relation;

  public io.manbang.ebatis.core.domain.DefaultRange(T, T);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field min:Ljava/lang/Comparable;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field max:Ljava/lang/Comparable;
      14: aload_0
      15: invokevirtual #4                  // Method openLeft:()Lio/manbang/ebatis/core/domain/Range;
      18: pop
      19: aload_0
      20: invokevirtual #5                  // Method openRight:()Lio/manbang/ebatis/core/domain/Range;
      23: pop
      24: aload_1
      25: ifnonnull     42
      28: aload_2
      29: ifnonnull     42
      32: new           #6                  // class io/manbang/ebatis/core/exception/ConditionNotSupportException
      35: dup
      36: ldc           #7                  // String 范围的上下限不能同时为空
      38: invokespecial #8                  // Method io/manbang/ebatis/core/exception/ConditionNotSupportException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: return

  public io.manbang.ebatis.core.domain.Range<T> setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  private java.lang.Object getValue(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #10                 // class java/util/Date
       4: ifeq          18
       7: aload_1
       8: checkcast     #10                 // class java/util/Date
      11: invokevirtual #11                 // Method java/util/Date.getTime:()J
      14: invokestatic  #12                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      17: areturn
      18: aload_1
      19: instanceof    #13                 // class java/util/Calendar
      22: ifeq          36
      25: aload_1
      26: checkcast     #13                 // class java/util/Calendar
      29: invokevirtual #14                 // Method java/util/Calendar.getTimeInMillis:()J
      32: invokestatic  #12                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      35: areturn
      36: aload_1
      37: areturn

  public io.manbang.ebatis.core.domain.Range<T> closeLeft();
    Code:
       0: aload_0
       1: getstatic     #15                 // Field io/manbang/ebatis/core/domain/IntervalType.CLOSED_INTERVAL:Lio/manbang/ebatis/core/domain/IntervalType;
       4: putfield      #16                 // Field leftIntervalType:Lio/manbang/ebatis/core/domain/IntervalType;
       7: aload_0
       8: areturn

  public io.manbang.ebatis.core.domain.Range<T> openLeft();
    Code:
       0: aload_0
       1: getstatic     #17                 // Field io/manbang/ebatis/core/domain/IntervalType.OPEN_INTERVAL:Lio/manbang/ebatis/core/domain/IntervalType;
       4: putfield      #16                 // Field leftIntervalType:Lio/manbang/ebatis/core/domain/IntervalType;
       7: aload_0
       8: areturn

  public io.manbang.ebatis.core.domain.Range<T> closeRight();
    Code:
       0: aload_0
       1: getstatic     #15                 // Field io/manbang/ebatis/core/domain/IntervalType.CLOSED_INTERVAL:Lio/manbang/ebatis/core/domain/IntervalType;
       4: putfield      #18                 // Field rightIntervalType:Lio/manbang/ebatis/core/domain/IntervalType;
       7: aload_0
       8: areturn

  public io.manbang.ebatis.core.domain.Range<T> openRight();
    Code:
       0: aload_0
       1: getstatic     #17                 // Field io/manbang/ebatis/core/domain/IntervalType.OPEN_INTERVAL:Lio/manbang/ebatis/core/domain/IntervalType;
       4: putfield      #18                 // Field rightIntervalType:Lio/manbang/ebatis/core/domain/IntervalType;
       7: aload_0
       8: areturn

  public io.manbang.ebatis.core.domain.Range<T> intersects();
    Code:
       0: aload_0
       1: getstatic     #19                 // Field org/elasticsearch/common/geo/ShapeRelation.INTERSECTS:Lorg/elasticsearch/common/geo/ShapeRelation;
       4: putfield      #20                 // Field relation:Lorg/elasticsearch/common/geo/ShapeRelation;
       7: aload_0
       8: areturn

  public io.manbang.ebatis.core.domain.Range<T> disjoint();
    Code:
       0: aload_0
       1: getstatic     #21                 // Field org/elasticsearch/common/geo/ShapeRelation.DISJOINT:Lorg/elasticsearch/common/geo/ShapeRelation;
       4: putfield      #20                 // Field relation:Lorg/elasticsearch/common/geo/ShapeRelation;
       7: aload_0
       8: areturn

  public io.manbang.ebatis.core.domain.Range<T> within();
    Code:
       0: aload_0
       1: getstatic     #22                 // Field org/elasticsearch/common/geo/ShapeRelation.WITHIN:Lorg/elasticsearch/common/geo/ShapeRelation;
       4: putfield      #20                 // Field relation:Lorg/elasticsearch/common/geo/ShapeRelation;
       7: aload_0
       8: areturn

  public io.manbang.ebatis.core.domain.Range<T> contains();
    Code:
       0: aload_0
       1: getstatic     #23                 // Field org/elasticsearch/common/geo/ShapeRelation.CONTAINS:Lorg/elasticsearch/common/geo/ShapeRelation;
       4: putfield      #20                 // Field relation:Lorg/elasticsearch/common/geo/ShapeRelation;
       7: aload_0
       8: areturn

  public org.elasticsearch.index.query.QueryBuilder toBuilder();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field min:Ljava/lang/Comparable;
       5: invokespecial #24                 // Method getValue:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_1
       9: aload_0
      10: aload_0
      11: getfield      #3                  // Field max:Ljava/lang/Comparable;
      14: invokespecial #24                 // Method getValue:(Ljava/lang/Object;)Ljava/lang/Object;
      17: astore_2
      18: aload_0
      19: getfield      #9                  // Field name:Ljava/lang/String;
      22: invokestatic  #25                 // Method org/elasticsearch/index/query/QueryBuilders.rangeQuery:(Ljava/lang/String;)Lorg/elasticsearch/index/query/RangeQueryBuilder;
      25: astore_3
      26: aload_0
      27: getfield      #20                 // Field relation:Lorg/elasticsearch/common/geo/ShapeRelation;
      30: invokestatic  #26                 // Method java/util/Objects.nonNull:(Ljava/lang/Object;)Z
      33: ifeq          48
      36: aload_3
      37: aload_0
      38: getfield      #20                 // Field relation:Lorg/elasticsearch/common/geo/ShapeRelation;
      41: invokevirtual #27                 // Method org/elasticsearch/common/geo/ShapeRelation.getRelationName:()Ljava/lang/String;
      44: invokevirtual #28                 // Method org/elasticsearch/index/query/RangeQueryBuilder.relation:(Ljava/lang/String;)Lorg/elasticsearch/index/query/RangeQueryBuilder;
      47: pop
      48: aload_1
      49: ifnonnull     64
      52: aload_0
      53: getfield      #18                 // Field rightIntervalType:Lio/manbang/ebatis/core/domain/IntervalType;
      56: aload_3
      57: aload_2
      58: invokevirtual #29                 // Method io/manbang/ebatis/core/domain/IntervalType.right:(Lorg/elasticsearch/index/query/RangeQueryBuilder;Ljava/lang/Object;)V
      61: goto          98
      64: aload_2
      65: ifnonnull     80
      68: aload_0
      69: getfield      #16                 // Field leftIntervalType:Lio/manbang/ebatis/core/domain/IntervalType;
      72: aload_3
      73: aload_1
      74: invokevirtual #30                 // Method io/manbang/ebatis/core/domain/IntervalType.left:(Lorg/elasticsearch/index/query/RangeQueryBuilder;Ljava/lang/Object;)V
      77: goto          98
      80: aload_0
      81: getfield      #18                 // Field rightIntervalType:Lio/manbang/ebatis/core/domain/IntervalType;
      84: aload_3
      85: aload_2
      86: invokevirtual #29                 // Method io/manbang/ebatis/core/domain/IntervalType.right:(Lorg/elasticsearch/index/query/RangeQueryBuilder;Ljava/lang/Object;)V
      89: aload_0
      90: getfield      #16                 // Field leftIntervalType:Lio/manbang/ebatis/core/domain/IntervalType;
      93: aload_3
      94: aload_1
      95: invokevirtual #30                 // Method io/manbang/ebatis/core/domain/IntervalType.left:(Lorg/elasticsearch/index/query/RangeQueryBuilder;Ljava/lang/Object;)V
      98: aload_3
      99: areturn
}
