Compiled from "ZeroApiWorker.java"
public class io.vertx.up.verticle.ZeroApiWorker extends io.vertx.core.AbstractVerticle {
  private static final io.vertx.up.log.Annal LOGGER;

  private static final io.vertx.up.uca.micro.discovery.Origin ORIGIN;

  private static final java.util.concurrent.ConcurrentMap<java.lang.String, io.vertx.servicediscovery.Record> REGISTRITIONS;

  private static final java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.String> ID_MAP;

  private static final io.vertx.core.impl.ConcurrentHashSet<java.lang.String> REGISTRY;

  private static final java.util.concurrent.atomic.AtomicBoolean initialized;

  public io.vertx.up.verticle.ZeroApiWorker();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/vertx/core/AbstractVerticle."<init>":()V
       4: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #2                  // Field vertx:Lio/vertx/core/Vertx;
       4: invokestatic  #3                  // InterfaceMethod io/vertx/servicediscovery/ServiceDiscovery.create:(Lio/vertx/core/Vertx;)Lio/vertx/servicediscovery/ServiceDiscovery;
       7: astore_1
       8: getstatic     #4                  // Field initialized:Ljava/util/concurrent/atomic/AtomicBoolean;
      11: iconst_1
      12: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
      15: ifne          23
      18: aload_0
      19: aload_1
      20: invokespecial #6                  // Method initializeServices:(Lio/vertx/servicediscovery/ServiceDiscovery;)V
      23: aload_0
      24: getfield      #2                  // Field vertx:Lio/vertx/core/Vertx;
      27: ldc2_w        #7                  // long 5000l
      30: aload_0
      31: aload_1
      32: invokedynamic #9,  0              // InvokeDynamic #0:handle:(Lio/vertx/up/verticle/ZeroApiWorker;Lio/vertx/servicediscovery/ServiceDiscovery;)Lio/vertx/core/Handler;
      37: invokeinterface #10,  4           // InterfaceMethod io/vertx/core/Vertx.setPeriodic:(JLio/vertx/core/Handler;)J
      42: pop2
      43: return

  private void discoveryUpdate(java.util.concurrent.CountDownLatch, io.vertx.servicediscovery.ServiceDiscovery, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokespecial #11                 // Method updateService:(Lio/vertx/servicediscovery/ServiceDiscovery;Ljava/util/Set;)V
       6: aload_1
       7: invokevirtual #12                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      10: return

  private void discoveryDeleted(java.util.concurrent.CountDownLatch, io.vertx.servicediscovery.ServiceDiscovery, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokespecial #13                 // Method deleteService:(Lio/vertx/servicediscovery/ServiceDiscovery;Ljava/util/Set;)V
       6: aload_1
       7: invokevirtual #12                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      10: return

  private void discoveryAdded(java.util.concurrent.CountDownLatch, io.vertx.servicediscovery.ServiceDiscovery, java.util.Set<java.lang.String>, java.util.concurrent.ConcurrentMap<java.lang.String, io.vertx.servicediscovery.Record>);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload         4
       5: invokespecial #14                 // Method addService:(Lio/vertx/servicediscovery/ServiceDiscovery;Ljava/util/Set;Ljava/util/concurrent/ConcurrentMap;)V
       8: aload_1
       9: invokevirtual #12                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      12: return

  private void deleteService(io.vertx.servicediscovery.ServiceDiscovery, java.util.Set<java.lang.String>);
    Code:
       0: aload_2
       1: invokestatic  #15                 // Method io/reactivex/Observable.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;
       4: aload_0
       5: aload_1
       6: invokedynamic #16,  0             // InvokeDynamic #1:accept:(Lio/vertx/up/verticle/ZeroApiWorker;Lio/vertx/servicediscovery/ServiceDiscovery;)Lio/reactivex/functions/Consumer;
      11: invokevirtual #17                 // Method io/reactivex/Observable.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;
      14: invokeinterface #18,  1           // InterfaceMethod io/reactivex/disposables/Disposable.dispose:()V
      19: return

  private void updateService(io.vertx.servicediscovery.ServiceDiscovery, java.util.Set<java.lang.String>);
    Code:
       0: aload_2
       1: invokestatic  #15                 // Method io/reactivex/Observable.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;
       4: getstatic     #19                 // Field REGISTRITIONS:Ljava/util/concurrent/ConcurrentMap;
       7: dup
       8: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: pop
      12: invokedynamic #21,  0             // InvokeDynamic #2:apply:(Ljava/util/concurrent/ConcurrentMap;)Lio/reactivex/functions/Function;
      17: invokevirtual #22                 // Method io/reactivex/Observable.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;
      20: aload_0
      21: aload_1
      22: invokedynamic #23,  0             // InvokeDynamic #3:accept:(Lio/vertx/up/verticle/ZeroApiWorker;Lio/vertx/servicediscovery/ServiceDiscovery;)Lio/reactivex/functions/Consumer;
      27: invokevirtual #17                 // Method io/reactivex/Observable.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;
      30: invokeinterface #18,  1           // InterfaceMethod io/reactivex/disposables/Disposable.dispose:()V
      35: return

  private void addService(io.vertx.servicediscovery.ServiceDiscovery, java.util.Set<java.lang.String>, java.util.concurrent.ConcurrentMap<java.lang.String, io.vertx.servicediscovery.Record>);
    Code:
       0: aload_2
       1: invokestatic  #15                 // Method io/reactivex/Observable.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;
       4: aload_3
       5: dup
       6: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #21,  0             // InvokeDynamic #2:apply:(Ljava/util/concurrent/ConcurrentMap;)Lio/reactivex/functions/Function;
      15: invokevirtual #22                 // Method io/reactivex/Observable.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;
      18: aload_0
      19: aload_1
      20: invokedynamic #24,  0             // InvokeDynamic #4:accept:(Lio/vertx/up/verticle/ZeroApiWorker;Lio/vertx/servicediscovery/ServiceDiscovery;)Lio/reactivex/functions/Consumer;
      25: invokevirtual #17                 // Method io/reactivex/Observable.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;
      28: invokeinterface #18,  1           // InterfaceMethod io/reactivex/disposables/Disposable.dispose:()V
      33: return

  private java.util.function.Consumer<io.vertx.servicediscovery.Record> publishSerivce(io.vertx.servicediscovery.ServiceDiscovery, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #25,  0             // InvokeDynamic #5:accept:(Lio/vertx/up/verticle/ZeroApiWorker;Lio/vertx/servicediscovery/ServiceDiscovery;Ljava/lang/String;)Ljava/util/function/Consumer;
       8: areturn

  private void initializeServices(io.vertx.servicediscovery.ServiceDiscovery);
    Code:
       0: new           #26                 // class java/util/HashSet
       3: dup
       4: getstatic     #27                 // Field ORIGIN:Lio/vertx/up/uca/micro/discovery/Origin;
       7: invokeinterface #28,  1           // InterfaceMethod io/vertx/up/uca/micro/discovery/Origin.getRegistryData:()Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      17: invokespecial #30                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      20: astore_2
      21: aload_2
      22: invokestatic  #15                 // Method io/reactivex/Observable.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;
      25: aload_0
      26: aload_1
      27: invokedynamic #31,  0             // InvokeDynamic #6:accept:(Lio/vertx/up/verticle/ZeroApiWorker;Lio/vertx/servicediscovery/ServiceDiscovery;)Lio/reactivex/functions/Consumer;
      32: invokevirtual #17                 // Method io/reactivex/Observable.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;
      35: invokeinterface #18,  1           // InterfaceMethod io/reactivex/disposables/Disposable.dispose:()V
      40: return

  private java.util.concurrent.ConcurrentMap<io.vertx.up.verticle.ZeroApiWorker$Flag, java.util.Set<java.lang.String>> calculateServices(java.util.concurrent.ConcurrentMap<java.lang.String, io.vertx.servicediscovery.Record>);
    Code:
       0: new           #26                 // class java/util/HashSet
       3: dup
       4: invokespecial #32                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      14: invokestatic  #15                 // Method io/reactivex/Observable.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;
      17: aload_2
      18: dup
      19: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: pop
      23: invokedynamic #34,  0             // InvokeDynamic #7:accept:(Ljava/util/Set;)Lio/reactivex/functions/Consumer;
      28: invokevirtual #17                 // Method io/reactivex/Observable.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;
      31: invokeinterface #18,  1           // InterfaceMethod io/reactivex/disposables/Disposable.dispose:()V
      36: new           #26                 // class java/util/HashSet
      39: dup
      40: getstatic     #19                 // Field REGISTRITIONS:Ljava/util/concurrent/ConcurrentMap;
      43: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      48: invokespecial #30                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      51: astore_3
      52: aload_3
      53: aload_2
      54: invokeinterface #35,  2           // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      59: pop
      60: new           #26                 // class java/util/HashSet
      63: dup
      64: getstatic     #19                 // Field REGISTRITIONS:Ljava/util/concurrent/ConcurrentMap;
      67: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      72: invokespecial #30                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      75: astore        4
      77: aload         4
      79: aload_2
      80: invokeinterface #36,  2           // InterfaceMethod java/util/Set.retainAll:(Ljava/util/Collection;)Z
      85: pop
      86: new           #26                 // class java/util/HashSet
      89: dup
      90: aload_2
      91: invokespecial #30                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      94: astore        5
      96: aload         5
      98: getstatic     #19                 // Field REGISTRITIONS:Ljava/util/concurrent/ConcurrentMap;
     101: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
     106: invokeinterface #35,  2           // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
     111: pop
     112: new           #37                 // class java/util/concurrent/ConcurrentHashMap
     115: dup
     116: invokespecial #38                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
     119: astore        6
     121: aload         6
     123: getstatic     #39                 // Field io/vertx/up/verticle/ZeroApiWorker$Flag.DELETE:Lio/vertx/up/verticle/ZeroApiWorker$Flag;
     126: aload_3
     127: invokeinterface #40,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     132: pop
     133: aload         6
     135: getstatic     #41                 // Field io/vertx/up/verticle/ZeroApiWorker$Flag.NEW:Lio/vertx/up/verticle/ZeroApiWorker$Flag;
     138: aload         5
     140: invokeinterface #40,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     145: pop
     146: aload         6
     148: getstatic     #42                 // Field io/vertx/up/verticle/ZeroApiWorker$Flag.UPDATE:Lio/vertx/up/verticle/ZeroApiWorker$Flag;
     151: aload         4
     153: invokeinterface #40,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     158: pop
     159: aload         6
     161: areturn

  private void successFinished(io.vertx.servicediscovery.Record);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #43                 // Method getID:(Lio/vertx/servicediscovery/Record;)Ljava/lang/String;
       5: astore_2
       6: aload_1
       7: invokevirtual #44                 // Method io/vertx/servicediscovery/Record.getRegistration:()Ljava/lang/String;
      10: astore_3
      11: aload_0
      12: aload_1
      13: invokespecial #45                 // Method successLog:(Lio/vertx/servicediscovery/Record;)V
      16: getstatic     #19                 // Field REGISTRITIONS:Ljava/util/concurrent/ConcurrentMap;
      19: aload_2
      20: aload_1
      21: invokeinterface #40,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: getstatic     #46                 // Field ID_MAP:Ljava/util/concurrent/ConcurrentMap;
      30: aload_2
      31: aload_3
      32: invokeinterface #40,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: return

  private void successLog(io.vertx.servicediscovery.Record);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #43                 // Method getID:(Lio/vertx/servicediscovery/Record;)Ljava/lang/String;
       5: astore_2
       6: aload_1
       7: invokevirtual #44                 // Method io/vertx/servicediscovery/Record.getRegistration:()Ljava/lang/String;
      10: astore_3
      11: ldc           #47                 // String http://{0}:{1}{2}
      13: iconst_3
      14: anewarray     #48                 // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_1
      20: invokevirtual #49                 // Method io/vertx/servicediscovery/Record.getLocation:()Lio/vertx/core/json/JsonObject;
      23: ldc           #51                 // String host
      25: invokevirtual #52                 // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
      28: aastore
      29: dup
      30: iconst_1
      31: aload_1
      32: invokevirtual #49                 // Method io/vertx/servicediscovery/Record.getLocation:()Lio/vertx/core/json/JsonObject;
      35: ldc           #53                 // String port
      37: invokevirtual #54                 // Method io/vertx/core/json/JsonObject.getInteger:(Ljava/lang/String;)Ljava/lang/Integer;
      40: invokestatic  #55                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      43: aastore
      44: dup
      45: iconst_2
      46: aload_1
      47: invokevirtual #56                 // Method io/vertx/servicediscovery/Record.getMetadata:()Lio/vertx/core/json/JsonObject;
      50: ldc           #57                 // String path
      52: invokevirtual #52                 // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
      55: aastore
      56: invokestatic  #58                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      59: astore        4
      61: getstatic     #59                 // Field LOGGER:Lio/vertx/up/log/Annal;
      64: ldc           #61                 // String ( Discovery ) Record : ( name = {2}, uri = {3} ) key = {4}, id = {5}, status = {0}, type = {1} has been refreshed in Zero system.
      66: bipush        6
      68: anewarray     #48                 // class java/lang/Object
      71: dup
      72: iconst_0
      73: aload_1
      74: invokevirtual #62                 // Method io/vertx/servicediscovery/Record.getStatus:()Lio/vertx/servicediscovery/Status;
      77: aastore
      78: dup
      79: iconst_1
      80: aload_1
      81: invokevirtual #63                 // Method io/vertx/servicediscovery/Record.getType:()Ljava/lang/String;
      84: aastore
      85: dup
      86: iconst_2
      87: aload_1
      88: invokevirtual #64                 // Method io/vertx/servicediscovery/Record.getName:()Ljava/lang/String;
      91: aastore
      92: dup
      93: iconst_3
      94: aload         4
      96: aastore
      97: dup
      98: iconst_4
      99: aload_2
     100: aastore
     101: dup
     102: iconst_5
     103: aload_3
     104: aastore
     105: invokeinterface #65,  3           // InterfaceMethod io/vertx/up/log/Annal.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     110: return

  private java.lang.String getID(io.vertx.servicediscovery.Record);
    Code:
       0: aload_1
       1: invokevirtual #56                 // Method io/vertx/servicediscovery/Record.getMetadata:()Lio/vertx/core/json/JsonObject;
       4: astore_2
       5: aload_2
       6: ldc           #66                 // String id
       8: invokevirtual #52                 // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
      11: areturn

  private void lambda$initializeServices$12(io.vertx.servicediscovery.ServiceDiscovery, io.vertx.servicediscovery.Record) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #67                 // String Init
       4: invokespecial #68                 // Method publishSerivce:(Lio/vertx/servicediscovery/ServiceDiscovery;Ljava/lang/String;)Ljava/util/function/Consumer;
       7: aload_2
       8: invokeinterface #69,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      13: return

  private void lambda$publishSerivce$11(io.vertx.servicediscovery.ServiceDiscovery, java.lang.String, io.vertx.servicediscovery.Record);
    Code:
       0: aconst_null
       1: aload_3
       2: invokevirtual #44                 // Method io/vertx/servicediscovery/Record.getRegistration:()Ljava/lang/String;
       5: if_acmpeq     21
       8: getstatic     #70                 // Field REGISTRY:Lio/vertx/core/impl/ConcurrentHashSet;
      11: aload_3
      12: invokevirtual #44                 // Method io/vertx/servicediscovery/Record.getRegistration:()Ljava/lang/String;
      15: invokevirtual #71                 // Method io/vertx/core/impl/ConcurrentHashSet.contains:(Ljava/lang/Object;)Z
      18: ifne          36
      21: aload_1
      22: aload_3
      23: aload_0
      24: aload_3
      25: aload_2
      26: invokedynamic #72,  0             // InvokeDynamic #8:handle:(Lio/vertx/up/verticle/ZeroApiWorker;Lio/vertx/servicediscovery/Record;Ljava/lang/String;)Lio/vertx/core/Handler;
      31: invokeinterface #73,  3           // InterfaceMethod io/vertx/servicediscovery/ServiceDiscovery.publish:(Lio/vertx/servicediscovery/Record;Lio/vertx/core/Handler;)V
      36: return

  private void lambda$null$10(io.vertx.servicediscovery.Record, java.lang.String, io.vertx.core.AsyncResult);
    Code:
       0: aload_3
       1: invokeinterface #74,  1           // InterfaceMethod io/vertx/core/AsyncResult.succeeded:()Z
       6: ifeq          40
       9: aload_3
      10: invokeinterface #75,  1           // InterfaceMethod io/vertx/core/AsyncResult.result:()Ljava/lang/Object;
      15: checkcast     #76                 // class io/vertx/servicediscovery/Record
      18: astore        4
      20: aload_0
      21: aload         4
      23: invokespecial #77                 // Method successFinished:(Lio/vertx/servicediscovery/Record;)V
      26: getstatic     #70                 // Field REGISTRY:Lio/vertx/core/impl/ConcurrentHashSet;
      29: aload_1
      30: invokevirtual #44                 // Method io/vertx/servicediscovery/Record.getRegistration:()Ljava/lang/String;
      33: invokevirtual #78                 // Method io/vertx/core/impl/ConcurrentHashSet.add:(Ljava/lang/Object;)Z
      36: pop
      37: goto          70
      40: getstatic     #59                 // Field LOGGER:Lio/vertx/up/log/Annal;
      43: ldc           #79                 // String ( Discovery ) Action: {1}, Service Registration has met error: {0}.
      45: iconst_2
      46: anewarray     #48                 // class java/lang/Object
      49: dup
      50: iconst_0
      51: aload_3
      52: invokeinterface #80,  1           // InterfaceMethod io/vertx/core/AsyncResult.cause:()Ljava/lang/Throwable;
      57: invokevirtual #81                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      60: aastore
      61: dup
      62: iconst_1
      63: aload_2
      64: aastore
      65: invokeinterface #82,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      70: return

  private void lambda$addService$9(io.vertx.servicediscovery.ServiceDiscovery, io.vertx.servicediscovery.Record) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #83                 // String Add
       4: invokespecial #68                 // Method publishSerivce:(Lio/vertx/servicediscovery/ServiceDiscovery;Ljava/lang/String;)Ljava/util/function/Consumer;
       7: aload_2
       8: invokeinterface #69,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      13: return

  private void lambda$updateService$8(io.vertx.servicediscovery.ServiceDiscovery, io.vertx.servicediscovery.Record) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: invokedynamic #84,  0             // InvokeDynamic #9:handle:(Lio/vertx/up/verticle/ZeroApiWorker;)Lio/vertx/core/Handler;
       8: invokeinterface #85,  3           // InterfaceMethod io/vertx/servicediscovery/ServiceDiscovery.update:(Lio/vertx/servicediscovery/Record;Lio/vertx/core/Handler;)V
      13: return

  private void lambda$null$7(io.vertx.core.AsyncResult);
    Code:
       0: aload_1
       1: invokeinterface #74,  1           // InterfaceMethod io/vertx/core/AsyncResult.succeeded:()Z
       6: ifeq          27
       9: aload_1
      10: invokeinterface #75,  1           // InterfaceMethod io/vertx/core/AsyncResult.result:()Ljava/lang/Object;
      15: checkcast     #76                 // class io/vertx/servicediscovery/Record
      18: astore_2
      19: aload_0
      20: aload_2
      21: invokespecial #77                 // Method successFinished:(Lio/vertx/servicediscovery/Record;)V
      24: goto          58
      27: getstatic     #59                 // Field LOGGER:Lio/vertx/up/log/Annal;
      30: ldc           #79                 // String ( Discovery ) Action: {1}, Service Registration has met error: {0}.
      32: iconst_2
      33: anewarray     #48                 // class java/lang/Object
      36: dup
      37: iconst_0
      38: aload_1
      39: invokeinterface #80,  1           // InterfaceMethod io/vertx/core/AsyncResult.cause:()Ljava/lang/Throwable;
      44: invokevirtual #81                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      47: aastore
      48: dup
      49: iconst_1
      50: ldc           #86                 // String Update
      52: aastore
      53: invokeinterface #82,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      58: return

  private void lambda$deleteService$6(io.vertx.servicediscovery.ServiceDiscovery, java.lang.String) throws java.lang.Exception;
    Code:
       0: getstatic     #46                 // Field ID_MAP:Ljava/util/concurrent/ConcurrentMap;
       3: aload_2
       4: invokeinterface #87,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #88                 // class java/lang/String
      12: astore_3
      13: aload_1
      14: aload_3
      15: aload_0
      16: aload_2
      17: invokedynamic #89,  0             // InvokeDynamic #10:handle:(Lio/vertx/up/verticle/ZeroApiWorker;Ljava/lang/String;)Lio/vertx/core/Handler;
      22: invokeinterface #90,  3           // InterfaceMethod io/vertx/servicediscovery/ServiceDiscovery.unpublish:(Ljava/lang/String;Lio/vertx/core/Handler;)V
      27: return

  private void lambda$null$5(java.lang.String, io.vertx.core.AsyncResult);
    Code:
       0: aload_2
       1: invokeinterface #74,  1           // InterfaceMethod io/vertx/core/AsyncResult.succeeded:()Z
       6: ifeq          58
       9: getstatic     #19                 // Field REGISTRITIONS:Ljava/util/concurrent/ConcurrentMap;
      12: aload_1
      13: invokeinterface #87,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #76                 // class io/vertx/servicediscovery/Record
      21: astore_3
      22: aload_0
      23: aload_3
      24: invokespecial #45                 // Method successLog:(Lio/vertx/servicediscovery/Record;)V
      27: getstatic     #19                 // Field REGISTRITIONS:Ljava/util/concurrent/ConcurrentMap;
      30: aload_1
      31: invokeinterface #91,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: getstatic     #46                 // Field ID_MAP:Ljava/util/concurrent/ConcurrentMap;
      40: aload_1
      41: invokeinterface #91,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: getstatic     #70                 // Field REGISTRY:Lio/vertx/core/impl/ConcurrentHashSet;
      50: aload_1
      51: invokevirtual #92                 // Method io/vertx/core/impl/ConcurrentHashSet.remove:(Ljava/lang/Object;)Z
      54: pop
      55: goto          89
      58: getstatic     #59                 // Field LOGGER:Lio/vertx/up/log/Annal;
      61: ldc           #79                 // String ( Discovery ) Action: {1}, Service Registration has met error: {0}.
      63: iconst_2
      64: anewarray     #48                 // class java/lang/Object
      67: dup
      68: iconst_0
      69: aload_2
      70: invokeinterface #80,  1           // InterfaceMethod io/vertx/core/AsyncResult.cause:()Ljava/lang/Throwable;
      75: invokevirtual #81                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      78: aastore
      79: dup
      80: iconst_1
      81: ldc           #93                 // String Delete
      83: aastore
      84: invokeinterface #82,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      89: return

  private void lambda$start$4(io.vertx.servicediscovery.ServiceDiscovery, java.lang.Long);
    Code:
       0: getstatic     #27                 // Field ORIGIN:Lio/vertx/up/uca/micro/discovery/Origin;
       3: invokeinterface #28,  1           // InterfaceMethod io/vertx/up/uca/micro/discovery/Origin.getRegistryData:()Ljava/util/concurrent/ConcurrentMap;
       8: astore_3
       9: aload_0
      10: aload_3
      11: invokespecial #94                 // Method calculateServices:(Ljava/util/concurrent/ConcurrentMap;)Ljava/util/concurrent/ConcurrentMap;
      14: astore        4
      16: aload_0
      17: aload         4
      19: aload_1
      20: aload_3
      21: invokedynamic #95,  0             // InvokeDynamic #11:execute:(Lio/vertx/up/verticle/ZeroApiWorker;Ljava/util/concurrent/ConcurrentMap;Lio/vertx/servicediscovery/ServiceDiscovery;Ljava/util/concurrent/ConcurrentMap;)Lio/vertx/up/fn/JvmActuator;
      26: getstatic     #59                 // Field LOGGER:Lio/vertx/up/log/Annal;
      29: invokestatic  #96                 // Method io/vertx/up/fn/Fn.safeJvm:(Lio/vertx/up/fn/JvmActuator;Lio/vertx/up/log/Annal;)V
      32: return

  private void lambda$null$3(java.util.concurrent.ConcurrentMap, io.vertx.servicediscovery.ServiceDiscovery, java.util.concurrent.ConcurrentMap) throws java.lang.Exception;
    Code:
       0: new           #97                 // class java/util/concurrent/CountDownLatch
       3: dup
       4: iconst_3
       5: invokespecial #98                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
       8: astore        4
      10: aload_1
      11: getstatic     #39                 // Field io/vertx/up/verticle/ZeroApiWorker$Flag.DELETE:Lio/vertx/up/verticle/ZeroApiWorker$Flag;
      14: invokeinterface #87,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #99                 // class java/util/Set
      22: astore        5
      24: aload_1
      25: getstatic     #42                 // Field io/vertx/up/verticle/ZeroApiWorker$Flag.UPDATE:Lio/vertx/up/verticle/ZeroApiWorker$Flag;
      28: invokeinterface #87,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #99                 // class java/util/Set
      36: astore        6
      38: aload_1
      39: getstatic     #41                 // Field io/vertx/up/verticle/ZeroApiWorker$Flag.NEW:Lio/vertx/up/verticle/ZeroApiWorker$Flag;
      42: invokeinterface #87,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #99                 // class java/util/Set
      50: astore        7
      52: aload_0
      53: aload         4
      55: aload_2
      56: aload         5
      58: invokedynamic #100,  0            // InvokeDynamic #12:run:(Lio/vertx/up/verticle/ZeroApiWorker;Ljava/util/concurrent/CountDownLatch;Lio/vertx/servicediscovery/ServiceDiscovery;Ljava/util/Set;)Ljava/lang/Runnable;
      63: ldc           #101                // String discovery-deleted
      65: invokestatic  #102                // Method io/vertx/up/runtime/Runner.run:(Ljava/lang/Runnable;Ljava/lang/String;)V
      68: aload_0
      69: aload         4
      71: aload_2
      72: aload         6
      74: invokedynamic #103,  0            // InvokeDynamic #13:run:(Lio/vertx/up/verticle/ZeroApiWorker;Ljava/util/concurrent/CountDownLatch;Lio/vertx/servicediscovery/ServiceDiscovery;Ljava/util/Set;)Ljava/lang/Runnable;
      79: ldc           #104                // String discovery-updated
      81: invokestatic  #102                // Method io/vertx/up/runtime/Runner.run:(Ljava/lang/Runnable;Ljava/lang/String;)V
      84: aload_0
      85: aload         4
      87: aload_2
      88: aload         7
      90: aload_3
      91: invokedynamic #105,  0            // InvokeDynamic #14:run:(Lio/vertx/up/verticle/ZeroApiWorker;Ljava/util/concurrent/CountDownLatch;Lio/vertx/servicediscovery/ServiceDiscovery;Ljava/util/Set;Ljava/util/concurrent/ConcurrentMap;)Ljava/lang/Runnable;
      96: ldc           #106                // String discovery-added
      98: invokestatic  #102                // Method io/vertx/up/runtime/Runner.run:(Ljava/lang/Runnable;Ljava/lang/String;)V
     101: aload         4
     103: invokevirtual #107                // Method java/util/concurrent/CountDownLatch.await:()V
     106: getstatic     #59                 // Field LOGGER:Lio/vertx/up/log/Annal;
     109: ldc           #108                // String ( Discovery ) Records ( added = {0}, updated = {1}, deleted = {2} ) have been refreshed!
     111: iconst_3
     112: anewarray     #48                 // class java/lang/Object
     115: dup
     116: iconst_0
     117: aload         7
     119: invokeinterface #109,  1          // InterfaceMethod java/util/Set.size:()I
     124: invokestatic  #110                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     127: aastore
     128: dup
     129: iconst_1
     130: aload         6
     132: invokeinterface #109,  1          // InterfaceMethod java/util/Set.size:()I
     137: invokestatic  #110                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     140: aastore
     141: dup
     142: iconst_2
     143: aload         5
     145: invokeinterface #109,  1          // InterfaceMethod java/util/Set.size:()I
     150: invokestatic  #110                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     153: aastore
     154: invokeinterface #82,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     159: return

  private void lambda$null$2(java.util.concurrent.CountDownLatch, io.vertx.servicediscovery.ServiceDiscovery, java.util.Set, java.util.concurrent.ConcurrentMap);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #111                // Method discoveryAdded:(Ljava/util/concurrent/CountDownLatch;Lio/vertx/servicediscovery/ServiceDiscovery;Ljava/util/Set;Ljava/util/concurrent/ConcurrentMap;)V
       9: return

  private void lambda$null$1(java.util.concurrent.CountDownLatch, io.vertx.servicediscovery.ServiceDiscovery, java.util.Set);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #112                // Method discoveryUpdate:(Ljava/util/concurrent/CountDownLatch;Lio/vertx/servicediscovery/ServiceDiscovery;Ljava/util/Set;)V
       7: return

  private void lambda$null$0(java.util.concurrent.CountDownLatch, io.vertx.servicediscovery.ServiceDiscovery, java.util.Set);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #113                // Method discoveryDeleted:(Ljava/util/concurrent/CountDownLatch;Lio/vertx/servicediscovery/ServiceDiscovery;Ljava/util/Set;)V
       7: return

  static {};
    Code:
       0: ldc           #114                // class io/vertx/up/verticle/ZeroApiWorker
       2: invokestatic  #115                // InterfaceMethod io/vertx/up/log/Annal.get:(Ljava/lang/Class;)Lio/vertx/up/log/Annal;
       5: putstatic     #59                 // Field LOGGER:Lio/vertx/up/log/Annal;
       8: ldc           #116                // class io/vertx/up/uca/micro/discovery/ApiOrigin
      10: iconst_0
      11: anewarray     #48                 // class java/lang/Object
      14: invokestatic  #117                // Method io/vertx/up/util/Ut.singleton:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #50                 // class io/vertx/up/uca/micro/discovery/Origin
      20: putstatic     #27                 // Field ORIGIN:Lio/vertx/up/uca/micro/discovery/Origin;
      23: new           #37                 // class java/util/concurrent/ConcurrentHashMap
      26: dup
      27: invokespecial #38                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      30: putstatic     #19                 // Field REGISTRITIONS:Ljava/util/concurrent/ConcurrentMap;
      33: new           #37                 // class java/util/concurrent/ConcurrentHashMap
      36: dup
      37: invokespecial #38                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      40: putstatic     #46                 // Field ID_MAP:Ljava/util/concurrent/ConcurrentMap;
      43: new           #118                // class io/vertx/core/impl/ConcurrentHashSet
      46: dup
      47: invokespecial #119                // Method io/vertx/core/impl/ConcurrentHashSet."<init>":()V
      50: putstatic     #70                 // Field REGISTRY:Lio/vertx/core/impl/ConcurrentHashSet;
      53: new           #120                // class java/util/concurrent/atomic/AtomicBoolean
      56: dup
      57: iconst_0
      58: invokespecial #121                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      61: putstatic     #4                  // Field initialized:Ljava/util/concurrent/atomic/AtomicBoolean;
      64: return
}
