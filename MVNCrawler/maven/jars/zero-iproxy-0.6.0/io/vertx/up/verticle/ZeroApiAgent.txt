Compiled from "ZeroApiAgent.java"
public class io.vertx.up.verticle.ZeroApiAgent extends io.vertx.core.AbstractVerticle {
  private static final io.vertx.up.log.Annal LOGGER;

  private static final io.vertx.up.uca.options.ServerVisitor<io.vertx.core.http.HttpServerOptions> VISITOR;

  private static final java.util.concurrent.ConcurrentMap<java.lang.Integer, java.util.concurrent.atomic.AtomicInteger> API_START_LOGS;

  public io.vertx.up.verticle.ZeroApiAgent();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/vertx/core/AbstractVerticle."<init>":()V
       4: return

  public void start();
    Code:
       0: getstatic     #2                  // Field io/vertx/up/verticle/Pool.ROUTERS:Ljava/util/concurrent/ConcurrentMap;
       3: aload_0
       4: invokedynamic #3,  0              // InvokeDynamic #0:get:(Lio/vertx/up/verticle/ZeroApiAgent;)Ljava/util/function/Supplier;
       9: invokestatic  #4                  // Method io/vertx/up/fn/Fn.poolThread:(Ljava/util/concurrent/ConcurrentMap;Ljava/util/function/Supplier;)Ljava/lang/Object;
      12: checkcast     #5                  // class io/vertx/up/uca/rs/Axis
      15: astore_1
      16: getstatic     #6                  // Field io/vertx/up/verticle/Pool.WALLS:Ljava/util/concurrent/ConcurrentMap;
      19: aload_0
      20: invokedynamic #7,  0              // InvokeDynamic #1:get:(Lio/vertx/up/verticle/ZeroApiAgent;)Ljava/util/function/Supplier;
      25: invokestatic  #4                  // Method io/vertx/up/fn/Fn.poolThread:(Ljava/util/concurrent/ConcurrentMap;Ljava/util/function/Supplier;)Ljava/lang/Object;
      28: checkcast     #5                  // class io/vertx/up/uca/rs/Axis
      31: astore_2
      32: getstatic     #8                  // Field io/vertx/up/verticle/Pool.MEANSURES:Ljava/util/concurrent/ConcurrentMap;
      35: aload_0
      36: invokedynamic #9,  0              // InvokeDynamic #2:get:(Lio/vertx/up/verticle/ZeroApiAgent;)Ljava/util/function/Supplier;
      41: invokestatic  #4                  // Method io/vertx/up/fn/Fn.poolThread:(Ljava/util/concurrent/ConcurrentMap;Ljava/util/function/Supplier;)Ljava/lang/Object;
      44: checkcast     #5                  // class io/vertx/up/uca/rs/Axis
      47: astore_3
      48: aload_0
      49: aload_1
      50: aload_2
      51: aload_3
      52: invokedynamic #10,  0             // InvokeDynamic #3:execute:(Lio/vertx/up/verticle/ZeroApiAgent;Lio/vertx/up/uca/rs/Axis;Lio/vertx/up/uca/rs/Axis;Lio/vertx/up/uca/rs/Axis;)Lio/vertx/up/fn/ZeroActuator;
      57: getstatic     #11                 // Field LOGGER:Lio/vertx/up/log/Annal;
      60: invokestatic  #12                 // Method io/vertx/up/fn/Fn.outUp:(Lio/vertx/up/fn/ZeroActuator;Lio/vertx/up/log/Annal;)V
      63: return

  private void registryServer(io.vertx.core.http.HttpServerOptions);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method io/vertx/core/http/HttpServerOptions.getPort:()I
       4: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: astore_2
       8: getstatic     #15                 // Field API_START_LOGS:Ljava/util/concurrent/ConcurrentMap;
      11: aload_2
      12: invokeinterface #16,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #17                 // class java/util/concurrent/atomic/AtomicInteger
      20: astore_3
      21: iconst_0
      22: aload_3
      23: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      26: if_icmpne     123
      29: aload_2
      30: invokestatic  #20                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      33: astore        4
      35: getstatic     #11                 // Field LOGGER:Lio/vertx/up/log/Annal;
      38: ldc           #22                 // String ( Api Gateway ) {0} (id = {1}) has deployed on {2}.
      40: iconst_3
      41: anewarray     #23                 // class java/lang/Object
      44: dup
      45: iconst_0
      46: aload_0
      47: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      50: invokevirtual #25                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      53: aastore
      54: dup
      55: iconst_1
      56: aload_0
      57: invokevirtual #26                 // Method deploymentID:()Ljava/lang/String;
      60: aastore
      61: dup
      62: iconst_2
      63: aload         4
      65: aastore
      66: invokeinterface #27,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      71: ldc           #28                 // String http://{0}:{1}/
      73: iconst_2
      74: anewarray     #23                 // class java/lang/Object
      77: dup
      78: iconst_0
      79: aload_1
      80: invokevirtual #29                 // Method io/vertx/core/http/HttpServerOptions.getHost:()Ljava/lang/String;
      83: aastore
      84: dup
      85: iconst_1
      86: aload         4
      88: aastore
      89: invokestatic  #30                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      92: astore        5
      94: getstatic     #11                 // Field LOGGER:Lio/vertx/up/log/Annal;
      97: ldc           #31                 // String ( Api Gateway ) {0} has been started successfully. Endpoint: {1}.
      99: iconst_2
     100: anewarray     #23                 // class java/lang/Object
     103: dup
     104: iconst_0
     105: aload_0
     106: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     109: invokevirtual #25                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     112: aastore
     113: dup
     114: iconst_1
     115: aload         5
     117: aastore
     118: invokeinterface #27,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     123: return

  private void lambda$start$7(io.vertx.up.uca.rs.Axis, io.vertx.up.uca.rs.Axis, io.vertx.up.uca.rs.Axis) throws io.vertx.up.exception.ZeroException;
    Code:
       0: getstatic     #32                 // Field io/vertx/up/verticle/ZeroAtomic.API_OPTS:Ljava/util/concurrent/ConcurrentMap;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokedynamic #33,  0             // InvokeDynamic #4:accept:(Lio/vertx/up/verticle/ZeroApiAgent;Lio/vertx/up/uca/rs/Axis;Lio/vertx/up/uca/rs/Axis;Lio/vertx/up/uca/rs/Axis;)Ljava/util/function/BiConsumer;
      12: invokeinterface #34,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.forEach:(Ljava/util/function/BiConsumer;)V
      17: return

  private void lambda$null$6(io.vertx.up.uca.rs.Axis, io.vertx.up.uca.rs.Axis, io.vertx.up.uca.rs.Axis, java.lang.Integer, io.vertx.core.http.HttpServerOptions);
    Code:
       0: getstatic     #35                 // Field io/vertx/up/verticle/Pool.APIS:Ljava/util/concurrent/ConcurrentMap;
       3: aload_0
       4: aload         5
       6: invokedynamic #36,  0             // InvokeDynamic #5:get:(Lio/vertx/up/verticle/ZeroApiAgent;Lio/vertx/core/http/HttpServerOptions;)Ljava/util/function/Supplier;
      11: invokestatic  #4                  // Method io/vertx/up/fn/Fn.poolThread:(Ljava/util/concurrent/ConcurrentMap;Ljava/util/function/Supplier;)Ljava/lang/Object;
      14: checkcast     #5                  // class io/vertx/up/uca/rs/Axis
      17: astore        6
      19: aload_0
      20: getfield      #37                 // Field vertx:Lio/vertx/core/Vertx;
      23: aload         5
      25: invokeinterface #38,  2           // InterfaceMethod io/vertx/core/Vertx.createHttpServer:(Lio/vertx/core/http/HttpServerOptions;)Lio/vertx/core/http/HttpServer;
      30: astore        7
      32: aload_0
      33: getfield      #37                 // Field vertx:Lio/vertx/core/Vertx;
      36: invokestatic  #39                 // InterfaceMethod io/vertx/ext/web/Router.router:(Lio/vertx/core/Vertx;)Lio/vertx/ext/web/Router;
      39: astore        8
      41: aload_1
      42: aload         8
      44: invokeinterface #40,  2           // InterfaceMethod io/vertx/up/uca/rs/Axis.mount:(Ljava/lang/Object;)V
      49: aload_2
      50: aload         8
      52: invokeinterface #40,  2           // InterfaceMethod io/vertx/up/uca/rs/Axis.mount:(Ljava/lang/Object;)V
      57: aload_3
      58: aload         8
      60: invokeinterface #40,  2           // InterfaceMethod io/vertx/up/uca/rs/Axis.mount:(Ljava/lang/Object;)V
      65: aload         6
      67: aload         8
      69: invokeinterface #40,  2           // InterfaceMethod io/vertx/up/uca/rs/Axis.mount:(Ljava/lang/Object;)V
      74: aload         7
      76: aload         8
      78: invokeinterface #41,  2           // InterfaceMethod io/vertx/core/http/HttpServer.requestHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpServer;
      83: invokeinterface #42,  1           // InterfaceMethod io/vertx/core/http/HttpServer.listen:()Lio/vertx/core/http/HttpServer;
      88: pop
      89: aload_0
      90: aload         5
      92: invokespecial #43                 // Method registryServer:(Lio/vertx/core/http/HttpServerOptions;)V
      95: return

  private io.vertx.up.uca.rs.Axis lambda$null$5(io.vertx.core.http.HttpServerOptions);
    Code:
       0: ldc           #44                 // class io/vertx/up/uca/rs/router/PointAxis
       2: iconst_2
       3: anewarray     #23                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_1
       9: aastore
      10: dup
      11: iconst_1
      12: aload_0
      13: getfield      #37                 // Field vertx:Lio/vertx/core/Vertx;
      16: aastore
      17: invokestatic  #45                 // Method io/vertx/up/util/Ut.instance:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #5                  // class io/vertx/up/uca/rs/Axis
      23: areturn

  private io.vertx.up.uca.rs.Axis lambda$start$4();
    Code:
       0: new           #46                 // class io/vertx/up/uca/rs/router/monitor/MeansureAxis
       3: dup
       4: aload_0
       5: getfield      #37                 // Field vertx:Lio/vertx/core/Vertx;
       8: iconst_1
       9: invokespecial #47                 // Method io/vertx/up/uca/rs/router/monitor/MeansureAxis."<init>":(Lio/vertx/core/Vertx;Z)V
      12: areturn

  private io.vertx.up.uca.rs.Axis lambda$start$3();
    Code:
       0: ldc           #48                 // class io/vertx/up/uca/rs/router/WallAxis
       2: iconst_1
       3: anewarray     #23                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #37                 // Field vertx:Lio/vertx/core/Vertx;
      12: aastore
      13: invokestatic  #45                 // Method io/vertx/up/util/Ut.instance:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #5                  // class io/vertx/up/uca/rs/Axis
      19: areturn

  private io.vertx.up.uca.rs.Axis lambda$start$2();
    Code:
       0: new           #49                 // class io/vertx/up/uca/rs/router/RouterAxis
       3: dup
       4: aload_0
       5: getfield      #37                 // Field vertx:Lio/vertx/core/Vertx;
       8: invokespecial #50                 // Method io/vertx/up/uca/rs/router/RouterAxis."<init>":(Lio/vertx/core/Vertx;)V
      11: areturn

  private static void lambda$static$1() throws io.vertx.up.exception.ZeroException;
    Code:
       0: getstatic     #32                 // Field io/vertx/up/verticle/ZeroAtomic.API_OPTS:Ljava/util/concurrent/ConcurrentMap;
       3: invokeinterface #51,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
       8: ifeq          56
      11: getstatic     #32                 // Field io/vertx/up/verticle/ZeroAtomic.API_OPTS:Ljava/util/concurrent/ConcurrentMap;
      14: getstatic     #52                 // Field VISITOR:Lio/vertx/up/uca/options/ServerVisitor;
      17: iconst_1
      18: anewarray     #53                 // class java/lang/String
      21: dup
      22: iconst_0
      23: getstatic     #54                 // Field io/vertx/up/eon/em/ServerType.API:Lio/vertx/up/eon/em/ServerType;
      26: invokevirtual #55                 // Method io/vertx/up/eon/em/ServerType.toString:()Ljava/lang/String;
      29: aastore
      30: invokeinterface #56,  2           // InterfaceMethod io/vertx/up/uca/options/ServerVisitor.visit:([Ljava/lang/String;)Ljava/lang/Object;
      35: checkcast     #57                 // class java/util/Map
      38: invokeinterface #58,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.putAll:(Ljava/util/Map;)V
      43: getstatic     #32                 // Field io/vertx/up/verticle/ZeroAtomic.API_OPTS:Ljava/util/concurrent/ConcurrentMap;
      46: invokedynamic #59,  0             // InvokeDynamic #6:accept:()Ljava/util/function/BiConsumer;
      51: invokeinterface #34,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.forEach:(Ljava/util/function/BiConsumer;)V
      56: return

  private static void lambda$null$0(java.lang.Integer, io.vertx.core.http.HttpServerOptions);
    Code:
       0: getstatic     #15                 // Field API_START_LOGS:Ljava/util/concurrent/ConcurrentMap;
       3: aload_0
       4: new           #17                 // class java/util/concurrent/atomic/AtomicInteger
       7: dup
       8: iconst_0
       9: invokespecial #60                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      12: invokeinterface #61,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  static {};
    Code:
       0: ldc           #62                 // class io/vertx/up/verticle/ZeroApiAgent
       2: invokestatic  #63                 // InterfaceMethod io/vertx/up/log/Annal.get:(Ljava/lang/Class;)Lio/vertx/up/log/Annal;
       5: putstatic     #11                 // Field LOGGER:Lio/vertx/up/log/Annal;
       8: ldc           #64                 // class io/vertx/up/uca/options/DynamicVisitor
      10: iconst_0
      11: anewarray     #23                 // class java/lang/Object
      14: invokestatic  #65                 // Method io/vertx/up/util/Ut.singleton:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #66                 // class io/vertx/up/uca/options/ServerVisitor
      20: putstatic     #52                 // Field VISITOR:Lio/vertx/up/uca/options/ServerVisitor;
      23: new           #67                 // class java/util/concurrent/ConcurrentHashMap
      26: dup
      27: invokespecial #68                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      30: putstatic     #15                 // Field API_START_LOGS:Ljava/util/concurrent/ConcurrentMap;
      33: invokedynamic #69,  0             // InvokeDynamic #7:execute:()Lio/vertx/up/fn/ZeroActuator;
      38: getstatic     #11                 // Field LOGGER:Lio/vertx/up/log/Annal;
      41: invokestatic  #12                 // Method io/vertx/up/fn/Fn.outUp:(Lio/vertx/up/fn/ZeroActuator;Lio/vertx/up/log/Annal;)V
      44: return
}
