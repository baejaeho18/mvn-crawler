Compiled from "ZeroRpcAgent.java"
public class io.vertx.up.verticle.ZeroRpcAgent extends io.vertx.core.AbstractVerticle {
  private static final io.vertx.up.log.Annal LOGGER;

  private static final java.lang.String SSL;

  private final transient io.vertx.up.uca.micro.center.ZeroRegistry registry;

  public io.vertx.up.verticle.ZeroRpcAgent();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/vertx/core/AbstractVerticle."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method io/vertx/up/uca/micro/center/ZeroRegistry.create:(Ljava/lang/Class;)Lio/vertx/up/uca/micro/center/ZeroRegistry;
      12: putfield      #4                  // Field registry:Lio/vertx/up/uca/micro/center/ZeroRegistry;
      15: return

  public void start();
    Code:
       0: getstatic     #5                  // Field io/vertx/up/verticle/ZeroAtomic.RPC_OPTS:Ljava/util/concurrent/ConcurrentMap;
       3: aload_0
       4: invokedynamic #6,  0              // InvokeDynamic #0:accept:(Lio/vertx/up/verticle/ZeroRpcAgent;)Ljava/util/function/BiConsumer;
       9: invokestatic  #7                  // Method io/vertx/up/util/Ut.itMap:(Ljava/util/concurrent/ConcurrentMap;Ljava/util/function/BiConsumer;)V
      12: return

  public void stop();
    Code:
       0: getstatic     #5                  // Field io/vertx/up/verticle/ZeroAtomic.RPC_OPTS:Ljava/util/concurrent/ConcurrentMap;
       3: aload_0
       4: invokedynamic #8,  0              // InvokeDynamic #1:accept:(Lio/vertx/up/verticle/ZeroRpcAgent;)Ljava/util/function/BiConsumer;
       9: invokestatic  #7                  // Method io/vertx/up/util/Ut.itMap:(Ljava/util/concurrent/ConcurrentMap;Ljava/util/function/BiConsumer;)V
      12: return

  private void registryServer(io.vertx.core.AsyncResult<java.lang.Void>, io.vertx.core.ServidorOptions);
    Code:
       0: aload_2
       1: invokevirtual #9                  // Method io/vertx/core/ServidorOptions.getPort:()Ljava/lang/Integer;
       4: astore_3
       5: getstatic     #10                 // Field io/vertx/up/verticle/ZeroAtomic.RPC_START_LOGS:Ljava/util/concurrent/ConcurrentMap;
       8: aload_3
       9: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #12                 // class java/util/concurrent/atomic/AtomicInteger
      17: astore        4
      19: iconst_1
      20: aload         4
      22: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      25: if_icmpne     140
      28: aload_1
      29: invokeinterface #15,  1           // InterfaceMethod io/vertx/core/AsyncResult.succeeded:()Z
      34: ifeq          99
      37: getstatic     #16                 // Field LOGGER:Lio/vertx/up/log/Annal;
      40: ldc           #18                 // String ( Rpc Server ) Rpc Server has been started successfully. Channel: ---> grpc://{0}:{1}.
      42: iconst_2
      43: anewarray     #19                 // class java/lang/Object
      46: dup
      47: iconst_0
      48: invokestatic  #20                 // Method io/vertx/up/util/Ut.netIPv4:()Ljava/lang/String;
      51: aastore
      52: dup
      53: iconst_1
      54: aload_2
      55: invokevirtual #9                  // Method io/vertx/core/ServidorOptions.getPort:()Ljava/lang/Integer;
      58: invokestatic  #21                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      61: aastore
      62: invokeinterface #22,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      67: getstatic     #16                 // Field LOGGER:Lio/vertx/up/log/Annal;
      70: ldc           #23                 // String ( Etcd Center ) Zero system detected configuration {0}, begin to singleton Etcd Center.
      72: iconst_1
      73: anewarray     #19                 // class java/lang/Object
      76: dup
      77: iconst_0
      78: aload_0
      79: getfield      #4                  // Field registry:Lio/vertx/up/uca/micro/center/ZeroRegistry;
      82: invokevirtual #24                 // Method io/vertx/up/uca/micro/center/ZeroRegistry.getConfig:()Lio/vertx/core/json/JsonArray;
      85: aastore
      86: invokeinterface #22,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      91: aload_0
      92: aload_2
      93: invokespecial #25                 // Method startRegistry:(Lio/vertx/core/ServidorOptions;)V
      96: goto          140
      99: getstatic     #16                 // Field LOGGER:Lio/vertx/up/log/Annal;
     102: ldc           #26                 // String ( Rpc Server ) Rpc Server met failure: details = {0}.
     104: iconst_1
     105: anewarray     #19                 // class java/lang/Object
     108: dup
     109: iconst_0
     110: aconst_null
     111: aload_1
     112: invokeinterface #27,  1           // InterfaceMethod io/vertx/core/AsyncResult.cause:()Ljava/lang/Throwable;
     117: if_acmpne     125
     120: ldc           #28                 // String None
     122: goto          134
     125: aload_1
     126: invokeinterface #27,  1           // InterfaceMethod io/vertx/core/AsyncResult.cause:()Ljava/lang/Throwable;
     131: invokevirtual #29                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     134: aastore
     135: invokeinterface #22,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     140: return

  private void startRegistry(io.vertx.core.ServidorOptions);
    Code:
       0: aload_0
       1: getfield      #30                 // Field vertx:Lio/vertx/core/Vertx;
       4: invokeinterface #31,  1           // InterfaceMethod io/vertx/core/Vertx.eventBus:()Lio/vertx/core/eventbus/EventBus;
       9: astore_2
      10: ldc           #33                 // String ZERO://MICRO/IPC/START
      12: astore_3
      13: getstatic     #16                 // Field LOGGER:Lio/vertx/up/log/Annal;
      16: ldc           #34                 // String ---> {2} ( Rpc Server ) {0} ( name = {1} ) is sending data to internal address.
      18: iconst_3
      19: anewarray     #19                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: invokevirtual #35                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      31: aastore
      32: dup
      33: iconst_1
      34: aload_1
      35: invokevirtual #36                 // Method io/vertx/core/ServidorOptions.getName:()Ljava/lang/String;
      38: aastore
      39: dup
      40: iconst_2
      41: ldc           #33                 // String ZERO://MICRO/IPC/START
      43: aastore
      44: invokeinterface #22,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      49: aload_2
      50: ldc           #33                 // String ZERO://MICRO/IPC/START
      52: aload_1
      53: invokevirtual #37                 // Method io/vertx/core/ServidorOptions.toJson:()Lio/vertx/core/json/JsonObject;
      56: invokeinterface #38,  3           // InterfaceMethod io/vertx/core/eventbus/EventBus.publish:(Ljava/lang/String;Ljava/lang/Object;)Lio/vertx/core/eventbus/EventBus;
      61: pop
      62: return

  private void lambda$stop$2(java.lang.Integer, io.vertx.core.ServidorOptions);
    Code:
       0: aload_0
       1: getfield      #4                  // Field registry:Lio/vertx/up/uca/micro/center/ZeroRegistry;
       4: aload_2
       5: getstatic     #39                 // Field io/vertx/up/eon/em/Etat.STOPPED:Lio/vertx/up/eon/em/Etat;
       8: invokevirtual #40                 // Method io/vertx/up/uca/micro/center/ZeroRegistry.registryRpc:(Lio/vertx/core/ServidorOptions;Lio/vertx/up/eon/em/Etat;)V
      11: return

  private void lambda$start$1(java.lang.Integer, io.vertx.core.ServidorOptions);
    Code:
       0: aload_0
       1: getfield      #30                 // Field vertx:Lio/vertx/core/Vertx;
       4: aload_2
       5: invokevirtual #41                 // Method io/vertx/core/ServidorOptions.getHost:()Ljava/lang/String;
       8: aload_2
       9: invokevirtual #9                  // Method io/vertx/core/ServidorOptions.getPort:()Ljava/lang/Integer;
      12: invokevirtual #42                 // Method java/lang/Integer.intValue:()I
      15: invokestatic  #43                 // Method io/vertx/grpc/VertxServerBuilder.forAddress:(Lio/vertx/core/Vertx;Ljava/lang/String;I)Lio/vertx/grpc/VertxServerBuilder;
      18: astore_3
      19: ldc           #44                 // class io/vertx/up/uca/micro/ipc/server/UnityTunnel
      21: iconst_0
      22: anewarray     #19                 // class java/lang/Object
      25: invokestatic  #45                 // Method io/vertx/up/util/Ut.singleton:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #46                 // class io/vertx/up/uca/micro/ipc/server/Tunnel
      31: astore        4
      33: aload_3
      34: aload         4
      36: aload_0
      37: getfield      #30                 // Field vertx:Lio/vertx/core/Vertx;
      40: invokeinterface #47,  2           // InterfaceMethod io/vertx/up/uca/micro/ipc/server/Tunnel.init:(Lio/vertx/core/Vertx;)Lio/grpc/BindableService;
      45: invokevirtual #48                 // Method io/vertx/grpc/VertxServerBuilder.addService:(Lio/grpc/BindableService;)Lio/vertx/grpc/VertxServerBuilder;
      48: pop
      49: aload_3
      50: invokevirtual #49                 // Method io/vertx/grpc/VertxServerBuilder.build:()Lio/vertx/grpc/VertxServer;
      53: astore        4
      55: aload         4
      57: aload_0
      58: aload_2
      59: invokedynamic #50,  0             // InvokeDynamic #2:handle:(Lio/vertx/up/verticle/ZeroRpcAgent;Lio/vertx/core/ServidorOptions;)Lio/vertx/core/Handler;
      64: invokevirtual #51                 // Method io/vertx/grpc/VertxServer.start:(Lio/vertx/core/Handler;)Lio/vertx/grpc/VertxServer;
      67: pop
      68: return

  private void lambda$null$0(io.vertx.core.ServidorOptions, io.vertx.core.AsyncResult);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokespecial #52                 // Method registryServer:(Lio/vertx/core/AsyncResult;Lio/vertx/core/ServidorOptions;)V
       6: return

  static {};
    Code:
       0: ldc           #53                 // class io/vertx/up/verticle/ZeroRpcAgent
       2: invokestatic  #54                 // InterfaceMethod io/vertx/up/log/Annal.get:(Ljava/lang/Class;)Lio/vertx/up/log/Annal;
       5: putstatic     #16                 // Field LOGGER:Lio/vertx/up/log/Annal;
       8: return
}
