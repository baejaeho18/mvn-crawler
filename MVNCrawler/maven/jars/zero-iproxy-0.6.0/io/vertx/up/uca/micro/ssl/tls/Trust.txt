Compiled from "Trust.java"
public interface io.vertx.up.uca.micro.ssl.tls.Trust<T extends io.vertx.core.net.TrustOptions> extends java.util.function.Supplier<T> {
  public static final io.vertx.up.uca.micro.ssl.tls.Trust<io.vertx.core.net.TrustOptions> NONE;

  public static final io.vertx.up.uca.micro.ssl.tls.Trust<io.vertx.core.net.JksOptions> SERVER_JKS;

  public static final io.vertx.up.uca.micro.ssl.tls.Trust<io.vertx.core.net.JksOptions> CLIENT_JKS;

  public static final io.vertx.up.uca.micro.ssl.tls.Trust<io.vertx.core.net.PfxOptions> SERVER_PKCS12;

  public static final io.vertx.up.uca.micro.ssl.tls.Trust<io.vertx.core.net.PfxOptions> CLIENT_PKCS12;

  public static final io.vertx.up.uca.micro.ssl.tls.Trust<io.vertx.core.net.PemTrustOptions> SERVER_PEM;

  public static final io.vertx.up.uca.micro.ssl.tls.Trust<io.vertx.core.net.PemTrustOptions> CLIENT_PEM;

  public static final io.vertx.up.uca.micro.ssl.tls.Trust<io.vertx.core.net.JksOptions> SERVER_JKS_ROOT_CA;

  public static final io.vertx.up.uca.micro.ssl.tls.Trust<io.vertx.core.net.PfxOptions> SERVER_PKCS12_ROOT_CA;

  public static final io.vertx.up.uca.micro.ssl.tls.Trust<io.vertx.core.net.PemTrustOptions> SERVER_PEM_ROOT_CA;

  public static final io.vertx.up.uca.micro.ssl.tls.Trust<io.vertx.core.net.PemTrustOptions> CLIENT_PEM_ROOT_CA;

  public static final io.vertx.up.uca.micro.ssl.tls.Trust<io.vertx.core.net.PemTrustOptions> SERVER_PEM_ROOT_CA_AND_OTHER_CA;

  public static final io.vertx.up.uca.micro.ssl.tls.Trust<io.vertx.core.net.JksOptions> SNI_JKS_HOST1;

  public static final io.vertx.up.uca.micro.ssl.tls.Trust<io.vertx.core.net.JksOptions> SNI_JKS_HOST2;

  public static final io.vertx.up.uca.micro.ssl.tls.Trust<io.vertx.core.net.JksOptions> SNI_JKS_HOST3;

  public static final io.vertx.up.uca.micro.ssl.tls.Trust<io.vertx.core.net.JksOptions> SNI_JKS_HOST4;

  public static final io.vertx.up.uca.micro.ssl.tls.Trust<io.vertx.core.net.JksOptions> SNI_JKS_HOST5;

  private static io.vertx.core.net.JksOptions lambda$static$16();
    Code:
       0: new           #1                  // class io/vertx/core/net/JksOptions
       3: dup
       4: invokespecial #2                  // Method io/vertx/core/net/JksOptions."<init>":()V
       7: ldc           #3                  // String tls/sni-truststore-host5.jks
       9: invokevirtual #4                  // Method io/vertx/core/net/JksOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      12: ldc           #5                  // String wibble
      14: invokevirtual #6                  // Method io/vertx/core/net/JksOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      17: areturn

  private static io.vertx.core.net.JksOptions lambda$static$15();
    Code:
       0: new           #1                  // class io/vertx/core/net/JksOptions
       3: dup
       4: invokespecial #2                  // Method io/vertx/core/net/JksOptions."<init>":()V
       7: ldc           #7                  // String tls/sni-truststore-host4.jks
       9: invokevirtual #4                  // Method io/vertx/core/net/JksOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      12: ldc           #5                  // String wibble
      14: invokevirtual #6                  // Method io/vertx/core/net/JksOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      17: areturn

  private static io.vertx.core.net.JksOptions lambda$static$14();
    Code:
       0: new           #1                  // class io/vertx/core/net/JksOptions
       3: dup
       4: invokespecial #2                  // Method io/vertx/core/net/JksOptions."<init>":()V
       7: ldc           #8                  // String tls/sni-truststore-host3.jks
       9: invokevirtual #4                  // Method io/vertx/core/net/JksOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      12: ldc           #5                  // String wibble
      14: invokevirtual #6                  // Method io/vertx/core/net/JksOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      17: areturn

  private static io.vertx.core.net.JksOptions lambda$static$13();
    Code:
       0: new           #1                  // class io/vertx/core/net/JksOptions
       3: dup
       4: invokespecial #2                  // Method io/vertx/core/net/JksOptions."<init>":()V
       7: ldc           #9                  // String tls/sni-truststore-host2.jks
       9: invokevirtual #4                  // Method io/vertx/core/net/JksOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      12: ldc           #5                  // String wibble
      14: invokevirtual #6                  // Method io/vertx/core/net/JksOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      17: areturn

  private static io.vertx.core.net.JksOptions lambda$static$12();
    Code:
       0: new           #1                  // class io/vertx/core/net/JksOptions
       3: dup
       4: invokespecial #2                  // Method io/vertx/core/net/JksOptions."<init>":()V
       7: ldc           #10                 // String tls/sni-truststore-host1.jks
       9: invokevirtual #4                  // Method io/vertx/core/net/JksOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      12: ldc           #5                  // String wibble
      14: invokevirtual #6                  // Method io/vertx/core/net/JksOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      17: areturn

  private static io.vertx.core.net.PemTrustOptions lambda$static$11();
    Code:
       0: new           #11                 // class io/vertx/core/net/PemTrustOptions
       3: dup
       4: invokespecial #12                 // Method io/vertx/core/net/PemTrustOptions."<init>":()V
       7: ldc           #13                 // String tls/root-ca/ca-cert.pem
       9: invokevirtual #14                 // Method io/vertx/core/net/PemTrustOptions.addCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemTrustOptions;
      12: ldc           #15                 // String tls/other-ca/ca-cert.pem
      14: invokevirtual #14                 // Method io/vertx/core/net/PemTrustOptions.addCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemTrustOptions;
      17: areturn

  private static io.vertx.core.net.PemTrustOptions lambda$static$10();
    Code:
       0: new           #11                 // class io/vertx/core/net/PemTrustOptions
       3: dup
       4: invokespecial #12                 // Method io/vertx/core/net/PemTrustOptions."<init>":()V
       7: ldc           #13                 // String tls/root-ca/ca-cert.pem
       9: invokevirtual #14                 // Method io/vertx/core/net/PemTrustOptions.addCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemTrustOptions;
      12: areturn

  private static io.vertx.core.net.PemTrustOptions lambda$static$9();
    Code:
       0: new           #11                 // class io/vertx/core/net/PemTrustOptions
       3: dup
       4: invokespecial #12                 // Method io/vertx/core/net/PemTrustOptions."<init>":()V
       7: ldc           #13                 // String tls/root-ca/ca-cert.pem
       9: invokevirtual #14                 // Method io/vertx/core/net/PemTrustOptions.addCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemTrustOptions;
      12: areturn

  private static io.vertx.core.net.PfxOptions lambda$static$8();
    Code:
       0: new           #16                 // class io/vertx/core/net/PfxOptions
       3: dup
       4: invokespecial #17                 // Method io/vertx/core/net/PfxOptions."<init>":()V
       7: ldc           #18                 // String tls/client-truststore-root-ca.p12
       9: invokevirtual #19                 // Method io/vertx/core/net/PfxOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/PfxOptions;
      12: ldc           #5                  // String wibble
      14: invokevirtual #20                 // Method io/vertx/core/net/PfxOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/PfxOptions;
      17: areturn

  private static io.vertx.core.net.JksOptions lambda$static$7();
    Code:
       0: new           #1                  // class io/vertx/core/net/JksOptions
       3: dup
       4: invokespecial #2                  // Method io/vertx/core/net/JksOptions."<init>":()V
       7: ldc           #21                 // String tls/client-truststore-root-ca.jks
       9: invokevirtual #4                  // Method io/vertx/core/net/JksOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      12: ldc           #5                  // String wibble
      14: invokevirtual #6                  // Method io/vertx/core/net/JksOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      17: areturn

  private static io.vertx.core.net.PemTrustOptions lambda$static$6();
    Code:
       0: new           #11                 // class io/vertx/core/net/PemTrustOptions
       3: dup
       4: invokespecial #12                 // Method io/vertx/core/net/PemTrustOptions."<init>":()V
       7: ldc           #22                 // String tls/client-cert.pem
       9: invokevirtual #14                 // Method io/vertx/core/net/PemTrustOptions.addCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemTrustOptions;
      12: areturn

  private static io.vertx.core.net.PemTrustOptions lambda$static$5();
    Code:
       0: new           #11                 // class io/vertx/core/net/PemTrustOptions
       3: dup
       4: invokespecial #12                 // Method io/vertx/core/net/PemTrustOptions."<init>":()V
       7: ldc           #23                 // String tls/server-cert.pem
       9: invokevirtual #14                 // Method io/vertx/core/net/PemTrustOptions.addCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemTrustOptions;
      12: areturn

  private static io.vertx.core.net.PfxOptions lambda$static$4();
    Code:
       0: new           #16                 // class io/vertx/core/net/PfxOptions
       3: dup
       4: invokespecial #17                 // Method io/vertx/core/net/PfxOptions."<init>":()V
       7: ldc           #24                 // String tls/server-truststore.p12
       9: invokevirtual #19                 // Method io/vertx/core/net/PfxOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/PfxOptions;
      12: ldc           #5                  // String wibble
      14: invokevirtual #20                 // Method io/vertx/core/net/PfxOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/PfxOptions;
      17: areturn

  private static io.vertx.core.net.PfxOptions lambda$static$3();
    Code:
       0: new           #16                 // class io/vertx/core/net/PfxOptions
       3: dup
       4: invokespecial #17                 // Method io/vertx/core/net/PfxOptions."<init>":()V
       7: ldc           #25                 // String tls/client-truststore.p12
       9: invokevirtual #19                 // Method io/vertx/core/net/PfxOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/PfxOptions;
      12: ldc           #5                  // String wibble
      14: invokevirtual #20                 // Method io/vertx/core/net/PfxOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/PfxOptions;
      17: areturn

  private static io.vertx.core.net.JksOptions lambda$static$2();
    Code:
       0: new           #1                  // class io/vertx/core/net/JksOptions
       3: dup
       4: invokespecial #2                  // Method io/vertx/core/net/JksOptions."<init>":()V
       7: ldc           #26                 // String tls/server-truststore.jks
       9: invokevirtual #4                  // Method io/vertx/core/net/JksOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      12: ldc           #5                  // String wibble
      14: invokevirtual #6                  // Method io/vertx/core/net/JksOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      17: areturn

  private static io.vertx.core.net.JksOptions lambda$static$1();
    Code:
       0: new           #1                  // class io/vertx/core/net/JksOptions
       3: dup
       4: invokespecial #2                  // Method io/vertx/core/net/JksOptions."<init>":()V
       7: ldc           #27                 // String tls/client-truststore.jks
       9: invokevirtual #4                  // Method io/vertx/core/net/JksOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      12: ldc           #5                  // String wibble
      14: invokevirtual #6                  // Method io/vertx/core/net/JksOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      17: areturn

  private static io.vertx.core.net.TrustOptions lambda$static$0();
    Code:
       0: aconst_null
       1: areturn

  static {};
    Code:
       0: invokedynamic #28,  0             // InvokeDynamic #0:get:()Lio/vertx/up/uca/micro/ssl/tls/Trust;
       5: putstatic     #29                 // Field NONE:Lio/vertx/up/uca/micro/ssl/tls/Trust;
       8: invokedynamic #30,  0             // InvokeDynamic #1:get:()Lio/vertx/up/uca/micro/ssl/tls/Trust;
      13: putstatic     #31                 // Field SERVER_JKS:Lio/vertx/up/uca/micro/ssl/tls/Trust;
      16: invokedynamic #32,  0             // InvokeDynamic #2:get:()Lio/vertx/up/uca/micro/ssl/tls/Trust;
      21: putstatic     #33                 // Field CLIENT_JKS:Lio/vertx/up/uca/micro/ssl/tls/Trust;
      24: invokedynamic #34,  0             // InvokeDynamic #3:get:()Lio/vertx/up/uca/micro/ssl/tls/Trust;
      29: putstatic     #35                 // Field SERVER_PKCS12:Lio/vertx/up/uca/micro/ssl/tls/Trust;
      32: invokedynamic #36,  0             // InvokeDynamic #4:get:()Lio/vertx/up/uca/micro/ssl/tls/Trust;
      37: putstatic     #37                 // Field CLIENT_PKCS12:Lio/vertx/up/uca/micro/ssl/tls/Trust;
      40: invokedynamic #38,  0             // InvokeDynamic #5:get:()Lio/vertx/up/uca/micro/ssl/tls/Trust;
      45: putstatic     #39                 // Field SERVER_PEM:Lio/vertx/up/uca/micro/ssl/tls/Trust;
      48: invokedynamic #40,  0             // InvokeDynamic #6:get:()Lio/vertx/up/uca/micro/ssl/tls/Trust;
      53: putstatic     #41                 // Field CLIENT_PEM:Lio/vertx/up/uca/micro/ssl/tls/Trust;
      56: invokedynamic #42,  0             // InvokeDynamic #7:get:()Lio/vertx/up/uca/micro/ssl/tls/Trust;
      61: putstatic     #43                 // Field SERVER_JKS_ROOT_CA:Lio/vertx/up/uca/micro/ssl/tls/Trust;
      64: invokedynamic #44,  0             // InvokeDynamic #8:get:()Lio/vertx/up/uca/micro/ssl/tls/Trust;
      69: putstatic     #45                 // Field SERVER_PKCS12_ROOT_CA:Lio/vertx/up/uca/micro/ssl/tls/Trust;
      72: invokedynamic #46,  0             // InvokeDynamic #9:get:()Lio/vertx/up/uca/micro/ssl/tls/Trust;
      77: putstatic     #47                 // Field SERVER_PEM_ROOT_CA:Lio/vertx/up/uca/micro/ssl/tls/Trust;
      80: invokedynamic #48,  0             // InvokeDynamic #10:get:()Lio/vertx/up/uca/micro/ssl/tls/Trust;
      85: putstatic     #49                 // Field CLIENT_PEM_ROOT_CA:Lio/vertx/up/uca/micro/ssl/tls/Trust;
      88: invokedynamic #50,  0             // InvokeDynamic #11:get:()Lio/vertx/up/uca/micro/ssl/tls/Trust;
      93: putstatic     #51                 // Field SERVER_PEM_ROOT_CA_AND_OTHER_CA:Lio/vertx/up/uca/micro/ssl/tls/Trust;
      96: invokedynamic #52,  0             // InvokeDynamic #12:get:()Lio/vertx/up/uca/micro/ssl/tls/Trust;
     101: putstatic     #53                 // Field SNI_JKS_HOST1:Lio/vertx/up/uca/micro/ssl/tls/Trust;
     104: invokedynamic #54,  0             // InvokeDynamic #13:get:()Lio/vertx/up/uca/micro/ssl/tls/Trust;
     109: putstatic     #55                 // Field SNI_JKS_HOST2:Lio/vertx/up/uca/micro/ssl/tls/Trust;
     112: invokedynamic #56,  0             // InvokeDynamic #14:get:()Lio/vertx/up/uca/micro/ssl/tls/Trust;
     117: putstatic     #57                 // Field SNI_JKS_HOST3:Lio/vertx/up/uca/micro/ssl/tls/Trust;
     120: invokedynamic #58,  0             // InvokeDynamic #15:get:()Lio/vertx/up/uca/micro/ssl/tls/Trust;
     125: putstatic     #59                 // Field SNI_JKS_HOST4:Lio/vertx/up/uca/micro/ssl/tls/Trust;
     128: invokedynamic #60,  0             // InvokeDynamic #16:get:()Lio/vertx/up/uca/micro/ssl/tls/Trust;
     133: putstatic     #61                 // Field SNI_JKS_HOST5:Lio/vertx/up/uca/micro/ssl/tls/Trust;
     136: return
}
