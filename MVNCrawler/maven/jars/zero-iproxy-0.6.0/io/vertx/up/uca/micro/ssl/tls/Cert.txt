Compiled from "Cert.java"
public interface io.vertx.up.uca.micro.ssl.tls.Cert<K extends io.vertx.core.net.KeyCertOptions> extends java.util.function.Supplier<K> {
  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.KeyCertOptions> NONE;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.JksOptions> SERVER_JKS;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.JksOptions> CLIENT_JKS;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.PfxOptions> SERVER_PKCS12;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.PfxOptions> CLIENT_PKCS12;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.PemKeyCertOptions> SERVER_PEM;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.PemKeyCertOptions> SERVER_PEM_RSA;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.PemKeyCertOptions> CLIENT_PEM;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.JksOptions> SERVER_JKS_ROOT_CA;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.PfxOptions> SERVER_PKCS12_ROOT_CA;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.PemKeyCertOptions> SERVER_PEM_ROOT_CA;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.PemKeyCertOptions> CLIENT_PEM_ROOT_CA;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.PemKeyCertOptions> SERVER_PEM_INT_CA;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.PemKeyCertOptions> SERVER_PEM_CA_CHAIN;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.PemKeyCertOptions> SERVER_PEM_OTHER_CA;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.JksOptions> SERVER_MIM;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.JksOptions> SNI_JKS;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.PfxOptions> SNI_PKCS12;

  public static final io.vertx.up.uca.micro.ssl.tls.Cert<io.vertx.core.net.PemKeyCertOptions> SNI_PEM;

  private static io.vertx.core.net.PemKeyCertOptions lambda$static$18();
    Code:
       0: new           #1                  // class io/vertx/core/net/PemKeyCertOptions
       3: dup
       4: invokespecial #2                  // Method io/vertx/core/net/PemKeyCertOptions."<init>":()V
       7: ldc           #3                  // String tls/server-key.pem
       9: invokevirtual #4                  // Method io/vertx/core/net/PemKeyCertOptions.addKeyPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      12: ldc           #5                  // String tls/server-cert.pem
      14: invokevirtual #6                  // Method io/vertx/core/net/PemKeyCertOptions.addCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      17: ldc           #7                  // String tls/host1-key.pem
      19: invokevirtual #4                  // Method io/vertx/core/net/PemKeyCertOptions.addKeyPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      22: ldc           #8                  // String tls/host1-cert.pem
      24: invokevirtual #6                  // Method io/vertx/core/net/PemKeyCertOptions.addCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      27: ldc           #9                  // String tls/host2-key.pem
      29: invokevirtual #4                  // Method io/vertx/core/net/PemKeyCertOptions.addKeyPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      32: ldc           #10                 // String tls/host2-cert.pem
      34: invokevirtual #6                  // Method io/vertx/core/net/PemKeyCertOptions.addCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      37: ldc           #11                 // String tls/host3-key.pem
      39: invokevirtual #4                  // Method io/vertx/core/net/PemKeyCertOptions.addKeyPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      42: ldc           #12                 // String tls/host3-cert.pem
      44: invokevirtual #6                  // Method io/vertx/core/net/PemKeyCertOptions.addCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      47: ldc           #13                 // String tls/host4-key.pem
      49: invokevirtual #4                  // Method io/vertx/core/net/PemKeyCertOptions.addKeyPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      52: ldc           #14                 // String tls/host4-cert.pem
      54: invokevirtual #6                  // Method io/vertx/core/net/PemKeyCertOptions.addCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      57: ldc           #15                 // String tls/host5-key.pem
      59: invokevirtual #4                  // Method io/vertx/core/net/PemKeyCertOptions.addKeyPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      62: ldc           #16                 // String tls/host5-cert.pem
      64: invokevirtual #6                  // Method io/vertx/core/net/PemKeyCertOptions.addCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      67: areturn

  private static io.vertx.core.net.PfxOptions lambda$static$17();
    Code:
       0: new           #17                 // class io/vertx/core/net/PfxOptions
       3: dup
       4: invokespecial #18                 // Method io/vertx/core/net/PfxOptions."<init>":()V
       7: ldc           #19                 // String tls/sni-keystore.p12
       9: invokevirtual #20                 // Method io/vertx/core/net/PfxOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/PfxOptions;
      12: ldc           #21                 // String wibble
      14: invokevirtual #22                 // Method io/vertx/core/net/PfxOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/PfxOptions;
      17: areturn

  private static io.vertx.core.net.JksOptions lambda$static$16();
    Code:
       0: new           #23                 // class io/vertx/core/net/JksOptions
       3: dup
       4: invokespecial #24                 // Method io/vertx/core/net/JksOptions."<init>":()V
       7: ldc           #25                 // String tls/sni-keystore.jks
       9: invokevirtual #26                 // Method io/vertx/core/net/JksOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      12: ldc           #21                 // String wibble
      14: invokevirtual #27                 // Method io/vertx/core/net/JksOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      17: areturn

  private static io.vertx.core.net.JksOptions lambda$static$15();
    Code:
       0: new           #23                 // class io/vertx/core/net/JksOptions
       3: dup
       4: invokespecial #24                 // Method io/vertx/core/net/JksOptions."<init>":()V
       7: ldc           #28                 // String tls/mim-server-keystore.jks
       9: invokevirtual #26                 // Method io/vertx/core/net/JksOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      12: ldc           #21                 // String wibble
      14: invokevirtual #27                 // Method io/vertx/core/net/JksOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      17: areturn

  private static io.vertx.core.net.PemKeyCertOptions lambda$static$14();
    Code:
       0: new           #1                  // class io/vertx/core/net/PemKeyCertOptions
       3: dup
       4: invokespecial #2                  // Method io/vertx/core/net/PemKeyCertOptions."<init>":()V
       7: ldc           #3                  // String tls/server-key.pem
       9: invokevirtual #29                 // Method io/vertx/core/net/PemKeyCertOptions.setKeyPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      12: ldc           #30                 // String tls/server-cert-other-ca.pem
      14: invokevirtual #31                 // Method io/vertx/core/net/PemKeyCertOptions.setCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      17: areturn

  private static io.vertx.core.net.PemKeyCertOptions lambda$static$13();
    Code:
       0: new           #1                  // class io/vertx/core/net/PemKeyCertOptions
       3: dup
       4: invokespecial #2                  // Method io/vertx/core/net/PemKeyCertOptions."<init>":()V
       7: ldc           #3                  // String tls/server-key.pem
       9: invokevirtual #29                 // Method io/vertx/core/net/PemKeyCertOptions.setKeyPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      12: ldc           #32                 // String tls/server-cert-ca-chain.pem
      14: invokevirtual #31                 // Method io/vertx/core/net/PemKeyCertOptions.setCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      17: areturn

  private static io.vertx.core.net.PemKeyCertOptions lambda$static$12();
    Code:
       0: new           #1                  // class io/vertx/core/net/PemKeyCertOptions
       3: dup
       4: invokespecial #2                  // Method io/vertx/core/net/PemKeyCertOptions."<init>":()V
       7: ldc           #3                  // String tls/server-key.pem
       9: invokevirtual #29                 // Method io/vertx/core/net/PemKeyCertOptions.setKeyPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      12: ldc           #33                 // String tls/server-cert-int-ca.pem
      14: invokevirtual #31                 // Method io/vertx/core/net/PemKeyCertOptions.setCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      17: areturn

  private static io.vertx.core.net.PemKeyCertOptions lambda$static$11();
    Code:
       0: new           #1                  // class io/vertx/core/net/PemKeyCertOptions
       3: dup
       4: invokespecial #2                  // Method io/vertx/core/net/PemKeyCertOptions."<init>":()V
       7: ldc           #34                 // String tls/client-key.pem
       9: invokevirtual #29                 // Method io/vertx/core/net/PemKeyCertOptions.setKeyPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      12: ldc           #35                 // String tls/client-cert-root-ca.pem
      14: invokevirtual #31                 // Method io/vertx/core/net/PemKeyCertOptions.setCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      17: areturn

  private static io.vertx.core.net.PemKeyCertOptions lambda$static$10();
    Code:
       0: new           #1                  // class io/vertx/core/net/PemKeyCertOptions
       3: dup
       4: invokespecial #2                  // Method io/vertx/core/net/PemKeyCertOptions."<init>":()V
       7: ldc           #3                  // String tls/server-key.pem
       9: invokevirtual #29                 // Method io/vertx/core/net/PemKeyCertOptions.setKeyPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      12: ldc           #36                 // String tls/server-cert-root-ca.pem
      14: invokevirtual #31                 // Method io/vertx/core/net/PemKeyCertOptions.setCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      17: areturn

  private static io.vertx.core.net.PfxOptions lambda$static$9();
    Code:
       0: new           #17                 // class io/vertx/core/net/PfxOptions
       3: dup
       4: invokespecial #18                 // Method io/vertx/core/net/PfxOptions."<init>":()V
       7: ldc           #37                 // String tls/server-keystore-root-ca.p12
       9: invokevirtual #20                 // Method io/vertx/core/net/PfxOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/PfxOptions;
      12: ldc           #21                 // String wibble
      14: invokevirtual #22                 // Method io/vertx/core/net/PfxOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/PfxOptions;
      17: areturn

  private static io.vertx.core.net.JksOptions lambda$static$8();
    Code:
       0: new           #23                 // class io/vertx/core/net/JksOptions
       3: dup
       4: invokespecial #24                 // Method io/vertx/core/net/JksOptions."<init>":()V
       7: ldc           #38                 // String tls/server-keystore-root-ca.jks
       9: invokevirtual #26                 // Method io/vertx/core/net/JksOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      12: ldc           #21                 // String wibble
      14: invokevirtual #27                 // Method io/vertx/core/net/JksOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      17: areturn

  private static io.vertx.core.net.PemKeyCertOptions lambda$static$7();
    Code:
       0: new           #1                  // class io/vertx/core/net/PemKeyCertOptions
       3: dup
       4: invokespecial #2                  // Method io/vertx/core/net/PemKeyCertOptions."<init>":()V
       7: ldc           #34                 // String tls/client-key.pem
       9: invokevirtual #29                 // Method io/vertx/core/net/PemKeyCertOptions.setKeyPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      12: ldc           #39                 // String tls/client-cert.pem
      14: invokevirtual #31                 // Method io/vertx/core/net/PemKeyCertOptions.setCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      17: areturn

  private static io.vertx.core.net.PemKeyCertOptions lambda$static$6();
    Code:
       0: new           #1                  // class io/vertx/core/net/PemKeyCertOptions
       3: dup
       4: invokespecial #2                  // Method io/vertx/core/net/PemKeyCertOptions."<init>":()V
       7: ldc           #40                 // String tls/server-key-pkcs1.pem
       9: invokevirtual #29                 // Method io/vertx/core/net/PemKeyCertOptions.setKeyPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      12: ldc           #5                  // String tls/server-cert.pem
      14: invokevirtual #31                 // Method io/vertx/core/net/PemKeyCertOptions.setCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      17: areturn

  private static io.vertx.core.net.PemKeyCertOptions lambda$static$5();
    Code:
       0: new           #1                  // class io/vertx/core/net/PemKeyCertOptions
       3: dup
       4: invokespecial #2                  // Method io/vertx/core/net/PemKeyCertOptions."<init>":()V
       7: ldc           #3                  // String tls/server-key.pem
       9: invokevirtual #29                 // Method io/vertx/core/net/PemKeyCertOptions.setKeyPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      12: ldc           #5                  // String tls/server-cert.pem
      14: invokevirtual #31                 // Method io/vertx/core/net/PemKeyCertOptions.setCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      17: areturn

  private static io.vertx.core.net.PfxOptions lambda$static$4();
    Code:
       0: new           #17                 // class io/vertx/core/net/PfxOptions
       3: dup
       4: invokespecial #18                 // Method io/vertx/core/net/PfxOptions."<init>":()V
       7: ldc           #41                 // String tls/client-keystore.p12
       9: invokevirtual #20                 // Method io/vertx/core/net/PfxOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/PfxOptions;
      12: ldc           #21                 // String wibble
      14: invokevirtual #22                 // Method io/vertx/core/net/PfxOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/PfxOptions;
      17: areturn

  private static io.vertx.core.net.PfxOptions lambda$static$3();
    Code:
       0: new           #17                 // class io/vertx/core/net/PfxOptions
       3: dup
       4: invokespecial #18                 // Method io/vertx/core/net/PfxOptions."<init>":()V
       7: ldc           #42                 // String tls/server-keystore.p12
       9: invokevirtual #20                 // Method io/vertx/core/net/PfxOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/PfxOptions;
      12: ldc           #21                 // String wibble
      14: invokevirtual #22                 // Method io/vertx/core/net/PfxOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/PfxOptions;
      17: areturn

  private static io.vertx.core.net.JksOptions lambda$static$2();
    Code:
       0: new           #23                 // class io/vertx/core/net/JksOptions
       3: dup
       4: invokespecial #24                 // Method io/vertx/core/net/JksOptions."<init>":()V
       7: ldc           #43                 // String tls/client-keystore.jks
       9: invokevirtual #26                 // Method io/vertx/core/net/JksOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      12: ldc           #21                 // String wibble
      14: invokevirtual #27                 // Method io/vertx/core/net/JksOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      17: areturn

  private static io.vertx.core.net.JksOptions lambda$static$1();
    Code:
       0: new           #23                 // class io/vertx/core/net/JksOptions
       3: dup
       4: invokespecial #24                 // Method io/vertx/core/net/JksOptions."<init>":()V
       7: ldc           #44                 // String tls/server-keystore.jks
       9: invokevirtual #26                 // Method io/vertx/core/net/JksOptions.setPath:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      12: ldc           #21                 // String wibble
      14: invokevirtual #27                 // Method io/vertx/core/net/JksOptions.setPassword:(Ljava/lang/String;)Lio/vertx/core/net/JksOptions;
      17: areturn

  private static io.vertx.core.net.KeyCertOptions lambda$static$0();
    Code:
       0: aconst_null
       1: areturn

  static {};
    Code:
       0: invokedynamic #45,  0             // InvokeDynamic #0:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
       5: putstatic     #46                 // Field NONE:Lio/vertx/up/uca/micro/ssl/tls/Cert;
       8: invokedynamic #47,  0             // InvokeDynamic #1:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
      13: putstatic     #48                 // Field SERVER_JKS:Lio/vertx/up/uca/micro/ssl/tls/Cert;
      16: invokedynamic #49,  0             // InvokeDynamic #2:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
      21: putstatic     #50                 // Field CLIENT_JKS:Lio/vertx/up/uca/micro/ssl/tls/Cert;
      24: invokedynamic #51,  0             // InvokeDynamic #3:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
      29: putstatic     #52                 // Field SERVER_PKCS12:Lio/vertx/up/uca/micro/ssl/tls/Cert;
      32: invokedynamic #53,  0             // InvokeDynamic #4:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
      37: putstatic     #54                 // Field CLIENT_PKCS12:Lio/vertx/up/uca/micro/ssl/tls/Cert;
      40: invokedynamic #55,  0             // InvokeDynamic #5:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
      45: putstatic     #56                 // Field SERVER_PEM:Lio/vertx/up/uca/micro/ssl/tls/Cert;
      48: invokedynamic #57,  0             // InvokeDynamic #6:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
      53: putstatic     #58                 // Field SERVER_PEM_RSA:Lio/vertx/up/uca/micro/ssl/tls/Cert;
      56: invokedynamic #59,  0             // InvokeDynamic #7:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
      61: putstatic     #60                 // Field CLIENT_PEM:Lio/vertx/up/uca/micro/ssl/tls/Cert;
      64: invokedynamic #61,  0             // InvokeDynamic #8:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
      69: putstatic     #62                 // Field SERVER_JKS_ROOT_CA:Lio/vertx/up/uca/micro/ssl/tls/Cert;
      72: invokedynamic #63,  0             // InvokeDynamic #9:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
      77: putstatic     #64                 // Field SERVER_PKCS12_ROOT_CA:Lio/vertx/up/uca/micro/ssl/tls/Cert;
      80: invokedynamic #65,  0             // InvokeDynamic #10:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
      85: putstatic     #66                 // Field SERVER_PEM_ROOT_CA:Lio/vertx/up/uca/micro/ssl/tls/Cert;
      88: invokedynamic #67,  0             // InvokeDynamic #11:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
      93: putstatic     #68                 // Field CLIENT_PEM_ROOT_CA:Lio/vertx/up/uca/micro/ssl/tls/Cert;
      96: invokedynamic #69,  0             // InvokeDynamic #12:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
     101: putstatic     #70                 // Field SERVER_PEM_INT_CA:Lio/vertx/up/uca/micro/ssl/tls/Cert;
     104: invokedynamic #71,  0             // InvokeDynamic #13:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
     109: putstatic     #72                 // Field SERVER_PEM_CA_CHAIN:Lio/vertx/up/uca/micro/ssl/tls/Cert;
     112: invokedynamic #73,  0             // InvokeDynamic #14:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
     117: putstatic     #74                 // Field SERVER_PEM_OTHER_CA:Lio/vertx/up/uca/micro/ssl/tls/Cert;
     120: invokedynamic #75,  0             // InvokeDynamic #15:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
     125: putstatic     #76                 // Field SERVER_MIM:Lio/vertx/up/uca/micro/ssl/tls/Cert;
     128: invokedynamic #77,  0             // InvokeDynamic #16:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
     133: putstatic     #78                 // Field SNI_JKS:Lio/vertx/up/uca/micro/ssl/tls/Cert;
     136: invokedynamic #79,  0             // InvokeDynamic #17:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
     141: putstatic     #80                 // Field SNI_PKCS12:Lio/vertx/up/uca/micro/ssl/tls/Cert;
     144: invokedynamic #81,  0             // InvokeDynamic #18:get:()Lio/vertx/up/uca/micro/ssl/tls/Cert;
     149: putstatic     #82                 // Field SNI_PEM:Lio/vertx/up/uca/micro/ssl/tls/Cert;
     152: return
}
