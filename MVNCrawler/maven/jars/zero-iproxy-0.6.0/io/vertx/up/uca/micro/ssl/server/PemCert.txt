Compiled from "PemCert.java"
public class io.vertx.up.uca.micro.ssl.server.PemCert implements io.vertx.up.uca.micro.ssl.CertPipe<io.vertx.core.json.JsonObject> {
  private static final io.vertx.up.log.Annal LOGGER;

  private static final java.lang.String PATH_CERT;

  private static final java.lang.String PATH_KEY;

  public io.vertx.up.uca.micro.ssl.server.PemCert();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public io.vertx.core.Handler<io.vertx.core.net.TCPSSLOptions> parse(io.vertx.core.json.JsonObject);
    Code:
       0: aload_1
       1: invokedynamic #2,  0              // InvokeDynamic #0:get:(Lio/vertx/core/json/JsonObject;)Ljava/util/function/Supplier;
       6: iconst_1
       7: anewarray     #3                  // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: aastore
      14: invokestatic  #4                  // Method io/vertx/up/fn/Fn.getNull:(Ljava/util/function/Supplier;[Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #5                  // class io/vertx/core/Handler
      20: areturn

  public io.vertx.core.Handler parse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class io/vertx/core/json/JsonObject
       5: invokevirtual #7                  // Method parse:(Lio/vertx/core/json/JsonObject;)Lio/vertx/core/Handler;
       8: areturn

  private static io.vertx.core.Handler lambda$parse$2(io.vertx.core.json.JsonObject);
    Code:
       0: aconst_null
       1: aload_0
       2: if_acmpeq     23
       5: aload_0
       6: ldc           #9                  // String key
       8: invokevirtual #10                 // Method io/vertx/core/json/JsonObject.containsKey:(Ljava/lang/String;)Z
      11: ifeq          23
      14: aload_0
      15: ldc           #11                 // String cert
      17: invokevirtual #10                 // Method io/vertx/core/json/JsonObject.containsKey:(Ljava/lang/String;)Z
      20: ifne          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: getstatic     #12                 // Field LOGGER:Lio/vertx/up/log/Annal;
      31: getstatic     #13                 // Field io/vertx/up/uca/micro/ssl/tls/Cert.SERVER_PEM:Lio/vertx/up/uca/micro/ssl/tls/Cert;
      34: invokedynamic #14,  0             // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
      39: invokestatic  #15                 // Method io/vertx/up/fn/Fn.getSemi:(ZLio/vertx/up/log/Annal;Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/lang/Object;
      42: checkcast     #16                 // class io/vertx/core/net/PemKeyCertOptions
      45: astore_1
      46: aload_1
      47: invokedynamic #17,  0             // InvokeDynamic #2:handle:(Lio/vertx/core/net/PemKeyCertOptions;)Lio/vertx/core/Handler;
      52: areturn

  private static void lambda$null$1(io.vertx.core.net.PemKeyCertOptions, io.vertx.core.net.TCPSSLOptions);
    Code:
       0: aload_1
       1: iconst_1
       2: invokevirtual #18                 // Method io/vertx/core/net/TCPSSLOptions.setSsl:(Z)Lio/vertx/core/net/TCPSSLOptions;
       5: iconst_1
       6: invokevirtual #19                 // Method io/vertx/core/net/TCPSSLOptions.setUseAlpn:(Z)Lio/vertx/core/net/TCPSSLOptions;
       9: aload_0
      10: invokevirtual #20                 // Method io/vertx/core/net/TCPSSLOptions.setPemKeyCertOptions:(Lio/vertx/core/net/PemKeyCertOptions;)Lio/vertx/core/net/TCPSSLOptions;
      13: new           #21                 // class io/vertx/core/net/OpenSSLEngineOptions
      16: dup
      17: invokespecial #22                 // Method io/vertx/core/net/OpenSSLEngineOptions."<init>":()V
      20: invokevirtual #23                 // Method io/vertx/core/net/TCPSSLOptions.setOpenSslEngineOptions:(Lio/vertx/core/net/OpenSSLEngineOptions;)Lio/vertx/core/net/TCPSSLOptions;
      23: pop
      24: return

  private static io.vertx.core.net.PemKeyCertOptions lambda$null$0();
    Code:
       0: new           #16                 // class io/vertx/core/net/PemKeyCertOptions
       3: dup
       4: invokespecial #24                 // Method io/vertx/core/net/PemKeyCertOptions."<init>":()V
       7: ldc           #9                  // String key
       9: invokevirtual #25                 // Method io/vertx/core/net/PemKeyCertOptions.setKeyPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      12: ldc           #11                 // String cert
      14: invokevirtual #26                 // Method io/vertx/core/net/PemKeyCertOptions.setCertPath:(Ljava/lang/String;)Lio/vertx/core/net/PemKeyCertOptions;
      17: areturn

  static {};
    Code:
       0: ldc           #8                  // class io/vertx/up/uca/micro/ssl/server/PemCert
       2: invokestatic  #27                 // InterfaceMethod io/vertx/up/log/Annal.get:(Ljava/lang/Class;)Lio/vertx/up/log/Annal;
       5: putstatic     #12                 // Field LOGGER:Lio/vertx/up/log/Annal;
       8: return
}
