Compiled from "CommonArithmetic.java"
public class io.vertx.up.uca.micro.matcher.CommonArithmetic implements io.vertx.up.uca.micro.matcher.Arithmetic {
  public io.vertx.up.uca.micro.matcher.CommonArithmetic();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public io.vertx.servicediscovery.Record search(java.util.List<io.vertx.servicediscovery.Record>, io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_2
       1: invokeinterface #2,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
       6: astore_3
       7: aload_3
       8: invokeinterface #3,  1            // InterfaceMethod io/vertx/core/http/HttpServerRequest.path:()Ljava/lang/String;
      13: astore        4
      15: aload_1
      16: invokeinterface #4,  1            // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      21: aload_0
      22: aload         4
      24: invokedynamic #5,  0              // InvokeDynamic #0:test:(Lio/vertx/up/uca/micro/matcher/CommonArithmetic;Ljava/lang/String;)Ljava/util/function/Predicate;
      29: invokeinterface #6,  2            // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      34: invokeinterface #7,  1            // InterfaceMethod java/util/stream/Stream.findAny:()Ljava/util/Optional;
      39: astore        5
      41: aload         5
      43: aconst_null
      44: invokevirtual #8                  // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #9                  // class io/vertx/servicediscovery/Record
      50: areturn

  private boolean isMatch(java.lang.String, io.vertx.servicediscovery.Record);
    Code:
       0: aload_2
       1: invokevirtual #10                 // Method io/vertx/servicediscovery/Record.getMetadata:()Lio/vertx/core/json/JsonObject;
       4: astore_3
       5: iconst_0
       6: istore        4
       8: aload_3
       9: ldc           #12                 // String path
      11: invokevirtual #13                 // Method io/vertx/core/json/JsonObject.containsKey:(Ljava/lang/String;)Z
      14: ifeq          72
      17: aload_3
      18: ldc           #12                 // String path
      20: invokevirtual #14                 // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
      23: astore        5
      25: aload         5
      27: invokestatic  #15                 // Method io/vertx/up/util/Ut.isNil:(Ljava/lang/String;)Z
      30: ifne          64
      33: aload         5
      35: ldc           #17                 // String :
      37: invokevirtual #18                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      40: ifeq          64
      43: aload         5
      45: invokestatic  #19                 // Method io/vertx/up/uca/matcher/RegexPath.createRegex:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      48: astore        6
      50: aload         6
      52: aload_1
      53: invokevirtual #20                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      56: invokevirtual #21                 // Method java/util/regex/Matcher.matches:()Z
      59: istore        4
      61: goto          72
      64: aload         5
      66: aload_1
      67: invokevirtual #22                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      70: istore        4
      72: iload         4
      74: ireturn

  private boolean lambda$search$0(java.lang.String, io.vertx.servicediscovery.Record);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #23                 // Method isMatch:(Ljava/lang/String;Lio/vertx/servicediscovery/Record;)Z
       6: ireturn
}
