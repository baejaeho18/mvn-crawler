Compiled from "ZeroRegistry.java"
public class io.vertx.up.uca.micro.center.ZeroRegistry implements io.vertx.up.uca.registry.UddiRegistry {
  private static final java.lang.String PATH_STATUS;

  private static final java.lang.String PATH_CATALOG;

  private static final java.lang.String ROUTE_TREE;

  private static final java.util.Set<java.lang.String> DEFAULTS;

  private static final java.util.concurrent.ConcurrentMap<java.lang.String, io.vertx.up.uca.micro.center.ZeroRegistry> REGISTRY_MAP;

  private final transient io.vertx.up.log.Annal logger;

  private final transient io.vertx.tp.plugin.etcd.center.EtcdData etcd;

  public io.vertx.up.uca.micro.center.ZeroRegistry(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method io/vertx/tp/plugin/etcd/center/EtcdData.create:(Ljava/lang/Class;)Lio/vertx/tp/plugin/etcd/center/EtcdData;
       9: putfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
      12: aload_0
      13: aload_1
      14: invokestatic  #4                  // InterfaceMethod io/vertx/up/log/Annal.get:(Ljava/lang/Class;)Lio/vertx/up/log/Annal;
      17: putfield      #5                  // Field logger:Lio/vertx/up/log/Annal;
      20: return

  public static io.vertx.up.uca.micro.center.ZeroRegistry create(java.lang.Class<?>);
    Code:
       0: getstatic     #6                  // Field REGISTRY_MAP:Ljava/util/concurrent/ConcurrentMap;
       3: aload_0
       4: invokedynamic #7,  0              // InvokeDynamic #0:get:(Ljava/lang/Class;)Ljava/util/function/Supplier;
       9: invokestatic  #8                  // Method io/vertx/up/fn/Fn.poolThread:(Ljava/util/concurrent/ConcurrentMap;Ljava/util/function/Supplier;)Ljava/lang/Object;
      12: checkcast     #9                  // class io/vertx/up/uca/micro/center/ZeroRegistry
      15: areturn

  public io.vertx.core.json.JsonArray getConfig();
    Code:
       0: aload_0
       1: getfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
       4: invokevirtual #10                 // Method io/vertx/tp/plugin/etcd/center/EtcdData.getConfig:()Lio/vertx/core/json/JsonArray;
       7: areturn

  public java.util.Set<io.vertx.core.json.JsonObject> getData(io.vertx.up.eon.em.EtcdPath, java.lang.String, java.util.function.BiFunction<java.lang.String, io.vertx.core.json.JsonArray, java.util.Set<io.vertx.core.json.JsonObject>>);
    Code:
       0: ldc           #11                 // String /zero/{0}/{1}/routes/{2}
       2: iconst_3
       3: anewarray     #12                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
      12: invokevirtual #13                 // Method io/vertx/tp/plugin/etcd/center/EtcdData.getApplication:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_1
      19: invokevirtual #14                 // Method io/vertx/up/eon/em/EtcdPath.toString:()Ljava/lang/String;
      22: invokevirtual #15                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      25: aastore
      26: dup
      27: iconst_2
      28: aload_2
      29: aastore
      30: invokestatic  #16                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: astore        4
      35: aload_0
      36: getfield      #5                  // Field logger:Lio/vertx/up/log/Annal;
      39: ldc           #18                 // String ( Etcd Catalog ) Read the path {0} service lists.
      41: iconst_1
      42: anewarray     #12                 // class java/lang/Object
      45: dup
      46: iconst_0
      47: aload         4
      49: aastore
      50: invokeinterface #19,  3           // InterfaceMethod io/vertx/up/log/Annal.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      55: aload_0
      56: getfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
      59: aload         4
      61: invokevirtual #20                 // Method io/vertx/tp/plugin/etcd/center/EtcdData.readData:(Ljava/lang/String;)Ljava/lang/String;
      64: astore        5
      66: new           #21                 // class java/util/HashSet
      69: dup
      70: invokespecial #22                 // Method java/util/HashSet."<init>":()V
      73: astore        6
      75: aload         5
      77: invokestatic  #23                 // Method io/vertx/up/util/Ut.isNil:(Ljava/lang/String;)Z
      80: ifne          114
      83: new           #24                 // class io/vertx/core/json/JsonArray
      86: dup
      87: aload         5
      89: invokespecial #25                 // Method io/vertx/core/json/JsonArray."<init>":(Ljava/lang/String;)V
      92: astore        7
      94: aload         6
      96: aload_3
      97: aload_2
      98: aload         7
     100: invokeinterface #26,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     105: checkcast     #27                 // class java/util/Collection
     108: invokeinterface #28,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     113: pop
     114: aload         6
     116: areturn

  public java.util.Set<java.lang.String> getServices(io.vertx.up.eon.em.EtcdPath);
    Code:
       0: ldc           #29                 // String /zero/{0}/{1}/services
       2: iconst_2
       3: anewarray     #12                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
      12: invokevirtual #13                 // Method io/vertx/tp/plugin/etcd/center/EtcdData.getApplication:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_1
      19: invokevirtual #14                 // Method io/vertx/up/eon/em/EtcdPath.toString:()Ljava/lang/String;
      22: invokevirtual #15                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      25: aastore
      26: invokestatic  #16                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      29: astore_2
      30: aload_0
      31: getfield      #5                  // Field logger:Lio/vertx/up/log/Annal;
      34: ldc           #18                 // String ( Etcd Catalog ) Read the path {0} service lists.
      36: iconst_1
      37: anewarray     #12                 // class java/lang/Object
      40: dup
      41: iconst_0
      42: aload_2
      43: aastore
      44: invokeinterface #19,  3           // InterfaceMethod io/vertx/up/log/Annal.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      49: aload_0
      50: getfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
      53: aload_2
      54: iconst_1
      55: invokevirtual #30                 // Method io/vertx/tp/plugin/etcd/center/EtcdData.readDir:(Ljava/lang/String;Z)Ljava/util/concurrent/ConcurrentMap;
      58: astore_3
      59: new           #21                 // class java/util/HashSet
      62: dup
      63: invokespecial #22                 // Method java/util/HashSet."<init>":()V
      66: astore        4
      68: aload_3
      69: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      74: invokestatic  #32                 // Method io/reactivex/Observable.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;
      77: invokedynamic #33,  0             // InvokeDynamic #1:test:()Lio/reactivex/functions/Predicate;
      82: invokevirtual #34                 // Method io/reactivex/Observable.filter:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;
      85: invokedynamic #35,  0             // InvokeDynamic #2:test:()Lio/reactivex/functions/Predicate;
      90: invokevirtual #34                 // Method io/reactivex/Observable.filter:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;
      93: invokedynamic #36,  0             // InvokeDynamic #3:test:()Lio/reactivex/functions/Predicate;
      98: invokevirtual #34                 // Method io/reactivex/Observable.filter:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;
     101: invokedynamic #37,  0             // InvokeDynamic #4:apply:()Lio/reactivex/functions/Function;
     106: invokevirtual #38                 // Method io/reactivex/Observable.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;
     109: aload         4
     111: dup
     112: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     115: pop
     116: invokedynamic #40,  0             // InvokeDynamic #5:accept:(Ljava/util/Set;)Lio/reactivex/functions/Consumer;
     121: invokevirtual #41                 // Method io/reactivex/Observable.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;
     124: invokeinterface #42,  1           // InterfaceMethod io/reactivex/disposables/Disposable.dispose:()V
     129: aload         4
     131: areturn

  public void erasingStatus(java.lang.String, java.lang.String, java.lang.Integer, io.vertx.up.eon.em.EtcdPath);
    Code:
       0: ldc           #43                 // String /zero/{0}/{1}/services/{2}:{3}:{4}
       2: iconst_5
       3: anewarray     #12                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
      12: invokevirtual #13                 // Method io/vertx/tp/plugin/etcd/center/EtcdData.getApplication:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: aload         4
      20: invokevirtual #14                 // Method io/vertx/up/eon/em/EtcdPath.toString:()Ljava/lang/String;
      23: invokevirtual #15                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      26: aastore
      27: dup
      28: iconst_2
      29: aload_1
      30: aastore
      31: dup
      32: iconst_3
      33: aload_2
      34: aastore
      35: dup
      36: iconst_4
      37: aload_3
      38: invokestatic  #44                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      41: aastore
      42: invokestatic  #16                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      45: astore        5
      47: aload_0
      48: getfield      #5                  // Field logger:Lio/vertx/up/log/Annal;
      51: ldc           #45                 // String ( Etcd Center ) The service {0} has been clean up from {1}
      53: iconst_2
      54: anewarray     #12                 // class java/lang/Object
      57: dup
      58: iconst_0
      59: aload_1
      60: aastore
      61: dup
      62: iconst_1
      63: aload         4
      65: aastore
      66: invokeinterface #46,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      71: aload_0
      72: getfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
      75: aload         5
      77: getstatic     #47                 // Field io/vertx/up/eon/em/Etat.STOPPED:Lio/vertx/up/eon/em/Etat;
      80: iconst_0
      81: invokevirtual #49                 // Method io/vertx/tp/plugin/etcd/center/EtcdData.write:(Ljava/lang/String;Ljava/lang/Object;I)Lio/vertx/core/json/JsonObject;
      84: pop
      85: return

  public void registryHttp(java.lang.String, io.vertx.core.http.HttpServerOptions, io.vertx.up.eon.em.Etat);
    Code:
       0: ldc           #43                 // String /zero/{0}/{1}/services/{2}:{3}:{4}
       2: iconst_5
       3: anewarray     #12                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
      12: invokevirtual #13                 // Method io/vertx/tp/plugin/etcd/center/EtcdData.getApplication:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: getstatic     #50                 // Field io/vertx/up/eon/em/EtcdPath.ENDPOINT:Lio/vertx/up/eon/em/EtcdPath;
      21: invokevirtual #14                 // Method io/vertx/up/eon/em/EtcdPath.toString:()Ljava/lang/String;
      24: invokevirtual #15                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      27: aastore
      28: dup
      29: iconst_2
      30: aload_1
      31: aastore
      32: dup
      33: iconst_3
      34: invokestatic  #51                 // Method io/vertx/up/util/Ut.netIPv4:()Ljava/lang/String;
      37: aastore
      38: dup
      39: iconst_4
      40: aload_2
      41: invokevirtual #52                 // Method io/vertx/core/http/HttpServerOptions.getPort:()I
      44: invokestatic  #53                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      47: aastore
      48: invokestatic  #16                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      51: astore        4
      53: aload_0
      54: getfield      #5                  // Field logger:Lio/vertx/up/log/Annal;
      57: ldc           #54                 // String ( Etcd Center ) The status {0} of service {1} has been registry to {2}
      59: iconst_3
      60: anewarray     #12                 // class java/lang/Object
      63: dup
      64: iconst_0
      65: aload_1
      66: aastore
      67: dup
      68: iconst_1
      69: aload_3
      70: aastore
      71: dup
      72: iconst_2
      73: aload         4
      75: aastore
      76: invokeinterface #46,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      81: aload_0
      82: getfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
      85: aload         4
      87: aload_3
      88: iconst_0
      89: invokevirtual #49                 // Method io/vertx/tp/plugin/etcd/center/EtcdData.write:(Ljava/lang/String;Ljava/lang/Object;I)Lio/vertx/core/json/JsonObject;
      92: pop
      93: return

  public void initialize(java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method io/vertx/tp/plugin/etcd/center/EtcdData.create:(Ljava/lang/Class;)Lio/vertx/tp/plugin/etcd/center/EtcdData;
       4: pop
       5: goto          34
       8: astore_2
       9: iconst_1
      10: aload_0
      11: getfield      #5                  // Field logger:Lio/vertx/up/log/Annal;
      14: ldc           #56                 // class io/vertx/zero/exception/MicroModeUpException
      16: iconst_2
      17: anewarray     #12                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_1
      23: aastore
      24: dup
      25: iconst_1
      26: aload_2
      27: invokevirtual #57                 // Method io/vertx/up/exception/zero/EtcdNetworkException.getMessage:()Ljava/lang/String;
      30: aastore
      31: invokestatic  #58                 // Method io/vertx/up/fn/Fn.outUp:(ZLio/vertx/up/log/Annal;Ljava/lang/Class;[Ljava/lang/Object;)V
      34: return
    Exception table:
       from    to  target type
           0     5     8   Class io/vertx/up/exception/zero/EtcdNetworkException

  public void registryRpc(io.vertx.core.ServidorOptions, io.vertx.up.eon.em.Etat);
    Code:
       0: ldc           #43                 // String /zero/{0}/{1}/services/{2}:{3}:{4}
       2: iconst_5
       3: anewarray     #12                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
      12: invokevirtual #13                 // Method io/vertx/tp/plugin/etcd/center/EtcdData.getApplication:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: getstatic     #59                 // Field io/vertx/up/eon/em/EtcdPath.IPC:Lio/vertx/up/eon/em/EtcdPath;
      21: invokevirtual #14                 // Method io/vertx/up/eon/em/EtcdPath.toString:()Ljava/lang/String;
      24: invokevirtual #15                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      27: aastore
      28: dup
      29: iconst_2
      30: aload_1
      31: invokevirtual #60                 // Method io/vertx/core/ServidorOptions.getName:()Ljava/lang/String;
      34: aastore
      35: dup
      36: iconst_3
      37: invokestatic  #51                 // Method io/vertx/up/util/Ut.netIPv4:()Ljava/lang/String;
      40: aastore
      41: dup
      42: iconst_4
      43: aload_1
      44: invokevirtual #61                 // Method io/vertx/core/ServidorOptions.getPort:()Ljava/lang/Integer;
      47: invokestatic  #44                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      50: aastore
      51: invokestatic  #16                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      54: astore_3
      55: aload_0
      56: getfield      #5                  // Field logger:Lio/vertx/up/log/Annal;
      59: ldc           #54                 // String ( Etcd Center ) The status {0} of service {1} has been registry to {2}
      61: iconst_3
      62: anewarray     #12                 // class java/lang/Object
      65: dup
      66: iconst_0
      67: aload_1
      68: invokevirtual #60                 // Method io/vertx/core/ServidorOptions.getName:()Ljava/lang/String;
      71: aastore
      72: dup
      73: iconst_1
      74: aload_2
      75: aastore
      76: dup
      77: iconst_2
      78: aload_3
      79: aastore
      80: invokeinterface #46,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      85: aload_0
      86: getfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
      89: aload_3
      90: aload_2
      91: iconst_0
      92: invokevirtual #49                 // Method io/vertx/tp/plugin/etcd/center/EtcdData.write:(Ljava/lang/String;Ljava/lang/Object;I)Lio/vertx/core/json/JsonObject;
      95: pop
      96: return

  public void registryIpcs(io.vertx.core.ServidorOptions, java.util.Set<java.lang.String>);
    Code:
       0: ldc           #11                 // String /zero/{0}/{1}/routes/{2}
       2: iconst_3
       3: anewarray     #12                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
      12: invokevirtual #13                 // Method io/vertx/tp/plugin/etcd/center/EtcdData.getApplication:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: getstatic     #59                 // Field io/vertx/up/eon/em/EtcdPath.IPC:Lio/vertx/up/eon/em/EtcdPath;
      21: invokevirtual #14                 // Method io/vertx/up/eon/em/EtcdPath.toString:()Ljava/lang/String;
      24: invokevirtual #15                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      27: aastore
      28: dup
      29: iconst_2
      30: ldc           #62                 // String {0}:{1}:{2}
      32: iconst_3
      33: anewarray     #12                 // class java/lang/Object
      36: dup
      37: iconst_0
      38: aload_1
      39: invokevirtual #60                 // Method io/vertx/core/ServidorOptions.getName:()Ljava/lang/String;
      42: aastore
      43: dup
      44: iconst_1
      45: invokestatic  #51                 // Method io/vertx/up/util/Ut.netIPv4:()Ljava/lang/String;
      48: aastore
      49: dup
      50: iconst_2
      51: aload_1
      52: invokevirtual #61                 // Method io/vertx/core/ServidorOptions.getPort:()Ljava/lang/Integer;
      55: invokestatic  #44                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      58: aastore
      59: invokestatic  #16                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      62: aastore
      63: invokestatic  #16                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      66: astore_3
      67: invokestatic  #51                 // Method io/vertx/up/util/Ut.netIPv4:()Ljava/lang/String;
      70: astore        4
      72: ldc           #63                 // String grpc://{0}:{1}
      74: iconst_2
      75: anewarray     #12                 // class java/lang/Object
      78: dup
      79: iconst_0
      80: aload         4
      82: aastore
      83: dup
      84: iconst_1
      85: aload_1
      86: invokevirtual #61                 // Method io/vertx/core/ServidorOptions.getPort:()Ljava/lang/Integer;
      89: invokestatic  #44                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      92: aastore
      93: invokestatic  #16                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      96: astore        5
      98: new           #64                 // class java/lang/StringBuilder
     101: dup
     102: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
     105: astore        6
     107: aload_2
     108: invokeinterface #66,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     113: astore        7
     115: aload         7
     117: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     122: ifeq          153
     125: aload         7
     127: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     132: checkcast     #69                 // class java/lang/String
     135: astore        8
     137: aload         6
     139: ldc           #70                 // String \n\t[ Up Rpc √ ] \t
     141: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload         8
     146: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: pop
     150: goto          115
     153: aload_0
     154: getfield      #5                  // Field logger:Lio/vertx/up/log/Annal;
     157: ldc           #72                 // String ( Etcd Catalog ) The following routes has been push to:\n\t[ Up Rpc   ] <Application Name> = \"{0}\",\n\t[ Up Rpc   ] Configuration Rpc Point = {1}, \n\t[ Up Rpc   ] Service Name = {2},\n\t[ Up Rpc   ] Ipc Channel = {3}\n\t[ Up Rpc   ] Ipc Address = {4}\n\t[ Up Rpc   ] √ Successfully to registered IPCs, wait for community......SUCCESS √
     159: iconst_5
     160: anewarray     #12                 // class java/lang/Object
     163: dup
     164: iconst_0
     165: aload_0
     166: getfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
     169: invokevirtual #13                 // Method io/vertx/tp/plugin/etcd/center/EtcdData.getApplication:()Ljava/lang/String;
     172: aastore
     173: dup
     174: iconst_1
     175: aload_3
     176: aastore
     177: dup
     178: iconst_2
     179: aload_1
     180: invokevirtual #60                 // Method io/vertx/core/ServidorOptions.getName:()Ljava/lang/String;
     183: aastore
     184: dup
     185: iconst_3
     186: aload         5
     188: aastore
     189: dup
     190: iconst_4
     191: aload         6
     193: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     196: aastore
     197: invokeinterface #46,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     202: new           #24                 // class io/vertx/core/json/JsonArray
     205: dup
     206: invokespecial #74                 // Method io/vertx/core/json/JsonArray."<init>":()V
     209: astore        7
     211: aload_2
     212: invokestatic  #32                 // Method io/reactivex/Observable.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;
     215: aload         7
     217: dup
     218: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     221: pop
     222: invokedynamic #75,  0             // InvokeDynamic #6:accept:(Lio/vertx/core/json/JsonArray;)Lio/reactivex/functions/Consumer;
     227: invokevirtual #41                 // Method io/reactivex/Observable.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;
     230: invokeinterface #42,  1           // InterfaceMethod io/reactivex/disposables/Disposable.dispose:()V
     235: aload_0
     236: getfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
     239: aload_3
     240: aload         7
     242: iconst_0
     243: invokevirtual #49                 // Method io/vertx/tp/plugin/etcd/center/EtcdData.write:(Ljava/lang/String;Ljava/lang/Object;I)Lio/vertx/core/json/JsonObject;
     246: pop
     247: return

  public void registryRoute(java.lang.String, io.vertx.core.http.HttpServerOptions, java.util.Set<java.lang.String>);
    Code:
       0: ldc           #11                 // String /zero/{0}/{1}/routes/{2}
       2: iconst_3
       3: anewarray     #12                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
      12: invokevirtual #13                 // Method io/vertx/tp/plugin/etcd/center/EtcdData.getApplication:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: getstatic     #50                 // Field io/vertx/up/eon/em/EtcdPath.ENDPOINT:Lio/vertx/up/eon/em/EtcdPath;
      21: invokevirtual #14                 // Method io/vertx/up/eon/em/EtcdPath.toString:()Ljava/lang/String;
      24: invokevirtual #15                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      27: aastore
      28: dup
      29: iconst_2
      30: ldc           #62                 // String {0}:{1}:{2}
      32: iconst_3
      33: anewarray     #12                 // class java/lang/Object
      36: dup
      37: iconst_0
      38: aload_1
      39: aastore
      40: dup
      41: iconst_1
      42: invokestatic  #51                 // Method io/vertx/up/util/Ut.netIPv4:()Ljava/lang/String;
      45: aastore
      46: dup
      47: iconst_2
      48: aload_2
      49: invokevirtual #52                 // Method io/vertx/core/http/HttpServerOptions.getPort:()I
      52: invokestatic  #53                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      55: aastore
      56: invokestatic  #16                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      59: aastore
      60: invokestatic  #16                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      63: astore        4
      65: invokestatic  #51                 // Method io/vertx/up/util/Ut.netIPv4:()Ljava/lang/String;
      68: astore        5
      70: ldc           #76                 // String http://{0}:{1}
      72: iconst_2
      73: anewarray     #12                 // class java/lang/Object
      76: dup
      77: iconst_0
      78: aload         5
      80: aastore
      81: dup
      82: iconst_1
      83: aload_2
      84: invokevirtual #52                 // Method io/vertx/core/http/HttpServerOptions.getPort:()I
      87: invokestatic  #53                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      90: aastore
      91: invokestatic  #16                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      94: astore        6
      96: new           #77                 // class java/util/TreeSet
      99: dup
     100: invokespecial #78                 // Method java/util/TreeSet."<init>":()V
     103: astore        7
     105: aload_3
     106: invokeinterface #79,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
     111: invokedynamic #80,  0             // InvokeDynamic #7:test:()Ljava/util/function/Predicate;
     116: invokeinterface #81,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     121: aload         7
     123: dup
     124: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     127: pop
     128: invokedynamic #82,  0             // InvokeDynamic #8:accept:(Ljava/util/Set;)Ljava/util/function/Consumer;
     133: invokeinterface #83,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
     138: aload         7
     140: invokestatic  #84                 // InterfaceMethod io/vertx/up/extension/pointer/PluginExtension$ZeroRegistry.registryRoute:(Ljava/util/Set;)V
     143: new           #64                 // class java/lang/StringBuilder
     146: dup
     147: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
     150: astore        8
     152: aload         7
     154: invokeinterface #66,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     159: astore        9
     161: aload         9
     163: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     168: ifeq          199
     171: aload         9
     173: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     178: checkcast     #69                 // class java/lang/String
     181: astore        10
     183: aload         8
     185: ldc           #85                 // String \n\t[ Up Micro ] \t
     187: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: aload         10
     192: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: pop
     196: goto          161
     199: aload_0
     200: getfield      #5                  // Field logger:Lio/vertx/up/log/Annal;
     203: ldc           #86                 // String ( Etcd Catalog ) The following routes has been push to:\n\t[ Up Micro ] <Application Name> = \"{0}\",\n\t[ Up Micro ] Configuration Path = {1}, \n\t[ Up Micro ] Service Name = {2},\n\t[ Up Micro ] EndPoint = {3}\n\t[ Up Micro ] Route Uris = {4}\n\t[ Up Micro ] √ Successfully to registered Routes, wait for discovery......SUCCESS √
     205: iconst_5
     206: anewarray     #12                 // class java/lang/Object
     209: dup
     210: iconst_0
     211: aload_0
     212: getfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
     215: invokevirtual #13                 // Method io/vertx/tp/plugin/etcd/center/EtcdData.getApplication:()Ljava/lang/String;
     218: aastore
     219: dup
     220: iconst_1
     221: aload         4
     223: aastore
     224: dup
     225: iconst_2
     226: aload_1
     227: aastore
     228: dup
     229: iconst_3
     230: aload         6
     232: aastore
     233: dup
     234: iconst_4
     235: aload         8
     237: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     240: aastore
     241: invokeinterface #46,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     246: new           #24                 // class io/vertx/core/json/JsonArray
     249: dup
     250: invokespecial #74                 // Method io/vertx/core/json/JsonArray."<init>":()V
     253: astore        9
     255: aload         7
     257: invokestatic  #32                 // Method io/reactivex/Observable.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;
     260: aload         9
     262: dup
     263: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     266: pop
     267: invokedynamic #75,  0             // InvokeDynamic #6:accept:(Lio/vertx/core/json/JsonArray;)Lio/reactivex/functions/Consumer;
     272: invokevirtual #41                 // Method io/reactivex/Observable.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;
     275: invokeinterface #42,  1           // InterfaceMethod io/reactivex/disposables/Disposable.dispose:()V
     280: aload_0
     281: getfield      #3                  // Field etcd:Lio/vertx/tp/plugin/etcd/center/EtcdData;
     284: aload         4
     286: aload         9
     288: iconst_0
     289: invokevirtual #49                 // Method io/vertx/tp/plugin/etcd/center/EtcdData.write:(Ljava/lang/String;Ljava/lang/Object;I)Lio/vertx/core/json/JsonObject;
     292: pop
     293: return

  private static boolean lambda$registryRoute$3(java.lang.String);
    Code:
       0: getstatic     #87                 // Field DEFAULTS:Ljava/util/Set;
       3: aload_0
       4: invokeinterface #88,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private static boolean lambda$getServices$2(java.util.Map$Entry) throws java.lang.Exception;
    Code:
       0: getstatic     #89                 // Field io/vertx/up/eon/em/Etat.RUNNING:Lio/vertx/up/eon/em/Etat;
       3: ldc           #90                 // class io/vertx/up/eon/em/Etat
       5: aload_0
       6: invokeinterface #91,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      11: checkcast     #69                 // class java/lang/String
      14: invokestatic  #92                 // Method io/vertx/up/util/Ut.toEnum:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
      17: if_acmpne     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private static boolean lambda$getServices$1(java.util.Map$Entry) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokeinterface #93,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       6: invokestatic  #94                 // Method java/util/Objects.nonNull:(Ljava/lang/Object;)Z
       9: ifeq          28
      12: aload_0
      13: invokeinterface #91,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      18: invokestatic  #94                 // Method java/util/Objects.nonNull:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  private static io.vertx.up.uca.micro.center.ZeroRegistry lambda$create$0(java.lang.Class);
    Code:
       0: new           #9                  // class io/vertx/up/uca/micro/center/ZeroRegistry
       3: dup
       4: aload_0
       5: invokespecial #95                 // Method "<init>":(Ljava/lang/Class;)V
       8: areturn

  static {};
    Code:
       0: new           #96                 // class io/vertx/up/uca/micro/center/ZeroRegistry$1
       3: dup
       4: invokespecial #97                 // Method io/vertx/up/uca/micro/center/ZeroRegistry$1."<init>":()V
       7: putstatic     #87                 // Field DEFAULTS:Ljava/util/Set;
      10: new           #98                 // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #99                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: putstatic     #6                  // Field REGISTRY_MAP:Ljava/util/concurrent/ConcurrentMap;
      20: return
}
