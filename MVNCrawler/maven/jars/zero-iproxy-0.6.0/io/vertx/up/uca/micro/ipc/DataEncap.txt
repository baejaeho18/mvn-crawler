Compiled from "DataEncap.java"
public class io.vertx.up.uca.micro.ipc.DataEncap {
  private static final io.vertx.up.log.Annal LOGGER;

  public io.vertx.up.uca.micro.ipc.DataEncap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void in(io.vertx.up.atom.rpc.IpcData, io.vertx.servicediscovery.Record);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpeq     39
       5: aload_0
       6: aload_1
       7: invokevirtual #2                  // Method io/vertx/servicediscovery/Record.getLocation:()Lio/vertx/core/json/JsonObject;
      10: ldc           #3                  // String host
      12: invokevirtual #4                  // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
      15: invokevirtual #5                  // Method io/vertx/up/atom/rpc/IpcData.setHost:(Ljava/lang/String;)V
      18: aload_0
      19: aload_1
      20: invokevirtual #2                  // Method io/vertx/servicediscovery/Record.getLocation:()Lio/vertx/core/json/JsonObject;
      23: ldc           #6                  // String port
      25: invokevirtual #7                  // Method io/vertx/core/json/JsonObject.getInteger:(Ljava/lang/String;)Ljava/lang/Integer;
      28: invokevirtual #8                  // Method io/vertx/up/atom/rpc/IpcData.setPort:(Ljava/lang/Integer;)V
      31: aload_0
      32: aload_1
      33: invokevirtual #9                  // Method io/vertx/servicediscovery/Record.getName:()Ljava/lang/String;
      36: invokevirtual #10                 // Method io/vertx/up/atom/rpc/IpcData.setName:(Ljava/lang/String;)V
      39: return

  public static void in(io.vertx.up.atom.rpc.IpcData, io.vertx.up.commune.Envelop);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpeq     125
       5: aload_1
       6: invokevirtual #11                 // Method io/vertx/up/commune/Envelop.user:()Lio/vertx/ext/auth/User;
       9: astore_2
      10: new           #12                 // class io/vertx/core/json/JsonObject
      13: dup
      14: invokespecial #13                 // Method io/vertx/core/json/JsonObject."<init>":()V
      17: astore_3
      18: aconst_null
      19: aload_2
      20: if_acmpeq     36
      23: aload_3
      24: ldc           #14                 // String user
      26: aload_2
      27: invokeinterface #15,  1           // InterfaceMethod io/vertx/ext/auth/User.principal:()Lio/vertx/core/json/JsonObject;
      32: invokevirtual #16                 // Method io/vertx/core/json/JsonObject.put:(Ljava/lang/String;Lio/vertx/core/json/JsonObject;)Lio/vertx/core/json/JsonObject;
      35: pop
      36: aload_1
      37: invokevirtual #17                 // Method io/vertx/up/commune/Envelop.headers:()Lio/vertx/core/MultiMap;
      40: astore        4
      42: aconst_null
      43: aload         4
      45: if_acmpeq     80
      48: new           #12                 // class io/vertx/core/json/JsonObject
      51: dup
      52: invokespecial #13                 // Method io/vertx/core/json/JsonObject."<init>":()V
      55: astore        5
      57: aload         4
      59: aload         5
      61: invokedynamic #18,  0             // InvokeDynamic #0:accept:(Lio/vertx/core/json/JsonObject;)Ljava/util/function/Consumer;
      66: invokeinterface #19,  2           // InterfaceMethod io/vertx/core/MultiMap.forEach:(Ljava/util/function/Consumer;)V
      71: aload_3
      72: ldc           #20                 // String header
      74: aload         5
      76: invokevirtual #16                 // Method io/vertx/core/json/JsonObject.put:(Ljava/lang/String;Lio/vertx/core/json/JsonObject;)Lio/vertx/core/json/JsonObject;
      79: pop
      80: aload_1
      81: invokevirtual #21                 // Method io/vertx/up/commune/Envelop.data:()Ljava/lang/Object;
      84: astore        5
      86: aload_3
      87: ldc           #22                 // String data
      89: aload         5
      91: invokevirtual #23                 // Method io/vertx/core/json/JsonObject.put:(Ljava/lang/String;Ljava/lang/Object;)Lio/vertx/core/json/JsonObject;
      94: pop
      95: aload_3
      96: ldc           #24                 // String config
      98: aload_0
      99: invokevirtual #25                 // Method io/vertx/up/atom/rpc/IpcData.getConfig:()Lio/vertx/core/json/JsonObject;
     102: invokevirtual #16                 // Method io/vertx/core/json/JsonObject.put:(Ljava/lang/String;Lio/vertx/core/json/JsonObject;)Lio/vertx/core/json/JsonObject;
     105: pop
     106: aload_3
     107: ldc           #26                 // String address
     109: aload_0
     110: invokevirtual #27                 // Method io/vertx/up/atom/rpc/IpcData.getAddress:()Ljava/lang/String;
     113: invokevirtual #28                 // Method io/vertx/core/json/JsonObject.put:(Ljava/lang/String;Ljava/lang/String;)Lio/vertx/core/json/JsonObject;
     116: pop
     117: aload_0
     118: aload_3
     119: invokevirtual #29                 // Method io/vertx/core/json/JsonObject.toBuffer:()Lio/vertx/core/buffer/Buffer;
     122: invokevirtual #30                 // Method io/vertx/up/atom/rpc/IpcData.setData:(Lio/vertx/core/buffer/Buffer;)V
     125: return

  public static io.vertx.tp.ipc.eon.IpcRequest in(io.vertx.up.atom.rpc.IpcData);
    Code:
       0: invokestatic  #31                 // Method io/vertx/tp/ipc/eon/IpcEnvelop.newBuilder:()Lio/vertx/tp/ipc/eon/IpcEnvelop$Builder;
       3: aload_0
       4: invokevirtual #32                 // Method io/vertx/up/atom/rpc/IpcData.getData:()Lio/vertx/core/buffer/Buffer;
       7: invokeinterface #33,  1           // InterfaceMethod io/vertx/core/buffer/Buffer.toString:()Ljava/lang/String;
      12: invokevirtual #34                 // Method io/vertx/tp/ipc/eon/IpcEnvelop$Builder.setBody:(Ljava/lang/String;)Lio/vertx/tp/ipc/eon/IpcEnvelop$Builder;
      15: getstatic     #35                 // Field io/vertx/tp/ipc/eon/em/Format.JSON:Lio/vertx/tp/ipc/eon/em/Format;
      18: invokevirtual #36                 // Method io/vertx/tp/ipc/eon/IpcEnvelop$Builder.setType:(Lio/vertx/tp/ipc/eon/em/Format;)Lio/vertx/tp/ipc/eon/IpcEnvelop$Builder;
      21: invokevirtual #37                 // Method io/vertx/tp/ipc/eon/IpcEnvelop$Builder.build:()Lio/vertx/tp/ipc/eon/IpcEnvelop;
      24: astore_1
      25: invokestatic  #38                 // Method io/vertx/tp/ipc/eon/IpcRequest.newBuilder:()Lio/vertx/tp/ipc/eon/IpcRequest$Builder;
      28: aload_1
      29: invokevirtual #39                 // Method io/vertx/tp/ipc/eon/IpcRequest$Builder.setEnvelop:(Lio/vertx/tp/ipc/eon/IpcEnvelop;)Lio/vertx/tp/ipc/eon/IpcRequest$Builder;
      32: invokevirtual #40                 // Method io/vertx/tp/ipc/eon/IpcRequest$Builder.build:()Lio/vertx/tp/ipc/eon/IpcRequest;
      35: areturn

  public static io.vertx.up.atom.rpc.IpcData consume(io.vertx.tp.ipc.eon.IpcRequest, io.vertx.up.eon.em.IpcType);
    Code:
       0: new           #41                 // class io/vertx/up/atom/rpc/IpcData
       3: dup
       4: invokespecial #42                 // Method io/vertx/up/atom/rpc/IpcData."<init>":()V
       7: astore_2
       8: aload_0
       9: invokevirtual #43                 // Method io/vertx/tp/ipc/eon/IpcRequest.getEnvelop:()Lio/vertx/tp/ipc/eon/IpcEnvelop;
      12: astore_3
      13: aload_3
      14: invokevirtual #44                 // Method io/vertx/tp/ipc/eon/IpcEnvelop.getBody:()Ljava/lang/String;
      17: astore        4
      19: new           #12                 // class io/vertx/core/json/JsonObject
      22: dup
      23: aload         4
      25: invokespecial #45                 // Method io/vertx/core/json/JsonObject."<init>":(Ljava/lang/String;)V
      28: astore        5
      30: aload         5
      32: ldc           #26                 // String address
      34: invokevirtual #46                 // Method io/vertx/core/json/JsonObject.containsKey:(Ljava/lang/String;)Z
      37: ifeq          59
      40: aload_2
      41: aload         5
      43: ldc           #26                 // String address
      45: invokevirtual #4                  // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
      48: invokevirtual #47                 // Method io/vertx/up/atom/rpc/IpcData.setAddress:(Ljava/lang/String;)V
      51: aload         5
      53: ldc           #26                 // String address
      55: invokevirtual #48                 // Method io/vertx/core/json/JsonObject.remove:(Ljava/lang/String;)Ljava/lang/Object;
      58: pop
      59: aload_2
      60: aload         4
      62: invokestatic  #49                 // InterfaceMethod io/vertx/core/buffer/Buffer.buffer:(Ljava/lang/String;)Lio/vertx/core/buffer/Buffer;
      65: invokevirtual #30                 // Method io/vertx/up/atom/rpc/IpcData.setData:(Lio/vertx/core/buffer/Buffer;)V
      68: aload_2
      69: aload_1
      70: invokevirtual #50                 // Method io/vertx/up/atom/rpc/IpcData.setType:(Lio/vertx/up/eon/em/IpcType;)V
      73: aload_2
      74: areturn

  public static io.vertx.up.commune.Envelop consume(io.vertx.up.atom.rpc.IpcData);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method io/vertx/up/atom/rpc/IpcData.getData:()Lio/vertx/core/buffer/Buffer;
       4: invokeinterface #51,  1           // InterfaceMethod io/vertx/core/buffer/Buffer.toJsonObject:()Lio/vertx/core/json/JsonObject;
       9: astore_1
      10: aload_1
      11: invokestatic  #52                 // Method build:(Lio/vertx/core/json/JsonObject;)Lio/vertx/up/commune/Envelop;
      14: areturn

  public static io.vertx.tp.ipc.eon.IpcResponse out(io.vertx.up.atom.rpc.IpcData);
    Code:
       0: invokestatic  #31                 // Method io/vertx/tp/ipc/eon/IpcEnvelop.newBuilder:()Lio/vertx/tp/ipc/eon/IpcEnvelop$Builder;
       3: aload_0
       4: invokevirtual #32                 // Method io/vertx/up/atom/rpc/IpcData.getData:()Lio/vertx/core/buffer/Buffer;
       7: invokeinterface #33,  1           // InterfaceMethod io/vertx/core/buffer/Buffer.toString:()Ljava/lang/String;
      12: invokevirtual #34                 // Method io/vertx/tp/ipc/eon/IpcEnvelop$Builder.setBody:(Ljava/lang/String;)Lio/vertx/tp/ipc/eon/IpcEnvelop$Builder;
      15: getstatic     #35                 // Field io/vertx/tp/ipc/eon/em/Format.JSON:Lio/vertx/tp/ipc/eon/em/Format;
      18: invokevirtual #36                 // Method io/vertx/tp/ipc/eon/IpcEnvelop$Builder.setType:(Lio/vertx/tp/ipc/eon/em/Format;)Lio/vertx/tp/ipc/eon/IpcEnvelop$Builder;
      21: invokevirtual #37                 // Method io/vertx/tp/ipc/eon/IpcEnvelop$Builder.build:()Lio/vertx/tp/ipc/eon/IpcEnvelop;
      24: astore_1
      25: invokestatic  #53                 // Method io/vertx/tp/ipc/eon/IpcResponse.newBuilder:()Lio/vertx/tp/ipc/eon/IpcResponse$Builder;
      28: aload_1
      29: invokevirtual #54                 // Method io/vertx/tp/ipc/eon/IpcResponse$Builder.setEnvelop:(Lio/vertx/tp/ipc/eon/IpcEnvelop;)Lio/vertx/tp/ipc/eon/IpcResponse$Builder;
      32: invokevirtual #55                 // Method io/vertx/tp/ipc/eon/IpcResponse$Builder.build:()Lio/vertx/tp/ipc/eon/IpcResponse;
      35: areturn

  private static io.vertx.up.commune.Envelop build(io.vertx.core.json.JsonObject);
    Code:
       0: invokestatic  #56                 // Method io/vertx/up/commune/Envelop.ok:()Lio/vertx/up/commune/Envelop;
       3: astore_1
       4: aconst_null
       5: aload_0
       6: if_acmpeq     145
       9: aload_0
      10: ldc           #22                 // String data
      12: invokevirtual #46                 // Method io/vertx/core/json/JsonObject.containsKey:(Ljava/lang/String;)Z
      15: ifeq          28
      18: aload_0
      19: ldc           #22                 // String data
      21: invokevirtual #57                 // Method io/vertx/core/json/JsonObject.getValue:(Ljava/lang/String;)Ljava/lang/Object;
      24: invokestatic  #58                 // Method io/vertx/up/commune/Envelop.success:(Ljava/lang/Object;)Lio/vertx/up/commune/Envelop;
      27: astore_1
      28: aconst_null
      29: aload_0
      30: ldc           #20                 // String header
      32: invokevirtual #57                 // Method io/vertx/core/json/JsonObject.getValue:(Ljava/lang/String;)Ljava/lang/Object;
      35: if_acmpeq     118
      38: invokestatic  #59                 // InterfaceMethod io/vertx/core/MultiMap.caseInsensitiveMultiMap:()Lio/vertx/core/MultiMap;
      41: astore_2
      42: aload_0
      43: ldc           #20                 // String header
      45: invokevirtual #60                 // Method io/vertx/core/json/JsonObject.getJsonObject:(Ljava/lang/String;)Lio/vertx/core/json/JsonObject;
      48: astore_3
      49: aload_3
      50: invokevirtual #61                 // Method io/vertx/core/json/JsonObject.fieldNames:()Ljava/util/Set;
      53: invokeinterface #62,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      58: astore        4
      60: aload         4
      62: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      67: ifeq          113
      70: aload         4
      72: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      77: checkcast     #65                 // class java/lang/String
      80: astore        5
      82: aload_3
      83: aload         5
      85: invokevirtual #57                 // Method io/vertx/core/json/JsonObject.getValue:(Ljava/lang/String;)Ljava/lang/Object;
      88: astore        6
      90: aconst_null
      91: aload         6
      93: if_acmpeq     110
      96: aload_2
      97: aload         5
      99: aload         6
     101: invokevirtual #66                 // Method java/lang/Object.toString:()Ljava/lang/String;
     104: invokeinterface #67,  3           // InterfaceMethod io/vertx/core/MultiMap.set:(Ljava/lang/String;Ljava/lang/String;)Lio/vertx/core/MultiMap;
     109: pop
     110: goto          60
     113: aload_1
     114: aload_2
     115: invokevirtual #68                 // Method io/vertx/up/commune/Envelop.headers:(Lio/vertx/core/MultiMap;)V
     118: aconst_null
     119: aload_0
     120: ldc           #14                 // String user
     122: invokevirtual #57                 // Method io/vertx/core/json/JsonObject.getValue:(Ljava/lang/String;)Ljava/lang/Object;
     125: if_acmpeq     145
     128: aload_1
     129: new           #69                 // class io/vertx/up/uca/container/VirtualUser
     132: dup
     133: aload_0
     134: ldc           #14                 // String user
     136: invokevirtual #60                 // Method io/vertx/core/json/JsonObject.getJsonObject:(Ljava/lang/String;)Lio/vertx/core/json/JsonObject;
     139: invokespecial #70                 // Method io/vertx/up/uca/container/VirtualUser."<init>":(Lio/vertx/core/json/JsonObject;)V
     142: invokevirtual #71                 // Method io/vertx/up/commune/Envelop.user:(Lio/vertx/ext/auth/User;)V
     145: aload_1
     146: areturn

  public static io.vertx.up.commune.Envelop out(io.vertx.tp.ipc.eon.IpcResponse);
    Code:
       0: aload_0
       1: invokestatic  #72                 // Method outJson:(Lio/vertx/tp/ipc/eon/IpcResponse;)Lio/vertx/core/json/JsonObject;
       4: invokestatic  #52                 // Method build:(Lio/vertx/core/json/JsonObject;)Lio/vertx/up/commune/Envelop;
       7: areturn

  public static io.vertx.core.json.JsonObject outJson(io.vertx.tp.ipc.eon.IpcResponse);
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method io/vertx/tp/ipc/eon/IpcResponse.getEnvelop:()Lio/vertx/tp/ipc/eon/IpcEnvelop;
       4: invokevirtual #44                 // Method io/vertx/tp/ipc/eon/IpcEnvelop.getBody:()Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: invokestatic  #74                 // Method io/vertx/up/util/Ut.notNil:(Ljava/lang/String;)Z
      12: getstatic     #75                 // Field LOGGER:Lio/vertx/up/log/Annal;
      15: aload_1
      16: invokedynamic #76,  0             // InvokeDynamic #1:get:(Ljava/lang/String;)Ljava/util/function/Supplier;
      21: invokestatic  #77                 // Method io/vertx/up/fn/Fn.getSemi:(ZLio/vertx/up/log/Annal;Ljava/util/function/Supplier;)Ljava/lang/Object;
      24: checkcast     #12                 // class io/vertx/core/json/JsonObject
      27: areturn

  private static io.vertx.core.json.JsonObject lambda$outJson$1(java.lang.String);
    Code:
       0: new           #12                 // class io/vertx/core/json/JsonObject
       3: dup
       4: aload_0
       5: invokespecial #45                 // Method io/vertx/core/json/JsonObject."<init>":(Ljava/lang/String;)V
       8: areturn

  private static void lambda$in$0(io.vertx.core.json.JsonObject, java.util.Map$Entry);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #78,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       7: checkcast     #65                 // class java/lang/String
      10: aload_1
      11: invokeinterface #79,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      16: checkcast     #65                 // class java/lang/String
      19: invokevirtual #28                 // Method io/vertx/core/json/JsonObject.put:(Ljava/lang/String;Ljava/lang/String;)Lio/vertx/core/json/JsonObject;
      22: pop
      23: return

  static {};
    Code:
       0: ldc           #80                 // class io/vertx/up/uca/micro/ipc/DataEncap
       2: invokestatic  #81                 // InterfaceMethod io/vertx/up/log/Annal.get:(Ljava/lang/Class;)Lio/vertx/up/log/Annal;
       5: putstatic     #75                 // Field LOGGER:Lio/vertx/up/log/Annal;
       8: return
}
