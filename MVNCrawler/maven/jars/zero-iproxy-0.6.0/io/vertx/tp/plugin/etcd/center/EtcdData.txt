Compiled from "EtcdData.java"
public class io.vertx.tp.plugin.etcd.center.EtcdData {
  private static final io.vertx.up.log.Annal LOGGER;

  private static final io.vertx.up.uca.yaml.Node<io.vertx.core.json.JsonObject> NODE;

  private static final java.util.concurrent.ConcurrentMap<java.lang.Class<?>, io.vertx.tp.plugin.etcd.center.EtcdData> POOL;

  private static final java.lang.String KEY;

  private static final java.lang.String MICRO;

  private static final java.lang.String NODES;

  private static final java.lang.String TIMEOUT;

  private static final java.lang.String PORT;

  private static final java.lang.String HOST;

  private final transient io.vertx.core.json.JsonArray config;

  private final transient mousio.etcd4j.EtcdClient client;

  private final transient java.lang.Class<?> clazz;

  private transient long timeout;

  private transient java.lang.String application;

  private io.vertx.tp.plugin.etcd.center.EtcdData(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/vertx/core/json/JsonArray
       8: dup
       9: invokespecial #3                  // Method io/vertx/core/json/JsonArray."<init>":()V
      12: putfield      #4                  // Field config:Lio/vertx/core/json/JsonArray;
      15: aload_0
      16: ldc2_w        #5                  // long -1l
      19: putfield      #7                  // Field timeout:J
      22: aload_0
      23: ldc           #9                  // String
      25: putfield      #10                 // Field application:Ljava/lang/String;
      28: aload_0
      29: aload_1
      30: putfield      #11                 // Field clazz:Ljava/lang/Class;
      33: aload_1
      34: invokestatic  #12                 // InterfaceMethod io/vertx/up/log/Annal.get:(Ljava/lang/Class;)Lio/vertx/up/log/Annal;
      37: astore_2
      38: getstatic     #13                 // Field NODE:Lio/vertx/up/uca/yaml/Node;
      41: invokeinterface #14,  1           // InterfaceMethod io/vertx/up/uca/yaml/Node.read:()Ljava/lang/Object;
      46: checkcast     #15                 // class io/vertx/core/json/JsonObject
      49: astore_3
      50: aload_3
      51: ldc           #17                 // String etcd
      53: invokevirtual #18                 // Method io/vertx/core/json/JsonObject.containsKey:(Ljava/lang/String;)Z
      56: ifeq          194
      59: aload_3
      60: ldc           #17                 // String etcd
      62: invokevirtual #19                 // Method io/vertx/core/json/JsonObject.getJsonObject:(Ljava/lang/String;)Lio/vertx/core/json/JsonObject;
      65: astore        4
      67: aload         4
      69: invokedynamic #20,  0             // InvokeDynamic #0:execute:(Lio/vertx/core/json/JsonObject;)Lio/vertx/up/fn/ZeroActuator;
      74: getstatic     #21                 // Field LOGGER:Lio/vertx/up/log/Annal;
      77: invokestatic  #22                 // Method io/vertx/up/fn/Fn.outUp:(Lio/vertx/up/fn/ZeroActuator;Lio/vertx/up/log/Annal;)V
      80: aload         4
      82: ldc           #23                 // String timeout
      84: invokevirtual #18                 // Method io/vertx/core/json/JsonObject.containsKey:(Ljava/lang/String;)Z
      87: ifeq          104
      90: aload_0
      91: aload         4
      93: ldc           #23                 // String timeout
      95: invokevirtual #24                 // Method io/vertx/core/json/JsonObject.getLong:(Ljava/lang/String;)Ljava/lang/Long;
      98: invokevirtual #25                 // Method java/lang/Long.longValue:()J
     101: putfield      #7                  // Field timeout:J
     104: aload         4
     106: ldc           #26                 // String micro
     108: invokevirtual #18                 // Method io/vertx/core/json/JsonObject.containsKey:(Ljava/lang/String;)Z
     111: ifeq          125
     114: aload_0
     115: aload         4
     117: ldc           #26                 // String micro
     119: invokevirtual #27                 // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
     122: putfield      #10                 // Field application:Ljava/lang/String;
     125: aload         4
     127: ldc           #28                 // String nodes
     129: invokevirtual #18                 // Method io/vertx/core/json/JsonObject.containsKey:(Ljava/lang/String;)Z
     132: ifeq          150
     135: aload_0
     136: getfield      #4                  // Field config:Lio/vertx/core/json/JsonArray;
     139: aload         4
     141: ldc           #28                 // String nodes
     143: invokevirtual #29                 // Method io/vertx/core/json/JsonObject.getJsonArray:(Ljava/lang/String;)Lio/vertx/core/json/JsonArray;
     146: invokevirtual #30                 // Method io/vertx/core/json/JsonArray.addAll:(Lio/vertx/core/json/JsonArray;)Lio/vertx/core/json/JsonArray;
     149: pop
     150: getstatic     #21                 // Field LOGGER:Lio/vertx/up/log/Annal;
     153: ldc           #32                 // String ( Etcd Center: {0} ) Etcd Client timeout = \"{1}s\" with nodes = {2}
     155: iconst_3
     156: anewarray     #33                 // class java/lang/Object
     159: dup
     160: iconst_0
     161: aload_0
     162: getfield      #10                 // Field application:Ljava/lang/String;
     165: aastore
     166: dup
     167: iconst_1
     168: aload_0
     169: getfield      #7                  // Field timeout:J
     172: invokestatic  #34                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     175: aastore
     176: dup
     177: iconst_2
     178: aload_0
     179: getfield      #4                  // Field config:Lio/vertx/core/json/JsonArray;
     182: invokevirtual #35                 // Method io/vertx/core/json/JsonArray.size:()I
     185: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     188: aastore
     189: invokeinterface #37,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     194: aload_0
     195: getfield      #4                  // Field config:Lio/vertx/core/json/JsonArray;
     198: invokevirtual #38                 // Method io/vertx/core/json/JsonArray.isEmpty:()Z
     201: aload_2
     202: ldc           #39                 // class io/vertx/up/exception/zero/EtcdConfigEmptyException
     204: iconst_1
     205: anewarray     #33                 // class java/lang/Object
     208: dup
     209: iconst_0
     210: aload_0
     211: getfield      #11                 // Field clazz:Ljava/lang/Class;
     214: aastore
     215: invokestatic  #40                 // Method io/vertx/up/fn/Fn.outUp:(ZLio/vertx/up/log/Annal;Ljava/lang/Class;[Ljava/lang/Object;)V
     218: new           #41                 // class java/util/HashSet
     221: dup
     222: invokespecial #42                 // Method java/util/HashSet."<init>":()V
     225: astore        4
     227: new           #43                 // class java/util/concurrent/ConcurrentHashMap
     230: dup
     231: invokespecial #44                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
     234: astore        5
     236: aload_0
     237: getfield      #4                  // Field config:Lio/vertx/core/json/JsonArray;
     240: invokestatic  #45                 // Method io/reactivex/Observable.fromIterable:(Ljava/lang/Iterable;)Lio/reactivex/Observable;
     243: invokedynamic #46,  0             // InvokeDynamic #1:test:()Lio/reactivex/functions/Predicate;
     248: invokevirtual #47                 // Method io/reactivex/Observable.filter:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;
     251: invokedynamic #48,  0             // InvokeDynamic #2:apply:()Lio/reactivex/functions/Function;
     256: invokevirtual #49                 // Method io/reactivex/Observable.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;
     259: invokedynamic #50,  0             // InvokeDynamic #3:test:()Lio/reactivex/functions/Predicate;
     264: invokevirtual #47                 // Method io/reactivex/Observable.filter:(Lio/reactivex/functions/Predicate;)Lio/reactivex/Observable;
     267: aload         5
     269: invokedynamic #51,  0             // InvokeDynamic #4:apply:(Ljava/util/concurrent/ConcurrentMap;)Lio/reactivex/functions/Function;
     274: invokevirtual #49                 // Method io/reactivex/Observable.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;
     277: invokedynamic #52,  0             // InvokeDynamic #5:apply:()Lio/reactivex/functions/Function;
     282: invokevirtual #49                 // Method io/reactivex/Observable.map:(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;
     285: aload         4
     287: dup
     288: invokevirtual #53                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     291: pop
     292: invokedynamic #54,  0             // InvokeDynamic #6:accept:(Ljava/util/Set;)Lio/reactivex/functions/Consumer;
     297: invokevirtual #55                 // Method io/reactivex/Observable.subscribe:(Lio/reactivex/functions/Consumer;)Lio/reactivex/disposables/Disposable;
     300: invokeinterface #56,  1           // InterfaceMethod io/reactivex/disposables/Disposable.dispose:()V
     305: aload         5
     307: aload_0
     308: invokedynamic #57,  0             // InvokeDynamic #7:accept:(Lio/vertx/tp/plugin/etcd/center/EtcdData;)Ljava/util/function/BiConsumer;
     313: invokeinterface #58,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.forEach:(Ljava/util/function/BiConsumer;)V
     318: getstatic     #21                 // Field LOGGER:Lio/vertx/up/log/Annal;
     321: ldc           #59                 // String ( Etcd Center ) Etcd network checking has been passed successfully !
     323: iconst_0
     324: anewarray     #33                 // class java/lang/Object
     327: invokeinterface #37,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     332: aload_0
     333: new           #60                 // class mousio/etcd4j/EtcdClient
     336: dup
     337: aload         4
     339: iconst_0
     340: anewarray     #61                 // class java/net/URI
     343: invokeinterface #62,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     348: checkcast     #63                 // class "[Ljava/net/URI;"
     351: invokespecial #64                 // Method mousio/etcd4j/EtcdClient."<init>":([Ljava/net/URI;)V
     354: putfield      #65                 // Field client:Lmousio/etcd4j/EtcdClient;
     357: return

  public static io.vertx.tp.plugin.etcd.center.EtcdData create(java.lang.Class<?>);
    Code:
       0: invokestatic  #66                 // Method enabled:()Z
       3: ifeq          20
       6: getstatic     #21                 // Field LOGGER:Lio/vertx/up/log/Annal;
       9: ldc           #67                 // String ( Etcd Center ) Etcd configuration center is enabled !
      11: iconst_0
      12: anewarray     #33                 // class java/lang/Object
      15: invokeinterface #37,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      20: getstatic     #68                 // Field POOL:Ljava/util/concurrent/ConcurrentMap;
      23: aload_0
      24: aload_0
      25: invokedynamic #69,  0             // InvokeDynamic #8:get:(Ljava/lang/Class;)Ljava/util/function/Supplier;
      30: invokestatic  #70                 // Method io/vertx/up/fn/Fn.pool:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;
      33: checkcast     #16                 // class io/vertx/tp/plugin/etcd/center/EtcdData
      36: areturn

  public static boolean enabled();
    Code:
       0: getstatic     #13                 // Field NODE:Lio/vertx/up/uca/yaml/Node;
       3: invokeinterface #14,  1           // InterfaceMethod io/vertx/up/uca/yaml/Node.read:()Ljava/lang/Object;
       8: checkcast     #15                 // class io/vertx/core/json/JsonObject
      11: astore_0
      12: aconst_null
      13: aload_0
      14: if_acmpeq     30
      17: aload_0
      18: ldc           #17                 // String etcd
      20: invokevirtual #18                 // Method io/vertx/core/json/JsonObject.containsKey:(Ljava/lang/String;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public mousio.etcd4j.EtcdClient getClient();
    Code:
       0: aload_0
       1: getfield      #65                 // Field client:Lmousio/etcd4j/EtcdClient;
       4: areturn

  public io.vertx.core.json.JsonArray getConfig();
    Code:
       0: aload_0
       1: getfield      #4                  // Field config:Lio/vertx/core/json/JsonArray;
       4: areturn

  public java.lang.String getApplication();
    Code:
       0: aload_0
       1: getfield      #10                 // Field application:Ljava/lang/String;
       4: areturn

  public java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.String> readDir(java.lang.String, boolean);
    Code:
       0: new           #43                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #44                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: aload_0
       8: aload_1
       9: iload_2
      10: invokedynamic #71,  0             // InvokeDynamic #9:get:(Lio/vertx/tp/plugin/etcd/center/EtcdData;Ljava/lang/String;Z)Lio/vertx/up/fn/JvmSupplier;
      15: iconst_1
      16: anewarray     #33                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: aload_1
      22: aastore
      23: invokestatic  #72                 // Method io/vertx/up/fn/Fn.getJvm:(Ljava/lang/Object;Lio/vertx/up/fn/JvmSupplier;[Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #73                 // class java/util/concurrent/ConcurrentMap
      29: areturn

  private void ensurePath(java.lang.String);
    Code:
       0: iconst_0
       1: aload_1
       2: bipush        47
       4: invokevirtual #74                 // Method java/lang/String.lastIndexOf:(I)I
       7: if_icmpgt     71
      10: aload_1
      11: iconst_0
      12: aload_1
      13: bipush        47
      15: invokevirtual #74                 // Method java/lang/String.lastIndexOf:(I)I
      18: invokevirtual #75                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      21: astore_2
      22: aload_0
      23: getfield      #65                 // Field client:Lmousio/etcd4j/EtcdClient;
      26: aload_2
      27: invokevirtual #76                 // Method mousio/etcd4j/EtcdClient.getDir:(Ljava/lang/String;)Lmousio/etcd4j/requests/EtcdKeyGetRequest;
      30: invokevirtual #77                 // Method mousio/etcd4j/requests/EtcdKeyGetRequest.send:()Lmousio/etcd4j/promises/EtcdResponsePromise;
      33: invokevirtual #78                 // Method mousio/etcd4j/promises/EtcdResponsePromise.get:()Ljava/lang/Object;
      36: checkcast     #79                 // class mousio/etcd4j/responses/EtcdKeysResponse
      39: astore_3
      40: aconst_null
      41: aload_3
      42: if_acmpeq     62
      45: aload_0
      46: getfield      #65                 // Field client:Lmousio/etcd4j/EtcdClient;
      49: aload_1
      50: invokevirtual #80                 // Method mousio/etcd4j/EtcdClient.putDir:(Ljava/lang/String;)Lmousio/etcd4j/requests/EtcdKeyPutRequest;
      53: invokevirtual #81                 // Method mousio/etcd4j/requests/EtcdKeyPutRequest.send:()Lmousio/etcd4j/promises/EtcdResponsePromise;
      56: pop
      57: aload_0
      58: aload_2
      59: invokespecial #82                 // Method ensurePath:(Ljava/lang/String;)V
      62: goto          71
      65: astore_3
      66: aload_0
      67: aload_2
      68: invokespecial #82                 // Method ensurePath:(Ljava/lang/String;)V
      71: return
    Exception table:
       from    to  target type
          22    62    65   Class mousio/etcd4j/responses/EtcdException
          22    62    65   Class mousio/etcd4j/responses/EtcdAuthenticationException
          22    62    65   Class java/io/IOException
          22    62    65   Class java/util/concurrent/TimeoutException

  public java.lang.String readData(java.lang.String);
    Code:
       0: ldc           #9                  // String
       2: aload_0
       3: aload_1
       4: invokedynamic #87,  0             // InvokeDynamic #10:get:(Lio/vertx/tp/plugin/etcd/center/EtcdData;Ljava/lang/String;)Lio/vertx/up/fn/JvmSupplier;
       9: iconst_1
      10: anewarray     #33                 // class java/lang/Object
      13: dup
      14: iconst_0
      15: aload_1
      16: aastore
      17: invokestatic  #72                 // Method io/vertx/up/fn/Fn.getJvm:(Ljava/lang/Object;Lio/vertx/up/fn/JvmSupplier;[Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #88                 // class java/lang/String
      23: areturn

  private mousio.etcd4j.responses.EtcdKeysResponse$EtcdNode readNode(java.lang.String, java.util.function.Function<java.lang.String, mousio.etcd4j.requests.EtcdKeyGetRequest>);
    Code:
       0: aconst_null
       1: aload_0
       2: aload_2
       3: aload_1
       4: invokedynamic #89,  0             // InvokeDynamic #11:get:(Lio/vertx/tp/plugin/etcd/center/EtcdData;Ljava/util/function/Function;Ljava/lang/String;)Lio/vertx/up/fn/JvmSupplier;
       9: iconst_1
      10: anewarray     #33                 // class java/lang/Object
      13: dup
      14: iconst_0
      15: aload_1
      16: aastore
      17: invokestatic  #72                 // Method io/vertx/up/fn/Fn.getJvm:(Ljava/lang/Object;Lio/vertx/up/fn/JvmSupplier;[Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #90                 // class mousio/etcd4j/responses/EtcdKeysResponse$EtcdNode
      23: areturn

  public java.lang.String read(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #65                 // Field client:Lmousio/etcd4j/EtcdClient;
       6: dup
       7: invokevirtual #53                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: pop
      11: invokedynamic #91,  0             // InvokeDynamic #12:apply:(Lmousio/etcd4j/EtcdClient;)Ljava/util/function/Function;
      16: invokespecial #92                 // Method readNode:(Ljava/lang/String;Ljava/util/function/Function;)Lmousio/etcd4j/responses/EtcdKeysResponse$EtcdNode;
      19: astore_2
      20: aconst_null
      21: aload_2
      22: if_acmpne     29
      25: aconst_null
      26: goto          33
      29: aload_2
      30: invokevirtual #93                 // Method mousio/etcd4j/responses/EtcdKeysResponse$EtcdNode.getValue:()Ljava/lang/String;
      33: areturn

  public boolean delete(java.lang.String);
    Code:
       0: getstatic     #94                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
       3: aload_0
       4: aload_1
       5: invokedynamic #95,  0             // InvokeDynamic #13:get:(Lio/vertx/tp/plugin/etcd/center/EtcdData;Ljava/lang/String;)Lio/vertx/up/fn/JvmSupplier;
      10: iconst_1
      11: anewarray     #33                 // class java/lang/Object
      14: dup
      15: iconst_0
      16: aload_1
      17: aastore
      18: invokestatic  #72                 // Method io/vertx/up/fn/Fn.getJvm:(Ljava/lang/Object;Lio/vertx/up/fn/JvmSupplier;[Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #96                 // class java/lang/Boolean
      24: invokevirtual #97                 // Method java/lang/Boolean.booleanValue:()Z
      27: ireturn

  public <T> io.vertx.core.json.JsonObject write(java.lang.String, T, int);
    Code:
       0: aconst_null
       1: aload_0
       2: aload_1
       3: aload_2
       4: iload_3
       5: invokedynamic #98,  0             // InvokeDynamic #14:get:(Lio/vertx/tp/plugin/etcd/center/EtcdData;Ljava/lang/String;Ljava/lang/Object;I)Lio/vertx/up/fn/JvmSupplier;
      10: iconst_2
      11: anewarray     #33                 // class java/lang/Object
      14: dup
      15: iconst_0
      16: aload_1
      17: aastore
      18: dup
      19: iconst_1
      20: aload_2
      21: aastore
      22: invokestatic  #72                 // Method io/vertx/up/fn/Fn.getJvm:(Ljava/lang/Object;Lio/vertx/up/fn/JvmSupplier;[Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #15                 // class io/vertx/core/json/JsonObject
      28: areturn

  private io.vertx.core.json.JsonObject lambda$write$14(java.lang.String, java.lang.Object, int) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #65                 // Field client:Lmousio/etcd4j/EtcdClient;
       4: aload_1
       5: aload_2
       6: instanceof    #15                 // class io/vertx/core/json/JsonObject
       9: ifne          19
      12: aload_2
      13: instanceof    #2                  // class io/vertx/core/json/JsonArray
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: getstatic     #21                 // Field LOGGER:Lio/vertx/up/log/Annal;
      27: aload_2
      28: invokedynamic #99,  0             // InvokeDynamic #15:get:(Ljava/lang/Object;)Ljava/util/function/Supplier;
      33: aload_2
      34: dup
      35: invokevirtual #53                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      38: pop
      39: invokedynamic #100,  0            // InvokeDynamic #16:get:(Ljava/lang/Object;)Ljava/util/function/Supplier;
      44: invokestatic  #101                // Method io/vertx/up/fn/Fn.getSemi:(ZLio/vertx/up/log/Annal;Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/lang/Object;
      47: checkcast     #88                 // class java/lang/String
      50: invokevirtual #102                // Method mousio/etcd4j/EtcdClient.put:(Ljava/lang/String;Ljava/lang/String;)Lmousio/etcd4j/requests/EtcdKeyPutRequest;
      53: astore        4
      55: iconst_0
      56: iload_3
      57: if_icmpeq     70
      60: aload         4
      62: iload_3
      63: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      66: invokevirtual #104                // Method mousio/etcd4j/requests/EtcdKeyPutRequest.ttl:(Ljava/lang/Integer;)Lmousio/etcd4j/requests/EtcdKeyPutRequest;
      69: pop
      70: ldc2_w        #5                  // long -1l
      73: aload_0
      74: getfield      #7                  // Field timeout:J
      77: lcmp
      78: ifeq          94
      81: aload         4
      83: aload_0
      84: getfield      #7                  // Field timeout:J
      87: getstatic     #105                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      90: invokevirtual #106                // Method mousio/etcd4j/requests/EtcdKeyPutRequest.timeout:(JLjava/util/concurrent/TimeUnit;)Lmousio/etcd4j/requests/EtcdKeyPutRequest;
      93: pop
      94: aload         4
      96: invokevirtual #81                 // Method mousio/etcd4j/requests/EtcdKeyPutRequest.send:()Lmousio/etcd4j/promises/EtcdResponsePromise;
      99: astore        5
     101: aload         5
     103: invokevirtual #78                 // Method mousio/etcd4j/promises/EtcdResponsePromise.get:()Ljava/lang/Object;
     106: checkcast     #79                 // class mousio/etcd4j/responses/EtcdKeysResponse
     109: astore        6
     111: aload         6
     113: invokevirtual #107                // Method mousio/etcd4j/responses/EtcdKeysResponse.getNode:()Lmousio/etcd4j/responses/EtcdKeysResponse$EtcdNode;
     116: invokestatic  #108                // Method io/vertx/up/util/Ut.serializeJson:(Ljava/lang/Object;)Ljava/lang/Iterable;
     119: checkcast     #15                 // class io/vertx/core/json/JsonObject
     122: areturn

  private static java.lang.String lambda$null$13(java.lang.Object);
    Code:
       0: aload_0
       1: ldc           #109                // String encode
       3: iconst_0
       4: anewarray     #33                 // class java/lang/Object
       7: invokestatic  #110                // Method io/vertx/up/util/Ut.invoke:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #88                 // class java/lang/String
      13: areturn

  private java.lang.Boolean lambda$delete$12(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #65                 // Field client:Lmousio/etcd4j/EtcdClient;
       4: aload_1
       5: invokevirtual #111                // Method mousio/etcd4j/EtcdClient.delete:(Ljava/lang/String;)Lmousio/etcd4j/requests/EtcdKeyDeleteRequest;
       8: astore_2
       9: aload_2
      10: invokevirtual #112                // Method mousio/etcd4j/requests/EtcdKeyDeleteRequest.send:()Lmousio/etcd4j/promises/EtcdResponsePromise;
      13: astore_3
      14: aload_3
      15: invokevirtual #78                 // Method mousio/etcd4j/promises/EtcdResponsePromise.get:()Ljava/lang/Object;
      18: checkcast     #79                 // class mousio/etcd4j/responses/EtcdKeysResponse
      21: astore        4
      23: aconst_null
      24: aload         4
      26: invokevirtual #107                // Method mousio/etcd4j/responses/EtcdKeysResponse.getNode:()Lmousio/etcd4j/responses/EtcdKeysResponse$EtcdNode;
      29: if_acmpeq     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: invokestatic  #113                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      40: areturn

  private mousio.etcd4j.responses.EtcdKeysResponse$EtcdNode lambda$readNode$11(java.util.function.Function, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #114,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #115                // class mousio/etcd4j/requests/EtcdKeyGetRequest
      10: astore_3
      11: ldc2_w        #5                  // long -1l
      14: aload_0
      15: getfield      #7                  // Field timeout:J
      18: lcmp
      19: ifeq          34
      22: aload_3
      23: aload_0
      24: getfield      #7                  // Field timeout:J
      27: getstatic     #105                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      30: invokevirtual #116                // Method mousio/etcd4j/requests/EtcdKeyGetRequest.timeout:(JLjava/util/concurrent/TimeUnit;)Lmousio/etcd4j/requests/EtcdKeyGetRequest;
      33: pop
      34: aload_3
      35: invokevirtual #77                 // Method mousio/etcd4j/requests/EtcdKeyGetRequest.send:()Lmousio/etcd4j/promises/EtcdResponsePromise;
      38: astore        4
      40: aload         4
      42: invokevirtual #78                 // Method mousio/etcd4j/promises/EtcdResponsePromise.get:()Ljava/lang/Object;
      45: checkcast     #79                 // class mousio/etcd4j/responses/EtcdKeysResponse
      48: astore        5
      50: aload         5
      52: invokevirtual #107                // Method mousio/etcd4j/responses/EtcdKeysResponse.getNode:()Lmousio/etcd4j/responses/EtcdKeysResponse$EtcdNode;
      55: areturn

  private java.lang.String lambda$readData$10(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #65                 // Field client:Lmousio/etcd4j/EtcdClient;
       6: dup
       7: invokevirtual #53                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: pop
      11: invokedynamic #91,  0             // InvokeDynamic #12:apply:(Lmousio/etcd4j/EtcdClient;)Ljava/util/function/Function;
      16: invokespecial #92                 // Method readNode:(Ljava/lang/String;Ljava/util/function/Function;)Lmousio/etcd4j/responses/EtcdKeysResponse$EtcdNode;
      19: invokevirtual #93                 // Method mousio/etcd4j/responses/EtcdKeysResponse$EtcdNode.getValue:()Ljava/lang/String;
      22: areturn

  private java.util.concurrent.ConcurrentMap lambda$readDir$9(java.lang.String, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #65                 // Field client:Lmousio/etcd4j/EtcdClient;
       6: dup
       7: invokevirtual #53                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: pop
      11: invokedynamic #117,  0            // InvokeDynamic #17:apply:(Lmousio/etcd4j/EtcdClient;)Ljava/util/function/Function;
      16: invokespecial #92                 // Method readNode:(Ljava/lang/String;Ljava/util/function/Function;)Lmousio/etcd4j/responses/EtcdKeysResponse$EtcdNode;
      19: astore_3
      20: new           #43                 // class java/util/concurrent/ConcurrentHashMap
      23: dup
      24: invokespecial #44                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      27: aload_3
      28: iload_2
      29: invokedynamic #118,  0            // InvokeDynamic #18:get:(Lmousio/etcd4j/responses/EtcdKeysResponse$EtcdNode;Z)Lio/vertx/up/fn/JvmSupplier;
      34: iconst_1
      35: anewarray     #33                 // class java/lang/Object
      38: dup
      39: iconst_0
      40: aload_3
      41: aastore
      42: invokestatic  #72                 // Method io/vertx/up/fn/Fn.getJvm:(Ljava/lang/Object;Lio/vertx/up/fn/JvmSupplier;[Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #73                 // class java/util/concurrent/ConcurrentMap
      48: areturn

  private static java.util.concurrent.ConcurrentMap lambda$null$8(mousio.etcd4j.responses.EtcdKeysResponse$EtcdNode, boolean) throws java.lang.Exception;
    Code:
       0: new           #43                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #44                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: astore_2
       8: aload_0
       9: invokevirtual #119                // Method mousio/etcd4j/responses/EtcdKeysResponse$EtcdNode.getNodes:()Ljava/util/List;
      12: astore_3
      13: aload_3
      14: invokeinterface #120,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      19: astore        4
      21: aload         4
      23: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          87
      31: aload         4
      33: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #90                 // class mousio/etcd4j/responses/EtcdKeysResponse$EtcdNode
      41: astore        5
      43: aload         5
      45: invokevirtual #123                // Method mousio/etcd4j/responses/EtcdKeysResponse$EtcdNode.getKey:()Ljava/lang/String;
      48: astore        6
      50: iload_1
      51: ifeq          70
      54: aload         6
      56: aload         6
      58: ldc           #124                // String /
      60: invokevirtual #125                // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      63: iconst_1
      64: iadd
      65: invokevirtual #126                // Method java/lang/String.substring:(I)Ljava/lang/String;
      68: astore        6
      70: aload_2
      71: aload         6
      73: aload         5
      75: invokevirtual #93                 // Method mousio/etcd4j/responses/EtcdKeysResponse$EtcdNode.getValue:()Ljava/lang/String;
      78: invokeinterface #127,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: goto          21
      87: aload_2
      88: areturn

  private static io.vertx.tp.plugin.etcd.center.EtcdData lambda$create$7(java.lang.Class);
    Code:
       0: aconst_null
       1: aload_0
       2: invokedynamic #128,  0            // InvokeDynamic #19:get:(Ljava/lang/Class;)Ljava/util/function/Supplier;
       7: iconst_1
       8: anewarray     #33                 // class java/lang/Object
      11: dup
      12: iconst_0
      13: aload_0
      14: aastore
      15: invokestatic  #129                // Method io/vertx/up/fn/Fn.getNull:(Ljava/lang/Object;Ljava/util/function/Supplier;[Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #16                 // class io/vertx/tp/plugin/etcd/center/EtcdData
      21: areturn

  private static io.vertx.tp.plugin.etcd.center.EtcdData lambda$null$6(java.lang.Class);
    Code:
       0: new           #16                 // class io/vertx/tp/plugin/etcd/center/EtcdData
       3: dup
       4: aload_0
       5: invokespecial #130                // Method "<init>":(Ljava/lang/Class;)V
       8: areturn

  private void lambda$new$5(java.lang.Integer, java.lang.String);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #131                // Method java/lang/Integer.intValue:()I
       5: invokestatic  #132                // Method io/vertx/up/util/Ut.netOk:(Ljava/lang/String;I)Z
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: getstatic     #21                 // Field LOGGER:Lio/vertx/up/log/Annal;
      19: ldc           #133                // class io/vertx/up/exception/zero/EtcdNetworkException
      21: iconst_3
      22: anewarray     #33                 // class java/lang/Object
      25: dup
      26: iconst_0
      27: aload_0
      28: invokevirtual #53                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      31: aastore
      32: dup
      33: iconst_1
      34: aload_2
      35: aastore
      36: dup
      37: iconst_2
      38: aload_1
      39: aastore
      40: invokestatic  #40                 // Method io/vertx/up/fn/Fn.outUp:(ZLio/vertx/up/log/Annal;Ljava/lang/Class;[Ljava/lang/Object;)V
      43: return

  private static java.lang.String lambda$new$4(java.util.concurrent.ConcurrentMap, io.vertx.core.json.JsonObject) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ldc           #134                // String port
       3: invokevirtual #135                // Method io/vertx/core/json/JsonObject.getInteger:(Ljava/lang/String;)Ljava/lang/Integer;
       6: astore_2
       7: aload_1
       8: ldc           #136                // String host
      10: invokevirtual #27                 // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
      13: astore_3
      14: aload_0
      15: aload_2
      16: aload_3
      17: invokeinterface #127,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: new           #137                // class java/lang/StringBuilder
      26: dup
      27: invokespecial #138                // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #139                // String http://
      32: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_3
      36: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #141                // String :
      41: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_2
      45: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: invokevirtual #143                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  private static boolean lambda$new$3(io.vertx.core.json.JsonObject) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #134                // String port
       3: invokevirtual #18                 // Method io/vertx/core/json/JsonObject.containsKey:(Ljava/lang/String;)Z
       6: ifeq          22
       9: aload_0
      10: ldc           #136                // String host
      12: invokevirtual #18                 // Method io/vertx/core/json/JsonObject.containsKey:(Ljava/lang/String;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private static io.vertx.core.json.JsonObject lambda$new$2(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: checkcast     #15                 // class io/vertx/core/json/JsonObject
       4: areturn

  private static void lambda$new$1(io.vertx.core.json.JsonObject) throws io.vertx.up.exception.ZeroException;
    Code:
       0: aload_0
       1: invokedynamic #144,  0            // InvokeDynamic #20:execute:(Lio/vertx/core/json/JsonObject;)Lio/vertx/up/fn/ZeroActuator;
       6: iconst_1
       7: anewarray     #33                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_0
      13: aastore
      14: invokestatic  #145                // Method io/vertx/up/fn/Fn.onZero:(Lio/vertx/up/fn/ZeroActuator;[Ljava/lang/Object;)V
      17: return

  private static void lambda$null$0(io.vertx.core.json.JsonObject) throws io.vertx.up.exception.ZeroException;
    Code:
       0: ldc           #17                 // String etcd
       2: aload_0
       3: invokestatic  #146                // Method io/vertx/up/atom/Ruler.verify:(Ljava/lang/String;Lio/vertx/core/json/JsonObject;)V
       6: return

  static {};
    Code:
       0: ldc           #16                 // class io/vertx/tp/plugin/etcd/center/EtcdData
       2: invokestatic  #12                 // InterfaceMethod io/vertx/up/log/Annal.get:(Ljava/lang/Class;)Lio/vertx/up/log/Annal;
       5: putstatic     #21                 // Field LOGGER:Lio/vertx/up/log/Annal;
       8: ldc           #147                // class io/vertx/up/uca/yaml/ZeroUniform
      10: iconst_0
      11: anewarray     #33                 // class java/lang/Object
      14: invokestatic  #148                // Method io/vertx/up/util/Ut.singleton:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #149                // class io/vertx/up/uca/yaml/Node
      20: putstatic     #13                 // Field NODE:Lio/vertx/up/uca/yaml/Node;
      23: new           #43                 // class java/util/concurrent/ConcurrentHashMap
      26: dup
      27: invokespecial #44                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      30: putstatic     #68                 // Field POOL:Ljava/util/concurrent/ConcurrentMap;
      33: return
}
