Compiled from "RpcClientImpl.java"
public class io.vertx.tp.plugin.rpc.RpcClientImpl implements io.vertx.tp.plugin.rpc.RpcClient {
  private static final io.vertx.up.log.Annal LOGGER;

  private static final java.lang.String DS_LOCAL_MAP_NAME;

  private final io.vertx.core.Vertx vertx;

  private final io.vertx.core.json.JsonObject config;

  private final java.lang.String name;

  protected io.vertx.tp.plugin.rpc.RpcClient client;

  protected io.vertx.tp.plugin.rpc.RpcHolder holder;

  public io.vertx.tp.plugin.rpc.RpcClientImpl(io.vertx.core.Vertx, io.vertx.core.json.JsonObject, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: aload_2
      10: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: putfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
      19: aload_0
      20: aload_2
      21: putfield      #4                  // Field config:Lio/vertx/core/json/JsonObject;
      24: aload_0
      25: aload_3
      26: putfield      #5                  // Field name:Ljava/lang/String;
      29: return

  public io.vertx.tp.plugin.rpc.RpcClient connect(io.vertx.core.json.JsonObject, io.vertx.core.json.JsonObject, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonObject>>);
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method io/vertx/tp/plugin/rpc/RpcHelper.getRecord:(Lio/vertx/core/json/JsonObject;)Lio/vertx/servicediscovery/Record;
       4: astore        4
       6: aload_1
       7: ldc           #8                  // String name
       9: invokevirtual #9                  // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
      12: astore        5
      14: aload_1
      15: ldc           #10                 // String addr
      17: invokevirtual #9                  // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
      20: astore        6
      22: aload         5
      24: aload_1
      25: aload         4
      27: invokestatic  #11                 // Method io/vertx/tp/plugin/rpc/RpcHelper.normalize:(Ljava/lang/String;Lio/vertx/core/json/JsonObject;Lio/vertx/servicediscovery/Record;)Lio/vertx/core/json/JsonObject;
      30: astore        7
      32: aload_0
      33: aload_0
      34: aload_0
      35: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
      38: aload         5
      40: aload         7
      42: invokespecial #12                 // Method lookupHolder:(Lio/vertx/core/Vertx;Ljava/lang/String;Lio/vertx/core/json/JsonObject;)Lio/vertx/tp/plugin/rpc/RpcHolder;
      45: putfield      #13                 // Field holder:Lio/vertx/tp/plugin/rpc/RpcHolder;
      48: ldc           #14                 // class io/vertx/up/eon/em/IpcType
      50: aload_1
      51: ldc           #15                 // String type
      53: invokevirtual #9                  // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
      56: invokestatic  #16                 // Method io/vertx/up/util/Ut.toEnum:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
      59: checkcast     #14                 // class io/vertx/up/eon/em/IpcType
      62: astore        8
      64: aload_0
      65: aload         8
      67: invokespecial #17                 // Method getStub:(Lio/vertx/up/eon/em/IpcType;)Lio/vertx/tp/plugin/rpc/client/RpcStub;
      70: astore        9
      72: new           #18                 // class io/vertx/up/atom/rpc/IpcData
      75: dup
      76: invokespecial #19                 // Method io/vertx/up/atom/rpc/IpcData."<init>":()V
      79: astore        10
      81: aload         10
      83: aload         8
      85: invokevirtual #20                 // Method io/vertx/up/atom/rpc/IpcData.setType:(Lio/vertx/up/eon/em/IpcType;)V
      88: aload         10
      90: aload         6
      92: invokevirtual #21                 // Method io/vertx/up/atom/rpc/IpcData.setAddress:(Ljava/lang/String;)V
      95: aload         10
      97: aload         4
      99: invokestatic  #22                 // Method io/vertx/up/uca/micro/ipc/DataEncap.in:(Lio/vertx/up/atom/rpc/IpcData;Lio/vertx/servicediscovery/Record;)V
     102: aload         10
     104: aload_2
     105: invokestatic  #23                 // Method io/vertx/up/commune/Envelop.success:(Ljava/lang/Object;)Lio/vertx/up/commune/Envelop;
     108: invokestatic  #24                 // Method io/vertx/up/uca/micro/ipc/DataEncap.in:(Lio/vertx/up/atom/rpc/IpcData;Lio/vertx/up/commune/Envelop;)V
     111: getstatic     #25                 // Field LOGGER:Lio/vertx/up/log/Annal;
     114: ldc           #27                 // String ( Rpc Client ) Final Traffic Data will be {0}
     116: iconst_1
     117: anewarray     #28                 // class java/lang/Object
     120: dup
     121: iconst_0
     122: aload         10
     124: invokevirtual #29                 // Method io/vertx/up/atom/rpc/IpcData.toString:()Ljava/lang/String;
     127: aastore
     128: invokeinterface #30,  3           // InterfaceMethod io/vertx/up/log/Annal.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     133: aload         9
     135: aload         10
     137: invokeinterface #31,  2           // InterfaceMethod io/vertx/tp/plugin/rpc/client/RpcStub.traffic:(Lio/vertx/up/atom/rpc/IpcData;)Lio/vertx/core/Future;
     142: astore        11
     144: aload         11
     146: aload_3
     147: invokedynamic #32,  0             // InvokeDynamic #0:handle:(Lio/vertx/core/Handler;)Lio/vertx/core/Handler;
     152: invokeinterface #33,  2           // InterfaceMethod io/vertx/core/Future.onComplete:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
     157: pop
     158: aload_0
     159: areturn

  public io.vertx.tp.plugin.rpc.RpcClient connect(java.lang.String, java.lang.String, io.vertx.core.json.JsonObject, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonObject>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #34                 // Method io/vertx/tp/plugin/rpc/RpcHelper.on:(Ljava/lang/String;Ljava/lang/String;)Lio/vertx/core/json/JsonObject;
       6: aload_3
       7: aload         4
       9: invokevirtual #35                 // Method connect:(Lio/vertx/core/json/JsonObject;Lio/vertx/core/json/JsonObject;Lio/vertx/core/Handler;)Lio/vertx/tp/plugin/rpc/RpcClient;
      12: areturn

  public io.vertx.tp.plugin.rpc.RpcClient close();
    Code:
       0: aload_0
       1: getfield      #13                 // Field holder:Lio/vertx/tp/plugin/rpc/RpcHolder;
       4: invokevirtual #36                 // Method io/vertx/tp/plugin/rpc/RpcHolder.close:()V
       7: aload_0
       8: areturn

  private io.vertx.tp.plugin.rpc.client.RpcStub getStub(io.vertx.up.eon.em.IpcType);
    Code:
       0: getstatic     #37                 // Field io/vertx/tp/plugin/rpc/RpcClientImpl$1.$SwitchMap$io$vertx$up$eon$em$IpcType:[I
       3: aload_1
       4: invokevirtual #38                 // Method io/vertx/up/eon/em/IpcType.ordinal:()I
       7: iaload
       8: lookupswitch  { // 1
                     1: 28
               default: 28
          }
      28: ldc           #39                 // class io/vertx/tp/plugin/rpc/client/UnityStub
      30: iconst_1
      31: anewarray     #28                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: aload_0
      37: getfield      #13                 // Field holder:Lio/vertx/tp/plugin/rpc/RpcHolder;
      40: invokevirtual #40                 // Method io/vertx/tp/plugin/rpc/RpcHolder.getChannel:()Lio/grpc/ManagedChannel;
      43: aastore
      44: invokestatic  #41                 // Method io/vertx/up/util/Ut.instance:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #42                 // class io/vertx/tp/plugin/rpc/client/RpcStub
      50: astore_2
      51: aload_2
      52: areturn

  private io.vertx.tp.plugin.rpc.RpcHolder lookupHolder(io.vertx.core.Vertx, java.lang.String, io.vertx.core.json.JsonObject);
    Code:
       0: aload_0
       1: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       4: dup
       5: astore        4
       7: monitorenter
       8: ldc           #44                 // String __vertx.IpcClient.{0}
      10: iconst_1
      11: anewarray     #28                 // class java/lang/Object
      14: dup
      15: iconst_0
      16: aload_3
      17: ldc           #15                 // String type
      19: invokevirtual #9                  // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
      22: aastore
      23: invokestatic  #45                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: astore        5
      28: aload_0
      29: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
      32: invokeinterface #46,  1           // InterfaceMethod io/vertx/core/Vertx.sharedData:()Lio/vertx/core/shareddata/SharedData;
      37: aload         5
      39: invokeinterface #47,  2           // InterfaceMethod io/vertx/core/shareddata/SharedData.getLocalMap:(Ljava/lang/String;)Lio/vertx/core/shareddata/LocalMap;
      44: astore        6
      46: aload         6
      48: aload_2
      49: invokeinterface #48,  2           // InterfaceMethod io/vertx/core/shareddata/LocalMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #49                 // class io/vertx/tp/plugin/rpc/RpcHolder
      57: astore        7
      59: aconst_null
      60: aload         7
      62: if_acmpne     101
      65: new           #49                 // class io/vertx/tp/plugin/rpc/RpcHolder
      68: dup
      69: aload_1
      70: aload_3
      71: aload_0
      72: aload         6
      74: aload         5
      76: invokedynamic #50,  0             // InvokeDynamic #1:run:(Lio/vertx/tp/plugin/rpc/RpcClientImpl;Lio/vertx/core/shareddata/LocalMap;Ljava/lang/String;)Ljava/lang/Runnable;
      81: invokespecial #51                 // Method io/vertx/tp/plugin/rpc/RpcHolder."<init>":(Lio/vertx/core/Vertx;Lio/vertx/core/json/JsonObject;Ljava/lang/Runnable;)V
      84: astore        7
      86: aload         6
      88: aload         5
      90: aload         7
      92: invokeinterface #52,  3           // InterfaceMethod io/vertx/core/shareddata/LocalMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: goto          106
     101: aload         7
     103: invokevirtual #53                 // Method io/vertx/tp/plugin/rpc/RpcHolder.incRefCount:()V
     106: aload         7
     108: aload         4
     110: monitorexit
     111: areturn
     112: astore        8
     114: aload         4
     116: monitorexit
     117: aload         8
     119: athrow
    Exception table:
       from    to  target type
           8   111   112   any
         112   117   112   any

  private void removeFromMap(io.vertx.core.shareddata.LocalMap<java.lang.String, io.vertx.tp.plugin.rpc.RpcHolder>, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_1
       8: aload_2
       9: invokeinterface #54,  2           // InterfaceMethod io/vertx/core/shareddata/LocalMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_1
      16: invokeinterface #55,  1           // InterfaceMethod io/vertx/core/shareddata/LocalMap.isEmpty:()Z
      21: ifeq          30
      24: aload_1
      25: invokeinterface #56,  1           // InterfaceMethod io/vertx/core/shareddata/LocalMap.close:()V
      30: aload_3
      31: monitorexit
      32: goto          42
      35: astore        4
      37: aload_3
      38: monitorexit
      39: aload         4
      41: athrow
      42: return
    Exception table:
       from    to  target type
           7    32    35   any
          35    39    35   any

  private void lambda$lookupHolder$1(io.vertx.core.shareddata.LocalMap, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #57                 // Method removeFromMap:(Lio/vertx/core/shareddata/LocalMap;Ljava/lang/String;)V
       6: return

  private static void lambda$connect$0(io.vertx.core.Handler, io.vertx.core.AsyncResult);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #58,  1           // InterfaceMethod io/vertx/core/AsyncResult.result:()Ljava/lang/Object;
       7: invokestatic  #59                 // InterfaceMethod io/vertx/core/Future.succeededFuture:(Ljava/lang/Object;)Lio/vertx/core/Future;
      10: invokeinterface #60,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      15: return

  static {};
    Code:
       0: ldc           #43                 // class io/vertx/tp/plugin/rpc/RpcClientImpl
       2: invokestatic  #61                 // InterfaceMethod io/vertx/up/log/Annal.get:(Ljava/lang/Class;)Lio/vertx/up/log/Annal;
       5: putstatic     #25                 // Field LOGGER:Lio/vertx/up/log/Annal;
       8: return
}
