Compiled from "ExecuteStatementRequest.scala"
public interface zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly {
  public static zio.aws.redshiftdata.model.ExecuteStatementRequest asEditable$(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #24                 // InterfaceMethod asEditable:()Lzio/aws/redshiftdata/model/ExecuteStatementRequest;
       4: areturn

  public default zio.aws.redshiftdata.model.ExecuteStatementRequest asEditable();
    Code:
       0: new           #12                 // class zio/aws/redshiftdata/model/ExecuteStatementRequest
       3: dup
       4: aload_0
       5: invokeinterface #29,  1           // InterfaceMethod clusterIdentifier:()Lscala/Option;
      10: invokedynamic #50,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
      15: invokevirtual #56                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      18: aload_0
      19: invokeinterface #60,  1           // InterfaceMethod database:()Ljava/lang/String;
      24: aload_0
      25: invokeinterface #63,  1           // InterfaceMethod dbUser:()Lscala/Option;
      30: invokedynamic #68,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
      35: invokevirtual #56                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      38: aload_0
      39: invokeinterface #71,  1           // InterfaceMethod parameters:()Lscala/Option;
      44: invokedynamic #78,  0             // InvokeDynamic #2:apply:()Lscala/Function1;
      49: invokevirtual #56                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      52: aload_0
      53: invokeinterface #81,  1           // InterfaceMethod secretArn:()Lscala/Option;
      58: invokedynamic #86,  0             // InvokeDynamic #3:apply:()Lscala/Function1;
      63: invokevirtual #56                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      66: aload_0
      67: invokeinterface #89,  1           // InterfaceMethod sql:()Ljava/lang/String;
      72: aload_0
      73: invokeinterface #92,  1           // InterfaceMethod statementName:()Lscala/Option;
      78: invokedynamic #97,  0             // InvokeDynamic #4:apply:()Lscala/Function1;
      83: invokevirtual #56                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      86: aload_0
      87: invokeinterface #100,  1          // InterfaceMethod withEvent:()Lscala/Option;
      92: invokedynamic #105,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
      97: invokevirtual #56                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
     100: invokespecial #109                // Method zio/aws/redshiftdata/model/ExecuteStatementRequest."<init>":(Lscala/Option;Ljava/lang/String;Lscala/Option;Lscala/Option;Lscala/Option;Ljava/lang/String;Lscala/Option;Lscala/Option;)V
     103: areturn

  public abstract scala.Option<java.lang.String> clusterIdentifier();

  public abstract java.lang.String database();

  public abstract scala.Option<java.lang.String> dbUser();

  public abstract scala.Option<scala.collection.immutable.List<zio.aws.redshiftdata.model.SqlParameter$ReadOnly>> parameters();

  public abstract scala.Option<java.lang.String> secretArn();

  public abstract java.lang.String sql();

  public abstract scala.Option<java.lang.String> statementName();

  public abstract scala.Option<java.lang.Object> withEvent();

  public static zio.ZIO getClusterIdentifier$(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #119                // InterfaceMethod getClusterIdentifier:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getClusterIdentifier();
    Code:
       0: getstatic     #126                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #127                // String clusterIdentifier
       5: aload_0
       6: invokedynamic #138,  0            // InvokeDynamic #6:apply:(Lzio/aws/redshiftdata/model/ExecuteStatementRequest$ReadOnly;)Lscala/Function0;
      11: invokevirtual #142                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDatabase$(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #146                // InterfaceMethod getDatabase:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.String> getDatabase();
    Code:
       0: getstatic     #152                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #159,  0            // InvokeDynamic #7:apply:(Lzio/aws/redshiftdata/model/ExecuteStatementRequest$ReadOnly;)Lscala/Function0;
       9: ldc           #161                // String zio.aws.redshiftdata.model.ExecuteStatementRequest.ReadOnly.getDatabase(ExecuteStatementRequest.scala:87)
      11: invokevirtual #165                // Method zio/ZIO$.succeed:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDbUser$(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #169                // InterfaceMethod getDbUser:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getDbUser();
    Code:
       0: getstatic     #126                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #170                // String dbUser
       5: aload_0
       6: invokedynamic #175,  0            // InvokeDynamic #8:apply:(Lzio/aws/redshiftdata/model/ExecuteStatementRequest$ReadOnly;)Lscala/Function0;
      11: invokevirtual #142                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getParameters$(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #179                // InterfaceMethod getParameters:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, scala.collection.immutable.List<zio.aws.redshiftdata.model.SqlParameter$ReadOnly>> getParameters();
    Code:
       0: getstatic     #126                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #181                // String parameters
       5: aload_0
       6: invokedynamic #186,  0            // InvokeDynamic #9:apply:(Lzio/aws/redshiftdata/model/ExecuteStatementRequest$ReadOnly;)Lscala/Function0;
      11: invokevirtual #142                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getSecretArn$(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #190                // InterfaceMethod getSecretArn:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getSecretArn();
    Code:
       0: getstatic     #126                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #191                // String secretArn
       5: aload_0
       6: invokedynamic #196,  0            // InvokeDynamic #10:apply:(Lzio/aws/redshiftdata/model/ExecuteStatementRequest$ReadOnly;)Lscala/Function0;
      11: invokevirtual #142                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getSql$(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #200                // InterfaceMethod getSql:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.String> getSql();
    Code:
       0: getstatic     #152                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #205,  0            // InvokeDynamic #11:apply:(Lzio/aws/redshiftdata/model/ExecuteStatementRequest$ReadOnly;)Lscala/Function0;
       9: ldc           #207                // String zio.aws.redshiftdata.model.ExecuteStatementRequest.ReadOnly.getSql(ExecuteStatementRequest.scala:95)
      11: invokevirtual #165                // Method zio/ZIO$.succeed:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getStatementName$(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #211                // InterfaceMethod getStatementName:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getStatementName();
    Code:
       0: getstatic     #126                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #212                // String statementName
       5: aload_0
       6: invokedynamic #217,  0            // InvokeDynamic #12:apply:(Lzio/aws/redshiftdata/model/ExecuteStatementRequest$ReadOnly;)Lscala/Function0;
      11: invokevirtual #142                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getWithEvent$(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #221                // InterfaceMethod getWithEvent:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getWithEvent();
    Code:
       0: getstatic     #126                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #223                // String withEvent
       5: aload_0
       6: invokedynamic #228,  0            // InvokeDynamic #13:apply:(Lzio/aws/redshiftdata/model/ExecuteStatementRequest$ReadOnly;)Lscala/Function0;
      11: invokevirtual #142                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static java.lang.String $anonfun$asEditable$1(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String $anonfun$asEditable$2(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static zio.aws.redshiftdata.model.SqlParameter $anonfun$asEditable$4(zio.aws.redshiftdata.model.SqlParameter$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #236,  1          // InterfaceMethod zio/aws/redshiftdata/model/SqlParameter$ReadOnly.asEditable:()Lzio/aws/redshiftdata/model/SqlParameter;
       6: areturn

  public static scala.collection.immutable.List $anonfun$asEditable$3(scala.collection.immutable.List);
    Code:
       0: aload_0
       1: invokedynamic #242,  0            // InvokeDynamic #14:apply:()Lscala/Function1;
       6: invokevirtual #247                // Method scala/collection/immutable/List.map:(Lscala/Function1;)Lscala/collection/immutable/List;
       9: areturn

  public static java.lang.String $anonfun$asEditable$5(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String $anonfun$asEditable$6(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static boolean $anonfun$asEditable$7(boolean);
    Code:
       0: iload_0
       1: ireturn

  public static scala.Option $anonfun$getClusterIdentifier$1(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #29,  1           // InterfaceMethod clusterIdentifier:()Lscala/Option;
       6: areturn

  public static java.lang.String $anonfun$getDatabase$1(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #60,  1           // InterfaceMethod database:()Ljava/lang/String;
       6: areturn

  public static scala.Option $anonfun$getDbUser$1(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #63,  1           // InterfaceMethod dbUser:()Lscala/Option;
       6: areturn

  public static scala.Option $anonfun$getParameters$1(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #71,  1           // InterfaceMethod parameters:()Lscala/Option;
       6: areturn

  public static scala.Option $anonfun$getSecretArn$1(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #81,  1           // InterfaceMethod secretArn:()Lscala/Option;
       6: areturn

  public static java.lang.String $anonfun$getSql$1(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #89,  1           // InterfaceMethod sql:()Ljava/lang/String;
       6: areturn

  public static scala.Option $anonfun$getStatementName$1(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #92,  1           // InterfaceMethod statementName:()Lscala/Option;
       6: areturn

  public static scala.Option $anonfun$getWithEvent$1(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #100,  1          // InterfaceMethod withEvent:()Lscala/Option;
       6: areturn

  public static void $init$(zio.aws.redshiftdata.model.ExecuteStatementRequest$ReadOnly);
    Code:
       0: return

  public static java.lang.Object $anonfun$asEditable$7$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #259                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #261                // InterfaceMethod $anonfun$asEditable$7:(Z)Z
       7: invokestatic  #265                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #278,  0            // InvokeDynamic #15:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
