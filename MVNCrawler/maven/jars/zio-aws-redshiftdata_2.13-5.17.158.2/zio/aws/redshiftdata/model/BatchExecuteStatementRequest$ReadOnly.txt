Compiled from "BatchExecuteStatementRequest.scala"
public interface zio.aws.redshiftdata.model.BatchExecuteStatementRequest$ReadOnly {
  public static zio.aws.redshiftdata.model.BatchExecuteStatementRequest asEditable$(zio.aws.redshiftdata.model.BatchExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #20                 // InterfaceMethod asEditable:()Lzio/aws/redshiftdata/model/BatchExecuteStatementRequest;
       4: areturn

  public default zio.aws.redshiftdata.model.BatchExecuteStatementRequest asEditable();
    Code:
       0: new           #12                 // class zio/aws/redshiftdata/model/BatchExecuteStatementRequest
       3: dup
       4: aload_0
       5: invokeinterface #25,  1           // InterfaceMethod clusterIdentifier:()Lscala/Option;
      10: invokedynamic #46,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
      15: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      18: aload_0
      19: invokeinterface #56,  1           // InterfaceMethod database:()Ljava/lang/String;
      24: aload_0
      25: invokeinterface #59,  1           // InterfaceMethod dbUser:()Lscala/Option;
      30: invokedynamic #64,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
      35: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      38: aload_0
      39: invokeinterface #67,  1           // InterfaceMethod secretArn:()Lscala/Option;
      44: invokedynamic #72,  0             // InvokeDynamic #2:apply:()Lscala/Function1;
      49: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      52: aload_0
      53: invokeinterface #76,  1           // InterfaceMethod sqls:()Lscala/collection/immutable/List;
      58: aload_0
      59: invokeinterface #79,  1           // InterfaceMethod statementName:()Lscala/Option;
      64: invokedynamic #84,  0             // InvokeDynamic #3:apply:()Lscala/Function1;
      69: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      72: aload_0
      73: invokeinterface #87,  1           // InterfaceMethod withEvent:()Lscala/Option;
      78: invokedynamic #92,  0             // InvokeDynamic #4:apply:()Lscala/Function1;
      83: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      86: invokespecial #96                 // Method zio/aws/redshiftdata/model/BatchExecuteStatementRequest."<init>":(Lscala/Option;Ljava/lang/String;Lscala/Option;Lscala/Option;Lscala/collection/Iterable;Lscala/Option;Lscala/Option;)V
      89: areturn

  public abstract scala.Option<java.lang.String> clusterIdentifier();

  public abstract java.lang.String database();

  public abstract scala.Option<java.lang.String> dbUser();

  public abstract scala.Option<java.lang.String> secretArn();

  public abstract scala.collection.immutable.List<java.lang.String> sqls();

  public abstract scala.Option<java.lang.String> statementName();

  public abstract scala.Option<java.lang.Object> withEvent();

  public static zio.ZIO getClusterIdentifier$(zio.aws.redshiftdata.model.BatchExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #106                // InterfaceMethod getClusterIdentifier:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getClusterIdentifier();
    Code:
       0: getstatic     #113                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #114                // String clusterIdentifier
       5: aload_0
       6: invokedynamic #125,  0            // InvokeDynamic #5:apply:(Lzio/aws/redshiftdata/model/BatchExecuteStatementRequest$ReadOnly;)Lscala/Function0;
      11: invokevirtual #129                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDatabase$(zio.aws.redshiftdata.model.BatchExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #133                // InterfaceMethod getDatabase:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.String> getDatabase();
    Code:
       0: getstatic     #139                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #146,  0            // InvokeDynamic #6:apply:(Lzio/aws/redshiftdata/model/BatchExecuteStatementRequest$ReadOnly;)Lscala/Function0;
       9: ldc           #148                // String zio.aws.redshiftdata.model.BatchExecuteStatementRequest.ReadOnly.getDatabase(BatchExecuteStatementRequest.scala:75)
      11: invokevirtual #152                // Method zio/ZIO$.succeed:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDbUser$(zio.aws.redshiftdata.model.BatchExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #156                // InterfaceMethod getDbUser:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getDbUser();
    Code:
       0: getstatic     #113                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #157                // String dbUser
       5: aload_0
       6: invokedynamic #162,  0            // InvokeDynamic #7:apply:(Lzio/aws/redshiftdata/model/BatchExecuteStatementRequest$ReadOnly;)Lscala/Function0;
      11: invokevirtual #129                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getSecretArn$(zio.aws.redshiftdata.model.BatchExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #166                // InterfaceMethod getSecretArn:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getSecretArn();
    Code:
       0: getstatic     #113                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #167                // String secretArn
       5: aload_0
       6: invokedynamic #172,  0            // InvokeDynamic #8:apply:(Lzio/aws/redshiftdata/model/BatchExecuteStatementRequest$ReadOnly;)Lscala/Function0;
      11: invokevirtual #129                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getSqls$(zio.aws.redshiftdata.model.BatchExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #176                // InterfaceMethod getSqls:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, scala.collection.immutable.List<java.lang.String>> getSqls();
    Code:
       0: getstatic     #139                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #184,  0            // InvokeDynamic #9:apply:(Lzio/aws/redshiftdata/model/BatchExecuteStatementRequest$ReadOnly;)Lscala/Function0;
       9: ldc           #186                // String zio.aws.redshiftdata.model.BatchExecuteStatementRequest.ReadOnly.getSqls(BatchExecuteStatementRequest.scala:80)
      11: invokevirtual #152                // Method zio/ZIO$.succeed:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getStatementName$(zio.aws.redshiftdata.model.BatchExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #190                // InterfaceMethod getStatementName:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getStatementName();
    Code:
       0: getstatic     #113                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #191                // String statementName
       5: aload_0
       6: invokedynamic #196,  0            // InvokeDynamic #10:apply:(Lzio/aws/redshiftdata/model/BatchExecuteStatementRequest$ReadOnly;)Lscala/Function0;
      11: invokevirtual #129                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getWithEvent$(zio.aws.redshiftdata.model.BatchExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #200                // InterfaceMethod getWithEvent:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getWithEvent();
    Code:
       0: getstatic     #113                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #202                // String withEvent
       5: aload_0
       6: invokedynamic #207,  0            // InvokeDynamic #11:apply:(Lzio/aws/redshiftdata/model/BatchExecuteStatementRequest$ReadOnly;)Lscala/Function0;
      11: invokevirtual #129                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static java.lang.String $anonfun$asEditable$1(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String $anonfun$asEditable$2(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String $anonfun$asEditable$3(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String $anonfun$asEditable$4(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static boolean $anonfun$asEditable$5(boolean);
    Code:
       0: iload_0
       1: ireturn

  public static scala.Option $anonfun$getClusterIdentifier$1(zio.aws.redshiftdata.model.BatchExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #25,  1           // InterfaceMethod clusterIdentifier:()Lscala/Option;
       6: areturn

  public static java.lang.String $anonfun$getDatabase$1(zio.aws.redshiftdata.model.BatchExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #56,  1           // InterfaceMethod database:()Ljava/lang/String;
       6: areturn

  public static scala.Option $anonfun$getDbUser$1(zio.aws.redshiftdata.model.BatchExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #59,  1           // InterfaceMethod dbUser:()Lscala/Option;
       6: areturn

  public static scala.Option $anonfun$getSecretArn$1(zio.aws.redshiftdata.model.BatchExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #67,  1           // InterfaceMethod secretArn:()Lscala/Option;
       6: areturn

  public static scala.collection.immutable.List $anonfun$getSqls$1(zio.aws.redshiftdata.model.BatchExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #76,  1           // InterfaceMethod sqls:()Lscala/collection/immutable/List;
       6: areturn

  public static scala.Option $anonfun$getStatementName$1(zio.aws.redshiftdata.model.BatchExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #79,  1           // InterfaceMethod statementName:()Lscala/Option;
       6: areturn

  public static scala.Option $anonfun$getWithEvent$1(zio.aws.redshiftdata.model.BatchExecuteStatementRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #87,  1           // InterfaceMethod withEvent:()Lscala/Option;
       6: areturn

  public static void $init$(zio.aws.redshiftdata.model.BatchExecuteStatementRequest$ReadOnly);
    Code:
       0: return

  public static java.lang.Object $anonfun$asEditable$5$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #220                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #222                // InterfaceMethod $anonfun$asEditable$5:(Z)Z
       7: invokestatic  #226                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #239,  0            // InvokeDynamic #12:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
