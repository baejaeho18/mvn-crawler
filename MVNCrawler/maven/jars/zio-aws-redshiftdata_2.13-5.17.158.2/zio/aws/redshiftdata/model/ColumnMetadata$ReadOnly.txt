Compiled from "ColumnMetadata.scala"
public interface zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly {
  public static zio.aws.redshiftdata.model.ColumnMetadata asEditable$(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #20                 // InterfaceMethod asEditable:()Lzio/aws/redshiftdata/model/ColumnMetadata;
       4: areturn

  public default zio.aws.redshiftdata.model.ColumnMetadata asEditable();
    Code:
       0: new           #12                 // class zio/aws/redshiftdata/model/ColumnMetadata
       3: dup
       4: aload_0
       5: invokeinterface #25,  1           // InterfaceMethod columnDefault:()Lscala/Option;
      10: invokedynamic #46,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
      15: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      18: aload_0
      19: invokeinterface #55,  1           // InterfaceMethod isCaseSensitive:()Lscala/Option;
      24: invokedynamic #60,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
      29: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      32: aload_0
      33: invokeinterface #63,  1           // InterfaceMethod isCurrency:()Lscala/Option;
      38: invokedynamic #68,  0             // InvokeDynamic #2:apply:()Lscala/Function1;
      43: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      46: aload_0
      47: invokeinterface #71,  1           // InterfaceMethod isSigned:()Lscala/Option;
      52: invokedynamic #76,  0             // InvokeDynamic #3:apply:()Lscala/Function1;
      57: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      60: aload_0
      61: invokeinterface #79,  1           // InterfaceMethod label:()Lscala/Option;
      66: invokedynamic #84,  0             // InvokeDynamic #4:apply:()Lscala/Function1;
      71: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      74: aload_0
      75: invokeinterface #87,  1           // InterfaceMethod length:()Lscala/Option;
      80: invokedynamic #97,  0             // InvokeDynamic #5:apply$mcII$sp:()Lscala/runtime/java8/JFunction1$mcII$sp;
      85: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      88: aload_0
      89: invokeinterface #100,  1          // InterfaceMethod name:()Lscala/Option;
      94: invokedynamic #105,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
      99: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
     102: aload_0
     103: invokeinterface #108,  1          // InterfaceMethod nullable:()Lscala/Option;
     108: invokedynamic #113,  0            // InvokeDynamic #7:apply$mcII$sp:()Lscala/runtime/java8/JFunction1$mcII$sp;
     113: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
     116: aload_0
     117: invokeinterface #116,  1          // InterfaceMethod precision:()Lscala/Option;
     122: invokedynamic #121,  0            // InvokeDynamic #8:apply$mcII$sp:()Lscala/runtime/java8/JFunction1$mcII$sp;
     127: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
     130: aload_0
     131: invokeinterface #124,  1          // InterfaceMethod scale:()Lscala/Option;
     136: invokedynamic #129,  0            // InvokeDynamic #9:apply$mcII$sp:()Lscala/runtime/java8/JFunction1$mcII$sp;
     141: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
     144: aload_0
     145: invokeinterface #132,  1          // InterfaceMethod schemaName:()Lscala/Option;
     150: invokedynamic #137,  0            // InvokeDynamic #10:apply:()Lscala/Function1;
     155: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
     158: aload_0
     159: invokeinterface #140,  1          // InterfaceMethod tableName:()Lscala/Option;
     164: invokedynamic #145,  0            // InvokeDynamic #11:apply:()Lscala/Function1;
     169: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
     172: aload_0
     173: invokeinterface #148,  1          // InterfaceMethod typeName:()Lscala/Option;
     178: invokedynamic #153,  0            // InvokeDynamic #12:apply:()Lscala/Function1;
     183: invokevirtual #52                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
     186: invokespecial #157                // Method zio/aws/redshiftdata/model/ColumnMetadata."<init>":(Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;)V
     189: areturn

  public abstract scala.Option<java.lang.String> columnDefault();

  public abstract scala.Option<java.lang.Object> isCaseSensitive();

  public abstract scala.Option<java.lang.Object> isCurrency();

  public abstract scala.Option<java.lang.Object> isSigned();

  public abstract scala.Option<java.lang.String> label();

  public abstract scala.Option<java.lang.Object> length();

  public abstract scala.Option<java.lang.String> name();

  public abstract scala.Option<java.lang.Object> nullable();

  public abstract scala.Option<java.lang.Object> precision();

  public abstract scala.Option<java.lang.Object> scale();

  public abstract scala.Option<java.lang.String> schemaName();

  public abstract scala.Option<java.lang.String> tableName();

  public abstract scala.Option<java.lang.String> typeName();

  public static zio.ZIO getColumnDefault$(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #166                // InterfaceMethod getColumnDefault:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getColumnDefault();
    Code:
       0: getstatic     #173                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #174                // String columnDefault
       5: aload_0
       6: invokedynamic #185,  0            // InvokeDynamic #13:apply:(Lzio/aws/redshiftdata/model/ColumnMetadata$ReadOnly;)Lscala/Function0;
      11: invokevirtual #189                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getIsCaseSensitive$(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #193                // InterfaceMethod getIsCaseSensitive:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getIsCaseSensitive();
    Code:
       0: getstatic     #173                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #195                // String isCaseSensitive
       5: aload_0
       6: invokedynamic #200,  0            // InvokeDynamic #14:apply:(Lzio/aws/redshiftdata/model/ColumnMetadata$ReadOnly;)Lscala/Function0;
      11: invokevirtual #189                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getIsCurrency$(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #204                // InterfaceMethod getIsCurrency:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getIsCurrency();
    Code:
       0: getstatic     #173                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #205                // String isCurrency
       5: aload_0
       6: invokedynamic #210,  0            // InvokeDynamic #15:apply:(Lzio/aws/redshiftdata/model/ColumnMetadata$ReadOnly;)Lscala/Function0;
      11: invokevirtual #189                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getIsSigned$(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #214                // InterfaceMethod getIsSigned:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getIsSigned();
    Code:
       0: getstatic     #173                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #215                // String isSigned
       5: aload_0
       6: invokedynamic #220,  0            // InvokeDynamic #16:apply:(Lzio/aws/redshiftdata/model/ColumnMetadata$ReadOnly;)Lscala/Function0;
      11: invokevirtual #189                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getLabel$(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #224                // InterfaceMethod getLabel:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getLabel();
    Code:
       0: getstatic     #173                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #225                // String label
       5: aload_0
       6: invokedynamic #230,  0            // InvokeDynamic #17:apply:(Lzio/aws/redshiftdata/model/ColumnMetadata$ReadOnly;)Lscala/Function0;
      11: invokevirtual #189                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getLength$(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #234                // InterfaceMethod getLength:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getLength();
    Code:
       0: getstatic     #173                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #235                // String length
       5: aload_0
       6: invokedynamic #240,  0            // InvokeDynamic #18:apply:(Lzio/aws/redshiftdata/model/ColumnMetadata$ReadOnly;)Lscala/Function0;
      11: invokevirtual #189                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getName$(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #244                // InterfaceMethod getName:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getName();
    Code:
       0: getstatic     #173                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #245                // String name
       5: aload_0
       6: invokedynamic #250,  0            // InvokeDynamic #19:apply:(Lzio/aws/redshiftdata/model/ColumnMetadata$ReadOnly;)Lscala/Function0;
      11: invokevirtual #189                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getNullable$(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #254                // InterfaceMethod getNullable:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getNullable();
    Code:
       0: getstatic     #173                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #255                // String nullable
       5: aload_0
       6: invokedynamic #260,  0            // InvokeDynamic #20:apply:(Lzio/aws/redshiftdata/model/ColumnMetadata$ReadOnly;)Lscala/Function0;
      11: invokevirtual #189                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getPrecision$(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #264                // InterfaceMethod getPrecision:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getPrecision();
    Code:
       0: getstatic     #173                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #265                // String precision
       6: aload_0
       7: invokedynamic #270,  0            // InvokeDynamic #21:apply:(Lzio/aws/redshiftdata/model/ColumnMetadata$ReadOnly;)Lscala/Function0;
      12: invokevirtual #189                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getScale$(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #274                // InterfaceMethod getScale:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getScale();
    Code:
       0: getstatic     #173                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #275                // String scale
       6: aload_0
       7: invokedynamic #280,  0            // InvokeDynamic #22:apply:(Lzio/aws/redshiftdata/model/ColumnMetadata$ReadOnly;)Lscala/Function0;
      12: invokevirtual #189                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getSchemaName$(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #284                // InterfaceMethod getSchemaName:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getSchemaName();
    Code:
       0: getstatic     #173                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #285                // String schemaName
       6: aload_0
       7: invokedynamic #290,  0            // InvokeDynamic #23:apply:(Lzio/aws/redshiftdata/model/ColumnMetadata$ReadOnly;)Lscala/Function0;
      12: invokevirtual #189                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getTableName$(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #294                // InterfaceMethod getTableName:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getTableName();
    Code:
       0: getstatic     #173                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #295                // String tableName
       6: aload_0
       7: invokedynamic #300,  0            // InvokeDynamic #24:apply:(Lzio/aws/redshiftdata/model/ColumnMetadata$ReadOnly;)Lscala/Function0;
      12: invokevirtual #189                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getTypeName$(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #304                // InterfaceMethod getTypeName:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getTypeName();
    Code:
       0: getstatic     #173                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #305                // String typeName
       6: aload_0
       7: invokedynamic #310,  0            // InvokeDynamic #25:apply:(Lzio/aws/redshiftdata/model/ColumnMetadata$ReadOnly;)Lscala/Function0;
      12: invokevirtual #189                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static java.lang.String $anonfun$asEditable$1(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static boolean $anonfun$asEditable$2(boolean);
    Code:
       0: iload_0
       1: ireturn

  public static boolean $anonfun$asEditable$3(boolean);
    Code:
       0: iload_0
       1: ireturn

  public static boolean $anonfun$asEditable$4(boolean);
    Code:
       0: iload_0
       1: ireturn

  public static java.lang.String $anonfun$asEditable$5(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static int $anonfun$asEditable$6(int);
    Code:
       0: iload_0
       1: ireturn

  public static java.lang.String $anonfun$asEditable$7(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static int $anonfun$asEditable$8(int);
    Code:
       0: iload_0
       1: ireturn

  public static int $anonfun$asEditable$9(int);
    Code:
       0: iload_0
       1: ireturn

  public static int $anonfun$asEditable$10(int);
    Code:
       0: iload_0
       1: ireturn

  public static java.lang.String $anonfun$asEditable$11(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String $anonfun$asEditable$12(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String $anonfun$asEditable$13(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static scala.Option $anonfun$getColumnDefault$1(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #25,  1           // InterfaceMethod columnDefault:()Lscala/Option;
       6: areturn

  public static scala.Option $anonfun$getIsCaseSensitive$1(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #55,  1           // InterfaceMethod isCaseSensitive:()Lscala/Option;
       6: areturn

  public static scala.Option $anonfun$getIsCurrency$1(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #63,  1           // InterfaceMethod isCurrency:()Lscala/Option;
       6: areturn

  public static scala.Option $anonfun$getIsSigned$1(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #71,  1           // InterfaceMethod isSigned:()Lscala/Option;
       6: areturn

  public static scala.Option $anonfun$getLabel$1(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #79,  1           // InterfaceMethod label:()Lscala/Option;
       6: areturn

  public static scala.Option $anonfun$getLength$1(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #87,  1           // InterfaceMethod length:()Lscala/Option;
       6: areturn

  public static scala.Option $anonfun$getName$1(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #100,  1          // InterfaceMethod name:()Lscala/Option;
       6: areturn

  public static scala.Option $anonfun$getNullable$1(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #108,  1          // InterfaceMethod nullable:()Lscala/Option;
       6: areturn

  public static scala.Option $anonfun$getPrecision$1(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #116,  1          // InterfaceMethod precision:()Lscala/Option;
       6: areturn

  public static scala.Option $anonfun$getScale$1(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #124,  1          // InterfaceMethod scale:()Lscala/Option;
       6: areturn

  public static scala.Option $anonfun$getSchemaName$1(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #132,  1          // InterfaceMethod schemaName:()Lscala/Option;
       6: areturn

  public static scala.Option $anonfun$getTableName$1(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #140,  1          // InterfaceMethod tableName:()Lscala/Option;
       6: areturn

  public static scala.Option $anonfun$getTypeName$1(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #148,  1          // InterfaceMethod typeName:()Lscala/Option;
       6: areturn

  public static void $init$(zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly);
    Code:
       0: return

  public static java.lang.Object $anonfun$asEditable$2$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #326                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #328                // InterfaceMethod $anonfun$asEditable$2:(Z)Z
       7: invokestatic  #332                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  public static java.lang.Object $anonfun$asEditable$3$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #326                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #335                // InterfaceMethod $anonfun$asEditable$3:(Z)Z
       7: invokestatic  #332                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  public static java.lang.Object $anonfun$asEditable$4$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #326                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #337                // InterfaceMethod $anonfun$asEditable$4:(Z)Z
       7: invokestatic  #332                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #349,  0            // InvokeDynamic #26:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
