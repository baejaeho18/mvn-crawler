Compiled from "RedshiftData.scala"
public interface zio.aws.redshiftdata.RedshiftData extends zio.aws.core.aspects.package$AspectSupport<zio.aws.redshiftdata.RedshiftData> {
  public static zio.ZIO<zio.aws.core.config.AwsConfig, java.lang.Throwable, zio.aws.redshiftdata.RedshiftData> scoped(scala.Function1<software.amazon.awssdk.services.redshiftdata.RedshiftDataAsyncClientBuilder, software.amazon.awssdk.services.redshiftdata.RedshiftDataAsyncClientBuilder>);
    Code:
       0: getstatic     #84                 // Field zio/aws/redshiftdata/RedshiftData$.MODULE$:Lzio/aws/redshiftdata/RedshiftData$;
       3: aload_0
       4: invokevirtual #86                 // Method zio/aws/redshiftdata/RedshiftData$.scoped:(Lscala/Function1;)Lzio/ZIO;
       7: areturn

  public static zio.ZLayer<zio.aws.core.config.AwsConfig, java.lang.Throwable, zio.aws.redshiftdata.RedshiftData> customized(scala.Function1<software.amazon.awssdk.services.redshiftdata.RedshiftDataAsyncClientBuilder, software.amazon.awssdk.services.redshiftdata.RedshiftDataAsyncClientBuilder>);
    Code:
       0: getstatic     #84                 // Field zio/aws/redshiftdata/RedshiftData$.MODULE$:Lzio/aws/redshiftdata/RedshiftData$;
       3: aload_0
       4: invokevirtual #92                 // Method zio/aws/redshiftdata/RedshiftData$.customized:(Lscala/Function1;)Lzio/ZLayer;
       7: areturn

  public static zio.ZLayer<zio.aws.core.config.AwsConfig, java.lang.Throwable, zio.aws.redshiftdata.RedshiftData> live();
    Code:
       0: getstatic     #84                 // Field zio/aws/redshiftdata/RedshiftData$.MODULE$:Lzio/aws/redshiftdata/RedshiftData$;
       3: invokevirtual #97                 // Method zio/aws/redshiftdata/RedshiftData$.live:()Lzio/ZLayer;
       6: areturn

  public abstract software.amazon.awssdk.services.redshiftdata.RedshiftDataAsyncClient api();

  public abstract zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, java.lang.String> listDatabases(zio.aws.redshiftdata.model.ListDatabasesRequest);

  public abstract zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.redshiftdata.model.ListDatabasesResponse$ReadOnly> listDatabasesPaginated(zio.aws.redshiftdata.model.ListDatabasesRequest);

  public abstract zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.redshiftdata.model.BatchExecuteStatementResponse$ReadOnly> batchExecuteStatement(zio.aws.redshiftdata.model.BatchExecuteStatementRequest);

  public abstract zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.redshiftdata.model.ExecuteStatementResponse$ReadOnly> executeStatement(zio.aws.redshiftdata.model.ExecuteStatementRequest);

  public abstract zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, zio.aws.redshiftdata.model.StatementData$ReadOnly> listStatements(zio.aws.redshiftdata.model.ListStatementsRequest);

  public abstract zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.redshiftdata.model.ListStatementsResponse$ReadOnly> listStatementsPaginated(zio.aws.redshiftdata.model.ListStatementsRequest);

  public abstract zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, zio.aws.redshiftdata.model.TableMember$ReadOnly> listTables(zio.aws.redshiftdata.model.ListTablesRequest);

  public abstract zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.redshiftdata.model.ListTablesResponse$ReadOnly> listTablesPaginated(zio.aws.redshiftdata.model.ListTablesRequest);

  public abstract zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.core.StreamingOutputResult<java.lang.Object, zio.aws.redshiftdata.model.DescribeTableResponse$ReadOnly, zio.aws.redshiftdata.model.ColumnMetadata$ReadOnly>> describeTable(zio.aws.redshiftdata.model.DescribeTableRequest);

  public abstract zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.redshiftdata.model.DescribeTableResponse$ReadOnly> describeTablePaginated(zio.aws.redshiftdata.model.DescribeTableRequest);

  public abstract zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.redshiftdata.model.CancelStatementResponse$ReadOnly> cancelStatement(zio.aws.redshiftdata.model.CancelStatementRequest);

  public abstract zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, scala.collection.immutable.List<zio.aws.redshiftdata.model.Field$ReadOnly>> getStatementResult(zio.aws.redshiftdata.model.GetStatementResultRequest);

  public abstract zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.redshiftdata.model.GetStatementResultResponse$ReadOnly> getStatementResultPaginated(zio.aws.redshiftdata.model.GetStatementResultRequest);

  public abstract zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, java.lang.String> listSchemas(zio.aws.redshiftdata.model.ListSchemasRequest);

  public abstract zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.redshiftdata.model.ListSchemasResponse$ReadOnly> listSchemasPaginated(zio.aws.redshiftdata.model.ListSchemasRequest);

  public abstract zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.redshiftdata.model.DescribeStatementResponse$ReadOnly> describeStatement(zio.aws.redshiftdata.model.DescribeStatementRequest);
}
