Compiled from "SettingsJdbcRepository.java"
public class net.nemerosa.ontrack.repository.SettingsJdbcRepository extends net.nemerosa.ontrack.repository.support.AbstractJdbcRepository implements net.nemerosa.ontrack.model.support.SettingsRepository {
  public net.nemerosa.ontrack.repository.SettingsJdbcRepository(javax.sql.DataSource);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method net/nemerosa/ontrack/repository/support/AbstractJdbcRepository."<init>":(Ljavax/sql/DataSource;)V
       5: return

  public void delete(java.lang.Class<?>, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #2                  // String category
       3: aload_1
       4: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
       7: invokevirtual #4                  // Method params:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      10: ldc           #5                  // String name
      12: aload_2
      13: invokevirtual #6                  // Method org/springframework/jdbc/core/namedparam/MapSqlParameterSource.addValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      16: astore_3
      17: aload_0
      18: invokevirtual #7                  // Method getNamedParameterJdbcTemplate:()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
      21: ldc           #8                  // String DELETE FROM SETTINGS WHERE CATEGORY = :category AND NAME = :name
      23: aload_3
      24: invokevirtual #9                  // Method org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)I
      27: pop
      28: return

  public void deleteAll(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #2                  // String category
       3: aload_1
       4: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
       7: invokevirtual #4                  // Method params:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      10: astore_2
      11: aload_0
      12: invokevirtual #7                  // Method getNamedParameterJdbcTemplate:()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
      15: ldc           #10                 // String DELETE FROM SETTINGS WHERE CATEGORY = :category
      17: aload_2
      18: invokevirtual #9                  // Method org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)I
      21: pop
      22: return

  public java.util.Map<java.lang.String, java.lang.String> getAllValues(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #2                  // String category
       3: aload_1
       4: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
       7: invokevirtual #4                  // Method params:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      10: astore_2
      11: new           #11                 // class java/util/HashMap
      14: dup
      15: invokespecial #12                 // Method java/util/HashMap."<init>":()V
      18: astore_3
      19: aload_0
      20: invokevirtual #7                  // Method getNamedParameterJdbcTemplate:()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
      23: ldc           #13                 // String SELECT NAME, VALUE FROM SETTINGS WHERE CATEGORY = :category
      25: aload_2
      26: aload_3
      27: invokedynamic #14,  0             // InvokeDynamic #0:processRow:(Ljava/util/Map;)Lorg/springframework/jdbc/core/RowCallbackHandler;
      32: invokevirtual #15                 // Method org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.query:(Ljava/lang/String;Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;Lorg/springframework/jdbc/core/RowCallbackHandler;)V
      35: aload_3
      36: areturn

  public boolean getBoolean(java.lang.Class<?>, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #16,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
       8: iload_3
       9: invokestatic  #17                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      12: invokevirtual #18                 // Method getValue:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #19                 // class java/lang/Boolean
      18: invokevirtual #20                 // Method java/lang/Boolean.booleanValue:()Z
      21: ireturn

  public void setBoolean(java.lang.Class<?>, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #21                 // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
       7: invokevirtual #22                 // Method setValue:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public int getInt(java.lang.Class<?>, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #23,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
       8: iload_3
       9: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: invokevirtual #18                 // Method getValue:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #25                 // class java/lang/Integer
      18: invokevirtual #26                 // Method java/lang/Integer.intValue:()I
      21: ireturn

  public long getLong(java.lang.Class<?>, java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #27,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
       8: lload_3
       9: invokestatic  #28                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: invokevirtual #18                 // Method getValue:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #29                 // class java/lang/Long
      18: invokevirtual #30                 // Method java/lang/Long.longValue:()J
      21: lreturn

  public void setInt(java.lang.Class<?>, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #31                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
       7: invokevirtual #22                 // Method setValue:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public void setLong(java.lang.Class<?>, java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: invokestatic  #32                 // Method java/lang/String.valueOf:(J)Ljava/lang/String;
       7: invokevirtual #22                 // Method setValue:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public java.lang.String getString(java.lang.Class<?>, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #33                 // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
       6: aload_3
       7: invokevirtual #18                 // Method getValue:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #34                 // class java/lang/String
      13: areturn

  public void setString(java.lang.Class<?>, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #22                 // Method setValue:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getPassword(java.lang.Class<?>, java.lang.String, java.lang.String, java.util.function.Function<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         4
       5: aload_3
       6: invokevirtual #18                 // Method getValue:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #34                 // class java/lang/String
      12: areturn

  public void setPassword(java.lang.Class<?>, java.lang.String, java.lang.String, boolean, java.util.function.Function<java.lang.String, java.lang.String>);
    Code:
       0: aload_3
       1: invokestatic  #35                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
       4: ifeq          12
       7: iload         4
       9: ifne          29
      12: aload_0
      13: aload_1
      14: aload_2
      15: aload         5
      17: aload_3
      18: invokeinterface #36,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #34                 // class java/lang/String
      26: invokevirtual #22                 // Method setValue:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
      29: return

  protected void setValue(java.lang.Class<?>, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #2                  // String category
       3: aload_1
       4: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
       7: invokevirtual #4                  // Method params:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      10: ldc           #5                  // String name
      12: aload_2
      13: invokevirtual #6                  // Method org/springframework/jdbc/core/namedparam/MapSqlParameterSource.addValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      16: astore        4
      18: aload_0
      19: invokevirtual #7                  // Method getNamedParameterJdbcTemplate:()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
      22: ldc           #8                  // String DELETE FROM SETTINGS WHERE CATEGORY = :category AND NAME = :name
      24: aload         4
      26: invokevirtual #9                  // Method org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)I
      29: pop
      30: aload_3
      31: ifnull        38
      34: aload_3
      35: goto          40
      38: ldc           #37                 // String
      40: astore        5
      42: aload_0
      43: invokevirtual #7                  // Method getNamedParameterJdbcTemplate:()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
      46: ldc           #38                 // String INSERT INTO SETTINGS (CATEGORY, NAME, VALUE) VALUES (:category, :name, :value)
      48: aload         4
      50: ldc           #39                 // String value
      52: aload         5
      54: invokevirtual #6                  // Method org/springframework/jdbc/core/namedparam/MapSqlParameterSource.addValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      57: invokevirtual #9                  // Method org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)I
      60: pop
      61: return

  protected <T> T getValue(java.lang.Class<?>, java.lang.String, java.util.function.Function<java.lang.String, T>, T);
    Code:
       0: aload_0
       1: ldc           #40                 // String SELECT VALUE FROM SETTINGS WHERE CATEGORY = :category AND NAME = :name
       3: aload_0
       4: ldc           #2                  // String category
       6: aload_1
       7: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
      10: invokevirtual #4                  // Method params:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      13: ldc           #5                  // String name
      15: aload_2
      16: invokevirtual #6                  // Method org/springframework/jdbc/core/namedparam/MapSqlParameterSource.addValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      19: ldc           #34                 // class java/lang/String
      21: invokevirtual #41                 // Method getFirstItem:(Ljava/lang/String;Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;Ljava/lang/Class;)Ljava/lang/Object;
      24: checkcast     #34                 // class java/lang/String
      27: astore        5
      29: aload         5
      31: invokestatic  #35                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
      34: ifeq          40
      37: aload         4
      39: areturn
      40: aload_3
      41: aload         5
      43: invokeinterface #36,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      48: areturn

  private static java.lang.Long lambda$getLong$2(java.lang.String);
    Code:
       0: aload_0
       1: bipush        10
       3: invokestatic  #42                 // Method java/lang/Long.parseLong:(Ljava/lang/String;I)J
       6: invokestatic  #28                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: areturn

  private static java.lang.Integer lambda$getInt$1(java.lang.String);
    Code:
       0: aload_0
       1: bipush        10
       3: invokestatic  #43                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
       6: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       9: areturn

  private static void lambda$getAllValues$0(java.util.Map, java.sql.ResultSet) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: ldc           #5                  // String name
       3: invokeinterface #44,  2           // InterfaceMethod java/sql/ResultSet.getString:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_2
       9: aload_1
      10: ldc           #39                 // String value
      12: invokeinterface #44,  2           // InterfaceMethod java/sql/ResultSet.getString:(Ljava/lang/String;)Ljava/lang/String;
      17: astore_3
      18: aload_0
      19: aload_2
      20: aload_3
      21: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: return
}
