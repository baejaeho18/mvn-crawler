Compiled from "PreferencesJdbcRepository.kt"
public class net.nemerosa.ontrack.repository.PreferencesJdbcRepository extends net.nemerosa.ontrack.repository.support.AbstractJdbcRepository implements net.nemerosa.ontrack.repository.PreferencesRepository {
  public net.nemerosa.ontrack.repository.PreferencesJdbcRepository(javax.sql.DataSource);
    Code:
       0: aload_1
       1: ldc           #11                 // String dataSource
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokespecial #19                 // Method net/nemerosa/ontrack/repository/support/AbstractJdbcRepository."<init>":(Ljavax/sql/DataSource;)V
      11: return

  public com.fasterxml.jackson.databind.JsonNode getPreferences(int);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getNamedParameterJdbcTemplate:()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
       4: dup
       5: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
       8: ldc           #35                 // String \n                SELECT CONTENT\n                FROM PREFERENCES\n                WHERE ACCOUNTID = :accountId\n
      10: ldc           #37                 // String accountId
      12: iload_1
      13: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: invokestatic  #49                 // Method kotlin/TuplesKt.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
      19: invokestatic  #55                 // Method kotlin/collections/MapsKt.mapOf:(Lkotlin/Pair;)Ljava/util/Map;
      22: aload_0
      23: invokedynamic #75,  0             // InvokeDynamic #0:mapRow:(Lnet/nemerosa/ontrack/repository/PreferencesJdbcRepository;)Lorg/springframework/jdbc/core/RowMapper;
      28: invokevirtual #81                 // Method org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.query:(Ljava/lang/String;Ljava/util/Map;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;
      31: dup
      32: ldc           #83                 // String namedParameterJdbcTemplaâ€¦(rs, \"CONTENT\")\n        }
      34: invokestatic  #86                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      37: invokestatic  #92                 // Method kotlin/collections/CollectionsKt.firstOrNull:(Ljava/util/List;)Ljava/lang/Object;
      40: checkcast     #94                 // class com/fasterxml/jackson/databind/JsonNode
      43: areturn

  public void setPreferences(int, com.fasterxml.jackson.databind.JsonNode);
    Code:
       0: aload_2
       1: ldc           #99                 // String json
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #29                 // Method getNamedParameterJdbcTemplate:()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
      10: dup
      11: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      14: ldc           #101                // String \n                INSERT INTO PREFERENCES (ACCOUNTID, CONTENT) \n                VALUES (:accountId, CAST(:content AS JSONB))\n                ON CONFLICT (ACCOUNTID) DO\n                UPDATE SET CONTENT = EXCLUDED.CONTENT\n
      16: iconst_2
      17: anewarray     #103                // class kotlin/Pair
      20: astore_3
      21: aload_3
      22: iconst_0
      23: ldc           #37                 // String accountId
      25: iload_1
      26: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: invokestatic  #49                 // Method kotlin/TuplesKt.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
      32: aastore
      33: aload_3
      34: iconst_1
      35: ldc           #105                // String content
      37: aload_0
      38: aload_2
      39: invokevirtual #109                // Method writeJson:(Ljava/lang/Object;)Ljava/lang/String;
      42: invokestatic  #49                 // Method kotlin/TuplesKt.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
      45: aastore
      46: aload_3
      47: invokestatic  #112                // Method kotlin/collections/MapsKt.mapOf:([Lkotlin/Pair;)Ljava/util/Map;
      50: invokevirtual #116                // Method org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.update:(Ljava/lang/String;Ljava/util/Map;)I
      53: pop
      54: return

  private static final com.fasterxml.jackson.databind.JsonNode getPreferences$lambda-0(net.nemerosa.ontrack.repository.PreferencesJdbcRepository, java.sql.ResultSet, int);
    Code:
       0: aload_0
       1: ldc           #119                // String this$0
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #121                // String rs
       9: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: ldc           #123                // String CONTENT
      16: invokevirtual #127                // Method readJson:(Ljava/sql/ResultSet;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
      19: areturn
}
