Compiled from "BuildFilterJdbcRepository.java"
public class net.nemerosa.ontrack.repository.BuildFilterJdbcRepository extends net.nemerosa.ontrack.repository.support.AbstractJdbcRepository implements net.nemerosa.ontrack.repository.BuildFilterRepository {
  public net.nemerosa.ontrack.repository.BuildFilterJdbcRepository(javax.sql.DataSource);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method net/nemerosa/ontrack/repository/support/AbstractJdbcRepository."<init>":(Ljavax/sql/DataSource;)V
       5: return

  public java.util.Collection<net.nemerosa.ontrack.repository.TBuildFilter> findForBranch(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #2                  // Method getNamedParameterJdbcTemplate:()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
       5: ldc           #3                  // String (SELECT * FROM BUILD_FILTERS WHERE BRANCHID = :branchId) UNION (SELECT NULL AS accountId, * FROM SHARED_BUILD_FILTERS WHERE BRANCHID = :branchId)
       7: aload_0
       8: ldc           #4                  // String branchId
      10: iload_1
      11: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: invokevirtual #6                  // Method params:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      17: aload_0
      18: invokedynamic #7,  0              // InvokeDynamic #0:mapRow:(Lnet/nemerosa/ontrack/repository/BuildFilterJdbcRepository;)Lorg/springframework/jdbc/core/RowMapper;
      23: invokevirtual #8                  // Method org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.query:(Ljava/lang/String;Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;
      26: invokevirtual #9                  // Method order:(Ljava/util/List;)Ljava/util/List;
      29: areturn

  public java.util.Collection<net.nemerosa.ontrack.repository.TBuildFilter> findForBranch(java.util.OptionalInt, int);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method java/util/OptionalInt.isPresent:()Z
       4: ifeq          49
       7: aload_0
       8: aload_0
       9: invokevirtual #2                  // Method getNamedParameterJdbcTemplate:()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
      12: ldc           #11                 // String (SELECT * FROM BUILD_FILTERS WHERE ACCOUNTID = :accountId AND BRANCHID = :branchId) UNION (SELECT NULL AS accountId, * FROM SHARED_BUILD_FILTERS WHERE BRANCHID = :branchId)
      14: aload_0
      15: ldc           #4                  // String branchId
      17: iload_2
      18: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: invokevirtual #6                  // Method params:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      24: ldc           #12                 // String accountId
      26: aload_1
      27: invokevirtual #13                 // Method java/util/OptionalInt.getAsInt:()I
      30: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: invokevirtual #14                 // Method org/springframework/jdbc/core/namedparam/MapSqlParameterSource.addValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      36: aload_0
      37: invokedynamic #15,  0             // InvokeDynamic #1:mapRow:(Lnet/nemerosa/ontrack/repository/BuildFilterJdbcRepository;)Lorg/springframework/jdbc/core/RowMapper;
      42: invokevirtual #8                  // Method org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.query:(Ljava/lang/String;Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;
      45: invokevirtual #9                  // Method order:(Ljava/util/List;)Ljava/util/List;
      48: areturn
      49: aload_0
      50: invokevirtual #2                  // Method getNamedParameterJdbcTemplate:()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
      53: ldc           #16                 // String SELECT NULL AS accountId, * FROM SHARED_BUILD_FILTERS WHERE BRANCHID = :branchId ORDER BY NAME
      55: aload_0
      56: ldc           #4                  // String branchId
      58: iload_2
      59: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      62: invokevirtual #6                  // Method params:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      65: aload_0
      66: invokedynamic #17,  0             // InvokeDynamic #2:mapRow:(Lnet/nemerosa/ontrack/repository/BuildFilterJdbcRepository;)Lorg/springframework/jdbc/core/RowMapper;
      71: invokevirtual #8                  // Method org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.query:(Ljava/lang/String;Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;
      74: areturn

  protected java.util.List<net.nemerosa.ontrack.repository.TBuildFilter> order(java.util.List<net.nemerosa.ontrack.repository.TBuildFilter>);
    Code:
       0: new           #18                 // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokespecial #19                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       8: astore_2
       9: aload_2
      10: invokedynamic #20,  0             // InvokeDynamic #3:compare:()Ljava/util/Comparator;
      15: invokestatic  #21                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      18: aload_2
      19: areturn

  public java.util.Optional<net.nemerosa.ontrack.repository.TBuildFilter> findByBranchAndName(int, int, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #4                  // String branchId
       3: iload_2
       4: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #6                  // Method params:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      10: ldc           #12                 // String accountId
      12: iload_1
      13: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: invokevirtual #14                 // Method org/springframework/jdbc/core/namedparam/MapSqlParameterSource.addValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      19: ldc           #22                 // String name
      21: aload_3
      22: invokevirtual #14                 // Method org/springframework/jdbc/core/namedparam/MapSqlParameterSource.addValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      25: astore        4
      27: aload_0
      28: ldc           #23                 // String SELECT NULL AS accountId, * FROM SHARED_BUILD_FILTERS WHERE BRANCHID = :branchId AND NAME = :name
      30: aload         4
      32: aload_0
      33: invokedynamic #24,  0             // InvokeDynamic #4:mapRow:(Lnet/nemerosa/ontrack/repository/BuildFilterJdbcRepository;)Lorg/springframework/jdbc/core/RowMapper;
      38: invokevirtual #25                 // Method getOptional:(Ljava/lang/String;Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/Optional;
      41: astore        5
      43: aload         5
      45: invokevirtual #26                 // Method java/util/Optional.isPresent:()Z
      48: ifeq          54
      51: aload         5
      53: areturn
      54: aload_0
      55: ldc           #27                 // String SELECT * FROM BUILD_FILTERS WHERE ACCOUNTID = :accountId AND BRANCHID = :branchId AND NAME = :name
      57: aload         4
      59: aload_0
      60: invokedynamic #28,  0             // InvokeDynamic #5:mapRow:(Lnet/nemerosa/ontrack/repository/BuildFilterJdbcRepository;)Lorg/springframework/jdbc/core/RowMapper;
      65: invokevirtual #25                 // Method getOptional:(Ljava/lang/String;Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/Optional;
      68: areturn

  public net.nemerosa.ontrack.model.Ack save(java.util.OptionalInt, int, java.lang.String, java.lang.String, com.fasterxml.jackson.databind.JsonNode);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method java/util/OptionalInt.isPresent:()Z
       4: ifeq          82
       7: aload_0
       8: ldc           #4                  // String branchId
      10: iload_2
      11: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: invokevirtual #6                  // Method params:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      17: ldc           #12                 // String accountId
      19: aload_1
      20: invokevirtual #13                 // Method java/util/OptionalInt.getAsInt:()I
      23: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: invokevirtual #14                 // Method org/springframework/jdbc/core/namedparam/MapSqlParameterSource.addValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      29: ldc           #22                 // String name
      31: aload_3
      32: invokevirtual #14                 // Method org/springframework/jdbc/core/namedparam/MapSqlParameterSource.addValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      35: astore        6
      37: aload_0
      38: invokevirtual #2                  // Method getNamedParameterJdbcTemplate:()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
      41: ldc           #29                 // String DELETE FROM BUILD_FILTERS WHERE ACCOUNTID = :accountId AND BRANCHID = :branchId AND NAME = :name
      43: aload         6
      45: invokevirtual #30                 // Method org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)I
      48: pop
      49: aload_0
      50: invokevirtual #2                  // Method getNamedParameterJdbcTemplate:()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
      53: ldc           #31                 // String INSERT INTO BUILD_FILTERS (ACCOUNTID, BRANCHID, NAME, TYPE, DATA) VALUES (:accountId, :branchId, :name, :type, CAST(:data AS JSONB))
      55: aload         6
      57: ldc           #32                 // String type
      59: aload         4
      61: invokevirtual #14                 // Method org/springframework/jdbc/core/namedparam/MapSqlParameterSource.addValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      64: ldc           #33                 // String data
      66: aload_0
      67: aload         5
      69: invokevirtual #34                 // Method writeJson:(Ljava/lang/Object;)Ljava/lang/String;
      72: invokevirtual #14                 // Method org/springframework/jdbc/core/namedparam/MapSqlParameterSource.addValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      75: invokevirtual #30                 // Method org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)I
      78: invokestatic  #35                 // Method net/nemerosa/ontrack/model/Ack.one:(I)Lnet/nemerosa/ontrack/model/Ack;
      81: areturn
      82: aload_0
      83: ldc           #4                  // String branchId
      85: iload_2
      86: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      89: invokevirtual #6                  // Method params:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      92: ldc           #22                 // String name
      94: aload_3
      95: invokevirtual #14                 // Method org/springframework/jdbc/core/namedparam/MapSqlParameterSource.addValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      98: astore        6
     100: aload_0
     101: invokevirtual #2                  // Method getNamedParameterJdbcTemplate:()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
     104: ldc           #36                 // String DELETE FROM SHARED_BUILD_FILTERS WHERE BRANCHID = :branchId AND NAME = :name
     106: aload         6
     108: invokevirtual #30                 // Method org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)I
     111: pop
     112: aload_0
     113: invokevirtual #2                  // Method getNamedParameterJdbcTemplate:()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
     116: ldc           #37                 // String INSERT INTO SHARED_BUILD_FILTERS (BRANCHID, NAME, TYPE, DATA) VALUES (:branchId, :name, :type, CAST(:data AS JSONB))
     118: aload         6
     120: ldc           #32                 // String type
     122: aload         4
     124: invokevirtual #14                 // Method org/springframework/jdbc/core/namedparam/MapSqlParameterSource.addValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
     127: ldc           #33                 // String data
     129: aload_0
     130: aload         5
     132: invokevirtual #34                 // Method writeJson:(Ljava/lang/Object;)Ljava/lang/String;
     135: invokevirtual #14                 // Method org/springframework/jdbc/core/namedparam/MapSqlParameterSource.addValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
     138: invokevirtual #30                 // Method org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)I
     141: invokestatic  #35                 // Method net/nemerosa/ontrack/model/Ack.one:(I)Lnet/nemerosa/ontrack/model/Ack;
     144: areturn

  public net.nemerosa.ontrack.model.Ack delete(int, int, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getNamedParameterJdbcTemplate:()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
       4: ldc           #29                 // String DELETE FROM BUILD_FILTERS WHERE ACCOUNTID = :accountId AND BRANCHID = :branchId AND NAME = :name
       6: aload_0
       7: ldc           #4                  // String branchId
       9: iload_2
      10: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: invokevirtual #6                  // Method params:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      16: ldc           #12                 // String accountId
      18: iload_1
      19: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: invokevirtual #14                 // Method org/springframework/jdbc/core/namedparam/MapSqlParameterSource.addValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      25: ldc           #22                 // String name
      27: aload_3
      28: invokevirtual #14                 // Method org/springframework/jdbc/core/namedparam/MapSqlParameterSource.addValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      31: invokevirtual #30                 // Method org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)I
      34: invokestatic  #35                 // Method net/nemerosa/ontrack/model/Ack.one:(I)Lnet/nemerosa/ontrack/model/Ack;
      37: astore        5
      39: iload         4
      41: ifeq          78
      44: aload         5
      46: aload_0
      47: invokevirtual #2                  // Method getNamedParameterJdbcTemplate:()Lorg/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate;
      50: ldc           #36                 // String DELETE FROM SHARED_BUILD_FILTERS WHERE BRANCHID = :branchId AND NAME = :name
      52: aload_0
      53: ldc           #4                  // String branchId
      55: iload_2
      56: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: invokevirtual #6                  // Method params:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      62: ldc           #22                 // String name
      64: aload_3
      65: invokevirtual #14                 // Method org/springframework/jdbc/core/namedparam/MapSqlParameterSource.addValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/jdbc/core/namedparam/MapSqlParameterSource;
      68: invokevirtual #30                 // Method org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.update:(Ljava/lang/String;Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)I
      71: invokestatic  #35                 // Method net/nemerosa/ontrack/model/Ack.one:(I)Lnet/nemerosa/ontrack/model/Ack;
      74: invokevirtual #38                 // Method net/nemerosa/ontrack/model/Ack.or:(Lnet/nemerosa/ontrack/model/Ack;)Lnet/nemerosa/ontrack/model/Ack;
      77: areturn
      78: aload         5
      80: areturn

  private net.nemerosa.ontrack.repository.TBuildFilter toBuildFilter(java.sql.ResultSet) throws java.sql.SQLException;
    Code:
       0: new           #39                 // class net/nemerosa/ontrack/repository/TBuildFilter
       3: dup
       4: aload_0
       5: aload_1
       6: ldc           #12                 // String accountId
       8: invokevirtual #40                 // Method optionalInt:(Ljava/sql/ResultSet;Ljava/lang/String;)Ljava/util/OptionalInt;
      11: aload_1
      12: ldc           #4                  // String branchId
      14: invokeinterface #41,  2           // InterfaceMethod java/sql/ResultSet.getInt:(Ljava/lang/String;)I
      19: aload_1
      20: ldc           #22                 // String name
      22: invokeinterface #42,  2           // InterfaceMethod java/sql/ResultSet.getString:(Ljava/lang/String;)Ljava/lang/String;
      27: aload_1
      28: ldc           #32                 // String type
      30: invokeinterface #42,  2           // InterfaceMethod java/sql/ResultSet.getString:(Ljava/lang/String;)Ljava/lang/String;
      35: aload_0
      36: aload_1
      37: ldc           #33                 // String data
      39: invokevirtual #43                 // Method readJson:(Ljava/sql/ResultSet;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
      42: invokespecial #44                 // Method net/nemerosa/ontrack/repository/TBuildFilter."<init>":(Ljava/util/OptionalInt;ILjava/lang/String;Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)V
      45: areturn

  private net.nemerosa.ontrack.repository.TBuildFilter lambda$findByBranchAndName$5(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method toBuildFilter:(Ljava/sql/ResultSet;)Lnet/nemerosa/ontrack/repository/TBuildFilter;
       5: areturn

  private net.nemerosa.ontrack.repository.TBuildFilter lambda$findByBranchAndName$4(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method toBuildFilter:(Ljava/sql/ResultSet;)Lnet/nemerosa/ontrack/repository/TBuildFilter;
       5: areturn

  private static int lambda$order$3(net.nemerosa.ontrack.repository.TBuildFilter, net.nemerosa.ontrack.repository.TBuildFilter);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method net/nemerosa/ontrack/repository/TBuildFilter.getAccountId:()Ljava/util/OptionalInt;
       4: astore_2
       5: aload_1
       6: invokevirtual #46                 // Method net/nemerosa/ontrack/repository/TBuildFilter.getAccountId:()Ljava/util/OptionalInt;
       9: astore_3
      10: aload_2
      11: invokevirtual #10                 // Method java/util/OptionalInt.isPresent:()Z
      14: aload_3
      15: invokevirtual #10                 // Method java/util/OptionalInt.isPresent:()Z
      18: if_icmpne     33
      21: aload_0
      22: invokevirtual #47                 // Method net/nemerosa/ontrack/repository/TBuildFilter.getName:()Ljava/lang/String;
      25: aload_1
      26: invokevirtual #47                 // Method net/nemerosa/ontrack/repository/TBuildFilter.getName:()Ljava/lang/String;
      29: invokevirtual #48                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      32: ireturn
      33: aload_2
      34: invokevirtual #10                 // Method java/util/OptionalInt.isPresent:()Z
      37: ifeq          42
      40: iconst_1
      41: ireturn
      42: iconst_m1
      43: ireturn

  private net.nemerosa.ontrack.repository.TBuildFilter lambda$findForBranch$2(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method toBuildFilter:(Ljava/sql/ResultSet;)Lnet/nemerosa/ontrack/repository/TBuildFilter;
       5: areturn

  private net.nemerosa.ontrack.repository.TBuildFilter lambda$findForBranch$1(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method toBuildFilter:(Ljava/sql/ResultSet;)Lnet/nemerosa/ontrack/repository/TBuildFilter;
       5: areturn

  private net.nemerosa.ontrack.repository.TBuildFilter lambda$findForBranch$0(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method toBuildFilter:(Ljava/sql/ResultSet;)Lnet/nemerosa/ontrack/repository/TBuildFilter;
       5: areturn
}
