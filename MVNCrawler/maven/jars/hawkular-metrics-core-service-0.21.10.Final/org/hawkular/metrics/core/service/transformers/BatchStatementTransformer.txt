Compiled from "BatchStatementTransformer.java"
public class org.hawkular.metrics.core.service.transformers.BatchStatementTransformer implements rx.Observable$Transformer<com.datastax.driver.core.Statement, com.datastax.driver.core.BatchStatement> {
  public static final int DEFAULT_BATCH_SIZE;

  public static final rx.functions.Func0<com.datastax.driver.core.BatchStatement> DEFAULT_BATCH_STATEMENT_FACTORY;

  private final rx.functions.Func0<com.datastax.driver.core.BatchStatement> batchStatementFactory;

  private final int batchSize;

  public org.hawkular.metrics.core.service.transformers.BatchStatementTransformer();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field DEFAULT_BATCH_STATEMENT_FACTORY:Lrx/functions/Func0;
       4: bipush        10
       6: invokespecial #3                  // Method "<init>":(Lrx/functions/Func0;I)V
       9: return

  public org.hawkular.metrics.core.service.transformers.BatchStatementTransformer(rx.functions.Func0<com.datastax.driver.core.BatchStatement>, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_2
       6: putfield      #5                  // Field batchSize:I
       9: aload_0
      10: aload_1
      11: putfield      #6                  // Field batchStatementFactory:Lrx/functions/Func0;
      14: return

  public rx.Observable<com.datastax.driver.core.BatchStatement> call(rx.Observable<com.datastax.driver.core.Statement>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #5                  // Field batchSize:I
       5: invokevirtual #7                  // Method rx/Observable.window:(I)Lrx/Observable;
       8: aload_0
       9: invokedynamic #8,  0              // InvokeDynamic #0:call:(Lorg/hawkular/metrics/core/service/transformers/BatchStatementTransformer;)Lrx/functions/Func1;
      14: invokevirtual #9                  // Method rx/Observable.flatMap:(Lrx/functions/Func1;)Lrx/Observable;
      17: areturn

  public java.lang.Object call(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #10                 // class rx/Observable
       5: invokevirtual #11                 // Method call:(Lrx/Observable;)Lrx/Observable;
       8: areturn

  private rx.Observable lambda$call$1(rx.Observable);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field batchStatementFactory:Lrx/functions/Func0;
       5: invokedynamic #12,  0             // InvokeDynamic #1:call:()Lrx/functions/Action2;
      10: invokevirtual #13                 // Method rx/Observable.collect:(Lrx/functions/Func0;Lrx/functions/Action2;)Lrx/Observable;
      13: areturn

  private static com.datastax.driver.core.BatchStatement lambda$static$0();
    Code:
       0: new           #14                 // class com/datastax/driver/core/BatchStatement
       3: dup
       4: getstatic     #15                 // Field com/datastax/driver/core/BatchStatement$Type.UNLOGGED:Lcom/datastax/driver/core/BatchStatement$Type;
       7: invokespecial #16                 // Method com/datastax/driver/core/BatchStatement."<init>":(Lcom/datastax/driver/core/BatchStatement$Type;)V
      10: areturn

  static {};
    Code:
       0: invokedynamic #17,  0             // InvokeDynamic #2:call:()Lrx/functions/Func0;
       5: putstatic     #1                  // Field DEFAULT_BATCH_STATEMENT_FACTORY:Lrx/functions/Func0;
       8: return
}
