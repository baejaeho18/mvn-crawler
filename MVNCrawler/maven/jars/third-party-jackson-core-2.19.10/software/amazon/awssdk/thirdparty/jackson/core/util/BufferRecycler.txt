Compiled from "BufferRecycler.java"
public class software.amazon.awssdk.thirdparty.jackson.core.util.BufferRecycler {
  public static final int BYTE_READ_IO_BUFFER;

  public static final int BYTE_WRITE_ENCODING_BUFFER;

  public static final int BYTE_WRITE_CONCAT_BUFFER;

  public static final int BYTE_BASE64_CODEC_BUFFER;

  public static final int CHAR_TOKEN_BUFFER;

  public static final int CHAR_CONCAT_BUFFER;

  public static final int CHAR_TEXT_BUFFER;

  public static final int CHAR_NAME_COPY_BUFFER;

  private static final int[] BYTE_BUFFER_LENGTHS;

  private static final int[] CHAR_BUFFER_LENGTHS;

  protected final java.util.concurrent.atomic.AtomicReferenceArray<byte[]> _byteBuffers;

  protected final java.util.concurrent.atomic.AtomicReferenceArray<char[]> _charBuffers;

  public software.amazon.awssdk.thirdparty.jackson.core.util.BufferRecycler();
    Code:
       0: aload_0
       1: iconst_4
       2: iconst_4
       3: invokespecial #31                 // Method "<init>":(II)V
       6: return

  protected software.amazon.awssdk.thirdparty.jackson.core.util.BufferRecycler(int, int);
    Code:
       0: aload_0
       1: invokespecial #35                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #37                 // class java/util/concurrent/atomic/AtomicReferenceArray
       8: dup
       9: iload_1
      10: invokespecial #40                 // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":(I)V
      13: putfield      #42                 // Field _byteBuffers:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      16: aload_0
      17: new           #37                 // class java/util/concurrent/atomic/AtomicReferenceArray
      20: dup
      21: iload_2
      22: invokespecial #40                 // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":(I)V
      25: putfield      #44                 // Field _charBuffers:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      28: return

  public final byte[] allocByteBuffer(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #51                 // Method allocByteBuffer:(II)[B
       6: areturn

  public byte[] allocByteBuffer(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #56                 // Method byteBufferLength:(I)I
       5: istore_3
       6: iload_2
       7: iload_3
       8: if_icmpge     13
      11: iload_3
      12: istore_2
      13: aload_0
      14: getfield      #42                 // Field _byteBuffers:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      17: iload_1
      18: aconst_null
      19: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicReferenceArray.getAndSet:(ILjava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #62                 // class "[B"
      25: astore        4
      27: aload         4
      29: ifnull        39
      32: aload         4
      34: arraylength
      35: iload_2
      36: if_icmpge     46
      39: aload_0
      40: iload_2
      41: invokevirtual #65                 // Method balloc:(I)[B
      44: astore        4
      46: aload         4
      48: areturn

  public void releaseByteBuffer(int, byte[]);
    Code:
       0: aload_0
       1: getfield      #42                 // Field _byteBuffers:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: iload_1
       5: aload_2
       6: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicReferenceArray.set:(ILjava/lang/Object;)V
       9: return

  public final char[] allocCharBuffer(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #79                 // Method allocCharBuffer:(II)[C
       6: areturn

  public char[] allocCharBuffer(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #82                 // Method charBufferLength:(I)I
       5: istore_3
       6: iload_2
       7: iload_3
       8: if_icmpge     13
      11: iload_3
      12: istore_2
      13: aload_0
      14: getfield      #44                 // Field _charBuffers:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      17: iload_1
      18: aconst_null
      19: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicReferenceArray.getAndSet:(ILjava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #84                 // class "[C"
      25: astore        4
      27: aload         4
      29: ifnull        39
      32: aload         4
      34: arraylength
      35: iload_2
      36: if_icmpge     46
      39: aload_0
      40: iload_2
      41: invokevirtual #87                 // Method calloc:(I)[C
      44: astore        4
      46: aload         4
      48: areturn

  public void releaseCharBuffer(int, char[]);
    Code:
       0: aload_0
       1: getfield      #44                 // Field _charBuffers:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: iload_1
       5: aload_2
       6: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicReferenceArray.set:(ILjava/lang/Object;)V
       9: return

  protected int byteBufferLength(int);
    Code:
       0: getstatic     #91                 // Field BYTE_BUFFER_LENGTHS:[I
       3: iload_1
       4: iaload
       5: ireturn

  protected int charBufferLength(int);
    Code:
       0: getstatic     #93                 // Field CHAR_BUFFER_LENGTHS:[I
       3: iload_1
       4: iaload
       5: ireturn

  protected byte[] balloc(int);
    Code:
       0: iload_1
       1: newarray       byte
       3: areturn

  protected char[] calloc(int);
    Code:
       0: iload_1
       1: newarray       char
       3: areturn

  static {};
    Code:
       0: iconst_4
       1: newarray       int
       3: dup
       4: iconst_0
       5: sipush        8000
       8: iastore
       9: dup
      10: iconst_1
      11: sipush        8000
      14: iastore
      15: dup
      16: iconst_2
      17: sipush        2000
      20: iastore
      21: dup
      22: iconst_3
      23: sipush        2000
      26: iastore
      27: putstatic     #91                 // Field BYTE_BUFFER_LENGTHS:[I
      30: iconst_4
      31: newarray       int
      33: dup
      34: iconst_0
      35: sipush        4000
      38: iastore
      39: dup
      40: iconst_1
      41: sipush        4000
      44: iastore
      45: dup
      46: iconst_2
      47: sipush        200
      50: iastore
      51: dup
      52: iconst_3
      53: sipush        200
      56: iastore
      57: putstatic     #93                 // Field CHAR_BUFFER_LENGTHS:[I
      60: return
}
