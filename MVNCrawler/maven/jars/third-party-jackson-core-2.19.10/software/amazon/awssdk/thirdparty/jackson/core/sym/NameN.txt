Compiled from "NameN.java"
public final class software.amazon.awssdk.thirdparty.jackson.core.sym.NameN extends software.amazon.awssdk.thirdparty.jackson.core.sym.Name {
  private final int q1;

  private final int q2;

  private final int q3;

  private final int q4;

  private final int qlen;

  private final int[] q;

  software.amazon.awssdk.thirdparty.jackson.core.sym.NameN(java.lang.String, int, int, int, int, int, int[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #18                 // Method software/amazon/awssdk/thirdparty/jackson/core/sym/Name."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: iload_3
       8: putfield      #20                 // Field q1:I
      11: aload_0
      12: iload         4
      14: putfield      #22                 // Field q2:I
      17: aload_0
      18: iload         5
      20: putfield      #24                 // Field q3:I
      23: aload_0
      24: iload         6
      26: putfield      #26                 // Field q4:I
      29: aload_0
      30: aload         7
      32: putfield      #28                 // Field q:[I
      35: aload_0
      36: iload         8
      38: putfield      #30                 // Field qlen:I
      41: return

  public static software.amazon.awssdk.thirdparty.jackson.core.sym.NameN construct(java.lang.String, int, int[], int);
    Code:
       0: iload_3
       1: iconst_4
       2: if_icmpge     13
       5: new           #41                 // class java/lang/IllegalArgumentException
       8: dup
       9: invokespecial #44                 // Method java/lang/IllegalArgumentException."<init>":()V
      12: athrow
      13: aload_2
      14: iconst_0
      15: iaload
      16: istore        4
      18: aload_2
      19: iconst_1
      20: iaload
      21: istore        5
      23: aload_2
      24: iconst_2
      25: iaload
      26: istore        6
      28: aload_2
      29: iconst_3
      30: iaload
      31: istore        7
      33: iload_3
      34: iconst_4
      35: isub
      36: istore        8
      38: iload         8
      40: ifle          54
      43: aload_2
      44: iconst_4
      45: iload_3
      46: invokestatic  #50                 // Method java/util/Arrays.copyOfRange:([III)[I
      49: astore        9
      51: goto          57
      54: aconst_null
      55: astore        9
      57: new           #2                  // class software/amazon/awssdk/thirdparty/jackson/core/sym/NameN
      60: dup
      61: aload_0
      62: iload_1
      63: iload         4
      65: iload         5
      67: iload         6
      69: iload         7
      71: aload         9
      73: iload_3
      74: invokespecial #55                 // Method "<init>":(Ljava/lang/String;IIIII[II)V
      77: areturn

  public boolean equals(int);
    Code:
       0: iconst_0
       1: ireturn

  public boolean equals(int, int);
    Code:
       0: iconst_0
       1: ireturn

  public boolean equals(int, int, int);
    Code:
       0: iconst_0
       1: ireturn

  public boolean equals(int[], int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #30                 // Field qlen:I
       5: if_icmpeq     10
       8: iconst_0
       9: ireturn
      10: aload_1
      11: iconst_0
      12: iaload
      13: aload_0
      14: getfield      #20                 // Field q1:I
      17: if_icmpeq     22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: iconst_1
      24: iaload
      25: aload_0
      26: getfield      #22                 // Field q2:I
      29: if_icmpeq     34
      32: iconst_0
      33: ireturn
      34: aload_1
      35: iconst_2
      36: iaload
      37: aload_0
      38: getfield      #24                 // Field q3:I
      41: if_icmpeq     46
      44: iconst_0
      45: ireturn
      46: aload_1
      47: iconst_3
      48: iaload
      49: aload_0
      50: getfield      #26                 // Field q4:I
      53: if_icmpeq     58
      56: iconst_0
      57: ireturn
      58: iload_2
      59: tableswitch   { // 4 to 8
                     4: 156
                     5: 142
                     6: 128
                     7: 113
                     8: 98
               default: 92
          }
      92: aload_0
      93: aload_1
      94: invokespecial #70                 // Method _equals2:([I)Z
      97: ireturn
      98: aload_1
      99: bipush        7
     101: iaload
     102: aload_0
     103: getfield      #28                 // Field q:[I
     106: iconst_3
     107: iaload
     108: if_icmpeq     113
     111: iconst_0
     112: ireturn
     113: aload_1
     114: bipush        6
     116: iaload
     117: aload_0
     118: getfield      #28                 // Field q:[I
     121: iconst_2
     122: iaload
     123: if_icmpeq     128
     126: iconst_0
     127: ireturn
     128: aload_1
     129: iconst_5
     130: iaload
     131: aload_0
     132: getfield      #28                 // Field q:[I
     135: iconst_1
     136: iaload
     137: if_icmpeq     142
     140: iconst_0
     141: ireturn
     142: aload_1
     143: iconst_4
     144: iaload
     145: aload_0
     146: getfield      #28                 // Field q:[I
     149: iconst_0
     150: iaload
     151: if_icmpeq     156
     154: iconst_0
     155: ireturn
     156: iconst_1
     157: ireturn

  private final boolean _equals2(int[]);
    Code:
       0: aload_0
       1: getfield      #30                 // Field qlen:I
       4: iconst_4
       5: isub
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     36
      14: aload_1
      15: iload_3
      16: iconst_4
      17: iadd
      18: iaload
      19: aload_0
      20: getfield      #28                 // Field q:[I
      23: iload_3
      24: iaload
      25: if_icmpeq     30
      28: iconst_0
      29: ireturn
      30: iinc          3, 1
      33: goto          9
      36: iconst_1
      37: ireturn
}
