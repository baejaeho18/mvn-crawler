Compiled from "WildcardRefFluent.java"
public interface io.sundr.codegen.model.WildcardRefFluent<A extends io.sundr.codegen.model.WildcardRefFluent<A>> extends io.sundr.codegen.model.TypeRefFluent<A> {
  public abstract A addToBounds(int, io.sundr.codegen.model.TypeRef);

  public abstract A setToBounds(int, io.sundr.codegen.model.TypeRef);

  public abstract A addToBounds(io.sundr.codegen.model.TypeRef...);

  public abstract A addAllToBounds(java.util.Collection<io.sundr.codegen.model.TypeRef>);

  public abstract A removeFromBounds(io.sundr.codegen.model.TypeRef...);

  public abstract A removeAllFromBounds(java.util.Collection<io.sundr.codegen.model.TypeRef>);

  public abstract java.util.List<io.sundr.codegen.model.TypeRef> getBounds();

  public abstract java.util.List<io.sundr.codegen.model.TypeRef> buildBounds();

  public abstract io.sundr.codegen.model.TypeRef buildBound(int);

  public abstract io.sundr.codegen.model.TypeRef buildFirstBound();

  public abstract io.sundr.codegen.model.TypeRef buildLastBound();

  public abstract io.sundr.codegen.model.TypeRef buildMatchingBound(io.sundr.builder.Predicate<io.sundr.builder.Builder<? extends io.sundr.codegen.model.TypeRef>>);

  public abstract A withBounds(java.util.List<io.sundr.codegen.model.TypeRef>);

  public abstract A withBounds(io.sundr.codegen.model.TypeRef...);

  public abstract java.lang.Boolean hasBounds();

  public abstract A addToVoidRefBounds(int, io.sundr.codegen.model.VoidRef);

  public abstract A setToVoidRefBounds(int, io.sundr.codegen.model.VoidRef);

  public abstract A addToVoidRefBounds(io.sundr.codegen.model.VoidRef...);

  public abstract A addAllToVoidRefBounds(java.util.Collection<io.sundr.codegen.model.VoidRef>);

  public abstract A removeFromVoidRefBounds(io.sundr.codegen.model.VoidRef...);

  public abstract A removeAllFromVoidRefBounds(java.util.Collection<io.sundr.codegen.model.VoidRef>);

  public abstract io.sundr.codegen.model.WildcardRefFluent$VoidRefBoundsNested<A> addNewVoidRefBound();

  public abstract io.sundr.codegen.model.WildcardRefFluent$VoidRefBoundsNested<A> addNewVoidRefBoundLike(io.sundr.codegen.model.VoidRef);

  public abstract A addToWildcardRefBounds(int, io.sundr.codegen.model.WildcardRef);

  public abstract A setToWildcardRefBounds(int, io.sundr.codegen.model.WildcardRef);

  public abstract A addToWildcardRefBounds(io.sundr.codegen.model.WildcardRef...);

  public abstract A addAllToWildcardRefBounds(java.util.Collection<io.sundr.codegen.model.WildcardRef>);

  public abstract A removeFromWildcardRefBounds(io.sundr.codegen.model.WildcardRef...);

  public abstract A removeAllFromWildcardRefBounds(java.util.Collection<io.sundr.codegen.model.WildcardRef>);

  public abstract io.sundr.codegen.model.WildcardRefFluent$WildcardRefBoundsNested<A> addNewWildcardRefBound();

  public abstract io.sundr.codegen.model.WildcardRefFluent$WildcardRefBoundsNested<A> addNewWildcardRefBoundLike(io.sundr.codegen.model.WildcardRef);

  public abstract A addToPrimitiveRefBounds(int, io.sundr.codegen.model.PrimitiveRef);

  public abstract A setToPrimitiveRefBounds(int, io.sundr.codegen.model.PrimitiveRef);

  public abstract A addToPrimitiveRefBounds(io.sundr.codegen.model.PrimitiveRef...);

  public abstract A addAllToPrimitiveRefBounds(java.util.Collection<io.sundr.codegen.model.PrimitiveRef>);

  public abstract A removeFromPrimitiveRefBounds(io.sundr.codegen.model.PrimitiveRef...);

  public abstract A removeAllFromPrimitiveRefBounds(java.util.Collection<io.sundr.codegen.model.PrimitiveRef>);

  public abstract io.sundr.codegen.model.WildcardRefFluent$PrimitiveRefBoundsNested<A> addNewPrimitiveRefBound();

  public abstract io.sundr.codegen.model.WildcardRefFluent$PrimitiveRefBoundsNested<A> addNewPrimitiveRefBoundLike(io.sundr.codegen.model.PrimitiveRef);

  public abstract A addToTypeParamRefBounds(int, io.sundr.codegen.model.TypeParamRef);

  public abstract A setToTypeParamRefBounds(int, io.sundr.codegen.model.TypeParamRef);

  public abstract A addToTypeParamRefBounds(io.sundr.codegen.model.TypeParamRef...);

  public abstract A addAllToTypeParamRefBounds(java.util.Collection<io.sundr.codegen.model.TypeParamRef>);

  public abstract A removeFromTypeParamRefBounds(io.sundr.codegen.model.TypeParamRef...);

  public abstract A removeAllFromTypeParamRefBounds(java.util.Collection<io.sundr.codegen.model.TypeParamRef>);

  public abstract io.sundr.codegen.model.WildcardRefFluent$TypeParamRefBoundsNested<A> addNewTypeParamRefBound();

  public abstract io.sundr.codegen.model.WildcardRefFluent$TypeParamRefBoundsNested<A> addNewTypeParamRefBoundLike(io.sundr.codegen.model.TypeParamRef);

  public abstract A addToClassRefBounds(int, io.sundr.codegen.model.ClassRef);

  public abstract A setToClassRefBounds(int, io.sundr.codegen.model.ClassRef);

  public abstract A addToClassRefBounds(io.sundr.codegen.model.ClassRef...);

  public abstract A addAllToClassRefBounds(java.util.Collection<io.sundr.codegen.model.ClassRef>);

  public abstract A removeFromClassRefBounds(io.sundr.codegen.model.ClassRef...);

  public abstract A removeAllFromClassRefBounds(java.util.Collection<io.sundr.codegen.model.ClassRef>);

  public abstract io.sundr.codegen.model.WildcardRefFluent$ClassRefBoundsNested<A> addNewClassRefBound();

  public abstract io.sundr.codegen.model.WildcardRefFluent$ClassRefBoundsNested<A> addNewClassRefBoundLike(io.sundr.codegen.model.ClassRef);
}
