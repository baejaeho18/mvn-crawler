Compiled from "TypeParamDefFluentImpl.java"
public class io.sundr.codegen.model.TypeParamDefFluentImpl<A extends io.sundr.codegen.model.TypeParamDefFluent<A>> extends io.sundr.codegen.model.AttributeSupportFluentImpl<A> implements io.sundr.codegen.model.TypeParamDefFluent<A> {
  private java.lang.String name;

  private java.util.List<io.sundr.builder.VisitableBuilder<? extends io.sundr.codegen.model.ClassRef, ?>> bounds;

  public io.sundr.codegen.model.TypeParamDefFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/sundr/codegen/model/AttributeSupportFluentImpl."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field bounds:Ljava/util/List;
      15: return

  public io.sundr.codegen.model.TypeParamDefFluentImpl(io.sundr.codegen.model.TypeParamDef);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/sundr/codegen/model/AttributeSupportFluentImpl."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field bounds:Ljava/util/List;
      15: aload_0
      16: aload_1
      17: invokevirtual #5                  // Method io/sundr/codegen/model/TypeParamDef.getName:()Ljava/lang/String;
      20: invokevirtual #6                  // Method withName:(Ljava/lang/String;)Lio/sundr/codegen/model/TypeParamDefFluent;
      23: pop
      24: aload_0
      25: aload_1
      26: invokevirtual #7                  // Method io/sundr/codegen/model/TypeParamDef.getBounds:()Ljava/util/List;
      29: invokevirtual #8                  // Method withBounds:(Ljava/util/List;)Lio/sundr/codegen/model/TypeParamDefFluent;
      32: pop
      33: aload_0
      34: aload_1
      35: invokevirtual #9                  // Method io/sundr/codegen/model/TypeParamDef.getAttributes:()Ljava/util/Map;
      38: invokevirtual #10                 // Method withAttributes:(Ljava/util/Map;)Lio/sundr/codegen/model/AttributeSupportFluent;
      41: pop
      42: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field name:Ljava/lang/String;
       4: areturn

  public A withName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field name:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A addToBounds(int, io.sundr.codegen.model.ClassRef);
    Code:
       0: new           #13                 // class io/sundr/codegen/model/ClassRefBuilder
       3: dup
       4: aload_2
       5: invokespecial #14                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
       8: astore_3
       9: aload_0
      10: getfield      #15                 // Field _visitables:Ljava/util/List;
      13: aload_3
      14: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      19: pop
      20: aload_0
      21: getfield      #4                  // Field bounds:Ljava/util/List;
      24: aload_3
      25: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_0
      32: areturn

  public A setToBounds(int, io.sundr.codegen.model.ClassRef);
    Code:
       0: new           #13                 // class io/sundr/codegen/model/ClassRefBuilder
       3: dup
       4: aload_2
       5: invokespecial #14                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
       8: astore_3
       9: aload_0
      10: getfield      #15                 // Field _visitables:Ljava/util/List;
      13: aload_3
      14: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      19: pop
      20: aload_0
      21: getfield      #4                  // Field bounds:Ljava/util/List;
      24: aload_3
      25: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_0
      32: areturn

  public A addToBounds(io.sundr.codegen.model.ClassRef...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     61
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: new           #13                 // class io/sundr/codegen/model/ClassRefBuilder
      23: dup
      24: aload         5
      26: invokespecial #14                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      29: astore        6
      31: aload_0
      32: getfield      #15                 // Field _visitables:Ljava/util/List;
      35: aload         6
      37: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload_0
      44: getfield      #4                  // Field bounds:Ljava/util/List;
      47: aload         6
      49: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: iinc          4, 1
      58: goto          8
      61: aload_0
      62: areturn

  public A addAllToBounds(java.util.Collection<io.sundr.codegen.model.ClassRef>);
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          63
      16: aload_2
      17: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #20                 // class io/sundr/codegen/model/ClassRef
      25: astore_3
      26: new           #13                 // class io/sundr/codegen/model/ClassRefBuilder
      29: dup
      30: aload_3
      31: invokespecial #14                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      34: astore        4
      36: aload_0
      37: getfield      #15                 // Field _visitables:Ljava/util/List;
      40: aload         4
      42: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload_0
      49: getfield      #4                  // Field bounds:Ljava/util/List;
      52: aload         4
      54: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      59: pop
      60: goto          7
      63: aload_0
      64: areturn

  public A removeFromBounds(io.sundr.codegen.model.ClassRef...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     61
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: new           #13                 // class io/sundr/codegen/model/ClassRefBuilder
      23: dup
      24: aload         5
      26: invokespecial #14                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      29: astore        6
      31: aload_0
      32: getfield      #15                 // Field _visitables:Ljava/util/List;
      35: aload         6
      37: invokeinterface #21,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      42: pop
      43: aload_0
      44: getfield      #4                  // Field bounds:Ljava/util/List;
      47: aload         6
      49: invokeinterface #21,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      54: pop
      55: iinc          4, 1
      58: goto          8
      61: aload_0
      62: areturn

  public A removeAllFromBounds(java.util.Collection<io.sundr.codegen.model.ClassRef>);
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          63
      16: aload_2
      17: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #20                 // class io/sundr/codegen/model/ClassRef
      25: astore_3
      26: new           #13                 // class io/sundr/codegen/model/ClassRefBuilder
      29: dup
      30: aload_3
      31: invokespecial #14                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      34: astore        4
      36: aload_0
      37: getfield      #15                 // Field _visitables:Ljava/util/List;
      40: aload         4
      42: invokeinterface #21,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      47: pop
      48: aload_0
      49: getfield      #4                  // Field bounds:Ljava/util/List;
      52: aload         4
      54: invokeinterface #21,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      59: pop
      60: goto          7
      63: aload_0
      64: areturn

  public java.util.List<io.sundr.codegen.model.ClassRef> getBounds();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bounds:Ljava/util/List;
       4: invokestatic  #22                 // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public java.util.List<io.sundr.codegen.model.ClassRef> buildBounds();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bounds:Ljava/util/List;
       4: invokestatic  #22                 // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public io.sundr.codegen.model.ClassRef buildBound(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field bounds:Ljava/util/List;
       4: iload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #24                 // class io/sundr/builder/VisitableBuilder
      13: invokeinterface #25,  1           // InterfaceMethod io/sundr/builder/VisitableBuilder.build:()Ljava/lang/Object;
      18: checkcast     #20                 // class io/sundr/codegen/model/ClassRef
      21: areturn

  public io.sundr.codegen.model.ClassRef buildFirstBound();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bounds:Ljava/util/List;
       4: iconst_0
       5: invokeinterface #23,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #24                 // class io/sundr/builder/VisitableBuilder
      13: invokeinterface #25,  1           // InterfaceMethod io/sundr/builder/VisitableBuilder.build:()Ljava/lang/Object;
      18: checkcast     #20                 // class io/sundr/codegen/model/ClassRef
      21: areturn

  public io.sundr.codegen.model.ClassRef buildLastBound();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bounds:Ljava/util/List;
       4: aload_0
       5: getfield      #4                  // Field bounds:Ljava/util/List;
       8: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: isub
      15: invokeinterface #23,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #24                 // class io/sundr/builder/VisitableBuilder
      23: invokeinterface #25,  1           // InterfaceMethod io/sundr/builder/VisitableBuilder.build:()Ljava/lang/Object;
      28: checkcast     #20                 // class io/sundr/codegen/model/ClassRef
      31: areturn

  public io.sundr.codegen.model.ClassRef buildMatchingBound(io.sundr.builder.Predicate<io.sundr.builder.Builder<? extends io.sundr.codegen.model.ClassRef>>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field bounds:Ljava/util/List;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          52
      19: aload_2
      20: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #28                 // class io/sundr/builder/Builder
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #29,  2           // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      36: ifeq          49
      39: aload_3
      40: invokeinterface #30,  1           // InterfaceMethod io/sundr/builder/Builder.build:()Ljava/lang/Object;
      45: checkcast     #20                 // class io/sundr/codegen/model/ClassRef
      48: areturn
      49: goto          10
      52: aconst_null
      53: areturn

  public A withBounds(java.util.List<io.sundr.codegen.model.ClassRef>);
    Code:
       0: aload_0
       1: getfield      #15                 // Field _visitables:Ljava/util/List;
       4: aload_0
       5: getfield      #4                  // Field bounds:Ljava/util/List;
       8: invokeinterface #31,  2           // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      13: pop
      14: aload_0
      15: getfield      #4                  // Field bounds:Ljava/util/List;
      18: invokeinterface #32,  1           // InterfaceMethod java/util/List.clear:()V
      23: aload_1
      24: ifnull        69
      27: aload_1
      28: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      33: astore_2
      34: aload_2
      35: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          69
      43: aload_2
      44: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #20                 // class io/sundr/codegen/model/ClassRef
      52: astore_3
      53: aload_0
      54: iconst_1
      55: anewarray     #20                 // class io/sundr/codegen/model/ClassRef
      58: dup
      59: iconst_0
      60: aload_3
      61: aastore
      62: invokevirtual #33                 // Method addToBounds:([Lio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/TypeParamDefFluent;
      65: pop
      66: goto          34
      69: aload_0
      70: areturn

  public A withBounds(io.sundr.codegen.model.ClassRef...);
    Code:
       0: aload_0
       1: getfield      #4                  // Field bounds:Ljava/util/List;
       4: invokeinterface #32,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_1
      10: ifnull        53
      13: aload_1
      14: astore_2
      15: aload_2
      16: arraylength
      17: istore_3
      18: iconst_0
      19: istore        4
      21: iload         4
      23: iload_3
      24: if_icmpge     53
      27: aload_2
      28: iload         4
      30: aaload
      31: astore        5
      33: aload_0
      34: iconst_1
      35: anewarray     #20                 // class io/sundr/codegen/model/ClassRef
      38: dup
      39: iconst_0
      40: aload         5
      42: aastore
      43: invokevirtual #33                 // Method addToBounds:([Lio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/TypeParamDefFluent;
      46: pop
      47: iinc          4, 1
      50: goto          21
      53: aload_0
      54: areturn

  public java.lang.Boolean hasBounds();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bounds:Ljava/util/List;
       4: ifnull        23
       7: aload_0
       8: getfield      #4                  // Field bounds:Ljava/util/List;
      11: invokeinterface #34,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: areturn

  public io.sundr.codegen.model.TypeParamDefFluent$BoundsNested<A> addNewBound();
    Code:
       0: new           #35                 // class io/sundr/codegen/model/TypeParamDefFluentImpl$BoundsNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #36                 // Method io/sundr/codegen/model/TypeParamDefFluentImpl$BoundsNestedImpl."<init>":(Lio/sundr/codegen/model/TypeParamDefFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.TypeParamDefFluent$BoundsNested<A> addNewBoundLike(io.sundr.codegen.model.ClassRef);
    Code:
       0: new           #35                 // class io/sundr/codegen/model/TypeParamDefFluentImpl$BoundsNestedImpl
       3: dup
       4: aload_0
       5: iconst_m1
       6: aload_1
       7: invokespecial #37                 // Method io/sundr/codegen/model/TypeParamDefFluentImpl$BoundsNestedImpl."<init>":(Lio/sundr/codegen/model/TypeParamDefFluentImpl;ILio/sundr/codegen/model/ClassRef;)V
      10: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: aload_1
      26: invokespecial #39                 // Method io/sundr/codegen/model/AttributeSupportFluentImpl.equals:(Ljava/lang/Object;)Z
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: aload_1
      35: checkcast     #40                 // class io/sundr/codegen/model/TypeParamDefFluentImpl
      38: astore_2
      39: aload_0
      40: getfield      #11                 // Field name:Ljava/lang/String;
      43: ifnull        63
      46: aload_0
      47: getfield      #11                 // Field name:Ljava/lang/String;
      50: aload_2
      51: getfield      #11                 // Field name:Ljava/lang/String;
      54: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      57: ifne          72
      60: goto          70
      63: aload_2
      64: getfield      #11                 // Field name:Ljava/lang/String;
      67: ifnull        72
      70: iconst_0
      71: ireturn
      72: aload_0
      73: getfield      #4                  // Field bounds:Ljava/util/List;
      76: ifnull        98
      79: aload_0
      80: getfield      #4                  // Field bounds:Ljava/util/List;
      83: aload_2
      84: getfield      #4                  // Field bounds:Ljava/util/List;
      87: invokeinterface #42,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      92: ifne          107
      95: goto          105
      98: aload_2
      99: getfield      #4                  // Field bounds:Ljava/util/List;
     102: ifnull        107
     105: iconst_0
     106: ireturn
     107: iconst_1
     108: ireturn
}
