Compiled from "AnnotationRefFluentImpl.java"
public class io.sundr.codegen.model.AnnotationRefFluentImpl<A extends io.sundr.codegen.model.AnnotationRefFluent<A>> extends io.sundr.codegen.model.AttributeSupportFluentImpl<A> implements io.sundr.codegen.model.AnnotationRefFluent<A> {
  private io.sundr.builder.VisitableBuilder<? extends io.sundr.codegen.model.ClassRef, ?> classRef;

  private java.util.Map<java.lang.String, java.lang.Object> parameters;

  public io.sundr.codegen.model.AnnotationRefFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/sundr/codegen/model/AttributeSupportFluentImpl."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #4                  // Field parameters:Ljava/util/Map;
      15: return

  public io.sundr.codegen.model.AnnotationRefFluentImpl(io.sundr.codegen.model.AnnotationRef);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/sundr/codegen/model/AttributeSupportFluentImpl."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #4                  // Field parameters:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: invokevirtual #5                  // Method io/sundr/codegen/model/AnnotationRef.getClassRef:()Lio/sundr/codegen/model/ClassRef;
      20: invokevirtual #6                  // Method withClassRef:(Lio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/AnnotationRefFluent;
      23: pop
      24: aload_0
      25: aload_1
      26: invokevirtual #7                  // Method io/sundr/codegen/model/AnnotationRef.getParameters:()Ljava/util/Map;
      29: invokevirtual #8                  // Method withParameters:(Ljava/util/Map;)Lio/sundr/codegen/model/AnnotationRefFluent;
      32: pop
      33: aload_0
      34: aload_1
      35: invokevirtual #9                  // Method io/sundr/codegen/model/AnnotationRef.getAttributes:()Ljava/util/Map;
      38: invokevirtual #10                 // Method withAttributes:(Ljava/util/Map;)Lio/sundr/codegen/model/AttributeSupportFluent;
      41: pop
      42: return

  public io.sundr.codegen.model.ClassRef getClassRef();
    Code:
       0: aload_0
       1: getfield      #11                 // Field classRef:Lio/sundr/builder/VisitableBuilder;
       4: ifnull        22
       7: aload_0
       8: getfield      #11                 // Field classRef:Lio/sundr/builder/VisitableBuilder;
      11: invokeinterface #12,  1           // InterfaceMethod io/sundr/builder/VisitableBuilder.build:()Ljava/lang/Object;
      16: checkcast     #13                 // class io/sundr/codegen/model/ClassRef
      19: goto          23
      22: aconst_null
      23: areturn

  public io.sundr.codegen.model.ClassRef buildClassRef();
    Code:
       0: aload_0
       1: getfield      #11                 // Field classRef:Lio/sundr/builder/VisitableBuilder;
       4: ifnull        22
       7: aload_0
       8: getfield      #11                 // Field classRef:Lio/sundr/builder/VisitableBuilder;
      11: invokeinterface #12,  1           // InterfaceMethod io/sundr/builder/VisitableBuilder.build:()Ljava/lang/Object;
      16: checkcast     #13                 // class io/sundr/codegen/model/ClassRef
      19: goto          23
      22: aconst_null
      23: areturn

  public A withClassRef(io.sundr.codegen.model.ClassRef);
    Code:
       0: aload_0
       1: getfield      #14                 // Field _visitables:Ljava/util/List;
       4: aload_0
       5: getfield      #11                 // Field classRef:Lio/sundr/builder/VisitableBuilder;
       8: invokeinterface #15,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      13: pop
      14: aload_1
      15: ifnull        44
      18: aload_0
      19: new           #16                 // class io/sundr/codegen/model/ClassRefBuilder
      22: dup
      23: aload_1
      24: invokespecial #17                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      27: putfield      #11                 // Field classRef:Lio/sundr/builder/VisitableBuilder;
      30: aload_0
      31: getfield      #14                 // Field _visitables:Ljava/util/List;
      34: aload_0
      35: getfield      #11                 // Field classRef:Lio/sundr/builder/VisitableBuilder;
      38: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_0
      45: areturn

  public java.lang.Boolean hasClassRef();
    Code:
       0: aload_0
       1: getfield      #11                 // Field classRef:Lio/sundr/builder/VisitableBuilder;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public io.sundr.codegen.model.AnnotationRefFluent$ClassRefNested<A> withNewClassRef();
    Code:
       0: new           #20                 // class io/sundr/codegen/model/AnnotationRefFluentImpl$ClassRefNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #21                 // Method io/sundr/codegen/model/AnnotationRefFluentImpl$ClassRefNestedImpl."<init>":(Lio/sundr/codegen/model/AnnotationRefFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.AnnotationRefFluent$ClassRefNested<A> withNewClassRefLike(io.sundr.codegen.model.ClassRef);
    Code:
       0: new           #20                 // class io/sundr/codegen/model/AnnotationRefFluentImpl$ClassRefNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #22                 // Method io/sundr/codegen/model/AnnotationRefFluentImpl$ClassRefNestedImpl."<init>":(Lio/sundr/codegen/model/AnnotationRefFluentImpl;Lio/sundr/codegen/model/ClassRef;)V
       9: areturn

  public io.sundr.codegen.model.AnnotationRefFluent$ClassRefNested<A> editClassRef();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #23                 // Method getClassRef:()Lio/sundr/codegen/model/ClassRef;
       5: invokevirtual #24                 // Method withNewClassRefLike:(Lio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/AnnotationRefFluent$ClassRefNested;
       8: areturn

  public io.sundr.codegen.model.AnnotationRefFluent$ClassRefNested<A> editOrNewClassRef();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #23                 // Method getClassRef:()Lio/sundr/codegen/model/ClassRef;
       5: ifnull        15
       8: aload_0
       9: invokevirtual #23                 // Method getClassRef:()Lio/sundr/codegen/model/ClassRef;
      12: goto          25
      15: new           #16                 // class io/sundr/codegen/model/ClassRefBuilder
      18: dup
      19: invokespecial #25                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":()V
      22: invokevirtual #26                 // Method io/sundr/codegen/model/ClassRefBuilder.build:()Lio/sundr/codegen/model/EditableClassRef;
      25: invokevirtual #24                 // Method withNewClassRefLike:(Lio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/AnnotationRefFluent$ClassRefNested;
      28: areturn

  public io.sundr.codegen.model.AnnotationRefFluent$ClassRefNested<A> editOrNewClassRefLike(io.sundr.codegen.model.ClassRef);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #23                 // Method getClassRef:()Lio/sundr/codegen/model/ClassRef;
       5: ifnull        15
       8: aload_0
       9: invokevirtual #23                 // Method getClassRef:()Lio/sundr/codegen/model/ClassRef;
      12: goto          16
      15: aload_1
      16: invokevirtual #24                 // Method withNewClassRefLike:(Lio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/AnnotationRefFluent$ClassRefNested;
      19: areturn

  public A addToParameters(java.lang.String, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        20
       4: aload_2
       5: ifnull        20
       8: aload_0
       9: getfield      #4                  // Field parameters:Ljava/util/Map;
      12: aload_1
      13: aload_2
      14: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: areturn

  public A addToParameters(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnull        14
       4: aload_0
       5: getfield      #4                  // Field parameters:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #28,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      14: aload_0
      15: areturn

  public A removeFromParameters(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: getfield      #4                  // Field parameters:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #29,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: areturn

  public A removeFromParameters(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnull        46
       4: aload_1
       5: invokeinterface #30,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      10: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          46
      25: aload_2
      26: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: astore_3
      32: aload_0
      33: getfield      #4                  // Field parameters:Ljava/util/Map;
      36: aload_3
      37: invokeinterface #29,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: goto          16
      46: aload_0
      47: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getParameters();
    Code:
       0: aload_0
       1: getfield      #4                  // Field parameters:Ljava/util/Map;
       4: areturn

  public A withParameters(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field parameters:Ljava/util/Map;
       4: invokeinterface #34,  1           // InterfaceMethod java/util/Map.clear:()V
       9: aload_1
      10: ifnull        23
      13: aload_0
      14: getfield      #4                  // Field parameters:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #28,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      23: aload_0
      24: areturn

  public java.lang.Boolean hasParameters();
    Code:
       0: aload_0
       1: getfield      #4                  // Field parameters:Ljava/util/Map;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: aload_1
      26: invokespecial #36                 // Method io/sundr/codegen/model/AttributeSupportFluentImpl.equals:(Ljava/lang/Object;)Z
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: aload_1
      35: checkcast     #37                 // class io/sundr/codegen/model/AnnotationRefFluentImpl
      38: astore_2
      39: aload_0
      40: getfield      #11                 // Field classRef:Lio/sundr/builder/VisitableBuilder;
      43: ifnull        63
      46: aload_0
      47: getfield      #11                 // Field classRef:Lio/sundr/builder/VisitableBuilder;
      50: aload_2
      51: getfield      #11                 // Field classRef:Lio/sundr/builder/VisitableBuilder;
      54: invokevirtual #38                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      57: ifne          72
      60: goto          70
      63: aload_2
      64: getfield      #11                 // Field classRef:Lio/sundr/builder/VisitableBuilder;
      67: ifnull        72
      70: iconst_0
      71: ireturn
      72: aload_0
      73: getfield      #4                  // Field parameters:Ljava/util/Map;
      76: ifnull        98
      79: aload_0
      80: getfield      #4                  // Field parameters:Ljava/util/Map;
      83: aload_2
      84: getfield      #4                  // Field parameters:Ljava/util/Map;
      87: invokeinterface #39,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      92: ifne          107
      95: goto          105
      98: aload_2
      99: getfield      #4                  // Field parameters:Ljava/util/Map;
     102: ifnull        107
     105: iconst_0
     106: ireturn
     107: iconst_1
     108: ireturn
}
