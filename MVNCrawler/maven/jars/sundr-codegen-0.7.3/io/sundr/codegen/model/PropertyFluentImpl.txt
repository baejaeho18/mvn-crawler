Compiled from "PropertyFluentImpl.java"
public class io.sundr.codegen.model.PropertyFluentImpl<A extends io.sundr.codegen.model.PropertyFluent<A>> extends io.sundr.codegen.model.ModifierSupportFluentImpl<A> implements io.sundr.codegen.model.PropertyFluent<A> {
  private java.util.List<io.sundr.builder.VisitableBuilder<? extends io.sundr.codegen.model.AnnotationRef, ?>> annotations;

  private io.sundr.builder.VisitableBuilder<? extends io.sundr.codegen.model.TypeRef, ?> typeRef;

  private java.lang.String name;

  public io.sundr.codegen.model.PropertyFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/sundr/codegen/model/ModifierSupportFluentImpl."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field annotations:Ljava/util/List;
      15: return

  public io.sundr.codegen.model.PropertyFluentImpl(io.sundr.codegen.model.Property);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/sundr/codegen/model/ModifierSupportFluentImpl."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field annotations:Ljava/util/List;
      15: aload_0
      16: aload_1
      17: invokevirtual #5                  // Method io/sundr/codegen/model/Property.getAnnotations:()Ljava/util/List;
      20: invokevirtual #6                  // Method withAnnotations:(Ljava/util/List;)Lio/sundr/codegen/model/PropertyFluent;
      23: pop
      24: aload_0
      25: aload_1
      26: invokevirtual #7                  // Method io/sundr/codegen/model/Property.getTypeRef:()Lio/sundr/codegen/model/TypeRef;
      29: invokevirtual #8                  // Method withTypeRef:(Lio/sundr/codegen/model/TypeRef;)Lio/sundr/codegen/model/PropertyFluent;
      32: pop
      33: aload_0
      34: aload_1
      35: invokevirtual #9                  // Method io/sundr/codegen/model/Property.getName:()Ljava/lang/String;
      38: invokevirtual #10                 // Method withName:(Ljava/lang/String;)Lio/sundr/codegen/model/PropertyFluent;
      41: pop
      42: aload_0
      43: aload_1
      44: invokevirtual #11                 // Method io/sundr/codegen/model/Property.getModifiers:()I
      47: invokevirtual #12                 // Method withModifiers:(I)Lio/sundr/codegen/model/ModifierSupportFluent;
      50: pop
      51: aload_0
      52: aload_1
      53: invokevirtual #13                 // Method io/sundr/codegen/model/Property.getAttributes:()Ljava/util/Map;
      56: invokevirtual #14                 // Method withAttributes:(Ljava/util/Map;)Lio/sundr/codegen/model/AttributeSupportFluent;
      59: pop
      60: return

  public A addToAnnotations(int, io.sundr.codegen.model.AnnotationRef);
    Code:
       0: new           #15                 // class io/sundr/codegen/model/AnnotationRefBuilder
       3: dup
       4: aload_2
       5: invokespecial #16                 // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
       8: astore_3
       9: aload_0
      10: getfield      #17                 // Field _visitables:Ljava/util/List;
      13: aload_3
      14: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      19: pop
      20: aload_0
      21: getfield      #4                  // Field annotations:Ljava/util/List;
      24: aload_3
      25: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_0
      32: areturn

  public A setToAnnotations(int, io.sundr.codegen.model.AnnotationRef);
    Code:
       0: new           #15                 // class io/sundr/codegen/model/AnnotationRefBuilder
       3: dup
       4: aload_2
       5: invokespecial #16                 // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
       8: astore_3
       9: aload_0
      10: getfield      #17                 // Field _visitables:Ljava/util/List;
      13: aload_3
      14: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      19: pop
      20: aload_0
      21: getfield      #4                  // Field annotations:Ljava/util/List;
      24: aload_3
      25: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_0
      32: areturn

  public A addToAnnotations(io.sundr.codegen.model.AnnotationRef...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     61
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: new           #15                 // class io/sundr/codegen/model/AnnotationRefBuilder
      23: dup
      24: aload         5
      26: invokespecial #16                 // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
      29: astore        6
      31: aload_0
      32: getfield      #17                 // Field _visitables:Ljava/util/List;
      35: aload         6
      37: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload_0
      44: getfield      #4                  // Field annotations:Ljava/util/List;
      47: aload         6
      49: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: iinc          4, 1
      58: goto          8
      61: aload_0
      62: areturn

  public A addAllToAnnotations(java.util.Collection<io.sundr.codegen.model.AnnotationRef>);
    Code:
       0: aload_1
       1: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          63
      16: aload_2
      17: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #22                 // class io/sundr/codegen/model/AnnotationRef
      25: astore_3
      26: new           #15                 // class io/sundr/codegen/model/AnnotationRefBuilder
      29: dup
      30: aload_3
      31: invokespecial #16                 // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
      34: astore        4
      36: aload_0
      37: getfield      #17                 // Field _visitables:Ljava/util/List;
      40: aload         4
      42: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload_0
      49: getfield      #4                  // Field annotations:Ljava/util/List;
      52: aload         4
      54: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      59: pop
      60: goto          7
      63: aload_0
      64: areturn

  public A removeFromAnnotations(io.sundr.codegen.model.AnnotationRef...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     61
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: new           #15                 // class io/sundr/codegen/model/AnnotationRefBuilder
      23: dup
      24: aload         5
      26: invokespecial #16                 // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
      29: astore        6
      31: aload_0
      32: getfield      #17                 // Field _visitables:Ljava/util/List;
      35: aload         6
      37: invokeinterface #23,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      42: pop
      43: aload_0
      44: getfield      #4                  // Field annotations:Ljava/util/List;
      47: aload         6
      49: invokeinterface #23,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      54: pop
      55: iinc          4, 1
      58: goto          8
      61: aload_0
      62: areturn

  public A removeAllFromAnnotations(java.util.Collection<io.sundr.codegen.model.AnnotationRef>);
    Code:
       0: aload_1
       1: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          63
      16: aload_2
      17: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #22                 // class io/sundr/codegen/model/AnnotationRef
      25: astore_3
      26: new           #15                 // class io/sundr/codegen/model/AnnotationRefBuilder
      29: dup
      30: aload_3
      31: invokespecial #16                 // Method io/sundr/codegen/model/AnnotationRefBuilder."<init>":(Lio/sundr/codegen/model/AnnotationRef;)V
      34: astore        4
      36: aload_0
      37: getfield      #17                 // Field _visitables:Ljava/util/List;
      40: aload         4
      42: invokeinterface #23,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      47: pop
      48: aload_0
      49: getfield      #4                  // Field annotations:Ljava/util/List;
      52: aload         4
      54: invokeinterface #23,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      59: pop
      60: goto          7
      63: aload_0
      64: areturn

  public java.util.List<io.sundr.codegen.model.AnnotationRef> getAnnotations();
    Code:
       0: aload_0
       1: getfield      #4                  // Field annotations:Ljava/util/List;
       4: invokestatic  #24                 // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public java.util.List<io.sundr.codegen.model.AnnotationRef> buildAnnotations();
    Code:
       0: aload_0
       1: getfield      #4                  // Field annotations:Ljava/util/List;
       4: invokestatic  #24                 // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public io.sundr.codegen.model.AnnotationRef buildAnnotation(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field annotations:Ljava/util/List;
       4: iload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #26                 // class io/sundr/builder/VisitableBuilder
      13: invokeinterface #27,  1           // InterfaceMethod io/sundr/builder/VisitableBuilder.build:()Ljava/lang/Object;
      18: checkcast     #22                 // class io/sundr/codegen/model/AnnotationRef
      21: areturn

  public io.sundr.codegen.model.AnnotationRef buildFirstAnnotation();
    Code:
       0: aload_0
       1: getfield      #4                  // Field annotations:Ljava/util/List;
       4: iconst_0
       5: invokeinterface #25,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #26                 // class io/sundr/builder/VisitableBuilder
      13: invokeinterface #27,  1           // InterfaceMethod io/sundr/builder/VisitableBuilder.build:()Ljava/lang/Object;
      18: checkcast     #22                 // class io/sundr/codegen/model/AnnotationRef
      21: areturn

  public io.sundr.codegen.model.AnnotationRef buildLastAnnotation();
    Code:
       0: aload_0
       1: getfield      #4                  // Field annotations:Ljava/util/List;
       4: aload_0
       5: getfield      #4                  // Field annotations:Ljava/util/List;
       8: invokeinterface #28,  1           // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: isub
      15: invokeinterface #25,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #26                 // class io/sundr/builder/VisitableBuilder
      23: invokeinterface #27,  1           // InterfaceMethod io/sundr/builder/VisitableBuilder.build:()Ljava/lang/Object;
      28: checkcast     #22                 // class io/sundr/codegen/model/AnnotationRef
      31: areturn

  public io.sundr.codegen.model.AnnotationRef buildMatchingAnnotation(io.sundr.builder.Predicate<io.sundr.builder.Builder<? extends io.sundr.codegen.model.AnnotationRef>>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field annotations:Ljava/util/List;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          52
      19: aload_2
      20: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #30                 // class io/sundr/builder/Builder
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #31,  2           // InterfaceMethod io/sundr/builder/Predicate.apply:(Ljava/lang/Object;)Z
      36: ifeq          49
      39: aload_3
      40: invokeinterface #32,  1           // InterfaceMethod io/sundr/builder/Builder.build:()Ljava/lang/Object;
      45: checkcast     #22                 // class io/sundr/codegen/model/AnnotationRef
      48: areturn
      49: goto          10
      52: aconst_null
      53: areturn

  public A withAnnotations(java.util.List<io.sundr.codegen.model.AnnotationRef>);
    Code:
       0: aload_0
       1: getfield      #17                 // Field _visitables:Ljava/util/List;
       4: aload_0
       5: getfield      #4                  // Field annotations:Ljava/util/List;
       8: invokeinterface #33,  2           // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      13: pop
      14: aload_0
      15: getfield      #4                  // Field annotations:Ljava/util/List;
      18: invokeinterface #34,  1           // InterfaceMethod java/util/List.clear:()V
      23: aload_1
      24: ifnull        69
      27: aload_1
      28: invokeinterface #29,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      33: astore_2
      34: aload_2
      35: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          69
      43: aload_2
      44: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #22                 // class io/sundr/codegen/model/AnnotationRef
      52: astore_3
      53: aload_0
      54: iconst_1
      55: anewarray     #22                 // class io/sundr/codegen/model/AnnotationRef
      58: dup
      59: iconst_0
      60: aload_3
      61: aastore
      62: invokevirtual #35                 // Method addToAnnotations:([Lio/sundr/codegen/model/AnnotationRef;)Lio/sundr/codegen/model/PropertyFluent;
      65: pop
      66: goto          34
      69: aload_0
      70: areturn

  public A withAnnotations(io.sundr.codegen.model.AnnotationRef...);
    Code:
       0: aload_0
       1: getfield      #4                  // Field annotations:Ljava/util/List;
       4: invokeinterface #34,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_1
      10: ifnull        53
      13: aload_1
      14: astore_2
      15: aload_2
      16: arraylength
      17: istore_3
      18: iconst_0
      19: istore        4
      21: iload         4
      23: iload_3
      24: if_icmpge     53
      27: aload_2
      28: iload         4
      30: aaload
      31: astore        5
      33: aload_0
      34: iconst_1
      35: anewarray     #22                 // class io/sundr/codegen/model/AnnotationRef
      38: dup
      39: iconst_0
      40: aload         5
      42: aastore
      43: invokevirtual #35                 // Method addToAnnotations:([Lio/sundr/codegen/model/AnnotationRef;)Lio/sundr/codegen/model/PropertyFluent;
      46: pop
      47: iinc          4, 1
      50: goto          21
      53: aload_0
      54: areturn

  public java.lang.Boolean hasAnnotations();
    Code:
       0: aload_0
       1: getfield      #4                  // Field annotations:Ljava/util/List;
       4: ifnull        23
       7: aload_0
       8: getfield      #4                  // Field annotations:Ljava/util/List;
      11: invokeinterface #36,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokestatic  #37                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: areturn

  public io.sundr.codegen.model.PropertyFluent$AnnotationsNested<A> addNewAnnotation();
    Code:
       0: new           #38                 // class io/sundr/codegen/model/PropertyFluentImpl$AnnotationsNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #39                 // Method io/sundr/codegen/model/PropertyFluentImpl$AnnotationsNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.PropertyFluent$AnnotationsNested<A> addNewAnnotationLike(io.sundr.codegen.model.AnnotationRef);
    Code:
       0: new           #38                 // class io/sundr/codegen/model/PropertyFluentImpl$AnnotationsNestedImpl
       3: dup
       4: aload_0
       5: iconst_m1
       6: aload_1
       7: invokespecial #40                 // Method io/sundr/codegen/model/PropertyFluentImpl$AnnotationsNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;ILio/sundr/codegen/model/AnnotationRef;)V
      10: areturn

  public io.sundr.codegen.model.TypeRef getTypeRef();
    Code:
       0: aload_0
       1: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
       4: ifnull        22
       7: aload_0
       8: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      11: invokeinterface #27,  1           // InterfaceMethod io/sundr/builder/VisitableBuilder.build:()Ljava/lang/Object;
      16: checkcast     #42                 // class io/sundr/codegen/model/TypeRef
      19: goto          23
      22: aconst_null
      23: areturn

  public io.sundr.codegen.model.TypeRef buildTypeRef();
    Code:
       0: aload_0
       1: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
       4: ifnull        22
       7: aload_0
       8: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      11: invokeinterface #27,  1           // InterfaceMethod io/sundr/builder/VisitableBuilder.build:()Ljava/lang/Object;
      16: checkcast     #42                 // class io/sundr/codegen/model/TypeRef
      19: goto          23
      22: aconst_null
      23: areturn

  public A withTypeRef(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: getfield      #17                 // Field _visitables:Ljava/util/List;
       4: aload_0
       5: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
       8: invokeinterface #23,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      13: pop
      14: aload_1
      15: instanceof    #43                 // class io/sundr/codegen/model/VoidRef
      18: ifeq          50
      21: aload_0
      22: new           #44                 // class io/sundr/codegen/model/VoidRefBuilder
      25: dup
      26: aload_1
      27: checkcast     #43                 // class io/sundr/codegen/model/VoidRef
      30: invokespecial #45                 // Method io/sundr/codegen/model/VoidRefBuilder."<init>":(Lio/sundr/codegen/model/VoidRef;)V
      33: putfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      36: aload_0
      37: getfield      #17                 // Field _visitables:Ljava/util/List;
      40: aload_0
      41: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      44: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: aload_1
      51: instanceof    #46                 // class io/sundr/codegen/model/WildcardRef
      54: ifeq          86
      57: aload_0
      58: new           #47                 // class io/sundr/codegen/model/WildcardRefBuilder
      61: dup
      62: aload_1
      63: checkcast     #46                 // class io/sundr/codegen/model/WildcardRef
      66: invokespecial #48                 // Method io/sundr/codegen/model/WildcardRefBuilder."<init>":(Lio/sundr/codegen/model/WildcardRef;)V
      69: putfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      72: aload_0
      73: getfield      #17                 // Field _visitables:Ljava/util/List;
      76: aload_0
      77: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      80: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      85: pop
      86: aload_1
      87: instanceof    #49                 // class io/sundr/codegen/model/PrimitiveRef
      90: ifeq          122
      93: aload_0
      94: new           #50                 // class io/sundr/codegen/model/PrimitiveRefBuilder
      97: dup
      98: aload_1
      99: checkcast     #49                 // class io/sundr/codegen/model/PrimitiveRef
     102: invokespecial #51                 // Method io/sundr/codegen/model/PrimitiveRefBuilder."<init>":(Lio/sundr/codegen/model/PrimitiveRef;)V
     105: putfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
     108: aload_0
     109: getfield      #17                 // Field _visitables:Ljava/util/List;
     112: aload_0
     113: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
     116: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     121: pop
     122: aload_1
     123: instanceof    #52                 // class io/sundr/codegen/model/TypeParamRef
     126: ifeq          158
     129: aload_0
     130: new           #53                 // class io/sundr/codegen/model/TypeParamRefBuilder
     133: dup
     134: aload_1
     135: checkcast     #52                 // class io/sundr/codegen/model/TypeParamRef
     138: invokespecial #54                 // Method io/sundr/codegen/model/TypeParamRefBuilder."<init>":(Lio/sundr/codegen/model/TypeParamRef;)V
     141: putfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
     144: aload_0
     145: getfield      #17                 // Field _visitables:Ljava/util/List;
     148: aload_0
     149: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
     152: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     157: pop
     158: aload_1
     159: instanceof    #55                 // class io/sundr/codegen/model/ClassRef
     162: ifeq          194
     165: aload_0
     166: new           #56                 // class io/sundr/codegen/model/ClassRefBuilder
     169: dup
     170: aload_1
     171: checkcast     #55                 // class io/sundr/codegen/model/ClassRef
     174: invokespecial #57                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
     177: putfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
     180: aload_0
     181: getfield      #17                 // Field _visitables:Ljava/util/List;
     184: aload_0
     185: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
     188: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     193: pop
     194: aload_0
     195: areturn

  public java.lang.Boolean hasTypeRef();
    Code:
       0: aload_0
       1: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #37                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withVoidRefTypeRef(io.sundr.codegen.model.VoidRef);
    Code:
       0: aload_0
       1: getfield      #17                 // Field _visitables:Ljava/util/List;
       4: aload_0
       5: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
       8: invokeinterface #23,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      13: pop
      14: aload_1
      15: ifnull        44
      18: aload_0
      19: new           #44                 // class io/sundr/codegen/model/VoidRefBuilder
      22: dup
      23: aload_1
      24: invokespecial #45                 // Method io/sundr/codegen/model/VoidRefBuilder."<init>":(Lio/sundr/codegen/model/VoidRef;)V
      27: putfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      30: aload_0
      31: getfield      #17                 // Field _visitables:Ljava/util/List;
      34: aload_0
      35: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      38: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_0
      45: areturn

  public io.sundr.codegen.model.PropertyFluent$VoidRefTypeRefNested<A> withNewVoidRefTypeRef();
    Code:
       0: new           #58                 // class io/sundr/codegen/model/PropertyFluentImpl$VoidRefTypeRefNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #59                 // Method io/sundr/codegen/model/PropertyFluentImpl$VoidRefTypeRefNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.PropertyFluent$VoidRefTypeRefNested<A> withNewVoidRefTypeRefLike(io.sundr.codegen.model.VoidRef);
    Code:
       0: new           #58                 // class io/sundr/codegen/model/PropertyFluentImpl$VoidRefTypeRefNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #60                 // Method io/sundr/codegen/model/PropertyFluentImpl$VoidRefTypeRefNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;Lio/sundr/codegen/model/VoidRef;)V
       9: areturn

  public A withWildcardRefTypeRef(io.sundr.codegen.model.WildcardRef);
    Code:
       0: aload_0
       1: getfield      #17                 // Field _visitables:Ljava/util/List;
       4: aload_0
       5: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
       8: invokeinterface #23,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      13: pop
      14: aload_1
      15: ifnull        44
      18: aload_0
      19: new           #47                 // class io/sundr/codegen/model/WildcardRefBuilder
      22: dup
      23: aload_1
      24: invokespecial #48                 // Method io/sundr/codegen/model/WildcardRefBuilder."<init>":(Lio/sundr/codegen/model/WildcardRef;)V
      27: putfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      30: aload_0
      31: getfield      #17                 // Field _visitables:Ljava/util/List;
      34: aload_0
      35: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      38: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_0
      45: areturn

  public io.sundr.codegen.model.PropertyFluent$WildcardRefTypeRefNested<A> withNewWildcardRefTypeRef();
    Code:
       0: new           #61                 // class io/sundr/codegen/model/PropertyFluentImpl$WildcardRefTypeRefNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #62                 // Method io/sundr/codegen/model/PropertyFluentImpl$WildcardRefTypeRefNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.PropertyFluent$WildcardRefTypeRefNested<A> withNewWildcardRefTypeRefLike(io.sundr.codegen.model.WildcardRef);
    Code:
       0: new           #61                 // class io/sundr/codegen/model/PropertyFluentImpl$WildcardRefTypeRefNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #63                 // Method io/sundr/codegen/model/PropertyFluentImpl$WildcardRefTypeRefNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;Lio/sundr/codegen/model/WildcardRef;)V
       9: areturn

  public A withPrimitiveRefTypeRef(io.sundr.codegen.model.PrimitiveRef);
    Code:
       0: aload_0
       1: getfield      #17                 // Field _visitables:Ljava/util/List;
       4: aload_0
       5: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
       8: invokeinterface #23,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      13: pop
      14: aload_1
      15: ifnull        44
      18: aload_0
      19: new           #50                 // class io/sundr/codegen/model/PrimitiveRefBuilder
      22: dup
      23: aload_1
      24: invokespecial #51                 // Method io/sundr/codegen/model/PrimitiveRefBuilder."<init>":(Lio/sundr/codegen/model/PrimitiveRef;)V
      27: putfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      30: aload_0
      31: getfield      #17                 // Field _visitables:Ljava/util/List;
      34: aload_0
      35: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      38: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_0
      45: areturn

  public io.sundr.codegen.model.PropertyFluent$PrimitiveRefTypeRefNested<A> withNewPrimitiveRefTypeRef();
    Code:
       0: new           #64                 // class io/sundr/codegen/model/PropertyFluentImpl$PrimitiveRefTypeRefNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #65                 // Method io/sundr/codegen/model/PropertyFluentImpl$PrimitiveRefTypeRefNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.PropertyFluent$PrimitiveRefTypeRefNested<A> withNewPrimitiveRefTypeRefLike(io.sundr.codegen.model.PrimitiveRef);
    Code:
       0: new           #64                 // class io/sundr/codegen/model/PropertyFluentImpl$PrimitiveRefTypeRefNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #66                 // Method io/sundr/codegen/model/PropertyFluentImpl$PrimitiveRefTypeRefNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;Lio/sundr/codegen/model/PrimitiveRef;)V
       9: areturn

  public A withTypeParamRefTypeRef(io.sundr.codegen.model.TypeParamRef);
    Code:
       0: aload_0
       1: getfield      #17                 // Field _visitables:Ljava/util/List;
       4: aload_0
       5: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
       8: invokeinterface #23,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      13: pop
      14: aload_1
      15: ifnull        44
      18: aload_0
      19: new           #53                 // class io/sundr/codegen/model/TypeParamRefBuilder
      22: dup
      23: aload_1
      24: invokespecial #54                 // Method io/sundr/codegen/model/TypeParamRefBuilder."<init>":(Lio/sundr/codegen/model/TypeParamRef;)V
      27: putfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      30: aload_0
      31: getfield      #17                 // Field _visitables:Ljava/util/List;
      34: aload_0
      35: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      38: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_0
      45: areturn

  public io.sundr.codegen.model.PropertyFluent$TypeParamRefTypeRefNested<A> withNewTypeParamRefTypeRef();
    Code:
       0: new           #67                 // class io/sundr/codegen/model/PropertyFluentImpl$TypeParamRefTypeRefNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #68                 // Method io/sundr/codegen/model/PropertyFluentImpl$TypeParamRefTypeRefNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.PropertyFluent$TypeParamRefTypeRefNested<A> withNewTypeParamRefTypeRefLike(io.sundr.codegen.model.TypeParamRef);
    Code:
       0: new           #67                 // class io/sundr/codegen/model/PropertyFluentImpl$TypeParamRefTypeRefNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #69                 // Method io/sundr/codegen/model/PropertyFluentImpl$TypeParamRefTypeRefNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;Lio/sundr/codegen/model/TypeParamRef;)V
       9: areturn

  public A withClassRefTypeRef(io.sundr.codegen.model.ClassRef);
    Code:
       0: aload_0
       1: getfield      #17                 // Field _visitables:Ljava/util/List;
       4: aload_0
       5: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
       8: invokeinterface #23,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      13: pop
      14: aload_1
      15: ifnull        44
      18: aload_0
      19: new           #56                 // class io/sundr/codegen/model/ClassRefBuilder
      22: dup
      23: aload_1
      24: invokespecial #57                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
      27: putfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      30: aload_0
      31: getfield      #17                 // Field _visitables:Ljava/util/List;
      34: aload_0
      35: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      38: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_0
      45: areturn

  public io.sundr.codegen.model.PropertyFluent$ClassRefTypeRefNested<A> withNewClassRefTypeRef();
    Code:
       0: new           #70                 // class io/sundr/codegen/model/PropertyFluentImpl$ClassRefTypeRefNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #71                 // Method io/sundr/codegen/model/PropertyFluentImpl$ClassRefTypeRefNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;)V
       8: areturn

  public io.sundr.codegen.model.PropertyFluent$ClassRefTypeRefNested<A> withNewClassRefTypeRefLike(io.sundr.codegen.model.ClassRef);
    Code:
       0: new           #70                 // class io/sundr/codegen/model/PropertyFluentImpl$ClassRefTypeRefNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #72                 // Method io/sundr/codegen/model/PropertyFluentImpl$ClassRefTypeRefNestedImpl."<init>":(Lio/sundr/codegen/model/PropertyFluentImpl;Lio/sundr/codegen/model/ClassRef;)V
       9: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #73                 // Field name:Ljava/lang/String;
       4: areturn

  public A withName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #73                 // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasName();
    Code:
       0: aload_0
       1: getfield      #73                 // Field name:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #37                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #74                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #74                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: aload_1
      26: invokespecial #75                 // Method io/sundr/codegen/model/ModifierSupportFluentImpl.equals:(Ljava/lang/Object;)Z
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: aload_1
      35: checkcast     #76                 // class io/sundr/codegen/model/PropertyFluentImpl
      38: astore_2
      39: aload_0
      40: getfield      #4                  // Field annotations:Ljava/util/List;
      43: ifnull        65
      46: aload_0
      47: getfield      #4                  // Field annotations:Ljava/util/List;
      50: aload_2
      51: getfield      #4                  // Field annotations:Ljava/util/List;
      54: invokeinterface #77,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      59: ifne          74
      62: goto          72
      65: aload_2
      66: getfield      #4                  // Field annotations:Ljava/util/List;
      69: ifnull        74
      72: iconst_0
      73: ireturn
      74: aload_0
      75: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      78: ifnull        98
      81: aload_0
      82: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      85: aload_2
      86: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
      89: invokevirtual #78                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifne          107
      95: goto          105
      98: aload_2
      99: getfield      #41                 // Field typeRef:Lio/sundr/builder/VisitableBuilder;
     102: ifnull        107
     105: iconst_0
     106: ireturn
     107: aload_0
     108: getfield      #73                 // Field name:Ljava/lang/String;
     111: ifnull        131
     114: aload_0
     115: getfield      #73                 // Field name:Ljava/lang/String;
     118: aload_2
     119: getfield      #73                 // Field name:Ljava/lang/String;
     122: invokevirtual #79                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     125: ifne          140
     128: goto          138
     131: aload_2
     132: getfield      #73                 // Field name:Ljava/lang/String;
     135: ifnull        140
     138: iconst_0
     139: ireturn
     140: iconst_1
     141: ireturn
}
