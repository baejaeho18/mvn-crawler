Compiled from "PrimitiveRef.java"
public class io.sundr.codegen.model.PrimitiveRef extends io.sundr.codegen.model.TypeRef {
  private final java.lang.String name;

  private final int dimensions;

  public io.sundr.codegen.model.PrimitiveRef(java.lang.String, int, java.util.Map<io.sundr.codegen.model.AttributeKey, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #1                  // Method io/sundr/codegen/model/TypeRef."<init>":(Ljava/util/Map;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field name:Ljava/lang/String;
      10: aload_0
      11: iload_2
      12: putfield      #3                  // Field dimensions:I
      15: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public int getDimensions();
    Code:
       0: aload_0
       1: getfield      #3                  // Field dimensions:I
       4: ireturn

  public io.sundr.codegen.model.PrimitiveRef withDimensions(int);
    Code:
       0: new           #4                  // class io/sundr/codegen/model/PrimitiveRefBuilder
       3: dup
       4: aload_0
       5: invokespecial #5                  // Method io/sundr/codegen/model/PrimitiveRefBuilder."<init>":(Lio/sundr/codegen/model/PrimitiveRef;)V
       8: iload_1
       9: invokevirtual #6                  // Method io/sundr/codegen/model/PrimitiveRefBuilder.withDimensions:(I)Lio/sundr/codegen/model/PrimitiveRefFluent;
      12: checkcast     #4                  // class io/sundr/codegen/model/PrimitiveRefBuilder
      15: invokevirtual #7                  // Method io/sundr/codegen/model/PrimitiveRefBuilder.build:()Lio/sundr/codegen/model/EditablePrimitiveRef;
      18: areturn

  public boolean isAssignableFrom(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #8                  // class io/sundr/codegen/model/ClassRef
      17: ifeq          70
      20: aload_1
      21: checkcast     #8                  // class io/sundr/codegen/model/ClassRef
      24: invokevirtual #9                  // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
      27: invokevirtual #10                 // Method io/sundr/codegen/model/TypeDef.getPackageName:()Ljava/lang/String;
      30: ldc           #12                 // String java.lang
      32: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      35: ifne          40
      38: iconst_0
      39: ireturn
      40: aload_1
      41: checkcast     #8                  // class io/sundr/codegen/model/ClassRef
      44: invokevirtual #9                  // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
      47: invokevirtual #14                 // Method io/sundr/codegen/model/TypeDef.getName:()Ljava/lang/String;
      50: invokevirtual #15                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      53: aload_0
      54: getfield      #2                  // Field name:Ljava/lang/String;
      57: invokevirtual #15                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      60: invokevirtual #16                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      63: ifne          68
      66: iconst_0
      67: ireturn
      68: iconst_1
      69: ireturn
      70: aload_1
      71: ifnull        85
      74: aload_0
      75: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      78: aload_1
      79: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      82: if_acmpeq     87
      85: iconst_0
      86: ireturn
      87: aload_1
      88: checkcast     #18                 // class io/sundr/codegen/model/PrimitiveRef
      91: astore_2
      92: aload_0
      93: getfield      #3                  // Field dimensions:I
      96: aload_2
      97: getfield      #3                  // Field dimensions:I
     100: if_icmpeq     105
     103: iconst_0
     104: ireturn
     105: aload_0
     106: getfield      #2                  // Field name:Ljava/lang/String;
     109: ifnull        126
     112: aload_0
     113: getfield      #2                  // Field name:Ljava/lang/String;
     116: aload_2
     117: getfield      #2                  // Field name:Ljava/lang/String;
     120: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     123: goto          138
     126: aload_2
     127: getfield      #2                  // Field name:Ljava/lang/String;
     130: ifnonnull     137
     133: iconst_1
     134: goto          138
     137: iconst_0
     138: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #18                 // class io/sundr/codegen/model/PrimitiveRef
      28: astore_2
      29: aload_0
      30: getfield      #3                  // Field dimensions:I
      33: aload_2
      34: getfield      #3                  // Field dimensions:I
      37: if_icmpeq     42
      40: iconst_0
      41: ireturn
      42: aload_0
      43: getfield      #2                  // Field name:Ljava/lang/String;
      46: ifnull        63
      49: aload_0
      50: getfield      #2                  // Field name:Ljava/lang/String;
      53: aload_2
      54: getfield      #2                  // Field name:Ljava/lang/String;
      57: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      60: goto          75
      63: aload_2
      64: getfield      #2                  // Field name:Ljava/lang/String;
      67: ifnonnull     74
      70: iconst_1
      71: goto          75
      74: iconst_0
      75: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: ifnull        17
       7: aload_0
       8: getfield      #2                  // Field name:Ljava/lang/String;
      11: invokevirtual #19                 // Method java/lang/String.hashCode:()I
      14: goto          18
      17: iconst_0
      18: istore_1
      19: bipush        31
      21: iload_1
      22: imul
      23: aload_0
      24: getfield      #3                  // Field dimensions:I
      27: iadd
      28: istore_1
      29: iload_1
      30: ireturn

  public java.lang.String toString();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field name:Ljava/lang/String;
      13: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: pop
      17: iconst_0
      18: istore_2
      19: iload_2
      20: aload_0
      21: getfield      #3                  // Field dimensions:I
      24: if_icmpge     40
      27: aload_1
      28: ldc           #23                 // String []
      30: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: pop
      34: iinc          2, 1
      37: goto          19
      40: aload_1
      41: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: areturn

  public io.sundr.codegen.model.TypeRef withDimensions(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #25                 // Method withDimensions:(I)Lio/sundr/codegen/model/PrimitiveRef;
       5: areturn
}
