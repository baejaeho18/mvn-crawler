Compiled from "ClassRef.java"
public class io.sundr.codegen.model.ClassRef extends io.sundr.codegen.model.TypeRef {
  public static final java.lang.String UNKNOWN;

  public static final java.lang.String BRACKETS;

  public static final io.sundr.codegen.model.ClassRef OBJECT;

  private final io.sundr.codegen.model.TypeDef definition;

  private final java.lang.String fullyQualifiedName;

  private final int dimensions;

  private final java.util.List<io.sundr.codegen.model.TypeRef> arguments;

  public io.sundr.codegen.model.ClassRef(io.sundr.codegen.model.TypeDef, java.lang.String, int, java.util.List<io.sundr.codegen.model.TypeRef>, java.util.Map<io.sundr.codegen.model.AttributeKey, java.lang.Object>);
    Code:
       0: aload_0
       1: aload         5
       3: invokespecial #1                  // Method io/sundr/codegen/model/TypeRef."<init>":(Ljava/util/Map;)V
       6: aload_0
       7: aload_1
       8: ifnull        15
      11: aload_1
      12: goto          25
      15: new           #2                  // class io/sundr/codegen/model/TypeDefBuilder
      18: dup
      19: invokespecial #3                  // Method io/sundr/codegen/model/TypeDefBuilder."<init>":()V
      22: invokevirtual #4                  // Method io/sundr/codegen/model/TypeDefBuilder.build:()Lio/sundr/codegen/model/EditableTypeDef;
      25: putfield      #5                  // Field definition:Lio/sundr/codegen/model/TypeDef;
      28: aload_0
      29: iload_3
      30: putfield      #6                  // Field dimensions:I
      33: aload_0
      34: aload         4
      36: putfield      #7                  // Field arguments:Ljava/util/List;
      39: aload_0
      40: aload_2
      41: ifnull        48
      44: aload_2
      45: goto          60
      48: aload_1
      49: ifnull        59
      52: aload_1
      53: invokevirtual #8                  // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      56: goto          60
      59: aconst_null
      60: putfield      #9                  // Field fullyQualifiedName:Ljava/lang/String;
      63: aload_1
      64: ifnull        75
      67: invokestatic  #10                 // Method io/sundr/codegen/DefinitionRepository.getRepository:()Lio/sundr/codegen/DefinitionRepository;
      70: aload_1
      71: invokevirtual #11                 // Method io/sundr/codegen/DefinitionRepository.registerIfAbsent:(Lio/sundr/codegen/model/TypeDef;)Lio/sundr/codegen/model/TypeDef;
      74: pop
      75: return

  public io.sundr.codegen.model.TypeDef getDefinition();
    Code:
       0: invokestatic  #10                 // Method io/sundr/codegen/DefinitionRepository.getRepository:()Lio/sundr/codegen/DefinitionRepository;
       3: aload_0
       4: getfield      #9                  // Field fullyQualifiedName:Ljava/lang/String;
       7: invokevirtual #12                 // Method io/sundr/codegen/DefinitionRepository.getDefinition:(Ljava/lang/String;)Lio/sundr/codegen/model/TypeDef;
      10: areturn

  public java.lang.String getFullyQualifiedName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field fullyQualifiedName:Ljava/lang/String;
       4: areturn

  public int getDimensions();
    Code:
       0: aload_0
       1: getfield      #6                  // Field dimensions:I
       4: ireturn

  public java.util.List<io.sundr.codegen.model.TypeRef> getArguments();
    Code:
       0: aload_0
       1: getfield      #7                  // Field arguments:Ljava/util/List;
       4: areturn

  public io.sundr.codegen.model.ClassRef withDimensions(int);
    Code:
       0: new           #13                 // class io/sundr/codegen/model/ClassRefBuilder
       3: dup
       4: aload_0
       5: invokespecial #14                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":(Lio/sundr/codegen/model/ClassRef;)V
       8: iload_1
       9: invokevirtual #15                 // Method io/sundr/codegen/model/ClassRefBuilder.withDimensions:(I)Lio/sundr/codegen/model/ClassRefFluent;
      12: checkcast     #13                 // class io/sundr/codegen/model/ClassRefBuilder
      15: invokevirtual #16                 // Method io/sundr/codegen/model/ClassRefBuilder.build:()Lio/sundr/codegen/model/EditableClassRef;
      18: areturn

  public boolean isAssignableFrom(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #17                 // class io/sundr/codegen/model/PrimitiveRef
      17: ifeq          83
      20: aload_0
      21: invokevirtual #18                 // Method getDefinition:()Lio/sundr/codegen/model/TypeDef;
      24: ifnonnull     29
      27: iconst_0
      28: ireturn
      29: aload_0
      30: invokevirtual #18                 // Method getDefinition:()Lio/sundr/codegen/model/TypeDef;
      33: ifnull        53
      36: ldc           #20                 // String java.lang
      38: aload_0
      39: invokevirtual #18                 // Method getDefinition:()Lio/sundr/codegen/model/TypeDef;
      42: invokevirtual #21                 // Method io/sundr/codegen/model/TypeDef.getPackageName:()Ljava/lang/String;
      45: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: invokevirtual #18                 // Method getDefinition:()Lio/sundr/codegen/model/TypeDef;
      57: invokevirtual #23                 // Method io/sundr/codegen/model/TypeDef.getName:()Ljava/lang/String;
      60: invokevirtual #24                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      63: aload_1
      64: checkcast     #17                 // class io/sundr/codegen/model/PrimitiveRef
      67: invokevirtual #25                 // Method io/sundr/codegen/model/PrimitiveRef.getName:()Ljava/lang/String;
      70: invokevirtual #24                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      73: invokevirtual #26                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      76: ifne          81
      79: iconst_0
      80: ireturn
      81: iconst_1
      82: ireturn
      83: aload_1
      84: instanceof    #27                 // class io/sundr/codegen/model/ClassRef
      87: ifne          92
      90: iconst_0
      91: ireturn
      92: aload_0
      93: aload_1
      94: if_acmpeq     105
      97: aload_0
      98: aload_1
      99: invokevirtual #28                 // Method equals:(Ljava/lang/Object;)Z
     102: ifeq          107
     105: iconst_1
     106: ireturn
     107: aload_0
     108: getfield      #5                  // Field definition:Lio/sundr/codegen/model/TypeDef;
     111: aload_1
     112: checkcast     #27                 // class io/sundr/codegen/model/ClassRef
     115: invokevirtual #18                 // Method getDefinition:()Lio/sundr/codegen/model/TypeDef;
     118: invokevirtual #29                 // Method io/sundr/codegen/model/TypeDef.isAssignableFrom:(Lio/sundr/codegen/model/TypeDef;)Z
     121: ireturn

  public java.util.Set<io.sundr.codegen.model.ClassRef> getReferences();
    Code:
       0: new           #30                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #31                 // Method java/util/LinkedHashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #7                  // Field arguments:Ljava/util/List;
      12: invokeinterface #32,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          61
      27: aload_2
      28: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #35                 // class io/sundr/codegen/model/TypeRef
      36: astore_3
      37: aload_3
      38: instanceof    #27                 // class io/sundr/codegen/model/ClassRef
      41: ifeq          58
      44: aload_1
      45: aload_3
      46: checkcast     #27                 // class io/sundr/codegen/model/ClassRef
      49: invokevirtual #36                 // Method getReferences:()Ljava/util/Set;
      52: invokeinterface #37,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      57: pop
      58: goto          18
      61: aload_1
      62: aload_0
      63: invokeinterface #38,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      68: pop
      69: aload_1
      70: areturn

  private boolean requiresFullyQualifiedName();
    Code:
       0: invokestatic  #10                 // Method io/sundr/codegen/DefinitionRepository.getRepository:()Lio/sundr/codegen/DefinitionRepository;
       3: invokevirtual #39                 // Method io/sundr/codegen/DefinitionRepository.getReferenceMap:()Ljava/util/Map;
       6: astore_1
       7: aload_1
       8: ifnull        60
      11: aload_1
      12: aload_0
      13: getfield      #5                  // Field definition:Lio/sundr/codegen/model/TypeDef;
      16: invokevirtual #23                 // Method io/sundr/codegen/model/TypeDef.getName:()Ljava/lang/String;
      19: invokeinterface #40,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      24: ifeq          60
      27: aload_1
      28: aload_0
      29: getfield      #5                  // Field definition:Lio/sundr/codegen/model/TypeDef;
      32: invokevirtual #23                 // Method io/sundr/codegen/model/TypeDef.getName:()Ljava/lang/String;
      35: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #42                 // class java/lang/String
      43: astore_2
      44: aload_0
      45: invokevirtual #18                 // Method getDefinition:()Lio/sundr/codegen/model/TypeDef;
      48: invokevirtual #8                  // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      51: aload_2
      52: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      55: ifne          60
      58: iconst_1
      59: ireturn
      60: iconst_0
      61: ireturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method requiresFullyQualifiedName:()Z
       4: ifeq          15
       7: aload_0
       8: invokevirtual #18                 // Method getDefinition:()Lio/sundr/codegen/model/TypeDef;
      11: invokevirtual #8                  // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      14: areturn
      15: aload_0
      16: invokevirtual #18                 // Method getDefinition:()Lio/sundr/codegen/model/TypeDef;
      19: invokevirtual #23                 // Method io/sundr/codegen/model/TypeDef.getName:()Ljava/lang/String;
      22: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #44                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #44                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #27                 // class io/sundr/codegen/model/ClassRef
      28: astore_2
      29: aload_0
      30: getfield      #6                  // Field dimensions:I
      33: aload_2
      34: getfield      #6                  // Field dimensions:I
      37: if_icmpeq     42
      40: iconst_0
      41: ireturn
      42: aload_0
      43: getfield      #5                  // Field definition:Lio/sundr/codegen/model/TypeDef;
      46: ifnull        66
      49: aload_0
      50: getfield      #5                  // Field definition:Lio/sundr/codegen/model/TypeDef;
      53: aload_2
      54: getfield      #5                  // Field definition:Lio/sundr/codegen/model/TypeDef;
      57: invokevirtual #45                 // Method io/sundr/codegen/model/TypeDef.equals:(Ljava/lang/Object;)Z
      60: ifne          75
      63: goto          73
      66: aload_2
      67: getfield      #5                  // Field definition:Lio/sundr/codegen/model/TypeDef;
      70: ifnull        75
      73: iconst_0
      74: ireturn
      75: aload_0
      76: getfield      #7                  // Field arguments:Ljava/util/List;
      79: ifnull        98
      82: aload_0
      83: getfield      #7                  // Field arguments:Ljava/util/List;
      86: aload_2
      87: getfield      #7                  // Field arguments:Ljava/util/List;
      90: invokeinterface #46,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      95: goto          110
      98: aload_2
      99: getfield      #7                  // Field arguments:Ljava/util/List;
     102: ifnonnull     109
     105: iconst_1
     106: goto          110
     109: iconst_0
     110: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field definition:Lio/sundr/codegen/model/TypeDef;
       4: ifnull        17
       7: aload_0
       8: getfield      #5                  // Field definition:Lio/sundr/codegen/model/TypeDef;
      11: invokevirtual #47                 // Method io/sundr/codegen/model/TypeDef.hashCode:()I
      14: goto          18
      17: iconst_0
      18: istore_1
      19: bipush        31
      21: iload_1
      22: imul
      23: aload_0
      24: getfield      #6                  // Field dimensions:I
      27: iadd
      28: istore_1
      29: bipush        31
      31: iload_1
      32: imul
      33: aload_0
      34: getfield      #7                  // Field arguments:Ljava/util/List;
      37: ifnull        52
      40: aload_0
      41: getfield      #7                  // Field arguments:Ljava/util/List;
      44: invokeinterface #48,  1           // InterfaceMethod java/util/List.hashCode:()I
      49: goto          53
      52: iconst_0
      53: iadd
      54: istore_1
      55: iload_1
      56: ireturn

  public java.lang.String toString();
    Code:
       0: new           #49                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #18                 // Method getDefinition:()Lio/sundr/codegen/model/TypeDef;
      12: astore_2
      13: aload_2
      14: ifnonnull     24
      17: aload_1
      18: ldc           #51                 // String <unknown>
      20: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_0
      25: invokespecial #43                 // Method requiresFullyQualifiedName:()Z
      28: ifeq          45
      31: aload_1
      32: aload_2
      33: invokevirtual #21                 // Method io/sundr/codegen/model/TypeDef.getPackageName:()Ljava/lang/String;
      36: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #53                 // String .
      41: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: pop
      45: aload_2
      46: invokevirtual #54                 // Method io/sundr/codegen/model/TypeDef.getOuterType:()Lio/sundr/codegen/model/TypeDef;
      49: ifnull        79
      52: aload_1
      53: aload_2
      54: invokevirtual #54                 // Method io/sundr/codegen/model/TypeDef.getOuterType:()Lio/sundr/codegen/model/TypeDef;
      57: invokevirtual #23                 // Method io/sundr/codegen/model/TypeDef.getName:()Ljava/lang/String;
      60: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc           #53                 // String .
      65: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_2
      69: invokevirtual #23                 // Method io/sundr/codegen/model/TypeDef.getName:()Ljava/lang/String;
      72: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: pop
      76: goto          88
      79: aload_1
      80: aload_2
      81: invokevirtual #23                 // Method io/sundr/codegen/model/TypeDef.getName:()Ljava/lang/String;
      84: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: pop
      88: aload_0
      89: getfield      #7                  // Field arguments:Ljava/util/List;
      92: invokeinterface #55,  1           // InterfaceMethod java/util/List.size:()I
      97: ifle          128
     100: aload_1
     101: ldc           #56                 // String <
     103: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: pop
     107: aload_1
     108: aload_0
     109: getfield      #7                  // Field arguments:Ljava/util/List;
     112: ldc           #57                 // String ,
     114: invokestatic  #58                 // Method io/sundr/codegen/utils/StringUtils.join:(Ljava/lang/Iterable;Ljava/lang/String;)Ljava/lang/String;
     117: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: pop
     121: aload_1
     122: ldc           #59                 // String >
     124: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: pop
     128: iconst_0
     129: istore_3
     130: iload_3
     131: aload_0
     132: getfield      #6                  // Field dimensions:I
     135: if_icmpge     151
     138: aload_1
     139: ldc           #60                 // String []
     141: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: pop
     145: iinc          3, 1
     148: goto          130
     151: aload_1
     152: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: areturn

  public io.sundr.codegen.model.TypeRef withDimensions(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #62                 // Method withDimensions:(I)Lio/sundr/codegen/model/ClassRef;
       5: areturn

  static {};
    Code:
       0: new           #13                 // class io/sundr/codegen/model/ClassRefBuilder
       3: dup
       4: invokespecial #63                 // Method io/sundr/codegen/model/ClassRefBuilder."<init>":()V
       7: getstatic     #64                 // Field io/sundr/codegen/model/TypeDef.OBJECT:Lio/sundr/codegen/model/TypeDef;
      10: invokevirtual #65                 // Method io/sundr/codegen/model/ClassRefBuilder.withDefinition:(Lio/sundr/codegen/model/TypeDef;)Lio/sundr/codegen/model/ClassRefFluent;
      13: checkcast     #13                 // class io/sundr/codegen/model/ClassRefBuilder
      16: invokevirtual #16                 // Method io/sundr/codegen/model/ClassRefBuilder.build:()Lio/sundr/codegen/model/EditableClassRef;
      19: putstatic     #66                 // Field OBJECT:Lio/sundr/codegen/model/ClassRef;
      22: return
}
