Compiled from "BlockFluent.java"
public interface io.sundr.codegen.model.BlockFluent<A extends io.sundr.codegen.model.BlockFluent<A>> extends io.sundr.builder.Fluent<A> {
  public abstract A addToStatements(int, io.sundr.codegen.model.Statement);

  public abstract A setToStatements(int, io.sundr.codegen.model.Statement);

  public abstract A addToStatements(io.sundr.codegen.model.Statement...);

  public abstract A addAllToStatements(java.util.Collection<io.sundr.codegen.model.Statement>);

  public abstract A removeFromStatements(io.sundr.codegen.model.Statement...);

  public abstract A removeAllFromStatements(java.util.Collection<io.sundr.codegen.model.Statement>);

  public abstract java.util.List<io.sundr.codegen.model.Statement> getStatements();

  public abstract java.util.List<io.sundr.codegen.model.Statement> buildStatements();

  public abstract io.sundr.codegen.model.Statement buildStatement(int);

  public abstract io.sundr.codegen.model.Statement buildFirstStatement();

  public abstract io.sundr.codegen.model.Statement buildLastStatement();

  public abstract io.sundr.codegen.model.Statement buildMatchingStatement(io.sundr.builder.Predicate<io.sundr.builder.Builder<? extends io.sundr.codegen.model.Statement>>);

  public abstract A withStatements(java.util.List<io.sundr.codegen.model.Statement>);

  public abstract A withStatements(io.sundr.codegen.model.Statement...);

  public abstract java.lang.Boolean hasStatements();

  public abstract A addToStringStatementStatements(int, io.sundr.codegen.model.StringStatement);

  public abstract A setToStringStatementStatements(int, io.sundr.codegen.model.StringStatement);

  public abstract A addToStringStatementStatements(io.sundr.codegen.model.StringStatement...);

  public abstract A addAllToStringStatementStatements(java.util.Collection<io.sundr.codegen.model.StringStatement>);

  public abstract A removeFromStringStatementStatements(io.sundr.codegen.model.StringStatement...);

  public abstract A removeAllFromStringStatementStatements(java.util.Collection<io.sundr.codegen.model.StringStatement>);

  public abstract io.sundr.codegen.model.BlockFluent$StringStatementStatementsNested<A> addNewStringStatementStatement();

  public abstract io.sundr.codegen.model.BlockFluent$StringStatementStatementsNested<A> addNewStringStatementStatementLike(io.sundr.codegen.model.StringStatement);

  public abstract A addNewStringStatementStatement(java.lang.String);

  public abstract A addNewStringStatementStatement(java.lang.String, java.lang.Object[]);
}
