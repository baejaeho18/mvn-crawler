Compiled from "TypeParamRefFluentImpl.java"
public class io.sundr.codegen.model.TypeParamRefFluentImpl<A extends io.sundr.codegen.model.TypeParamRefFluent<A>> extends io.sundr.codegen.model.TypeRefFluentImpl<A> implements io.sundr.codegen.model.TypeParamRefFluent<A> {
  private java.lang.String name;

  private int dimensions;

  public io.sundr.codegen.model.TypeParamRefFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/sundr/codegen/model/TypeRefFluentImpl."<init>":()V
       4: return

  public io.sundr.codegen.model.TypeParamRefFluentImpl(io.sundr.codegen.model.TypeParamRef);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/sundr/codegen/model/TypeRefFluentImpl."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method io/sundr/codegen/model/TypeParamRef.getName:()Ljava/lang/String;
       9: invokevirtual #3                  // Method withName:(Ljava/lang/String;)Lio/sundr/codegen/model/TypeParamRefFluent;
      12: pop
      13: aload_0
      14: aload_1
      15: invokevirtual #4                  // Method io/sundr/codegen/model/TypeParamRef.getDimensions:()I
      18: invokevirtual #5                  // Method withDimensions:(I)Lio/sundr/codegen/model/TypeParamRefFluent;
      21: pop
      22: aload_0
      23: aload_1
      24: invokevirtual #6                  // Method io/sundr/codegen/model/TypeParamRef.getAttributes:()Ljava/util/Map;
      27: invokevirtual #7                  // Method withAttributes:(Ljava/util/Map;)Lio/sundr/codegen/model/AttributeSupportFluent;
      30: pop
      31: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field name:Ljava/lang/String;
       4: areturn

  public A withName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field name:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #9                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public int getDimensions();
    Code:
       0: aload_0
       1: getfield      #10                 // Field dimensions:I
       4: ireturn

  public A withDimensions(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field dimensions:I
       5: aload_0
       6: areturn

  public java.lang.Boolean hasDimensions();
    Code:
       0: iconst_1
       1: invokestatic  #9                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: aload_1
      26: invokespecial #12                 // Method io/sundr/codegen/model/TypeRefFluentImpl.equals:(Ljava/lang/Object;)Z
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: aload_1
      35: checkcast     #13                 // class io/sundr/codegen/model/TypeParamRefFluentImpl
      38: astore_2
      39: aload_0
      40: getfield      #8                  // Field name:Ljava/lang/String;
      43: ifnull        63
      46: aload_0
      47: getfield      #8                  // Field name:Ljava/lang/String;
      50: aload_2
      51: getfield      #8                  // Field name:Ljava/lang/String;
      54: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      57: ifne          72
      60: goto          70
      63: aload_2
      64: getfield      #8                  // Field name:Ljava/lang/String;
      67: ifnull        72
      70: iconst_0
      71: ireturn
      72: aload_0
      73: getfield      #10                 // Field dimensions:I
      76: aload_2
      77: getfield      #10                 // Field dimensions:I
      80: if_icmpeq     85
      83: iconst_0
      84: ireturn
      85: iconst_1
      86: ireturn
}
