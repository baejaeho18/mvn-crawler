Compiled from "TypeUtils.java"
public final class io.sundr.codegen.utils.TypeUtils {
  private static final java.lang.String BOOLEAN;

  private static final java.lang.String JAVA_LANG_OBJECT;

  private static final java.lang.String JAVA_LANG_BOOLEAN;

  private static final java.lang.String JAVA_UTIL_OPTIONAL;

  private static final java.lang.String JAVA_UTIL_OPTIONAL_INT;

  private static final java.lang.String JAVA_UTIL_OPTIONAL_DOUBLE;

  private static final java.lang.String JAVA_UTIL_OPTIONAL_LONG;

  private static final java.lang.String OTHER;

  private static final java.lang.String DOT_REGEX;

  private io.sundr.codegen.utils.TypeUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isInstanceOf(io.sundr.codegen.model.TypeRef, io.sundr.codegen.model.TypeDef, io.sundr.Function<io.sundr.codegen.model.TypeRef, java.lang.Boolean>);
    Code:
       0: aload_0
       1: instanceof    #2                  // class io/sundr/codegen/model/ClassRef
       4: ifeq          147
       7: aload_0
       8: checkcast     #2                  // class io/sundr/codegen/model/ClassRef
      11: astore_3
      12: aload_3
      13: invokevirtual #3                  // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
      16: astore        4
      18: aload         4
      20: invokevirtual #4                  // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      23: aload_1
      24: invokevirtual #4                  // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      27: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ifeq          35
      33: iconst_1
      34: ireturn
      35: aload         4
      37: invokevirtual #6                  // Method io/sundr/codegen/model/TypeDef.getImplementsList:()Ljava/util/List;
      40: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      45: astore        5
      47: aload         5
      49: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          91
      57: aload         5
      59: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #10                 // class io/sundr/codegen/model/TypeRef
      67: astore        6
      69: aload_2
      70: aload         6
      72: invokeinterface #11,  2           // InterfaceMethod io/sundr/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #12                 // class java/lang/Boolean
      80: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
      83: ifeq          88
      86: iconst_1
      87: ireturn
      88: goto          47
      91: aload         4
      93: invokevirtual #14                 // Method io/sundr/codegen/model/TypeDef.getExtendsList:()Ljava/util/List;
      96: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     101: astore        5
     103: aload         5
     105: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     110: ifeq          147
     113: aload         5
     115: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     120: checkcast     #10                 // class io/sundr/codegen/model/TypeRef
     123: astore        6
     125: aload_2
     126: aload         6
     128: invokeinterface #11,  2           // InterfaceMethod io/sundr/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     133: checkcast     #12                 // class java/lang/Boolean
     136: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
     139: ifeq          144
     142: iconst_1
     143: ireturn
     144: goto          103
     147: iconst_0
     148: ireturn

  public static io.sundr.codegen.model.TypeParamDef getParameterDefinition(io.sundr.codegen.model.TypeRef, java.util.Collection<io.sundr.codegen.model.TypeParamDef>);
    Code:
       0: aload_0
       1: instanceof    #2                  // class io/sundr/codegen/model/ClassRef
       4: ifeq          18
       7: aload_0
       8: checkcast     #2                  // class io/sundr/codegen/model/ClassRef
      11: invokevirtual #15                 // Method io/sundr/codegen/model/ClassRef.getName:()Ljava/lang/String;
      14: astore_2
      15: goto          59
      18: aload_0
      19: instanceof    #16                 // class io/sundr/codegen/model/TypeParamRef
      22: ifeq          36
      25: aload_0
      26: checkcast     #16                 // class io/sundr/codegen/model/TypeParamRef
      29: invokevirtual #17                 // Method io/sundr/codegen/model/TypeParamRef.getName:()Ljava/lang/String;
      32: astore_2
      33: goto          59
      36: aload_0
      37: instanceof    #18                 // class io/sundr/codegen/model/PrimitiveRef
      40: ifeq          54
      43: aload_0
      44: checkcast     #18                 // class io/sundr/codegen/model/PrimitiveRef
      47: invokevirtual #19                 // Method io/sundr/codegen/model/PrimitiveRef.getName:()Ljava/lang/String;
      50: astore_2
      51: goto          59
      54: aload_0
      55: invokevirtual #20                 // Method java/lang/Object.toString:()Ljava/lang/String;
      58: astore_2
      59: aload_1
      60: invokeinterface #21,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      65: astore_3
      66: aload_3
      67: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      72: ifeq          104
      75: aload_3
      76: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #22                 // class io/sundr/codegen/model/TypeParamDef
      84: astore        4
      86: aload         4
      88: invokevirtual #23                 // Method io/sundr/codegen/model/TypeParamDef.getName:()Ljava/lang/String;
      91: aload_2
      92: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      95: ifeq          101
      98: aload         4
     100: areturn
     101: goto          66
     104: aconst_null
     105: areturn

  public static io.sundr.codegen.model.TypeParamRef newTypeParamRef(java.lang.String);
    Code:
       0: new           #24                 // class io/sundr/codegen/model/TypeParamRefBuilder
       3: dup
       4: invokespecial #25                 // Method io/sundr/codegen/model/TypeParamRefBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #26                 // Method io/sundr/codegen/model/TypeParamRefBuilder.withName:(Ljava/lang/String;)Lio/sundr/codegen/model/TypeParamRefFluent;
      11: checkcast     #24                 // class io/sundr/codegen/model/TypeParamRefBuilder
      14: invokevirtual #27                 // Method io/sundr/codegen/model/TypeParamRefBuilder.build:()Lio/sundr/codegen/model/EditableTypeParamRef;
      17: areturn

  public static io.sundr.codegen.model.TypeParamDef newTypeParamDef(java.lang.String);
    Code:
       0: new           #28                 // class io/sundr/codegen/model/TypeParamDefBuilder
       3: dup
       4: invokespecial #29                 // Method io/sundr/codegen/model/TypeParamDefBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #30                 // Method io/sundr/codegen/model/TypeParamDefBuilder.withName:(Ljava/lang/String;)Lio/sundr/codegen/model/TypeParamDefFluent;
      11: checkcast     #28                 // class io/sundr/codegen/model/TypeParamDefBuilder
      14: invokevirtual #31                 // Method io/sundr/codegen/model/TypeParamDefBuilder.build:()Lio/sundr/codegen/model/EditableTypeParamDef;
      17: areturn

  public static io.sundr.codegen.model.TypeDef unwrapGeneric(io.sundr.codegen.model.TypeDef);
    Code:
       0: new           #32                 // class io/sundr/codegen/model/TypeDefBuilder
       3: dup
       4: aload_0
       5: invokespecial #33                 // Method io/sundr/codegen/model/TypeDefBuilder."<init>":(Lio/sundr/codegen/model/TypeDef;)V
       8: iconst_0
       9: anewarray     #22                 // class io/sundr/codegen/model/TypeParamDef
      12: invokevirtual #34                 // Method io/sundr/codegen/model/TypeDefBuilder.withParameters:([Lio/sundr/codegen/model/TypeParamDef;)Lio/sundr/codegen/model/TypeDefFluent;
      15: checkcast     #32                 // class io/sundr/codegen/model/TypeDefBuilder
      18: invokevirtual #35                 // Method io/sundr/codegen/model/TypeDefBuilder.build:()Lio/sundr/codegen/model/EditableTypeDef;
      21: areturn

  public static io.sundr.codegen.model.TypeDef typeGenericOf(io.sundr.codegen.model.TypeDef, io.sundr.codegen.model.TypeParamDef...);
    Code:
       0: new           #32                 // class io/sundr/codegen/model/TypeDefBuilder
       3: dup
       4: aload_0
       5: invokespecial #33                 // Method io/sundr/codegen/model/TypeDefBuilder."<init>":(Lio/sundr/codegen/model/TypeDef;)V
       8: aload_1
       9: invokevirtual #34                 // Method io/sundr/codegen/model/TypeDefBuilder.withParameters:([Lio/sundr/codegen/model/TypeParamDef;)Lio/sundr/codegen/model/TypeDefFluent;
      12: checkcast     #32                 // class io/sundr/codegen/model/TypeDefBuilder
      15: invokevirtual #35                 // Method io/sundr/codegen/model/TypeDefBuilder.build:()Lio/sundr/codegen/model/EditableTypeDef;
      18: areturn

  public static io.sundr.codegen.model.TypeDef typeExtends(io.sundr.codegen.model.TypeDef, io.sundr.codegen.model.ClassRef);
    Code:
       0: new           #32                 // class io/sundr/codegen/model/TypeDefBuilder
       3: dup
       4: aload_0
       5: invokespecial #33                 // Method io/sundr/codegen/model/TypeDefBuilder."<init>":(Lio/sundr/codegen/model/TypeDef;)V
       8: iconst_1
       9: anewarray     #2                  // class io/sundr/codegen/model/ClassRef
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokevirtual #36                 // Method io/sundr/codegen/model/TypeDefBuilder.withExtendsList:([Lio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/TypeDefFluent;
      19: checkcast     #32                 // class io/sundr/codegen/model/TypeDefBuilder
      22: invokevirtual #35                 // Method io/sundr/codegen/model/TypeDefBuilder.build:()Lio/sundr/codegen/model/EditableTypeDef;
      25: areturn

  public static io.sundr.codegen.model.TypeDef typeImplements(io.sundr.codegen.model.TypeDef, io.sundr.codegen.model.ClassRef...);
    Code:
       0: new           #32                 // class io/sundr/codegen/model/TypeDefBuilder
       3: dup
       4: aload_0
       5: invokespecial #33                 // Method io/sundr/codegen/model/TypeDefBuilder."<init>":(Lio/sundr/codegen/model/TypeDef;)V
       8: aload_1
       9: invokevirtual #37                 // Method io/sundr/codegen/model/TypeDefBuilder.withImplementsList:([Lio/sundr/codegen/model/ClassRef;)Lio/sundr/codegen/model/TypeDefFluent;
      12: checkcast     #32                 // class io/sundr/codegen/model/TypeDefBuilder
      15: invokevirtual #35                 // Method io/sundr/codegen/model/TypeDefBuilder.build:()Lio/sundr/codegen/model/EditableTypeDef;
      18: areturn

  public static int modifiersToInt(javax.lang.model.element.Modifier...);
    Code:
       0: aload_0
       1: invokestatic  #38                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       4: invokestatic  #39                 // Method modifiersToInt:(Ljava/util/Collection;)I
       7: ireturn

  public static int modifiersToInt(java.util.Collection<javax.lang.model.element.Modifier>);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokeinterface #21,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_2
       9: aload_2
      10: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          160
      18: aload_2
      19: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #40                 // class javax/lang/model/element/Modifier
      27: astore_3
      28: getstatic     #41                 // Field io/sundr/codegen/utils/TypeUtils$1.$SwitchMap$javax$lang$model$element$Modifier:[I
      31: aload_3
      32: invokevirtual #42                 // Method javax/lang/model/element/Modifier.ordinal:()I
      35: iaload
      36: tableswitch   { // 1 to 9
                     1: 88
                     2: 97
                     3: 105
                     4: 114
                     5: 121
                     6: 128
                     7: 135
                     8: 143
                     9: 151
               default: 157
          }
      88: iload_1
      89: sipush        1024
      92: ior
      93: istore_1
      94: goto          157
      97: iload_1
      98: bipush        16
     100: ior
     101: istore_1
     102: goto          157
     105: iload_1
     106: sipush        256
     109: ior
     110: istore_1
     111: goto          157
     114: iload_1
     115: iconst_2
     116: ior
     117: istore_1
     118: goto          157
     121: iload_1
     122: iconst_4
     123: ior
     124: istore_1
     125: goto          157
     128: iload_1
     129: iconst_1
     130: ior
     131: istore_1
     132: goto          157
     135: iload_1
     136: bipush        8
     138: ior
     139: istore_1
     140: goto          157
     143: iload_1
     144: bipush        32
     146: ior
     147: istore_1
     148: goto          157
     151: iload_1
     152: sipush        128
     155: ior
     156: istore_1
     157: goto          9
     160: iload_1
     161: ireturn

  public static java.lang.String fullyQualifiedNameDiff(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #45                 // String \\.
       3: invokevirtual #46                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_2
       7: aload_1
       8: ldc           #45                 // String \\.
      10: invokevirtual #46                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      13: astore_3
      14: aload_2
      15: arraylength
      16: iconst_1
      17: isub
      18: istore        4
      20: aload_3
      21: arraylength
      22: iconst_1
      23: isub
      24: istore        5
      26: iload         4
      28: iflt          64
      31: iload         5
      33: iflt          64
      36: aload_2
      37: iload         4
      39: aaload
      40: aload_3
      41: iload         5
      43: aaload
      44: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifne          55
      50: aload_3
      51: iload         5
      53: aaload
      54: areturn
      55: iinc          5, -1
      58: iinc          4, -1
      61: goto          26
      64: ldc           #47                 // String other
      66: areturn

  public static boolean isAbstract(io.sundr.codegen.model.TypeRef);
    Code:
       0: invokestatic  #48                 // Method io/sundr/codegen/DefinitionRepository.getRepository:()Lio/sundr/codegen/DefinitionRepository;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokevirtual #49                 // Method io/sundr/codegen/DefinitionRepository.getDefinition:(Lio/sundr/codegen/model/TypeRef;)Lio/sundr/codegen/model/TypeDef;
       9: astore_2
      10: aload_2
      11: ifnonnull     29
      14: aload_0
      15: instanceof    #2                  // class io/sundr/codegen/model/ClassRef
      18: ifeq          29
      21: aload_0
      22: checkcast     #2                  // class io/sundr/codegen/model/ClassRef
      25: invokevirtual #3                  // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
      28: astore_2
      29: aload_2
      30: ifnull        40
      33: aload_2
      34: invokevirtual #50                 // Method io/sundr/codegen/model/TypeDef.isAbstract:()Z
      37: goto          41
      40: iconst_0
      41: ireturn

  public static boolean isPrimitive(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: instanceof    #18                 // class io/sundr/codegen/model/PrimitiveRef
       4: ireturn

  public static boolean isMap(io.sundr.codegen.model.TypeRef);
    Code:
       0: getstatic     #51                 // Field io/sundr/codegen/functions/Collections.IS_MAP:Lio/sundr/Function;
       3: aload_0
       4: invokeinterface #11,  2           // InterfaceMethod io/sundr/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #12                 // class java/lang/Boolean
      12: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
      15: ireturn

  public static boolean isList(io.sundr.codegen.model.TypeRef);
    Code:
       0: getstatic     #52                 // Field io/sundr/codegen/functions/Collections.IS_LIST:Lio/sundr/Function;
       3: aload_0
       4: invokeinterface #11,  2           // InterfaceMethod io/sundr/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #12                 // class java/lang/Boolean
      12: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
      15: ireturn

  public static boolean isSet(io.sundr.codegen.model.TypeRef);
    Code:
       0: getstatic     #53                 // Field io/sundr/codegen/functions/Collections.IS_SET:Lio/sundr/Function;
       3: aload_0
       4: invokeinterface #11,  2           // InterfaceMethod io/sundr/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #12                 // class java/lang/Boolean
      12: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
      15: ireturn

  public static boolean isCollection(io.sundr.codegen.model.TypeRef);
    Code:
       0: getstatic     #54                 // Field io/sundr/codegen/functions/Collections.IS_COLLECTION:Lio/sundr/Function;
       3: aload_0
       4: invokeinterface #11,  2           // InterfaceMethod io/sundr/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #12                 // class java/lang/Boolean
      12: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
      15: ireturn

  public static boolean isBoolean(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: instanceof    #18                 // class io/sundr/codegen/model/PrimitiveRef
       4: ifeq          20
       7: ldc           #55                 // String boolean
       9: aload_0
      10: checkcast     #18                 // class io/sundr/codegen/model/PrimitiveRef
      13: invokevirtual #19                 // Method io/sundr/codegen/model/PrimitiveRef.getName:()Ljava/lang/String;
      16: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ireturn
      20: aload_0
      21: instanceof    #2                  // class io/sundr/codegen/model/ClassRef
      24: ifne          29
      27: iconst_0
      28: ireturn
      29: ldc           #56                 // String java.lang.Boolean
      31: aload_0
      32: checkcast     #2                  // class io/sundr/codegen/model/ClassRef
      35: invokevirtual #3                  // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
      38: invokevirtual #4                  // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      41: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      44: ireturn

  public static boolean isArray(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: instanceof    #2                  // class io/sundr/codegen/model/ClassRef
       4: ifeq          23
       7: aload_0
       8: checkcast     #2                  // class io/sundr/codegen/model/ClassRef
      11: invokevirtual #57                 // Method io/sundr/codegen/model/ClassRef.getDimensions:()I
      14: ifle          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn
      23: aload_0
      24: instanceof    #18                 // class io/sundr/codegen/model/PrimitiveRef
      27: ifeq          46
      30: aload_0
      31: checkcast     #18                 // class io/sundr/codegen/model/PrimitiveRef
      34: invokevirtual #58                 // Method io/sundr/codegen/model/PrimitiveRef.getDimensions:()I
      37: ifle          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn
      46: aload_0
      47: instanceof    #16                 // class io/sundr/codegen/model/TypeParamRef
      50: ifeq          69
      53: aload_0
      54: checkcast     #16                 // class io/sundr/codegen/model/TypeParamRef
      57: invokevirtual #59                 // Method io/sundr/codegen/model/TypeParamRef.getDimensions:()I
      60: ifle          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn
      69: iconst_0
      70: ireturn

  public static boolean isOptional(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: instanceof    #2                  // class io/sundr/codegen/model/ClassRef
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: ldc           #60                 // String java.util.Optional
      11: aload_0
      12: checkcast     #2                  // class io/sundr/codegen/model/ClassRef
      15: invokevirtual #3                  // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
      18: invokevirtual #4                  // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      21: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ireturn

  public static boolean isOptionalInt(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: instanceof    #2                  // class io/sundr/codegen/model/ClassRef
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: ldc           #61                 // String java.util.OptionalInt
      11: aload_0
      12: checkcast     #2                  // class io/sundr/codegen/model/ClassRef
      15: invokevirtual #3                  // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
      18: invokevirtual #4                  // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      21: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ireturn

  public static boolean isOptionalDouble(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: instanceof    #2                  // class io/sundr/codegen/model/ClassRef
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: ldc           #62                 // String java.util.OptionalDouble
      11: aload_0
      12: checkcast     #2                  // class io/sundr/codegen/model/ClassRef
      15: invokevirtual #3                  // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
      18: invokevirtual #4                  // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      21: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ireturn

  public static boolean isOptionalLong(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_0
       1: instanceof    #2                  // class io/sundr/codegen/model/ClassRef
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: ldc           #63                 // String java.util.OptionalLong
      11: aload_0
      12: checkcast     #2                  // class io/sundr/codegen/model/ClassRef
      15: invokevirtual #3                  // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
      18: invokevirtual #4                  // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      21: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ireturn

  public static void visitParents(io.sundr.codegen.model.TypeDef, java.util.List<io.sundr.codegen.model.TypeDef>);
    Code:
       0: aload_0
       1: aload_1
       2: new           #64                 // class java/util/ArrayList
       5: dup
       6: invokespecial #65                 // Method java/util/ArrayList."<init>":()V
       9: invokestatic  #66                 // Method visitParents:(Lio/sundr/codegen/model/TypeDef;Ljava/util/List;Ljava/util/List;)V
      12: return

  public static void visitParents(io.sundr.codegen.model.TypeDef, java.util.List<io.sundr.codegen.model.TypeDef>, java.util.List<io.sundr.codegen.model.TypeDef>);
    Code:
       0: ldc           #67                 // String java.lang.Object
       2: aload_0
       3: invokevirtual #4                  // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
       6: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          13
      12: return
      13: aload_2
      14: aload_0
      15: invokeinterface #68,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      20: ifeq          24
      23: return
      24: aload_2
      25: aload_0
      26: invokeinterface #69,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      31: pop
      32: new           #64                 // class java/util/ArrayList
      35: dup
      36: invokespecial #65                 // Method java/util/ArrayList."<init>":()V
      39: astore_3
      40: aload_3
      41: aload_0
      42: invokevirtual #6                  // Method io/sundr/codegen/model/TypeDef.getImplementsList:()Ljava/util/List;
      45: invokeinterface #70,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      50: pop
      51: aload_3
      52: aload_0
      53: invokevirtual #14                 // Method io/sundr/codegen/model/TypeDef.getExtendsList:()Ljava/util/List;
      56: invokeinterface #70,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      61: pop
      62: aload_3
      63: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      68: astore        4
      70: aload         4
      72: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      77: ifeq          112
      80: aload         4
      82: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      87: checkcast     #10                 // class io/sundr/codegen/model/TypeRef
      90: astore        5
      92: invokestatic  #48                 // Method io/sundr/codegen/DefinitionRepository.getRepository:()Lio/sundr/codegen/DefinitionRepository;
      95: aload         5
      97: invokevirtual #49                 // Method io/sundr/codegen/DefinitionRepository.getDefinition:(Lio/sundr/codegen/model/TypeRef;)Lio/sundr/codegen/model/TypeDef;
     100: astore        6
     102: aload         6
     104: aload_1
     105: aload_2
     106: invokestatic  #66                 // Method visitParents:(Lio/sundr/codegen/model/TypeDef;Ljava/util/List;Ljava/util/List;)V
     109: goto          70
     112: aload_1
     113: aload_0
     114: invokeinterface #69,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     119: pop
     120: return
}
