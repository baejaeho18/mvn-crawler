Compiled from "DefinitionRepository.java"
public class io.sundr.codegen.DefinitionRepository {
  private static io.sundr.codegen.DefinitionRepository INSTANCE;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, io.sundr.codegen.model.TypeDef> definitions;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.String> custom;

  private java.util.Map<java.lang.String, java.lang.String> snapshot;

  private io.sundr.codegen.DefinitionRepository();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field definitions:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #5                  // Field custom:Ljava/util/concurrent/ConcurrentMap;
      26: return

  public static final synchronized io.sundr.codegen.DefinitionRepository getRepository();
    Code:
       0: getstatic     #6                  // Field INSTANCE:Lio/sundr/codegen/DefinitionRepository;
       3: ifnonnull     16
       6: new           #7                  // class io/sundr/codegen/DefinitionRepository
       9: dup
      10: invokespecial #8                  // Method "<init>":()V
      13: putstatic     #6                  // Field INSTANCE:Lio/sundr/codegen/DefinitionRepository;
      16: getstatic     #6                  // Field INSTANCE:Lio/sundr/codegen/DefinitionRepository;
      19: areturn

  public io.sundr.codegen.model.TypeDef registerIfAbsent(io.sundr.codegen.model.TypeDef);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_0
       5: getfield      #4                  // Field definitions:Ljava/util/concurrent/ConcurrentMap;
       8: aload_1
       9: invokevirtual #9                  // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
      12: aload_1
      13: invokeinterface #10,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_1
      20: areturn

  public io.sundr.codegen.model.TypeDef register(io.sundr.codegen.model.TypeDef);
    Code:
       0: aload_0
       1: getfield      #4                  // Field definitions:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokevirtual #9                  // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
       8: aload_1
       9: invokeinterface #11,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_1
      16: areturn

  public io.sundr.codegen.model.TypeDef register(io.sundr.codegen.model.TypeDef, java.lang.String...);
    Code:
       0: new           #12                 // class io/sundr/codegen/model/TypeDefBuilder
       3: dup
       4: aload_1
       5: invokespecial #13                 // Method io/sundr/codegen/model/TypeDefBuilder."<init>":(Lio/sundr/codegen/model/TypeDef;)V
       8: astore_3
       9: aload_2
      10: astore        4
      12: aload         4
      14: arraylength
      15: istore        5
      17: iconst_0
      18: istore        6
      20: iload         6
      22: iload         5
      24: if_icmpge     60
      27: aload         4
      29: iload         6
      31: aaload
      32: astore        7
      34: aload_3
      35: new           #14                 // class io/sundr/codegen/model/AttributeKey
      38: dup
      39: aload         7
      41: ldc           #15                 // class java/lang/Boolean
      43: invokespecial #16                 // Method io/sundr/codegen/model/AttributeKey."<init>":(Ljava/lang/String;Ljava/lang/Class;)V
      46: iconst_1
      47: invokestatic  #17                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      50: invokevirtual #18                 // Method io/sundr/codegen/model/TypeDefBuilder.addToAttributes:(Lio/sundr/codegen/model/AttributeKey;Ljava/lang/Object;)Lio/sundr/codegen/model/AttributeSupportFluent;
      53: pop
      54: iinc          6, 1
      57: goto          20
      60: aload_0
      61: aload_3
      62: invokevirtual #19                 // Method io/sundr/codegen/model/TypeDefBuilder.build:()Lio/sundr/codegen/model/EditableTypeDef;
      65: invokevirtual #20                 // Method register:(Lio/sundr/codegen/model/TypeDef;)Lio/sundr/codegen/model/TypeDef;
      68: areturn

  public io.sundr.codegen.model.TypeDef register(io.sundr.codegen.model.TypeDef, io.sundr.codegen.model.AttributeKey<java.lang.Boolean>...);
    Code:
       0: new           #12                 // class io/sundr/codegen/model/TypeDefBuilder
       3: dup
       4: aload_1
       5: invokespecial #13                 // Method io/sundr/codegen/model/TypeDefBuilder."<init>":(Lio/sundr/codegen/model/TypeDef;)V
       8: astore_3
       9: aload_2
      10: astore        4
      12: aload         4
      14: arraylength
      15: istore        5
      17: iconst_0
      18: istore        6
      20: iload         6
      22: iload         5
      24: if_icmpge     51
      27: aload         4
      29: iload         6
      31: aaload
      32: astore        7
      34: aload_3
      35: aload         7
      37: iconst_1
      38: invokestatic  #17                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: invokevirtual #18                 // Method io/sundr/codegen/model/TypeDefBuilder.addToAttributes:(Lio/sundr/codegen/model/AttributeKey;Ljava/lang/Object;)Lio/sundr/codegen/model/AttributeSupportFluent;
      44: pop
      45: iinc          6, 1
      48: goto          20
      51: aload_0
      52: aload_3
      53: invokevirtual #19                 // Method io/sundr/codegen/model/TypeDefBuilder.build:()Lio/sundr/codegen/model/EditableTypeDef;
      56: invokevirtual #20                 // Method register:(Lio/sundr/codegen/model/TypeDef;)Lio/sundr/codegen/model/TypeDef;
      59: areturn

  public java.util.Set<io.sundr.codegen.model.TypeDef> getDefinitions(java.lang.String...);
    Code:
       0: new           #21                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #22                 // Method java/util/LinkedHashSet."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #4                  // Field definitions:Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      17: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          139
      32: aload_3
      33: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #27                 // class io/sundr/codegen/model/TypeDef
      41: astore        4
      43: iconst_1
      44: istore        5
      46: aload_1
      47: astore        6
      49: aload         6
      51: arraylength
      52: istore        7
      54: iconst_0
      55: istore        8
      57: iload         8
      59: iload         7
      61: if_icmpge     122
      64: aload         6
      66: iload         8
      68: aaload
      69: astore        9
      71: new           #14                 // class io/sundr/codegen/model/AttributeKey
      74: dup
      75: aload         9
      77: ldc           #15                 // class java/lang/Boolean
      79: invokespecial #16                 // Method io/sundr/codegen/model/AttributeKey."<init>":(Ljava/lang/String;Ljava/lang/Class;)V
      82: astore        10
      84: aload         4
      86: aload         10
      88: invokevirtual #28                 // Method io/sundr/codegen/model/TypeDef.hasAttribute:(Lio/sundr/codegen/model/AttributeKey;)Z
      91: ifeq          110
      94: aload         4
      96: aload         10
      98: invokevirtual #29                 // Method io/sundr/codegen/model/TypeDef.getAttribute:(Lio/sundr/codegen/model/AttributeKey;)Ljava/lang/Object;
     101: checkcast     #15                 // class java/lang/Boolean
     104: invokevirtual #30                 // Method java/lang/Boolean.booleanValue:()Z
     107: ifne          116
     110: iconst_0
     111: istore        5
     113: goto          122
     116: iinc          8, 1
     119: goto          57
     122: iload         5
     124: ifeq          136
     127: aload_2
     128: aload         4
     130: invokeinterface #31,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     135: pop
     136: goto          23
     139: aload_2
     140: invokestatic  #32                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
     143: areturn

  public java.util.Set<io.sundr.codegen.model.TypeDef> getDefinitions(io.sundr.codegen.model.AttributeKey<java.lang.Boolean>...);
    Code:
       0: new           #21                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #22                 // Method java/util/LinkedHashSet."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #4                  // Field definitions:Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      17: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          126
      32: aload_3
      33: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #27                 // class io/sundr/codegen/model/TypeDef
      41: astore        4
      43: iconst_1
      44: istore        5
      46: aload_1
      47: astore        6
      49: aload         6
      51: arraylength
      52: istore        7
      54: iconst_0
      55: istore        8
      57: iload         8
      59: iload         7
      61: if_icmpge     109
      64: aload         6
      66: iload         8
      68: aaload
      69: astore        9
      71: aload         4
      73: aload         9
      75: invokevirtual #28                 // Method io/sundr/codegen/model/TypeDef.hasAttribute:(Lio/sundr/codegen/model/AttributeKey;)Z
      78: ifeq          97
      81: aload         4
      83: aload         9
      85: invokevirtual #29                 // Method io/sundr/codegen/model/TypeDef.getAttribute:(Lio/sundr/codegen/model/AttributeKey;)Ljava/lang/Object;
      88: checkcast     #15                 // class java/lang/Boolean
      91: invokevirtual #30                 // Method java/lang/Boolean.booleanValue:()Z
      94: ifne          103
      97: iconst_0
      98: istore        5
     100: goto          109
     103: iinc          8, 1
     106: goto          57
     109: iload         5
     111: ifeq          123
     114: aload_2
     115: aload         4
     117: invokeinterface #31,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     122: pop
     123: goto          23
     126: aload_2
     127: invokestatic  #32                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
     130: areturn

  public io.sundr.codegen.model.TypeDef getDefinition(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field definitions:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #27                 // class io/sundr/codegen/model/TypeDef
      13: areturn

  public io.sundr.codegen.model.TypeDef getDefinition(io.sundr.codegen.model.TypeRef);
    Code:
       0: aload_1
       1: instanceof    #34                 // class io/sundr/codegen/model/ClassRef
       4: ifeq          27
       7: aload_0
       8: getfield      #4                  // Field definitions:Ljava/util/concurrent/ConcurrentMap;
      11: aload_1
      12: checkcast     #34                 // class io/sundr/codegen/model/ClassRef
      15: invokevirtual #35                 // Method io/sundr/codegen/model/ClassRef.getFullyQualifiedName:()Ljava/lang/String;
      18: invokeinterface #33,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #27                 // class io/sundr/codegen/model/TypeDef
      26: areturn
      27: aconst_null
      28: areturn

  public java.util.Collection<io.sundr.codegen.model.TypeDef> getDefinitions();
    Code:
       0: aload_0
       1: getfield      #4                  // Field definitions:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: areturn

  public void updateReferenceMap();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #36                 // Method getReferenceMapInternal:()Ljava/util/Map;
       5: putfield      #37                 // Field snapshot:Ljava/util/Map;
       8: return

  public java.util.Map<java.lang.String, java.lang.String> getReferenceMap();
    Code:
       0: aload_0
       1: getfield      #37                 // Field snapshot:Ljava/util/Map;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokespecial #36                 // Method getReferenceMapInternal:()Ljava/util/Map;
      12: putfield      #37                 // Field snapshot:Ljava/util/Map;
      15: aload_0
      16: getfield      #37                 // Field snapshot:Ljava/util/Map;
      19: areturn

  private java.util.Map<java.lang.String, java.lang.String> getReferenceMapInternal();
    Code:
       0: new           #38                 // class java/util/HashMap
       3: dup
       4: invokespecial #39                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: new           #40                 // class java/util/ArrayList
      11: dup
      12: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
      15: astore_2
      16: aload_0
      17: invokevirtual #42                 // Method getDefinitions:()Ljava/util/Collection;
      20: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          61
      35: aload_3
      36: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #27                 // class io/sundr/codegen/model/TypeDef
      44: astore        4
      46: aload_2
      47: aload         4
      49: invokevirtual #43                 // Method io/sundr/codegen/model/TypeDef.toInternalReference:()Lio/sundr/codegen/model/ClassRef;
      52: invokeinterface #44,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: goto          26
      61: aload_2
      62: new           #45                 // class io/sundr/codegen/DefinitionRepository$1
      65: dup
      66: aload_0
      67: invokespecial #46                 // Method io/sundr/codegen/DefinitionRepository$1."<init>":(Lio/sundr/codegen/DefinitionRepository;)V
      70: invokestatic  #47                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      73: aload_2
      74: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      79: astore_3
      80: aload_3
      81: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      86: ifeq          141
      89: aload_3
      90: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      95: checkcast     #34                 // class io/sundr/codegen/model/ClassRef
      98: astore        4
     100: aload         4
     102: invokevirtual #49                 // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
     105: invokevirtual #50                 // Method io/sundr/codegen/model/TypeDef.getName:()Ljava/lang/String;
     108: astore        5
     110: aload_1
     111: aload         5
     113: invokeinterface #51,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     118: ifne          138
     121: aload_1
     122: aload         5
     124: aload         4
     126: invokevirtual #49                 // Method io/sundr/codegen/model/ClassRef.getDefinition:()Lio/sundr/codegen/model/TypeDef;
     129: invokevirtual #9                  // Method io/sundr/codegen/model/TypeDef.getFullyQualifiedName:()Ljava/lang/String;
     132: invokeinterface #52,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     137: pop
     138: goto          80
     141: aload_1
     142: aload_0
     143: getfield      #5                  // Field custom:Ljava/util/concurrent/ConcurrentMap;
     146: invokeinterface #53,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     151: aload_1
     152: areturn

  public java.lang.String putCustomMapping(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field custom:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #11,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #54                 // class java/lang/String
      14: areturn

  public java.lang.String removeCustomMapping(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field custom:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #55,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #54                 // class java/lang/String
      13: areturn

  public boolean customMappingExists(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field custom:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #56,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field definitions:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #57,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: return
}
