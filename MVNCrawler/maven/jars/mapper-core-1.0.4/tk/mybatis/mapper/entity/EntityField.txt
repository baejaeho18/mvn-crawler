Compiled from "EntityField.java"
public class tk.mybatis.mapper.entity.EntityField {
  private java.lang.String name;

  private java.lang.reflect.Field field;

  private java.lang.Class<?> javaType;

  private java.lang.reflect.Method setter;

  private java.lang.reflect.Method getter;

  public tk.mybatis.mapper.entity.EntityField(java.lang.reflect.Field, java.beans.PropertyDescriptor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnull        29
       8: aload_0
       9: aload_1
      10: putfield      #2                  // Field field:Ljava/lang/reflect/Field;
      13: aload_0
      14: aload_1
      15: invokevirtual #3                  // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      18: putfield      #4                  // Field name:Ljava/lang/String;
      21: aload_0
      22: aload_1
      23: invokevirtual #5                  // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      26: putfield      #6                  // Field javaType:Ljava/lang/Class;
      29: aload_2
      30: ifnull        65
      33: aload_0
      34: aload_2
      35: invokevirtual #7                  // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
      38: putfield      #4                  // Field name:Ljava/lang/String;
      41: aload_0
      42: aload_2
      43: invokevirtual #8                  // Method java/beans/PropertyDescriptor.getWriteMethod:()Ljava/lang/reflect/Method;
      46: putfield      #9                  // Field setter:Ljava/lang/reflect/Method;
      49: aload_0
      50: aload_2
      51: invokevirtual #10                 // Method java/beans/PropertyDescriptor.getReadMethod:()Ljava/lang/reflect/Method;
      54: putfield      #11                 // Field getter:Ljava/lang/reflect/Method;
      57: aload_0
      58: aload_2
      59: invokevirtual #12                 // Method java/beans/PropertyDescriptor.getPropertyType:()Ljava/lang/Class;
      62: putfield      #6                  // Field javaType:Ljava/lang/Class;
      65: return

  public void copyFromPropertyDescriptor(tk.mybatis.mapper.entity.EntityField);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #9                  // Field setter:Ljava/lang/reflect/Method;
       5: putfield      #9                  // Field setter:Ljava/lang/reflect/Method;
       8: aload_0
       9: aload_1
      10: getfield      #11                 // Field getter:Ljava/lang/reflect/Method;
      13: putfield      #11                 // Field getter:Ljava/lang/reflect/Method;
      16: aload_0
      17: aload_1
      18: getfield      #6                  // Field javaType:Ljava/lang/Class;
      21: putfield      #6                  // Field javaType:Ljava/lang/Class;
      24: aload_0
      25: aload_1
      26: getfield      #4                  // Field name:Ljava/lang/String;
      29: putfield      #4                  // Field name:Ljava/lang/String;
      32: return

  public boolean isAnnotationPresent(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
       6: ifnull        18
       9: aload_0
      10: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
      13: aload_1
      14: invokevirtual #13                 // Method java/lang/reflect/Field.isAnnotationPresent:(Ljava/lang/Class;)Z
      17: istore_2
      18: iload_2
      19: ifne          38
      22: aload_0
      23: getfield      #9                  // Field setter:Ljava/lang/reflect/Method;
      26: ifnull        38
      29: aload_0
      30: getfield      #9                  // Field setter:Ljava/lang/reflect/Method;
      33: aload_1
      34: invokevirtual #14                 // Method java/lang/reflect/Method.isAnnotationPresent:(Ljava/lang/Class;)Z
      37: istore_2
      38: iload_2
      39: ifne          58
      42: aload_0
      43: getfield      #11                 // Field getter:Ljava/lang/reflect/Method;
      46: ifnull        58
      49: aload_0
      50: getfield      #11                 // Field getter:Ljava/lang/reflect/Method;
      53: aload_1
      54: invokevirtual #14                 // Method java/lang/reflect/Method.isAnnotationPresent:(Ljava/lang/Class;)Z
      57: istore_2
      58: iload_2
      59: ireturn

  public <T extends java.lang.annotation.Annotation> T getAnnotation(java.lang.Class<T>);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
       6: ifnull        18
       9: aload_0
      10: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
      13: aload_1
      14: invokevirtual #15                 // Method java/lang/reflect/Field.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      17: astore_2
      18: aload_2
      19: ifnonnull     38
      22: aload_0
      23: getfield      #9                  // Field setter:Ljava/lang/reflect/Method;
      26: ifnull        38
      29: aload_0
      30: getfield      #9                  // Field setter:Ljava/lang/reflect/Method;
      33: aload_1
      34: invokevirtual #16                 // Method java/lang/reflect/Method.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      37: astore_2
      38: aload_2
      39: ifnonnull     58
      42: aload_0
      43: getfield      #11                 // Field getter:Ljava/lang/reflect/Method;
      46: ifnull        58
      49: aload_0
      50: getfield      #11                 // Field getter:Ljava/lang/reflect/Method;
      53: aload_1
      54: invokevirtual #16                 // Method java/lang/reflect/Method.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      57: astore_2
      58: aload_2
      59: areturn

  public java.lang.Object getValue(java.lang.Object) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #11                 // Field getter:Ljava/lang/reflect/Method;
       6: ifnull        25
       9: aload_0
      10: getfield      #11                 // Field getter:Ljava/lang/reflect/Method;
      13: aload_1
      14: iconst_0
      15: anewarray     #17                 // class java/lang/Object
      18: invokevirtual #18                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      21: astore_2
      22: goto          59
      25: aload_0
      26: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
      29: ifnull        59
      32: aload_0
      33: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
      36: invokevirtual #19                 // Method java/lang/reflect/Field.isAccessible:()Z
      39: ifne          50
      42: aload_0
      43: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
      46: iconst_1
      47: invokevirtual #20                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      50: aload_0
      51: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
      54: aload_1
      55: invokevirtual #21                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      58: astore_2
      59: aload_2
      60: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #23                 // class tk/mybatis/mapper/entity/EntityField
      28: astore_2
      29: aload_0
      30: getfield      #4                  // Field name:Ljava/lang/String;
      33: ifnull        53
      36: aload_0
      37: getfield      #4                  // Field name:Ljava/lang/String;
      40: aload_2
      41: getfield      #4                  // Field name:Ljava/lang/String;
      44: invokevirtual #24                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifne          60
      50: goto          64
      53: aload_2
      54: getfield      #4                  // Field name:Ljava/lang/String;
      57: ifnonnull     64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field name:Ljava/lang/String;
       4: ifnull        17
       7: aload_0
       8: getfield      #4                  // Field name:Ljava/lang/String;
      11: invokevirtual #25                 // Method java/lang/String.hashCode:()I
      14: goto          18
      17: iconst_0
      18: ireturn

  public java.lang.Class<?> getJavaType();
    Code:
       0: aload_0
       1: getfield      #6                  // Field javaType:Ljava/lang/Class;
       4: areturn

  public void setJavaType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field javaType:Ljava/lang/Class;
       5: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field name:Ljava/lang/String;
       4: areturn
}
