Compiled from "StringUtil.java"
public class tk.mybatis.mapper.util.StringUtil {
  private static java.util.regex.Pattern UNDERLINE_TO_CAMELHUMP_PATTERN;

  public tk.mybatis.mapper.util.StringUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isEmpty(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #2                  // Method java/lang/String.length:()I
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public static boolean isNotEmpty(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method isEmpty:(Ljava/lang/String;)Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static java.lang.String convertByStyle(java.lang.String, tk.mybatis.mapper.code.Style);
    Code:
       0: getstatic     #4                  // Field tk/mybatis/mapper/util/StringUtil$1.$SwitchMap$tk$mybatis$mapper$code$Style:[I
       3: aload_1
       4: invokevirtual #5                  // Method tk/mybatis/mapper/code/Style.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 6
                     1: 48
                     2: 53
                     3: 58
                     4: 63
                     5: 71
                     6: 79
               default: 79
          }
      48: aload_0
      49: invokestatic  #6                  // Method camelhumpToUnderline:(Ljava/lang/String;)Ljava/lang/String;
      52: areturn
      53: aload_0
      54: invokevirtual #7                  // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      57: areturn
      58: aload_0
      59: invokevirtual #8                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      62: areturn
      63: aload_0
      64: invokestatic  #6                  // Method camelhumpToUnderline:(Ljava/lang/String;)Ljava/lang/String;
      67: invokevirtual #8                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      70: areturn
      71: aload_0
      72: invokestatic  #6                  // Method camelhumpToUnderline:(Ljava/lang/String;)Ljava/lang/String;
      75: invokevirtual #7                  // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      78: areturn
      79: aload_0
      80: areturn

  public static java.lang.String camelhumpToUnderline(java.lang.String);
    Code:
       0: new           #9                  // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #10                 // Method java/lang/String.toCharArray:()[C
       8: dup
       9: astore_2
      10: arraylength
      11: dup
      12: istore_1
      13: iconst_3
      14: imul
      15: iconst_2
      16: idiv
      17: iconst_1
      18: iadd
      19: invokespecial #11                 // Method java/lang/StringBuilder."<init>":(I)V
      22: astore_3
      23: iconst_0
      24: istore        5
      26: iload         5
      28: iload_1
      29: if_icmpge     77
      32: aload_2
      33: iload         5
      35: caload
      36: istore        4
      38: iload         4
      40: invokestatic  #12                 // Method isUppercaseAlpha:(C)Z
      43: ifeq          64
      46: aload_3
      47: bipush        95
      49: invokevirtual #13                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      52: iload         4
      54: invokestatic  #14                 // Method toLowerAscii:(C)C
      57: invokevirtual #13                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      60: pop
      61: goto          71
      64: aload_3
      65: iload         4
      67: invokevirtual #13                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      70: pop
      71: iinc          5, 1
      74: goto          26
      77: aload_3
      78: iconst_0
      79: invokevirtual #15                 // Method java/lang/StringBuilder.charAt:(I)C
      82: bipush        95
      84: if_icmpne     95
      87: aload_3
      88: iconst_1
      89: invokevirtual #16                 // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;
      92: goto          99
      95: aload_3
      96: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: areturn

  public static java.lang.String underlineToCamelhump(java.lang.String);
    Code:
       0: getstatic     #18                 // Field UNDERLINE_TO_CAMELHUMP_PATTERN:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #19                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: astore_1
       8: new           #9                  // class java/lang/StringBuilder
      11: dup
      12: aload_0
      13: invokespecial #20                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      16: astore_2
      17: iconst_0
      18: istore_3
      19: aload_1
      20: invokevirtual #21                 // Method java/util/regex/Matcher.find:()Z
      23: ifeq          60
      26: aload_2
      27: aload_1
      28: invokevirtual #22                 // Method java/util/regex/Matcher.start:()I
      31: iload_3
      32: isub
      33: aload_1
      34: invokevirtual #23                 // Method java/util/regex/Matcher.end:()I
      37: iload_3
      38: isub
      39: aload_1
      40: invokevirtual #24                 // Method java/util/regex/Matcher.group:()Ljava/lang/String;
      43: iconst_1
      44: invokevirtual #25                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      47: invokevirtual #7                  // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      50: invokevirtual #26                 // Method java/lang/StringBuilder.replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: iinc          3, 1
      57: goto          19
      60: aload_2
      61: iconst_0
      62: invokevirtual #15                 // Method java/lang/StringBuilder.charAt:(I)C
      65: invokestatic  #27                 // Method java/lang/Character.isUpperCase:(C)Z
      68: ifeq          89
      71: aload_2
      72: iconst_0
      73: iconst_1
      74: aload_2
      75: iconst_0
      76: invokevirtual #15                 // Method java/lang/StringBuilder.charAt:(I)C
      79: invokestatic  #28                 // Method java/lang/Character.toLowerCase:(C)C
      82: invokestatic  #29                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
      85: invokevirtual #26                 // Method java/lang/StringBuilder.replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;
      88: pop
      89: aload_2
      90: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: areturn

  public static boolean isUppercaseAlpha(char);
    Code:
       0: iload_0
       1: bipush        65
       3: if_icmplt     16
       6: iload_0
       7: bipush        90
       9: if_icmpgt     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public static boolean isLowercaseAlpha(char);
    Code:
       0: iload_0
       1: bipush        97
       3: if_icmplt     16
       6: iload_0
       7: bipush        122
       9: if_icmpgt     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public static char toUpperAscii(char);
    Code:
       0: iload_0
       1: invokestatic  #30                 // Method isLowercaseAlpha:(C)Z
       4: ifeq          13
       7: iload_0
       8: bipush        32
      10: isub
      11: i2c
      12: istore_0
      13: iload_0
      14: ireturn

  public static char toLowerAscii(char);
    Code:
       0: iload_0
       1: invokestatic  #12                 // Method isUppercaseAlpha:(C)Z
       4: ifeq          13
       7: iload_0
       8: bipush        32
      10: iadd
      11: i2c
      12: istore_0
      13: iload_0
      14: ireturn

  static {};
    Code:
       0: ldc           #31                 // String _[a-z]
       2: invokestatic  #32                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #18                 // Field UNDERLINE_TO_CAMELHUMP_PATTERN:Ljava/util/regex/Pattern;
       8: return
}
