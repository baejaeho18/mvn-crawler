Compiled from "OGNL.java"
public abstract class tk.mybatis.mapper.util.OGNL {
  public static final java.lang.String SAFE_DELETE_ERROR;

  public static final java.lang.String SAFE_DELETE_EXCEPTION;

  public tk.mybatis.mapper.util.OGNL();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean checkExampleEntityClass(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        78
       4: aload_0
       5: instanceof    #2                  // class tk/mybatis/mapper/entity/Example
       8: ifeq          78
      11: aload_1
      12: invokestatic  #3                  // Method tk/mybatis/mapper/util/StringUtil.isNotEmpty:(Ljava/lang/String;)Z
      15: ifeq          78
      18: aload_0
      19: checkcast     #2                  // class tk/mybatis/mapper/entity/Example
      22: astore_2
      23: aload_2
      24: invokevirtual #4                  // Method tk/mybatis/mapper/entity/Example.getEntityClass:()Ljava/lang/Class;
      27: astore_3
      28: aload_3
      29: invokevirtual #5                  // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      32: aload_1
      33: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      36: ifne          78
      39: new           #7                  // class tk/mybatis/mapper/MapperException
      42: dup
      43: new           #8                  // class java/lang/StringBuilder
      46: dup
      47: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #10                 // String 当前 Example 方法对应实体为:
      52: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_1
      56: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc           #12                 // String , 但是参数 Example 中的 entityClass 为:
      61: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_3
      65: invokevirtual #5                  // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      68: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokespecial #14                 // Method tk/mybatis/mapper/MapperException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: iconst_1
      79: ireturn

  public static boolean notAllNullParameterCheck(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        109
       4: aload_0
       5: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokestatic  #16                 // Method tk/mybatis/mapper/mapperhelper/EntityHelper.getColumns:(Ljava/lang/Class;)Ljava/util/Set;
      11: astore_2
      12: new           #17                 // class java/util/HashSet
      15: dup
      16: aload_1
      17: ldc           #18                 // String ,
      19: invokevirtual #19                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      22: invokestatic  #20                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      25: invokespecial #21                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      28: astore_3
      29: aload_2
      30: invokeinterface #22,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      35: astore        4
      37: aload         4
      39: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          94
      47: aload         4
      49: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #25                 // class tk/mybatis/mapper/entity/EntityColumn
      57: astore        5
      59: aload_3
      60: aload         5
      62: invokevirtual #26                 // Method tk/mybatis/mapper/entity/EntityColumn.getProperty:()Ljava/lang/String;
      65: invokeinterface #27,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      70: ifeq          91
      73: aload         5
      75: invokevirtual #28                 // Method tk/mybatis/mapper/entity/EntityColumn.getEntityField:()Ltk/mybatis/mapper/entity/EntityField;
      78: aload_0
      79: invokevirtual #29                 // Method tk/mybatis/mapper/entity/EntityField.getValue:(Ljava/lang/Object;)Ljava/lang/Object;
      82: astore        6
      84: aload         6
      86: ifnull        91
      89: iconst_1
      90: ireturn
      91: goto          37
      94: goto          109
      97: astore_2
      98: new           #7                  // class tk/mybatis/mapper/MapperException
     101: dup
     102: ldc           #32                 // String 通用 Mapper 安全检查: 对查询条件参数进行检查时出错!
     104: aload_2
     105: invokespecial #33                 // Method tk/mybatis/mapper/MapperException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     108: athrow
     109: new           #7                  // class tk/mybatis/mapper/MapperException
     112: dup
     113: ldc           #34                 // String 通用 Mapper 安全检查: 当前操作的方法没有指定查询条件，不允许执行该操作!
     115: invokespecial #14                 // Method tk/mybatis/mapper/MapperException."<init>":(Ljava/lang/String;)V
     118: athrow
    Exception table:
       from    to  target type
           4    90    97   Class java/lang/Exception
          91    94    97   Class java/lang/Exception

  public static boolean exampleHasAtLeastOneCriteriaCheck(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        101
       4: aload_0
       5: instanceof    #2                  // class tk/mybatis/mapper/entity/Example
       8: ifeq          37
      11: aload_0
      12: checkcast     #2                  // class tk/mybatis/mapper/entity/Example
      15: invokevirtual #35                 // Method tk/mybatis/mapper/entity/Example.getOredCriteria:()Ljava/util/List;
      18: astore_1
      19: aload_1
      20: ifnull        34
      23: aload_1
      24: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I
      29: ifle          34
      32: iconst_1
      33: ireturn
      34: goto          86
      37: aload_0
      38: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      41: ldc           #37                 // String getOredCriteria
      43: iconst_0
      44: anewarray     #38                 // class java/lang/Class
      47: invokevirtual #39                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      50: astore_1
      51: aload_1
      52: aload_0
      53: iconst_0
      54: anewarray     #40                 // class java/lang/Object
      57: invokevirtual #41                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      60: astore_2
      61: aload_2
      62: ifnull        86
      65: aload_2
      66: instanceof    #42                 // class java/util/List
      69: ifeq          86
      72: aload_2
      73: checkcast     #42                 // class java/util/List
      76: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I
      81: ifle          86
      84: iconst_1
      85: ireturn
      86: goto          101
      89: astore_1
      90: new           #7                  // class tk/mybatis/mapper/MapperException
      93: dup
      94: ldc           #32                 // String 通用 Mapper 安全检查: 对查询条件参数进行检查时出错!
      96: aload_1
      97: invokespecial #33                 // Method tk/mybatis/mapper/MapperException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     100: athrow
     101: new           #7                  // class tk/mybatis/mapper/MapperException
     104: dup
     105: ldc           #34                 // String 通用 Mapper 安全检查: 当前操作的方法没有指定查询条件，不允许执行该操作!
     107: invokespecial #14                 // Method tk/mybatis/mapper/MapperException."<init>":(Ljava/lang/String;)V
     110: athrow
    Exception table:
       from    to  target type
           4    33    89   Class java/lang/Exception
          34    85    89   Class java/lang/Exception

  public static boolean hasSelectColumns(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        37
       4: aload_0
       5: instanceof    #2                  // class tk/mybatis/mapper/entity/Example
       8: ifeq          37
      11: aload_0
      12: checkcast     #2                  // class tk/mybatis/mapper/entity/Example
      15: astore_1
      16: aload_1
      17: invokevirtual #43                 // Method tk/mybatis/mapper/entity/Example.getSelectColumns:()Ljava/util/Set;
      20: ifnull        37
      23: aload_1
      24: invokevirtual #43                 // Method tk/mybatis/mapper/entity/Example.getSelectColumns:()Ljava/util/Set;
      27: invokeinterface #44,  1           // InterfaceMethod java/util/Set.size:()I
      32: ifle          37
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn

  public static boolean hasCountColumn(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        24
       4: aload_0
       5: instanceof    #2                  // class tk/mybatis/mapper/entity/Example
       8: ifeq          24
      11: aload_0
      12: checkcast     #2                  // class tk/mybatis/mapper/entity/Example
      15: astore_1
      16: aload_1
      17: invokevirtual #45                 // Method tk/mybatis/mapper/entity/Example.getCountColumn:()Ljava/lang/String;
      20: invokestatic  #3                  // Method tk/mybatis/mapper/util/StringUtil.isNotEmpty:(Ljava/lang/String;)Z
      23: ireturn
      24: iconst_0
      25: ireturn

  public static boolean hasForUpdate(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        21
       4: aload_0
       5: instanceof    #2                  // class tk/mybatis/mapper/entity/Example
       8: ifeq          21
      11: aload_0
      12: checkcast     #2                  // class tk/mybatis/mapper/entity/Example
      15: astore_1
      16: aload_1
      17: invokevirtual #46                 // Method tk/mybatis/mapper/entity/Example.isForUpdate:()Z
      20: ireturn
      21: iconst_0
      22: ireturn

  public static boolean hasNoSelectColumns(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method hasSelectColumns:(Ljava/lang/Object;)Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static boolean isDynamicParameter(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: instanceof    #48                 // class tk/mybatis/mapper/entity/IDynamicTableName
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public static boolean isNotDynamicParameter(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #49                 // Method isDynamicParameter:(Ljava/lang/Object;)Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static java.lang.String andOr(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #50                 // class tk/mybatis/mapper/entity/Example$Criteria
       4: ifeq          15
       7: aload_0
       8: checkcast     #50                 // class tk/mybatis/mapper/entity/Example$Criteria
      11: invokevirtual #51                 // Method tk/mybatis/mapper/entity/Example$Criteria.getAndOr:()Ljava/lang/String;
      14: areturn
      15: aload_0
      16: instanceof    #52                 // class tk/mybatis/mapper/entity/Example$Criterion
      19: ifeq          30
      22: aload_0
      23: checkcast     #52                 // class tk/mybatis/mapper/entity/Example$Criterion
      26: invokevirtual #53                 // Method tk/mybatis/mapper/entity/Example$Criterion.getAndOr:()Ljava/lang/String;
      29: areturn
      30: aload_0
      31: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      34: invokevirtual #5                  // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      37: ldc           #54                 // String Criteria
      39: invokevirtual #55                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      42: ifeq          48
      45: ldc           #56                 // String or
      47: areturn
      48: ldc           #57                 // String and
      50: areturn
}
