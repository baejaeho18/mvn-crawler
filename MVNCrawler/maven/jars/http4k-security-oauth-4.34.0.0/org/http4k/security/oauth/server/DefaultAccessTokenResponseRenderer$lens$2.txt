Compiled from "AccessTokenResponseRenderer.kt"
final class org.http4k.security.oauth.server.DefaultAccessTokenResponseRenderer$lens$2 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function1<org.http4k.security.AccessTokenDetails, org.http4k.security.AccessTokenResponse> {
  public static final org.http4k.security.oauth.server.DefaultAccessTokenResponseRenderer$lens$2 INSTANCE;

  org.http4k.security.oauth.server.DefaultAccessTokenResponseRenderer$lens$2();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #12                 // Method kotlin/jvm/internal/Lambda."<init>":(I)V
       5: return

  public final org.http4k.security.AccessTokenResponse invoke(org.http4k.security.AccessTokenDetails);
    Code:
       0: aload_1
       1: ldc           #19                 // String it
       3: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #27                 // class org/http4k/security/AccessTokenResponse
       9: dup
      10: aload_1
      11: invokevirtual #33                 // Method org/http4k/security/AccessTokenDetails.getAccessToken:()Lorg/http4k/security/AccessToken;
      14: invokeinterface #39,  1           // InterfaceMethod org/http4k/security/AccessToken.getValue:()Ljava/lang/String;
      19: aload_1
      20: invokevirtual #33                 // Method org/http4k/security/AccessTokenDetails.getAccessToken:()Lorg/http4k/security/AccessToken;
      23: invokeinterface #42,  1           // InterfaceMethod org/http4k/security/AccessToken.getType:()Ljava/lang/String;
      28: aload_1
      29: invokevirtual #33                 // Method org/http4k/security/AccessTokenDetails.getAccessToken:()Lorg/http4k/security/AccessToken;
      32: invokeinterface #46,  1           // InterfaceMethod org/http4k/security/AccessToken.getExpiresIn:()Ljava/lang/Long;
      37: aload_1
      38: invokevirtual #50                 // Method org/http4k/security/AccessTokenDetails.getIdToken:()Lorg/http4k/security/openid/IdToken;
      41: dup
      42: ifnull        51
      45: invokevirtual #53                 // Method org/http4k/security/openid/IdToken.getValue:()Ljava/lang/String;
      48: goto          53
      51: pop
      52: aconst_null
      53: aload_1
      54: invokevirtual #33                 // Method org/http4k/security/AccessTokenDetails.getAccessToken:()Lorg/http4k/security/AccessToken;
      57: invokeinterface #56,  1           // InterfaceMethod org/http4k/security/AccessToken.getScope:()Ljava/lang/String;
      62: aload_1
      63: invokevirtual #33                 // Method org/http4k/security/AccessTokenDetails.getAccessToken:()Lorg/http4k/security/AccessToken;
      66: invokeinterface #60,  1           // InterfaceMethod org/http4k/security/AccessToken.getRefreshToken:()Lorg/http4k/security/oauth/core/RefreshToken;
      71: dup
      72: ifnull        81
      75: invokevirtual #63                 // Method org/http4k/security/oauth/core/RefreshToken.getValue:()Ljava/lang/String;
      78: goto          83
      81: pop
      82: aconst_null
      83: invokespecial #66                 // Method org/http4k/security/AccessTokenResponse."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      86: areturn

  public java.lang.Object invoke(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class org/http4k/security/AccessTokenDetails
       5: invokevirtual #74                 // Method invoke:(Lorg/http4k/security/AccessTokenDetails;)Lorg/http4k/security/AccessTokenResponse;
       8: areturn

  static {};
    Code:
       0: new           #2                  // class org/http4k/security/oauth/server/DefaultAccessTokenResponseRenderer$lens$2
       3: dup
       4: invokespecial #79                 // Method "<init>":()V
       7: putstatic     #82                 // Field INSTANCE:Lorg/http4k/security/oauth/server/DefaultAccessTokenResponseRenderer$lens$2;
      10: return
}
