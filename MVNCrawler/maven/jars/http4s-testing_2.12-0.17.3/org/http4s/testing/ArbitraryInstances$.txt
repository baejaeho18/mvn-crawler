Compiled from "ArbitraryInstances.scala"
public final class org.http4s.testing.ArbitraryInstances$ implements org.http4s.testing.ArbitraryInstances {
  public static org.http4s.testing.ArbitraryInstances$ MODULE$;

  private final org.scalacheck.Arbitrary<org.http4s.ContentCoding> arbitraryContentCoding;

  private final org.scalacheck.Arbitrary<org.http4s.headers.Accept$minusEncoding> arbitraryAcceptEncoding;

  private final org.scalacheck.Arbitrary<org.http4s.LanguageTag> arbitraryLanguageTag;

  private final org.scalacheck.Arbitrary<org.http4s.headers.Accept$minusLanguage> arbitraryAcceptLanguage;

  private final org.scalacheck.Arbitrary<org.http4s.util.CaseInsensitiveString> arbitraryCaseInsensitiveString;

  private final org.scalacheck.Cogen<org.http4s.util.CaseInsensitiveString> cogenCaseInsensitiveString;

  private final org.scalacheck.Gen<java.lang.Object> genTchar;

  private final org.scalacheck.Gen<java.lang.String> genToken;

  private final org.scalacheck.Gen<java.lang.Object> genVchar;

  private final org.scalacheck.Gen<java.lang.Object> genFieldVchar;

  private final org.scalacheck.Gen<java.lang.String> genFieldContent;

  private final org.scalacheck.Gen<java.lang.String> genFieldValue;

  private final org.scalacheck.Gen<org.http4s.Method> genStandardMethod;

  private final org.scalacheck.Arbitrary<org.http4s.Method> arbitraryMethod;

  private final org.scalacheck.Cogen<org.http4s.Method> cogenMethod;

  private final org.scalacheck.Gen<java.lang.Object> genValidStatusCode;

  private final org.scalacheck.Gen<org.http4s.Status> genStandardStatus;

  private final org.scalacheck.Gen<org.http4s.Status> genCustomStatus;

  private final org.scalacheck.Arbitrary<org.http4s.Status> arbitraryStatus;

  private final org.scalacheck.Cogen<org.http4s.Status> cogenStatus;

  private final org.scalacheck.Arbitrary<scala.Tuple2<java.lang.String, scala.Option<java.lang.String>>> arbitraryQueryParam;

  private final org.scalacheck.Arbitrary<org.http4s.Query> arbitraryQuery;

  private final org.scalacheck.Arbitrary<org.http4s.HttpVersion> arbitraryHttpVersion;

  private final org.scalacheck.Cogen<org.http4s.HttpVersion> cogenHttpVersion;

  private final org.scalacheck.Arbitrary<java.nio.charset.Charset> arbitraryNioCharset;

  private final org.scalacheck.Cogen<java.nio.charset.Charset> cogenNioCharset;

  private final org.scalacheck.Arbitrary<org.http4s.Charset> arbitraryCharset;

  private final org.scalacheck.Cogen<org.http4s.Charset> cogenCharset;

  private final org.scalacheck.Arbitrary<org.http4s.QValue> arbitraryQValue;

  private final org.scalacheck.Cogen<org.http4s.QValue> cogenQValue;

  private final org.scalacheck.Arbitrary<org.http4s.CharsetRange> arbitraryCharsetRange;

  private final org.scalacheck.Cogen<org.http4s.CharsetRange> cogenCharsetRange;

  private final org.scalacheck.Arbitrary<org.http4s.CharsetRange$Atom> arbitraryCharsetAtomRange;

  private final org.scalacheck.Arbitrary<org.http4s.CharsetRange$$times> arbitraryCharsetSplatRange;

  private final org.scalacheck.Arbitrary<org.http4s.headers.Accept$minusCharset> arbitraryAcceptCharset;

  private final org.scalacheck.Arbitrary<scala.collection.immutable.Map<java.lang.String, scala.collection.Seq<java.lang.String>>> arbitraryUrlForm;

  private final org.scalacheck.Arbitrary<org.http4s.headers.Allow> arbitraryAllow;

  private final org.scalacheck.Arbitrary<org.http4s.headers.Content$minusLength> arbitraryContentLength;

  private final org.scalacheck.Arbitrary<org.http4s.headers.X$minusB3$minusTraceId> arbitraryXB3TraceId;

  private final org.scalacheck.Arbitrary<org.http4s.headers.X$minusB3$minusSpanId> arbitraryXB3SpanId;

  private final org.scalacheck.Arbitrary<org.http4s.headers.X$minusB3$minusParentSpanId> arbitraryXB3ParentSpanId;

  private final org.scalacheck.Arbitrary<org.http4s.headers.X$minusB3$minusFlags> arbitraryXB3Flags;

  private final org.scalacheck.Arbitrary<org.http4s.headers.X$minusB3$minusSampled> arbitraryXB3Sampled;

  private final org.scalacheck.Gen<org.http4s.HttpDate> genHttpDate;

  private final org.scalacheck.Arbitrary<org.http4s.headers.Date> arbitraryDateHeader;

  private final org.scalacheck.Gen<org.http4s.HttpDate> genHttpExpireDate;

  private final org.scalacheck.Gen<scala.concurrent.duration.FiniteDuration> genFiniteDuration;

  private final org.scalacheck.Arbitrary<org.http4s.headers.Expires> arbitraryExpiresHeader;

  private final org.scalacheck.Arbitrary<org.http4s.headers.Retry$minusAfter> arbitraryRetryAfterHeader;

  private final org.scalacheck.Arbitrary<org.http4s.headers.Age> arbitraryAgeHeader;

  private final org.scalacheck.Arbitrary<org.http4s.headers.Strict$minusTransport$minusSecurity> arbitrarySTS;

  private final org.scalacheck.Arbitrary<org.http4s.Header$Raw> arbitraryRawHeader;

  private final org.scalacheck.Arbitrary<org.http4s.Header> arbitraryHeader;

  private final org.scalacheck.Arbitrary<org.http4s.ServerSentEvent> arbitraryServerSentEvent;

  private final org.scalacheck.Gen<java.lang.Object> genHexDigit;

  private final org.scalacheck.Arbitrary<org.http4s.Uri$IPv4> arbitraryIPv4;

  private final org.scalacheck.Arbitrary<org.http4s.Uri$IPv6> arbitraryIPv6;

  private final org.scalacheck.Arbitrary<org.http4s.Uri$Host> arbitraryUriHost;

  private final org.scalacheck.Arbitrary<org.http4s.Uri$Authority> arbitraryAuthority;

  private final org.scalacheck.Gen<java.lang.String> genPctEncoded;

  private final org.scalacheck.Gen<java.lang.Object> genUnreserved;

  private final org.scalacheck.Gen<java.lang.Object> genSubDelims;

  private final org.scalacheck.Arbitrary<org.http4s.Uri> arbitraryUri;

  private final org.scalacheck.Gen<org.http4s.CharsetRange> charsetRangesNoQuality;

  public static {};
    Code:
       0: new           #2                  // class org/http4s/testing/ArbitraryInstances$
       3: invokespecial #177                // Method "<init>":()V
       6: return

  public <A> org.scalacheck.Arbitrary<cats.data.NonEmptyList<A>> arbitraryNonEmptyList(org.scalacheck.Arbitrary<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #184                // InterfaceMethod org/http4s/testing/ArbitraryInstances.arbitraryNonEmptyList$:(Lorg/http4s/testing/ArbitraryInstances;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       5: areturn

  public org.scalacheck.Gen<org.http4s.CharsetRange> genCharsetRangeNoQuality();
    Code:
       0: aload_0
       1: invokestatic  #191                // InterfaceMethod org/http4s/testing/ArbitraryInstances.genCharsetRangeNoQuality$:(Lorg/http4s/testing/ArbitraryInstances;)Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.util.CaseInsensitiveString> arbitraryCaseInsensitiveString();
    Code:
       0: aload_0
       1: getfield      #194                // Field arbitraryCaseInsensitiveString:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Cogen<org.http4s.util.CaseInsensitiveString> cogenCaseInsensitiveString();
    Code:
       0: aload_0
       1: getfield      #197                // Field cogenCaseInsensitiveString:Lorg/scalacheck/Cogen;
       4: areturn

  public org.scalacheck.Gen<java.lang.Object> genTchar();
    Code:
       0: aload_0
       1: getfield      #199                // Field genTchar:Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Gen<java.lang.String> genToken();
    Code:
       0: aload_0
       1: getfield      #201                // Field genToken:Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Gen<java.lang.Object> genVchar();
    Code:
       0: aload_0
       1: getfield      #203                // Field genVchar:Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Gen<java.lang.Object> genFieldVchar();
    Code:
       0: aload_0
       1: getfield      #205                // Field genFieldVchar:Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Gen<java.lang.String> genFieldContent();
    Code:
       0: aload_0
       1: getfield      #207                // Field genFieldContent:Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Gen<java.lang.String> genFieldValue();
    Code:
       0: aload_0
       1: getfield      #209                // Field genFieldValue:Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Gen<org.http4s.Method> genStandardMethod();
    Code:
       0: aload_0
       1: getfield      #211                // Field genStandardMethod:Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.Method> arbitraryMethod();
    Code:
       0: aload_0
       1: getfield      #213                // Field arbitraryMethod:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Cogen<org.http4s.Method> cogenMethod();
    Code:
       0: aload_0
       1: getfield      #215                // Field cogenMethod:Lorg/scalacheck/Cogen;
       4: areturn

  public org.scalacheck.Gen<java.lang.Object> genValidStatusCode();
    Code:
       0: aload_0
       1: getfield      #217                // Field genValidStatusCode:Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Gen<org.http4s.Status> genStandardStatus();
    Code:
       0: aload_0
       1: getfield      #219                // Field genStandardStatus:Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Gen<org.http4s.Status> genCustomStatus();
    Code:
       0: aload_0
       1: getfield      #221                // Field genCustomStatus:Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.Status> arbitraryStatus();
    Code:
       0: aload_0
       1: getfield      #223                // Field arbitraryStatus:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Cogen<org.http4s.Status> cogenStatus();
    Code:
       0: aload_0
       1: getfield      #225                // Field cogenStatus:Lorg/scalacheck/Cogen;
       4: areturn

  public org.scalacheck.Arbitrary<scala.Tuple2<java.lang.String, scala.Option<java.lang.String>>> arbitraryQueryParam();
    Code:
       0: aload_0
       1: getfield      #227                // Field arbitraryQueryParam:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.Query> arbitraryQuery();
    Code:
       0: aload_0
       1: getfield      #229                // Field arbitraryQuery:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.HttpVersion> arbitraryHttpVersion();
    Code:
       0: aload_0
       1: getfield      #231                // Field arbitraryHttpVersion:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Cogen<org.http4s.HttpVersion> cogenHttpVersion();
    Code:
       0: aload_0
       1: getfield      #233                // Field cogenHttpVersion:Lorg/scalacheck/Cogen;
       4: areturn

  public org.scalacheck.Arbitrary<java.nio.charset.Charset> arbitraryNioCharset();
    Code:
       0: aload_0
       1: getfield      #235                // Field arbitraryNioCharset:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Cogen<java.nio.charset.Charset> cogenNioCharset();
    Code:
       0: aload_0
       1: getfield      #237                // Field cogenNioCharset:Lorg/scalacheck/Cogen;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.Charset> arbitraryCharset();
    Code:
       0: aload_0
       1: getfield      #239                // Field arbitraryCharset:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Cogen<org.http4s.Charset> cogenCharset();
    Code:
       0: aload_0
       1: getfield      #241                // Field cogenCharset:Lorg/scalacheck/Cogen;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.QValue> arbitraryQValue();
    Code:
       0: aload_0
       1: getfield      #243                // Field arbitraryQValue:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Cogen<org.http4s.QValue> cogenQValue();
    Code:
       0: aload_0
       1: getfield      #245                // Field cogenQValue:Lorg/scalacheck/Cogen;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.CharsetRange> arbitraryCharsetRange();
    Code:
       0: aload_0
       1: getfield      #247                // Field arbitraryCharsetRange:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Cogen<org.http4s.CharsetRange> cogenCharsetRange();
    Code:
       0: aload_0
       1: getfield      #249                // Field cogenCharsetRange:Lorg/scalacheck/Cogen;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.CharsetRange$Atom> arbitraryCharsetAtomRange();
    Code:
       0: aload_0
       1: getfield      #251                // Field arbitraryCharsetAtomRange:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.CharsetRange$$times> arbitraryCharsetSplatRange();
    Code:
       0: aload_0
       1: getfield      #253                // Field arbitraryCharsetSplatRange:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.headers.Accept$minusCharset> arbitraryAcceptCharset();
    Code:
       0: aload_0
       1: getfield      #255                // Field arbitraryAcceptCharset:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<scala.collection.immutable.Map<java.lang.String, scala.collection.Seq<java.lang.String>>> arbitraryUrlForm();
    Code:
       0: aload_0
       1: getfield      #257                // Field arbitraryUrlForm:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.headers.Allow> arbitraryAllow();
    Code:
       0: aload_0
       1: getfield      #259                // Field arbitraryAllow:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.headers.Content$minusLength> arbitraryContentLength();
    Code:
       0: aload_0
       1: getfield      #261                // Field arbitraryContentLength:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.headers.X$minusB3$minusTraceId> arbitraryXB3TraceId();
    Code:
       0: aload_0
       1: getfield      #263                // Field arbitraryXB3TraceId:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.headers.X$minusB3$minusSpanId> arbitraryXB3SpanId();
    Code:
       0: aload_0
       1: getfield      #265                // Field arbitraryXB3SpanId:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.headers.X$minusB3$minusParentSpanId> arbitraryXB3ParentSpanId();
    Code:
       0: aload_0
       1: getfield      #267                // Field arbitraryXB3ParentSpanId:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.headers.X$minusB3$minusFlags> arbitraryXB3Flags();
    Code:
       0: aload_0
       1: getfield      #269                // Field arbitraryXB3Flags:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.headers.X$minusB3$minusSampled> arbitraryXB3Sampled();
    Code:
       0: aload_0
       1: getfield      #271                // Field arbitraryXB3Sampled:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Gen<org.http4s.HttpDate> genHttpDate();
    Code:
       0: aload_0
       1: getfield      #273                // Field genHttpDate:Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.headers.Date> arbitraryDateHeader();
    Code:
       0: aload_0
       1: getfield      #275                // Field arbitraryDateHeader:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Gen<org.http4s.HttpDate> genHttpExpireDate();
    Code:
       0: aload_0
       1: getfield      #277                // Field genHttpExpireDate:Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Gen<scala.concurrent.duration.FiniteDuration> genFiniteDuration();
    Code:
       0: aload_0
       1: getfield      #279                // Field genFiniteDuration:Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.headers.Expires> arbitraryExpiresHeader();
    Code:
       0: aload_0
       1: getfield      #281                // Field arbitraryExpiresHeader:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.headers.Retry$minusAfter> arbitraryRetryAfterHeader();
    Code:
       0: aload_0
       1: getfield      #283                // Field arbitraryRetryAfterHeader:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.headers.Age> arbitraryAgeHeader();
    Code:
       0: aload_0
       1: getfield      #285                // Field arbitraryAgeHeader:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.headers.Strict$minusTransport$minusSecurity> arbitrarySTS();
    Code:
       0: aload_0
       1: getfield      #287                // Field arbitrarySTS:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.Header$Raw> arbitraryRawHeader();
    Code:
       0: aload_0
       1: getfield      #289                // Field arbitraryRawHeader:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.Header> arbitraryHeader();
    Code:
       0: aload_0
       1: getfield      #291                // Field arbitraryHeader:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.ServerSentEvent> arbitraryServerSentEvent();
    Code:
       0: aload_0
       1: getfield      #293                // Field arbitraryServerSentEvent:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Gen<java.lang.Object> genHexDigit();
    Code:
       0: aload_0
       1: getfield      #295                // Field genHexDigit:Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.Uri$IPv4> arbitraryIPv4();
    Code:
       0: aload_0
       1: getfield      #297                // Field arbitraryIPv4:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.Uri$IPv6> arbitraryIPv6();
    Code:
       0: aload_0
       1: getfield      #299                // Field arbitraryIPv6:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.Uri$Host> arbitraryUriHost();
    Code:
       0: aload_0
       1: getfield      #301                // Field arbitraryUriHost:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.Uri$Authority> arbitraryAuthority();
    Code:
       0: aload_0
       1: getfield      #303                // Field arbitraryAuthority:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Gen<java.lang.String> genPctEncoded();
    Code:
       0: aload_0
       1: getfield      #305                // Field genPctEncoded:Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Gen<java.lang.Object> genUnreserved();
    Code:
       0: aload_0
       1: getfield      #307                // Field genUnreserved:Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Gen<java.lang.Object> genSubDelims();
    Code:
       0: aload_0
       1: getfield      #309                // Field genSubDelims:Lorg/scalacheck/Gen;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.Uri> arbitraryUri();
    Code:
       0: aload_0
       1: getfield      #311                // Field arbitraryUri:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Gen<org.http4s.CharsetRange> charsetRangesNoQuality();
    Code:
       0: aload_0
       1: getfield      #313                // Field charsetRangesNoQuality:Lorg/scalacheck/Gen;
       4: areturn

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryCaseInsensitiveString_$eq(org.scalacheck.Arbitrary<org.http4s.util.CaseInsensitiveString>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #194                // Field arbitraryCaseInsensitiveString:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$cogenCaseInsensitiveString_$eq(org.scalacheck.Cogen<org.http4s.util.CaseInsensitiveString>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #197                // Field cogenCaseInsensitiveString:Lorg/scalacheck/Cogen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$genTchar_$eq(org.scalacheck.Gen<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #199                // Field genTchar:Lorg/scalacheck/Gen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$genToken_$eq(org.scalacheck.Gen<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #201                // Field genToken:Lorg/scalacheck/Gen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$genVchar_$eq(org.scalacheck.Gen<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #203                // Field genVchar:Lorg/scalacheck/Gen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$genFieldVchar_$eq(org.scalacheck.Gen<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #205                // Field genFieldVchar:Lorg/scalacheck/Gen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$genFieldContent_$eq(org.scalacheck.Gen<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #207                // Field genFieldContent:Lorg/scalacheck/Gen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$genFieldValue_$eq(org.scalacheck.Gen<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #209                // Field genFieldValue:Lorg/scalacheck/Gen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$genStandardMethod_$eq(org.scalacheck.Gen<org.http4s.Method>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #211                // Field genStandardMethod:Lorg/scalacheck/Gen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryMethod_$eq(org.scalacheck.Arbitrary<org.http4s.Method>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #213                // Field arbitraryMethod:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$cogenMethod_$eq(org.scalacheck.Cogen<org.http4s.Method>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #215                // Field cogenMethod:Lorg/scalacheck/Cogen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$genValidStatusCode_$eq(org.scalacheck.Gen<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #217                // Field genValidStatusCode:Lorg/scalacheck/Gen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$genStandardStatus_$eq(org.scalacheck.Gen<org.http4s.Status>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #219                // Field genStandardStatus:Lorg/scalacheck/Gen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$genCustomStatus_$eq(org.scalacheck.Gen<org.http4s.Status>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #221                // Field genCustomStatus:Lorg/scalacheck/Gen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryStatus_$eq(org.scalacheck.Arbitrary<org.http4s.Status>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #223                // Field arbitraryStatus:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$cogenStatus_$eq(org.scalacheck.Cogen<org.http4s.Status>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #225                // Field cogenStatus:Lorg/scalacheck/Cogen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryQueryParam_$eq(org.scalacheck.Arbitrary<scala.Tuple2<java.lang.String, scala.Option<java.lang.String>>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #227                // Field arbitraryQueryParam:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryQuery_$eq(org.scalacheck.Arbitrary<org.http4s.Query>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #229                // Field arbitraryQuery:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryHttpVersion_$eq(org.scalacheck.Arbitrary<org.http4s.HttpVersion>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #231                // Field arbitraryHttpVersion:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$cogenHttpVersion_$eq(org.scalacheck.Cogen<org.http4s.HttpVersion>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #233                // Field cogenHttpVersion:Lorg/scalacheck/Cogen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryNioCharset_$eq(org.scalacheck.Arbitrary<java.nio.charset.Charset>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #235                // Field arbitraryNioCharset:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$cogenNioCharset_$eq(org.scalacheck.Cogen<java.nio.charset.Charset>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #237                // Field cogenNioCharset:Lorg/scalacheck/Cogen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryCharset_$eq(org.scalacheck.Arbitrary<org.http4s.Charset>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #239                // Field arbitraryCharset:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$cogenCharset_$eq(org.scalacheck.Cogen<org.http4s.Charset>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #241                // Field cogenCharset:Lorg/scalacheck/Cogen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryQValue_$eq(org.scalacheck.Arbitrary<org.http4s.QValue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #243                // Field arbitraryQValue:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$cogenQValue_$eq(org.scalacheck.Cogen<org.http4s.QValue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #245                // Field cogenQValue:Lorg/scalacheck/Cogen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryCharsetRange_$eq(org.scalacheck.Arbitrary<org.http4s.CharsetRange>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #247                // Field arbitraryCharsetRange:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$cogenCharsetRange_$eq(org.scalacheck.Cogen<org.http4s.CharsetRange>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #249                // Field cogenCharsetRange:Lorg/scalacheck/Cogen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryCharsetAtomRange_$eq(org.scalacheck.Arbitrary<org.http4s.CharsetRange$Atom>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #251                // Field arbitraryCharsetAtomRange:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryCharsetSplatRange_$eq(org.scalacheck.Arbitrary<org.http4s.CharsetRange$$times>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #253                // Field arbitraryCharsetSplatRange:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryAcceptCharset_$eq(org.scalacheck.Arbitrary<org.http4s.headers.Accept$minusCharset>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #255                // Field arbitraryAcceptCharset:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryUrlForm_$eq(org.scalacheck.Arbitrary<scala.collection.immutable.Map<java.lang.String, scala.collection.Seq<java.lang.String>>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #257                // Field arbitraryUrlForm:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryAllow_$eq(org.scalacheck.Arbitrary<org.http4s.headers.Allow>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #259                // Field arbitraryAllow:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryContentLength_$eq(org.scalacheck.Arbitrary<org.http4s.headers.Content$minusLength>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #261                // Field arbitraryContentLength:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryXB3TraceId_$eq(org.scalacheck.Arbitrary<org.http4s.headers.X$minusB3$minusTraceId>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #263                // Field arbitraryXB3TraceId:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryXB3SpanId_$eq(org.scalacheck.Arbitrary<org.http4s.headers.X$minusB3$minusSpanId>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #265                // Field arbitraryXB3SpanId:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryXB3ParentSpanId_$eq(org.scalacheck.Arbitrary<org.http4s.headers.X$minusB3$minusParentSpanId>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #267                // Field arbitraryXB3ParentSpanId:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryXB3Flags_$eq(org.scalacheck.Arbitrary<org.http4s.headers.X$minusB3$minusFlags>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #269                // Field arbitraryXB3Flags:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryXB3Sampled_$eq(org.scalacheck.Arbitrary<org.http4s.headers.X$minusB3$minusSampled>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #271                // Field arbitraryXB3Sampled:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$genHttpDate_$eq(org.scalacheck.Gen<org.http4s.HttpDate>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #273                // Field genHttpDate:Lorg/scalacheck/Gen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryDateHeader_$eq(org.scalacheck.Arbitrary<org.http4s.headers.Date>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #275                // Field arbitraryDateHeader:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$genHttpExpireDate_$eq(org.scalacheck.Gen<org.http4s.HttpDate>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #277                // Field genHttpExpireDate:Lorg/scalacheck/Gen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$genFiniteDuration_$eq(org.scalacheck.Gen<scala.concurrent.duration.FiniteDuration>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #279                // Field genFiniteDuration:Lorg/scalacheck/Gen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryExpiresHeader_$eq(org.scalacheck.Arbitrary<org.http4s.headers.Expires>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #281                // Field arbitraryExpiresHeader:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryRetryAfterHeader_$eq(org.scalacheck.Arbitrary<org.http4s.headers.Retry$minusAfter>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #283                // Field arbitraryRetryAfterHeader:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryAgeHeader_$eq(org.scalacheck.Arbitrary<org.http4s.headers.Age>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #285                // Field arbitraryAgeHeader:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitrarySTS_$eq(org.scalacheck.Arbitrary<org.http4s.headers.Strict$minusTransport$minusSecurity>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #287                // Field arbitrarySTS:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryRawHeader_$eq(org.scalacheck.Arbitrary<org.http4s.Header$Raw>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #289                // Field arbitraryRawHeader:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryHeader_$eq(org.scalacheck.Arbitrary<org.http4s.Header>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #291                // Field arbitraryHeader:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryServerSentEvent_$eq(org.scalacheck.Arbitrary<org.http4s.ServerSentEvent>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #293                // Field arbitraryServerSentEvent:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$genHexDigit_$eq(org.scalacheck.Gen<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #295                // Field genHexDigit:Lorg/scalacheck/Gen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryIPv4_$eq(org.scalacheck.Arbitrary<org.http4s.Uri$IPv4>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #297                // Field arbitraryIPv4:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryIPv6_$eq(org.scalacheck.Arbitrary<org.http4s.Uri$IPv6>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #299                // Field arbitraryIPv6:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryUriHost_$eq(org.scalacheck.Arbitrary<org.http4s.Uri$Host>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #301                // Field arbitraryUriHost:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryAuthority_$eq(org.scalacheck.Arbitrary<org.http4s.Uri$Authority>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #303                // Field arbitraryAuthority:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$genPctEncoded_$eq(org.scalacheck.Gen<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #305                // Field genPctEncoded:Lorg/scalacheck/Gen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$genUnreserved_$eq(org.scalacheck.Gen<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #307                // Field genUnreserved:Lorg/scalacheck/Gen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$genSubDelims_$eq(org.scalacheck.Gen<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #309                // Field genSubDelims:Lorg/scalacheck/Gen;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$arbitraryUri_$eq(org.scalacheck.Arbitrary<org.http4s.Uri>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #311                // Field arbitraryUri:Lorg/scalacheck/Arbitrary;
       5: return

  public void org$http4s$testing$ArbitraryInstances$_setter_$charsetRangesNoQuality_$eq(org.scalacheck.Gen<org.http4s.CharsetRange>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #313                // Field charsetRangesNoQuality:Lorg/scalacheck/Gen;
       5: return

  public org.scalacheck.Gen<org.http4s.ContentCoding> genContentCodingNoQuality();
    Code:
       0: getstatic     #383                // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: getstatic     #388                // Field org/http4s/ContentCoding$.MODULE$:Lorg/http4s/ContentCoding$;
       6: invokevirtual #392                // Method org/http4s/ContentCoding$.registered:()Lscala/collection/Iterable;
       9: invokeinterface #398,  1          // InterfaceMethod scala/collection/Iterable.toSeq:()Lscala/collection/Seq;
      14: invokevirtual #402                // Method org/scalacheck/Gen$.oneOf:(Lscala/collection/Seq;)Lorg/scalacheck/Gen;
      17: areturn

  public org.scalacheck.Arbitrary<org.http4s.ContentCoding> arbitraryContentCoding();
    Code:
       0: aload_0
       1: getfield      #404                // Field arbitraryContentCoding:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.headers.Accept$minusEncoding> arbitraryAcceptEncoding();
    Code:
       0: aload_0
       1: getfield      #406                // Field arbitraryAcceptEncoding:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Gen<org.http4s.LanguageTag> genLanguageTagNoQuality();
    Code:
       0: getstatic     #383                // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: getstatic     #412                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: iconst_2
       7: anewarray     #414                // class scala/Tuple2
      10: dup
      11: iconst_0
      12: getstatic     #417                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      15: getstatic     #412                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      18: iconst_3
      19: invokestatic  #423                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      22: invokevirtual #427                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      25: aload_0
      26: invokevirtual #429                // Method genToken:()Lorg/scalacheck/Gen;
      29: invokedynamic #451,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      34: invokevirtual #457                // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      37: invokevirtual #461                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      40: aastore
      41: dup
      42: iconst_1
      43: getstatic     #417                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      46: getstatic     #412                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      49: iconst_1
      50: invokestatic  #423                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      53: invokevirtual #427                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      56: getstatic     #383                // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
      59: getstatic     #466                // Field org/http4s/LanguageTag$.MODULE$:Lorg/http4s/LanguageTag$;
      62: invokevirtual #469                // Method org/http4s/LanguageTag$.$times:()Lorg/http4s/LanguageTag;
      65: invokevirtual #473                // Method org/scalacheck/Gen$.const:(Ljava/lang/Object;)Lorg/scalacheck/Gen;
      68: invokevirtual #461                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      71: aastore
      72: checkcast     #475                // class "[Ljava/lang/Object;"
      75: invokevirtual #479                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      78: invokevirtual #482                // Method org/scalacheck/Gen$.frequency:(Lscala/collection/Seq;)Lorg/scalacheck/Gen;
      81: areturn

  public org.scalacheck.Arbitrary<org.http4s.LanguageTag> arbitraryLanguageTag();
    Code:
       0: aload_0
       1: getfield      #484                // Field arbitraryLanguageTag:Lorg/scalacheck/Arbitrary;
       4: areturn

  public org.scalacheck.Arbitrary<org.http4s.headers.Accept$minusLanguage> arbitraryAcceptLanguage();
    Code:
       0: aload_0
       1: getfield      #486                // Field arbitraryAcceptLanguage:Lorg/scalacheck/Arbitrary;
       4: areturn

  public static final org.http4s.ContentCoding $anonfun$arbitraryContentCoding$3(org.http4s.ContentCoding, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #496                // Method org/http4s/ContentCoding.withQValue:(I)Lorg/http4s/ContentCoding;
       5: areturn

  public static final org.scalacheck.Gen $anonfun$arbitraryContentCoding$2(org.http4s.ContentCoding);
    Code:
       0: getstatic     #506                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: getstatic     #508                // Field MODULE$:Lorg/http4s/testing/ArbitraryInstances$;
       6: invokevirtual #510                // Method arbitraryQValue:()Lorg/scalacheck/Arbitrary;
       9: invokevirtual #514                // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      12: aload_0
      13: invokedynamic #524,  0            // InvokeDynamic #1:apply:(Lorg/http4s/ContentCoding;)Lscala/Function1;
      18: invokevirtual #527                // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      21: areturn

  public static final org.scalacheck.Gen $anonfun$arbitraryContentCoding$1();
    Code:
       0: getstatic     #508                // Field MODULE$:Lorg/http4s/testing/ArbitraryInstances$;
       3: invokevirtual #530                // Method genContentCodingNoQuality:()Lorg/scalacheck/Gen;
       6: invokedynamic #535,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      11: invokevirtual #457                // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      14: areturn

  public static final scala.collection.immutable.Vector $anonfun$arbitraryAcceptEncoding$2(scala.collection.immutable.Set);
    Code:
       0: aload_0
       1: invokeinterface #544,  1          // InterfaceMethod scala/collection/immutable/Set.toVector:()Lscala/collection/immutable/Vector;
       6: areturn

  public static final org.http4s.ContentCoding $anonfun$arbitraryAcceptEncoding$5(scala.Tuple2);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: ifnull        36
       6: aload_2
       7: invokevirtual #552                // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #492                // class org/http4s/ContentCoding
      13: astore_3
      14: aload_2
      15: invokevirtual #555                // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: checkcast     #557                // class org/http4s/QValue
      21: invokevirtual #561                // Method org/http4s/QValue.thousandths:()I
      24: istore        4
      26: aload_3
      27: iload         4
      29: invokevirtual #496                // Method org/http4s/ContentCoding.withQValue:(I)Lorg/http4s/ContentCoding;
      32: astore_1
      33: goto          48
      36: goto          39
      39: new           #563                // class scala/MatchError
      42: dup
      43: aload_2
      44: invokespecial #566                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      47: athrow
      48: aload_1
      49: areturn

  public static final scala.Tuple2 $anonfun$arbitraryAcceptEncoding$4(scala.collection.immutable.Vector, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #577                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
       5: invokevirtual #581                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
       8: invokevirtual #587                // Method scala/collection/immutable/Vector.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      11: checkcast     #589                // class scala/collection/TraversableLike
      14: invokedynamic #594,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
      19: getstatic     #577                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      22: invokevirtual #581                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      25: invokeinterface #597,  3          // InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      30: checkcast     #583                // class scala/collection/immutable/Vector
      33: astore_2
      34: new           #414                // class scala/Tuple2
      37: dup
      38: aload_1
      39: aload_2
      40: invokespecial #600                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      43: areturn

  public static final org.http4s.headers.Accept$minusEncoding $anonfun$arbitraryAcceptEncoding$6(scala.Tuple2);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: ifnull        35
       6: aload_2
       7: invokevirtual #555                // Method scala/Tuple2._2:()Ljava/lang/Object;
      10: checkcast     #583                // class scala/collection/immutable/Vector
      13: astore_3
      14: getstatic     #610                // Field org/http4s/headers/Accept$minusEncoding$.MODULE$:Lorg/http4s/headers/Accept$minusEncoding$;
      17: aload_3
      18: invokevirtual #613                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      21: aload_3
      22: invokevirtual #616                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      25: invokevirtual #619                // Method org/http4s/headers/Accept$minusEncoding$.apply:(Ljava/lang/Object;Lscala/collection/Seq;)Lorg/http4s/Header$Recurring;
      28: checkcast     #621                // class org/http4s/headers/Accept$minusEncoding
      31: astore_1
      32: goto          47
      35: goto          38
      38: new           #563                // class scala/MatchError
      41: dup
      42: aload_2
      43: invokespecial #566                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      46: athrow
      47: aload_1
      48: areturn

  public static final org.scalacheck.Gen $anonfun$arbitraryAcceptEncoding$3(scala.collection.immutable.Vector);
    Code:
       0: getstatic     #383                // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_0
       4: invokevirtual #627                // Method scala/collection/immutable/Vector.size:()I
       7: getstatic     #508                // Field MODULE$:Lorg/http4s/testing/ArbitraryInstances$;
      10: invokevirtual #510                // Method arbitraryQValue:()Lorg/scalacheck/Arbitrary;
      13: invokevirtual #631                // Method org/scalacheck/Arbitrary.arbitrary:()Lorg/scalacheck/Gen;
      16: getstatic     #636                // Field org/scalacheck/util/Buildable$.MODULE$:Lorg/scalacheck/util/Buildable$;
      19: getstatic     #577                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      22: invokevirtual #581                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      25: invokevirtual #640                // Method org/scalacheck/util/Buildable$.buildableCanBuildFrom:(Lscala/collection/generic/CanBuildFrom;)Lorg/scalacheck/util/Buildable;
      28: getstatic     #412                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      31: invokevirtual #644                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      34: invokevirtual #648                // Method org/scalacheck/Gen$.containerOfN:(ILorg/scalacheck/Gen;Lorg/scalacheck/util/Buildable;Lscala/Function1;)Lorg/scalacheck/Gen;
      37: aload_0
      38: invokedynamic #656,  0            // InvokeDynamic #4:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
      43: invokevirtual #527                // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      46: invokedynamic #661,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
      51: invokevirtual #527                // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      54: areturn

  public static final org.scalacheck.Gen $anonfun$arbitraryAcceptEncoding$1();
    Code:
       0: getstatic     #383                // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: getstatic     #508                // Field MODULE$:Lorg/http4s/testing/ArbitraryInstances$;
       6: invokevirtual #530                // Method genContentCodingNoQuality:()Lorg/scalacheck/Gen;
       9: getstatic     #636                // Field org/scalacheck/util/Buildable$.MODULE$:Lorg/scalacheck/util/Buildable$;
      12: getstatic     #667                // Field scala/collection/immutable/Set$.MODULE$:Lscala/collection/immutable/Set$;
      15: invokevirtual #668                // Method scala/collection/immutable/Set$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      18: invokevirtual #640                // Method org/scalacheck/util/Buildable$.buildableCanBuildFrom:(Lscala/collection/generic/CanBuildFrom;)Lorg/scalacheck/util/Buildable;
      21: getstatic     #412                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      24: invokevirtual #644                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      27: invokevirtual #672                // Method org/scalacheck/Gen$.nonEmptyContainerOf:(Lorg/scalacheck/Gen;Lorg/scalacheck/util/Buildable;Lscala/Function1;)Lorg/scalacheck/Gen;
      30: invokedynamic #677,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
      35: invokevirtual #527                // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      38: invokedynamic #682,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
      43: invokevirtual #457                // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      46: areturn

  public static final org.scalacheck.Gen $anonfun$genLanguageTagNoQuality$2();
    Code:
       0: getstatic     #508                // Field MODULE$:Lorg/http4s/testing/ArbitraryInstances$;
       3: invokevirtual #429                // Method genToken:()Lorg/scalacheck/Gen;
       6: areturn

  public static final org.http4s.LanguageTag $anonfun$genLanguageTagNoQuality$3(java.lang.String, scala.collection.immutable.List);
    Code:
       0: aload_0
       1: astore_2
       2: aload_1
       3: astore_3
       4: getstatic     #466                // Field org/http4s/LanguageTag$.MODULE$:Lorg/http4s/LanguageTag$;
       7: invokevirtual #690                // Method org/http4s/LanguageTag$.apply$default$2:()I
      10: istore        4
      12: new           #692                // class org/http4s/LanguageTag
      15: dup
      16: aload_2
      17: iload         4
      19: aload_3
      20: invokespecial #695                // Method org/http4s/LanguageTag."<init>":(Ljava/lang/String;ILscala/collection/Seq;)V
      23: areturn

  public static final org.scalacheck.Gen $anonfun$genLanguageTagNoQuality$1(java.lang.String);
    Code:
       0: getstatic     #383                // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: getstatic     #412                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: iconst_2
       7: anewarray     #414                // class scala/Tuple2
      10: dup
      11: iconst_0
      12: getstatic     #383                // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
      15: getstatic     #417                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      18: getstatic     #412                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: iconst_4
      22: invokestatic  #423                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      25: invokevirtual #427                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      28: getstatic     #706                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      31: invokevirtual #461                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      34: invokevirtual #710                // Method org/scalacheck/Gen$.freqTuple:(Lscala/Tuple2;)Lscala/Tuple2;
      37: aastore
      38: dup
      39: iconst_1
      40: getstatic     #417                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      43: getstatic     #412                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      46: iconst_1
      47: invokestatic  #423                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      50: invokevirtual #427                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      53: getstatic     #383                // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
      56: invokedynamic #718,  0            // InvokeDynamic #8:apply:()Lscala/Function0;
      61: invokevirtual #722                // Method org/scalacheck/Gen$.listOf:(Lscala/Function0;)Lorg/scalacheck/Gen;
      64: invokevirtual #461                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      67: aastore
      68: checkcast     #475                // class "[Ljava/lang/Object;"
      71: invokevirtual #479                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      74: invokevirtual #482                // Method org/scalacheck/Gen$.frequency:(Lscala/collection/Seq;)Lorg/scalacheck/Gen;
      77: aload_0
      78: invokedynamic #730,  0            // InvokeDynamic #9:apply:(Ljava/lang/String;)Lscala/Function1;
      83: invokevirtual #527                // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      86: areturn

  public static final org.http4s.LanguageTag $anonfun$arbitraryLanguageTag$3(org.http4s.LanguageTag, int);
    Code:
       0: iload_1
       1: istore_2
       2: aload_0
       3: invokevirtual #737                // Method org/http4s/LanguageTag.copy$default$1:()Ljava/lang/String;
       6: astore_3
       7: aload_0
       8: invokevirtual #740                // Method org/http4s/LanguageTag.copy$default$3:()Lscala/collection/Seq;
      11: astore        4
      13: aload_0
      14: aload_3
      15: iload_2
      16: aload         4
      18: invokevirtual #744                // Method org/http4s/LanguageTag.copy:(Ljava/lang/String;ILscala/collection/Seq;)Lorg/http4s/LanguageTag;
      21: areturn

  public static final org.scalacheck.Gen $anonfun$arbitraryLanguageTag$2(org.http4s.LanguageTag);
    Code:
       0: getstatic     #506                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: getstatic     #508                // Field MODULE$:Lorg/http4s/testing/ArbitraryInstances$;
       6: invokevirtual #510                // Method arbitraryQValue:()Lorg/scalacheck/Arbitrary;
       9: invokevirtual #514                // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      12: aload_0
      13: invokedynamic #762,  0            // InvokeDynamic #10:apply:(Lorg/http4s/LanguageTag;)Lscala/Function1;
      18: invokevirtual #527                // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      21: areturn

  public static final org.scalacheck.Gen $anonfun$arbitraryLanguageTag$1();
    Code:
       0: getstatic     #508                // Field MODULE$:Lorg/http4s/testing/ArbitraryInstances$;
       3: invokevirtual #765                // Method genLanguageTagNoQuality:()Lorg/scalacheck/Gen;
       6: invokedynamic #770,  0            // InvokeDynamic #11:apply:()Lscala/Function1;
      11: invokevirtual #457                // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      14: areturn

  public static final scala.collection.immutable.Vector $anonfun$arbitraryAcceptLanguage$2(scala.collection.immutable.Set);
    Code:
       0: aload_0
       1: invokeinterface #544,  1          // InterfaceMethod scala/collection/immutable/Set.toVector:()Lscala/collection/immutable/Vector;
       6: areturn

  public static final org.http4s.LanguageTag $anonfun$arbitraryAcceptLanguage$5(scala.Tuple2);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: ifnull        56
       6: aload_2
       7: invokevirtual #552                // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #692                // class org/http4s/LanguageTag
      13: astore_3
      14: aload_2
      15: invokevirtual #555                // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: checkcast     #557                // class org/http4s/QValue
      21: invokevirtual #561                // Method org/http4s/QValue.thousandths:()I
      24: istore        4
      26: iload         4
      28: istore        5
      30: aload_3
      31: invokevirtual #737                // Method org/http4s/LanguageTag.copy$default$1:()Ljava/lang/String;
      34: astore        6
      36: aload_3
      37: invokevirtual #740                // Method org/http4s/LanguageTag.copy$default$3:()Lscala/collection/Seq;
      40: astore        7
      42: aload_3
      43: aload         6
      45: iload         5
      47: aload         7
      49: invokevirtual #744                // Method org/http4s/LanguageTag.copy:(Ljava/lang/String;ILscala/collection/Seq;)Lorg/http4s/LanguageTag;
      52: astore_1
      53: goto          68
      56: goto          59
      59: new           #563                // class scala/MatchError
      62: dup
      63: aload_2
      64: invokespecial #566                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      67: athrow
      68: aload_1
      69: areturn

  public static final scala.Tuple2 $anonfun$arbitraryAcceptLanguage$4(scala.collection.immutable.Vector, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #577                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
       5: invokevirtual #581                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
       8: invokevirtual #587                // Method scala/collection/immutable/Vector.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      11: checkcast     #589                // class scala/collection/TraversableLike
      14: invokedynamic #790,  0            // InvokeDynamic #12:apply:()Lscala/Function1;
      19: getstatic     #577                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      22: invokevirtual #581                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      25: invokeinterface #597,  3          // InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      30: checkcast     #583                // class scala/collection/immutable/Vector
      33: astore_2
      34: new           #414                // class scala/Tuple2
      37: dup
      38: aload_1
      39: aload_2
      40: invokespecial #600                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      43: areturn

  public static final org.http4s.headers.Accept$minusLanguage $anonfun$arbitraryAcceptLanguage$6(scala.Tuple2);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: ifnull        35
       6: aload_2
       7: invokevirtual #555                // Method scala/Tuple2._2:()Ljava/lang/Object;
      10: checkcast     #583                // class scala/collection/immutable/Vector
      13: astore_3
      14: getstatic     #799                // Field org/http4s/headers/Accept$minusLanguage$.MODULE$:Lorg/http4s/headers/Accept$minusLanguage$;
      17: aload_3
      18: invokevirtual #613                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      21: aload_3
      22: invokevirtual #616                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      25: invokevirtual #800                // Method org/http4s/headers/Accept$minusLanguage$.apply:(Ljava/lang/Object;Lscala/collection/Seq;)Lorg/http4s/Header$Recurring;
      28: checkcast     #802                // class org/http4s/headers/Accept$minusLanguage
      31: astore_1
      32: goto          47
      35: goto          38
      38: new           #563                // class scala/MatchError
      41: dup
      42: aload_2
      43: invokespecial #566                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      46: athrow
      47: aload_1
      48: areturn

  public static final org.scalacheck.Gen $anonfun$arbitraryAcceptLanguage$3(scala.collection.immutable.Vector);
    Code:
       0: getstatic     #383                // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_0
       4: invokevirtual #627                // Method scala/collection/immutable/Vector.size:()I
       7: getstatic     #508                // Field MODULE$:Lorg/http4s/testing/ArbitraryInstances$;
      10: invokevirtual #510                // Method arbitraryQValue:()Lorg/scalacheck/Arbitrary;
      13: invokevirtual #631                // Method org/scalacheck/Arbitrary.arbitrary:()Lorg/scalacheck/Gen;
      16: getstatic     #636                // Field org/scalacheck/util/Buildable$.MODULE$:Lorg/scalacheck/util/Buildable$;
      19: getstatic     #577                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      22: invokevirtual #581                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      25: invokevirtual #640                // Method org/scalacheck/util/Buildable$.buildableCanBuildFrom:(Lscala/collection/generic/CanBuildFrom;)Lorg/scalacheck/util/Buildable;
      28: getstatic     #412                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      31: invokevirtual #644                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      34: invokevirtual #648                // Method org/scalacheck/Gen$.containerOfN:(ILorg/scalacheck/Gen;Lorg/scalacheck/util/Buildable;Lscala/Function1;)Lorg/scalacheck/Gen;
      37: aload_0
      38: invokedynamic #808,  0            // InvokeDynamic #13:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
      43: invokevirtual #527                // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      46: invokedynamic #813,  0            // InvokeDynamic #14:apply:()Lscala/Function1;
      51: invokevirtual #527                // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      54: areturn

  public static final org.scalacheck.Gen $anonfun$arbitraryAcceptLanguage$1();
    Code:
       0: getstatic     #383                // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: getstatic     #508                // Field MODULE$:Lorg/http4s/testing/ArbitraryInstances$;
       6: invokevirtual #765                // Method genLanguageTagNoQuality:()Lorg/scalacheck/Gen;
       9: getstatic     #636                // Field org/scalacheck/util/Buildable$.MODULE$:Lorg/scalacheck/util/Buildable$;
      12: getstatic     #667                // Field scala/collection/immutable/Set$.MODULE$:Lscala/collection/immutable/Set$;
      15: invokevirtual #668                // Method scala/collection/immutable/Set$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      18: invokevirtual #640                // Method org/scalacheck/util/Buildable$.buildableCanBuildFrom:(Lscala/collection/generic/CanBuildFrom;)Lorg/scalacheck/util/Buildable;
      21: getstatic     #412                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      24: invokevirtual #644                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      27: invokevirtual #672                // Method org/scalacheck/Gen$.nonEmptyContainerOf:(Lorg/scalacheck/Gen;Lorg/scalacheck/util/Buildable;Lscala/Function1;)Lorg/scalacheck/Gen;
      30: invokedynamic #818,  0            // InvokeDynamic #15:apply:()Lscala/Function1;
      35: invokevirtual #527                // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      38: invokedynamic #822,  0            // InvokeDynamic #16:apply:()Lscala/Function1;
      43: invokevirtual #457                // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      46: areturn

  private org.http4s.testing.ArbitraryInstances$();
    Code:
       0: aload_0
       1: invokespecial #823                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #508                // Field MODULE$:Lorg/http4s/testing/ArbitraryInstances$;
       8: aload_0
       9: invokestatic  #827                // InterfaceMethod org/http4s/testing/ArbitraryInstances.$init$:(Lorg/http4s/testing/ArbitraryInstances;)V
      12: aload_0
      13: getstatic     #506                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      16: invokedynamic #831,  0            // InvokeDynamic #17:apply:()Lscala/Function0;
      21: invokevirtual #834                // Method org/scalacheck/Arbitrary$.apply:(Lscala/Function0;)Lorg/scalacheck/Arbitrary;
      24: putfield      #404                // Field arbitraryContentCoding:Lorg/scalacheck/Arbitrary;
      27: aload_0
      28: getstatic     #506                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      31: invokedynamic #838,  0            // InvokeDynamic #18:apply:()Lscala/Function0;
      36: invokevirtual #834                // Method org/scalacheck/Arbitrary$.apply:(Lscala/Function0;)Lorg/scalacheck/Arbitrary;
      39: putfield      #406                // Field arbitraryAcceptEncoding:Lorg/scalacheck/Arbitrary;
      42: aload_0
      43: getstatic     #506                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      46: invokedynamic #842,  0            // InvokeDynamic #19:apply:()Lscala/Function0;
      51: invokevirtual #834                // Method org/scalacheck/Arbitrary$.apply:(Lscala/Function0;)Lorg/scalacheck/Arbitrary;
      54: putfield      #484                // Field arbitraryLanguageTag:Lorg/scalacheck/Arbitrary;
      57: aload_0
      58: getstatic     #506                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      61: invokedynamic #846,  0            // InvokeDynamic #20:apply:()Lscala/Function0;
      66: invokevirtual #834                // Method org/scalacheck/Arbitrary$.apply:(Lscala/Function0;)Lorg/scalacheck/Arbitrary;
      69: putfield      #486                // Field arbitraryAcceptLanguage:Lorg/scalacheck/Arbitrary;
      72: return

  public static final org.http4s.ContentCoding $anonfun$arbitraryContentCoding$3$adapted(org.http4s.ContentCoding, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #557                // class org/http4s/QValue
       5: invokevirtual #561                // Method org/http4s/QValue.thousandths:()I
       8: invokestatic  #848                // Method $anonfun$arbitraryContentCoding$3:(Lorg/http4s/ContentCoding;I)Lorg/http4s/ContentCoding;
      11: areturn

  public static final org.http4s.LanguageTag $anonfun$arbitraryLanguageTag$3$adapted(org.http4s.LanguageTag, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #557                // class org/http4s/QValue
       5: invokevirtual #561                // Method org/http4s/QValue.thousandths:()I
       8: invokestatic  #851                // Method $anonfun$arbitraryLanguageTag$3:(Lorg/http4s/LanguageTag;I)Lorg/http4s/LanguageTag;
      11: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #863,  0            // InvokeDynamic #21:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
