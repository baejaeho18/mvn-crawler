Compiled from "ResourceGroupsMock.scala"
public final class zio.aws.resourcegroups.ResourceGroupsMock$$anon$1 implements zio.aws.resourcegroups.ResourceGroups {
  private final software.amazon.awssdk.services.resourcegroups.ResourceGroupsAsyncClient api;

  private final zio.mock.Proxy proxy$1;

  public software.amazon.awssdk.services.resourcegroups.ResourceGroupsAsyncClient api();
    Code:
       0: aload_0
       1: getfield      #153                // Field api:Lsoftware/amazon/awssdk/services/resourcegroups/ResourceGroupsAsyncClient;
       4: areturn

  public <R1> zio.aws.resourcegroups.ResourceGroups withAspect(zio.ZIOAspect<scala.runtime.Nothing$, R1, zio.aws.core.AwsError, zio.aws.core.AwsError, scala.runtime.Nothing$, zio.aws.core.aspects.package$Described<?>>, zio.ZEnvironment<R1>);
    Code:
       0: aload_0
       1: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.resourcegroups.model.GetGroupQueryResponse$ReadOnly> getGroupQuery(zio.aws.resourcegroups.model.GetGroupQueryRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #172                // Field zio/aws/resourcegroups/ResourceGroupsMock$GetGroupQuery$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$GetGroupQuery$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.resourcegroups.model.UntagResponse$ReadOnly> untag(zio.aws.resourcegroups.model.UntagRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #185                // Field zio/aws/resourcegroups/ResourceGroupsMock$Untag$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$Untag$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.resourcegroups.model.DeleteGroupResponse$ReadOnly> deleteGroup(zio.aws.resourcegroups.model.DeleteGroupRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #192                // Field zio/aws/resourcegroups/ResourceGroupsMock$DeleteGroup$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$DeleteGroup$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.core.StreamingOutputResult<java.lang.Object, zio.aws.resourcegroups.model.ListGroupsResponse$ReadOnly, zio.aws.resourcegroups.model.Group$ReadOnly>> listGroups(zio.aws.resourcegroups.model.ListGroupsRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #199                // Field zio/aws/resourcegroups/ResourceGroupsMock$ListGroups$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$ListGroups$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.resourcegroups.model.ListGroupsResponse$ReadOnly> listGroupsPaginated(zio.aws.resourcegroups.model.ListGroupsRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #205                // Field zio/aws/resourcegroups/ResourceGroupsMock$ListGroupsPaginated$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$ListGroupsPaginated$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.resourcegroups.model.UpdateGroupQueryResponse$ReadOnly> updateGroupQuery(zio.aws.resourcegroups.model.UpdateGroupQueryRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #211                // Field zio/aws/resourcegroups/ResourceGroupsMock$UpdateGroupQuery$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$UpdateGroupQuery$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.core.StreamingOutputResult<java.lang.Object, zio.aws.resourcegroups.model.SearchResourcesResponse$ReadOnly, zio.aws.resourcegroups.model.ResourceIdentifier$ReadOnly>> searchResources(zio.aws.resourcegroups.model.SearchResourcesRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #218                // Field zio/aws/resourcegroups/ResourceGroupsMock$SearchResources$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$SearchResources$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.resourcegroups.model.SearchResourcesResponse$ReadOnly> searchResourcesPaginated(zio.aws.resourcegroups.model.SearchResourcesRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #224                // Field zio/aws/resourcegroups/ResourceGroupsMock$SearchResourcesPaginated$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$SearchResourcesPaginated$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.resourcegroups.model.CreateGroupResponse$ReadOnly> createGroup(zio.aws.resourcegroups.model.CreateGroupRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #230                // Field zio/aws/resourcegroups/ResourceGroupsMock$CreateGroup$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$CreateGroup$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.resourcegroups.model.TagResponse$ReadOnly> tag(zio.aws.resourcegroups.model.TagRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #237                // Field zio/aws/resourcegroups/ResourceGroupsMock$Tag$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$Tag$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.resourcegroups.model.UpdateGroupResponse$ReadOnly> updateGroup(zio.aws.resourcegroups.model.UpdateGroupRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #244                // Field zio/aws/resourcegroups/ResourceGroupsMock$UpdateGroup$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$UpdateGroup$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.resourcegroups.model.GroupResourcesResponse$ReadOnly> groupResources(zio.aws.resourcegroups.model.GroupResourcesRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #251                // Field zio/aws/resourcegroups/ResourceGroupsMock$GroupResources$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$GroupResources$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.resourcegroups.model.GetGroupResponse$ReadOnly> getGroup(zio.aws.resourcegroups.model.GetGroupRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #258                // Field zio/aws/resourcegroups/ResourceGroupsMock$GetGroup$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$GetGroup$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.core.StreamingOutputResult<java.lang.Object, zio.aws.resourcegroups.model.ListGroupResourcesResponse$ReadOnly, zio.aws.resourcegroups.model.ResourceIdentifier$ReadOnly>> listGroupResources(zio.aws.resourcegroups.model.ListGroupResourcesRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #265                // Field zio/aws/resourcegroups/ResourceGroupsMock$ListGroupResources$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$ListGroupResources$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.resourcegroups.model.ListGroupResourcesResponse$ReadOnly> listGroupResourcesPaginated(zio.aws.resourcegroups.model.ListGroupResourcesRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #271                // Field zio/aws/resourcegroups/ResourceGroupsMock$ListGroupResourcesPaginated$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$ListGroupResourcesPaginated$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.resourcegroups.model.GetGroupConfigurationResponse$ReadOnly> getGroupConfiguration(zio.aws.resourcegroups.model.GetGroupConfigurationRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #277                // Field zio/aws/resourcegroups/ResourceGroupsMock$GetGroupConfiguration$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$GetGroupConfiguration$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.resourcegroups.model.UngroupResourcesResponse$ReadOnly> ungroupResources(zio.aws.resourcegroups.model.UngroupResourcesRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #284                // Field zio/aws/resourcegroups/ResourceGroupsMock$UngroupResources$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$UngroupResources$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.resourcegroups.model.PutGroupConfigurationResponse$ReadOnly> putGroupConfiguration(zio.aws.resourcegroups.model.PutGroupConfigurationRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #291                // Field zio/aws/resourcegroups/ResourceGroupsMock$PutGroupConfiguration$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$PutGroupConfiguration$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.resourcegroups.model.GetTagsResponse$ReadOnly> getTags(zio.aws.resourcegroups.model.GetTagsRequest);
    Code:
       0: aload_0
       1: getfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #298                // Field zio/aws/resourcegroups/ResourceGroupsMock$GetTags$.MODULE$:Lzio/aws/resourcegroups/ResourceGroupsMock$GetTags$;
       7: aload_1
       8: invokevirtual #178                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public java.lang.Object withAspect(zio.ZIOAspect, zio.ZEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #302                // Method withAspect:(Lzio/ZIOAspect;Lzio/ZEnvironment;)Lzio/aws/resourcegroups/ResourceGroups;
       6: areturn

  public zio.aws.resourcegroups.ResourceGroupsMock$$anon$1(zio.mock.Proxy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #168                // Field proxy$1:Lzio/mock/Proxy;
       5: aload_0
       6: invokespecial #307                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aconst_null
      11: putfield      #153                // Field api:Lsoftware/amazon/awssdk/services/resourcegroups/ResourceGroupsAsyncClient;
      14: return
}
