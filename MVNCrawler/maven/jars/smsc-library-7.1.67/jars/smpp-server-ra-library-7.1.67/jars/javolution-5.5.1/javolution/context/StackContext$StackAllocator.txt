Compiled from "StackContext.java"
final class javolution.context.StackContext$StackAllocator extends javolution.context.Allocator {
  private final javolution.context.ObjectFactory _factory;

  private boolean _inUse;

  private int _queueLimit;

  public javolution.context.StackContext$StackAllocator(javolution.context.ObjectFactory);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method javolution/context/Allocator."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field _factory:Ljavolution/context/ObjectFactory;
       9: return

  protected java.lang.Object allocate();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _queueLimit:I
       4: aload_0
       5: getfield      #5                  // Field queue:[Ljava/lang/Object;
       8: arraylength
       9: if_icmplt     16
      12: aload_0
      13: invokevirtual #6                  // Method resize:()V
      16: aload_0
      17: getfield      #3                  // Field _factory:Ljavolution/context/ObjectFactory;
      20: invokevirtual #7                  // Method javolution/context/ObjectFactory.create:()Ljava/lang/Object;
      23: astore_1
      24: aload_0
      25: getfield      #5                  // Field queue:[Ljava/lang/Object;
      28: aload_0
      29: dup
      30: getfield      #4                  // Field _queueLimit:I
      33: dup_x1
      34: iconst_1
      35: iadd
      36: putfield      #4                  // Field _queueLimit:I
      39: aload_1
      40: aastore
      41: aload_1
      42: areturn

  protected void recycle(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _factory:Ljavolution/context/ObjectFactory;
       4: invokevirtual #8                  // Method javolution/context/ObjectFactory.doCleanup:()Z
       7: ifeq          18
      10: aload_0
      11: getfield      #3                  // Field _factory:Ljavolution/context/ObjectFactory;
      14: aload_1
      15: invokevirtual #9                  // Method javolution/context/ObjectFactory.cleanup:(Ljava/lang/Object;)V
      18: aload_0
      19: getfield      #10                 // Field queueSize:I
      22: istore_2
      23: iload_2
      24: aload_0
      25: getfield      #4                  // Field _queueLimit:I
      28: if_icmpge     80
      31: aload_0
      32: getfield      #5                  // Field queue:[Ljava/lang/Object;
      35: iload_2
      36: aaload
      37: aload_1
      38: if_acmpne     74
      41: aload_0
      42: getfield      #5                  // Field queue:[Ljava/lang/Object;
      45: iload_2
      46: aload_0
      47: getfield      #5                  // Field queue:[Ljava/lang/Object;
      50: aload_0
      51: getfield      #10                 // Field queueSize:I
      54: aaload
      55: aastore
      56: aload_0
      57: getfield      #5                  // Field queue:[Ljava/lang/Object;
      60: aload_0
      61: dup
      62: getfield      #10                 // Field queueSize:I
      65: dup_x1
      66: iconst_1
      67: iadd
      68: putfield      #10                 // Field queueSize:I
      71: aload_1
      72: aastore
      73: return
      74: iinc          2, 1
      77: goto          23
      80: new           #11                 // class java/lang/UnsupportedOperationException
      83: dup
      84: ldc           #12                 // String Cannot recycle to the stack an object which has not been allocated from the stack
      86: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      89: athrow

  protected void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #1                  // Field _inUse:Z
       5: aload_0
       6: getfield      #3                  // Field _factory:Ljavolution/context/ObjectFactory;
       9: invokevirtual #8                  // Method javolution/context/ObjectFactory.doCleanup:()Z
      12: ifeq          54
      15: aload_0
      16: getfield      #10                 // Field queueSize:I
      19: aload_0
      20: getfield      #4                  // Field _queueLimit:I
      23: if_icmpeq     54
      26: aload_0
      27: getfield      #5                  // Field queue:[Ljava/lang/Object;
      30: aload_0
      31: dup
      32: getfield      #10                 // Field queueSize:I
      35: dup_x1
      36: iconst_1
      37: iadd
      38: putfield      #10                 // Field queueSize:I
      41: aaload
      42: astore_1
      43: aload_0
      44: getfield      #3                  // Field _factory:Ljavolution/context/ObjectFactory;
      47: aload_1
      48: invokevirtual #9                  // Method javolution/context/ObjectFactory.cleanup:(Ljava/lang/Object;)V
      51: goto          5
      54: aload_0
      55: aload_0
      56: getfield      #4                  // Field _queueLimit:I
      59: putfield      #10                 // Field queueSize:I
      62: return

  public java.lang.String toString();
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #16                 // String Stack allocator for
       9: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #3                  // Field _factory:Ljavolution/context/ObjectFactory;
      16: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      22: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn

  static boolean access$000(javolution.context.StackContext$StackAllocator);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _inUse:Z
       4: ireturn

  static boolean access$002(javolution.context.StackContext$StackAllocator, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field _inUse:Z
       6: ireturn
}
