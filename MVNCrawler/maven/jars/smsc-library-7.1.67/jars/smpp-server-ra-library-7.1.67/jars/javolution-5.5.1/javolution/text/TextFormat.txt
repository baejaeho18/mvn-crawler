Compiled from "TextFormat.java"
public abstract class javolution.text.TextFormat<T> {
  protected javolution.text.TextFormat(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     9
       8: return
       9: invokestatic  #3                  // Method javolution/lang/Reflection.getInstance:()Ljavolution/lang/Reflection;
      12: new           #4                  // class javolution/text/TextFormat$LocalReference
      15: dup
      16: aload_0
      17: invokespecial #5                  // Method javolution/text/TextFormat$LocalReference."<init>":(Ljavolution/text/TextFormat;)V
      20: aload_1
      21: ldc_w         #4                  // class javolution/text/TextFormat$LocalReference
      24: invokevirtual #6                  // Method javolution/lang/Reflection.setField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;)V
      27: return

  public static <T> javolution.text.TextFormat<T> getDefault(java.lang.Class<? extends T>);
    Code:
       0: invokestatic  #7                  // Method javolution/text/TextFormat$Predefined.access$000:()V
       3: invokestatic  #3                  // Method javolution/lang/Reflection.getInstance:()Ljavolution/lang/Reflection;
       6: aload_0
       7: ldc_w         #4                  // class javolution/text/TextFormat$LocalReference
      10: iconst_1
      11: invokevirtual #8                  // Method javolution/lang/Reflection.getField:(Ljava/lang/Class;Ljava/lang/Class;Z)Ljava/lang/Object;
      14: checkcast     #4                  // class javolution/text/TextFormat$LocalReference
      17: astore_1
      18: aload_1
      19: ifnonnull     28
      22: getstatic     #9                  // Field javolution/text/TextFormat$Predefined.OBJECT_FORMAT:Ljavolution/text/TextFormat;
      25: goto          35
      28: aload_1
      29: invokevirtual #10                 // Method javolution/text/TextFormat$LocalReference.getDefault:()Ljava/lang/Object;
      32: checkcast     #11                 // class javolution/text/TextFormat
      35: areturn

  public static <T> javolution.text.TextFormat<T> getInstance(java.lang.Class<? extends T>);
    Code:
       0: invokestatic  #7                  // Method javolution/text/TextFormat$Predefined.access$000:()V
       3: invokestatic  #3                  // Method javolution/lang/Reflection.getInstance:()Ljavolution/lang/Reflection;
       6: aload_0
       7: ldc_w         #4                  // class javolution/text/TextFormat$LocalReference
      10: iconst_1
      11: invokevirtual #8                  // Method javolution/lang/Reflection.getField:(Ljava/lang/Class;Ljava/lang/Class;Z)Ljava/lang/Object;
      14: checkcast     #4                  // class javolution/text/TextFormat$LocalReference
      17: astore_1
      18: aload_1
      19: ifnonnull     28
      22: getstatic     #9                  // Field javolution/text/TextFormat$Predefined.OBJECT_FORMAT:Ljavolution/text/TextFormat;
      25: goto          35
      28: aload_1
      29: invokevirtual #12                 // Method javolution/text/TextFormat$LocalReference.get:()Ljava/lang/Object;
      32: checkcast     #11                 // class javolution/text/TextFormat
      35: areturn

  public static <T> void setInstance(java.lang.Class<? extends T>, javolution.text.TextFormat<T>);
    Code:
       0: invokestatic  #7                  // Method javolution/text/TextFormat$Predefined.access$000:()V
       3: invokestatic  #3                  // Method javolution/lang/Reflection.getInstance:()Ljavolution/lang/Reflection;
       6: aload_0
       7: ldc_w         #4                  // class javolution/text/TextFormat$LocalReference
      10: iconst_0
      11: invokevirtual #8                  // Method javolution/lang/Reflection.getField:(Ljava/lang/Class;Ljava/lang/Class;Z)Ljava/lang/Object;
      14: checkcast     #4                  // class javolution/text/TextFormat$LocalReference
      17: astore_2
      18: aload_2
      19: ifnonnull     54
      22: new           #13                 // class java/lang/IllegalArgumentException
      25: dup
      26: new           #14                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #16                 // String Cannot override default format for class
      35: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: ldc           #19                 // String  (no default format defined)
      44: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_2
      55: aload_1
      56: invokevirtual #22                 // Method javolution/text/TextFormat$LocalReference.set:(Ljava/lang/Object;)V
      59: return

  public boolean isParsingSupported();
    Code:
       0: iconst_1
       1: ireturn

  public abstract java.lang.Appendable format(T, java.lang.Appendable) throws java.io.IOException;

  public abstract T parse(java.lang.CharSequence, javolution.text.Cursor) throws java.lang.IllegalArgumentException;

  public final javolution.text.TextBuilder format(T, javolution.text.TextBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #23                 // Method format:(Ljava/lang/Object;Ljava/lang/Appendable;)Ljava/lang/Appendable;
       6: pop
       7: aload_2
       8: areturn
       9: astore_3
      10: new           #25                 // class java/lang/Error
      13: dup
      14: invokespecial #26                 // Method java/lang/Error."<init>":()V
      17: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/io/IOException

  public final javolution.text.Text format(T);
    Code:
       0: invokestatic  #27                 // Method javolution/text/TextBuilder.newInstance:()Ljavolution/text/TextBuilder;
       3: astore_2
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #23                 // Method format:(Ljava/lang/Object;Ljava/lang/Appendable;)Ljava/lang/Appendable;
      10: pop
      11: aload_2
      12: invokevirtual #28                 // Method javolution/text/TextBuilder.toText:()Ljavolution/text/Text;
      15: astore_3
      16: aload_2
      17: invokestatic  #29                 // Method javolution/text/TextBuilder.recycle:(Ljavolution/text/TextBuilder;)V
      20: aload_3
      21: areturn
      22: astore_3
      23: new           #25                 // class java/lang/Error
      26: dup
      27: invokespecial #26                 // Method java/lang/Error."<init>":()V
      30: athrow
      31: astore        4
      33: aload_2
      34: invokestatic  #29                 // Method javolution/text/TextBuilder.recycle:(Ljavolution/text/TextBuilder;)V
      37: aload         4
      39: athrow
    Exception table:
       from    to  target type
           4    16    22   Class java/io/IOException
           4    16    31   any
          22    33    31   any

  public final java.lang.String formatToString(T);
    Code:
       0: invokestatic  #27                 // Method javolution/text/TextBuilder.newInstance:()Ljavolution/text/TextBuilder;
       3: astore_2
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #23                 // Method format:(Ljava/lang/Object;Ljava/lang/Appendable;)Ljava/lang/Appendable;
      10: pop
      11: aload_2
      12: invokevirtual #30                 // Method javolution/text/TextBuilder.toString:()Ljava/lang/String;
      15: astore_3
      16: aload_2
      17: invokestatic  #29                 // Method javolution/text/TextBuilder.recycle:(Ljavolution/text/TextBuilder;)V
      20: aload_3
      21: areturn
      22: astore_3
      23: new           #25                 // class java/lang/Error
      26: dup
      27: invokespecial #26                 // Method java/lang/Error."<init>":()V
      30: athrow
      31: astore        4
      33: aload_2
      34: invokestatic  #29                 // Method javolution/text/TextBuilder.recycle:(Ljavolution/text/TextBuilder;)V
      37: aload         4
      39: athrow
    Exception table:
       from    to  target type
           4    16    22   Class java/io/IOException
           4    16    31   any
          22    33    31   any

  public final T parse(java.lang.CharSequence) throws java.lang.IllegalArgumentException;
    Code:
       0: invokestatic  #31                 // Method javolution/text/Cursor.newInstance:()Ljavolution/text/Cursor;
       3: astore_2
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #32                 // Method parse:(Ljava/lang/CharSequence;Ljavolution/text/Cursor;)Ljava/lang/Object;
      10: astore_3
      11: aload_2
      12: invokevirtual #33                 // Method javolution/text/Cursor.getIndex:()I
      15: aload_1
      16: invokeinterface #34,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      21: if_icmpge     56
      24: new           #13                 // class java/lang/IllegalArgumentException
      27: dup
      28: new           #14                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #35                 // String Extraneous characters in \"
      37: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: ldc           #36                 // String \"
      46: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_3
      57: astore        4
      59: aload_2
      60: invokestatic  #37                 // Method javolution/text/Cursor.recycle:(Ljavolution/text/Cursor;)V
      63: aload         4
      65: areturn
      66: astore        5
      68: aload_2
      69: invokestatic  #37                 // Method javolution/text/Cursor.recycle:(Ljavolution/text/Cursor;)V
      72: aload         5
      74: athrow
    Exception table:
       from    to  target type
           4    59    66   any
          66    68    66   any

  private static java.lang.CharSequence j2meToCharSeq(java.lang.Object);
    Code:
       0: aload_0
       1: checkcast     #38                 // class java/lang/CharSequence
       4: areturn

  private static javolution.text.Text dummy(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          12
       8: aload_0
       9: invokestatic  #39                 // Method javolution/text/Text.valueOf:(Ljava/lang/Object;)Ljavolution/text/Text;
      12: areturn

  static java.lang.CharSequence access$100(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method j2meToCharSeq:(Ljava/lang/Object;)Ljava/lang/CharSequence;
       4: areturn
}
