Compiled from "PoolContext.java"
final class javolution.context.PoolContext$PoolAllocator extends javolution.context.Allocator {
  private static final javolution.util.FastMap FACTORY_TO_POOL;

  private final javolution.context.ObjectFactory _factory;

  private final javolution.util.FastTable _recycled;

  public javolution.context.PoolContext$PoolAllocator(javolution.context.ObjectFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javolution/context/Allocator."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _factory:Ljavolution/context/ObjectFactory;
       9: getstatic     #3                  // Field FACTORY_TO_POOL:Ljavolution/util/FastMap;
      12: dup
      13: astore_2
      14: monitorenter
      15: getstatic     #3                  // Field FACTORY_TO_POOL:Ljavolution/util/FastMap;
      18: aload_1
      19: invokevirtual #4                  // Method javolution/util/FastMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #5                  // class javolution/util/FastTable
      25: astore_3
      26: aload_3
      27: ifnonnull     47
      30: new           #5                  // class javolution/util/FastTable
      33: dup
      34: invokespecial #6                  // Method javolution/util/FastTable."<init>":()V
      37: astore_3
      38: getstatic     #3                  // Field FACTORY_TO_POOL:Ljavolution/util/FastMap;
      41: aload_1
      42: aload_3
      43: invokevirtual #7                  // Method javolution/util/FastMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_0
      48: aload_3
      49: putfield      #8                  // Field _recycled:Ljavolution/util/FastTable;
      52: aload_2
      53: monitorexit
      54: goto          64
      57: astore        4
      59: aload_2
      60: monitorexit
      61: aload         4
      63: athrow
      64: return
    Exception table:
       from    to  target type
          15    54    57   any
          57    61    57   any

  protected java.lang.Object allocate();
    Code:
       0: aload_0
       1: getfield      #8                  // Field _recycled:Ljavolution/util/FastTable;
       4: invokevirtual #9                  // Method javolution/util/FastTable.isEmpty:()Z
       7: ifeq          18
      10: aload_0
      11: getfield      #2                  // Field _factory:Ljavolution/context/ObjectFactory;
      14: invokevirtual #10                 // Method javolution/context/ObjectFactory.create:()Ljava/lang/Object;
      17: areturn
      18: aload_0
      19: getfield      #8                  // Field _recycled:Ljavolution/util/FastTable;
      22: dup
      23: astore_1
      24: monitorenter
      25: aload_0
      26: getfield      #8                  // Field _recycled:Ljavolution/util/FastTable;
      29: invokevirtual #11                 // Method javolution/util/FastTable.removeLast:()Ljava/lang/Object;
      32: aload_1
      33: monitorexit
      34: areturn
      35: astore_2
      36: aload_1
      37: monitorexit
      38: aload_2
      39: athrow
    Exception table:
       from    to  target type
          25    34    35   any
          35    38    35   any

  protected void recycle(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _factory:Ljavolution/context/ObjectFactory;
       4: invokevirtual #12                 // Method javolution/context/ObjectFactory.doCleanup:()Z
       7: ifeq          18
      10: aload_0
      11: getfield      #2                  // Field _factory:Ljavolution/context/ObjectFactory;
      14: aload_1
      15: invokevirtual #13                 // Method javolution/context/ObjectFactory.cleanup:(Ljava/lang/Object;)V
      18: aload_0
      19: getfield      #8                  // Field _recycled:Ljavolution/util/FastTable;
      22: dup
      23: astore_2
      24: monitorenter
      25: aload_0
      26: getfield      #8                  // Field _recycled:Ljavolution/util/FastTable;
      29: aload_1
      30: invokevirtual #14                 // Method javolution/util/FastTable.addLast:(Ljava/lang/Object;)V
      33: aload_2
      34: monitorexit
      35: goto          43
      38: astore_3
      39: aload_2
      40: monitorexit
      41: aload_3
      42: athrow
      43: return
    Exception table:
       from    to  target type
          25    35    38   any
          38    41    38   any

  public java.lang.String toString();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #17                 // String Pool allocator for
       9: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field _factory:Ljavolution/context/ObjectFactory;
      16: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      22: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn

  static {};
    Code:
       0: new           #22                 // class javolution/util/FastMap
       3: dup
       4: invokespecial #23                 // Method javolution/util/FastMap."<init>":()V
       7: putstatic     #3                  // Field FACTORY_TO_POOL:Ljavolution/util/FastMap;
      10: return
}
