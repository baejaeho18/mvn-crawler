Compiled from "FastTable.java"
final class javolution.util.FastTable$FastTableIterator implements java.util.ListIterator {
  private static final javolution.context.ObjectFactory FACTORY;

  private javolution.util.FastTable _table;

  private int _currentIndex;

  private int _start;

  private int _end;

  private int _nextIndex;

  private java.lang.Object[] _low;

  private java.lang.Object[][] _high;

  private javolution.util.FastTable$FastTableIterator();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: return

  public static javolution.util.FastTable$FastTableIterator valueOf(javolution.util.FastTable, int, int, int);
    Code:
       0: getstatic     #6                  // Field FACTORY:Ljavolution/context/ObjectFactory;
       3: invokevirtual #7                  // Method javolution/context/ObjectFactory.object:()Ljava/lang/Object;
       6: checkcast     #8                  // class javolution/util/FastTable$FastTableIterator
       9: astore        4
      11: aload         4
      13: aload_0
      14: putfield      #3                  // Field _table:Ljavolution/util/FastTable;
      17: aload         4
      19: iload_2
      20: putfield      #9                  // Field _start:I
      23: aload         4
      25: iload_3
      26: putfield      #10                 // Field _end:I
      29: aload         4
      31: iload_1
      32: putfield      #11                 // Field _nextIndex:I
      35: aload         4
      37: aload_0
      38: invokestatic  #12                 // Method javolution/util/FastTable.access$100:(Ljavolution/util/FastTable;)[Ljava/lang/Object;
      41: putfield      #2                  // Field _low:[Ljava/lang/Object;
      44: aload         4
      46: aload_0
      47: invokestatic  #13                 // Method javolution/util/FastTable.access$300:(Ljavolution/util/FastTable;)[[Ljava/lang/Object;
      50: putfield      #1                  // Field _high:[[Ljava/lang/Object;
      53: aload         4
      55: iconst_m1
      56: putfield      #14                 // Field _currentIndex:I
      59: aload         4
      61: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #11                 // Field _nextIndex:I
       4: aload_0
       5: getfield      #10                 // Field _end:I
       8: if_icmpeq     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: getfield      #11                 // Field _nextIndex:I
       4: aload_0
       5: getfield      #10                 // Field _end:I
       8: if_icmpne     19
      11: new           #15                 // class java/util/NoSuchElementException
      14: dup
      15: invokespecial #16                 // Method java/util/NoSuchElementException."<init>":()V
      18: athrow
      19: aload_0
      20: aload_0
      21: dup
      22: getfield      #11                 // Field _nextIndex:I
      25: dup_x1
      26: iconst_1
      27: iadd
      28: putfield      #11                 // Field _nextIndex:I
      31: dup_x1
      32: putfield      #14                 // Field _currentIndex:I
      35: istore_1
      36: iload_1
      37: sipush        1024
      40: if_icmpge     52
      43: aload_0
      44: getfield      #2                  // Field _low:[Ljava/lang/Object;
      47: iload_1
      48: aaload
      49: goto          67
      52: aload_0
      53: getfield      #1                  // Field _high:[[Ljava/lang/Object;
      56: iload_1
      57: bipush        10
      59: ishr
      60: aaload
      61: iload_1
      62: sipush        1023
      65: iand
      66: aaload
      67: areturn

  public int nextIndex();
    Code:
       0: aload_0
       1: getfield      #11                 // Field _nextIndex:I
       4: ireturn

  public boolean hasPrevious();
    Code:
       0: aload_0
       1: getfield      #11                 // Field _nextIndex:I
       4: aload_0
       5: getfield      #9                  // Field _start:I
       8: if_icmpeq     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public java.lang.Object previous();
    Code:
       0: aload_0
       1: getfield      #11                 // Field _nextIndex:I
       4: aload_0
       5: getfield      #9                  // Field _start:I
       8: if_icmpne     19
      11: new           #15                 // class java/util/NoSuchElementException
      14: dup
      15: invokespecial #16                 // Method java/util/NoSuchElementException."<init>":()V
      18: athrow
      19: aload_0
      20: aload_0
      21: dup
      22: getfield      #11                 // Field _nextIndex:I
      25: iconst_1
      26: isub
      27: dup_x1
      28: putfield      #11                 // Field _nextIndex:I
      31: dup_x1
      32: putfield      #14                 // Field _currentIndex:I
      35: istore_1
      36: iload_1
      37: sipush        1024
      40: if_icmpge     52
      43: aload_0
      44: getfield      #2                  // Field _low:[Ljava/lang/Object;
      47: iload_1
      48: aaload
      49: goto          67
      52: aload_0
      53: getfield      #1                  // Field _high:[[Ljava/lang/Object;
      56: iload_1
      57: bipush        10
      59: ishr
      60: aaload
      61: iload_1
      62: sipush        1023
      65: iand
      66: aaload
      67: areturn

  public int previousIndex();
    Code:
       0: aload_0
       1: getfield      #11                 // Field _nextIndex:I
       4: iconst_1
       5: isub
       6: ireturn

  public void add(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _table:Ljavolution/util/FastTable;
       4: aload_0
       5: dup
       6: getfield      #11                 // Field _nextIndex:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #11                 // Field _nextIndex:I
      15: aload_1
      16: invokevirtual #17                 // Method javolution/util/FastTable.add:(ILjava/lang/Object;)V
      19: aload_0
      20: dup
      21: getfield      #10                 // Field _end:I
      24: iconst_1
      25: iadd
      26: putfield      #10                 // Field _end:I
      29: aload_0
      30: iconst_m1
      31: putfield      #14                 // Field _currentIndex:I
      34: return

  public void set(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #14                 // Field _currentIndex:I
       4: iflt          23
       7: aload_0
       8: getfield      #3                  // Field _table:Ljavolution/util/FastTable;
      11: aload_0
      12: getfield      #14                 // Field _currentIndex:I
      15: aload_1
      16: invokevirtual #18                 // Method javolution/util/FastTable.set:(ILjava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: goto          31
      23: new           #19                 // class java/lang/IllegalStateException
      26: dup
      27: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":()V
      30: athrow
      31: return

  public void remove();
    Code:
       0: aload_0
       1: getfield      #14                 // Field _currentIndex:I
       4: iflt          58
       7: aload_0
       8: getfield      #3                  // Field _table:Ljavolution/util/FastTable;
      11: aload_0
      12: getfield      #14                 // Field _currentIndex:I
      15: invokevirtual #21                 // Method javolution/util/FastTable.remove:(I)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: dup
      21: getfield      #10                 // Field _end:I
      24: iconst_1
      25: isub
      26: putfield      #10                 // Field _end:I
      29: aload_0
      30: getfield      #14                 // Field _currentIndex:I
      33: aload_0
      34: getfield      #11                 // Field _nextIndex:I
      37: if_icmpge     50
      40: aload_0
      41: dup
      42: getfield      #11                 // Field _nextIndex:I
      45: iconst_1
      46: isub
      47: putfield      #11                 // Field _nextIndex:I
      50: aload_0
      51: iconst_m1
      52: putfield      #14                 // Field _currentIndex:I
      55: goto          66
      58: new           #19                 // class java/lang/IllegalStateException
      61: dup
      62: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":()V
      65: athrow
      66: return

  javolution.util.FastTable$FastTableIterator(javolution.util.FastTable$1);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method "<init>":()V
       4: return

  static javolution.util.FastTable access$702(javolution.util.FastTable$FastTableIterator, javolution.util.FastTable);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field _table:Ljavolution/util/FastTable;
       6: areturn

  static java.lang.Object[] access$802(javolution.util.FastTable$FastTableIterator, java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field _low:[Ljava/lang/Object;
       6: areturn

  static java.lang.Object[][] access$902(javolution.util.FastTable$FastTableIterator, java.lang.Object[][]);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field _high:[[Ljava/lang/Object;
       6: areturn

  static {};
    Code:
       0: new           #22                 // class javolution/util/FastTable$FastTableIterator$1
       3: dup
       4: invokespecial #23                 // Method javolution/util/FastTable$FastTableIterator$1."<init>":()V
       7: putstatic     #6                  // Field FACTORY:Ljavolution/context/ObjectFactory;
      10: return
}
