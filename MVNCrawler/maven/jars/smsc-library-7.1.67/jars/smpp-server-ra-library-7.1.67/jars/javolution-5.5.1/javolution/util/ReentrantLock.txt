Compiled from "ReentrantLock.java"
public class javolution.util.ReentrantLock {
  private java.lang.Thread _owner;

  private long _count;

  public javolution.util.ReentrantLock();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void lock();
    Code:
       0: invokestatic  #2                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_1
       4: aload_0
       5: dup
       6: astore_2
       7: monitorenter
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field _owner:Ljava/lang/Thread;
      13: if_acmpne     29
      16: aload_0
      17: dup
      18: getfield      #4                  // Field _count:J
      21: lconst_1
      22: ladd
      23: putfield      #4                  // Field _count:J
      26: goto          60
      29: aload_0
      30: getfield      #3                  // Field _owner:Ljava/lang/Thread;
      33: ifnull        43
      36: aload_0
      37: invokevirtual #5                  // Method java/lang/Object.wait:()V
      40: goto          29
      43: aload_0
      44: aload_1
      45: putfield      #3                  // Field _owner:Ljava/lang/Thread;
      48: aload_0
      49: lconst_1
      50: putfield      #4                  // Field _count:J
      53: goto          60
      56: astore_3
      57: aload_2
      58: monitorexit
      59: return
      60: aload_2
      61: monitorexit
      62: goto          72
      65: astore        4
      67: aload_2
      68: monitorexit
      69: aload         4
      71: athrow
      72: return
    Exception table:
       from    to  target type
          29    53    56   Class java/lang/InterruptedException
           8    59    65   any
          60    62    65   any
          65    69    65   any

  public boolean tryLock();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #3                  // Field _owner:Ljava/lang/Thread;
       8: ifnonnull     19
      11: aload_0
      12: invokevirtual #7                  // Method lock:()V
      15: iconst_1
      16: aload_1
      17: monitorexit
      18: ireturn
      19: iconst_0
      20: aload_1
      21: monitorexit
      22: ireturn
      23: astore_2
      24: aload_1
      25: monitorexit
      26: aload_2
      27: athrow
    Exception table:
       from    to  target type
           4    18    23   any
          19    22    23   any
          23    26    23   any

  public void unlock();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: invokestatic  #2                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       7: aload_0
       8: getfield      #3                  // Field _owner:Ljava/lang/Thread;
      11: if_acmpne     42
      14: aload_0
      15: dup
      16: getfield      #4                  // Field _count:J
      19: lconst_1
      20: lsub
      21: dup2_x1
      22: putfield      #4                  // Field _count:J
      25: lconst_0
      26: lcmp
      27: ifne          52
      30: aload_0
      31: aconst_null
      32: putfield      #3                  // Field _owner:Ljava/lang/Thread;
      35: aload_0
      36: invokevirtual #8                  // Method java/lang/Object.notify:()V
      39: goto          52
      42: new           #9                  // class java/lang/IllegalMonitorStateException
      45: dup
      46: ldc           #10                 // String Current thread does not hold this lock
      48: invokespecial #11                 // Method java/lang/IllegalMonitorStateException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_1
      53: monitorexit
      54: goto          62
      57: astore_2
      58: aload_1
      59: monitorexit
      60: aload_2
      61: athrow
      62: return
    Exception table:
       from    to  target type
           4    54    57   any
          57    60    57   any

  public java.lang.Thread getOwner();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #3                  // Field _owner:Ljava/lang/Thread;
       8: aload_1
       9: monitorexit
      10: areturn
      11: astore_2
      12: aload_1
      13: monitorexit
      14: aload_2
      15: athrow
    Exception table:
       from    to  target type
           4    10    11   any
          11    14    11   any
}
