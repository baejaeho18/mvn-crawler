Compiled from "Index.java"
public final class javolution.util.Index extends java.lang.Number implements java.lang.Comparable<javolution.util.Index>, javolution.util.FastCollection$Record, javolution.lang.Realtime, javolution.lang.Immutable, javolution.xml.XMLSerializable {
  public static final javolution.util.Index ZERO;

  private static javolution.util.Index[] _NegativeIndices;

  private static int _NegativeIndicesLength;

  public static final javolution.lang.Configurable<java.lang.Integer> INITIAL_FIRST;

  private static javolution.util.Index[] _PositiveIndices;

  private static int _PositiveIndicesLength;

  public static final javolution.lang.Configurable<java.lang.Integer> INITIAL_LAST;

  private static final javax.realtime.MemoryArea IMMORTAL_MEMORY;

  private final int _value;

  private static final java.lang.Runnable AUGMENT_POSITIVE;

  private static final java.lang.Runnable AUGMENT_NEGATIVE;

  private static final int INCREASE_AMOUNT;

  static final javolution.text.TextFormat TEXT_FORMAT;

  private static final long serialVersionUID;

  private javolution.util.Index(int);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Number."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #7                  // Field _value:I
       9: return

  public static void setMinimumRange(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: if_icmple     13
       5: new           #8                  // class java/lang/IllegalArgumentException
       8: dup
       9: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":()V
      12: athrow
      13: iload_0
      14: invokestatic  #10                 // Method valueOf:(I)Ljavolution/util/Index;
      17: pop
      18: iload_1
      19: invokestatic  #10                 // Method valueOf:(I)Ljavolution/util/Index;
      22: pop
      23: return

  public static javolution.util.Index valueOf(int);
    Code:
       0: iload_0
       1: iflt          26
       4: iload_0
       5: getstatic     #5                  // Field _PositiveIndicesLength:I
       8: if_icmpge     19
      11: getstatic     #3                  // Field _PositiveIndices:[Ljavolution/util/Index;
      14: iload_0
      15: aaload
      16: goto          31
      19: iload_0
      20: invokestatic  #11                 // Method createPositive:(I)Ljavolution/util/Index;
      23: goto          31
      26: iload_0
      27: ineg
      28: invokestatic  #12                 // Method valueOfNegative:(I)Ljavolution/util/Index;
      31: areturn

  public static java.util.List<javolution.util.Index> rangeOf(int, int);
    Code:
       0: invokestatic  #13                 // Method javolution/util/FastTable.newInstance:()Ljavolution/util/FastTable;
       3: astore_2
       4: iload_0
       5: istore_3
       6: iload_3
       7: iload_1
       8: if_icmpge     26
      11: aload_2
      12: iload_3
      13: invokestatic  #10                 // Method valueOf:(I)Ljavolution/util/Index;
      16: invokevirtual #14                 // Method javolution/util/FastTable.add:(Ljava/lang/Object;)Z
      19: pop
      20: iinc          3, 1
      23: goto          6
      26: aload_2
      27: areturn

  public static java.util.List<javolution.util.Index> valuesOf(int...);
    Code:
       0: invokestatic  #13                 // Method javolution/util/FastTable.newInstance:()Ljavolution/util/FastTable;
       3: astore_1
       4: aload_0
       5: astore_2
       6: aload_2
       7: arraylength
       8: istore_3
       9: iconst_0
      10: istore        4
      12: iload         4
      14: iload_3
      15: if_icmpge     40
      18: aload_2
      19: iload         4
      21: iaload
      22: istore        5
      24: aload_1
      25: iload         5
      27: invokestatic  #10                 // Method valueOf:(I)Ljavolution/util/Index;
      30: invokevirtual #14                 // Method javolution/util/FastTable.add:(Ljava/lang/Object;)Z
      33: pop
      34: iinc          4, 1
      37: goto          12
      40: aload_1
      41: areturn

  private static javolution.util.Index valueOfNegative(int);
    Code:
       0: iload_0
       1: getstatic     #2                  // Field _NegativeIndicesLength:I
       4: if_icmpge     15
       7: getstatic     #1                  // Field _NegativeIndices:[Ljavolution/util/Index;
      10: iload_0
      11: aaload
      12: goto          19
      15: iload_0
      16: invokestatic  #15                 // Method createNegative:(I)Ljavolution/util/Index;
      19: areturn

  private static synchronized javolution.util.Index createPositive(int);
    Code:
       0: iload_0
       1: getstatic     #5                  // Field _PositiveIndicesLength:I
       4: if_icmpge     13
       7: getstatic     #3                  // Field _PositiveIndices:[Ljavolution/util/Index;
      10: iload_0
      11: aaload
      12: areturn
      13: iload_0
      14: getstatic     #5                  // Field _PositiveIndicesLength:I
      17: if_icmplt     32
      20: getstatic     #16                 // Field IMMORTAL_MEMORY:Ljavax/realtime/MemoryArea;
      23: getstatic     #17                 // Field AUGMENT_POSITIVE:Ljava/lang/Runnable;
      26: invokevirtual #18                 // Method javax/realtime/MemoryArea.executeInArea:(Ljava/lang/Runnable;)V
      29: goto          13
      32: getstatic     #3                  // Field _PositiveIndices:[Ljavolution/util/Index;
      35: iload_0
      36: aaload
      37: areturn

  private static synchronized javolution.util.Index createNegative(int);
    Code:
       0: iload_0
       1: getstatic     #2                  // Field _NegativeIndicesLength:I
       4: if_icmpge     13
       7: getstatic     #1                  // Field _NegativeIndices:[Ljavolution/util/Index;
      10: iload_0
      11: aaload
      12: areturn
      13: iload_0
      14: getstatic     #2                  // Field _NegativeIndicesLength:I
      17: if_icmplt     32
      20: getstatic     #16                 // Field IMMORTAL_MEMORY:Ljavax/realtime/MemoryArea;
      23: getstatic     #19                 // Field AUGMENT_NEGATIVE:Ljava/lang/Runnable;
      26: invokevirtual #18                 // Method javax/realtime/MemoryArea.executeInArea:(Ljava/lang/Runnable;)V
      29: goto          13
      32: getstatic     #1                  // Field _NegativeIndices:[Ljavolution/util/Index;
      35: iload_0
      36: aaload
      37: areturn

  public int intValue();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _value:I
       4: ireturn

  public long longValue();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method intValue:()I
       4: i2l
       5: lreturn

  public float floatValue();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method intValue:()I
       4: i2f
       5: freturn

  public double doubleValue();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method intValue:()I
       4: i2d
       5: dreturn

  public java.lang.String toString();
    Code:
       0: ldc_w         #21                 // class javolution/util/Index
       3: invokestatic  #22                 // Method javolution/text/TextFormat.getInstance:(Ljava/lang/Class;)Ljavolution/text/TextFormat;
       6: aload_0
       7: invokevirtual #23                 // Method javolution/text/TextFormat.formatToString:(Ljava/lang/Object;)Ljava/lang/String;
      10: areturn

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ireturn

  public final int hashCode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _value:I
       4: ireturn

  protected final java.lang.Object readResolve() throws java.io.ObjectStreamException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field _value:I
       4: invokestatic  #10                 // Method valueOf:(I)Ljavolution/util/Index;
       7: areturn

  public final int compareTo(javolution.util.Index);
    Code:
       0: aload_0
       1: getfield      #7                  // Field _value:I
       4: aload_1
       5: getfield      #7                  // Field _value:I
       8: isub
       9: ireturn

  public final javolution.util.FastCollection$Record getNext();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _value:I
       4: iconst_1
       5: iadd
       6: invokestatic  #10                 // Method valueOf:(I)Ljavolution/util/Index;
       9: areturn

  public final javolution.util.FastCollection$Record getPrevious();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _value:I
       4: iconst_1
       5: isub
       6: invokestatic  #10                 // Method valueOf:(I)Ljavolution/util/Index;
       9: areturn

  public javolution.text.Text toText();
    Code:
       0: ldc_w         #21                 // class javolution/util/Index
       3: invokestatic  #22                 // Method javolution/text/TextFormat.getInstance:(Ljava/lang/Class;)Ljavolution/text/TextFormat;
       6: aload_0
       7: invokevirtual #24                 // Method javolution/text/TextFormat.format:(Ljava/lang/Object;)Ljavolution/text/Text;
      10: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class javolution/util/Index
       5: invokevirtual #25                 // Method compareTo:(Ljavolution/util/Index;)I
       8: ireturn

  static int access$000();
    Code:
       0: getstatic     #5                  // Field _PositiveIndicesLength:I
       3: ireturn

  javolution.util.Index(int, javolution.util.Index$1);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #4                  // Method "<init>":(I)V
       5: return

  static javolution.util.Index[] access$200();
    Code:
       0: getstatic     #3                  // Field _PositiveIndices:[Ljavolution/util/Index;
       3: areturn

  static javolution.util.Index[] access$202(javolution.util.Index[]);
    Code:
       0: aload_0
       1: dup
       2: putstatic     #3                  // Field _PositiveIndices:[Ljavolution/util/Index;
       5: areturn

  static int access$012(int);
    Code:
       0: getstatic     #5                  // Field _PositiveIndicesLength:I
       3: iload_0
       4: iadd
       5: dup
       6: putstatic     #5                  // Field _PositiveIndicesLength:I
       9: ireturn

  static int access$300();
    Code:
       0: getstatic     #2                  // Field _NegativeIndicesLength:I
       3: ireturn

  static javolution.util.Index[] access$400();
    Code:
       0: getstatic     #1                  // Field _NegativeIndices:[Ljavolution/util/Index;
       3: areturn

  static javolution.util.Index[] access$402(javolution.util.Index[]);
    Code:
       0: aload_0
       1: dup
       2: putstatic     #1                  // Field _NegativeIndices:[Ljavolution/util/Index;
       5: areturn

  static int access$312(int);
    Code:
       0: getstatic     #2                  // Field _NegativeIndicesLength:I
       3: iload_0
       4: iadd
       5: dup
       6: putstatic     #2                  // Field _NegativeIndicesLength:I
       9: ireturn

  static {};
    Code:
       0: new           #21                 // class javolution/util/Index
       3: dup
       4: iconst_0
       5: invokespecial #4                  // Method "<init>":(I)V
       8: putstatic     #26                 // Field ZERO:Ljavolution/util/Index;
      11: bipush        32
      13: anewarray     #21                 // class javolution/util/Index
      16: putstatic     #1                  // Field _NegativeIndices:[Ljavolution/util/Index;
      19: getstatic     #1                  // Field _NegativeIndices:[Ljavolution/util/Index;
      22: iconst_0
      23: getstatic     #26                 // Field ZERO:Ljavolution/util/Index;
      26: aastore
      27: getstatic     #1                  // Field _NegativeIndices:[Ljavolution/util/Index;
      30: iconst_1
      31: new           #21                 // class javolution/util/Index
      34: dup
      35: iconst_m1
      36: invokespecial #4                  // Method "<init>":(I)V
      39: aastore
      40: iconst_2
      41: putstatic     #2                  // Field _NegativeIndicesLength:I
      44: new           #27                 // class javolution/util/Index$1
      47: dup
      48: new           #28                 // class java/lang/Integer
      51: dup
      52: getstatic     #2                  // Field _NegativeIndicesLength:I
      55: iconst_1
      56: isub
      57: ineg
      58: invokespecial #29                 // Method java/lang/Integer."<init>":(I)V
      61: invokespecial #30                 // Method javolution/util/Index$1."<init>":(Ljava/lang/Object;)V
      64: putstatic     #31                 // Field INITIAL_FIRST:Ljavolution/lang/Configurable;
      67: bipush        32
      69: anewarray     #21                 // class javolution/util/Index
      72: putstatic     #3                  // Field _PositiveIndices:[Ljavolution/util/Index;
      75: getstatic     #3                  // Field _PositiveIndices:[Ljavolution/util/Index;
      78: iconst_0
      79: getstatic     #26                 // Field ZERO:Ljavolution/util/Index;
      82: aastore
      83: iconst_1
      84: istore_0
      85: iload_0
      86: getstatic     #3                  // Field _PositiveIndices:[Ljavolution/util/Index;
      89: arraylength
      90: if_icmpge     112
      93: getstatic     #3                  // Field _PositiveIndices:[Ljavolution/util/Index;
      96: iload_0
      97: new           #21                 // class javolution/util/Index
     100: dup
     101: iload_0
     102: invokespecial #4                  // Method "<init>":(I)V
     105: aastore
     106: iinc          0, 1
     109: goto          85
     112: getstatic     #3                  // Field _PositiveIndices:[Ljavolution/util/Index;
     115: arraylength
     116: putstatic     #5                  // Field _PositiveIndicesLength:I
     119: new           #32                 // class javolution/util/Index$2
     122: dup
     123: new           #28                 // class java/lang/Integer
     126: dup
     127: getstatic     #5                  // Field _PositiveIndicesLength:I
     130: iconst_1
     131: isub
     132: invokespecial #29                 // Method java/lang/Integer."<init>":(I)V
     135: invokespecial #33                 // Method javolution/util/Index$2."<init>":(Ljava/lang/Object;)V
     138: putstatic     #34                 // Field INITIAL_LAST:Ljavolution/lang/Configurable;
     141: new           #35                 // class java/lang/Object
     144: dup
     145: invokespecial #36                 // Method java/lang/Object."<init>":()V
     148: invokestatic  #37                 // Method javax/realtime/MemoryArea.getMemoryArea:(Ljava/lang/Object;)Ljavax/realtime/MemoryArea;
     151: putstatic     #16                 // Field IMMORTAL_MEMORY:Ljavax/realtime/MemoryArea;
     154: new           #38                 // class javolution/util/Index$3
     157: dup
     158: invokespecial #39                 // Method javolution/util/Index$3."<init>":()V
     161: putstatic     #17                 // Field AUGMENT_POSITIVE:Ljava/lang/Runnable;
     164: new           #40                 // class javolution/util/Index$4
     167: dup
     168: invokespecial #41                 // Method javolution/util/Index$4."<init>":()V
     171: putstatic     #19                 // Field AUGMENT_NEGATIVE:Ljava/lang/Runnable;
     174: new           #42                 // class javolution/util/Index$5
     177: dup
     178: ldc_w         #21                 // class javolution/util/Index
     181: invokespecial #43                 // Method javolution/util/Index$5."<init>":(Ljava/lang/Class;)V
     184: putstatic     #44                 // Field TEXT_FORMAT:Ljavolution/text/TextFormat;
     187: return
}
