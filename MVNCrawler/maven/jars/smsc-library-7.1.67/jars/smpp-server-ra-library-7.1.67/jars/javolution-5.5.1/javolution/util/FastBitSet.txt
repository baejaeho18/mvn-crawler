Compiled from "FastBitSet.java"
public class javolution.util.FastBitSet extends javolution.util.FastCollection<javolution.util.Index> implements java.util.Set<javolution.util.Index>, javolution.lang.Reusable {
  private static final javolution.context.ObjectFactory FACTORY;

  private long[] bits;

  private int _length;

  private static final long serialVersionUID;

  public javolution.util.FastBitSet();
    Code:
       0: aload_0
       1: bipush        64
       3: invokespecial #3                  // Method "<init>":(I)V
       6: return

  public javolution.util.FastBitSet(int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method javolution/util/FastCollection."<init>":()V
       4: aload_0
       5: iload_1
       6: iconst_1
       7: isub
       8: bipush        6
      10: ishr
      11: iconst_1
      12: iadd
      13: putfield      #1                  // Field _length:I
      16: aload_0
      17: aload_0
      18: getfield      #1                  // Field _length:I
      21: newarray       long
      23: putfield      #2                  // Field bits:[J
      26: return

  public static javolution.util.FastBitSet newInstance();
    Code:
       0: getstatic     #5                  // Field FACTORY:Ljavolution/context/ObjectFactory;
       3: invokevirtual #6                  // Method javolution/context/ObjectFactory.object:()Ljava/lang/Object;
       6: checkcast     #7                  // class javolution/util/FastBitSet
       9: astore_0
      10: aload_0
      11: iconst_0
      12: putfield      #1                  // Field _length:I
      15: aload_0
      16: areturn

  public static void recycle(javolution.util.FastBitSet);
    Code:
       0: getstatic     #5                  // Field FACTORY:Ljavolution/context/ObjectFactory;
       3: aload_0
       4: invokevirtual #8                  // Method javolution/context/ObjectFactory.recycle:(Ljava/lang/Object;)V
       7: return

  public boolean add(javolution.util.Index);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method javolution/util/Index.intValue:()I
       4: istore_2
       5: aload_0
       6: iload_2
       7: invokevirtual #10                 // Method get:(I)Z
      10: ifeq          15
      13: iconst_0
      14: ireturn
      15: aload_0
      16: iload_2
      17: invokevirtual #11                 // Method set:(I)V
      20: iconst_1
      21: ireturn

  public void and(javolution.util.FastBitSet);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _length:I
       4: aload_1
       5: getfield      #1                  // Field _length:I
       8: invokestatic  #12                 // Method javolution/lang/MathLib.min:(II)I
      11: istore_2
      12: iconst_0
      13: istore_3
      14: iload_3
      15: iload_2
      16: if_icmpge     40
      19: aload_0
      20: getfield      #2                  // Field bits:[J
      23: iload_3
      24: dup2
      25: laload
      26: aload_1
      27: getfield      #2                  // Field bits:[J
      30: iload_3
      31: laload
      32: land
      33: lastore
      34: iinc          3, 1
      37: goto          14
      40: aload_0
      41: iload_2
      42: putfield      #1                  // Field _length:I
      45: return

  public void andNot(javolution.util.FastBitSet);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _length:I
       4: aload_1
       5: getfield      #1                  // Field _length:I
       8: invokestatic  #13                 // Method java/lang/Math.min:(II)I
      11: istore_2
      12: iinc          2, -1
      15: iload_2
      16: iflt          41
      19: aload_0
      20: getfield      #2                  // Field bits:[J
      23: iload_2
      24: dup2
      25: laload
      26: aload_1
      27: getfield      #2                  // Field bits:[J
      30: iload_2
      31: laload
      32: ldc2_w        #14                 // long -1l
      35: lxor
      36: land
      37: lastore
      38: goto          12
      41: return

  public int cardinality();
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: aload_0
       6: getfield      #1                  // Field _length:I
       9: if_icmpge     30
      12: iload_1
      13: aload_0
      14: getfield      #2                  // Field bits:[J
      17: iload_2
      18: laload
      19: invokestatic  #16                 // Method javolution/lang/MathLib.bitCount:(J)I
      22: iadd
      23: istore_1
      24: iinc          2, 1
      27: goto          4
      30: iload_1
      31: ireturn

  public void clear();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #1                  // Field _length:I
       5: return

  public void clear(int);
    Code:
       0: iload_1
       1: bipush        6
       3: ishr
       4: istore_2
       5: iload_2
       6: aload_0
       7: getfield      #1                  // Field _length:I
      10: if_icmplt     14
      13: return
      14: aload_0
      15: getfield      #2                  // Field bits:[J
      18: iload_2
      19: dup2
      20: laload
      21: lconst_1
      22: iload_1
      23: lshl
      24: ldc2_w        #14                 // long -1l
      27: lxor
      28: land
      29: lastore
      30: return

  public void clear(int, int);
    Code:
       0: iload_1
       1: iflt          9
       4: iload_2
       5: iload_1
       6: if_icmpge     17
       9: new           #17                 // class java/lang/IndexOutOfBoundsException
      12: dup
      13: invokespecial #18                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      16: athrow
      17: iload_1
      18: bipush        6
      20: iushr
      21: istore_3
      22: iload_3
      23: aload_0
      24: getfield      #1                  // Field _length:I
      27: if_icmplt     31
      30: return
      31: iload_2
      32: bipush        6
      34: iushr
      35: istore        4
      37: iload_3
      38: iload         4
      40: if_icmpne     64
      43: aload_0
      44: getfield      #2                  // Field bits:[J
      47: iload_3
      48: dup2
      49: laload
      50: lconst_1
      51: iload_1
      52: lshl
      53: lconst_1
      54: lsub
      55: ldc2_w        #14                 // long -1l
      58: iload_2
      59: lshl
      60: lor
      61: land
      62: lastore
      63: return
      64: aload_0
      65: getfield      #2                  // Field bits:[J
      68: iload_3
      69: dup2
      70: laload
      71: lconst_1
      72: iload_1
      73: lshl
      74: lconst_1
      75: lsub
      76: land
      77: lastore
      78: iload         4
      80: aload_0
      81: getfield      #1                  // Field _length:I
      84: if_icmpge     102
      87: aload_0
      88: getfield      #2                  // Field bits:[J
      91: iload         4
      93: dup2
      94: laload
      95: ldc2_w        #14                 // long -1l
      98: iload_2
      99: lshl
     100: land
     101: lastore
     102: iload_3
     103: iconst_1
     104: iadd
     105: istore        5
     107: iload         5
     109: iload         4
     111: if_icmpge     137
     114: iload         5
     116: aload_0
     117: getfield      #1                  // Field _length:I
     120: if_icmpge     137
     123: aload_0
     124: getfield      #2                  // Field bits:[J
     127: iload         5
     129: lconst_0
     130: lastore
     131: iinc          5, 1
     134: goto          107
     137: return

  public void flip(int);
    Code:
       0: iload_1
       1: bipush        6
       3: ishr
       4: istore_2
       5: aload_0
       6: iload_2
       7: iconst_1
       8: iadd
       9: invokespecial #19                 // Method setLength:(I)V
      12: aload_0
      13: getfield      #2                  // Field bits:[J
      16: iload_2
      17: dup2
      18: laload
      19: lconst_1
      20: iload_1
      21: lshl
      22: lxor
      23: lastore
      24: return

  public void flip(int, int);
    Code:
       0: iload_1
       1: iflt          9
       4: iload_2
       5: iload_1
       6: if_icmpge     17
       9: new           #17                 // class java/lang/IndexOutOfBoundsException
      12: dup
      13: invokespecial #18                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      16: athrow
      17: iload_1
      18: bipush        6
      20: iushr
      21: istore_3
      22: iload_2
      23: bipush        6
      25: iushr
      26: istore        4
      28: aload_0
      29: iload         4
      31: iconst_1
      32: iadd
      33: invokespecial #19                 // Method setLength:(I)V
      36: iload_3
      37: iload         4
      39: if_icmpne     63
      42: aload_0
      43: getfield      #2                  // Field bits:[J
      46: iload_3
      47: dup2
      48: laload
      49: ldc2_w        #14                 // long -1l
      52: iload_1
      53: lshl
      54: lconst_1
      55: iload_2
      56: lshl
      57: lconst_1
      58: lsub
      59: land
      60: lxor
      61: lastore
      62: return
      63: aload_0
      64: getfield      #2                  // Field bits:[J
      67: iload_3
      68: dup2
      69: laload
      70: ldc2_w        #14                 // long -1l
      73: iload_1
      74: lshl
      75: lxor
      76: lastore
      77: aload_0
      78: getfield      #2                  // Field bits:[J
      81: iload         4
      83: dup2
      84: laload
      85: lconst_1
      86: iload_2
      87: lshl
      88: lconst_1
      89: lsub
      90: lxor
      91: lastore
      92: iload_3
      93: iconst_1
      94: iadd
      95: istore        5
      97: iload         5
      99: iload         4
     101: if_icmpge     123
     104: aload_0
     105: getfield      #2                  // Field bits:[J
     108: iload         5
     110: dup2
     111: laload
     112: ldc2_w        #14                 // long -1l
     115: lxor
     116: lastore
     117: iinc          5, 1
     120: goto          97
     123: return

  public boolean get(int);
    Code:
       0: iload_1
       1: bipush        6
       3: ishr
       4: istore_2
       5: iload_2
       6: aload_0
       7: getfield      #1                  // Field _length:I
      10: if_icmplt     17
      13: iconst_0
      14: goto          37
      17: aload_0
      18: getfield      #2                  // Field bits:[J
      21: iload_2
      22: laload
      23: lconst_1
      24: iload_1
      25: lshl
      26: land
      27: lconst_0
      28: lcmp
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public javolution.util.FastBitSet get(int, int);
    Code:
       0: iload_1
       1: iflt          9
       4: iload_1
       5: iload_2
       6: if_icmple     17
       9: new           #17                 // class java/lang/IndexOutOfBoundsException
      12: dup
      13: invokespecial #18                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      16: athrow
      17: invokestatic  #20                 // Method newInstance:()Ljavolution/util/FastBitSet;
      20: astore_3
      21: aload_0
      22: getfield      #1                  // Field _length:I
      25: iload_2
      26: bipush        6
      28: iushr
      29: iconst_1
      30: iadd
      31: invokestatic  #12                 // Method javolution/lang/MathLib.min:(II)I
      34: istore        4
      36: aload_3
      37: iload         4
      39: invokespecial #19                 // Method setLength:(I)V
      42: aload_0
      43: getfield      #2                  // Field bits:[J
      46: iconst_0
      47: aload_3
      48: getfield      #2                  // Field bits:[J
      51: iconst_0
      52: iload         4
      54: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      57: aload_3
      58: iconst_0
      59: iload_1
      60: invokevirtual #22                 // Method clear:(II)V
      63: aload_3
      64: iload_2
      65: iload         4
      67: bipush        6
      69: ishl
      70: invokevirtual #22                 // Method clear:(II)V
      73: aload_3
      74: areturn

  public boolean intersects(javolution.util.FastBitSet);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _length:I
       4: aload_1
       5: getfield      #1                  // Field _length:I
       8: invokestatic  #12                 // Method javolution/lang/MathLib.min:(II)I
      11: istore_2
      12: iinc          2, -1
      15: iload_2
      16: iflt          39
      19: aload_0
      20: getfield      #2                  // Field bits:[J
      23: iload_2
      24: laload
      25: aload_1
      26: getfield      #2                  // Field bits:[J
      29: iload_2
      30: laload
      31: land
      32: lconst_0
      33: lcmp
      34: ifeq          12
      37: iconst_1
      38: ireturn
      39: iconst_0
      40: ireturn

  public int length();
    Code:
       0: aload_0
       1: getfield      #1                  // Field _length:I
       4: istore_1
       5: iinc          1, -1
       8: iload_1
       9: iflt          38
      12: aload_0
      13: getfield      #2                  // Field bits:[J
      16: iload_1
      17: laload
      18: lstore_2
      19: lload_2
      20: lconst_0
      21: lcmp
      22: ifeq          35
      25: iload_1
      26: bipush        70
      28: lload_2
      29: invokestatic  #23                 // Method javolution/lang/MathLib.numberOfTrailingZeros:(J)I
      32: isub
      33: ishl
      34: ireturn
      35: goto          5
      38: iconst_0
      39: ireturn

  public int nextClearBit(int);
    Code:
       0: iload_1
       1: bipush        6
       3: ishr
       4: istore_2
       5: lconst_1
       6: iload_1
       7: lshl
       8: lstore_3
       9: iload_2
      10: aload_0
      11: getfield      #1                  // Field _length:I
      14: if_icmpge     57
      17: aload_0
      18: getfield      #2                  // Field bits:[J
      21: iload_2
      22: laload
      23: lstore        5
      25: lload         5
      27: lload_3
      28: land
      29: lconst_0
      30: lcmp
      31: ifne          36
      34: iload_1
      35: ireturn
      36: lload_3
      37: iconst_1
      38: lshl
      39: lstore_3
      40: iinc          1, 1
      43: lload_3
      44: lconst_0
      45: lcmp
      46: ifne          25
      49: lconst_1
      50: lstore_3
      51: iinc          2, 1
      54: goto          9
      57: iload_1
      58: ireturn

  public int nextSetBit(int);
    Code:
       0: iload_1
       1: bipush        6
       3: ishr
       4: istore_2
       5: lconst_1
       6: iload_1
       7: lshl
       8: lstore_3
       9: iload_2
      10: aload_0
      11: getfield      #1                  // Field _length:I
      14: if_icmpge     57
      17: aload_0
      18: getfield      #2                  // Field bits:[J
      21: iload_2
      22: laload
      23: lstore        5
      25: lload         5
      27: lload_3
      28: land
      29: lconst_0
      30: lcmp
      31: ifeq          36
      34: iload_1
      35: ireturn
      36: lload_3
      37: iconst_1
      38: lshl
      39: lstore_3
      40: iinc          1, 1
      43: lload_3
      44: lconst_0
      45: lcmp
      46: ifne          25
      49: lconst_1
      50: lstore_3
      51: iinc          2, 1
      54: goto          9
      57: iconst_m1
      58: ireturn

  public void or(javolution.util.FastBitSet);
    Code:
       0: aload_1
       1: getfield      #1                  // Field _length:I
       4: aload_0
       5: getfield      #1                  // Field _length:I
       8: if_icmple     19
      11: aload_0
      12: aload_1
      13: getfield      #1                  // Field _length:I
      16: invokespecial #19                 // Method setLength:(I)V
      19: aload_1
      20: getfield      #1                  // Field _length:I
      23: istore_2
      24: iinc          2, -1
      27: iload_2
      28: iflt          49
      31: aload_0
      32: getfield      #2                  // Field bits:[J
      35: iload_2
      36: dup2
      37: laload
      38: aload_1
      39: getfield      #2                  // Field bits:[J
      42: iload_2
      43: laload
      44: lor
      45: lastore
      46: goto          24
      49: return

  public void set(int);
    Code:
       0: iload_1
       1: bipush        6
       3: ishr
       4: istore_2
       5: iload_2
       6: aload_0
       7: getfield      #1                  // Field _length:I
      10: if_icmplt     20
      13: aload_0
      14: iload_2
      15: iconst_1
      16: iadd
      17: invokespecial #19                 // Method setLength:(I)V
      20: aload_0
      21: getfield      #2                  // Field bits:[J
      24: iload_2
      25: dup2
      26: laload
      27: lconst_1
      28: iload_1
      29: lshl
      30: lor
      31: lastore
      32: return

  public void set(int, boolean);
    Code:
       0: iload_2
       1: ifeq          12
       4: aload_0
       5: iload_1
       6: invokevirtual #11                 // Method set:(I)V
       9: goto          17
      12: aload_0
      13: iload_1
      14: invokevirtual #24                 // Method clear:(I)V
      17: return

  public void set(int, int);
    Code:
       0: iload_1
       1: iflt          9
       4: iload_2
       5: iload_1
       6: if_icmpge     17
       9: new           #17                 // class java/lang/IndexOutOfBoundsException
      12: dup
      13: invokespecial #18                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      16: athrow
      17: iload_1
      18: bipush        6
      20: iushr
      21: istore_3
      22: iload_2
      23: bipush        6
      25: iushr
      26: istore        4
      28: aload_0
      29: iload         4
      31: iconst_1
      32: iadd
      33: invokespecial #19                 // Method setLength:(I)V
      36: iload_3
      37: iload         4
      39: if_icmpne     63
      42: aload_0
      43: getfield      #2                  // Field bits:[J
      46: iload_3
      47: dup2
      48: laload
      49: ldc2_w        #14                 // long -1l
      52: iload_1
      53: lshl
      54: lconst_1
      55: iload_2
      56: lshl
      57: lconst_1
      58: lsub
      59: land
      60: lor
      61: lastore
      62: return
      63: aload_0
      64: getfield      #2                  // Field bits:[J
      67: iload_3
      68: dup2
      69: laload
      70: ldc2_w        #14                 // long -1l
      73: iload_1
      74: lshl
      75: lor
      76: lastore
      77: aload_0
      78: getfield      #2                  // Field bits:[J
      81: iload         4
      83: dup2
      84: laload
      85: lconst_1
      86: iload_2
      87: lshl
      88: lconst_1
      89: lsub
      90: lor
      91: lastore
      92: iload_3
      93: iconst_1
      94: iadd
      95: istore        5
      97: iload         5
      99: iload         4
     101: if_icmpge     120
     104: aload_0
     105: getfield      #2                  // Field bits:[J
     108: iload         5
     110: ldc2_w        #14                 // long -1l
     113: lastore
     114: iinc          5, 1
     117: goto          97
     120: return

  public void set(int, int, boolean);
    Code:
       0: iload_3
       1: ifeq          13
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokevirtual #25                 // Method set:(II)V
      10: goto          19
      13: aload_0
      14: iload_1
      15: iload_2
      16: invokevirtual #22                 // Method clear:(II)V
      19: return

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method cardinality:()I
       4: ireturn

  public void xor(javolution.util.FastBitSet);
    Code:
       0: aload_1
       1: getfield      #1                  // Field _length:I
       4: aload_0
       5: getfield      #1                  // Field _length:I
       8: if_icmple     19
      11: aload_0
      12: aload_1
      13: getfield      #1                  // Field _length:I
      16: invokespecial #19                 // Method setLength:(I)V
      19: aload_1
      20: getfield      #1                  // Field _length:I
      23: istore_2
      24: iinc          2, -1
      27: iload_2
      28: iflt          49
      31: aload_0
      32: getfield      #2                  // Field bits:[J
      35: iload_2
      36: dup2
      37: laload
      38: aload_1
      39: getfield      #2                  // Field bits:[J
      42: iload_2
      43: laload
      44: lxor
      45: lastore
      46: goto          24
      49: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #7                  // class javolution/util/FastBitSet
       4: ifne          13
       7: aload_0
       8: aload_1
       9: invokespecial #27                 // Method javolution/util/FastCollection.equals:(Ljava/lang/Object;)Z
      12: ireturn
      13: aload_1
      14: checkcast     #7                  // class javolution/util/FastBitSet
      17: astore_2
      18: aload_0
      19: getfield      #1                  // Field _length:I
      22: aload_2
      23: getfield      #1                  // Field _length:I
      26: invokestatic  #12                 // Method javolution/lang/MathLib.min:(II)I
      29: istore_3
      30: iconst_0
      31: istore        4
      33: iload         4
      35: iload_3
      36: if_icmpge     65
      39: aload_0
      40: getfield      #2                  // Field bits:[J
      43: iload         4
      45: laload
      46: aload_2
      47: getfield      #2                  // Field bits:[J
      50: iload         4
      52: laload
      53: lcmp
      54: ifeq          59
      57: iconst_0
      58: ireturn
      59: iinc          4, 1
      62: goto          33
      65: iload_3
      66: istore        4
      68: iload         4
      70: aload_0
      71: getfield      #1                  // Field _length:I
      74: if_icmpge     97
      77: aload_0
      78: getfield      #2                  // Field bits:[J
      81: iload         4
      83: laload
      84: lconst_0
      85: lcmp
      86: ifeq          91
      89: iconst_0
      90: ireturn
      91: iinc          4, 1
      94: goto          68
      97: iload_3
      98: istore        4
     100: iload         4
     102: aload_2
     103: getfield      #1                  // Field _length:I
     106: if_icmpge     129
     109: aload_2
     110: getfield      #2                  // Field bits:[J
     113: iload         4
     115: laload
     116: lconst_0
     117: lcmp
     118: ifeq          123
     121: iconst_0
     122: ireturn
     123: iinc          4, 1
     126: goto          100
     129: iconst_1
     130: ireturn

  public int hashCode();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: iconst_0
       4: invokevirtual #28                 // Method nextSetBit:(I)I
       7: istore_2
       8: iload_2
       9: iflt          25
      12: iload_1
      13: iload_2
      14: iadd
      15: istore_1
      16: aload_0
      17: iload_2
      18: invokevirtual #28                 // Method nextSetBit:(I)I
      21: istore_2
      22: goto          8
      25: iload_1
      26: ireturn

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #1                  // Field _length:I
       5: return

  public javolution.util.FastCollection$Record head();
    Code:
       0: iconst_m1
       1: invokestatic  #29                 // Method javolution/util/Index.valueOf:(I)Ljavolution/util/Index;
       4: areturn

  public javolution.util.FastCollection$Record tail();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method cardinality:()I
       4: invokestatic  #29                 // Method javolution/util/Index.valueOf:(I)Ljavolution/util/Index;
       7: areturn

  public javolution.util.Index valueOf(javolution.util.FastCollection$Record);
    Code:
       0: aload_1
       1: checkcast     #30                 // class javolution/util/Index
       4: invokevirtual #9                  // Method javolution/util/Index.intValue:()I
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: aload_0
      16: getfield      #1                  // Field _length:I
      19: if_icmpge     97
      22: aload_0
      23: getfield      #2                  // Field bits:[J
      26: iload         4
      28: iinc          4, 1
      31: laload
      32: lstore        5
      34: iload_3
      35: lload         5
      37: invokestatic  #16                 // Method javolution/lang/MathLib.bitCount:(J)I
      40: iadd
      41: istore_3
      42: iload_3
      43: iload_2
      44: if_icmple     94
      47: iload         4
      49: bipush        6
      51: ishl
      52: istore        7
      54: iload_3
      55: iload_2
      56: if_icmpeq     88
      59: lload         5
      61: invokestatic  #31                 // Method javolution/lang/MathLib.numberOfLeadingZeros:(J)I
      64: iconst_1
      65: iadd
      66: istore        8
      68: lload         5
      70: iload         8
      72: lshl
      73: lstore        5
      75: iload         7
      77: iload         8
      79: isub
      80: istore        7
      82: iinc          3, -1
      85: goto          54
      88: iload         7
      90: invokestatic  #29                 // Method javolution/util/Index.valueOf:(I)Ljavolution/util/Index;
      93: areturn
      94: goto          13
      97: aconst_null
      98: areturn

  public void delete(javolution.util.FastCollection$Record);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method valueOf:(Ljavolution/util/FastCollection$Record;)Ljavolution/util/Index;
       5: astore_2
       6: aload_2
       7: ifnull        20
      10: new           #33                 // class java/lang/UnsupportedOperationException
      13: dup
      14: ldc           #34                 // String Not supported yet.
      16: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return

  private final void setLength(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bits:[J
       4: arraylength
       5: iload_1
       6: if_icmpge     25
       9: aload_0
      10: invokestatic  #36                 // Method javax/realtime/MemoryArea.getMemoryArea:(Ljava/lang/Object;)Ljavax/realtime/MemoryArea;
      13: new           #37                 // class javolution/util/FastBitSet$2
      16: dup
      17: aload_0
      18: iload_1
      19: invokespecial #38                 // Method javolution/util/FastBitSet$2."<init>":(Ljavolution/util/FastBitSet;I)V
      22: invokevirtual #39                 // Method javax/realtime/MemoryArea.executeInArea:(Ljava/lang/Runnable;)V
      25: aload_0
      26: getfield      #1                  // Field _length:I
      29: istore_2
      30: iload_2
      31: iload_1
      32: if_icmpge     48
      35: aload_0
      36: getfield      #2                  // Field bits:[J
      39: iload_2
      40: lconst_0
      41: lastore
      42: iinc          2, 1
      45: goto          30
      48: aload_0
      49: iload_1
      50: putfield      #1                  // Field _length:I
      53: return

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class javolution/util/Index
       5: invokevirtual #40                 // Method add:(Ljavolution/util/Index;)Z
       8: ireturn

  public java.lang.Object valueOf(javolution.util.FastCollection$Record);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method valueOf:(Ljavolution/util/FastCollection$Record;)Ljavolution/util/Index;
       5: areturn

  static long[] access$000(javolution.util.FastBitSet);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bits:[J
       4: areturn

  static int access$100(javolution.util.FastBitSet);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _length:I
       4: ireturn

  static long[] access$002(javolution.util.FastBitSet, long[]);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field bits:[J
       6: areturn

  static {};
    Code:
       0: new           #41                 // class javolution/util/FastBitSet$1
       3: dup
       4: invokespecial #42                 // Method javolution/util/FastBitSet$1."<init>":()V
       7: putstatic     #5                  // Field FACTORY:Ljavolution/context/ObjectFactory;
      10: return
}
