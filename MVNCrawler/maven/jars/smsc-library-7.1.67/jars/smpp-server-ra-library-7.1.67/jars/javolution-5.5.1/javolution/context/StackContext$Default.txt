Compiled from "StackContext.java"
final class javolution.context.StackContext$Default extends javolution.context.StackContext {
  private final java.lang.ThreadLocal _factoryToAllocator;

  private final java.lang.ThreadLocal _activeAllocators;

  private final javolution.util.FastTable _ownerUsedAllocators;

  private final javolution.util.FastTable _nonOwnerUsedAllocators;

  private javolution.context.StackContext$Default();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method javolution/context/StackContext."<init>":()V
       4: aload_0
       5: new           #3                  // class javolution/context/StackContext$Default$1
       8: dup
       9: aload_0
      10: invokespecial #4                  // Method javolution/context/StackContext$Default$1."<init>":(Ljavolution/context/StackContext$Default;)V
      13: putfield      #5                  // Field _factoryToAllocator:Ljava/lang/ThreadLocal;
      16: aload_0
      17: new           #6                  // class javolution/context/StackContext$Default$2
      20: dup
      21: aload_0
      22: invokespecial #7                  // Method javolution/context/StackContext$Default$2."<init>":(Ljavolution/context/StackContext$Default;)V
      25: putfield      #8                  // Field _activeAllocators:Ljava/lang/ThreadLocal;
      28: aload_0
      29: new           #9                  // class javolution/util/FastTable
      32: dup
      33: invokespecial #10                 // Method javolution/util/FastTable."<init>":()V
      36: putfield      #11                 // Field _ownerUsedAllocators:Ljavolution/util/FastTable;
      39: aload_0
      40: new           #9                  // class javolution/util/FastTable
      43: dup
      44: invokespecial #10                 // Method javolution/util/FastTable."<init>":()V
      47: putfield      #12                 // Field _nonOwnerUsedAllocators:Ljavolution/util/FastTable;
      50: return

  protected void deactivate();
    Code:
       0: aload_0
       1: getfield      #8                  // Field _activeAllocators:Ljava/lang/ThreadLocal;
       4: invokevirtual #13                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #9                  // class javolution/util/FastTable
      10: astore_1
      11: iconst_0
      12: istore_2
      13: aload_1
      14: invokevirtual #14                 // Method javolution/util/FastTable.size:()I
      17: istore_3
      18: iload_2
      19: iload_3
      20: if_icmpge     41
      23: aload_1
      24: iload_2
      25: iinc          2, 1
      28: invokevirtual #15                 // Method javolution/util/FastTable.get:(I)Ljava/lang/Object;
      31: checkcast     #16                 // class javolution/context/Allocator
      34: aconst_null
      35: putfield      #17                 // Field javolution/context/Allocator.user:Ljava/lang/Thread;
      38: goto          18
      41: aload_1
      42: invokevirtual #18                 // Method javolution/util/FastTable.clear:()V
      45: return

  protected javolution.context.Allocator getAllocator(javolution.context.ObjectFactory);
    Code:
       0: aload_0
       1: getfield      #5                  // Field _factoryToAllocator:Ljava/lang/ThreadLocal;
       4: invokevirtual #13                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #19                 // class javolution/util/FastMap
      10: astore_2
      11: aload_2
      12: aload_1
      13: invokevirtual #20                 // Method javolution/util/FastMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #21                 // class javolution/context/StackContext$StackAllocator
      19: astore_3
      20: aload_3
      21: ifnonnull     40
      24: new           #21                 // class javolution/context/StackContext$StackAllocator
      27: dup
      28: aload_1
      29: invokespecial #22                 // Method javolution/context/StackContext$StackAllocator."<init>":(Ljavolution/context/ObjectFactory;)V
      32: astore_3
      33: aload_2
      34: aload_1
      35: aload_3
      36: invokevirtual #23                 // Method javolution/util/FastMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_3
      41: getfield      #24                 // Field javolution/context/StackContext$StackAllocator.user:Ljava/lang/Thread;
      44: ifnonnull     73
      47: aload_3
      48: invokestatic  #25                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      51: putfield      #24                 // Field javolution/context/StackContext$StackAllocator.user:Ljava/lang/Thread;
      54: aload_0
      55: getfield      #8                  // Field _activeAllocators:Ljava/lang/ThreadLocal;
      58: invokevirtual #13                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      61: checkcast     #9                  // class javolution/util/FastTable
      64: astore        4
      66: aload         4
      68: aload_3
      69: invokevirtual #26                 // Method javolution/util/FastTable.add:(Ljava/lang/Object;)Z
      72: pop
      73: aload_3
      74: invokestatic  #27                 // Method javolution/context/StackContext$StackAllocator.access$000:(Ljavolution/context/StackContext$StackAllocator;)Z
      77: ifne          139
      80: aload_3
      81: iconst_1
      82: invokestatic  #28                 // Method javolution/context/StackContext$StackAllocator.access$002:(Ljavolution/context/StackContext$StackAllocator;Z)Z
      85: pop
      86: invokestatic  #25                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      89: aload_0
      90: invokevirtual #29                 // Method getOwner:()Ljava/lang/Thread;
      93: if_acmpne     108
      96: aload_0
      97: getfield      #11                 // Field _ownerUsedAllocators:Ljavolution/util/FastTable;
     100: aload_3
     101: invokevirtual #26                 // Method javolution/util/FastTable.add:(Ljava/lang/Object;)Z
     104: pop
     105: goto          139
     108: aload_0
     109: getfield      #12                 // Field _nonOwnerUsedAllocators:Ljavolution/util/FastTable;
     112: dup
     113: astore        4
     115: monitorenter
     116: aload_0
     117: getfield      #12                 // Field _nonOwnerUsedAllocators:Ljavolution/util/FastTable;
     120: aload_3
     121: invokevirtual #26                 // Method javolution/util/FastTable.add:(Ljava/lang/Object;)Z
     124: pop
     125: aload         4
     127: monitorexit
     128: goto          139
     131: astore        5
     133: aload         4
     135: monitorexit
     136: aload         5
     138: athrow
     139: aload_3
     140: areturn
    Exception table:
       from    to  target type
         116   128   131   any
         131   136   131   any

  protected void enterAction();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getOuter:()Ljavolution/context/Context;
       4: invokevirtual #31                 // Method javolution/context/Context.getAllocatorContext:()Ljavolution/context/AllocatorContext;
       7: invokevirtual #32                 // Method javolution/context/AllocatorContext.deactivate:()V
      10: return

  protected void exitAction();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method deactivate:()V
       4: iconst_0
       5: istore_1
       6: iload_1
       7: aload_0
       8: getfield      #11                 // Field _ownerUsedAllocators:Ljavolution/util/FastTable;
      11: invokevirtual #14                 // Method javolution/util/FastTable.size:()I
      14: if_icmpge     39
      17: aload_0
      18: getfield      #11                 // Field _ownerUsedAllocators:Ljavolution/util/FastTable;
      21: iload_1
      22: invokevirtual #15                 // Method javolution/util/FastTable.get:(I)Ljava/lang/Object;
      25: checkcast     #21                 // class javolution/context/StackContext$StackAllocator
      28: astore_2
      29: aload_2
      30: invokevirtual #34                 // Method javolution/context/StackContext$StackAllocator.reset:()V
      33: iinc          1, 1
      36: goto          6
      39: aload_0
      40: getfield      #11                 // Field _ownerUsedAllocators:Ljavolution/util/FastTable;
      43: invokevirtual #18                 // Method javolution/util/FastTable.clear:()V
      46: iconst_0
      47: istore_1
      48: iload_1
      49: aload_0
      50: getfield      #12                 // Field _nonOwnerUsedAllocators:Ljavolution/util/FastTable;
      53: invokevirtual #14                 // Method javolution/util/FastTable.size:()I
      56: if_icmpge     81
      59: aload_0
      60: getfield      #12                 // Field _nonOwnerUsedAllocators:Ljavolution/util/FastTable;
      63: iload_1
      64: invokevirtual #15                 // Method javolution/util/FastTable.get:(I)Ljava/lang/Object;
      67: checkcast     #21                 // class javolution/context/StackContext$StackAllocator
      70: astore_2
      71: aload_2
      72: invokevirtual #34                 // Method javolution/context/StackContext$StackAllocator.reset:()V
      75: iinc          1, 1
      78: goto          48
      81: aload_0
      82: getfield      #12                 // Field _nonOwnerUsedAllocators:Ljavolution/util/FastTable;
      85: invokevirtual #18                 // Method javolution/util/FastTable.clear:()V
      88: return

  javolution.context.StackContext$Default(javolution.context.StackContext$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
