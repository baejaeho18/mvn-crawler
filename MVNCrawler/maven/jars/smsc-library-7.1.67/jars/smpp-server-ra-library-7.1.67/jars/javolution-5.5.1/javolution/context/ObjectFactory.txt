Compiled from "ObjectFactory.java"
public abstract class javolution.context.ObjectFactory<T> {
  private boolean _doCleanup;

  private javolution.context.Allocator<T> _allocator;

  private static final javolution.context.Allocator NULL_ALLOCATOR;

  private java.lang.ThreadLocal _localAllocator;

  protected javolution.context.ObjectFactory();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field _doCleanup:Z
       9: aload_0
      10: getstatic     #1                  // Field NULL_ALLOCATOR:Ljavolution/context/Allocator;
      13: putfield      #4                  // Field _allocator:Ljavolution/context/Allocator;
      16: aload_0
      17: new           #5                  // class javolution/context/ObjectFactory$2
      20: dup
      21: aload_0
      22: invokespecial #6                  // Method javolution/context/ObjectFactory$2."<init>":(Ljavolution/context/ObjectFactory;)V
      25: putfield      #7                  // Field _localAllocator:Ljava/lang/ThreadLocal;
      28: return

  public static <T> javolution.context.ObjectFactory<T> getInstance(java.lang.Class<T>);
    Code:
       0: invokestatic  #8                  // Method javolution/lang/Reflection.getInstance:()Ljavolution/lang/Reflection;
       3: aload_0
       4: ldc_w         #9                  // class javolution/context/ObjectFactory
       7: iconst_0
       8: invokevirtual #10                 // Method javolution/lang/Reflection.getField:(Ljava/lang/Class;Ljava/lang/Class;Z)Ljava/lang/Object;
      11: checkcast     #9                  // class javolution/context/ObjectFactory
      14: astore_1
      15: aload_1
      16: ifnull        23
      19: aload_1
      20: goto          32
      23: new           #11                 // class javolution/context/ObjectFactory$Generic
      26: dup
      27: aload_0
      28: aconst_null
      29: invokespecial #12                 // Method javolution/context/ObjectFactory$Generic."<init>":(Ljava/lang/Class;Ljavolution/context/ObjectFactory$1;)V
      32: areturn

  public static <T> void setInstance(javolution.context.ObjectFactory<T>, java.lang.Class<T>);
    Code:
       0: invokestatic  #8                  // Method javolution/lang/Reflection.getInstance:()Ljavolution/lang/Reflection;
       3: aload_0
       4: aload_1
       5: ldc_w         #9                  // class javolution/context/ObjectFactory
       8: invokevirtual #13                 // Method javolution/lang/Reflection.setField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;)V
      11: return

  public final T object();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _allocator:Ljavolution/context/Allocator;
       4: astore_1
       5: aload_1
       6: getfield      #14                 // Field javolution/context/Allocator.user:Ljava/lang/Thread;
       9: invokestatic  #15                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      12: if_acmpne     22
      15: aload_1
      16: invokevirtual #16                 // Method javolution/context/Allocator.next:()Ljava/lang/Object;
      19: goto          29
      22: aload_0
      23: invokevirtual #17                 // Method currentAllocator:()Ljavolution/context/Allocator;
      26: invokevirtual #16                 // Method javolution/context/Allocator.next:()Ljava/lang/Object;
      29: areturn

  public final void recycle(T);
    Code:
       0: aload_0
       1: getfield      #4                  // Field _allocator:Ljavolution/context/Allocator;
       4: astore_2
       5: aload_2
       6: getfield      #14                 // Field javolution/context/Allocator.user:Ljava/lang/Thread;
       9: invokestatic  #15                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      12: if_acmpeq     20
      15: aload_0
      16: invokevirtual #17                 // Method currentAllocator:()Ljavolution/context/Allocator;
      19: astore_2
      20: aload_2
      21: aload_1
      22: invokevirtual #18                 // Method javolution/context/Allocator.recycle:(Ljava/lang/Object;)V
      25: return

  public final javolution.context.Allocator<T> currentAllocator();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _localAllocator:Ljava/lang/ThreadLocal;
       4: invokevirtual #19                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #20                 // class javolution/context/Allocator
      10: astore_1
      11: aload_1
      12: getfield      #14                 // Field javolution/context/Allocator.user:Ljava/lang/Thread;
      15: ifnull        25
      18: aload_0
      19: aload_1
      20: dup_x1
      21: putfield      #4                  // Field _allocator:Ljavolution/context/Allocator;
      24: areturn
      25: invokestatic  #21                 // Method javolution/context/Context.getCurrentContext:()Ljavolution/context/Context;
      28: invokevirtual #22                 // Method javolution/context/Context.getAllocatorContext:()Ljavolution/context/AllocatorContext;
      31: aload_0
      32: invokevirtual #23                 // Method javolution/context/AllocatorContext.getAllocator:(Ljavolution/context/ObjectFactory;)Ljavolution/context/Allocator;
      35: astore_1
      36: aload_0
      37: getfield      #7                  // Field _localAllocator:Ljava/lang/ThreadLocal;
      40: aload_1
      41: invokevirtual #24                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      44: aload_0
      45: aload_1
      46: putfield      #4                  // Field _allocator:Ljavolution/context/Allocator;
      49: aload_1
      50: areturn

  protected abstract T create();

  protected void cleanup(T);
    Code:
       0: aload_1
       1: instanceof    #25                 // class javolution/lang/Reusable
       4: ifeq          19
       7: aload_1
       8: checkcast     #25                 // class javolution/lang/Reusable
      11: invokeinterface #26,  1           // InterfaceMethod javolution/lang/Reusable.reset:()V
      16: goto          24
      19: aload_0
      20: iconst_0
      21: putfield      #3                  // Field _doCleanup:Z
      24: return

  protected final boolean doCleanup();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _doCleanup:Z
       4: ireturn

  static javolution.context.Allocator access$100();
    Code:
       0: getstatic     #1                  // Field NULL_ALLOCATOR:Ljavolution/context/Allocator;
       3: areturn

  static {};
    Code:
       0: new           #27                 // class javolution/context/ObjectFactory$1
       3: dup
       4: invokespecial #28                 // Method javolution/context/ObjectFactory$1."<init>":()V
       7: putstatic     #1                  // Field NULL_ALLOCATOR:Ljavolution/context/Allocator;
      10: return
}
