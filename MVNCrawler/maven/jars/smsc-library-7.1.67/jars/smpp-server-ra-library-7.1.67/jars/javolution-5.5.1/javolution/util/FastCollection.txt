Compiled from "FastCollection.java"
public abstract class javolution.util.FastCollection<E> implements java.util.Collection<E>, javolution.xml.XMLSerializable, javolution.lang.Realtime {
  private static final java.lang.Object NULL;

  protected javolution.util.FastCollection();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract int size();

  public abstract javolution.util.FastCollection$Record head();

  public abstract javolution.util.FastCollection$Record tail();

  public abstract E valueOf(javolution.util.FastCollection$Record);

  public abstract void delete(javolution.util.FastCollection$Record);

  public java.util.Collection<E> unmodifiable();
    Code:
       0: new           #3                  // class javolution/util/FastCollection$Unmodifiable
       3: dup
       4: aload_0
       5: invokespecial #4                  // Method javolution/util/FastCollection$Unmodifiable."<init>":(Ljavolution/util/FastCollection;)V
       8: areturn

  public java.util.Collection<E> shared();
    Code:
       0: new           #5                  // class javolution/util/FastCollection$Shared
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #6                  // Method javolution/util/FastCollection$Shared."<init>":(Ljavolution/util/FastCollection;Ljavolution/util/FastCollection$1;)V
       9: areturn

  public java.util.Iterator<E> iterator();
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method javolution/util/FastIterator.valueOf:(Ljavolution/util/FastCollection;)Ljavolution/util/FastIterator;
       4: areturn

  public javolution.util.FastComparator<? super E> getValueComparator();
    Code:
       0: getstatic     #8                  // Field javolution/util/FastComparator.DEFAULT:Ljavolution/util/FastComparator;
       3: areturn

  public boolean add(E);
    Code:
       0: new           #9                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #10                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getValueComparator:()Ljavolution/util/FastComparator;
       4: astore_2
       5: aload_0
       6: invokevirtual #12                 // Method head:()Ljavolution/util/FastCollection$Record;
       9: astore_3
      10: aload_0
      11: invokevirtual #13                 // Method tail:()Ljavolution/util/FastCollection$Record;
      14: astore        4
      16: aload_3
      17: invokeinterface #14,  1           // InterfaceMethod javolution/util/FastCollection$Record.getNext:()Ljavolution/util/FastCollection$Record;
      22: dup
      23: astore_3
      24: aload         4
      26: if_acmpeq     49
      29: aload_2
      30: aload_1
      31: aload_0
      32: aload_3
      33: invokevirtual #15                 // Method valueOf:(Ljavolution/util/FastCollection$Record;)Ljava/lang/Object;
      36: invokevirtual #16                 // Method javolution/util/FastComparator.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifeq          16
      42: aload_0
      43: aload_3
      44: invokevirtual #17                 // Method delete:(Ljavolution/util/FastCollection$Record;)V
      47: iconst_1
      48: ireturn
      49: iconst_0
      50: ireturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method head:()Ljavolution/util/FastCollection$Record;
       4: astore_1
       5: aload_0
       6: invokevirtual #13                 // Method tail:()Ljavolution/util/FastCollection$Record;
       9: invokeinterface #18,  1           // InterfaceMethod javolution/util/FastCollection$Record.getPrevious:()Ljavolution/util/FastCollection$Record;
      14: astore_2
      15: aload_2
      16: aload_1
      17: if_acmpeq     35
      20: aload_0
      21: aload_2
      22: invokevirtual #17                 // Method delete:(Ljavolution/util/FastCollection$Record;)V
      25: aload_2
      26: invokeinterface #18,  1           // InterfaceMethod javolution/util/FastCollection$Record.getPrevious:()Ljavolution/util/FastCollection$Record;
      31: astore_2
      32: goto          15
      35: return

  public final boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method size:()I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getValueComparator:()Ljavolution/util/FastComparator;
       4: astore_2
       5: aload_0
       6: invokevirtual #12                 // Method head:()Ljavolution/util/FastCollection$Record;
       9: astore_3
      10: aload_0
      11: invokevirtual #13                 // Method tail:()Ljavolution/util/FastCollection$Record;
      14: astore        4
      16: aload_3
      17: invokeinterface #14,  1           // InterfaceMethod javolution/util/FastCollection$Record.getNext:()Ljavolution/util/FastCollection$Record;
      22: dup
      23: astore_3
      24: aload         4
      26: if_acmpeq     44
      29: aload_2
      30: aload_1
      31: aload_0
      32: aload_3
      33: invokevirtual #15                 // Method valueOf:(Ljavolution/util/FastCollection$Record;)Ljava/lang/Object;
      36: invokevirtual #16                 // Method javolution/util/FastComparator.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifeq          16
      42: iconst_1
      43: ireturn
      44: iconst_0
      45: ireturn

  public boolean addAll(java.util.Collection<? extends E>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #20,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          36
      18: aload_0
      19: aload_3
      20: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: invokevirtual #23                 // Method add:(Ljava/lang/Object;)Z
      28: ifeq          9
      31: iconst_1
      32: istore_2
      33: goto          9
      36: iload_2
      37: ireturn

  public boolean containsAll(java.util.Collection<?>);
    Code:
       0: aload_1
       1: invokeinterface #20,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          31
      16: aload_0
      17: aload_2
      18: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: invokevirtual #24                 // Method contains:(Ljava/lang/Object;)Z
      26: ifne          7
      29: iconst_0
      30: ireturn
      31: iconst_1
      32: ireturn

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: invokevirtual #12                 // Method head:()Ljavolution/util/FastCollection$Record;
       6: astore_3
       7: aload_0
       8: invokevirtual #13                 // Method tail:()Ljavolution/util/FastCollection$Record;
      11: invokeinterface #18,  1           // InterfaceMethod javolution/util/FastCollection$Record.getPrevious:()Ljavolution/util/FastCollection$Record;
      16: astore        4
      18: aload         4
      20: aload_3
      21: if_acmpeq     65
      24: aload         4
      26: invokeinterface #18,  1           // InterfaceMethod javolution/util/FastCollection$Record.getPrevious:()Ljavolution/util/FastCollection$Record;
      31: astore        5
      33: aload_1
      34: aload_0
      35: aload         4
      37: invokevirtual #15                 // Method valueOf:(Ljavolution/util/FastCollection$Record;)Ljava/lang/Object;
      40: aload_0
      41: invokevirtual #11                 // Method getValueComparator:()Ljavolution/util/FastComparator;
      44: invokestatic  #25                 // Method contains:(Ljava/util/Collection;Ljava/lang/Object;Ljavolution/util/FastComparator;)Z
      47: ifeq          58
      50: aload_0
      51: aload         4
      53: invokevirtual #17                 // Method delete:(Ljavolution/util/FastCollection$Record;)V
      56: iconst_1
      57: istore_2
      58: aload         5
      60: astore        4
      62: goto          18
      65: iload_2
      66: ireturn

  private static boolean contains(java.util.Collection, java.lang.Object, javolution.util.FastComparator);
    Code:
       0: aload_0
       1: instanceof    #26                 // class javolution/util/FastCollection
       4: ifeq          29
       7: aload_0
       8: checkcast     #26                 // class javolution/util/FastCollection
      11: invokevirtual #11                 // Method getValueComparator:()Ljavolution/util/FastComparator;
      14: aload_2
      15: invokevirtual #27                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      18: ifeq          29
      21: aload_0
      22: aload_1
      23: invokeinterface #28,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      28: ireturn
      29: aload_0
      30: invokeinterface #20,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      35: astore_3
      36: aload_3
      37: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          61
      45: aload_2
      46: aload_1
      47: aload_3
      48: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: invokevirtual #16                 // Method javolution/util/FastComparator.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      56: ifeq          36
      59: iconst_1
      60: ireturn
      61: iconst_0
      62: ireturn

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: invokevirtual #12                 // Method head:()Ljavolution/util/FastCollection$Record;
       6: astore_3
       7: aload_0
       8: invokevirtual #13                 // Method tail:()Ljavolution/util/FastCollection$Record;
      11: invokeinterface #18,  1           // InterfaceMethod javolution/util/FastCollection$Record.getPrevious:()Ljavolution/util/FastCollection$Record;
      16: astore        4
      18: aload         4
      20: aload_3
      21: if_acmpeq     65
      24: aload         4
      26: invokeinterface #18,  1           // InterfaceMethod javolution/util/FastCollection$Record.getPrevious:()Ljavolution/util/FastCollection$Record;
      31: astore        5
      33: aload_1
      34: aload_0
      35: aload         4
      37: invokevirtual #15                 // Method valueOf:(Ljavolution/util/FastCollection$Record;)Ljava/lang/Object;
      40: aload_0
      41: invokevirtual #11                 // Method getValueComparator:()Ljavolution/util/FastComparator;
      44: invokestatic  #25                 // Method contains:(Ljava/util/Collection;Ljava/lang/Object;Ljavolution/util/FastComparator;)Z
      47: ifne          58
      50: aload_0
      51: aload         4
      53: invokevirtual #17                 // Method delete:(Ljavolution/util/FastCollection$Record;)V
      56: iconst_1
      57: istore_2
      58: aload         5
      60: astore        4
      62: goto          18
      65: iload_2
      66: ireturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #19                 // Method size:()I
       5: anewarray     #29                 // class java/lang/Object
       8: invokevirtual #30                 // Method toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      11: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method size:()I
       4: istore_2
       5: aload_1
       6: arraylength
       7: iload_2
       8: if_icmpge     21
      11: new           #9                  // class java/lang/UnsupportedOperationException
      14: dup
      15: ldc           #31                 // String Destination array too small
      17: invokespecial #32                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_1
      22: arraylength
      23: iload_2
      24: if_icmple     31
      27: aload_1
      28: iload_2
      29: aconst_null
      30: aastore
      31: iconst_0
      32: istore_3
      33: aload_1
      34: astore        4
      36: aload_0
      37: invokevirtual #12                 // Method head:()Ljavolution/util/FastCollection$Record;
      40: astore        5
      42: aload_0
      43: invokevirtual #13                 // Method tail:()Ljavolution/util/FastCollection$Record;
      46: astore        6
      48: aload         5
      50: invokeinterface #14,  1           // InterfaceMethod javolution/util/FastCollection$Record.getNext:()Ljavolution/util/FastCollection$Record;
      55: dup
      56: astore        5
      58: aload         6
      60: if_acmpeq     79
      63: aload         4
      65: iload_3
      66: iinc          3, 1
      69: aload_0
      70: aload         5
      72: invokevirtual #15                 // Method valueOf:(Ljavolution/util/FastCollection$Record;)Ljava/lang/Object;
      75: aastore
      76: goto          48
      79: aload_1
      80: areturn

  public javolution.text.Text toText();
    Code:
       0: ldc           #33                 // String {
       2: invokestatic  #34                 // Method javolution/text/Text.valueOf:(Ljava/lang/Object;)Ljavolution/text/Text;
       5: astore_1
       6: aload_0
       7: invokevirtual #12                 // Method head:()Ljavolution/util/FastCollection$Record;
      10: astore_2
      11: aload_0
      12: invokevirtual #13                 // Method tail:()Ljavolution/util/FastCollection$Record;
      15: astore_3
      16: aload_2
      17: invokeinterface #14,  1           // InterfaceMethod javolution/util/FastCollection$Record.getNext:()Ljavolution/util/FastCollection$Record;
      22: dup
      23: astore_2
      24: aload_3
      25: if_acmpeq     58
      28: aload_1
      29: aload_0
      30: aload_2
      31: invokevirtual #15                 // Method valueOf:(Ljavolution/util/FastCollection$Record;)Ljava/lang/Object;
      34: invokevirtual #35                 // Method javolution/text/Text.plus:(Ljava/lang/Object;)Ljavolution/text/Text;
      37: astore_1
      38: aload_2
      39: invokeinterface #14,  1           // InterfaceMethod javolution/util/FastCollection$Record.getNext:()Ljavolution/util/FastCollection$Record;
      44: aload_3
      45: if_acmpeq     16
      48: aload_1
      49: ldc           #36                 // String ,
      51: invokevirtual #37                 // Method javolution/text/Text.plus:(Ljava/lang/String;)Ljavolution/text/Text;
      54: astore_1
      55: goto          16
      58: aload_1
      59: ldc           #38                 // String }
      61: invokevirtual #37                 // Method javolution/text/Text.plus:(Ljava/lang/String;)Ljavolution/text/Text;
      64: areturn

  public final java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method toText:()Ljavolution/text/Text;
       4: invokevirtual #40                 // Method javolution/text/Text.toString:()Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #41                 // class java/util/List
       4: ifeq          27
       7: aload_1
       8: instanceof    #41                 // class java/util/List
      11: ifeq          25
      14: aload_0
      15: aload_1
      16: checkcast     #41                 // class java/util/List
      19: invokespecial #42                 // Method equalsOrder:(Ljava/util/List;)Z
      22: goto          26
      25: iconst_0
      26: ireturn
      27: aload_1
      28: instanceof    #41                 // class java/util/List
      31: ifeq          36
      34: iconst_0
      35: ireturn
      36: aload_1
      37: instanceof    #43                 // class java/util/Collection
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: aload_1
      46: checkcast     #43                 // class java/util/Collection
      49: astore_2
      50: aload_0
      51: aload_2
      52: if_acmpeq     76
      55: aload_0
      56: invokevirtual #19                 // Method size:()I
      59: aload_2
      60: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.size:()I
      65: if_icmpne     80
      68: aload_0
      69: aload_2
      70: invokevirtual #45                 // Method containsAll:(Ljava/util/Collection;)Z
      73: ifeq          80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: ireturn

  private boolean equalsOrder(java.util.List);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: invokevirtual #19                 // Method size:()I
      11: aload_1
      12: invokeinterface #46,  1           // InterfaceMethod java/util/List.size:()I
      17: if_icmpeq     22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      28: astore_2
      29: aload_0
      30: invokevirtual #11                 // Method getValueComparator:()Ljavolution/util/FastComparator;
      33: astore_3
      34: aload_0
      35: invokevirtual #12                 // Method head:()Ljavolution/util/FastCollection$Record;
      38: astore        4
      40: aload_0
      41: invokevirtual #13                 // Method tail:()Ljavolution/util/FastCollection$Record;
      44: astore        5
      46: aload         4
      48: invokeinterface #14,  1           // InterfaceMethod javolution/util/FastCollection$Record.getNext:()Ljavolution/util/FastCollection$Record;
      53: dup
      54: astore        4
      56: aload         5
      58: if_acmpeq     93
      61: aload_0
      62: aload         4
      64: invokevirtual #15                 // Method valueOf:(Ljavolution/util/FastCollection$Record;)Ljava/lang/Object;
      67: astore        6
      69: aload_2
      70: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: astore        7
      77: aload_3
      78: aload         6
      80: aload         7
      82: invokevirtual #16                 // Method javolution/util/FastComparator.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      85: ifne          90
      88: iconst_0
      89: ireturn
      90: goto          46
      93: iconst_1
      94: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: instanceof    #41                 // class java/util/List
       4: ifeq          12
       7: aload_0
       8: invokespecial #48                 // Method hashCodeList:()I
      11: ireturn
      12: aload_0
      13: invokevirtual #11                 // Method getValueComparator:()Ljavolution/util/FastComparator;
      16: astore_1
      17: iconst_0
      18: istore_2
      19: aload_0
      20: invokevirtual #12                 // Method head:()Ljavolution/util/FastCollection$Record;
      23: astore_3
      24: aload_0
      25: invokevirtual #13                 // Method tail:()Ljavolution/util/FastCollection$Record;
      28: astore        4
      30: aload_3
      31: invokeinterface #14,  1           // InterfaceMethod javolution/util/FastCollection$Record.getNext:()Ljavolution/util/FastCollection$Record;
      36: dup
      37: astore_3
      38: aload         4
      40: if_acmpeq     58
      43: iload_2
      44: aload_1
      45: aload_0
      46: aload_3
      47: invokevirtual #15                 // Method valueOf:(Ljavolution/util/FastCollection$Record;)Ljava/lang/Object;
      50: invokevirtual #49                 // Method javolution/util/FastComparator.hashCodeOf:(Ljava/lang/Object;)I
      53: iadd
      54: istore_2
      55: goto          30
      58: iload_2
      59: ireturn

  private int hashCodeList();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getValueComparator:()Ljavolution/util/FastComparator;
       4: astore_1
       5: iconst_1
       6: istore_2
       7: aload_0
       8: invokevirtual #12                 // Method head:()Ljavolution/util/FastCollection$Record;
      11: astore_3
      12: aload_0
      13: invokevirtual #13                 // Method tail:()Ljavolution/util/FastCollection$Record;
      16: astore        4
      18: aload_3
      19: invokeinterface #14,  1           // InterfaceMethod javolution/util/FastCollection$Record.getNext:()Ljavolution/util/FastCollection$Record;
      24: dup
      25: astore_3
      26: aload         4
      28: if_acmpeq     49
      31: bipush        31
      33: iload_2
      34: imul
      35: aload_1
      36: aload_0
      37: aload_3
      38: invokevirtual #15                 // Method valueOf:(Ljavolution/util/FastCollection$Record;)Ljava/lang/Object;
      41: invokevirtual #49                 // Method javolution/util/FastComparator.hashCodeOf:(Ljava/lang/Object;)I
      44: iadd
      45: istore_2
      46: goto          18
      49: iload_2
      50: ireturn

  static java.lang.Object access$100();
    Code:
       0: getstatic     #1                  // Field NULL:Ljava/lang/Object;
       3: areturn

  static {};
    Code:
       0: new           #29                 // class java/lang/Object
       3: dup
       4: invokespecial #2                  // Method java/lang/Object."<init>":()V
       7: putstatic     #1                  // Field NULL:Ljava/lang/Object;
      10: return
}
