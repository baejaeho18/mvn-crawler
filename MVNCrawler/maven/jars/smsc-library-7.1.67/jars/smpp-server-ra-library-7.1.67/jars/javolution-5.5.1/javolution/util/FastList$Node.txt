Compiled from "FastList.java"
public class javolution.util.FastList$Node<E> implements javolution.util.FastCollection$Record, java.io.Serializable {
  private javolution.util.FastList$Node<E> _next;

  private javolution.util.FastList$Node<E> _previous;

  private E _value;

  protected javolution.util.FastList$Node();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: return

  public final E getValue();
    Code:
       0: aload_0
       1: getfield      #1                  // Field _value:Ljava/lang/Object;
       4: areturn

  public final javolution.util.FastList$Node<E> getNext();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _next:Ljavolution/util/FastList$Node;
       4: areturn

  public final javolution.util.FastList$Node<E> getPrevious();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _previous:Ljavolution/util/FastList$Node;
       4: areturn

  public javolution.util.FastCollection$Record getNext();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getNext:()Ljavolution/util/FastList$Node;
       4: areturn

  public javolution.util.FastCollection$Record getPrevious();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getPrevious:()Ljavolution/util/FastList$Node;
       4: areturn

  static javolution.util.FastList$Node access$002(javolution.util.FastList$Node, javolution.util.FastList$Node);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field _next:Ljavolution/util/FastList$Node;
       6: areturn

  static javolution.util.FastList$Node access$102(javolution.util.FastList$Node, javolution.util.FastList$Node);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field _previous:Ljavolution/util/FastList$Node;
       6: areturn

  static java.lang.Object access$200(javolution.util.FastList$Node);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _value:Ljava/lang/Object;
       4: areturn

  static java.lang.Object access$202(javolution.util.FastList$Node, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field _value:Ljava/lang/Object;
       6: areturn

  static javolution.util.FastList$Node access$000(javolution.util.FastList$Node);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _next:Ljavolution/util/FastList$Node;
       4: areturn

  static javolution.util.FastList$Node access$100(javolution.util.FastList$Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _previous:Ljavolution/util/FastList$Node;
       4: areturn
}
