Compiled from "FastSet.java"
public class javolution.util.FastSet<E> extends javolution.util.FastCollection<E> implements java.util.Set<E>, javolution.lang.Reusable {
  private static final javolution.context.ObjectFactory FACTORY;

  private transient javolution.util.FastMap _map;

  private static final long serialVersionUID;

  public javolution.util.FastSet();
    Code:
       0: aload_0
       1: new           #1                  // class javolution/util/FastMap
       4: dup
       5: invokespecial #2                  // Method javolution/util/FastMap."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Ljavolution/util/FastMap;)V
      11: return

  public javolution.util.FastSet(java.lang.String);
    Code:
       0: aload_0
       1: new           #1                  // class javolution/util/FastMap
       4: dup
       5: aload_1
       6: invokespecial #4                  // Method javolution/util/FastMap."<init>":(Ljava/lang/String;)V
       9: invokespecial #3                  // Method "<init>":(Ljavolution/util/FastMap;)V
      12: return

  public javolution.util.FastSet(int);
    Code:
       0: aload_0
       1: new           #1                  // class javolution/util/FastMap
       4: dup
       5: iload_1
       6: invokespecial #5                  // Method javolution/util/FastMap."<init>":(I)V
       9: invokespecial #3                  // Method "<init>":(Ljavolution/util/FastMap;)V
      12: return

  public javolution.util.FastSet(java.util.Set<? extends E>);
    Code:
       0: aload_0
       1: new           #1                  // class javolution/util/FastMap
       4: dup
       5: aload_1
       6: invokeinterface #6,  1            // InterfaceMethod java/util/Set.size:()I
      11: invokespecial #5                  // Method javolution/util/FastMap."<init>":(I)V
      14: invokespecial #3                  // Method "<init>":(Ljavolution/util/FastMap;)V
      17: aload_0
      18: aload_1
      19: invokevirtual #7                  // Method addAll:(Ljava/util/Collection;)Z
      22: pop
      23: return

  private javolution.util.FastSet(javolution.util.FastMap);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method javolution/util/FastCollection."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #9                  // Field _map:Ljavolution/util/FastMap;
       9: return

  public static <E> javolution.util.FastSet<E> newInstance();
    Code:
       0: getstatic     #10                 // Field FACTORY:Ljavolution/context/ObjectFactory;
       3: invokevirtual #11                 // Method javolution/context/ObjectFactory.object:()Ljava/lang/Object;
       6: checkcast     #12                 // class javolution/util/FastSet
       9: areturn

  public static void recycle(javolution.util.FastSet);
    Code:
       0: getstatic     #10                 // Field FACTORY:Ljavolution/context/ObjectFactory;
       3: aload_0
       4: invokevirtual #13                 // Method javolution/context/ObjectFactory.recycle:(Ljava/lang/Object;)V
       7: return

  public final int size();
    Code:
       0: aload_0
       1: getfield      #9                  // Field _map:Ljavolution/util/FastMap;
       4: invokevirtual #14                 // Method javolution/util/FastMap.size:()I
       7: ireturn

  public final boolean add(E);
    Code:
       0: aload_0
       1: getfield      #9                  // Field _map:Ljavolution/util/FastMap;
       4: aload_1
       5: aload_1
       6: invokevirtual #15                 // Method javolution/util/FastMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: ifnonnull     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.util.Iterator<E> iterator();
    Code:
       0: aload_0
       1: getfield      #9                  // Field _map:Ljavolution/util/FastMap;
       4: invokevirtual #16                 // Method javolution/util/FastMap.keySet:()Ljava/util/Set;
       7: invokeinterface #17,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      12: areturn

  public java.util.Set<E> unmodifiable();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method javolution/util/FastCollection.unmodifiable:()Ljava/util/Collection;
       4: checkcast     #19                 // class java/util/Set
       7: areturn

  public final void clear();
    Code:
       0: aload_0
       1: getfield      #9                  // Field _map:Ljavolution/util/FastMap;
       4: invokevirtual #20                 // Method javolution/util/FastMap.clear:()V
       7: return

  public final boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #9                  // Field _map:Ljavolution/util/FastMap;
       4: aload_1
       5: invokevirtual #21                 // Method javolution/util/FastMap.containsKey:(Ljava/lang/Object;)Z
       8: ireturn

  public final boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #9                  // Field _map:Ljavolution/util/FastMap;
       4: aload_1
       5: invokevirtual #22                 // Method javolution/util/FastMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public javolution.util.FastSet<E> setValueComparator(javolution.util.FastComparator<? super E>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field _map:Ljavolution/util/FastMap;
       4: aload_1
       5: invokevirtual #23                 // Method javolution/util/FastMap.setKeyComparator:(Ljavolution/util/FastComparator;)Ljavolution/util/FastMap;
       8: pop
       9: aload_0
      10: areturn

  public javolution.util.FastComparator<? super E> getValueComparator();
    Code:
       0: aload_0
       1: getfield      #9                  // Field _map:Ljavolution/util/FastMap;
       4: invokevirtual #24                 // Method javolution/util/FastMap.getKeyComparator:()Ljavolution/util/FastComparator;
       7: areturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #9                  // Field _map:Ljavolution/util/FastMap;
       4: invokevirtual #25                 // Method javolution/util/FastMap.reset:()V
       7: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
       4: checkcast     #27                 // class javolution/util/FastComparator
       7: astore_2
       8: aload_1
       9: invokevirtual #28                 // Method java/io/ObjectInputStream.readInt:()I
      12: istore_3
      13: aload_0
      14: new           #1                  // class javolution/util/FastMap
      17: dup
      18: iload_3
      19: invokespecial #5                  // Method javolution/util/FastMap."<init>":(I)V
      22: putfield      #9                  // Field _map:Ljavolution/util/FastMap;
      25: aload_0
      26: aload_2
      27: invokevirtual #29                 // Method setValueComparator:(Ljavolution/util/FastComparator;)Ljavolution/util/FastSet;
      30: pop
      31: iload_3
      32: istore        4
      34: iload         4
      36: iinc          4, -1
      39: ifeq          63
      42: aload_1
      43: invokevirtual #26                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      46: astore        5
      48: aload_0
      49: getfield      #9                  // Field _map:Ljavolution/util/FastMap;
      52: aload         5
      54: aload         5
      56: invokevirtual #15                 // Method javolution/util/FastMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: goto          34
      63: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #30                 // Method getValueComparator:()Ljavolution/util/FastComparator;
       5: invokevirtual #31                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
       8: aload_1
       9: aload_0
      10: invokevirtual #32                 // Method size:()I
      13: invokevirtual #33                 // Method java/io/ObjectOutputStream.writeInt:(I)V
      16: aload_0
      17: getfield      #9                  // Field _map:Ljavolution/util/FastMap;
      20: invokevirtual #34                 // Method javolution/util/FastMap.head:()Ljavolution/util/FastMap$Entry;
      23: astore_2
      24: aload_0
      25: getfield      #9                  // Field _map:Ljavolution/util/FastMap;
      28: invokevirtual #35                 // Method javolution/util/FastMap.tail:()Ljavolution/util/FastMap$Entry;
      31: astore_3
      32: aload_2
      33: invokevirtual #36                 // Method javolution/util/FastMap$Entry.getNext:()Ljavolution/util/FastMap$Entry;
      36: dup
      37: astore_2
      38: aload_3
      39: if_acmpeq     53
      42: aload_1
      43: aload_2
      44: invokevirtual #37                 // Method javolution/util/FastMap$Entry.getKey:()Ljava/lang/Object;
      47: invokevirtual #31                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      50: goto          32
      53: return

  public final javolution.util.FastCollection$Record head();
    Code:
       0: aload_0
       1: getfield      #9                  // Field _map:Ljavolution/util/FastMap;
       4: invokevirtual #34                 // Method javolution/util/FastMap.head:()Ljavolution/util/FastMap$Entry;
       7: areturn

  public final javolution.util.FastCollection$Record tail();
    Code:
       0: aload_0
       1: getfield      #9                  // Field _map:Ljavolution/util/FastMap;
       4: invokevirtual #35                 // Method javolution/util/FastMap.tail:()Ljavolution/util/FastMap$Entry;
       7: areturn

  public final E valueOf(javolution.util.FastCollection$Record);
    Code:
       0: aload_1
       1: checkcast     #38                 // class javolution/util/FastMap$Entry
       4: invokevirtual #37                 // Method javolution/util/FastMap$Entry.getKey:()Ljava/lang/Object;
       7: areturn

  public final void delete(javolution.util.FastCollection$Record);
    Code:
       0: aload_0
       1: getfield      #9                  // Field _map:Ljavolution/util/FastMap;
       4: aload_1
       5: checkcast     #38                 // class javolution/util/FastMap$Entry
       8: invokevirtual #37                 // Method javolution/util/FastMap$Entry.getKey:()Ljava/lang/Object;
      11: invokevirtual #22                 // Method javolution/util/FastMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  public java.util.Collection unmodifiable();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method unmodifiable:()Ljava/util/Set;
       4: areturn

  static {};
    Code:
       0: new           #40                 // class javolution/util/FastSet$1
       3: dup
       4: invokespecial #41                 // Method javolution/util/FastSet$1."<init>":()V
       7: putstatic     #10                 // Field FACTORY:Ljavolution/context/ObjectFactory;
      10: return
}
