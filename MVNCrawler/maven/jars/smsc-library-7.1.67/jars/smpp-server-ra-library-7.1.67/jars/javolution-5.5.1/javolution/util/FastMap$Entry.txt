Compiled from "FastMap.java"
public class javolution.util.FastMap$Entry<K, V> implements java.util.Map$Entry<K, V>, javolution.util.FastCollection$Record, javolution.lang.Realtime {
  public static final javolution.util.FastMap$Entry NULL;

  private javolution.util.FastMap$Entry<K, V> _next;

  private javolution.util.FastMap$Entry<K, V> _previous;

  private K _key;

  private V _value;

  private int _keyHash;

  protected javolution.util.FastMap$Entry();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: return

  public final javolution.util.FastMap$Entry<K, V> getNext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _next:Ljavolution/util/FastMap$Entry;
       4: areturn

  public final javolution.util.FastMap$Entry<K, V> getPrevious();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _previous:Ljavolution/util/FastMap$Entry;
       4: areturn

  public final K getKey();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _key:Ljava/lang/Object;
       4: areturn

  public final V getValue();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _value:Ljava/lang/Object;
       4: areturn

  public final V setValue(V);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _value:Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: aload_1
       7: putfield      #3                  // Field _value:Ljava/lang/Object;
      10: aload_2
      11: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #7                  // class java/util/Map$Entry
       4: ifeq          56
       7: aload_1
       8: checkcast     #7                  // class java/util/Map$Entry
      11: astore_2
      12: getstatic     #8                  // Field javolution/util/FastComparator.DEFAULT:Ljavolution/util/FastComparator;
      15: aload_0
      16: getfield      #2                  // Field _key:Ljava/lang/Object;
      19: aload_2
      20: invokeinterface #9,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      25: invokevirtual #10                 // Method javolution/util/FastComparator.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      28: ifeq          54
      31: getstatic     #8                  // Field javolution/util/FastComparator.DEFAULT:Ljavolution/util/FastComparator;
      34: aload_0
      35: getfield      #3                  // Field _value:Ljava/lang/Object;
      38: aload_2
      39: invokeinterface #11,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      44: invokevirtual #10                 // Method javolution/util/FastComparator.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      47: ifeq          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: ireturn
      56: iconst_0
      57: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _key:Ljava/lang/Object;
       4: ifnull        17
       7: aload_0
       8: getfield      #2                  // Field _key:Ljava/lang/Object;
      11: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
      14: goto          18
      17: iconst_0
      18: aload_0
      19: getfield      #3                  // Field _value:Ljava/lang/Object;
      22: ifnull        35
      25: aload_0
      26: getfield      #3                  // Field _value:Ljava/lang/Object;
      29: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
      32: goto          36
      35: iconst_0
      36: ixor
      37: ireturn

  public javolution.text.Text toText();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _key:Ljava/lang/Object;
       4: invokestatic  #13                 // Method javolution/text/Text.valueOf:(Ljava/lang/Object;)Ljavolution/text/Text;
       7: ldc           #14                 // String =
       9: invokevirtual #15                 // Method javolution/text/Text.plus:(Ljava/lang/String;)Ljavolution/text/Text;
      12: aload_0
      13: getfield      #3                  // Field _value:Ljava/lang/Object;
      16: invokevirtual #16                 // Method javolution/text/Text.plus:(Ljava/lang/Object;)Ljavolution/text/Text;
      19: areturn

  public javolution.util.FastCollection$Record getNext();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getNext:()Ljavolution/util/FastMap$Entry;
       4: areturn

  public javolution.util.FastCollection$Record getPrevious();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getPrevious:()Ljavolution/util/FastMap$Entry;
       4: areturn

  static javolution.util.FastMap$Entry access$002(javolution.util.FastMap$Entry, javolution.util.FastMap$Entry);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field _next:Ljavolution/util/FastMap$Entry;
       6: areturn

  static javolution.util.FastMap$Entry access$102(javolution.util.FastMap$Entry, javolution.util.FastMap$Entry);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field _previous:Ljavolution/util/FastMap$Entry;
       6: areturn

  static javolution.util.FastMap$Entry access$000(javolution.util.FastMap$Entry);
    Code:
       0: aload_0
       1: getfield      #5                  // Field _next:Ljavolution/util/FastMap$Entry;
       4: areturn

  static java.lang.Object access$200(javolution.util.FastMap$Entry);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _value:Ljava/lang/Object;
       4: areturn

  static java.lang.Object access$300(javolution.util.FastMap$Entry);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _key:Ljava/lang/Object;
       4: areturn

  static int access$400(javolution.util.FastMap$Entry);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _keyHash:I
       4: ireturn

  static java.lang.Object access$202(javolution.util.FastMap$Entry, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field _value:Ljava/lang/Object;
       6: areturn

  static java.lang.Object access$302(javolution.util.FastMap$Entry, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field _key:Ljava/lang/Object;
       6: areturn

  static int access$402(javolution.util.FastMap$Entry, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field _keyHash:I
       6: ireturn

  static javolution.util.FastMap$Entry access$100(javolution.util.FastMap$Entry);
    Code:
       0: aload_0
       1: getfield      #4                  // Field _previous:Ljavolution/util/FastMap$Entry;
       4: areturn

  static {};
    Code:
       0: new           #19                 // class javolution/util/FastMap$Entry
       3: dup
       4: invokespecial #20                 // Method "<init>":()V
       7: putstatic     #21                 // Field NULL:Ljavolution/util/FastMap$Entry;
      10: return
}
