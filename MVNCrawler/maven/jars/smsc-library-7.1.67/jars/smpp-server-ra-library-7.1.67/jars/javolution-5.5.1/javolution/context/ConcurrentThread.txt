Compiled from "ConcurrentThread.java"
class javolution.context.ConcurrentThread extends javax.realtime.RealtimeThread {
  private volatile java.lang.Runnable _logic;

  private javax.realtime.MemoryArea _memoryArea;

  private int _priority;

  private javolution.context.ConcurrentContext$Default _context;

  private boolean _terminate;

  private java.lang.String _name;

  private java.lang.Thread _parent;

  private static int _Count;

  private static final javolution.lang.Reflection$Method SET_NAME;

  private static final javolution.lang.Reflection$Method SET_DAEMON;

  public javolution.context.ConcurrentThread();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/realtime/RealtimeThread."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      12: ldc           #4                  // String ConcurrentThread-
      14: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_0
      18: invokespecial #6                  // Method getCount:()I
      21: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: putfield      #9                  // Field _name:Ljava/lang/String;
      30: getstatic     #10                 // Field SET_NAME:Ljavolution/lang/Reflection$Method;
      33: ifnull        50
      36: getstatic     #10                 // Field SET_NAME:Ljavolution/lang/Reflection$Method;
      39: aload_0
      40: aload_0
      41: getfield      #9                  // Field _name:Ljava/lang/String;
      44: invokeinterface #11,  3           // InterfaceMethod javolution/lang/Reflection$Method.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: getstatic     #12                 // Field SET_DAEMON:Ljavolution/lang/Reflection$Method;
      53: ifnull        69
      56: getstatic     #12                 // Field SET_DAEMON:Ljavolution/lang/Reflection$Method;
      59: aload_0
      60: getstatic     #13                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      63: invokeinterface #11,  3           // InterfaceMethod javolution/lang/Reflection$Method.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: return

  private synchronized int getCount();
    Code:
       0: getstatic     #14                 // Field _Count:I
       3: dup
       4: iconst_1
       5: iadd
       6: putstatic     #14                 // Field _Count:I
       9: ireturn

  public void run();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #15                 // Field _logic:Ljava/lang/Runnable;
       8: ifnonnull     25
      11: aload_0
      12: getfield      #16                 // Field _terminate:Z
      15: ifne          25
      18: aload_0
      19: invokevirtual #17                 // Method java/lang/Object.wait:()V
      22: goto          4
      25: goto          38
      28: astore_2
      29: new           #19                 // class javolution/context/ConcurrentException
      32: dup
      33: aload_2
      34: invokespecial #20                 // Method javolution/context/ConcurrentException."<init>":(Ljava/lang/Throwable;)V
      37: athrow
      38: aload_1
      39: monitorexit
      40: goto          48
      43: astore_3
      44: aload_1
      45: monitorexit
      46: aload_3
      47: athrow
      48: aload_0
      49: getfield      #16                 // Field _terminate:Z
      52: ifeq          58
      55: goto          188
      58: invokestatic  #21                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      61: astore_1
      62: aload_1
      63: invokevirtual #22                 // Method java/lang/Thread.getPriority:()I
      66: aload_0
      67: getfield      #23                 // Field _priority:I
      70: if_icmpeq     81
      73: aload_1
      74: aload_0
      75: getfield      #23                 // Field _priority:I
      78: invokevirtual #24                 // Method java/lang/Thread.setPriority:(I)V
      81: aload_0
      82: getfield      #25                 // Field _context:Ljavolution/context/ConcurrentContext$Default;
      85: invokevirtual #26                 // Method javolution/context/ConcurrentContext$Default.started:()V
      88: aload_0
      89: getfield      #27                 // Field _memoryArea:Ljavax/realtime/MemoryArea;
      92: aload_0
      93: getfield      #15                 // Field _logic:Ljava/lang/Runnable;
      96: invokevirtual #28                 // Method javax/realtime/MemoryArea.executeInArea:(Ljava/lang/Runnable;)V
      99: aload_0
     100: getfield      #25                 // Field _context:Ljavolution/context/ConcurrentContext$Default;
     103: invokevirtual #29                 // Method javolution/context/ConcurrentContext$Default.completed:()V
     106: aload_0
     107: aconst_null
     108: putfield      #30                 // Field _parent:Ljava/lang/Thread;
     111: aload_0
     112: aconst_null
     113: putfield      #25                 // Field _context:Ljavolution/context/ConcurrentContext$Default;
     116: aload_0
     117: aconst_null
     118: putfield      #15                 // Field _logic:Ljava/lang/Runnable;
     121: goto          185
     124: astore_1
     125: aload_0
     126: getfield      #25                 // Field _context:Ljavolution/context/ConcurrentContext$Default;
     129: aload_1
     130: invokevirtual #32                 // Method javolution/context/ConcurrentContext$Default.error:(Ljava/lang/Throwable;)V
     133: aload_0
     134: getfield      #25                 // Field _context:Ljavolution/context/ConcurrentContext$Default;
     137: invokevirtual #29                 // Method javolution/context/ConcurrentContext$Default.completed:()V
     140: aload_0
     141: aconst_null
     142: putfield      #30                 // Field _parent:Ljava/lang/Thread;
     145: aload_0
     146: aconst_null
     147: putfield      #25                 // Field _context:Ljavolution/context/ConcurrentContext$Default;
     150: aload_0
     151: aconst_null
     152: putfield      #15                 // Field _logic:Ljava/lang/Runnable;
     155: goto          185
     158: astore        4
     160: aload_0
     161: getfield      #25                 // Field _context:Ljavolution/context/ConcurrentContext$Default;
     164: invokevirtual #29                 // Method javolution/context/ConcurrentContext$Default.completed:()V
     167: aload_0
     168: aconst_null
     169: putfield      #30                 // Field _parent:Ljava/lang/Thread;
     172: aload_0
     173: aconst_null
     174: putfield      #25                 // Field _context:Ljavolution/context/ConcurrentContext$Default;
     177: aload_0
     178: aconst_null
     179: putfield      #15                 // Field _logic:Ljava/lang/Runnable;
     182: aload         4
     184: athrow
     185: goto          0
     188: return
    Exception table:
       from    to  target type
           4    25    28   Class java/lang/InterruptedException
           4    40    43   any
          43    46    43   any
          58    99   124   Class java/lang/Throwable
          58    99   158   any
         124   133   158   any
         158   160   158   any

  public boolean execute(java.lang.Runnable, javolution.context.ConcurrentContext$Default);
    Code:
       0: aload_0
       1: getfield      #15                 // Field _logic:Ljava/lang/Runnable;
       4: ifnull        9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: dup
      11: astore_3
      12: monitorenter
      13: aload_0
      14: getfield      #15                 // Field _logic:Ljava/lang/Runnable;
      17: ifnull        24
      20: iconst_0
      21: aload_3
      22: monitorexit
      23: ireturn
      24: aload_0
      25: invokestatic  #33                 // Method javax/realtime/RealtimeThread.getCurrentMemoryArea:()Ljavax/realtime/MemoryArea;
      28: putfield      #27                 // Field _memoryArea:Ljavax/realtime/MemoryArea;
      31: aload_0
      32: invokestatic  #21                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      35: putfield      #30                 // Field _parent:Ljava/lang/Thread;
      38: aload_0
      39: aload_0
      40: getfield      #30                 // Field _parent:Ljava/lang/Thread;
      43: invokevirtual #22                 // Method java/lang/Thread.getPriority:()I
      46: putfield      #23                 // Field _priority:I
      49: aload_0
      50: aload_2
      51: putfield      #25                 // Field _context:Ljavolution/context/ConcurrentContext$Default;
      54: aload_0
      55: aload_1
      56: putfield      #15                 // Field _logic:Ljava/lang/Runnable;
      59: aload_0
      60: invokevirtual #34                 // Method java/lang/Object.notify:()V
      63: iconst_1
      64: aload_3
      65: monitorexit
      66: ireturn
      67: astore        4
      69: aload_3
      70: monitorexit
      71: aload         4
      73: athrow
    Exception table:
       from    to  target type
          13    23    67   any
          24    66    67   any
          67    71    67   any

  public void terminate();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: iconst_1
       6: putfield      #16                 // Field _terminate:Z
       9: aload_0
      10: invokevirtual #34                 // Method java/lang/Object.notify:()V
      13: aload_1
      14: monitorexit
      15: goto          23
      18: astore_2
      19: aload_1
      20: monitorexit
      21: aload_2
      22: athrow
      23: return
    Exception table:
       from    to  target type
           4    15    18   any
          18    21    18   any

  public java.lang.String toString();
    Code:
       0: new           #2                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #9                  // Field _name:Ljava/lang/String;
      11: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #35                 // String  from
      16: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokevirtual #36                 // Method getSource:()Ljava/lang/Thread;
      23: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public java.lang.Thread getSource();
    Code:
       0: aload_0
       1: getfield      #30                 // Field _parent:Ljava/lang/Thread;
       4: instanceof    #38                 // class javolution/context/ConcurrentThread
       7: ifeq          23
      10: aload_0
      11: getfield      #30                 // Field _parent:Ljava/lang/Thread;
      14: checkcast     #38                 // class javolution/context/ConcurrentThread
      17: invokevirtual #36                 // Method getSource:()Ljava/lang/Thread;
      20: goto          27
      23: aload_0
      24: getfield      #30                 // Field _parent:Ljava/lang/Thread;
      27: areturn

  static {};
    Code:
       0: invokestatic  #39                 // Method javolution/lang/Reflection.getInstance:()Ljavolution/lang/Reflection;
       3: ldc           #40                 // String java.lang.Thread.setName(String)
       5: invokevirtual #41                 // Method javolution/lang/Reflection.getMethod:(Ljava/lang/String;)Ljavolution/lang/Reflection$Method;
       8: putstatic     #10                 // Field SET_NAME:Ljavolution/lang/Reflection$Method;
      11: invokestatic  #39                 // Method javolution/lang/Reflection.getInstance:()Ljavolution/lang/Reflection;
      14: ldc           #42                 // String java.lang.Thread.setDaemon(boolean)
      16: invokevirtual #41                 // Method javolution/lang/Reflection.getMethod:(Ljava/lang/String;)Ljavolution/lang/Reflection$Method;
      19: putstatic     #12                 // Field SET_DAEMON:Ljavolution/lang/Reflection$Method;
      22: return
}
