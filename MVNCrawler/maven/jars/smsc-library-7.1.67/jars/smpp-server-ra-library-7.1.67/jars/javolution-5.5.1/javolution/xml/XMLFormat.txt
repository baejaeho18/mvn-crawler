Compiled from "XMLFormat.java"
public abstract class javolution.xml.XMLFormat<T> {
  private static final java.lang.String NULL;

  private final java.lang.Class<T> _class;

  protected javolution.xml.XMLFormat(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field _class:Ljava/lang/Class;
       9: aload_1
      10: ifnonnull     14
      13: return
      14: invokestatic  #4                  // Method javolution/lang/Reflection.getInstance:()Ljavolution/lang/Reflection;
      17: aload_0
      18: aload_1
      19: ldc_w         #5                  // class javolution/xml/XMLFormat
      22: invokevirtual #6                  // Method javolution/lang/Reflection.setField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;)V
      25: return

  public static <T> javolution.xml.XMLFormat<T> getInstance(java.lang.Class<? extends T>);
    Code:
       0: getstatic     #7                  // Field javolution/xml/XMLBinding.OBJECT_XML:Ljavolution/xml/XMLFormat;
       3: astore_1
       4: invokestatic  #4                  // Method javolution/lang/Reflection.getInstance:()Ljavolution/lang/Reflection;
       7: aload_0
       8: ldc_w         #5                  // class javolution/xml/XMLFormat
      11: iconst_1
      12: invokevirtual #8                  // Method javolution/lang/Reflection.getField:(Ljava/lang/Class;Ljava/lang/Class;Z)Ljava/lang/Object;
      15: checkcast     #5                  // class javolution/xml/XMLFormat
      18: astore_2
      19: aload_2
      20: ifnull        27
      23: aload_2
      24: goto          28
      27: aload_1
      28: areturn

  public final java.lang.Class<T> getBoundClass();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _class:Ljava/lang/Class;
       4: areturn

  public boolean isReferenceable();
    Code:
       0: iconst_1
       1: ireturn

  public T newInstance(java.lang.Class<T>, javolution.xml.XMLFormat$InputElement) throws javolution.xml.stream.XMLStreamException;
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method java/lang/Class.newInstance:()Ljava/lang/Object;
       4: areturn
       5: astore_3
       6: new           #11                 // class javolution/xml/stream/XMLStreamException
       9: dup
      10: aload_3
      11: invokespecial #12                 // Method javolution/xml/stream/XMLStreamException."<init>":(Ljava/lang/Throwable;)V
      14: athrow
      15: astore_3
      16: new           #11                 // class javolution/xml/stream/XMLStreamException
      19: dup
      20: aload_3
      21: invokespecial #12                 // Method javolution/xml/stream/XMLStreamException."<init>":(Ljava/lang/Throwable;)V
      24: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/InstantiationException
           0     4    15   Class java/lang/IllegalAccessException

  public abstract void write(T, javolution.xml.XMLFormat$OutputElement) throws javolution.xml.stream.XMLStreamException;

  public abstract void read(javolution.xml.XMLFormat$InputElement, T) throws javolution.xml.stream.XMLStreamException;

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getBoundClass:()Ljava/lang/Class;
       4: astore_1
       5: aload_1
       6: ifnull        34
       9: new           #15                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #17                 // String Default XMLFormat for
      18: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_1
      22: invokevirtual #19                 // Method java/lang/Class.getName:()Ljava/lang/String;
      25: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: goto          61
      34: new           #15                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #21                 // String Dynamic XMLtFormat (
      43: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: invokevirtual #22                 // Method java/lang/Object.hashCode:()I
      50: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: ldc           #24                 // String )
      55: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn

  private static java.lang.CharSequence toCsq(java.lang.Object);
    Code:
       0: aload_0
       1: checkcast     #25                 // class java/lang/CharSequence
       4: areturn

  static java.lang.CharSequence access$000(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method toCsq:(Ljava/lang/Object;)Ljava/lang/CharSequence;
       4: areturn
}
