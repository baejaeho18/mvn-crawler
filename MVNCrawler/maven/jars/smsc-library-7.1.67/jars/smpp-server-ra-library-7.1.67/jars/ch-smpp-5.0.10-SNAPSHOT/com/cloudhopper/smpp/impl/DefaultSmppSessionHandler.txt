Compiled from "DefaultSmppSessionHandler.java"
public class com.cloudhopper.smpp.impl.DefaultSmppSessionHandler implements com.cloudhopper.smpp.SmppSessionListener {
  private final org.slf4j.Logger logger;

  public com.cloudhopper.smpp.impl.DefaultSmppSessionHandler();
    Code:
       0: aload_0
       1: ldc_w         #1                  // class com/cloudhopper/smpp/impl/DefaultSmppSessionHandler
       4: invokestatic  #2                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       7: invokespecial #3                  // Method "<init>":(Lorg/slf4j/Logger;)V
      10: return

  public com.cloudhopper.smpp.impl.DefaultSmppSessionHandler(org.slf4j.Logger);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field logger:Lorg/slf4j/Logger;
       9: return

  public java.lang.String lookupResultMessage(int);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String lookupTlvTagName(short);
    Code:
       0: aconst_null
       1: areturn

  public void fireChannelUnexpectedlyClosed();
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lorg/slf4j/Logger;
       4: ldc           #6                  // String Default handling is to discard an unexpected channel closed
       6: invokeinterface #7,  2            // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      11: return

  public com.cloudhopper.smpp.pdu.PduResponse firePduRequestReceived(com.cloudhopper.smpp.pdu.PduRequest);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lorg/slf4j/Logger;
       4: ldc           #8                  // String Default handling is to discard unexpected request PDU: {}
       6: aload_1
       7: invokeinterface #9,  3            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      12: aconst_null
      13: areturn

  public void fireExpectedPduResponseReceived(com.cloudhopper.smpp.PduAsyncResponse);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lorg/slf4j/Logger;
       4: ldc           #10                 // String Default handling is to discard expected response PDU: {}
       6: aload_1
       7: invokeinterface #9,  3            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  public void fireUnexpectedPduResponseReceived(com.cloudhopper.smpp.pdu.PduResponse);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lorg/slf4j/Logger;
       4: ldc           #11                 // String Default handling is to discard unexpected response PDU: {}
       6: aload_1
       7: invokeinterface #9,  3            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  public void fireUnrecoverablePduException(com.cloudhopper.smpp.type.UnrecoverablePduException);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lorg/slf4j/Logger;
       4: ldc           #12                 // String Default handling is to discard a unrecoverable exception:
       6: aload_1
       7: invokeinterface #13,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      12: return

  public void fireRecoverablePduException(com.cloudhopper.smpp.type.RecoverablePduException);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lorg/slf4j/Logger;
       4: ldc           #14                 // String Default handling is to discard a recoverable exception:
       6: aload_1
       7: invokeinterface #13,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      12: return

  public void fireUnknownThrowable(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #15                 // class java/nio/channels/ClosedChannelException
       4: ifeq          25
       7: aload_0
       8: getfield      #5                  // Field logger:Lorg/slf4j/Logger;
      11: ldc           #16                 // String Unknown throwable received, but it was a ClosedChannelException, calling fireChannelUnexpectedlyClosed instead
      13: invokeinterface #17,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      18: aload_0
      19: invokevirtual #18                 // Method fireChannelUnexpectedlyClosed:()V
      22: goto          37
      25: aload_0
      26: getfield      #5                  // Field logger:Lorg/slf4j/Logger;
      29: ldc           #19                 // String Default handling is to discard an unknown throwable:
      31: aload_1
      32: invokeinterface #13,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      37: return

  public void firePduRequestExpired(com.cloudhopper.smpp.pdu.PduRequest);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lorg/slf4j/Logger;
       4: ldc           #20                 // String Default handling is to discard expired request PDU: {}
       6: aload_1
       7: invokeinterface #9,  3            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  public boolean firePduReceived(com.cloudhopper.smpp.pdu.Pdu);
    Code:
       0: iconst_1
       1: ireturn

  public boolean firePduDispatch(com.cloudhopper.smpp.pdu.Pdu);
    Code:
       0: iconst_1
       1: ireturn
}
