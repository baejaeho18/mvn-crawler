Compiled from "SmppServerConfiguration.java"
public class com.cloudhopper.smpp.SmppServerConfiguration extends com.cloudhopper.smpp.type.SmppConnectionConfiguration {
  private java.lang.String name;

  private boolean useSsl;

  private com.cloudhopper.smpp.ssl.SslConfiguration sslConfiguration;

  private long bindTimeout;

  private java.lang.String systemId;

  private boolean autoNegotiateInterfaceVersion;

  private byte interfaceVersion;

  private int maxConnectionSize;

  private boolean nonBlockingSocketsEnabled;

  private boolean reuseAddress;

  private boolean jmxEnabled;

  private java.lang.String jmxDomain;

  private int defaultWindowSize;

  private long defaultWindowWaitTimeout;

  private long defaultRequestExpiryTimeout;

  private long defaultWindowMonitorInterval;

  private boolean defaultSessionCountersEnabled;

  public com.cloudhopper.smpp.SmppServerConfiguration();
    Code:
       0: aload_0
       1: ldc           #1                  // String 0.0.0.0
       3: sipush        2775
       6: ldc2_w        #2                  // long 5000l
       9: invokespecial #4                  // Method com/cloudhopper/smpp/type/SmppConnectionConfiguration."<init>":(Ljava/lang/String;IJ)V
      12: aload_0
      13: iconst_0
      14: putfield      #5                  // Field useSsl:Z
      17: aload_0
      18: iconst_1
      19: putfield      #6                  // Field defaultWindowSize:I
      22: aload_0
      23: ldc2_w        #7                  // long 60000l
      26: putfield      #9                  // Field defaultWindowWaitTimeout:J
      29: aload_0
      30: ldc2_w        #10                 // long -1l
      33: putfield      #12                 // Field defaultRequestExpiryTimeout:J
      36: aload_0
      37: ldc2_w        #10                 // long -1l
      40: putfield      #13                 // Field defaultWindowMonitorInterval:J
      43: aload_0
      44: iconst_0
      45: putfield      #14                 // Field defaultSessionCountersEnabled:Z
      48: aload_0
      49: ldc           #15                 // String SmppServer
      51: putfield      #16                 // Field name:Ljava/lang/String;
      54: aload_0
      55: ldc2_w        #2                  // long 5000l
      58: putfield      #17                 // Field bindTimeout:J
      61: aload_0
      62: ldc           #18                 // String cloudhopper
      64: putfield      #19                 // Field systemId:Ljava/lang/String;
      67: aload_0
      68: iconst_1
      69: putfield      #20                 // Field autoNegotiateInterfaceVersion:Z
      72: aload_0
      73: bipush        52
      75: putfield      #21                 // Field interfaceVersion:B
      78: aload_0
      79: bipush        100
      81: putfield      #22                 // Field maxConnectionSize:I
      84: aload_0
      85: iconst_1
      86: putfield      #23                 // Field nonBlockingSocketsEnabled:Z
      89: aload_0
      90: iconst_1
      91: putfield      #24                 // Field reuseAddress:Z
      94: aload_0
      95: iconst_0
      96: putfield      #25                 // Field jmxEnabled:Z
      99: aload_0
     100: ldc           #26                 // String com.cloudhopper.smpp
     102: putfield      #27                 // Field jmxDomain:Ljava/lang/String;
     105: aload_0
     106: iconst_1
     107: putfield      #6                  // Field defaultWindowSize:I
     110: aload_0
     111: ldc2_w        #7                  // long 60000l
     114: putfield      #9                  // Field defaultWindowWaitTimeout:J
     117: aload_0
     118: ldc2_w        #10                 // long -1l
     121: putfield      #12                 // Field defaultRequestExpiryTimeout:J
     124: aload_0
     125: ldc2_w        #10                 // long -1l
     128: putfield      #13                 // Field defaultWindowMonitorInterval:J
     131: return

  public java.lang.String getJmxDomain();
    Code:
       0: aload_0
       1: getfield      #27                 // Field jmxDomain:Ljava/lang/String;
       4: areturn

  public void setJmxDomain(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field jmxDomain:Ljava/lang/String;
       5: return

  public boolean isJmxEnabled();
    Code:
       0: aload_0
       1: getfield      #25                 // Field jmxEnabled:Z
       4: ireturn

  public void setJmxEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #25                 // Field jmxEnabled:Z
       5: return

  public boolean isReuseAddress();
    Code:
       0: aload_0
       1: getfield      #24                 // Field reuseAddress:Z
       4: ireturn

  public void setReuseAddress(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #24                 // Field reuseAddress:Z
       5: return

  public boolean isNonBlockingSocketsEnabled();
    Code:
       0: aload_0
       1: getfield      #23                 // Field nonBlockingSocketsEnabled:Z
       4: ireturn

  public void setNonBlockingSocketsEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field nonBlockingSocketsEnabled:Z
       5: return

  public int getMaxConnectionSize();
    Code:
       0: aload_0
       1: getfield      #22                 // Field maxConnectionSize:I
       4: ireturn

  public void setMaxConnectionSize(int);
    Code:
       0: aload_0
       1: getfield      #22                 // Field maxConnectionSize:I
       4: iconst_1
       5: if_icmpge     18
       8: new           #28                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #29                 // String Max connection size must be >= 1
      14: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iload_1
      20: putfield      #22                 // Field maxConnectionSize:I
      23: return

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field name:Ljava/lang/String;
       5: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #16                 // Field name:Ljava/lang/String;
       4: areturn

  public void setUseSsl(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field useSsl:Z
       5: return

  public boolean isUseSsl();
    Code:
       0: aload_0
       1: getfield      #5                  // Field useSsl:Z
       4: ireturn

  public void setSslConfiguration(com.cloudhopper.smpp.ssl.SslConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field sslConfiguration:Lcom/cloudhopper/smpp/ssl/SslConfiguration;
       5: aload_0
       6: iconst_1
       7: invokevirtual #32                 // Method setUseSsl:(Z)V
      10: return

  public com.cloudhopper.smpp.ssl.SslConfiguration getSslConfiguration();
    Code:
       0: aload_0
       1: getfield      #31                 // Field sslConfiguration:Lcom/cloudhopper/smpp/ssl/SslConfiguration;
       4: areturn

  public void setBindTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #17                 // Field bindTimeout:J
       5: return

  public long getBindTimeout();
    Code:
       0: aload_0
       1: getfield      #17                 // Field bindTimeout:J
       4: lreturn

  public void setSystemId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field systemId:Ljava/lang/String;
       5: return

  public java.lang.String getSystemId();
    Code:
       0: aload_0
       1: getfield      #19                 // Field systemId:Ljava/lang/String;
       4: areturn

  public boolean isAutoNegotiateInterfaceVersion();
    Code:
       0: aload_0
       1: getfield      #20                 // Field autoNegotiateInterfaceVersion:Z
       4: ireturn

  public void setAutoNegotiateInterfaceVersion(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field autoNegotiateInterfaceVersion:Z
       5: return

  public byte getInterfaceVersion();
    Code:
       0: aload_0
       1: getfield      #21                 // Field interfaceVersion:B
       4: ireturn

  public void setInterfaceVersion(byte);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field interfaceVersion:B
       5: return

  public long getDefaultRequestExpiryTimeout();
    Code:
       0: aload_0
       1: getfield      #12                 // Field defaultRequestExpiryTimeout:J
       4: lreturn

  public void setDefaultRequestExpiryTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #12                 // Field defaultRequestExpiryTimeout:J
       5: return

  public long getDefaultWindowMonitorInterval();
    Code:
       0: aload_0
       1: getfield      #13                 // Field defaultWindowMonitorInterval:J
       4: lreturn

  public void setDefaultWindowMonitorInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #13                 // Field defaultWindowMonitorInterval:J
       5: return

  public int getDefaultWindowSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field defaultWindowSize:I
       4: ireturn

  public void setDefaultWindowSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field defaultWindowSize:I
       5: return

  public long getDefaultWindowWaitTimeout();
    Code:
       0: aload_0
       1: getfield      #9                  // Field defaultWindowWaitTimeout:J
       4: lreturn

  public void setDefaultWindowWaitTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #9                  // Field defaultWindowWaitTimeout:J
       5: return

  public boolean isDefaultSessionCountersEnabled();
    Code:
       0: aload_0
       1: getfield      #14                 // Field defaultSessionCountersEnabled:Z
       4: ireturn

  public void setDefaultSessionCountersEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field defaultSessionCountersEnabled:Z
       5: return
}
