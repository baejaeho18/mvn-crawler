Compiled from "Pdu.java"
public abstract class com.cloudhopper.smpp.pdu.Pdu {
  private final java.lang.String name;

  private final boolean isRequest;

  private java.lang.Integer commandLength;

  private final int commandId;

  private int commandStatus;

  private java.lang.Integer sequenceNumber;

  private java.util.ArrayList<com.cloudhopper.smpp.tlv.Tlv> optionalParameters;

  private java.lang.Object referenceObject;

  public com.cloudhopper.smpp.pdu.Pdu(int, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: iload_3
      11: putfield      #3                  // Field isRequest:Z
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field commandLength:Ljava/lang/Integer;
      19: aload_0
      20: iload_1
      21: putfield      #5                  // Field commandId:I
      24: aload_0
      25: aconst_null
      26: putfield      #6                  // Field sequenceNumber:Ljava/lang/Integer;
      29: aload_0
      30: aconst_null
      31: putfield      #7                  // Field referenceObject:Ljava/lang/Object;
      34: return

  public void setReferenceObject(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field referenceObject:Ljava/lang/Object;
       5: return

  public java.lang.Object getReferenceObject();
    Code:
       0: aload_0
       1: getfield      #7                  // Field referenceObject:Ljava/lang/Object;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public boolean isRequest();
    Code:
       0: aload_0
       1: getfield      #3                  // Field isRequest:Z
       4: ireturn

  public boolean isResponse();
    Code:
       0: aload_0
       1: getfield      #3                  // Field isRequest:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean hasCommandLengthCalculated();
    Code:
       0: aload_0
       1: getfield      #4                  // Field commandLength:Ljava/lang/Integer;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void removeCommandLength();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #4                  // Field commandLength:Ljava/lang/Integer;
       5: return

  public void setCommandLength(int);
    Code:
       0: aload_0
       1: new           #8                  // class java/lang/Integer
       4: dup
       5: iload_1
       6: invokespecial #9                  // Method java/lang/Integer."<init>":(I)V
       9: putfield      #4                  // Field commandLength:Ljava/lang/Integer;
      12: return

  public int getCommandLength();
    Code:
       0: aload_0
       1: getfield      #4                  // Field commandLength:Ljava/lang/Integer;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #4                  // Field commandLength:Ljava/lang/Integer;
      13: invokevirtual #10                 // Method java/lang/Integer.intValue:()I
      16: ireturn

  public int calculateAndSetCommandLength();
    Code:
       0: bipush        16
       2: aload_0
       3: invokevirtual #11                 // Method calculateByteSizeOfBody:()I
       6: iadd
       7: aload_0
       8: invokevirtual #12                 // Method calculateByteSizeOfOptionalParameters:()I
      11: iadd
      12: istore_1
      13: aload_0
      14: iload_1
      15: invokevirtual #13                 // Method setCommandLength:(I)V
      18: iload_1
      19: ireturn

  public int getCommandId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field commandId:I
       4: ireturn

  public void setCommandStatus(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field commandStatus:I
       5: return

  public int getCommandStatus();
    Code:
       0: aload_0
       1: getfield      #14                 // Field commandStatus:I
       4: ireturn

  public boolean hasSequenceNumberAssigned();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sequenceNumber:Ljava/lang/Integer;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void removeSequenceNumber();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #6                  // Field sequenceNumber:Ljava/lang/Integer;
       5: return

  public void setSequenceNumber(int);
    Code:
       0: aload_0
       1: new           #8                  // class java/lang/Integer
       4: dup
       5: iload_1
       6: invokespecial #9                  // Method java/lang/Integer."<init>":(I)V
       9: putfield      #6                  // Field sequenceNumber:Ljava/lang/Integer;
      12: return

  public int getSequenceNumber();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sequenceNumber:Ljava/lang/Integer;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #6                  // Field sequenceNumber:Ljava/lang/Integer;
      13: invokevirtual #10                 // Method java/lang/Integer.intValue:()I
      16: ireturn

  public int getOptionalParameterCount();
    Code:
       0: aload_0
       1: getfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
      13: invokevirtual #16                 // Method java/util/ArrayList.size:()I
      16: ireturn

  public java.util.ArrayList<com.cloudhopper.smpp.tlv.Tlv> getOptionalParameters();
    Code:
       0: aload_0
       1: getfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
       4: areturn

  public void addOptionalParameter(com.cloudhopper.smpp.tlv.Tlv);
    Code:
       0: aload_0
       1: getfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
       4: ifnonnull     18
       7: aload_0
       8: new           #17                 // class java/util/ArrayList
      11: dup
      12: invokespecial #18                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
      18: aload_0
      19: getfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
      22: aload_1
      23: invokevirtual #19                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      26: pop
      27: return

  public com.cloudhopper.smpp.tlv.Tlv removeOptionalParameter(short);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #20                 // Method findOptionalParameter:(S)I
       5: istore_2
       6: iload_2
       7: ifge          12
      10: aconst_null
      11: areturn
      12: aload_0
      13: getfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
      16: iload_2
      17: invokevirtual #21                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
      20: checkcast     #22                 // class com/cloudhopper/smpp/tlv/Tlv
      23: areturn

  public com.cloudhopper.smpp.tlv.Tlv setOptionalParameter(com.cloudhopper.smpp.tlv.Tlv);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method com/cloudhopper/smpp/tlv/Tlv.getTag:()S
       5: invokevirtual #20                 // Method findOptionalParameter:(S)I
       8: istore_2
       9: iload_2
      10: ifge          20
      13: aload_0
      14: aload_1
      15: invokevirtual #24                 // Method addOptionalParameter:(Lcom/cloudhopper/smpp/tlv/Tlv;)V
      18: aconst_null
      19: areturn
      20: aload_0
      21: getfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
      24: iload_2
      25: aload_1
      26: invokevirtual #25                 // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #22                 // class com/cloudhopper/smpp/tlv/Tlv
      32: areturn

  public boolean hasOptionalParameter(short);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #20                 // Method findOptionalParameter:(S)I
       5: iflt          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  protected int findOptionalParameter(short);
    Code:
       0: aload_0
       1: getfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
       4: ifnonnull     9
       7: iconst_m1
       8: ireturn
       9: iconst_0
      10: istore_2
      11: aload_0
      12: getfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
      15: invokevirtual #26                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: aload_3
      20: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          56
      28: aload_3
      29: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #22                 // class com/cloudhopper/smpp/tlv/Tlv
      37: astore        4
      39: aload         4
      41: invokevirtual #23                 // Method com/cloudhopper/smpp/tlv/Tlv.getTag:()S
      44: iload_1
      45: if_icmpne     50
      48: iload_2
      49: ireturn
      50: iinc          2, 1
      53: goto          19
      56: iconst_m1
      57: ireturn

  public com.cloudhopper.smpp.tlv.Tlv getOptionalParameter(short);
    Code:
       0: aload_0
       1: getfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: iload_1
      11: invokevirtual #20                 // Method findOptionalParameter:(S)I
      14: istore_2
      15: iload_2
      16: ifge          21
      19: aconst_null
      20: areturn
      21: aload_0
      22: getfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
      25: iload_2
      26: invokevirtual #29                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      29: checkcast     #22                 // class com/cloudhopper/smpp/tlv/Tlv
      32: areturn

  protected abstract int calculateByteSizeOfBody();

  public abstract void readBody(org.jboss.netty.buffer.ChannelBuffer) throws com.cloudhopper.smpp.type.UnrecoverablePduException, com.cloudhopper.smpp.type.RecoverablePduException;

  public abstract void writeBody(org.jboss.netty.buffer.ChannelBuffer) throws com.cloudhopper.smpp.type.UnrecoverablePduException, com.cloudhopper.smpp.type.RecoverablePduException;

  protected abstract void appendBodyToString(java.lang.StringBuilder);

  protected int calculateByteSizeOfOptionalParameters();
    Code:
       0: aload_0
       1: getfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: iconst_0
      10: istore_1
      11: aload_0
      12: getfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
      15: invokevirtual #26                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          48
      28: aload_2
      29: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #22                 // class com/cloudhopper/smpp/tlv/Tlv
      37: astore_3
      38: iload_1
      39: aload_3
      40: invokevirtual #30                 // Method com/cloudhopper/smpp/tlv/Tlv.calculateByteSize:()I
      43: iadd
      44: istore_1
      45: goto          19
      48: iload_1
      49: ireturn

  public void readOptionalParameters(org.jboss.netty.buffer.ChannelBuffer, com.cloudhopper.smpp.transcoder.PduTranscoderContext) throws com.cloudhopper.smpp.type.UnrecoverablePduException, com.cloudhopper.smpp.type.RecoverablePduException;
    Code:
       0: aload_1
       1: invokeinterface #31,  1           // InterfaceMethod org/jboss/netty/buffer/ChannelBuffer.readableBytes:()I
       6: ifle          43
       9: aload_1
      10: invokestatic  #32                 // Method com/cloudhopper/smpp/util/ChannelBufferUtil.readTlv:(Lorg/jboss/netty/buffer/ChannelBuffer;)Lcom/cloudhopper/smpp/tlv/Tlv;
      13: astore_3
      14: aload_3
      15: invokevirtual #33                 // Method com/cloudhopper/smpp/tlv/Tlv.getTagName:()Ljava/lang/String;
      18: ifnonnull     35
      21: aload_3
      22: aload_2
      23: aload_3
      24: invokevirtual #23                 // Method com/cloudhopper/smpp/tlv/Tlv.getTag:()S
      27: invokeinterface #34,  2           // InterfaceMethod com/cloudhopper/smpp/transcoder/PduTranscoderContext.lookupTlvTagName:(S)Ljava/lang/String;
      32: invokevirtual #35                 // Method com/cloudhopper/smpp/tlv/Tlv.setTagName:(Ljava/lang/String;)V
      35: aload_0
      36: aload_3
      37: invokevirtual #24                 // Method addOptionalParameter:(Lcom/cloudhopper/smpp/tlv/Tlv;)V
      40: goto          0
      43: return

  public void writeOptionalParameters(org.jboss.netty.buffer.ChannelBuffer, com.cloudhopper.smpp.transcoder.PduTranscoderContext) throws com.cloudhopper.smpp.type.UnrecoverablePduException, com.cloudhopper.smpp.type.RecoverablePduException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
      12: invokevirtual #26                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: aload_3
      17: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          69
      25: aload_3
      26: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #22                 // class com/cloudhopper/smpp/tlv/Tlv
      34: astore        4
      36: aload         4
      38: invokevirtual #33                 // Method com/cloudhopper/smpp/tlv/Tlv.getTagName:()Ljava/lang/String;
      41: ifnonnull     60
      44: aload         4
      46: aload_2
      47: aload         4
      49: invokevirtual #23                 // Method com/cloudhopper/smpp/tlv/Tlv.getTag:()S
      52: invokeinterface #34,  2           // InterfaceMethod com/cloudhopper/smpp/transcoder/PduTranscoderContext.lookupTlvTagName:(S)Ljava/lang/String;
      57: invokevirtual #35                 // Method com/cloudhopper/smpp/tlv/Tlv.setTagName:(Ljava/lang/String;)V
      60: aload_1
      61: aload         4
      63: invokestatic  #36                 // Method com/cloudhopper/smpp/util/ChannelBufferUtil.writeTlv:(Lorg/jboss/netty/buffer/ChannelBuffer;Lcom/cloudhopper/smpp/tlv/Tlv;)V
      66: goto          16
      69: return

  protected void appendOptionalParameterToString(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: getfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
       4: ifnonnull     8
       7: return
       8: iconst_0
       9: istore_2
      10: aload_0
      11: getfield      #15                 // Field optionalParameters:Ljava/util/ArrayList;
      14: invokevirtual #26                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          82
      27: aload_3
      28: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #22                 // class com/cloudhopper/smpp/tlv/Tlv
      36: astore        4
      38: iload_2
      39: ifeq          52
      42: aload_1
      43: ldc           #37                 // String  (
      45: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: pop
      49: goto          59
      52: aload_1
      53: ldc           #39                 // String (
      55: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: pop
      59: aload_1
      60: aload         4
      62: invokevirtual #40                 // Method com/cloudhopper/smpp/tlv/Tlv.toString:()Ljava/lang/String;
      65: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: pop
      69: aload_1
      70: ldc           #41                 // String )
      72: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: pop
      76: iinc          2, 1
      79: goto          18
      82: return

  public java.lang.String toString();
    Code:
       0: new           #42                 // class java/lang/StringBuilder
       3: dup
       4: sipush        365
       7: aload_0
       8: invokevirtual #43                 // Method getOptionalParameterCount:()I
      11: bipush        20
      13: imul
      14: iadd
      15: invokespecial #44                 // Method java/lang/StringBuilder."<init>":(I)V
      18: astore_1
      19: aload_1
      20: ldc           #39                 // String (
      22: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: pop
      26: aload_1
      27: aload_0
      28: getfield      #2                  // Field name:Ljava/lang/String;
      31: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: pop
      35: aload_1
      36: ldc           #45                 // String : 0x
      38: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: pop
      42: aload_1
      43: aload_0
      44: invokevirtual #46                 // Method getCommandLength:()I
      47: invokestatic  #47                 // Method com/cloudhopper/commons/util/HexUtil.toHexString:(I)Ljava/lang/String;
      50: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_1
      55: ldc           #48                 // String  0x
      57: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: aload_1
      62: aload_0
      63: getfield      #5                  // Field commandId:I
      66: invokestatic  #47                 // Method com/cloudhopper/commons/util/HexUtil.toHexString:(I)Ljava/lang/String;
      69: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: pop
      73: aload_1
      74: ldc           #48                 // String  0x
      76: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: pop
      80: aload_1
      81: aload_0
      82: getfield      #14                 // Field commandStatus:I
      85: invokestatic  #47                 // Method com/cloudhopper/commons/util/HexUtil.toHexString:(I)Ljava/lang/String;
      88: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: pop
      92: aload_1
      93: ldc           #48                 // String  0x
      95: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: pop
      99: aload_1
     100: aload_0
     101: invokevirtual #49                 // Method getSequenceNumber:()I
     104: invokestatic  #47                 // Method com/cloudhopper/commons/util/HexUtil.toHexString:(I)Ljava/lang/String;
     107: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: pop
     111: aload_0
     112: instanceof    #50                 // class com/cloudhopper/smpp/pdu/PduResponse
     115: ifeq          162
     118: aload_0
     119: checkcast     #50                 // class com/cloudhopper/smpp/pdu/PduResponse
     122: astore_2
     123: aload_2
     124: invokevirtual #51                 // Method com/cloudhopper/smpp/pdu/PduResponse.getResultMessage:()Ljava/lang/String;
     127: astore_3
     128: aload_3
     129: ifnull        155
     132: aload_1
     133: ldc           #52                 // String  result: \"
     135: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: pop
     139: aload_1
     140: aload_3
     141: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: pop
     145: aload_1
     146: ldc           #53                 // String \"
     148: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: pop
     152: goto          162
     155: aload_1
     156: ldc           #54                 // String  result: <unmapped>
     158: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: pop
     162: aload_1
     163: ldc           #41                 // String )
     165: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: pop
     169: aload_1
     170: ldc           #55                 // String  (body:
     172: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     175: pop
     176: aload_0
     177: aload_1
     178: invokevirtual #56                 // Method appendBodyToString:(Ljava/lang/StringBuilder;)V
     181: aload_1
     182: ldc           #57                 // String ) (opts:
     184: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: pop
     188: aload_0
     189: aload_1
     190: invokevirtual #58                 // Method appendOptionalParameterToString:(Ljava/lang/StringBuilder;)V
     193: aload_1
     194: ldc           #41                 // String )
     196: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: pop
     200: aload_1
     201: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     204: areturn
}
