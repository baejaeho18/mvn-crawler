Compiled from "SmppSession.java"
public interface com.cloudhopper.smpp.SmppSession {
  public static final int STATE_INITIAL;

  public static final int STATE_OPEN;

  public static final int STATE_BINDING;

  public static final int STATE_BOUND;

  public static final int STATE_UNBINDING;

  public static final int STATE_CLOSED;

  public static final java.lang.String[] STATES;

  public abstract com.cloudhopper.smpp.SmppBindType getBindType();

  public abstract com.cloudhopper.smpp.SmppSession$Type getLocalType();

  public abstract com.cloudhopper.smpp.SmppSession$Type getRemoteType();

  public abstract com.cloudhopper.smpp.SmppSessionConfiguration getConfiguration();

  public abstract java.lang.String getStateName();

  public abstract byte getInterfaceVersion();

  public abstract boolean areOptionalParametersSupported();

  public abstract boolean isOpen();

  public abstract boolean isBinding();

  public abstract boolean isBound();

  public abstract boolean isUnbinding();

  public abstract boolean isClosed();

  public abstract long getBoundTime();

  public abstract com.cloudhopper.commons.util.windowing.Window<java.lang.Integer, com.cloudhopper.smpp.pdu.PduRequest, com.cloudhopper.smpp.pdu.PduResponse> getRequestWindow();

  public abstract com.cloudhopper.commons.util.windowing.Window<java.lang.Integer, com.cloudhopper.smpp.pdu.PduRequest, com.cloudhopper.smpp.pdu.PduResponse> getSendWindow();

  public abstract boolean hasCounters();

  public abstract com.cloudhopper.smpp.SmppSessionCounters getCounters();

  public abstract void close();

  public abstract void unbind(long);

  public abstract void destroy();

  public abstract com.cloudhopper.smpp.pdu.EnquireLinkResp enquireLink(com.cloudhopper.smpp.pdu.EnquireLink, long) throws com.cloudhopper.smpp.type.RecoverablePduException, com.cloudhopper.smpp.type.UnrecoverablePduException, com.cloudhopper.smpp.type.SmppTimeoutException, com.cloudhopper.smpp.type.SmppChannelException, java.lang.InterruptedException;

  public abstract com.cloudhopper.smpp.pdu.SubmitSmResp submit(com.cloudhopper.smpp.pdu.SubmitSm, long) throws com.cloudhopper.smpp.type.RecoverablePduException, com.cloudhopper.smpp.type.UnrecoverablePduException, com.cloudhopper.smpp.type.SmppTimeoutException, com.cloudhopper.smpp.type.SmppChannelException, java.lang.InterruptedException;

  public abstract com.cloudhopper.commons.util.windowing.WindowFuture<java.lang.Integer, com.cloudhopper.smpp.pdu.PduRequest, com.cloudhopper.smpp.pdu.PduResponse> sendRequestPdu(com.cloudhopper.smpp.pdu.PduRequest, long, boolean) throws com.cloudhopper.smpp.type.RecoverablePduException, com.cloudhopper.smpp.type.UnrecoverablePduException, com.cloudhopper.smpp.type.SmppTimeoutException, com.cloudhopper.smpp.type.SmppChannelException, java.lang.InterruptedException;

  public abstract void sendResponsePdu(com.cloudhopper.smpp.pdu.PduResponse) throws com.cloudhopper.smpp.type.RecoverablePduException, com.cloudhopper.smpp.type.UnrecoverablePduException, com.cloudhopper.smpp.type.SmppChannelException, java.lang.InterruptedException;

  static {};
    Code:
       0: bipush        6
       2: anewarray     #1                  // class java/lang/String
       5: dup
       6: iconst_0
       7: ldc           #2                  // String INITIAL
       9: aastore
      10: dup
      11: iconst_1
      12: ldc           #3                  // String OPEN
      14: aastore
      15: dup
      16: iconst_2
      17: ldc           #4                  // String BINDING
      19: aastore
      20: dup
      21: iconst_3
      22: ldc           #5                  // String BOUND
      24: aastore
      25: dup
      26: iconst_4
      27: ldc           #6                  // String UNBINDING
      29: aastore
      30: dup
      31: iconst_5
      32: ldc           #7                  // String CLOSED
      34: aastore
      35: putstatic     #8                  // Field STATES:[Ljava/lang/String;
      38: return
}
