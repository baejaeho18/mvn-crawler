Compiled from "CreditControlMessage.java"
public interface net.java.slee.resource.diameter.cca.events.CreditControlMessage extends net.java.slee.resource.diameter.base.events.DiameterMessage {
  public static final int commandCode;

  public abstract java.lang.String getAcctMultiSessionId();

  public abstract void setAcctMultiSessionId(java.lang.String) throws java.lang.IllegalStateException;

  public abstract boolean hasAcctMultiSessionId();

  public abstract long getAuthApplicationId();

  public abstract void setAuthApplicationId(long) throws java.lang.IllegalStateException;

  public abstract boolean hasAuthApplicationId();

  public abstract long getCcRequestNumber();

  public abstract void setCcRequestNumber(long) throws java.lang.IllegalStateException;

  public abstract boolean hasCcRequestNumber();

  public abstract net.java.slee.resource.diameter.cca.events.avp.CcRequestType getCcRequestType();

  public abstract void setCcRequestType(net.java.slee.resource.diameter.cca.events.avp.CcRequestType) throws java.lang.IllegalStateException;

  public abstract boolean hasCcRequestType();

  public abstract long getCcSubSessionId();

  public abstract void setCcSubSessionId(long) throws java.lang.IllegalStateException;

  public abstract boolean hasCcSubSessionId();

  public abstract java.util.Date getEventTimestamp();

  public abstract void setEventTimestamp(java.util.Date) throws java.lang.IllegalStateException;

  public abstract boolean hasEventTimestamp();

  public abstract boolean hasMultipleServicesCreditControl();

  public abstract net.java.slee.resource.diameter.cca.events.avp.MultipleServicesCreditControlAvp[] getMultipleServicesCreditControls();

  public abstract void setMultipleServicesCreditControl(net.java.slee.resource.diameter.cca.events.avp.MultipleServicesCreditControlAvp) throws java.lang.IllegalStateException;

  public abstract void setMultipleServicesCreditControls(net.java.slee.resource.diameter.cca.events.avp.MultipleServicesCreditControlAvp[]) throws java.lang.IllegalStateException;

  public abstract long getOriginStateId();

  public abstract void setOriginStateId(long) throws java.lang.IllegalStateException;

  public abstract boolean hasOriginStateId();

  public abstract net.java.slee.resource.diameter.base.events.avp.ProxyInfoAvp[] getProxyInfos();

  public abstract void setProxyInfo(net.java.slee.resource.diameter.base.events.avp.ProxyInfoAvp) throws java.lang.IllegalStateException;

  public abstract void setProxyInfos(net.java.slee.resource.diameter.base.events.avp.ProxyInfoAvp[]) throws java.lang.IllegalStateException;

  public abstract net.java.slee.resource.diameter.base.events.avp.DiameterIdentity[] getRouteRecords();

  public abstract void setRouteRecord(net.java.slee.resource.diameter.base.events.avp.DiameterIdentity) throws java.lang.IllegalStateException;

  public abstract void setRouteRecords(net.java.slee.resource.diameter.base.events.avp.DiameterIdentity[]) throws java.lang.IllegalStateException;

  public abstract java.lang.String getUserName();

  public abstract void setUserName(java.lang.String) throws java.lang.IllegalStateException;

  public abstract boolean hasUserName();
}
