Compiled from "CreditControlAnswer.java"
public interface net.java.slee.resource.diameter.cca.events.CreditControlAnswer extends net.java.slee.resource.diameter.cca.events.CreditControlMessage {
  public abstract net.java.slee.resource.diameter.cca.events.avp.CcSessionFailoverType getCcSessionFailover();

  public abstract void setCcSessionFailover(net.java.slee.resource.diameter.cca.events.avp.CcSessionFailoverType) throws java.lang.IllegalStateException;

  public abstract boolean hasCcSessionFailover();

  public abstract net.java.slee.resource.diameter.cca.events.avp.CheckBalanceResultType getCheckBalanceResult();

  public abstract void setCheckBalanceResult(net.java.slee.resource.diameter.cca.events.avp.CheckBalanceResultType) throws java.lang.IllegalStateException;

  public abstract boolean hasCheckBalanceResult();

  public abstract net.java.slee.resource.diameter.cca.events.avp.CostInformationAvp getCostInformation();

  public abstract void setCostInformation(net.java.slee.resource.diameter.cca.events.avp.CostInformationAvp) throws java.lang.IllegalStateException;

  public abstract boolean hasCostInformation();

  public abstract net.java.slee.resource.diameter.cca.events.avp.CreditControlFailureHandlingType getCreditControlFailureHandling();

  public abstract void setCreditControlFailureHandling(net.java.slee.resource.diameter.cca.events.avp.CreditControlFailureHandlingType) throws java.lang.IllegalStateException;

  public abstract boolean hasCreditControlFailureHandling();

  public abstract net.java.slee.resource.diameter.cca.events.avp.DirectDebitingFailureHandlingType getDirectDebitingFailureHandling();

  public abstract void setDirectDebitingFailureHandling(net.java.slee.resource.diameter.cca.events.avp.DirectDebitingFailureHandlingType) throws java.lang.IllegalStateException;

  public abstract boolean hasDirectDebitingFailureHandling();

  public abstract net.java.slee.resource.diameter.base.events.avp.FailedAvp[] getFailedAvps();

  public abstract void setFailedAvp(net.java.slee.resource.diameter.base.events.avp.FailedAvp) throws java.lang.IllegalStateException;

  public abstract void setFailedAvps(net.java.slee.resource.diameter.base.events.avp.FailedAvp[]) throws java.lang.IllegalStateException;

  public abstract net.java.slee.resource.diameter.cca.events.avp.FinalUnitIndicationAvp getFinalUnitIndication();

  public abstract void setFinalUnitIndication(net.java.slee.resource.diameter.cca.events.avp.FinalUnitIndicationAvp) throws java.lang.IllegalStateException;

  public abstract boolean hasFinalUnitIndication();

  public abstract net.java.slee.resource.diameter.cca.events.avp.GrantedServiceUnitAvp getGrantedServiceUnit();

  public abstract void setGrantedServiceUnit(net.java.slee.resource.diameter.cca.events.avp.GrantedServiceUnitAvp) throws java.lang.IllegalStateException;

  public abstract boolean hasGrantedServiceUnit();

  public abstract net.java.slee.resource.diameter.base.events.avp.DiameterURI[] getRedirectHosts();

  public abstract void setRedirectHost(net.java.slee.resource.diameter.base.events.avp.DiameterURI) throws java.lang.IllegalStateException;

  public abstract void setRedirectHosts(net.java.slee.resource.diameter.base.events.avp.DiameterURI[]) throws java.lang.IllegalStateException;

  public abstract net.java.slee.resource.diameter.base.events.avp.RedirectHostUsageType getRedirectHostUsage();

  public abstract void setRedirectHostUsage(net.java.slee.resource.diameter.base.events.avp.RedirectHostUsageType) throws java.lang.IllegalStateException;

  public abstract boolean hasRedirectHostUsage();

  public abstract long getRedirectMaxCacheTime();

  public abstract void setRedirectMaxCacheTime(long) throws java.lang.IllegalStateException;

  public abstract boolean hasRedirectMaxCacheTime();

  public abstract long getResultCode();

  public abstract void setResultCode(long) throws java.lang.IllegalStateException;

  public abstract boolean hasResultCode();

  public abstract long getValidityTime();

  public abstract void setValidityTime(long) throws java.lang.IllegalStateException;

  public abstract boolean hasValidityTime();
}
