Compiled from "AbstractHTTP2ServerConnectionFactory.java"
public abstract class org.eclipse.jetty.http2.server.AbstractHTTP2ServerConnectionFactory extends org.eclipse.jetty.server.AbstractConnectionFactory {
  private final org.eclipse.jetty.http2.server.AbstractHTTP2ServerConnectionFactory$HTTP2SessionContainer sessionContainer;

  private final org.eclipse.jetty.server.HttpConfiguration httpConfiguration;

  private int maxDynamicTableSize;

  private int initialSessionRecvWindow;

  private int initialStreamRecvWindow;

  private int maxConcurrentStreams;

  private int maxHeaderBlockFragment;

  private int maxFrameLength;

  private int maxSettingsKeys;

  private boolean connectProtocolEnabled;

  private org.eclipse.jetty.http2.RateControl$Factory rateControlFactory;

  private org.eclipse.jetty.http2.FlowControlStrategy$Factory flowControlStrategyFactory;

  private long streamIdleTimeout;

  private boolean useInputDirectByteBuffers;

  private boolean useOutputDirectByteBuffers;

  private static boolean isProtocolSupported(java.lang.String);
    Code:
       0: aload_0
       1: astore_1
       2: iconst_m1
       3: istore_2
       4: aload_1
       5: invokevirtual #1                  // Method java/lang/String.hashCode:()I
       8: lookupswitch  { // 2
                  3274: 36
                101593: 50
               default: 61
          }
      36: aload_1
      37: ldc           #7                  // String h2
      39: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      42: ifeq          61
      45: iconst_0
      46: istore_2
      47: goto          61
      50: aload_1
      51: ldc           #13                 // String h2c
      53: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      56: ifeq          61
      59: iconst_1
      60: istore_2
      61: iload_2
      62: lookupswitch  { // 2
                     0: 88
                     1: 88
               default: 92
          }
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: ireturn

  public org.eclipse.jetty.http2.server.AbstractHTTP2ServerConnectionFactory(org.eclipse.jetty.server.HttpConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: anewarray     #2                  // class java/lang/String
       6: dup
       7: iconst_0
       8: ldc           #7                  // String h2
      10: aastore
      11: invokespecial #15                 // Method "<init>":(Lorg/eclipse/jetty/server/HttpConfiguration;[Ljava/lang/String;)V
      14: return

  protected org.eclipse.jetty.http2.server.AbstractHTTP2ServerConnectionFactory(org.eclipse.jetty.server.HttpConfiguration, java.lang.String...);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #21                 // Method org/eclipse/jetty/server/AbstractConnectionFactory."<init>":([Ljava/lang/String;)V
       5: aload_0
       6: new           #26                 // class org/eclipse/jetty/http2/server/AbstractHTTP2ServerConnectionFactory$HTTP2SessionContainer
       9: dup
      10: invokespecial #28                 // Method org/eclipse/jetty/http2/server/AbstractHTTP2ServerConnectionFactory$HTTP2SessionContainer."<init>":()V
      13: putfield      #31                 // Field sessionContainer:Lorg/eclipse/jetty/http2/server/AbstractHTTP2ServerConnectionFactory$HTTP2SessionContainer;
      16: aload_0
      17: sipush        4096
      20: putfield      #35                 // Field maxDynamicTableSize:I
      23: aload_0
      24: ldc           #39                 // int 1048576
      26: putfield      #40                 // Field initialSessionRecvWindow:I
      29: aload_0
      30: ldc           #43                 // int 524288
      32: putfield      #44                 // Field initialStreamRecvWindow:I
      35: aload_0
      36: sipush        128
      39: putfield      #47                 // Field maxConcurrentStreams:I
      42: aload_0
      43: iconst_0
      44: putfield      #50                 // Field maxHeaderBlockFragment:I
      47: aload_0
      48: sipush        16384
      51: putfield      #55                 // Field maxFrameLength:I
      54: aload_0
      55: bipush        64
      57: putfield      #60                 // Field maxSettingsKeys:I
      60: aload_0
      61: iconst_1
      62: putfield      #63                 // Field connectProtocolEnabled:Z
      65: aload_0
      66: new           #67                 // class org/eclipse/jetty/http2/WindowRateControl$Factory
      69: dup
      70: bipush        50
      72: invokespecial #69                 // Method org/eclipse/jetty/http2/WindowRateControl$Factory."<init>":(I)V
      75: putfield      #72                 // Field rateControlFactory:Lorg/eclipse/jetty/http2/RateControl$Factory;
      78: aload_0
      79: invokedynamic #76,  0             // InvokeDynamic #0:newFlowControlStrategy:()Lorg/eclipse/jetty/http2/FlowControlStrategy$Factory;
      84: putfield      #80                 // Field flowControlStrategyFactory:Lorg/eclipse/jetty/http2/FlowControlStrategy$Factory;
      87: aload_2
      88: astore_3
      89: aload_3
      90: arraylength
      91: istore        4
      93: iconst_0
      94: istore        5
      96: iload         5
      98: iload         4
     100: if_icmpge     138
     103: aload_3
     104: iload         5
     106: aaload
     107: astore        6
     109: aload         6
     111: invokestatic  #84                 // Method isProtocolSupported:(Ljava/lang/String;)Z
     114: ifne          132
     117: new           #88                 // class java/lang/IllegalArgumentException
     120: dup
     121: aload         6
     123: invokedynamic #90,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     128: invokespecial #94                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     131: athrow
     132: iinc          5, 1
     135: goto          96
     138: aload_0
     139: aload_0
     140: getfield      #31                 // Field sessionContainer:Lorg/eclipse/jetty/http2/server/AbstractHTTP2ServerConnectionFactory$HTTP2SessionContainer;
     143: invokevirtual #97                 // Method addBean:(Ljava/lang/Object;)Z
     146: pop
     147: aload_0
     148: aload_1
     149: invokestatic  #100                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     152: checkcast     #106                // class org/eclipse/jetty/server/HttpConfiguration
     155: putfield      #108                // Field httpConfiguration:Lorg/eclipse/jetty/server/HttpConfiguration;
     158: aload_0
     159: aload_1
     160: invokevirtual #97                 // Method addBean:(Ljava/lang/Object;)Z
     163: pop
     164: aload_0
     165: sipush        16393
     168: invokevirtual #112                // Method setInputBufferSize:(I)V
     171: aload_0
     172: aload_1
     173: invokevirtual #115                // Method org/eclipse/jetty/server/HttpConfiguration.isUseInputDirectByteBuffers:()Z
     176: invokevirtual #119                // Method setUseInputDirectByteBuffers:(Z)V
     179: aload_0
     180: aload_1
     181: invokevirtual #123                // Method org/eclipse/jetty/server/HttpConfiguration.isUseOutputDirectByteBuffers:()Z
     184: invokevirtual #126                // Method setUseOutputDirectByteBuffers:(Z)V
     187: return

  public int getMaxDynamicTableSize();
    Code:
       0: aload_0
       1: getfield      #35                 // Field maxDynamicTableSize:I
       4: ireturn

  public void setMaxDynamicTableSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field maxDynamicTableSize:I
       5: return

  public int getInitialSessionRecvWindow();
    Code:
       0: aload_0
       1: getfield      #40                 // Field initialSessionRecvWindow:I
       4: ireturn

  public void setInitialSessionRecvWindow(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #40                 // Field initialSessionRecvWindow:I
       5: return

  public int getInitialStreamRecvWindow();
    Code:
       0: aload_0
       1: getfield      #44                 // Field initialStreamRecvWindow:I
       4: ireturn

  public void setInitialStreamRecvWindow(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #44                 // Field initialStreamRecvWindow:I
       5: return

  public int getMaxConcurrentStreams();
    Code:
       0: aload_0
       1: getfield      #47                 // Field maxConcurrentStreams:I
       4: ireturn

  public void setMaxConcurrentStreams(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #47                 // Field maxConcurrentStreams:I
       5: return

  public int getMaxHeaderBlockFragment();
    Code:
       0: aload_0
       1: getfield      #50                 // Field maxHeaderBlockFragment:I
       4: ireturn

  public void setMaxHeaderBlockFragment(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #50                 // Field maxHeaderBlockFragment:I
       5: return

  public org.eclipse.jetty.http2.FlowControlStrategy$Factory getFlowControlStrategyFactory();
    Code:
       0: aload_0
       1: getfield      #80                 // Field flowControlStrategyFactory:Lorg/eclipse/jetty/http2/FlowControlStrategy$Factory;
       4: areturn

  public void setFlowControlStrategyFactory(org.eclipse.jetty.http2.FlowControlStrategy$Factory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #80                 // Field flowControlStrategyFactory:Lorg/eclipse/jetty/http2/FlowControlStrategy$Factory;
       5: return

  public long getStreamIdleTimeout();
    Code:
       0: aload_0
       1: getfield      #129                // Field streamIdleTimeout:J
       4: lreturn

  public void setStreamIdleTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #129                // Field streamIdleTimeout:J
       5: return

  public int getMaxFrameLength();
    Code:
       0: aload_0
       1: getfield      #55                 // Field maxFrameLength:I
       4: ireturn

  public void setMaxFrameLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #55                 // Field maxFrameLength:I
       5: return

  public int getMaxSettingsKeys();
    Code:
       0: aload_0
       1: getfield      #60                 // Field maxSettingsKeys:I
       4: ireturn

  public void setMaxSettingsKeys(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #60                 // Field maxSettingsKeys:I
       5: return

  public boolean isConnectProtocolEnabled();
    Code:
       0: aload_0
       1: getfield      #63                 // Field connectProtocolEnabled:Z
       4: ireturn

  public void setConnectProtocolEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #63                 // Field connectProtocolEnabled:Z
       5: return

  public org.eclipse.jetty.http2.RateControl$Factory getRateControlFactory();
    Code:
       0: aload_0
       1: getfield      #72                 // Field rateControlFactory:Lorg/eclipse/jetty/http2/RateControl$Factory;
       4: areturn

  public void setRateControlFactory(org.eclipse.jetty.http2.RateControl$Factory);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #100                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #133                // class org/eclipse/jetty/http2/RateControl$Factory
       8: putfield      #72                 // Field rateControlFactory:Lorg/eclipse/jetty/http2/RateControl$Factory;
      11: return

  public boolean isUseInputDirectByteBuffers();
    Code:
       0: aload_0
       1: getfield      #135                // Field useInputDirectByteBuffers:Z
       4: ireturn

  public void setUseInputDirectByteBuffers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #135                // Field useInputDirectByteBuffers:Z
       5: return

  public boolean isUseOutputDirectByteBuffers();
    Code:
       0: aload_0
       1: getfield      #138                // Field useOutputDirectByteBuffers:Z
       4: ireturn

  public void setUseOutputDirectByteBuffers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #138                // Field useOutputDirectByteBuffers:Z
       5: return

  public org.eclipse.jetty.server.HttpConfiguration getHttpConfiguration();
    Code:
       0: aload_0
       1: getfield      #108                // Field httpConfiguration:Lorg/eclipse/jetty/server/HttpConfiguration;
       4: areturn

  protected java.util.Map<java.lang.Integer, java.lang.Integer> newSettings();
    Code:
       0: new           #141                // class java/util/HashMap
       3: dup
       4: invokespecial #143                // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: iconst_1
      10: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: aload_0
      14: invokevirtual #150                // Method getMaxDynamicTableSize:()I
      17: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: invokeinterface #153,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: aload_1
      27: iconst_4
      28: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: aload_0
      32: invokevirtual #159                // Method getInitialStreamRecvWindow:()I
      35: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: invokeinterface #153,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: aload_0
      45: invokevirtual #162                // Method getMaxConcurrentStreams:()I
      48: istore_2
      49: iload_2
      50: iflt          68
      53: aload_1
      54: iconst_3
      55: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      58: iload_2
      59: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      62: invokeinterface #153,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: aload_1
      69: bipush        6
      71: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      74: aload_0
      75: invokevirtual #165                // Method getHttpConfiguration:()Lorg/eclipse/jetty/server/HttpConfiguration;
      78: invokevirtual #169                // Method org/eclipse/jetty/server/HttpConfiguration.getRequestHeaderSize:()I
      81: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      84: invokeinterface #153,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: aload_1
      91: bipush        8
      93: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      96: aload_0
      97: invokevirtual #172                // Method isConnectProtocolEnabled:()Z
     100: ifeq          107
     103: iconst_1
     104: goto          108
     107: iconst_0
     108: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     111: invokeinterface #153,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     116: pop
     117: aload_1
     118: areturn

  public org.eclipse.jetty.io.Connection newConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #175                // Method newSessionListener:(Lorg/eclipse/jetty/server/Connector;Lorg/eclipse/jetty/io/EndPoint;)Lorg/eclipse/jetty/http2/api/server/ServerSessionListener;
       6: astore_3
       7: new           #179                // class org/eclipse/jetty/http2/internal/generator/Generator
      10: dup
      11: aload_1
      12: invokeinterface #181,  1          // InterfaceMethod org/eclipse/jetty/server/Connector.getByteBufferPool:()Lorg/eclipse/jetty/io/ByteBufferPool;
      17: aload_0
      18: invokevirtual #187                // Method isUseOutputDirectByteBuffers:()Z
      21: aload_0
      22: invokevirtual #150                // Method getMaxDynamicTableSize:()I
      25: aload_0
      26: invokevirtual #188                // Method getMaxHeaderBlockFragment:()I
      29: invokespecial #191                // Method org/eclipse/jetty/http2/internal/generator/Generator."<init>":(Lorg/eclipse/jetty/io/ByteBufferPool;ZII)V
      32: astore        4
      34: aload_0
      35: invokevirtual #194                // Method getFlowControlStrategyFactory:()Lorg/eclipse/jetty/http2/FlowControlStrategy$Factory;
      38: invokeinterface #197,  1          // InterfaceMethod org/eclipse/jetty/http2/FlowControlStrategy$Factory.newFlowControlStrategy:()Lorg/eclipse/jetty/http2/FlowControlStrategy;
      43: astore        5
      45: new           #202                // class org/eclipse/jetty/http2/server/internal/HTTP2ServerSession
      48: dup
      49: aload_1
      50: invokeinterface #204,  1          // InterfaceMethod org/eclipse/jetty/server/Connector.getScheduler:()Lorg/eclipse/jetty/util/thread/Scheduler;
      55: aload_2
      56: aload         4
      58: aload_3
      59: aload         5
      61: invokespecial #208                // Method org/eclipse/jetty/http2/server/internal/HTTP2ServerSession."<init>":(Lorg/eclipse/jetty/util/thread/Scheduler;Lorg/eclipse/jetty/io/EndPoint;Lorg/eclipse/jetty/http2/internal/generator/Generator;Lorg/eclipse/jetty/http2/api/server/ServerSessionListener;Lorg/eclipse/jetty/http2/FlowControlStrategy;)V
      64: astore        6
      66: aload         6
      68: aload_0
      69: invokevirtual #162                // Method getMaxConcurrentStreams:()I
      72: invokevirtual #211                // Method org/eclipse/jetty/http2/server/internal/HTTP2ServerSession.setMaxLocalStreams:(I)V
      75: aload         6
      77: aload_0
      78: invokevirtual #162                // Method getMaxConcurrentStreams:()I
      81: invokevirtual #214                // Method org/eclipse/jetty/http2/server/internal/HTTP2ServerSession.setMaxRemoteStreams:(I)V
      84: aload_0
      85: invokevirtual #217                // Method getStreamIdleTimeout:()J
      88: lstore        7
      90: lload         7
      92: lconst_0
      93: lcmp
      94: ifle          104
      97: aload         6
      99: lload         7
     101: invokevirtual #221                // Method org/eclipse/jetty/http2/server/internal/HTTP2ServerSession.setStreamIdleTimeout:(J)V
     104: aload         6
     106: aload_0
     107: invokevirtual #225                // Method getInitialSessionRecvWindow:()I
     110: invokevirtual #228                // Method org/eclipse/jetty/http2/server/internal/HTTP2ServerSession.setInitialSessionRecvWindow:(I)V
     113: aload         6
     115: aload_0
     116: invokevirtual #165                // Method getHttpConfiguration:()Lorg/eclipse/jetty/server/HttpConfiguration;
     119: invokevirtual #231                // Method org/eclipse/jetty/server/HttpConfiguration.getOutputBufferSize:()I
     122: invokevirtual #234                // Method org/eclipse/jetty/http2/server/internal/HTTP2ServerSession.setWriteThreshold:(I)V
     125: aload         6
     127: aload_0
     128: invokevirtual #172                // Method isConnectProtocolEnabled:()Z
     131: invokevirtual #237                // Method org/eclipse/jetty/http2/server/internal/HTTP2ServerSession.setConnectProtocolEnabled:(Z)V
     134: aload_0
     135: aload_1
     136: aload         6
     138: aload_0
     139: invokevirtual #240                // Method getRateControlFactory:()Lorg/eclipse/jetty/http2/RateControl$Factory;
     142: aload_2
     143: invokeinterface #244,  2          // InterfaceMethod org/eclipse/jetty/http2/RateControl$Factory.newRateControl:(Lorg/eclipse/jetty/io/EndPoint;)Lorg/eclipse/jetty/http2/RateControl;
     148: invokevirtual #248                // Method newServerParser:(Lorg/eclipse/jetty/server/Connector;Lorg/eclipse/jetty/http2/internal/parser/ServerParser$Listener;Lorg/eclipse/jetty/http2/RateControl;)Lorg/eclipse/jetty/http2/internal/parser/ServerParser;
     151: astore        9
     153: aload         9
     155: aload_0
     156: invokevirtual #252                // Method getMaxFrameLength:()I
     159: invokevirtual #255                // Method org/eclipse/jetty/http2/internal/parser/ServerParser.setMaxFrameLength:(I)V
     162: aload         9
     164: aload_0
     165: invokevirtual #260                // Method getMaxSettingsKeys:()I
     168: invokevirtual #263                // Method org/eclipse/jetty/http2/internal/parser/ServerParser.setMaxSettingsKeys:(I)V
     171: aload_1
     172: invokeinterface #181,  1          // InterfaceMethod org/eclipse/jetty/server/Connector.getByteBufferPool:()Lorg/eclipse/jetty/io/ByteBufferPool;
     177: invokeinterface #266,  1          // InterfaceMethod org/eclipse/jetty/io/ByteBufferPool.asRetainableByteBufferPool:()Lorg/eclipse/jetty/io/RetainableByteBufferPool;
     182: astore        10
     184: new           #272                // class org/eclipse/jetty/http2/server/internal/HTTP2ServerConnection
     187: dup
     188: aload         10
     190: aload_1
     191: aload_2
     192: aload_0
     193: getfield      #108                // Field httpConfiguration:Lorg/eclipse/jetty/server/HttpConfiguration;
     196: aload         9
     198: aload         6
     200: aload_0
     201: invokevirtual #274                // Method getInputBufferSize:()I
     204: aload_3
     205: invokespecial #277                // Method org/eclipse/jetty/http2/server/internal/HTTP2ServerConnection."<init>":(Lorg/eclipse/jetty/io/RetainableByteBufferPool;Lorg/eclipse/jetty/server/Connector;Lorg/eclipse/jetty/io/EndPoint;Lorg/eclipse/jetty/server/HttpConfiguration;Lorg/eclipse/jetty/http2/internal/parser/ServerParser;Lorg/eclipse/jetty/http2/internal/HTTP2Session;ILorg/eclipse/jetty/http2/api/server/ServerSessionListener;)V
     208: astore        11
     210: aload         11
     212: aload_0
     213: invokevirtual #280                // Method isUseInputDirectByteBuffers:()Z
     216: invokevirtual #281                // Method org/eclipse/jetty/http2/internal/HTTP2Connection.setUseInputDirectByteBuffers:(Z)V
     219: aload         11
     221: aload_0
     222: invokevirtual #187                // Method isUseOutputDirectByteBuffers:()Z
     225: invokevirtual #284                // Method org/eclipse/jetty/http2/internal/HTTP2Connection.setUseOutputDirectByteBuffers:(Z)V
     228: aload         11
     230: aload_0
     231: getfield      #31                 // Field sessionContainer:Lorg/eclipse/jetty/http2/server/AbstractHTTP2ServerConnectionFactory$HTTP2SessionContainer;
     234: invokevirtual #285                // Method org/eclipse/jetty/http2/internal/HTTP2Connection.addEventListener:(Ljava/util/EventListener;)V
     237: aload_0
     238: aload         11
     240: aload_1
     241: aload_2
     242: invokevirtual #289                // Method configure:(Lorg/eclipse/jetty/io/AbstractConnection;Lorg/eclipse/jetty/server/Connector;Lorg/eclipse/jetty/io/EndPoint;)Lorg/eclipse/jetty/io/AbstractConnection;
     245: areturn

  protected abstract org.eclipse.jetty.http2.api.server.ServerSessionListener newSessionListener(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint);

  private org.eclipse.jetty.http2.internal.parser.ServerParser newServerParser(org.eclipse.jetty.server.Connector, org.eclipse.jetty.http2.internal.parser.ServerParser$Listener, org.eclipse.jetty.http2.RateControl);
    Code:
       0: new           #256                // class org/eclipse/jetty/http2/internal/parser/ServerParser
       3: dup
       4: aload_1
       5: invokeinterface #181,  1          // InterfaceMethod org/eclipse/jetty/server/Connector.getByteBufferPool:()Lorg/eclipse/jetty/io/ByteBufferPool;
      10: aload_2
      11: aload_0
      12: invokevirtual #150                // Method getMaxDynamicTableSize:()I
      15: aload_0
      16: invokevirtual #165                // Method getHttpConfiguration:()Lorg/eclipse/jetty/server/HttpConfiguration;
      19: invokevirtual #169                // Method org/eclipse/jetty/server/HttpConfiguration.getRequestHeaderSize:()I
      22: aload_3
      23: invokespecial #293                // Method org/eclipse/jetty/http2/internal/parser/ServerParser."<init>":(Lorg/eclipse/jetty/io/ByteBufferPool;Lorg/eclipse/jetty/http2/internal/parser/ServerParser$Listener;IILorg/eclipse/jetty/http2/RateControl;)V
      26: areturn

  private static org.eclipse.jetty.http2.FlowControlStrategy lambda$new$0();
    Code:
       0: new           #296                // class org/eclipse/jetty/http2/BufferingFlowControlStrategy
       3: dup
       4: ldc_w         #298                // float 0.5f
       7: invokespecial #299                // Method org/eclipse/jetty/http2/BufferingFlowControlStrategy."<init>":(F)V
      10: areturn
}
