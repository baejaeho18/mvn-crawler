Compiled from "Service.java"
public interface software.amazon.awssdk.services.ecs.model.Service$Builder extends software.amazon.awssdk.core.SdkPojo, software.amazon.awssdk.utils.builder.CopyableBuilder<software.amazon.awssdk.services.ecs.model.Service$Builder, software.amazon.awssdk.services.ecs.model.Service> {
  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder serviceArn(java.lang.String);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder serviceName(java.lang.String);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder clusterArn(java.lang.String);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder loadBalancers(java.util.Collection<software.amazon.awssdk.services.ecs.model.LoadBalancer>);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder loadBalancers(software.amazon.awssdk.services.ecs.model.LoadBalancer...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder loadBalancers(java.util.function.Consumer<software.amazon.awssdk.services.ecs.model.LoadBalancer$Builder>...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder serviceRegistries(java.util.Collection<software.amazon.awssdk.services.ecs.model.ServiceRegistry>);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder serviceRegistries(software.amazon.awssdk.services.ecs.model.ServiceRegistry...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder serviceRegistries(java.util.function.Consumer<software.amazon.awssdk.services.ecs.model.ServiceRegistry$Builder>...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder status(java.lang.String);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder desiredCount(java.lang.Integer);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder runningCount(java.lang.Integer);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder pendingCount(java.lang.Integer);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder launchType(java.lang.String);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder launchType(software.amazon.awssdk.services.ecs.model.LaunchType);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder capacityProviderStrategy(java.util.Collection<software.amazon.awssdk.services.ecs.model.CapacityProviderStrategyItem>);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder capacityProviderStrategy(software.amazon.awssdk.services.ecs.model.CapacityProviderStrategyItem...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder capacityProviderStrategy(java.util.function.Consumer<software.amazon.awssdk.services.ecs.model.CapacityProviderStrategyItem$Builder>...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder platformVersion(java.lang.String);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder taskDefinition(java.lang.String);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder deploymentConfiguration(software.amazon.awssdk.services.ecs.model.DeploymentConfiguration);

  public default software.amazon.awssdk.services.ecs.model.Service$Builder deploymentConfiguration(java.util.function.Consumer<software.amazon.awssdk.services.ecs.model.DeploymentConfiguration$Builder>);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method software/amazon/awssdk/services/ecs/model/DeploymentConfiguration.builder:()Lsoftware/amazon/awssdk/services/ecs/model/DeploymentConfiguration$Builder;
       4: aload_1
       5: invokeinterface #2,  2            // InterfaceMethod software/amazon/awssdk/services/ecs/model/DeploymentConfiguration$Builder.applyMutation:(Ljava/util/function/Consumer;)Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;
      10: checkcast     #3                  // class software/amazon/awssdk/services/ecs/model/DeploymentConfiguration$Builder
      13: invokeinterface #4,  1            // InterfaceMethod software/amazon/awssdk/services/ecs/model/DeploymentConfiguration$Builder.build:()Ljava/lang/Object;
      18: checkcast     #5                  // class software/amazon/awssdk/services/ecs/model/DeploymentConfiguration
      21: invokeinterface #6,  2            // InterfaceMethod deploymentConfiguration:(Lsoftware/amazon/awssdk/services/ecs/model/DeploymentConfiguration;)Lsoftware/amazon/awssdk/services/ecs/model/Service$Builder;
      26: areturn

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder taskSets(java.util.Collection<software.amazon.awssdk.services.ecs.model.TaskSet>);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder taskSets(software.amazon.awssdk.services.ecs.model.TaskSet...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder taskSets(java.util.function.Consumer<software.amazon.awssdk.services.ecs.model.TaskSet$Builder>...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder deployments(java.util.Collection<software.amazon.awssdk.services.ecs.model.Deployment>);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder deployments(software.amazon.awssdk.services.ecs.model.Deployment...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder deployments(java.util.function.Consumer<software.amazon.awssdk.services.ecs.model.Deployment$Builder>...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder roleArn(java.lang.String);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder events(java.util.Collection<software.amazon.awssdk.services.ecs.model.ServiceEvent>);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder events(software.amazon.awssdk.services.ecs.model.ServiceEvent...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder events(java.util.function.Consumer<software.amazon.awssdk.services.ecs.model.ServiceEvent$Builder>...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder createdAt(java.time.Instant);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder placementConstraints(java.util.Collection<software.amazon.awssdk.services.ecs.model.PlacementConstraint>);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder placementConstraints(software.amazon.awssdk.services.ecs.model.PlacementConstraint...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder placementConstraints(java.util.function.Consumer<software.amazon.awssdk.services.ecs.model.PlacementConstraint$Builder>...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder placementStrategy(java.util.Collection<software.amazon.awssdk.services.ecs.model.PlacementStrategy>);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder placementStrategy(software.amazon.awssdk.services.ecs.model.PlacementStrategy...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder placementStrategy(java.util.function.Consumer<software.amazon.awssdk.services.ecs.model.PlacementStrategy$Builder>...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder networkConfiguration(software.amazon.awssdk.services.ecs.model.NetworkConfiguration);

  public default software.amazon.awssdk.services.ecs.model.Service$Builder networkConfiguration(java.util.function.Consumer<software.amazon.awssdk.services.ecs.model.NetworkConfiguration$Builder>);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method software/amazon/awssdk/services/ecs/model/NetworkConfiguration.builder:()Lsoftware/amazon/awssdk/services/ecs/model/NetworkConfiguration$Builder;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod software/amazon/awssdk/services/ecs/model/NetworkConfiguration$Builder.applyMutation:(Ljava/util/function/Consumer;)Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;
      10: checkcast     #9                  // class software/amazon/awssdk/services/ecs/model/NetworkConfiguration$Builder
      13: invokeinterface #10,  1           // InterfaceMethod software/amazon/awssdk/services/ecs/model/NetworkConfiguration$Builder.build:()Ljava/lang/Object;
      18: checkcast     #11                 // class software/amazon/awssdk/services/ecs/model/NetworkConfiguration
      21: invokeinterface #12,  2           // InterfaceMethod networkConfiguration:(Lsoftware/amazon/awssdk/services/ecs/model/NetworkConfiguration;)Lsoftware/amazon/awssdk/services/ecs/model/Service$Builder;
      26: areturn

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder healthCheckGracePeriodSeconds(java.lang.Integer);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder schedulingStrategy(java.lang.String);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder schedulingStrategy(software.amazon.awssdk.services.ecs.model.SchedulingStrategy);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder deploymentController(software.amazon.awssdk.services.ecs.model.DeploymentController);

  public default software.amazon.awssdk.services.ecs.model.Service$Builder deploymentController(java.util.function.Consumer<software.amazon.awssdk.services.ecs.model.DeploymentController$Builder>);
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method software/amazon/awssdk/services/ecs/model/DeploymentController.builder:()Lsoftware/amazon/awssdk/services/ecs/model/DeploymentController$Builder;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod software/amazon/awssdk/services/ecs/model/DeploymentController$Builder.applyMutation:(Ljava/util/function/Consumer;)Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;
      10: checkcast     #15                 // class software/amazon/awssdk/services/ecs/model/DeploymentController$Builder
      13: invokeinterface #16,  1           // InterfaceMethod software/amazon/awssdk/services/ecs/model/DeploymentController$Builder.build:()Ljava/lang/Object;
      18: checkcast     #17                 // class software/amazon/awssdk/services/ecs/model/DeploymentController
      21: invokeinterface #18,  2           // InterfaceMethod deploymentController:(Lsoftware/amazon/awssdk/services/ecs/model/DeploymentController;)Lsoftware/amazon/awssdk/services/ecs/model/Service$Builder;
      26: areturn

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder tags(java.util.Collection<software.amazon.awssdk.services.ecs.model.Tag>);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder tags(software.amazon.awssdk.services.ecs.model.Tag...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder tags(java.util.function.Consumer<software.amazon.awssdk.services.ecs.model.Tag$Builder>...);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder createdBy(java.lang.String);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder enableECSManagedTags(java.lang.Boolean);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder propagateTags(java.lang.String);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder propagateTags(software.amazon.awssdk.services.ecs.model.PropagateTags);

  public abstract software.amazon.awssdk.services.ecs.model.Service$Builder enableExecuteCommand(java.lang.Boolean);
}
