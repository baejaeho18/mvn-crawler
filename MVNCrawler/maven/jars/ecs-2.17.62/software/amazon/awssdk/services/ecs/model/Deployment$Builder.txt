Compiled from "Deployment.java"
public interface software.amazon.awssdk.services.ecs.model.Deployment$Builder extends software.amazon.awssdk.core.SdkPojo, software.amazon.awssdk.utils.builder.CopyableBuilder<software.amazon.awssdk.services.ecs.model.Deployment$Builder, software.amazon.awssdk.services.ecs.model.Deployment> {
  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder id(java.lang.String);

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder status(java.lang.String);

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder taskDefinition(java.lang.String);

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder desiredCount(java.lang.Integer);

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder pendingCount(java.lang.Integer);

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder runningCount(java.lang.Integer);

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder failedTasks(java.lang.Integer);

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder createdAt(java.time.Instant);

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder updatedAt(java.time.Instant);

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder capacityProviderStrategy(java.util.Collection<software.amazon.awssdk.services.ecs.model.CapacityProviderStrategyItem>);

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder capacityProviderStrategy(software.amazon.awssdk.services.ecs.model.CapacityProviderStrategyItem...);

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder capacityProviderStrategy(java.util.function.Consumer<software.amazon.awssdk.services.ecs.model.CapacityProviderStrategyItem$Builder>...);

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder launchType(java.lang.String);

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder launchType(software.amazon.awssdk.services.ecs.model.LaunchType);

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder platformVersion(java.lang.String);

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder networkConfiguration(software.amazon.awssdk.services.ecs.model.NetworkConfiguration);

  public default software.amazon.awssdk.services.ecs.model.Deployment$Builder networkConfiguration(java.util.function.Consumer<software.amazon.awssdk.services.ecs.model.NetworkConfiguration$Builder>);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method software/amazon/awssdk/services/ecs/model/NetworkConfiguration.builder:()Lsoftware/amazon/awssdk/services/ecs/model/NetworkConfiguration$Builder;
       4: aload_1
       5: invokeinterface #2,  2            // InterfaceMethod software/amazon/awssdk/services/ecs/model/NetworkConfiguration$Builder.applyMutation:(Ljava/util/function/Consumer;)Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;
      10: checkcast     #3                  // class software/amazon/awssdk/services/ecs/model/NetworkConfiguration$Builder
      13: invokeinterface #4,  1            // InterfaceMethod software/amazon/awssdk/services/ecs/model/NetworkConfiguration$Builder.build:()Ljava/lang/Object;
      18: checkcast     #5                  // class software/amazon/awssdk/services/ecs/model/NetworkConfiguration
      21: invokeinterface #6,  2            // InterfaceMethod networkConfiguration:(Lsoftware/amazon/awssdk/services/ecs/model/NetworkConfiguration;)Lsoftware/amazon/awssdk/services/ecs/model/Deployment$Builder;
      26: areturn

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder rolloutState(java.lang.String);

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder rolloutState(software.amazon.awssdk.services.ecs.model.DeploymentRolloutState);

  public abstract software.amazon.awssdk.services.ecs.model.Deployment$Builder rolloutStateReason(java.lang.String);
}
