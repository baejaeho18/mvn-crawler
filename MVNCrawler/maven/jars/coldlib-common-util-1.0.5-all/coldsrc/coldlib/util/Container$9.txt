Compiled from "Container.java"
class coldsrc.coldlib.util.Container$9 implements coldsrc.coldlib.util.Container<V> {
  final java.util.concurrent.atomic.AtomicReference<V> reference;

  boolean set;

  coldsrc.coldlib.util.Container$9();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #10                 // Field reference:Ljava/util/concurrent/atomic/AtomicReference;
      15: return

  public V get();
    Code:
       0: aload_0
       1: getfield      #10                 // Field reference:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: areturn

  public boolean isSet();
    Code:
       0: aload_0
       1: getfield      #20                 // Field set:Z
       4: ireturn

  public coldsrc.coldlib.util.Container<V> set(V);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #20                 // Field set:Z
       5: aload_0
       6: getfield      #10                 // Field reference:Ljava/util/concurrent/atomic/AtomicReference;
       9: aload_1
      10: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      13: aload_0
      14: areturn

  public coldsrc.coldlib.util.Container$Mutability mutability();
    Code:
       0: getstatic     #27                 // Field coldsrc/coldlib/util/Container$Mutability.MODIFY:Lcoldsrc/coldlib/util/Container$Mutability;
       3: areturn
}
