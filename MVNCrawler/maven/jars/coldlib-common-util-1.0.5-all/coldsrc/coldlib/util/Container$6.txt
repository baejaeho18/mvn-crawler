Compiled from "Container.java"
class coldsrc.coldlib.util.Container$6 implements coldsrc.coldlib.util.Container<V> {
  final java.util.List<java.util.concurrent.CompletableFuture<V>> futures;

  final coldsrc.coldlib.util.Container val$container;

  coldsrc.coldlib.util.Container$6(coldsrc.coldlib.util.Container);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$container:Lcoldsrc/coldlib/util/Container;
       5: aload_0
       6: invokespecial #7                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #13                 // class java/util/ArrayList
      13: dup
      14: invokespecial #15                 // Method java/util/ArrayList."<init>":()V
      17: putfield      #16                 // Field futures:Ljava/util/List;
      20: return

  public V get();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$container:Lcoldsrc/coldlib/util/Container;
       4: invokeinterface #20,  1           // InterfaceMethod coldsrc/coldlib/util/Container.get:()Ljava/lang/Object;
       9: areturn

  public boolean isSet();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$container:Lcoldsrc/coldlib/util/Container;
       4: invokeinterface #26,  1           // InterfaceMethod coldsrc/coldlib/util/Container.isSet:()Z
       9: ireturn

  public coldsrc.coldlib.util.Container<V> set(V);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$container:Lcoldsrc/coldlib/util/Container;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod coldsrc/coldlib/util/Container.set:(Ljava/lang/Object;)Lcoldsrc/coldlib/util/Container;
      10: pop
      11: aload_0
      12: getfield      #16                 // Field futures:Ljava/util/List;
      15: invokeinterface #34,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          49
      30: aload_2
      31: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #48                 // class java/util/concurrent/CompletableFuture
      39: astore_3
      40: aload_3
      41: aload_1
      42: invokevirtual #50                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      45: pop
      46: goto          21
      49: goto          97
      52: astore_2
      53: aload_0
      54: getfield      #16                 // Field futures:Ljava/util/List;
      57: invokeinterface #34,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      62: astore_3
      63: aload_3
      64: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      69: ifeq          93
      72: aload_3
      73: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      78: checkcast     #48                 // class java/util/concurrent/CompletableFuture
      81: astore        4
      83: aload         4
      85: aload_2
      86: invokevirtual #56                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      89: pop
      90: goto          63
      93: aload_2
      94: invokestatic  #60                 // Method coldsrc/coldlib/util/Throwables.sneakyThrow:(Ljava/lang/Throwable;)V
      97: aload_0
      98: areturn
    Exception table:
       from    to  target type
           0    49    52   Class java/lang/Throwable

  public coldsrc.coldlib.util.Container$Mutability mutability();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$container:Lcoldsrc/coldlib/util/Container;
       4: invokeinterface #66,  1           // InterfaceMethod coldsrc/coldlib/util/Container.mutability:()Lcoldsrc/coldlib/util/Container$Mutability;
       9: areturn

  public boolean canAwait();
    Code:
       0: iconst_1
       1: ireturn

  public java.util.concurrent.CompletableFuture<V> await(boolean);
    Code:
       0: new           #48                 // class java/util/concurrent/CompletableFuture
       3: dup
       4: invokespecial #70                 // Method java/util/concurrent/CompletableFuture."<init>":()V
       7: astore_2
       8: iload_1
       9: ifne          31
      12: aload_0
      13: invokevirtual #71                 // Method isSet:()Z
      16: ifeq          31
      19: aload_2
      20: aload_0
      21: invokevirtual #72                 // Method get:()Ljava/lang/Object;
      24: invokevirtual #50                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      27: pop
      28: goto          42
      31: aload_0
      32: getfield      #16                 // Field futures:Ljava/util/List;
      35: aload_2
      36: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      41: pop
      42: aload_2
      43: areturn
}
