Compiled from "KafkaConsumerManager.java"
public class org.piangles.gateway.events.KafkaConsumerManager {
  private org.piangles.backbone.services.logging.LoggingService logger;

  private static org.piangles.gateway.events.KafkaConsumerManager self;

  private java.util.Map<org.apache.kafka.clients.consumer.KafkaConsumer<java.lang.String, java.lang.String>, java.lang.Long> consumerThreadMap;

  private java.util.Map<java.lang.Long, org.apache.kafka.clients.consumer.KafkaConsumer<java.lang.String, java.lang.String>> closedConsumerMap;

  private org.piangles.gateway.events.KafkaConsumerManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/piangles/backbone/services/Locator.getInstance:()Lorg/piangles/backbone/services/Locator;
       8: invokevirtual #3                  // Method org/piangles/backbone/services/Locator.getLoggingService:()Lorg/piangles/backbone/services/logging/LoggingService;
      11: putfield      #4                  // Field logger:Lorg/piangles/backbone/services/logging/LoggingService;
      14: aload_0
      15: aconst_null
      16: putfield      #5                  // Field consumerThreadMap:Ljava/util/Map;
      19: aload_0
      20: aconst_null
      21: putfield      #6                  // Field closedConsumerMap:Ljava/util/Map;
      24: aload_0
      25: new           #7                  // class java/util/HashMap
      28: dup
      29: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      32: putfield      #5                  // Field consumerThreadMap:Ljava/util/Map;
      35: aload_0
      36: new           #7                  // class java/util/HashMap
      39: dup
      40: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      43: putfield      #6                  // Field closedConsumerMap:Ljava/util/Map;
      46: return

  public static final synchronized org.piangles.gateway.events.KafkaConsumerManager getInstance();
    Code:
       0: getstatic     #9                  // Field self:Lorg/piangles/gateway/events/KafkaConsumerManager;
       3: ifnonnull     16
       6: new           #10                 // class org/piangles/gateway/events/KafkaConsumerManager
       9: dup
      10: invokespecial #11                 // Method "<init>":()V
      13: putstatic     #9                  // Field self:Lorg/piangles/gateway/events/KafkaConsumerManager;
      16: getstatic     #9                  // Field self:Lorg/piangles/gateway/events/KafkaConsumerManager;
      19: areturn

  public synchronized void addNewConsumer(org.apache.kafka.clients.consumer.KafkaConsumer<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field consumerThreadMap:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #12                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       8: invokevirtual #13                 // Method java/lang/Thread.getId:()J
      11: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      14: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: return

  public synchronized void closeOrMarkForClose(org.apache.kafka.clients.consumer.KafkaConsumer<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: ifnull        73
       4: invokestatic  #12                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       7: invokevirtual #13                 // Method java/lang/Thread.getId:()J
      10: lstore_2
      11: aload_0
      12: getfield      #5                  // Field consumerThreadMap:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #17                 // class java/lang/Long
      24: astore        4
      26: aload         4
      28: ifnull        49
      31: lload_2
      32: aload         4
      34: invokevirtual #18                 // Method java/lang/Long.longValue:()J
      37: lcmp
      38: ifne          49
      41: aload_0
      42: aload_1
      43: invokespecial #19                 // Method closeConsumer:(Lorg/apache/kafka/clients/consumer/KafkaConsumer;)V
      46: goto          73
      49: aload_0
      50: getfield      #5                  // Field consumerThreadMap:Ljava/util/Map;
      53: aload_1
      54: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: aload_0
      61: getfield      #6                  // Field closedConsumerMap:Ljava/util/Map;
      64: aload         4
      66: aload_1
      67: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: return

  public synchronized void closeAnyMarked();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field closedConsumerMap:Ljava/util/Map;
       5: invokestatic  #12                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       8: invokevirtual #13                 // Method java/lang/Thread.getId:()J
      11: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      14: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #21                 // class org/apache/kafka/clients/consumer/KafkaConsumer
      22: invokespecial #19                 // Method closeConsumer:(Lorg/apache/kafka/clients/consumer/KafkaConsumer;)V
      25: return

  private void closeConsumer(org.apache.kafka.clients.consumer.KafkaConsumer<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_1
       5: invokevirtual #22                 // Method org/apache/kafka/clients/consumer/KafkaConsumer.close:()V
       8: goto          44
      11: astore_2
      12: aload_0
      13: getfield      #4                  // Field logger:Lorg/piangles/backbone/services/logging/LoggingService;
      16: new           #24                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #26                 // String Unable to close KafkaConsumer because of:
      25: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_2
      29: invokevirtual #28                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      32: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: aload_2
      39: invokeinterface #30,  3           // InterfaceMethod org/piangles/backbone/services/logging/LoggingService.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      44: return
    Exception table:
       from    to  target type
           0     8    11   Class java/lang/Exception

  static {};
    Code:
       0: aconst_null
       1: putstatic     #9                  // Field self:Lorg/piangles/gateway/events/KafkaConsumerManager;
       4: return
}
