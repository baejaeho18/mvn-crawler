Compiled from "LifecycleHandler.java"
class org.atmosphere.lifecycle.LifecycleHandler$1 implements java.lang.Runnable {
  final java.util.concurrent.atomic.AtomicBoolean val$recentActivity;

  final java.util.Collection val$resources;

  final org.atmosphere.cpr.BroadcasterLifeCyclePolicy val$lifeCyclePolicy;

  final org.atmosphere.cpr.DefaultBroadcaster val$broadcaster;

  final org.atmosphere.lifecycle.LifecycleHandler this$0;

  org.atmosphere.lifecycle.LifecycleHandler$1(org.atmosphere.lifecycle.LifecycleHandler, java.util.concurrent.atomic.AtomicBoolean, java.util.Collection, org.atmosphere.cpr.BroadcasterLifeCyclePolicy, org.atmosphere.cpr.DefaultBroadcaster);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/atmosphere/lifecycle/LifecycleHandler;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$recentActivity:Ljava/util/concurrent/atomic/AtomicBoolean;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$resources:Ljava/util/Collection;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$lifeCyclePolicy:Lorg/atmosphere/cpr/BroadcasterLifeCyclePolicy;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
      27: aload_0
      28: invokespecial #6                  // Method java/lang/Object."<init>":()V
      31: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$recentActivity:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
       8: ifeq          12
      11: return
      12: aload_0
      13: getfield      #3                  // Field val$resources:Ljava/util/Collection;
      16: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.isEmpty:()Z
      21: ifeq          170
      24: aload_0
      25: getfield      #4                  // Field val$lifeCyclePolicy:Lorg/atmosphere/cpr/BroadcasterLifeCyclePolicy;
      28: invokevirtual #9                  // Method org/atmosphere/cpr/BroadcasterLifeCyclePolicy.getLifeCyclePolicy:()Lorg/atmosphere/cpr/BroadcasterLifeCyclePolicy$ATMOSPHERE_RESOURCE_POLICY;
      31: getstatic     #10                 // Field org/atmosphere/cpr/BroadcasterLifeCyclePolicy$ATMOSPHERE_RESOURCE_POLICY.IDLE:Lorg/atmosphere/cpr/BroadcasterLifeCyclePolicy$ATMOSPHERE_RESOURCE_POLICY;
      34: if_acmpne     110
      37: aload_0
      38: getfield      #1                  // Field this$0:Lorg/atmosphere/lifecycle/LifecycleHandler;
      41: aload_0
      42: getfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
      45: invokevirtual #11                 // Method org/atmosphere/lifecycle/LifecycleHandler.notifyEmptyListener:(Lorg/atmosphere/cpr/DefaultBroadcaster;)V
      48: aload_0
      49: getfield      #1                  // Field this$0:Lorg/atmosphere/lifecycle/LifecycleHandler;
      52: aload_0
      53: getfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
      56: invokevirtual #12                 // Method org/atmosphere/lifecycle/LifecycleHandler.notifyIdleListener:(Lorg/atmosphere/cpr/DefaultBroadcaster;)V
      59: aload_0
      60: getfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
      63: invokevirtual #13                 // Method org/atmosphere/cpr/DefaultBroadcaster.releaseExternalResources:()V
      66: invokestatic  #14                 // Method org/atmosphere/lifecycle/LifecycleHandler.access$000:()Lorg/slf4j/Logger;
      69: ldc           #15                 // String Applying BroadcasterLifeCyclePolicy IDLE policy to Broadcaster {}
      71: aload_0
      72: getfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
      75: invokevirtual #16                 // Method org/atmosphere/cpr/DefaultBroadcaster.getID:()Ljava/lang/String;
      78: invokeinterface #17,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      83: aload_0
      84: getfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
      87: invokevirtual #18                 // Method org/atmosphere/cpr/DefaultBroadcaster.currentLifecycleTask:()Ljava/util/concurrent/Future;
      90: ifnull        216
      93: aload_0
      94: getfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
      97: invokevirtual #18                 // Method org/atmosphere/cpr/DefaultBroadcaster.currentLifecycleTask:()Ljava/util/concurrent/Future;
     100: iconst_1
     101: invokeinterface #19,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
     106: pop
     107: goto          216
     110: aload_0
     111: getfield      #4                  // Field val$lifeCyclePolicy:Lorg/atmosphere/cpr/BroadcasterLifeCyclePolicy;
     114: invokevirtual #9                  // Method org/atmosphere/cpr/BroadcasterLifeCyclePolicy.getLifeCyclePolicy:()Lorg/atmosphere/cpr/BroadcasterLifeCyclePolicy$ATMOSPHERE_RESOURCE_POLICY;
     117: getstatic     #20                 // Field org/atmosphere/cpr/BroadcasterLifeCyclePolicy$ATMOSPHERE_RESOURCE_POLICY.IDLE_DESTROY:Lorg/atmosphere/cpr/BroadcasterLifeCyclePolicy$ATMOSPHERE_RESOURCE_POLICY;
     120: if_acmpne     216
     123: aload_0
     124: getfield      #1                  // Field this$0:Lorg/atmosphere/lifecycle/LifecycleHandler;
     127: aload_0
     128: getfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
     131: invokevirtual #11                 // Method org/atmosphere/lifecycle/LifecycleHandler.notifyEmptyListener:(Lorg/atmosphere/cpr/DefaultBroadcaster;)V
     134: aload_0
     135: getfield      #1                  // Field this$0:Lorg/atmosphere/lifecycle/LifecycleHandler;
     138: aload_0
     139: getfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
     142: invokevirtual #12                 // Method org/atmosphere/lifecycle/LifecycleHandler.notifyIdleListener:(Lorg/atmosphere/cpr/DefaultBroadcaster;)V
     145: aload_0
     146: iconst_0
     147: invokevirtual #21                 // Method destroy:(Z)V
     150: invokestatic  #14                 // Method org/atmosphere/lifecycle/LifecycleHandler.access$000:()Lorg/slf4j/Logger;
     153: ldc           #22                 // String Applying BroadcasterLifeCyclePolicy IDLE_DESTROY policy to Broadcaster {}
     155: aload_0
     156: getfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
     159: invokevirtual #16                 // Method org/atmosphere/cpr/DefaultBroadcaster.getID:()Ljava/lang/String;
     162: invokeinterface #17,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     167: goto          216
     170: aload_0
     171: getfield      #4                  // Field val$lifeCyclePolicy:Lorg/atmosphere/cpr/BroadcasterLifeCyclePolicy;
     174: invokevirtual #9                  // Method org/atmosphere/cpr/BroadcasterLifeCyclePolicy.getLifeCyclePolicy:()Lorg/atmosphere/cpr/BroadcasterLifeCyclePolicy$ATMOSPHERE_RESOURCE_POLICY;
     177: getstatic     #23                 // Field org/atmosphere/cpr/BroadcasterLifeCyclePolicy$ATMOSPHERE_RESOURCE_POLICY.IDLE_RESUME:Lorg/atmosphere/cpr/BroadcasterLifeCyclePolicy$ATMOSPHERE_RESOURCE_POLICY;
     180: if_acmpne     216
     183: aload_0
     184: getfield      #1                  // Field this$0:Lorg/atmosphere/lifecycle/LifecycleHandler;
     187: aload_0
     188: getfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
     191: invokevirtual #12                 // Method org/atmosphere/lifecycle/LifecycleHandler.notifyIdleListener:(Lorg/atmosphere/cpr/DefaultBroadcaster;)V
     194: aload_0
     195: iconst_1
     196: invokevirtual #21                 // Method destroy:(Z)V
     199: invokestatic  #14                 // Method org/atmosphere/lifecycle/LifecycleHandler.access$000:()Lorg/slf4j/Logger;
     202: ldc           #24                 // String Applying BroadcasterLifeCyclePolicy IDLE_RESUME policy to Broadcaster {}
     204: aload_0
     205: getfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
     208: invokevirtual #16                 // Method org/atmosphere/cpr/DefaultBroadcaster.getID:()Ljava/lang/String;
     211: invokeinterface #17,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     216: goto          255
     219: astore_1
     220: aload_0
     221: getfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
     224: invokevirtual #26                 // Method org/atmosphere/cpr/DefaultBroadcaster.isDestroyed:()Z
     227: ifeq          244
     230: invokestatic  #14                 // Method org/atmosphere/lifecycle/LifecycleHandler.access$000:()Lorg/slf4j/Logger;
     233: ldc           #27                 // String Scheduled BroadcasterLifeCyclePolicy exception
     235: aload_1
     236: invokeinterface #28,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Throwable;)V
     241: goto          255
     244: invokestatic  #14                 // Method org/atmosphere/lifecycle/LifecycleHandler.access$000:()Lorg/slf4j/Logger;
     247: ldc           #27                 // String Scheduled BroadcasterLifeCyclePolicy exception
     249: aload_1
     250: invokeinterface #29,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     255: return
    Exception table:
       from    to  target type
           0    11   219   Class java/lang/Throwable
          12   216   219   Class java/lang/Throwable

  void destroy(boolean);
    Code:
       0: iload_1
       1: ifeq          28
       4: invokestatic  #14                 // Method org/atmosphere/lifecycle/LifecycleHandler.access$000:()Lorg/slf4j/Logger;
       7: ldc           #30                 // String All AtmosphereResource will now be resumed from Broadcaster {}
       9: aload_0
      10: getfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
      13: invokevirtual #16                 // Method org/atmosphere/cpr/DefaultBroadcaster.getID:()Ljava/lang/String;
      16: invokeinterface #31,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      21: aload_0
      22: getfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
      25: invokevirtual #32                 // Method org/atmosphere/cpr/DefaultBroadcaster.resumeAll:()V
      28: aload_0
      29: getfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
      32: invokevirtual #33                 // Method org/atmosphere/cpr/DefaultBroadcaster.destroy:()V
      35: aload_0
      36: getfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
      39: invokevirtual #18                 // Method org/atmosphere/cpr/DefaultBroadcaster.currentLifecycleTask:()Ljava/util/concurrent/Future;
      42: ifnull        59
      45: aload_0
      46: getfield      #5                  // Field val$broadcaster:Lorg/atmosphere/cpr/DefaultBroadcaster;
      49: invokevirtual #18                 // Method org/atmosphere/cpr/DefaultBroadcaster.currentLifecycleTask:()Ljava/util/concurrent/Future;
      52: iconst_1
      53: invokeinterface #19,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      58: pop
      59: return
}
