Compiled from "InjectionListener.java"
public interface org.atmosphere.inject.InjectionListener {
  public abstract <T, U extends T> void preFieldInjection(java.lang.reflect.Field, U, java.lang.Class<T>);

  public abstract <T, U extends T> void postFieldInjection(java.lang.reflect.Field, U, java.lang.Class<T>);

  public abstract <T, U extends T> void preMethodInjection(java.lang.reflect.Method, U, java.lang.Class<T>);

  public abstract <T, U extends T> void postMethodInjection(java.lang.reflect.Method, U, java.lang.Class<T>);

  public abstract <T, U extends T> void nullFieldInjectionFor(java.lang.reflect.Field, U, java.lang.Class<T>);

  public abstract void injectionFailed(java.util.LinkedHashSet<java.lang.Object>);

  public abstract <T, U extends T> void fieldInjectionException(java.lang.reflect.Field, U, java.lang.Class<T>, java.lang.Exception);

  public abstract <T, U extends T> void methodInjectionException(java.lang.reflect.Method, U, java.lang.Class<T>, java.lang.Exception);
}
