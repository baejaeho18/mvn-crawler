Compiled from "Config.java"
public final class org.atmosphere.nettosphere.Config$Builder {
  private final java.util.List<java.lang.String> paths;

  private java.lang.String atmosphereDotXmlPath;

  private java.util.concurrent.ExecutorService bossExecutor;

  private java.util.concurrent.ExecutorService workerExecutor;

  private java.lang.String host;

  private int port;

  private final java.util.Map<java.lang.String, java.lang.String> initParams;

  private final java.util.Map<java.lang.String, java.lang.Object> servletContextAttributes;

  private final java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereHandler> handlers;

  private final java.util.Map<java.lang.String, org.atmosphere.websocket.WebSocketHandler> webSocketHandlers;

  private java.lang.Class<? extends org.atmosphere.websocket.WebSocketProtocol> webSocketProtocol;

  private java.lang.Class<? extends org.atmosphere.cpr.Broadcaster> broadcasterClass;

  private org.atmosphere.cpr.BroadcasterFactory broadcasterFactory;

  private java.lang.Class<? extends org.atmosphere.cpr.BroadcasterCache> broadcasterCache;

  private final java.util.List<org.atmosphere.cpr.AtmosphereInterceptor> interceptors;

  private final java.util.List<java.lang.String> excludedInterceptors;

  private java.lang.String librariesPath;

  private java.lang.String mappingPath;

  private final java.util.List<java.lang.Class<?>> packages;

  private javax.net.ssl.SSLContext context;

  private java.lang.String[] enabledCipherSuites;

  private io.netty.handler.ssl.SslContext sslContext;

  private org.atmosphere.nettosphere.util.SSLContextListener contextListener;

  private final java.util.LinkedList<io.netty.channel.ChannelInboundHandler> nettyHandlers;

  private boolean supportChunking;

  private boolean aggregateRequestBodyInMemory;

  private boolean socketNoTcpDelay;

  private boolean socketKeepAlive;

  private int maxContentLength;

  private boolean enablePong;

  private int maxWebSocketFrameSize;

  private int maxWebSocketFrameAggregatorContentLength;

  private boolean textFrameAsBinary;

  private java.lang.String subProtocols;

  private boolean noInternalAlloc;

  private boolean binaryWrite;

  private boolean epoll;

  private boolean webSocketOnly;

  private boolean shareHeaders;

  private org.atmosphere.nettosphere.IOExceptionHandler ioExceptionHandler;

  public org.atmosphere.nettosphere.Config$Builder();
    Code:
       0: aload_0
       1: invokespecial #40                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #41                 // class java/util/ArrayList
       8: dup
       9: invokespecial #42                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #34                 // Field paths:Ljava/util/List;
      15: aload_0
      16: ldc           #44                 // String /META-INF/atmosphere.xml
      18: putfield      #33                 // Field atmosphereDotXmlPath:Ljava/lang/String;
      21: aload_0
      22: ldc           #45                 // String 0.0.0.0
      24: putfield      #37                 // Field host:Ljava/lang/String;
      27: aload_0
      28: sipush        8080
      31: putfield      #36                 // Field port:I
      34: aload_0
      35: new           #46                 // class java/util/HashMap
      38: dup
      39: invokespecial #47                 // Method java/util/HashMap."<init>":()V
      42: putfield      #35                 // Field initParams:Ljava/util/Map;
      45: aload_0
      46: new           #46                 // class java/util/HashMap
      49: dup
      50: invokespecial #47                 // Method java/util/HashMap."<init>":()V
      53: putfield      #7                  // Field servletContextAttributes:Ljava/util/Map;
      56: aload_0
      57: new           #46                 // class java/util/HashMap
      60: dup
      61: invokespecial #47                 // Method java/util/HashMap."<init>":()V
      64: putfield      #31                 // Field handlers:Ljava/util/Map;
      67: aload_0
      68: new           #46                 // class java/util/HashMap
      71: dup
      72: invokespecial #47                 // Method java/util/HashMap."<init>":()V
      75: putfield      #30                 // Field webSocketHandlers:Ljava/util/Map;
      78: aload_0
      79: ldc           #48                 // class org/atmosphere/websocket/protocol/SimpleHttpProtocol
      81: putfield      #27                 // Field webSocketProtocol:Ljava/lang/Class;
      84: aload_0
      85: new           #41                 // class java/util/ArrayList
      88: dup
      89: invokespecial #42                 // Method java/util/ArrayList."<init>":()V
      92: putfield      #26                 // Field interceptors:Ljava/util/List;
      95: aload_0
      96: new           #41                 // class java/util/ArrayList
      99: dup
     100: invokespecial #42                 // Method java/util/ArrayList."<init>":()V
     103: putfield      #12                 // Field excludedInterceptors:Ljava/util/List;
     106: aload_0
     107: new           #49                 // class java/lang/StringBuilder
     110: dup
     111: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
     114: ldc           #51                 // String .
     116: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: getstatic     #53                 // Field java/io/File.separator:Ljava/lang/String;
     122: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: ldc           #54                 // String lib
     127: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: putfield      #25                 // Field librariesPath:Ljava/lang/String;
     136: aload_0
     137: ldc           #56                 // String
     139: putfield      #23                 // Field mappingPath:Ljava/lang/String;
     142: aload_0
     143: new           #41                 // class java/util/ArrayList
     146: dup
     147: invokespecial #42                 // Method java/util/ArrayList."<init>":()V
     150: putfield      #24                 // Field packages:Ljava/util/List;
     153: aload_0
     154: new           #57                 // class java/util/LinkedList
     157: dup
     158: invokespecial #58                 // Method java/util/LinkedList."<init>":()V
     161: putfield      #18                 // Field nettyHandlers:Ljava/util/LinkedList;
     164: aload_0
     165: iconst_1
     166: putfield      #17                 // Field supportChunking:Z
     169: aload_0
     170: iconst_1
     171: putfield      #16                 // Field aggregateRequestBodyInMemory:Z
     174: aload_0
     175: iconst_1
     176: putfield      #14                 // Field socketNoTcpDelay:Z
     179: aload_0
     180: iconst_1
     181: putfield      #15                 // Field socketKeepAlive:Z
     184: aload_0
     185: ldc           #59                 // int 65536
     187: putfield      #13                 // Field maxContentLength:I
     190: aload_0
     191: iconst_0
     192: putfield      #11                 // Field enablePong:Z
     195: aload_0
     196: ldc           #59                 // int 65536
     198: putfield      #10                 // Field maxWebSocketFrameSize:I
     201: aload_0
     202: ldc           #59                 // int 65536
     204: putfield      #9                  // Field maxWebSocketFrameAggregatorContentLength:I
     207: aload_0
     208: iconst_0
     209: putfield      #8                  // Field textFrameAsBinary:Z
     212: aload_0
     213: ldc           #56                 // String
     215: putfield      #6                  // Field subProtocols:Ljava/lang/String;
     218: aload_0
     219: iconst_0
     220: putfield      #5                  // Field noInternalAlloc:Z
     223: aload_0
     224: iconst_0
     225: putfield      #4                  // Field binaryWrite:Z
     228: aload_0
     229: iconst_0
     230: putfield      #2                  // Field epoll:Z
     233: aload_0
     234: invokedynamic #60,  0             // InvokeDynamic #0:of:()Lorg/atmosphere/nettosphere/IOExceptionHandler;
     239: putfield      #1                  // Field ioExceptionHandler:Lorg/atmosphere/nettosphere/IOExceptionHandler;
     242: return

  public org.atmosphere.nettosphere.Config$Builder shareHeaders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #61                 // Field shareHeaders:Z
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder sslContext(javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field context:Ljavax/net/ssl/SSLContext;
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder enabledCipherSuites(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field enabledCipherSuites:[Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder sslContext(io.netty.handler.ssl.SslContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field sslContext:Lio/netty/handler/ssl/SslContext;
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder maxWebSocketFrameSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field maxWebSocketFrameSize:I
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder maxWebSocketFrameAggregatorContentLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field maxWebSocketFrameAggregatorContentLength:I
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder sslContextListener(org.atmosphere.nettosphere.util.SSLContextListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field contextListener:Lorg/atmosphere/nettosphere/util/SSLContextListener;
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder mappingPath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field mappingPath:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder enablePong(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field enablePong:Z
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder maxChunkContentLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field maxContentLength:I
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder scanLibrary(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field librariesPath:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder configFile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field atmosphereDotXmlPath:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder bossExecutor(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field bossExecutor:Ljava/util/concurrent/ExecutorService;
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder workerExecutor(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field workerExecutor:Ljava/util/concurrent/ExecutorService;
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder host(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field host:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder port(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #36                 // Field port:I
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder initParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #35                 // Field initParams:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public org.atmosphere.nettosphere.Config$Builder resource(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #34                 // Field paths:Ljava/util/List;
       4: aload_1
       5: invokeinterface #63,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.atmosphere.nettosphere.Config$Builder resource(java.lang.String, org.atmosphere.cpr.AtmosphereHandler);
    Code:
       0: aload_0
       1: getfield      #31                 // Field handlers:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public org.atmosphere.nettosphere.Config$Builder resource(java.lang.String, org.atmosphere.websocket.WebSocketHandler);
    Code:
       0: aload_0
       1: getfield      #30                 // Field webSocketHandlers:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public org.atmosphere.nettosphere.Config$Builder resource(java.lang.String, javax.servlet.Servlet);
    Code:
       0: aload_0
       1: getfield      #31                 // Field handlers:Ljava/util/Map;
       4: aload_1
       5: new           #64                 // class org/atmosphere/handler/ReflectorServletProcessor
       8: dup
       9: aload_2
      10: invokespecial #65                 // Method org/atmosphere/handler/ReflectorServletProcessor."<init>":(Ljavax/servlet/Servlet;)V
      13: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: areturn

  public org.atmosphere.nettosphere.Config$Builder resource(org.atmosphere.nettosphere.Handler);
    Code:
       0: aload_0
       1: ldc           #66                 // String /*
       3: aload_1
       4: invokevirtual #67                 // Method resource:(Ljava/lang/String;Lorg/atmosphere/nettosphere/Handler;)Lorg/atmosphere/nettosphere/Config$Builder;
       7: areturn

  public org.atmosphere.nettosphere.Config$Builder resource(java.lang.String, org.atmosphere.nettosphere.Handler);
    Code:
       0: aload_0
       1: getfield      #31                 // Field handlers:Ljava/util/Map;
       4: aload_1
       5: new           #68                 // class org/atmosphere/nettosphere/Config$Builder$1
       8: dup
       9: aload_0
      10: aload_2
      11: invokespecial #69                 // Method org/atmosphere/nettosphere/Config$Builder$1."<init>":(Lorg/atmosphere/nettosphere/Config$Builder;Lorg/atmosphere/nettosphere/Handler;)V
      14: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: areturn

  public org.atmosphere.nettosphere.Config$Builder resource(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #24                 // Field packages:Ljava/util/List;
       4: aload_1
       5: invokeinterface #63,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.atmosphere.nettosphere.Config$Builder resource(java.lang.String, java.lang.Class<?>);
    Code:
       0: ldc           #70                 // class org/atmosphere/cpr/AtmosphereHandler
       2: aload_2
       3: invokevirtual #71                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifeq          32
       9: aload_0
      10: getfield      #31                 // Field handlers:Ljava/util/Map;
      13: aload_1
      14: ldc           #70                 // class org/atmosphere/cpr/AtmosphereHandler
      16: aload_2
      17: invokevirtual #72                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      20: invokevirtual #73                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      23: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: goto          116
      32: ldc           #74                 // class org/atmosphere/websocket/WebSocketHandler
      34: aload_2
      35: invokevirtual #71                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      38: ifeq          64
      41: aload_0
      42: getfield      #30                 // Field webSocketHandlers:Ljava/util/Map;
      45: aload_1
      46: ldc           #74                 // class org/atmosphere/websocket/WebSocketHandler
      48: aload_2
      49: invokevirtual #72                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      52: invokevirtual #73                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      55: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: goto          116
      64: ldc           #75                 // class javax/servlet/Servlet
      66: aload_2
      67: invokevirtual #71                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      70: ifeq          106
      73: aload_0
      74: getfield      #31                 // Field handlers:Ljava/util/Map;
      77: aload_1
      78: new           #64                 // class org/atmosphere/handler/ReflectorServletProcessor
      81: dup
      82: ldc           #75                 // class javax/servlet/Servlet
      84: aload_2
      85: invokevirtual #72                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      88: invokevirtual #73                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      91: checkcast     #75                 // class javax/servlet/Servlet
      94: invokespecial #65                 // Method org/atmosphere/handler/ReflectorServletProcessor."<init>":(Ljavax/servlet/Servlet;)V
      97: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     102: pop
     103: goto          116
     106: new           #76                 // class java/lang/IllegalStateException
     109: dup
     110: ldc           #77                 // String You class must implements AtmosphereHandler or be a Servlet
     112: invokespecial #78                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     115: athrow
     116: goto          131
     119: astore_3
     120: invokestatic  #80                 // Method org/atmosphere/nettosphere/Config.access$3900:()Lorg/slf4j/Logger;
     123: ldc           #81                 // String Invalid resource {}
     125: aload_2
     126: invokeinterface #82,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     131: aload_0
     132: areturn
    Exception table:
       from    to  target type
           0   116   119   Class java/lang/Exception

  public org.atmosphere.nettosphere.Config$Builder broadcaster(java.lang.Class<? extends org.atmosphere.cpr.Broadcaster>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field broadcasterClass:Ljava/lang/Class;
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder broadcasterFactory(org.atmosphere.cpr.BroadcasterFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field broadcasterFactory:Lorg/atmosphere/cpr/BroadcasterFactory;
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder broadcasterCache(java.lang.Class<? extends org.atmosphere.cpr.BroadcasterCache>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field broadcasterCache:Ljava/lang/Class;
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder webSocketProtocol(java.lang.Class<? extends org.atmosphere.websocket.WebSocketProtocol>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field webSocketProtocol:Ljava/lang/Class;
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder interceptor(org.atmosphere.cpr.AtmosphereInterceptor);
    Code:
       0: aload_0
       1: getfield      #26                 // Field interceptors:Ljava/util/List;
       4: aload_1
       5: invokeinterface #63,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.atmosphere.nettosphere.Config$Builder excludeInterceptor(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field excludedInterceptors:Ljava/util/List;
       4: aload_1
       5: invokeinterface #63,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.atmosphere.nettosphere.Config$Builder channelUpstreamHandler(io.netty.channel.ChannelInboundHandler);
    Code:
       0: aload_0
       1: getfield      #18                 // Field nettyHandlers:Ljava/util/LinkedList;
       4: aload_1
       5: invokevirtual #83                 // Method java/util/LinkedList.addLast:(Ljava/lang/Object;)V
       8: aload_0
       9: areturn

  public org.atmosphere.nettosphere.Config$Builder supportChunking(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field supportChunking:Z
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder aggregateRequestBodyInMemory(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field aggregateRequestBodyInMemory:Z
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder socketNoTcpDelay(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field socketNoTcpDelay:Z
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder socketKeepAlive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field socketKeepAlive:Z
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder textFrameAsBinary(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field textFrameAsBinary:Z
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder subProtocols(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field subProtocols:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder noInternalAlloc(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field noInternalAlloc:Z
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder binaryWrite(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field binaryWrite:Z
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder webSocketOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field webSocketOnly:Z
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config$Builder ioExceptionHandler(org.atmosphere.nettosphere.IOExceptionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field ioExceptionHandler:Lorg/atmosphere/nettosphere/IOExceptionHandler;
       5: aload_0
       6: areturn

  public org.atmosphere.nettosphere.Config build();
    Code:
       0: aload_0
       1: getfield      #34                 // Field paths:Ljava/util/List;
       4: invokeinterface #84,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          24
      12: aload_0
      13: getfield      #34                 // Field paths:Ljava/util/List;
      16: ldc           #85                 // String /
      18: invokeinterface #63,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: aload_0
      25: getfield      #22                 // Field context:Ljavax/net/ssl/SSLContext;
      28: ifnull        67
      31: aload_0
      32: getfield      #21                 // Field enabledCipherSuites:[Ljava/lang/String;
      35: ifnonnull     48
      38: new           #76                 // class java/lang/IllegalStateException
      41: dup
      42: ldc           #86                 // String Incomplete Config: SSLContext requires cipherSuites to be specified.
      44: invokespecial #78                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: getfield      #19                 // Field contextListener:Lorg/atmosphere/nettosphere/util/SSLContextListener;
      52: ifnonnull     67
      55: aload_0
      56: new           #87                 // class org/atmosphere/nettosphere/Config$Builder$2
      59: dup
      60: aload_0
      61: invokespecial #88                 // Method org/atmosphere/nettosphere/Config$Builder$2."<init>":(Lorg/atmosphere/nettosphere/Config$Builder;)V
      64: putfield      #19                 // Field contextListener:Lorg/atmosphere/nettosphere/util/SSLContextListener;
      67: new           #89                 // class org/atmosphere/nettosphere/Config
      70: dup
      71: aload_0
      72: invokespecial #90                 // Method org/atmosphere/nettosphere/Config."<init>":(Lorg/atmosphere/nettosphere/Config$Builder;)V
      75: areturn

  public org.atmosphere.nettosphere.Config$Builder servletContextAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #7                  // Field servletContextAttributes:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public org.atmosphere.nettosphere.Config$Builder epoll(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field epoll:Z
       5: aload_0
       6: areturn

  private static boolean lambda$new$0(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: iconst_1
       1: ireturn

  static java.util.concurrent.ExecutorService access$000(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #39                 // Field bossExecutor:Ljava/util/concurrent/ExecutorService;
       4: areturn

  static java.util.concurrent.ExecutorService access$100(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #38                 // Field workerExecutor:Ljava/util/concurrent/ExecutorService;
       4: areturn

  static java.lang.String access$200(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #37                 // Field host:Ljava/lang/String;
       4: areturn

  static int access$300(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #36                 // Field port:I
       4: ireturn

  static java.util.Map access$400(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #35                 // Field initParams:Ljava/util/Map;
       4: areturn

  static java.util.List access$500(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #34                 // Field paths:Ljava/util/List;
       4: areturn

  static java.lang.String access$600(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #33                 // Field atmosphereDotXmlPath:Ljava/lang/String;
       4: areturn

  static java.lang.Class access$700(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #32                 // Field broadcasterClass:Ljava/lang/Class;
       4: areturn

  static java.util.Map access$800(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #31                 // Field handlers:Ljava/util/Map;
       4: areturn

  static java.util.Map access$900(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #30                 // Field webSocketHandlers:Ljava/util/Map;
       4: areturn

  static org.atmosphere.cpr.BroadcasterFactory access$1000(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #29                 // Field broadcasterFactory:Lorg/atmosphere/cpr/BroadcasterFactory;
       4: areturn

  static java.lang.Class access$1100(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #28                 // Field broadcasterCache:Ljava/lang/Class;
       4: areturn

  static java.lang.Class access$1200(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #27                 // Field webSocketProtocol:Ljava/lang/Class;
       4: areturn

  static java.util.List access$1300(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #26                 // Field interceptors:Ljava/util/List;
       4: areturn

  static java.lang.String access$1400(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #25                 // Field librariesPath:Ljava/lang/String;
       4: areturn

  static java.util.List access$1500(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #24                 // Field packages:Ljava/util/List;
       4: areturn

  static java.lang.String access$1600(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #23                 // Field mappingPath:Ljava/lang/String;
       4: areturn

  static javax.net.ssl.SSLContext access$1700(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #22                 // Field context:Ljavax/net/ssl/SSLContext;
       4: areturn

  static java.lang.String[] access$1800(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #21                 // Field enabledCipherSuites:[Ljava/lang/String;
       4: areturn

  static io.netty.handler.ssl.SslContext access$1900(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #20                 // Field sslContext:Lio/netty/handler/ssl/SslContext;
       4: areturn

  static org.atmosphere.nettosphere.util.SSLContextListener access$2000(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #19                 // Field contextListener:Lorg/atmosphere/nettosphere/util/SSLContextListener;
       4: areturn

  static java.util.LinkedList access$2100(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #18                 // Field nettyHandlers:Ljava/util/LinkedList;
       4: areturn

  static boolean access$2200(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #17                 // Field supportChunking:Z
       4: ireturn

  static boolean access$2300(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #16                 // Field aggregateRequestBodyInMemory:Z
       4: ireturn

  static boolean access$2400(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #15                 // Field socketKeepAlive:Z
       4: ireturn

  static boolean access$2500(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #14                 // Field socketNoTcpDelay:Z
       4: ireturn

  static int access$2600(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxContentLength:I
       4: ireturn

  static java.util.List access$2700(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #12                 // Field excludedInterceptors:Ljava/util/List;
       4: areturn

  static boolean access$2800(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #11                 // Field enablePong:Z
       4: ireturn

  static int access$2900(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #10                 // Field maxWebSocketFrameSize:I
       4: ireturn

  static int access$3000(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #9                  // Field maxWebSocketFrameAggregatorContentLength:I
       4: ireturn

  static boolean access$3100(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #8                  // Field textFrameAsBinary:Z
       4: ireturn

  static java.util.Map access$3200(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #7                  // Field servletContextAttributes:Ljava/util/Map;
       4: areturn

  static java.lang.String access$3300(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #6                  // Field subProtocols:Ljava/lang/String;
       4: areturn

  static boolean access$3400(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field noInternalAlloc:Z
       4: ireturn

  static boolean access$3500(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field binaryWrite:Z
       4: ireturn

  static boolean access$3600(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field webSocketOnly:Z
       4: ireturn

  static boolean access$3700(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field epoll:Z
       4: ireturn

  static org.atmosphere.nettosphere.IOExceptionHandler access$3800(org.atmosphere.nettosphere.Config$Builder);
    Code:
       0: aload_0
       1: getfield      #1                  // Field ioExceptionHandler:Lorg/atmosphere/nettosphere/IOExceptionHandler;
       4: areturn
}
