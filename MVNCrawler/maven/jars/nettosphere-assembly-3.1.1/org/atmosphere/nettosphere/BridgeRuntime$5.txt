Compiled from "BridgeRuntime.java"
class org.atmosphere.nettosphere.BridgeRuntime$5 implements java.lang.Runnable {
  final java.util.concurrent.atomic.AtomicReference val$w;

  final org.atmosphere.cpr.Action val$action;

  final org.atmosphere.nettosphere.BridgeRuntime$State val$state;

  final java.util.concurrent.atomic.AtomicReference val$f;

  final org.atmosphere.nettosphere.BridgeRuntime this$0;

  org.atmosphere.nettosphere.BridgeRuntime$5(org.atmosphere.nettosphere.BridgeRuntime, java.util.concurrent.atomic.AtomicReference, org.atmosphere.cpr.Action, org.atmosphere.nettosphere.BridgeRuntime$State, java.util.concurrent.atomic.AtomicReference);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/atmosphere/nettosphere/BridgeRuntime;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$w:Ljava/util/concurrent/atomic/AtomicReference;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$action:Lorg/atmosphere/cpr/Action;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$state:Lorg/atmosphere/nettosphere/BridgeRuntime$State;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$f:Ljava/util/concurrent/atomic/AtomicReference;
      27: aload_0
      28: invokespecial #6                  // Method java/lang/Object."<init>":()V
      31: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$w:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #8                  // class org/atmosphere/nettosphere/ChannelWriter
      10: invokevirtual #9                  // Method org/atmosphere/nettosphere/ChannelWriter.isClosed:()Z
      13: ifne          85
      16: invokestatic  #10                 // Method java/lang/System.currentTimeMillis:()J
      19: aload_0
      20: getfield      #2                  // Field val$w:Ljava/util/concurrent/atomic/AtomicReference;
      23: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      26: checkcast     #8                  // class org/atmosphere/nettosphere/ChannelWriter
      29: invokevirtual #11                 // Method org/atmosphere/nettosphere/ChannelWriter.lastTick:()J
      32: lsub
      33: aload_0
      34: getfield      #3                  // Field val$action:Lorg/atmosphere/cpr/Action;
      37: invokevirtual #12                 // Method org/atmosphere/cpr/Action.timeout:()J
      40: lcmp
      41: ifle          85
      44: aload_0
      45: getfield      #4                  // Field val$state:Lorg/atmosphere/nettosphere/BridgeRuntime$State;
      48: invokevirtual #13                 // Method org/atmosphere/nettosphere/BridgeRuntime$State.resource:()Lorg/atmosphere/cpr/AtmosphereResourceImpl;
      51: astore_1
      52: aload_1
      53: ifnull        85
      56: aload_0
      57: getfield      #1                  // Field this$0:Lorg/atmosphere/nettosphere/BridgeRuntime;
      60: invokestatic  #14                 // Method org/atmosphere/nettosphere/BridgeRuntime.access$1000:(Lorg/atmosphere/nettosphere/BridgeRuntime;)Lorg/atmosphere/cpr/AsynchronousProcessor;
      63: aload_1
      64: iconst_0
      65: invokevirtual #15                 // Method org/atmosphere/cpr/AsynchronousProcessor.endRequest:(Lorg/atmosphere/cpr/AtmosphereResourceImpl;Z)V
      68: aload_0
      69: getfield      #5                  // Field val$f:Ljava/util/concurrent/atomic/AtomicReference;
      72: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      75: checkcast     #16                 // class java/util/concurrent/Future
      78: iconst_1
      79: invokeinterface #17,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      84: pop
      85: return
}
