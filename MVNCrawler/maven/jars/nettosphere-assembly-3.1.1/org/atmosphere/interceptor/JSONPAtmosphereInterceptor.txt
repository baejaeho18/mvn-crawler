Compiled from "JSONPAtmosphereInterceptor.java"
public class org.atmosphere.interceptor.JSONPAtmosphereInterceptor extends org.atmosphere.cpr.AtmosphereInterceptorAdapter {
  private static final org.slf4j.Logger logger;

  private java.lang.String endChunk;

  private java.lang.String startChunk;

  private org.atmosphere.cpr.AtmosphereConfig config;

  private static final java.lang.String CONTENT_TYPE;

  private static final java.lang.String PATTERN;

  public org.atmosphere.interceptor.JSONPAtmosphereInterceptor();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/atmosphere/cpr/AtmosphereInterceptorAdapter."<init>":()V
       4: aload_0
       5: ldc           #6                  // String \"});
       7: putfield      #1                  // Field endChunk:Ljava/lang/String;
      10: aload_0
      11: ldc           #7                  // String ({\"message\" : \"
      13: putfield      #2                  // Field startChunk:Ljava/lang/String;
      16: return

  public void configure(org.atmosphere.cpr.AtmosphereConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field config:Lorg/atmosphere/cpr/AtmosphereConfig;
       5: return

  public org.atmosphere.cpr.Action inspect(org.atmosphere.cpr.AtmosphereResource);
    Code:
       0: aload_1
       1: invokestatic  #8                  // Method org/atmosphere/util/Utils.webSocketMessage:(Lorg/atmosphere/cpr/AtmosphereResource;)Z
       4: ifeq          11
       7: getstatic     #9                  // Field org/atmosphere/cpr/Action.CONTINUE:Lorg/atmosphere/cpr/Action;
      10: areturn
      11: aload_1
      12: invokeinterface #10,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.getRequest:()Lorg/atmosphere/cpr/AtmosphereRequest;
      17: astore_2
      18: aload_1
      19: invokeinterface #11,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.getResponse:()Lorg/atmosphere/cpr/AtmosphereResponse;
      24: astore_3
      25: aload_2
      26: invokeinterface #12,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getRequestURI:()Ljava/lang/String;
      31: ifnonnull     39
      34: ldc           #13                 // String
      36: goto          45
      39: aload_2
      40: invokeinterface #12,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getRequestURI:()Ljava/lang/String;
      45: astore        4
      47: aload         4
      49: ldc           #14                 // String jsonp
      51: invokevirtual #15                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      54: istore        5
      56: aload_1
      57: invokeinterface #16,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.transport:()Lorg/atmosphere/cpr/AtmosphereResource$TRANSPORT;
      62: getstatic     #17                 // Field org/atmosphere/cpr/AtmosphereResource$TRANSPORT.JSONP:Lorg/atmosphere/cpr/AtmosphereResource$TRANSPORT;
      65: invokevirtual #18                 // Method org/atmosphere/cpr/AtmosphereResource$TRANSPORT.equals:(Ljava/lang/Object;)Z
      68: ifne          76
      71: iload         5
      73: ifeq          176
      76: aload_0
      77: aload_1
      78: invokespecial #19                 // Method org/atmosphere/cpr/AtmosphereInterceptorAdapter.inspect:(Lorg/atmosphere/cpr/AtmosphereResource;)Lorg/atmosphere/cpr/Action;
      81: pop
      82: iload         5
      84: ifeq          99
      87: aload_0
      88: ldc           #20                 // String (\"
      90: putfield      #2                  // Field startChunk:Ljava/lang/String;
      93: aload_0
      94: ldc           #21                 // String \");\r\n\r\n
      96: putfield      #1                  // Field endChunk:Ljava/lang/String;
      99: aload_3
     100: ldc           #23                 // String application/javascript; charset=utf-8
     102: invokeinterface #24,  2           // InterfaceMethod org/atmosphere/cpr/AtmosphereResponse.setContentType:(Ljava/lang/String;)V
     107: aload_3
     108: invokeinterface #25,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResponse.getAsyncIOWriter:()Lorg/atmosphere/cpr/AsyncIOWriter;
     113: astore        6
     115: ldc           #26                 // class org/atmosphere/cpr/AtmosphereInterceptorWriter
     117: aload         6
     119: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     122: invokevirtual #28                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     125: ifeq          154
     128: ldc           #26                 // class org/atmosphere/cpr/AtmosphereInterceptorWriter
     130: aload         6
     132: invokevirtual #29                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     135: checkcast     #26                 // class org/atmosphere/cpr/AtmosphereInterceptorWriter
     138: new           #30                 // class org/atmosphere/interceptor/JSONPAtmosphereInterceptor$1
     141: dup
     142: aload_0
     143: aload_2
     144: invokespecial #31                 // Method org/atmosphere/interceptor/JSONPAtmosphereInterceptor$1."<init>":(Lorg/atmosphere/interceptor/JSONPAtmosphereInterceptor;Lorg/atmosphere/cpr/AtmosphereRequest;)V
     147: invokevirtual #32                 // Method org/atmosphere/cpr/AtmosphereInterceptorWriter.interceptor:(Lorg/atmosphere/cpr/AsyncIOInterceptor;)Lorg/atmosphere/cpr/AtmosphereInterceptorWriter;
     150: pop
     151: goto          176
     154: getstatic     #33                 // Field logger:Lorg/slf4j/Logger;
     157: ldc           #34                 // String Unable to apply {}. Your AsyncIOWriter must implement {}
     159: aload_0
     160: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     163: invokevirtual #35                 // Method java/lang/Class.getName:()Ljava/lang/String;
     166: ldc           #26                 // class org/atmosphere/cpr/AtmosphereInterceptorWriter
     168: invokevirtual #35                 // Method java/lang/Class.getName:()Ljava/lang/String;
     171: invokeinterface #36,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     176: getstatic     #9                  // Field org/atmosphere/cpr/Action.CONTINUE:Lorg/atmosphere/cpr/Action;
     179: areturn

  private java.lang.String escapeForJavaScript(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #37                 // Method org/atmosphere/util/StringEscapeUtils.escapeJavaScript:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: goto          23
       8: astore_2
       9: getstatic     #33                 // Field logger:Lorg/slf4j/Logger;
      12: ldc           #39                 // String Failed to escape
      14: aload_2
      15: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      20: ldc           #13                 // String
      22: astore_1
      23: aload_1
      24: areturn
    Exception table:
       from    to  target type
           0     5     8   Class java/lang/Exception

  public java.lang.String toString();
    Code:
       0: ldc           #41                 // String JSONP Interceptor Support
       2: areturn

  static java.lang.String access$000(org.atmosphere.interceptor.JSONPAtmosphereInterceptor, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method escapeForJavaScript:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  static org.atmosphere.cpr.AtmosphereConfig access$100(org.atmosphere.interceptor.JSONPAtmosphereInterceptor);
    Code:
       0: aload_0
       1: getfield      #3                  // Field config:Lorg/atmosphere/cpr/AtmosphereConfig;
       4: areturn

  static java.lang.String access$200(org.atmosphere.interceptor.JSONPAtmosphereInterceptor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field startChunk:Ljava/lang/String;
       4: areturn

  static java.lang.String access$300(org.atmosphere.interceptor.JSONPAtmosphereInterceptor);
    Code:
       0: aload_0
       1: getfield      #1                  // Field endChunk:Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: ldc           #22                 // class org/atmosphere/interceptor/JSONPAtmosphereInterceptor
       2: invokestatic  #42                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #33                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
