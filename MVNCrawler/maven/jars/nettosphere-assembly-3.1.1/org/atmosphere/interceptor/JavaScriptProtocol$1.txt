Compiled from "JavaScriptProtocol.java"
class org.atmosphere.interceptor.JavaScriptProtocol$1 extends org.atmosphere.cpr.AtmosphereResourceEventListenerAdapter$OnSuspend {
  final org.atmosphere.cpr.AtmosphereResponse val$response;

  final java.util.concurrent.atomic.AtomicReference val$protocolMessage;

  final org.atmosphere.cpr.AtmosphereResourceImpl val$r;

  final org.atmosphere.interceptor.JavaScriptProtocol this$0;

  org.atmosphere.interceptor.JavaScriptProtocol$1(org.atmosphere.interceptor.JavaScriptProtocol, org.atmosphere.cpr.AtmosphereResponse, java.util.concurrent.atomic.AtomicReference, org.atmosphere.cpr.AtmosphereResourceImpl);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/atmosphere/interceptor/JavaScriptProtocol;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$response:Lorg/atmosphere/cpr/AtmosphereResponse;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$protocolMessage:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$r:Lorg/atmosphere/cpr/AtmosphereResourceImpl;
      21: aload_0
      22: invokespecial #5                  // Method org/atmosphere/cpr/AtmosphereResourceEventListenerAdapter$OnSuspend."<init>":()V
      25: return

  public void onSuspend(org.atmosphere.cpr.AtmosphereResourceEvent);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/atmosphere/interceptor/JavaScriptProtocol;
       4: invokestatic  #6                  // Method org/atmosphere/interceptor/JavaScriptProtocol.access$000:(Lorg/atmosphere/interceptor/JavaScriptProtocol;)I
       7: ifle          45
      10: aload_0
      11: getfield      #1                  // Field this$0:Lorg/atmosphere/interceptor/JavaScriptProtocol;
      14: invokestatic  #7                  // Method org/atmosphere/interceptor/JavaScriptProtocol.access$100:(Lorg/atmosphere/interceptor/JavaScriptProtocol;)Ljava/util/concurrent/ScheduledExecutorService;
      17: new           #8                  // class org/atmosphere/interceptor/JavaScriptProtocol$1$1
      20: dup
      21: aload_0
      22: invokespecial #9                  // Method org/atmosphere/interceptor/JavaScriptProtocol$1$1."<init>":(Lorg/atmosphere/interceptor/JavaScriptProtocol$1;)V
      25: aload_0
      26: getfield      #1                  // Field this$0:Lorg/atmosphere/interceptor/JavaScriptProtocol;
      29: invokestatic  #6                  // Method org/atmosphere/interceptor/JavaScriptProtocol.access$000:(Lorg/atmosphere/interceptor/JavaScriptProtocol;)I
      32: i2l
      33: getstatic     #10                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      36: invokeinterface #11,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      41: pop
      42: goto          89
      45: aload_0
      46: getfield      #2                  // Field val$response:Lorg/atmosphere/cpr/AtmosphereResponse;
      49: aload_0
      50: getfield      #3                  // Field val$protocolMessage:Ljava/util/concurrent/atomic/AtomicReference;
      53: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      56: checkcast     #13                 // class java/lang/String
      59: invokeinterface #14,  2           // InterfaceMethod org/atmosphere/cpr/AtmosphereResponse.write:(Ljava/lang/String;)Lorg/atmosphere/cpr/AtmosphereResponse;
      64: pop
      65: aload_0
      66: getfield      #2                  // Field val$response:Lorg/atmosphere/cpr/AtmosphereResponse;
      69: invokeinterface #15,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResponse.flushBuffer:()V
      74: goto          89
      77: astore_2
      78: invokestatic  #17                 // Method org/atmosphere/interceptor/JavaScriptProtocol.access$200:()Lorg/slf4j/Logger;
      81: ldc           #18                 // String
      83: aload_2
      84: invokeinterface #19,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Throwable;)V
      89: aload_0
      90: getfield      #4                  // Field val$r:Lorg/atmosphere/cpr/AtmosphereResourceImpl;
      93: aload_0
      94: invokevirtual #20                 // Method org/atmosphere/cpr/AtmosphereResourceImpl.removeEventListener:(Lorg/atmosphere/cpr/AtmosphereResourceEventListener;)Lorg/atmosphere/cpr/AtmosphereResource;
      97: pop
      98: return
    Exception table:
       from    to  target type
          65    74    77   Class java/io/IOException
}
