Compiled from "AtmosphereResourceLifecycleInterceptor.java"
public class org.atmosphere.interceptor.AtmosphereResourceLifecycleInterceptor implements org.atmosphere.cpr.AtmosphereInterceptor {
  private java.lang.String method;

  private java.lang.Integer timeoutInSeconds;

  private static final org.slf4j.Logger logger;

  private final boolean force;

  private long timeoutInMilli;

  public org.atmosphere.interceptor.AtmosphereResourceLifecycleInterceptor();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #3                  // Method "<init>":(Z)V
       5: return

  public org.atmosphere.interceptor.AtmosphereResourceLifecycleInterceptor(boolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #5                  // String GET
       7: putfield      #6                  // Field method:Ljava/lang/String;
      10: aload_0
      11: iconst_m1
      12: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: putfield      #8                  // Field timeoutInSeconds:Ljava/lang/Integer;
      18: aload_0
      19: ldc2_w        #9                  // long -1l
      22: putfield      #11                 // Field timeoutInMilli:J
      25: aload_0
      26: iload_1
      27: putfield      #12                 // Field force:Z
      30: return

  public void configure(org.atmosphere.cpr.AtmosphereConfig);
    Code:
       0: aload_1
       1: ldc           #13                 // String org.atmosphere.interceptor.AtmosphereResourceLifecycleInterceptor.method
       3: invokevirtual #14                 // Method org/atmosphere/cpr/AtmosphereConfig.getInitParameter:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: ifnull        16
      11: aload_0
      12: aload_2
      13: putfield      #6                  // Field method:Ljava/lang/String;
      16: aload_1
      17: ldc           #15                 // String org.atmosphere.interceptor.AtmosphereResourceLifecycleInterceptor.timeout
      19: invokevirtual #14                 // Method org/atmosphere/cpr/AtmosphereConfig.getInitParameter:(Ljava/lang/String;)Ljava/lang/String;
      22: astore_2
      23: aload_2
      24: ifnull        56
      27: aload_0
      28: aload_2
      29: invokestatic  #16                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      32: putfield      #8                  // Field timeoutInSeconds:Ljava/lang/Integer;
      35: aload_0
      36: getstatic     #17                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      39: aload_0
      40: getfield      #8                  // Field timeoutInSeconds:Ljava/lang/Integer;
      43: invokevirtual #18                 // Method java/lang/Integer.intValue:()I
      46: i2l
      47: getstatic     #19                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      50: invokevirtual #20                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      53: putfield      #11                 // Field timeoutInMilli:J
      56: return

  public java.lang.String method();
    Code:
       0: aload_0
       1: getfield      #6                  // Field method:Ljava/lang/String;
       4: areturn

  public int timeoutInSeconds();
    Code:
       0: aload_0
       1: getfield      #8                  // Field timeoutInSeconds:Ljava/lang/Integer;
       4: invokevirtual #18                 // Method java/lang/Integer.intValue:()I
       7: ireturn

  public org.atmosphere.interceptor.AtmosphereResourceLifecycleInterceptor method(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field method:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.atmosphere.interceptor.AtmosphereResourceLifecycleInterceptor timeoutInSeconds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #8                  // Field timeoutInSeconds:Ljava/lang/Integer;
       8: aload_0
       9: getstatic     #17                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      12: iload_1
      13: i2l
      14: getstatic     #19                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      17: invokevirtual #20                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      20: putfield      #11                 // Field timeoutInMilli:J
      23: aload_0
      24: areturn

  public org.atmosphere.cpr.Action inspect(org.atmosphere.cpr.AtmosphereResource);
    Code:
       0: getstatic     #21                 // Field org/atmosphere/interceptor/AtmosphereResourceLifecycleInterceptor$2.$SwitchMap$org$atmosphere$cpr$AtmosphereResource$TRANSPORT:[I
       3: aload_1
       4: invokeinterface #22,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.transport:()Lorg/atmosphere/cpr/AtmosphereResource$TRANSPORT;
       9: invokevirtual #23                 // Method org/atmosphere/cpr/AtmosphereResource$TRANSPORT.ordinal:()I
      12: iaload
      13: tableswitch   { // 1 to 3
                     1: 40
                     2: 40
                     3: 40
               default: 51
          }
      40: aload_1
      41: iconst_1
      42: invokeinterface #24,  2           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.resumeOnBroadcast:(Z)Lorg/atmosphere/cpr/AtmosphereResource;
      47: pop
      48: goto          51
      51: getstatic     #25                 // Field org/atmosphere/cpr/Action.CONTINUE:Lorg/atmosphere/cpr/Action;
      54: areturn

  public void postInspect(org.atmosphere.cpr.AtmosphereResource);
    Code:
       0: aload_1
       1: invokeinterface #22,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.transport:()Lorg/atmosphere/cpr/AtmosphereResource$TRANSPORT;
       6: invokestatic  #26                 // Method org/atmosphere/util/Utils.pollableTransport:(Lorg/atmosphere/cpr/AtmosphereResource$TRANSPORT;)Z
       9: ifne          34
      12: aload_1
      13: invokeinterface #22,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.transport:()Lorg/atmosphere/cpr/AtmosphereResource$TRANSPORT;
      18: getstatic     #27                 // Field org/atmosphere/cpr/AtmosphereResource$TRANSPORT.UNDEFINED:Lorg/atmosphere/cpr/AtmosphereResource$TRANSPORT;
      21: invokevirtual #28                 // Method org/atmosphere/cpr/AtmosphereResource$TRANSPORT.equals:(Ljava/lang/Object;)Z
      24: ifne          34
      27: aload_1
      28: invokestatic  #29                 // Method org/atmosphere/util/Utils.webSocketMessage:(Lorg/atmosphere/cpr/AtmosphereResource;)Z
      31: ifeq          35
      34: return
      35: ldc           #30                 // class org/atmosphere/cpr/AtmosphereResourceImpl
      37: aload_1
      38: invokevirtual #31                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #30                 // class org/atmosphere/cpr/AtmosphereResourceImpl
      44: astore_2
      45: aload_0
      46: getfield      #12                 // Field force:Z
      49: ifne          72
      52: aload_2
      53: iconst_0
      54: invokevirtual #32                 // Method org/atmosphere/cpr/AtmosphereResourceImpl.getRequest:(Z)Lorg/atmosphere/cpr/AtmosphereRequest;
      57: invokeinterface #33,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getMethod:()Ljava/lang/String;
      62: aload_0
      63: getfield      #6                  // Field method:Ljava/lang/String;
      66: invokevirtual #34                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      69: ifeq          133
      72: aload_2
      73: invokevirtual #35                 // Method org/atmosphere/cpr/AtmosphereResourceImpl.action:()Lorg/atmosphere/cpr/Action;
      76: getstatic     #36                 // Field org/atmosphere/cpr/Action.CANCELLED:Lorg/atmosphere/cpr/Action;
      79: invokevirtual #37                 // Method org/atmosphere/cpr/Action.equals:(Ljava/lang/Object;)Z
      82: ifne          133
      85: aload_2
      86: invokevirtual #38                 // Method org/atmosphere/cpr/AtmosphereResourceImpl.isInScope:()Z
      89: ifeq          133
      92: getstatic     #2                  // Field logger:Lorg/slf4j/Logger;
      95: ldc           #39                 // String Marking AtmosphereResource {} for suspend operation
      97: aload_1
      98: invokeinterface #40,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.uuid:()Ljava/lang/String;
     103: invokeinterface #41,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     108: aload_1
     109: new           #42                 // class org/atmosphere/interceptor/AtmosphereResourceLifecycleInterceptor$1
     112: dup
     113: aload_0
     114: aload_1
     115: invokespecial #43                 // Method org/atmosphere/interceptor/AtmosphereResourceLifecycleInterceptor$1."<init>":(Lorg/atmosphere/interceptor/AtmosphereResourceLifecycleInterceptor;Lorg/atmosphere/cpr/AtmosphereResource;)V
     118: invokeinterface #44,  2           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.addEventListener:(Lorg/atmosphere/cpr/AtmosphereResourceEventListener;)Lorg/atmosphere/cpr/AtmosphereResource;
     123: aload_0
     124: getfield      #11                 // Field timeoutInMilli:J
     127: invokeinterface #45,  3           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.suspend:(J)Lorg/atmosphere/cpr/AtmosphereResource;
     132: pop
     133: return

  public void destroy();
    Code:
       0: return

  public java.lang.String toString();
    Code:
       0: ldc           #46                 // String Atmosphere LifeCycle
       2: areturn

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #2                  // Field logger:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #47                 // class org/atmosphere/interceptor/AtmosphereResourceLifecycleInterceptor
       2: invokestatic  #48                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #2                  // Field logger:Lorg/slf4j/Logger;
       8: return
}
