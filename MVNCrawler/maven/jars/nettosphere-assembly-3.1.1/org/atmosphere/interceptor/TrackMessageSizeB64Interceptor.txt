Compiled from "TrackMessageSizeB64Interceptor.java"
public class org.atmosphere.interceptor.TrackMessageSizeB64Interceptor extends org.atmosphere.cpr.AtmosphereInterceptorAdapter {
  private static final org.slf4j.Logger logger;

  private static final java.lang.String DELIMITER;

  private static final java.lang.String OUT_ENCODING;

  public static final java.lang.String SKIP_INTERCEPTOR;

  private final java.util.HashSet<java.lang.String> excludedContentTypes;

  private final org.atmosphere.interceptor.TrackMessageSizeB64Interceptor$Interceptor interceptor;

  public org.atmosphere.interceptor.TrackMessageSizeB64Interceptor();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/atmosphere/cpr/AtmosphereInterceptorAdapter."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/HashSet
       8: dup
       9: invokespecial #5                  // Method java/util/HashSet."<init>":()V
      12: putfield      #2                  // Field excludedContentTypes:Ljava/util/HashSet;
      15: aload_0
      16: new           #6                  // class org/atmosphere/interceptor/TrackMessageSizeB64Interceptor$Interceptor
      19: dup
      20: aload_0
      21: aconst_null
      22: invokespecial #7                  // Method org/atmosphere/interceptor/TrackMessageSizeB64Interceptor$Interceptor."<init>":(Lorg/atmosphere/interceptor/TrackMessageSizeB64Interceptor;Lorg/atmosphere/interceptor/TrackMessageSizeB64Interceptor$1;)V
      25: putfield      #8                  // Field interceptor:Lorg/atmosphere/interceptor/TrackMessageSizeB64Interceptor$Interceptor;
      28: return

  public void configure(org.atmosphere.cpr.AtmosphereConfig);
    Code:
       0: aload_1
       1: ldc           #9                  // String org.atmosphere.client.TrackMessageSizeInterceptor.excludedContentType
       3: invokevirtual #10                 // Method org/atmosphere/cpr/AtmosphereConfig.getInitParameter:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: ifnull        28
      11: aload_0
      12: getfield      #2                  // Field excludedContentTypes:Ljava/util/HashSet;
      15: aload_2
      16: ldc           #11                 // String ,
      18: invokevirtual #12                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      21: invokestatic  #13                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      24: invokevirtual #14                 // Method java/util/HashSet.addAll:(Ljava/util/Collection;)Z
      27: pop
      28: return

  public org.atmosphere.interceptor.TrackMessageSizeB64Interceptor excludedContentType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field excludedContentTypes:Ljava/util/HashSet;
       4: aload_1
       5: invokevirtual #15                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       8: invokevirtual #16                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      11: pop
      12: aload_0
      13: areturn

  public org.atmosphere.cpr.Action inspect(org.atmosphere.cpr.AtmosphereResource);
    Code:
       0: aload_1
       1: invokestatic  #17                 // Method org/atmosphere/util/Utils.webSocketMessage:(Lorg/atmosphere/cpr/AtmosphereResource;)Z
       4: ifeq          11
       7: getstatic     #18                 // Field org/atmosphere/cpr/Action.CONTINUE:Lorg/atmosphere/cpr/Action;
      10: areturn
      11: aload_1
      12: invokeinterface #19,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.getResponse:()Lorg/atmosphere/cpr/AtmosphereResponse;
      17: astore_2
      18: aload_0
      19: aload_1
      20: invokespecial #20                 // Method org/atmosphere/cpr/AtmosphereInterceptorAdapter.inspect:(Lorg/atmosphere/cpr/AtmosphereResource;)Lorg/atmosphere/cpr/Action;
      23: pop
      24: aload_2
      25: invokeinterface #21,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResponse.getAsyncIOWriter:()Lorg/atmosphere/cpr/AsyncIOWriter;
      30: astore_3
      31: ldc           #22                 // class org/atmosphere/cpr/AtmosphereInterceptorWriter
      33: aload_3
      34: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      37: invokevirtual #24                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      40: ifeq          63
      43: ldc           #22                 // class org/atmosphere/cpr/AtmosphereInterceptorWriter
      45: aload_3
      46: invokevirtual #25                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #22                 // class org/atmosphere/cpr/AtmosphereInterceptorWriter
      52: aload_0
      53: getfield      #8                  // Field interceptor:Lorg/atmosphere/interceptor/TrackMessageSizeB64Interceptor$Interceptor;
      56: invokevirtual #26                 // Method org/atmosphere/cpr/AtmosphereInterceptorWriter.interceptor:(Lorg/atmosphere/cpr/AsyncIOInterceptor;)Lorg/atmosphere/cpr/AtmosphereInterceptorWriter;
      59: pop
      60: goto          85
      63: getstatic     #27                 // Field logger:Lorg/slf4j/Logger;
      66: ldc           #28                 // String Unable to apply {}. Your AsyncIOWriter must implement {}
      68: aload_0
      69: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      72: invokevirtual #29                 // Method java/lang/Class.getName:()Ljava/lang/String;
      75: ldc           #22                 // class org/atmosphere/cpr/AtmosphereInterceptorWriter
      77: invokevirtual #29                 // Method java/lang/Class.getName:()Ljava/lang/String;
      80: invokeinterface #30,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      85: getstatic     #18                 // Field org/atmosphere/cpr/Action.CONTINUE:Lorg/atmosphere/cpr/Action;
      88: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #32                 // String  Track Message Size Base64 Interceptor using |
       2: areturn

  static java.util.HashSet access$100(org.atmosphere.interceptor.TrackMessageSizeB64Interceptor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field excludedContentTypes:Ljava/util/HashSet;
       4: areturn

  static {};
    Code:
       0: ldc           #31                 // class org/atmosphere/interceptor/TrackMessageSizeB64Interceptor
       2: invokestatic  #33                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #27                 // Field logger:Lorg/slf4j/Logger;
       8: new           #34                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #31                 // class org/atmosphere/interceptor/TrackMessageSizeB64Interceptor
      17: invokevirtual #29                 // Method java/lang/Class.getName:()Ljava/lang/String;
      20: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #37                 // String .skip
      25: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: putstatic     #39                 // Field SKIP_INTERCEPTOR:Ljava/lang/String;
      34: return
}
