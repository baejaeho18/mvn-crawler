Compiled from "SSEAtmosphereInterceptor.java"
class org.atmosphere.interceptor.SSEAtmosphereInterceptor$1 extends org.atmosphere.cpr.AsyncIOInterceptorAdapter {
  final org.atmosphere.cpr.AtmosphereResource val$r;

  final org.atmosphere.cpr.AtmosphereResponse val$response;

  final org.atmosphere.interceptor.SSEAtmosphereInterceptor this$0;

  org.atmosphere.interceptor.SSEAtmosphereInterceptor$1(org.atmosphere.interceptor.SSEAtmosphereInterceptor, org.atmosphere.cpr.AtmosphereResource, org.atmosphere.cpr.AtmosphereResponse);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/atmosphere/interceptor/SSEAtmosphereInterceptor;
       5: aload_0
       6: aload_2
       7: putfield      #3                  // Field val$r:Lorg/atmosphere/cpr/AtmosphereResource;
      10: aload_0
      11: aload_3
      12: putfield      #4                  // Field val$response:Lorg/atmosphere/cpr/AtmosphereResponse;
      15: aload_0
      16: invokespecial #5                  // Method org/atmosphere/cpr/AsyncIOInterceptorAdapter."<init>":()V
      19: return

  private boolean padding();
    Code:
       0: aload_0
       1: getfield      #3                  // Field val$r:Lorg/atmosphere/cpr/AtmosphereResource;
       4: invokeinterface #6,  1            // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.isSuspended:()Z
       9: ifne          24
      12: aload_0
      13: getfield      #2                  // Field this$0:Lorg/atmosphere/interceptor/SSEAtmosphereInterceptor;
      16: aload_0
      17: getfield      #4                  // Field val$response:Lorg/atmosphere/cpr/AtmosphereResponse;
      20: invokestatic  #7                  // Method org/atmosphere/interceptor/SSEAtmosphereInterceptor.access$000:(Lorg/atmosphere/interceptor/SSEAtmosphereInterceptor;Lorg/atmosphere/cpr/AtmosphereResponse;)Z
      23: ireturn
      24: iconst_0
      25: ireturn

  public void prePayload(org.atmosphere.cpr.AtmosphereResponse, byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method padding:()Z
       4: istore        5
       6: iload         5
       8: ifeq          31
      11: aload_0
      12: getfield      #3                  // Field val$r:Lorg/atmosphere/cpr/AtmosphereResource;
      15: invokeinterface #9,  1            // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.getRequest:()Lorg/atmosphere/cpr/AtmosphereRequest;
      20: getstatic     #10                 // Field org/atmosphere/cpr/FrameworkConfig.CALLBACK_JAVASCRIPT_PROTOCOL:Ljava/lang/String;
      23: invokeinterface #11,  2           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      28: ifnull        42
      31: aload_1
      32: invokestatic  #12                 // Method org/atmosphere/interceptor/SSEAtmosphereInterceptor.access$200:()[B
      35: iconst_1
      36: invokeinterface #13,  3           // InterfaceMethod org/atmosphere/cpr/AtmosphereResponse.write:([BZ)Lorg/atmosphere/cpr/AtmosphereResponse;
      41: pop
      42: return

  public byte[] transformPayload(org.atmosphere.cpr.AtmosphereResponse, byte[], byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #8                  // Method padding:()Z
       4: istore        4
       6: iload         4
       8: ifeq          31
      11: aload_0
      12: getfield      #3                  // Field val$r:Lorg/atmosphere/cpr/AtmosphereResource;
      15: invokeinterface #9,  1            // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.getRequest:()Lorg/atmosphere/cpr/AtmosphereRequest;
      20: getstatic     #10                 // Field org/atmosphere/cpr/FrameworkConfig.CALLBACK_JAVASCRIPT_PROTOCOL:Ljava/lang/String;
      23: invokeinterface #11,  2           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      28: ifnull        43
      31: aload_2
      32: invokestatic  #14                 // Method org/atmosphere/interceptor/SSEAtmosphereInterceptor.access$300:([B)Z
      35: ifeq          43
      38: aload_2
      39: invokestatic  #15                 // Method org/atmosphere/interceptor/SSEAtmosphereInterceptor.access$400:([B)[B
      42: areturn
      43: aload_2
      44: areturn

  public void postPayload(org.atmosphere.cpr.AtmosphereResponse, byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field val$r:Lorg/atmosphere/cpr/AtmosphereResource;
       4: invokeinterface #6,  1            // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.isSuspended:()Z
       9: ifne          51
      12: aload_0
      13: getfield      #3                  // Field val$r:Lorg/atmosphere/cpr/AtmosphereResource;
      16: invokeinterface #9,  1            // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.getRequest:()Lorg/atmosphere/cpr/AtmosphereRequest;
      21: getstatic     #10                 // Field org/atmosphere/cpr/FrameworkConfig.CALLBACK_JAVASCRIPT_PROTOCOL:Ljava/lang/String;
      24: invokeinterface #11,  2           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      29: ifnonnull     51
      32: aload_0
      33: getfield      #3                  // Field val$r:Lorg/atmosphere/cpr/AtmosphereResource;
      36: invokeinterface #9,  1            // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.getRequest:()Lorg/atmosphere/cpr/AtmosphereRequest;
      41: ldc           #16                 // String org.atmosphere.jersey.containerResponse
      43: invokeinterface #11,  2           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      48: ifnull        62
      51: aload_1
      52: invokestatic  #17                 // Method org/atmosphere/interceptor/SSEAtmosphereInterceptor.access$500:()[B
      55: iconst_1
      56: invokeinterface #13,  3           // InterfaceMethod org/atmosphere/cpr/AtmosphereResponse.write:([BZ)Lorg/atmosphere/cpr/AtmosphereResponse;
      61: pop
      62: aload_0
      63: getfield      #3                  // Field val$r:Lorg/atmosphere/cpr/AtmosphereResource;
      66: invokeinterface #9,  1            // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.getRequest:()Lorg/atmosphere/cpr/AtmosphereRequest;
      71: ldc           #18                 // String User-Agent
      73: invokeinterface #19,  2           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      78: astore        5
      80: aload         5
      82: ifnull        128
      85: aload         5
      87: ldc           #20                 // String MSIE
      89: invokevirtual #21                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      92: ifeq          128
      95: aload_1
      96: invokeinterface #22,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResponse.flushBuffer:()V
     101: goto          118
     104: astore        6
     106: invokestatic  #24                 // Method org/atmosphere/interceptor/SSEAtmosphereInterceptor.access$600:()Lorg/slf4j/Logger;
     109: ldc           #25                 // String
     111: aload         6
     113: invokeinterface #26,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Throwable;)V
     118: aload_0
     119: getfield      #3                  // Field val$r:Lorg/atmosphere/cpr/AtmosphereResource;
     122: invokeinterface #27,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.resume:()Lorg/atmosphere/cpr/AtmosphereResource;
     127: pop
     128: return
    Exception table:
       from    to  target type
          95   101   104   Class java/io/IOException
}
