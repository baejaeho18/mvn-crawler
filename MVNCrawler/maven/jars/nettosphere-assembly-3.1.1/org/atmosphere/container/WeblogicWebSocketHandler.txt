Compiled from "WeblogicWebSocketHandler.java"
public class org.atmosphere.container.WeblogicWebSocketHandler implements weblogic.websocket.WebSocketListener {
  private final org.slf4j.Logger logger;

  private org.atmosphere.websocket.WebSocketProcessor webSocketProcessor;

  private org.atmosphere.cpr.AtmosphereConfig config;

  private java.lang.Integer maxTextBufferSize;

  private int webSocketWriteTimeout;

  private final java.lang.ThreadLocal<weblogic.websocket.WSHandshakeRequest> request;

  public org.atmosphere.container.WeblogicWebSocketHandler();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // class org/atmosphere/container/WeblogicWebSocketHandler
       7: invokestatic  #4                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      10: putfield      #5                  // Field logger:Lorg/slf4j/Logger;
      13: aload_0
      14: new           #6                  // class java/lang/ThreadLocal
      17: dup
      18: invokespecial #7                  // Method java/lang/ThreadLocal."<init>":()V
      21: putfield      #8                  // Field request:Ljava/lang/ThreadLocal;
      24: return

  public void init(weblogic.websocket.WebSocketContext);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lorg/slf4j/Logger;
       4: ldc           #9                  // String WebSocketContext initialized {}
       6: aload_1
       7: invokeinterface #10,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      12: aload_0
      13: aload_1
      14: invokeinterface #11,  1           // InterfaceMethod weblogic/websocket/WebSocketContext.getServletContext:()Ljavax/servlet/ServletContext;
      19: invokespecial #12                 // Method configure:(Ljavax/servlet/ServletContext;)V
      22: return

  public void destroy();
    Code:
       0: return

  public boolean accept(weblogic.websocket.WSHandshakeRequest, weblogic.websocket.WSHandshakeResponse);
    Code:
       0: aload_0
       1: getfield      #8                  // Field request:Ljava/lang/ThreadLocal;
       4: aload_1
       5: invokevirtual #13                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       8: iconst_1
       9: ireturn

  public void onOpen(weblogic.websocket.WebSocketConnection);
    Code:
       0: aload_0
       1: getfield      #14                 // Field webSocketWriteTimeout:I
       4: iconst_m1
       5: if_icmpeq     23
       8: aload_1
       9: invokeinterface #15,  1           // InterfaceMethod weblogic/websocket/WebSocketConnection.getWebSocketContext:()Lweblogic/websocket/WebSocketContext;
      14: aload_0
      15: getfield      #14                 // Field webSocketWriteTimeout:I
      18: invokeinterface #16,  2           // InterfaceMethod weblogic/websocket/WebSocketContext.setTimeoutSecs:(I)V
      23: aload_0
      24: getfield      #17                 // Field maxTextBufferSize:Ljava/lang/Integer;
      27: invokevirtual #18                 // Method java/lang/Integer.intValue:()I
      30: iconst_m1
      31: if_icmpeq     52
      34: aload_1
      35: invokeinterface #15,  1           // InterfaceMethod weblogic/websocket/WebSocketConnection.getWebSocketContext:()Lweblogic/websocket/WebSocketContext;
      40: aload_0
      41: getfield      #17                 // Field maxTextBufferSize:Ljava/lang/Integer;
      44: invokevirtual #18                 // Method java/lang/Integer.intValue:()I
      47: invokeinterface #19,  2           // InterfaceMethod weblogic/websocket/WebSocketContext.setMaxMessageSize:(I)V
      52: new           #20                 // class org/atmosphere/container/version/WebLogicWebSocket
      55: dup
      56: aload_1
      57: aload_0
      58: getfield      #21                 // Field config:Lorg/atmosphere/cpr/AtmosphereConfig;
      61: invokespecial #22                 // Method org/atmosphere/container/version/WebLogicWebSocket."<init>":(Lweblogic/websocket/WebSocketConnection;Lorg/atmosphere/cpr/AtmosphereConfig;)V
      64: astore_2
      65: aload_1
      66: invokeinterface #15,  1           // InterfaceMethod weblogic/websocket/WebSocketConnection.getWebSocketContext:()Lweblogic/websocket/WebSocketContext;
      71: invokeinterface #11,  1           // InterfaceMethod weblogic/websocket/WebSocketContext.getServletContext:()Ljavax/servlet/ServletContext;
      76: aload_1
      77: invokevirtual #23                 // Method java/lang/Object.toString:()Ljava/lang/String;
      80: aload_2
      81: invokeinterface #24,  3           // InterfaceMethod javax/servlet/ServletContext.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      86: aload_0
      87: getfield      #8                  // Field request:Ljava/lang/ThreadLocal;
      90: invokevirtual #25                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      93: checkcast     #26                 // class javax/servlet/http/HttpServletRequest
      96: iconst_1
      97: iconst_1
      98: iconst_1
      99: aload_0
     100: getfield      #21                 // Field config:Lorg/atmosphere/cpr/AtmosphereConfig;
     103: ldc           #27                 // String org.atmosphere.cpr.sessionCreate
     105: iconst_1
     106: invokevirtual #28                 // Method org/atmosphere/cpr/AtmosphereConfig.getInitParameter:(Ljava/lang/String;Z)Z
     109: invokestatic  #29                 // Method org/atmosphere/cpr/AtmosphereRequestImpl.cloneRequest:(Ljavax/servlet/http/HttpServletRequest;ZZZZ)Lorg/atmosphere/cpr/AtmosphereRequest;
     112: astore_3
     113: aload_3
     114: aload_3
     115: invokeinterface #30,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getQueryString:()Ljava/lang/String;
     120: invokeinterface #31,  2           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.queryString:(Ljava/lang/String;)Lorg/atmosphere/cpr/AtmosphereRequest;
     125: pop
     126: aload_0
     127: getfield      #8                  // Field request:Ljava/lang/ThreadLocal;
     130: aconst_null
     131: invokevirtual #13                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     134: aload_0
     135: getfield      #32                 // Field webSocketProcessor:Lorg/atmosphere/websocket/WebSocketProcessor;
     138: aload_2
     139: aload_3
     140: aload_0
     141: getfield      #21                 // Field config:Lorg/atmosphere/cpr/AtmosphereConfig;
     144: aload_3
     145: aload_2
     146: invokestatic  #33                 // Method org/atmosphere/cpr/AtmosphereResponseImpl.newInstance:(Lorg/atmosphere/cpr/AtmosphereConfig;Lorg/atmosphere/cpr/AtmosphereRequest;Lorg/atmosphere/websocket/WebSocket;)Lorg/atmosphere/cpr/AtmosphereResponse;
     149: invokeinterface #34,  4           // InterfaceMethod org/atmosphere/websocket/WebSocketProcessor.open:(Lorg/atmosphere/websocket/WebSocket;Lorg/atmosphere/cpr/AtmosphereRequest;Lorg/atmosphere/cpr/AtmosphereResponse;)V
     154: goto          172
     157: astore        4
     159: aload_0
     160: getfield      #5                  // Field logger:Lorg/slf4j/Logger;
     163: ldc           #36                 // String {}
     165: aload         4
     167: invokeinterface #37,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     172: return
    Exception table:
       from    to  target type
         134   154   157   Class java/io/IOException

  public void onMessage(weblogic.websocket.WebSocketConnection, java.lang.String);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod weblogic/websocket/WebSocketConnection.getWebSocketContext:()Lweblogic/websocket/WebSocketContext;
       6: invokeinterface #11,  1           // InterfaceMethod weblogic/websocket/WebSocketContext.getServletContext:()Ljavax/servlet/ServletContext;
      11: aload_1
      12: invokevirtual #23                 // Method java/lang/Object.toString:()Ljava/lang/String;
      15: invokeinterface #38,  2           // InterfaceMethod javax/servlet/ServletContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      20: checkcast     #39                 // class org/atmosphere/websocket/WebSocket
      23: astore_3
      24: aload_0
      25: getfield      #32                 // Field webSocketProcessor:Lorg/atmosphere/websocket/WebSocketProcessor;
      28: aload_3
      29: aload_2
      30: invokeinterface #40,  3           // InterfaceMethod org/atmosphere/websocket/WebSocketProcessor.invokeWebSocketProtocol:(Lorg/atmosphere/websocket/WebSocket;Ljava/lang/String;)V
      35: return

  public void onMessage(weblogic.websocket.WebSocketConnection, byte[]);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod weblogic/websocket/WebSocketConnection.getWebSocketContext:()Lweblogic/websocket/WebSocketContext;
       6: invokeinterface #11,  1           // InterfaceMethod weblogic/websocket/WebSocketContext.getServletContext:()Ljavax/servlet/ServletContext;
      11: aload_1
      12: invokevirtual #23                 // Method java/lang/Object.toString:()Ljava/lang/String;
      15: invokeinterface #38,  2           // InterfaceMethod javax/servlet/ServletContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      20: checkcast     #39                 // class org/atmosphere/websocket/WebSocket
      23: astore_3
      24: aload_0
      25: getfield      #32                 // Field webSocketProcessor:Lorg/atmosphere/websocket/WebSocketProcessor;
      28: aload_3
      29: aload_2
      30: iconst_0
      31: aload_2
      32: arraylength
      33: invokeinterface #41,  5           // InterfaceMethod org/atmosphere/websocket/WebSocketProcessor.invokeWebSocketProtocol:(Lorg/atmosphere/websocket/WebSocket;[BII)V
      38: return

  public void onFragment(weblogic.websocket.WebSocketConnection, boolean, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lorg/slf4j/Logger;
       4: ldc           #42                 // String Warning, Fragment not supported
       6: invokeinterface #43,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      11: aload_0
      12: aload_1
      13: aload_3
      14: invokevirtual #44                 // Method onMessage:(Lweblogic/websocket/WebSocketConnection;Ljava/lang/String;)V
      17: return

  public void onFragment(weblogic.websocket.WebSocketConnection, boolean, byte[]);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lorg/slf4j/Logger;
       4: ldc           #42                 // String Warning, Fragment not supported
       6: invokeinterface #43,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      11: aload_0
      12: aload_1
      13: aload_3
      14: invokevirtual #45                 // Method onMessage:(Lweblogic/websocket/WebSocketConnection;[B)V
      17: return

  public void onPing(weblogic.websocket.WebSocketConnection, byte[]);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lorg/slf4j/Logger;
       4: ldc           #42                 // String Warning, Fragment not supported
       6: invokeinterface #43,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      11: return

  public void onPong(weblogic.websocket.WebSocketConnection, byte[]);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lorg/slf4j/Logger;
       4: ldc           #42                 // String Warning, Fragment not supported
       6: invokeinterface #43,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      11: return

  public void onTimeout(weblogic.websocket.WebSocketConnection);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod weblogic/websocket/WebSocketConnection.getWebSocketContext:()Lweblogic/websocket/WebSocketContext;
       6: invokeinterface #11,  1           // InterfaceMethod weblogic/websocket/WebSocketContext.getServletContext:()Ljavax/servlet/ServletContext;
      11: aload_1
      12: invokevirtual #23                 // Method java/lang/Object.toString:()Ljava/lang/String;
      15: invokeinterface #38,  2           // InterfaceMethod javax/servlet/ServletContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      20: checkcast     #39                 // class org/atmosphere/websocket/WebSocket
      23: astore_2
      24: aload_0
      25: getfield      #32                 // Field webSocketProcessor:Lorg/atmosphere/websocket/WebSocketProcessor;
      28: aload_2
      29: sipush        1000
      32: invokeinterface #46,  3           // InterfaceMethod org/atmosphere/websocket/WebSocketProcessor.close:(Lorg/atmosphere/websocket/WebSocket;I)V
      37: return

  public void onError(weblogic.websocket.WebSocketConnection, java.lang.Throwable);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod weblogic/websocket/WebSocketConnection.getWebSocketContext:()Lweblogic/websocket/WebSocketContext;
       6: invokeinterface #11,  1           // InterfaceMethod weblogic/websocket/WebSocketContext.getServletContext:()Ljavax/servlet/ServletContext;
      11: aload_1
      12: invokevirtual #23                 // Method java/lang/Object.toString:()Ljava/lang/String;
      15: invokeinterface #38,  2           // InterfaceMethod javax/servlet/ServletContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      20: checkcast     #39                 // class org/atmosphere/websocket/WebSocket
      23: astore_3
      24: aload_1
      25: invokeinterface #15,  1           // InterfaceMethod weblogic/websocket/WebSocketConnection.getWebSocketContext:()Lweblogic/websocket/WebSocketContext;
      30: invokeinterface #11,  1           // InterfaceMethod weblogic/websocket/WebSocketContext.getServletContext:()Ljavax/servlet/ServletContext;
      35: aload_1
      36: invokevirtual #23                 // Method java/lang/Object.toString:()Ljava/lang/String;
      39: invokeinterface #47,  2           // InterfaceMethod javax/servlet/ServletContext.removeAttribute:(Ljava/lang/String;)V
      44: aload_0
      45: getfield      #32                 // Field webSocketProcessor:Lorg/atmosphere/websocket/WebSocketProcessor;
      48: aload_3
      49: new           #48                 // class org/atmosphere/websocket/WebSocketEventListener$WebSocketEvent
      52: dup
      53: aload_2
      54: getstatic     #49                 // Field org/atmosphere/websocket/WebSocketEventListener$WebSocketEvent$TYPE.EXCEPTION:Lorg/atmosphere/websocket/WebSocketEventListener$WebSocketEvent$TYPE;
      57: aload_3
      58: invokespecial #50                 // Method org/atmosphere/websocket/WebSocketEventListener$WebSocketEvent."<init>":(Ljava/lang/Object;Lorg/atmosphere/websocket/WebSocketEventListener$WebSocketEvent$TYPE;Lorg/atmosphere/websocket/WebSocket;)V
      61: invokeinterface #51,  3           // InterfaceMethod org/atmosphere/websocket/WebSocketProcessor.notifyListener:(Lorg/atmosphere/websocket/WebSocket;Lorg/atmosphere/websocket/WebSocketEventListener$WebSocketEvent;)V
      66: return

  public void onClose(weblogic.websocket.WebSocketConnection, weblogic.websocket.ClosingMessage);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod weblogic/websocket/WebSocketConnection.getWebSocketContext:()Lweblogic/websocket/WebSocketContext;
       6: invokeinterface #11,  1           // InterfaceMethod weblogic/websocket/WebSocketContext.getServletContext:()Ljavax/servlet/ServletContext;
      11: aload_1
      12: invokevirtual #23                 // Method java/lang/Object.toString:()Ljava/lang/String;
      15: invokeinterface #38,  2           // InterfaceMethod javax/servlet/ServletContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      20: checkcast     #39                 // class org/atmosphere/websocket/WebSocket
      23: astore_3
      24: aload_1
      25: invokeinterface #15,  1           // InterfaceMethod weblogic/websocket/WebSocketConnection.getWebSocketContext:()Lweblogic/websocket/WebSocketContext;
      30: invokeinterface #11,  1           // InterfaceMethod weblogic/websocket/WebSocketContext.getServletContext:()Ljavax/servlet/ServletContext;
      35: aload_1
      36: invokevirtual #23                 // Method java/lang/Object.toString:()Ljava/lang/String;
      39: invokeinterface #47,  2           // InterfaceMethod javax/servlet/ServletContext.removeAttribute:(Ljava/lang/String;)V
      44: aload_0
      45: getfield      #32                 // Field webSocketProcessor:Lorg/atmosphere/websocket/WebSocketProcessor;
      48: aload_3
      49: aload_2
      50: invokeinterface #52,  1           // InterfaceMethod weblogic/websocket/ClosingMessage.getStatusCode:()I
      55: invokeinterface #46,  3           // InterfaceMethod org/atmosphere/websocket/WebSocketProcessor.close:(Lorg/atmosphere/websocket/WebSocket;I)V
      60: return

  private void configure(javax.servlet.ServletContext);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #53                 // class org/atmosphere/cpr/AtmosphereConfig
       4: invokevirtual #54                 // Method java/lang/Class.getName:()Ljava/lang/String;
       7: invokeinterface #38,  2           // InterfaceMethod javax/servlet/ServletContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      12: checkcast     #53                 // class org/atmosphere/cpr/AtmosphereConfig
      15: putfield      #21                 // Field config:Lorg/atmosphere/cpr/AtmosphereConfig;
      18: aload_0
      19: invokestatic  #55                 // Method org/atmosphere/cpr/WebSocketProcessorFactory.getDefault:()Lorg/atmosphere/cpr/WebSocketProcessorFactory;
      22: aload_0
      23: getfield      #21                 // Field config:Lorg/atmosphere/cpr/AtmosphereConfig;
      26: invokevirtual #56                 // Method org/atmosphere/cpr/AtmosphereConfig.framework:()Lorg/atmosphere/cpr/AtmosphereFramework;
      29: invokevirtual #57                 // Method org/atmosphere/cpr/WebSocketProcessorFactory.getWebSocketProcessor:(Lorg/atmosphere/cpr/AtmosphereFramework;)Lorg/atmosphere/websocket/WebSocketProcessor;
      32: putfield      #32                 // Field webSocketProcessor:Lorg/atmosphere/websocket/WebSocketProcessor;
      35: aload_0
      36: getfield      #21                 // Field config:Lorg/atmosphere/cpr/AtmosphereConfig;
      39: ldc           #58                 // String org.atmosphere.websocket.maxIdleTime
      41: invokevirtual #59                 // Method org/atmosphere/cpr/AtmosphereConfig.getInitParameter:(Ljava/lang/String;)Ljava/lang/String;
      44: astore_2
      45: aload_2
      46: ifnull        63
      49: aload_0
      50: aload_2
      51: invokestatic  #60                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      54: invokevirtual #18                 // Method java/lang/Integer.intValue:()I
      57: putfield      #14                 // Field webSocketWriteTimeout:I
      60: goto          68
      63: aload_0
      64: iconst_m1
      65: putfield      #14                 // Field webSocketWriteTimeout:I
      68: aload_0
      69: getfield      #21                 // Field config:Lorg/atmosphere/cpr/AtmosphereConfig;
      72: ldc           #61                 // String org.atmosphere.websocket.maxTextMessageSize
      74: invokevirtual #59                 // Method org/atmosphere/cpr/AtmosphereConfig.getInitParameter:(Ljava/lang/String;)Ljava/lang/String;
      77: astore_2
      78: aload_2
      79: ifnull        93
      82: aload_0
      83: aload_2
      84: invokestatic  #60                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      87: putfield      #17                 // Field maxTextBufferSize:Ljava/lang/Integer;
      90: goto          101
      93: aload_0
      94: iconst_m1
      95: invokestatic  #62                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      98: putfield      #17                 // Field maxTextBufferSize:Ljava/lang/Integer;
     101: return
}
