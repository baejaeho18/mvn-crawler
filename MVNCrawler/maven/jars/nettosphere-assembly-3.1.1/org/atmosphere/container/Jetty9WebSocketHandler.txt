Compiled from "Jetty9WebSocketHandler.java"
public class org.atmosphere.container.Jetty9WebSocketHandler implements org.eclipse.jetty.websocket.api.WebSocketListener {
  private static final org.slf4j.Logger logger;

  private org.atmosphere.cpr.AtmosphereRequest request;

  private final org.atmosphere.cpr.AtmosphereFramework framework;

  private final org.atmosphere.websocket.WebSocketProcessor webSocketProcessor;

  private org.atmosphere.websocket.WebSocket webSocket;

  private static final boolean jetty93Up;

  public org.atmosphere.container.Jetty9WebSocketHandler(javax.servlet.http.HttpServletRequest, org.atmosphere.cpr.AtmosphereFramework, org.atmosphere.websocket.WebSocketProcessor);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #3                  // Field framework:Lorg/atmosphere/cpr/AtmosphereFramework;
       9: aload_0
      10: aload_0
      11: aload_1
      12: invokespecial #4                  // Method cloneRequest:(Ljavax/servlet/http/HttpServletRequest;)Lorg/atmosphere/cpr/AtmosphereRequest;
      15: putfield      #5                  // Field request:Lorg/atmosphere/cpr/AtmosphereRequest;
      18: aload_0
      19: aload_3
      20: putfield      #6                  // Field webSocketProcessor:Lorg/atmosphere/websocket/WebSocketProcessor;
      23: return

  private org.atmosphere.cpr.AtmosphereRequest cloneRequest(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method org/atmosphere/cpr/AtmosphereRequestImpl.wrap:(Ljavax/servlet/http/HttpServletRequest;)Lorg/atmosphere/cpr/AtmosphereRequest;
       4: astore_2
       5: aload_2
       6: iconst_0
       7: iconst_0
       8: iconst_0
       9: aload_0
      10: getfield      #3                  // Field framework:Lorg/atmosphere/cpr/AtmosphereFramework;
      13: invokevirtual #8                  // Method org/atmosphere/cpr/AtmosphereFramework.getAtmosphereConfig:()Lorg/atmosphere/cpr/AtmosphereConfig;
      16: ldc           #9                  // String org.atmosphere.cpr.sessionCreate
      18: iconst_1
      19: invokevirtual #10                 // Method org/atmosphere/cpr/AtmosphereConfig.getInitParameter:(Ljava/lang/String;Z)Z
      22: invokestatic  #11                 // Method org/atmosphere/cpr/AtmosphereRequestImpl.cloneRequest:(Ljavax/servlet/http/HttpServletRequest;ZZZZ)Lorg/atmosphere/cpr/AtmosphereRequest;
      25: areturn
      26: astore_2
      27: getstatic     #13                 // Field logger:Lorg/slf4j/Logger;
      30: ldc           #14                 // String
      32: aload_2
      33: invokeinterface #15,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      38: new           #16                 // class java/lang/RuntimeException
      41: dup
      42: ldc           #17                 // String Invalid WebSocket Request
      44: invokespecial #18                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      47: athrow
    Exception table:
       from    to  target type
           0    25    26   Class java/lang/Exception

  public void onWebSocketBinary(byte[], int, int);
    Code:
       0: getstatic     #13                 // Field logger:Lorg/slf4j/Logger;
       3: ldc           #19                 // String WebSocket.onMessage (bytes)
       5: invokeinterface #20,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      10: aload_0
      11: getfield      #6                  // Field webSocketProcessor:Lorg/atmosphere/websocket/WebSocketProcessor;
      14: aload_0
      15: getfield      #21                 // Field webSocket:Lorg/atmosphere/websocket/WebSocket;
      18: aload_1
      19: iload_2
      20: iload_3
      21: invokeinterface #22,  5           // InterfaceMethod org/atmosphere/websocket/WebSocketProcessor.invokeWebSocketProtocol:(Lorg/atmosphere/websocket/WebSocket;[BII)V
      26: return

  public void onWebSocketClose(int, java.lang.String);
    Code:
       0: getstatic     #13                 // Field logger:Lorg/slf4j/Logger;
       3: ldc           #23                 // String onClose {}:{}
       5: iload_1
       6: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       9: aload_2
      10: invokeinterface #25,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #6                  // Field webSocketProcessor:Lorg/atmosphere/websocket/WebSocketProcessor;
      19: aload_0
      20: getfield      #21                 // Field webSocket:Lorg/atmosphere/websocket/WebSocket;
      23: iload_1
      24: invokeinterface #26,  3           // InterfaceMethod org/atmosphere/websocket/WebSocketProcessor.close:(Lorg/atmosphere/websocket/WebSocket;I)V
      29: aload_0
      30: getfield      #5                  // Field request:Lorg/atmosphere/cpr/AtmosphereRequest;
      33: invokeinterface #27,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.destroy:()V
      38: goto          53
      41: astore_3
      42: aload_0
      43: getfield      #5                  // Field request:Lorg/atmosphere/cpr/AtmosphereRequest;
      46: invokeinterface #27,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.destroy:()V
      51: aload_3
      52: athrow
      53: return
    Exception table:
       from    to  target type
          15    29    41   any

  public void onWebSocketConnect(org.eclipse.jetty.websocket.api.Session);
    Code:
       0: getstatic     #13                 // Field logger:Lorg/slf4j/Logger;
       3: ldc           #28                 // String WebSocket.onOpen.
       5: invokeinterface #20,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      10: aload_0
      11: new           #29                 // class org/atmosphere/container/version/Jetty9WebSocket
      14: dup
      15: aload_1
      16: aload_0
      17: getfield      #3                  // Field framework:Lorg/atmosphere/cpr/AtmosphereFramework;
      20: invokevirtual #8                  // Method org/atmosphere/cpr/AtmosphereFramework.getAtmosphereConfig:()Lorg/atmosphere/cpr/AtmosphereConfig;
      23: invokespecial #30                 // Method org/atmosphere/container/version/Jetty9WebSocket."<init>":(Lorg/eclipse/jetty/websocket/api/Session;Lorg/atmosphere/cpr/AtmosphereConfig;)V
      26: putfield      #21                 // Field webSocket:Lorg/atmosphere/websocket/WebSocket;
      29: getstatic     #31                 // Field jetty93Up:Z
      32: ifeq          96
      35: aload_0
      36: aload_1
      37: invokespecial #32                 // Method originalRequest:(Lorg/eclipse/jetty/websocket/api/Session;)Ljavax/servlet/http/HttpServletRequest;
      40: astore_2
      41: aload_2
      42: ifnull        72
      45: aload_0
      46: aload_2
      47: iconst_1
      48: iconst_0
      49: iconst_0
      50: aload_0
      51: getfield      #3                  // Field framework:Lorg/atmosphere/cpr/AtmosphereFramework;
      54: invokevirtual #8                  // Method org/atmosphere/cpr/AtmosphereFramework.getAtmosphereConfig:()Lorg/atmosphere/cpr/AtmosphereConfig;
      57: ldc           #9                  // String org.atmosphere.cpr.sessionCreate
      59: iconst_1
      60: invokevirtual #10                 // Method org/atmosphere/cpr/AtmosphereConfig.getInitParameter:(Ljava/lang/String;Z)Z
      63: invokestatic  #11                 // Method org/atmosphere/cpr/AtmosphereRequestImpl.cloneRequest:(Ljavax/servlet/http/HttpServletRequest;ZZZZ)Lorg/atmosphere/cpr/AtmosphereRequest;
      66: putfield      #5                  // Field request:Lorg/atmosphere/cpr/AtmosphereRequest;
      69: goto          96
      72: aload_0
      73: aload_2
      74: iconst_1
      75: iconst_1
      76: iconst_0
      77: aload_0
      78: getfield      #3                  // Field framework:Lorg/atmosphere/cpr/AtmosphereFramework;
      81: invokevirtual #8                  // Method org/atmosphere/cpr/AtmosphereFramework.getAtmosphereConfig:()Lorg/atmosphere/cpr/AtmosphereConfig;
      84: ldc           #9                  // String org.atmosphere.cpr.sessionCreate
      86: iconst_1
      87: invokevirtual #10                 // Method org/atmosphere/cpr/AtmosphereConfig.getInitParameter:(Ljava/lang/String;Z)Z
      90: invokestatic  #11                 // Method org/atmosphere/cpr/AtmosphereRequestImpl.cloneRequest:(Ljavax/servlet/http/HttpServletRequest;ZZZZ)Lorg/atmosphere/cpr/AtmosphereRequest;
      93: putfield      #5                  // Field request:Lorg/atmosphere/cpr/AtmosphereRequest;
      96: aload_0
      97: getfield      #6                  // Field webSocketProcessor:Lorg/atmosphere/websocket/WebSocketProcessor;
     100: aload_0
     101: getfield      #21                 // Field webSocket:Lorg/atmosphere/websocket/WebSocket;
     104: aload_0
     105: getfield      #5                  // Field request:Lorg/atmosphere/cpr/AtmosphereRequest;
     108: aload_0
     109: getfield      #3                  // Field framework:Lorg/atmosphere/cpr/AtmosphereFramework;
     112: invokevirtual #8                  // Method org/atmosphere/cpr/AtmosphereFramework.getAtmosphereConfig:()Lorg/atmosphere/cpr/AtmosphereConfig;
     115: aload_0
     116: getfield      #5                  // Field request:Lorg/atmosphere/cpr/AtmosphereRequest;
     119: aload_0
     120: getfield      #21                 // Field webSocket:Lorg/atmosphere/websocket/WebSocket;
     123: invokestatic  #33                 // Method org/atmosphere/cpr/AtmosphereResponseImpl.newInstance:(Lorg/atmosphere/cpr/AtmosphereConfig;Lorg/atmosphere/cpr/AtmosphereRequest;Lorg/atmosphere/websocket/WebSocket;)Lorg/atmosphere/cpr/AtmosphereResponse;
     126: invokeinterface #34,  4           // InterfaceMethod org/atmosphere/websocket/WebSocketProcessor.open:(Lorg/atmosphere/websocket/WebSocket;Lorg/atmosphere/cpr/AtmosphereRequest;Lorg/atmosphere/cpr/AtmosphereResponse;)V
     131: goto          146
     134: astore_2
     135: getstatic     #13                 // Field logger:Lorg/slf4j/Logger;
     138: ldc           #35                 // String Failed to connect to WebSocket
     140: aload_2
     141: invokeinterface #36,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     146: return
    Exception table:
       from    to  target type
          96   131   134   Class java/lang/Exception

  public void onWebSocketError(java.lang.Throwable);
    Code:
       0: getstatic     #13                 // Field logger:Lorg/slf4j/Logger;
       3: ldc           #37                 // String {}
       5: aload_1
       6: invokeinterface #15,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      11: aload_0
      12: sipush        1006
      15: ldc           #38                 // String Unexpected error
      17: invokevirtual #39                 // Method onWebSocketClose:(ILjava/lang/String;)V
      20: return

  public void onWebSocketText(java.lang.String);
    Code:
       0: getstatic     #13                 // Field logger:Lorg/slf4j/Logger;
       3: ldc           #19                 // String WebSocket.onMessage (bytes)
       5: invokeinterface #20,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      10: aload_0
      11: getfield      #6                  // Field webSocketProcessor:Lorg/atmosphere/websocket/WebSocketProcessor;
      14: aload_0
      15: getfield      #21                 // Field webSocket:Lorg/atmosphere/websocket/WebSocket;
      18: aload_1
      19: invokeinterface #40,  3           // InterfaceMethod org/atmosphere/websocket/WebSocketProcessor.invokeWebSocketProtocol:(Lorg/atmosphere/websocket/WebSocket;Ljava/lang/String;)V
      24: return

  private javax.servlet.http.HttpServletRequest originalRequest(org.eclipse.jetty.websocket.api.Session);
    Code:
       0: aload_1
       1: invokeinterface #41,  1           // InterfaceMethod org/eclipse/jetty/websocket/api/Session.getUpgradeRequest:()Lorg/eclipse/jetty/websocket/api/UpgradeRequest;
       6: checkcast     #42                 // class org/eclipse/jetty/websocket/servlet/ServletUpgradeRequest
       9: astore_2
      10: ldc           #42                 // class org/eclipse/jetty/websocket/servlet/ServletUpgradeRequest
      12: invokevirtual #43                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      15: astore_3
      16: aload_3
      17: astore        4
      19: aload         4
      21: arraylength
      22: istore        5
      24: iconst_0
      25: istore        6
      27: iload         6
      29: iload         5
      31: if_icmpge     80
      34: aload         4
      36: iload         6
      38: aaload
      39: astore        7
      41: aload         7
      43: iconst_1
      44: invokevirtual #44                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      47: aload         7
      49: aload_2
      50: invokevirtual #45                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      53: astore        8
      55: aload         8
      57: instanceof    #46                 // class javax/servlet/http/HttpServletRequest
      60: ifeq          74
      63: ldc           #46                 // class javax/servlet/http/HttpServletRequest
      65: aload         8
      67: invokevirtual #47                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      70: checkcast     #46                 // class javax/servlet/http/HttpServletRequest
      73: areturn
      74: iinc          6, 1
      77: goto          27
      80: goto          95
      83: astore_2
      84: getstatic     #13                 // Field logger:Lorg/slf4j/Logger;
      87: ldc           #14                 // String
      89: aload_2
      90: invokeinterface #15,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      95: aconst_null
      96: areturn
    Exception table:
       from    to  target type
           0    73    83   Class java/lang/Exception
          74    80    83   Class java/lang/Exception

  static {};
    Code:
       0: ldc           #48                 // class org/atmosphere/container/Jetty9WebSocketHandler
       2: invokestatic  #49                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #13                 // Field logger:Lorg/slf4j/Logger;
       8: aconst_null
       9: astore_0
      10: ldc           #50                 // String org.eclipse.jetty.websocket.api.WebSocketFrameListener
      12: invokestatic  #51                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      15: pop
      16: aload_0
      17: ifnonnull     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: putstatic     #31                 // Field jetty93Up:Z
      28: goto          64
      31: astore_1
      32: aload_1
      33: astore_0
      34: aload_0
      35: ifnonnull     42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: putstatic     #31                 // Field jetty93Up:Z
      46: goto          64
      49: astore_2
      50: aload_0
      51: ifnonnull     58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: putstatic     #31                 // Field jetty93Up:Z
      62: aload_2
      63: athrow
      64: return
    Exception table:
       from    to  target type
          10    16    31   Class java/lang/ClassNotFoundException
          10    16    49   any
          31    34    49   any
}
