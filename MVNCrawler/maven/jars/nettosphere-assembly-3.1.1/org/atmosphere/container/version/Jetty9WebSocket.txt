Compiled from "Jetty9WebSocket.java"
public class org.atmosphere.container.version.Jetty9WebSocket extends org.atmosphere.websocket.WebSocket {
  private final org.eclipse.jetty.websocket.api.Session webSocketConnection;

  public org.atmosphere.container.version.Jetty9WebSocket(org.eclipse.jetty.websocket.api.Session, org.atmosphere.cpr.AtmosphereConfig);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method org/atmosphere/websocket/WebSocket."<init>":(Lorg/atmosphere/cpr/AtmosphereConfig;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field webSocketConnection:Lorg/eclipse/jetty/websocket/api/Session;
      10: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #2                  // Field webSocketConnection:Lorg/eclipse/jetty/websocket/api/Session;
       4: invokeinterface #3,  1            // InterfaceMethod org/eclipse/jetty/websocket/api/Session.isOpen:()Z
       9: ireturn

  public org.atmosphere.websocket.WebSocket write(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method isOpen:()Z
       4: ifeq          23
       7: aload_0
       8: getfield      #2                  // Field webSocketConnection:Lorg/eclipse/jetty/websocket/api/Session;
      11: invokeinterface #5,  1            // InterfaceMethod org/eclipse/jetty/websocket/api/Session.getRemote:()Lorg/eclipse/jetty/websocket/api/RemoteEndpoint;
      16: aload_1
      17: invokeinterface #6,  2            // InterfaceMethod org/eclipse/jetty/websocket/api/RemoteEndpoint.sendStringByFuture:(Ljava/lang/String;)Ljava/util/concurrent/Future;
      22: pop
      23: aload_0
      24: areturn

  public org.atmosphere.websocket.WebSocket write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method isOpen:()Z
       4: ifeq          28
       7: aload_0
       8: getfield      #2                  // Field webSocketConnection:Lorg/eclipse/jetty/websocket/api/Session;
      11: invokeinterface #5,  1            // InterfaceMethod org/eclipse/jetty/websocket/api/Session.getRemote:()Lorg/eclipse/jetty/websocket/api/RemoteEndpoint;
      16: aload_1
      17: iload_2
      18: iload_3
      19: invokestatic  #7                  // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      22: invokeinterface #8,  2            // InterfaceMethod org/eclipse/jetty/websocket/api/RemoteEndpoint.sendBytesByFuture:(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;
      27: pop
      28: aload_0
      29: areturn

  public void close();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method isOpen:()Z
       4: ifne          8
       7: return
       8: getstatic     #9                  // Field logger:Lorg/slf4j/Logger;
      11: ldc           #10                 // String WebSocket.close() for AtmosphereResource {}
      13: aload_0
      14: invokevirtual #11                 // Method resource:()Lorg/atmosphere/cpr/AtmosphereResource;
      17: ifnull        32
      20: aload_0
      21: invokevirtual #11                 // Method resource:()Lorg/atmosphere/cpr/AtmosphereResource;
      24: invokeinterface #12,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.uuid:()Ljava/lang/String;
      29: goto          34
      32: ldc           #13                 // String null
      34: invokeinterface #14,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      39: aload_0
      40: getfield      #2                  // Field webSocketConnection:Lorg/eclipse/jetty/websocket/api/Session;
      43: invokeinterface #15,  1           // InterfaceMethod org/eclipse/jetty/websocket/api/Session.close:()V
      48: goto          63
      51: astore_1
      52: getstatic     #9                  // Field logger:Lorg/slf4j/Logger;
      55: ldc           #17                 // String Close error
      57: aload_1
      58: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Throwable;)V
      63: return
    Exception table:
       from    to  target type
          39    48    51   Class java/lang/Throwable
}
