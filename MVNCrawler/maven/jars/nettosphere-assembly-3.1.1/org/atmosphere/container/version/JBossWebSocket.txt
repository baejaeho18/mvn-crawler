Compiled from "JBossWebSocket.java"
public class org.atmosphere.container.version.JBossWebSocket extends org.atmosphere.websocket.WebSocket {
  private final org.atmosphere.jboss.as.websockets.WebSocket webSocket;

  public org.atmosphere.container.version.JBossWebSocket(org.atmosphere.jboss.as.websockets.WebSocket, org.atmosphere.cpr.AtmosphereConfig);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method org/atmosphere/websocket/WebSocket."<init>":(Lorg/atmosphere/cpr/AtmosphereConfig;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field webSocket:Lorg/atmosphere/jboss/as/websockets/WebSocket;
      10: return

  public boolean isOpen();
    Code:
       0: iconst_1
       1: ireturn

  public org.atmosphere.websocket.WebSocket write(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field webSocket:Lorg/atmosphere/jboss/as/websockets/WebSocket;
       4: aload_1
       5: invokestatic  #3                  // Method org/atmosphere/jboss/websockets/frame/TextFrame.from:(Ljava/lang/String;)Lorg/atmosphere/jboss/websockets/frame/TextFrame;
       8: invokeinterface #4,  2            // InterfaceMethod org/atmosphere/jboss/as/websockets/WebSocket.writeFrame:(Lorg/atmosphere/jboss/websockets/Frame;)V
      13: aload_0
      14: areturn

  public org.atmosphere.websocket.WebSocket write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field webSocket:Lorg/atmosphere/jboss/as/websockets/WebSocket;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokestatic  #5                  // Method java/util/Arrays.copyOfRange:([BII)[B
      10: invokestatic  #6                  // Method org/atmosphere/jboss/websockets/frame/BinaryFrame.from:([B)Lorg/atmosphere/jboss/websockets/frame/BinaryFrame;
      13: invokeinterface #4,  2            // InterfaceMethod org/atmosphere/jboss/as/websockets/WebSocket.writeFrame:(Lorg/atmosphere/jboss/websockets/Frame;)V
      18: aload_0
      19: areturn

  public void close();
    Code:
       0: getstatic     #7                  // Field logger:Lorg/slf4j/Logger;
       3: ldc           #8                  // String WebSocket.close() for AtmosphereResource {}
       5: aload_0
       6: invokevirtual #9                  // Method resource:()Lorg/atmosphere/cpr/AtmosphereResource;
       9: ifnull        24
      12: aload_0
      13: invokevirtual #9                  // Method resource:()Lorg/atmosphere/cpr/AtmosphereResource;
      16: invokeinterface #10,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.uuid:()Ljava/lang/String;
      21: goto          26
      24: ldc           #11                 // String null
      26: invokeinterface #12,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      31: aload_0
      32: getfield      #2                  // Field webSocket:Lorg/atmosphere/jboss/as/websockets/WebSocket;
      35: invokeinterface #13,  1           // InterfaceMethod org/atmosphere/jboss/as/websockets/WebSocket.closeSocket:()V
      40: goto          55
      43: astore_1
      44: getstatic     #7                  // Field logger:Lorg/slf4j/Logger;
      47: ldc           #15                 // String Error closing websocket.
      49: aload_1
      50: invokeinterface #16,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Throwable;)V
      55: return
    Exception table:
       from    to  target type
           0    40    43   Class java/lang/Exception
}
