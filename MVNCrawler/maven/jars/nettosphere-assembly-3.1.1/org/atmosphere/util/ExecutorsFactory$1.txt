Compiled from "ExecutorsFactory.java"
class org.atmosphere.util.ExecutorsFactory$1 implements java.util.concurrent.ThreadFactory {
  private final java.util.concurrent.atomic.AtomicInteger count;

  org.atmosphere.util.ExecutorsFactory$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      12: putfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      15: return

  public java.lang.Thread newThread(java.lang.Runnable);
    Code:
       0: new           #5                  // class java/lang/Thread
       3: dup
       4: aload_1
       5: new           #6                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      12: ldc           #8                  // String Atmosphere-Scheduler-
      14: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_0
      18: getfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      21: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      24: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      27: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #13                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      33: astore_2
      34: aload_2
      35: iconst_1
      36: invokevirtual #14                 // Method java/lang/Thread.setDaemon:(Z)V
      39: aload_2
      40: areturn
}
