Compiled from "Version.java"
public class org.atmosphere.util.Version {
  private static final java.util.regex.Pattern versionPattern;

  private static final java.lang.String dotedVersion;

  private static final int major;

  private static final int minor;

  private static final int micro;

  private static final java.lang.String version;

  public org.atmosphere.util.Version();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void main(java.lang.String[]);
    Code:
       0: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
       3: invokestatic  #3                  // Method getDotedVersion:()Ljava/lang/String;
       6: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       9: return

  public static java.lang.String getRawVersion();
    Code:
       0: getstatic     #5                  // Field version:Ljava/lang/String;
       3: areturn

  public static java.lang.String getDotedVersion();
    Code:
       0: getstatic     #6                  // Field dotedVersion:Ljava/lang/String;
       3: areturn

  public static int getMajorVersion();
    Code:
       0: getstatic     #7                  // Field major:I
       3: ireturn

  public static int getMinorVersion();
    Code:
       0: getstatic     #8                  // Field minor:I
       3: ireturn

  public static int getMicroVersion();
    Code:
       0: getstatic     #9                  // Field micro:I
       3: ireturn

  public static boolean equalVersion(int, int);
    Code:
       0: iload_1
       1: getstatic     #8                  // Field minor:I
       4: if_icmpne     18
       7: iload_0
       8: getstatic     #7                  // Field major:I
      11: if_icmpne     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  static {};
    Code:
       0: ldc           #10                 // String ((\\d+)\\.(\\d+)\\.(\\d+)){1}(.+)?
       2: invokestatic  #11                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #12                 // Field versionPattern:Ljava/util/regex/Pattern;
       8: new           #13                 // class java/util/Properties
      11: dup
      12: invokespecial #14                 // Method java/util/Properties."<init>":()V
      15: astore_0
      16: aconst_null
      17: astore_1
      18: ldc           #15                 // class org/atmosphere/util/Version
      20: ldc           #16                 // String version.properties
      22: invokevirtual #17                 // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      25: astore_1
      26: aload_0
      27: aload_1
      28: invokevirtual #18                 // Method java/util/Properties.load:(Ljava/io/InputStream;)V
      31: aload_1
      32: ifnull        82
      35: aload_1
      36: invokevirtual #19                 // Method java/io/InputStream.close:()V
      39: goto          82
      42: astore_2
      43: goto          82
      46: astore_2
      47: aload_2
      48: invokevirtual #21                 // Method java/io/IOException.printStackTrace:()V
      51: aload_1
      52: ifnull        82
      55: aload_1
      56: invokevirtual #19                 // Method java/io/InputStream.close:()V
      59: goto          82
      62: astore_2
      63: goto          82
      66: astore_3
      67: aload_1
      68: ifnull        80
      71: aload_1
      72: invokevirtual #19                 // Method java/io/InputStream.close:()V
      75: goto          80
      78: astore        4
      80: aload_3
      81: athrow
      82: aload_0
      83: ldc           #22                 // String atmosphere.version
      85: invokevirtual #23                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      88: putstatic     #5                  // Field version:Ljava/lang/String;
      91: getstatic     #12                 // Field versionPattern:Ljava/util/regex/Pattern;
      94: getstatic     #5                  // Field version:Ljava/lang/String;
      97: invokevirtual #24                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     100: astore_2
     101: aload_2
     102: invokevirtual #25                 // Method java/util/regex/Matcher.matches:()Z
     105: ifeq          152
     108: aload_2
     109: iconst_1
     110: invokevirtual #26                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     113: putstatic     #6                  // Field dotedVersion:Ljava/lang/String;
     116: aload_2
     117: iconst_2
     118: invokevirtual #26                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     121: invokestatic  #27                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     124: putstatic     #7                  // Field major:I
     127: aload_2
     128: iconst_3
     129: invokevirtual #26                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     132: invokestatic  #27                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     135: putstatic     #8                  // Field minor:I
     138: aload_2
     139: iconst_4
     140: invokevirtual #26                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     143: invokestatic  #27                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     146: putstatic     #9                  // Field micro:I
     149: goto          169
     152: ldc           #28                 // String no.version
     154: putstatic     #6                  // Field dotedVersion:Ljava/lang/String;
     157: iconst_m1
     158: putstatic     #7                  // Field major:I
     161: iconst_m1
     162: putstatic     #8                  // Field minor:I
     165: iconst_m1
     166: putstatic     #9                  // Field micro:I
     169: return
    Exception table:
       from    to  target type
          35    39    42   Class java/io/IOException
          18    31    46   Class java/io/IOException
          55    59    62   Class java/io/IOException
          18    31    66   any
          46    51    66   any
          71    75    78   Class java/io/IOException
}
