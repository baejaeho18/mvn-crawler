Compiled from "ClassFileIterator.java"
final class org.atmosphere.util.annotation.ClassFileIterator {
  private final org.slf4j.Logger logger;

  private final org.atmosphere.util.annotation.FileIterator fileIterator;

  private final java.lang.String[] pkgNameFilter;

  private org.atmosphere.util.annotation.ZipFileIterator zipIterator;

  private boolean isFile;

  private final org.atmosphere.util.annotation.InputStreamIterator inputStreamIterator;

  org.atmosphere.util.annotation.ClassFileIterator() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method classPath:()[Ljava/io/File;
       4: aconst_null
       5: invokespecial #2                  // Method "<init>":([Ljava/io/File;[Ljava/lang/String;)V
       8: return

  org.atmosphere.util.annotation.ClassFileIterator(java.io.File[], java.lang.String[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #4                  // class org/atmosphere/util/annotation/AnnotationDetector
       7: invokestatic  #5                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      10: putfield      #6                  // Field logger:Lorg/slf4j/Logger;
      13: aload_0
      14: new           #7                  // class org/atmosphere/util/annotation/FileIterator
      17: dup
      18: aload_1
      19: invokespecial #8                  // Method org/atmosphere/util/annotation/FileIterator."<init>":([Ljava/io/File;)V
      22: putfield      #9                  // Field fileIterator:Lorg/atmosphere/util/annotation/FileIterator;
      25: aload_0
      26: aload_2
      27: putfield      #10                 // Field pkgNameFilter:[Ljava/lang/String;
      30: aload_0
      31: aconst_null
      32: putfield      #11                 // Field inputStreamIterator:Lorg/atmosphere/util/annotation/InputStreamIterator;
      35: return

  org.atmosphere.util.annotation.ClassFileIterator(java.io.InputStream[], java.lang.String[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #4                  // class org/atmosphere/util/annotation/AnnotationDetector
       7: invokestatic  #5                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      10: putfield      #6                  // Field logger:Lorg/slf4j/Logger;
      13: aload_0
      14: aconst_null
      15: putfield      #9                  // Field fileIterator:Lorg/atmosphere/util/annotation/FileIterator;
      18: aload_0
      19: aload_2
      20: putfield      #10                 // Field pkgNameFilter:[Ljava/lang/String;
      23: aload_0
      24: new           #12                 // class org/atmosphere/util/annotation/InputStreamIterator
      27: dup
      28: aload_1
      29: invokespecial #13                 // Method org/atmosphere/util/annotation/InputStreamIterator."<init>":([Ljava/io/InputStream;)V
      32: putfield      #11                 // Field inputStreamIterator:Lorg/atmosphere/util/annotation/InputStreamIterator;
      35: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #14                 // Field zipIterator:Lorg/atmosphere/util/annotation/ZipFileIterator;
       4: ifnonnull     20
       7: aload_0
       8: getfield      #9                  // Field fileIterator:Lorg/atmosphere/util/annotation/FileIterator;
      11: invokevirtual #15                 // Method org/atmosphere/util/annotation/FileIterator.getFile:()Ljava/io/File;
      14: invokevirtual #16                 // Method java/io/File.getPath:()Ljava/lang/String;
      17: goto          30
      20: aload_0
      21: getfield      #14                 // Field zipIterator:Lorg/atmosphere/util/annotation/ZipFileIterator;
      24: invokevirtual #17                 // Method org/atmosphere/util/annotation/ZipFileIterator.getEntry:()Ljava/util/zip/ZipEntry;
      27: invokevirtual #18                 // Method java/util/zip/ZipEntry.getName:()Ljava/lang/String;
      30: areturn

  public boolean isFile();
    Code:
       0: aload_0
       1: getfield      #19                 // Field isFile:Z
       4: ireturn

  public java.io.InputStream next() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field fileIterator:Lorg/atmosphere/util/annotation/FileIterator;
       4: ifnull        164
       7: aload_0
       8: getfield      #14                 // Field zipIterator:Lorg/atmosphere/util/annotation/ZipFileIterator;
      11: ifnonnull     134
      14: aload_0
      15: getfield      #9                  // Field fileIterator:Lorg/atmosphere/util/annotation/FileIterator;
      18: invokevirtual #20                 // Method org/atmosphere/util/annotation/FileIterator.next:()Ljava/io/File;
      21: astore_1
      22: aload_1
      23: ifnonnull     28
      26: aconst_null
      27: areturn
      28: aload_1
      29: invokevirtual #21                 // Method java/io/File.getName:()Ljava/lang/String;
      32: astore_2
      33: aload_2
      34: ldc           #22                 // String .class
      36: invokevirtual #23                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      39: ifeq          56
      42: aload_0
      43: iconst_1
      44: putfield      #19                 // Field isFile:Z
      47: new           #24                 // class java/io/FileInputStream
      50: dup
      51: aload_1
      52: invokespecial #25                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      55: areturn
      56: aload_0
      57: getfield      #9                  // Field fileIterator:Lorg/atmosphere/util/annotation/FileIterator;
      60: invokevirtual #26                 // Method org/atmosphere/util/annotation/FileIterator.isRootFile:()Z
      63: ifeq          131
      66: aload_2
      67: ldc           #27                 // String .jar
      69: invokestatic  #28                 // Method endsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
      72: ifne          83
      75: aload_0
      76: aload_1
      77: invokespecial #29                 // Method isZipFile:(Ljava/io/File;)Z
      80: ifeq          131
      83: aload_1
      84: invokevirtual #30                 // Method java/io/File.exists:()Z
      87: ifeq          131
      90: aload_0
      91: new           #31                 // class org/atmosphere/util/annotation/ZipFileIterator
      94: dup
      95: new           #32                 // class java/util/zip/ZipFile
      98: dup
      99: aload_1
     100: invokespecial #33                 // Method java/util/zip/ZipFile."<init>":(Ljava/io/File;)V
     103: aload_0
     104: getfield      #10                 // Field pkgNameFilter:[Ljava/lang/String;
     107: invokespecial #34                 // Method org/atmosphere/util/annotation/ZipFileIterator."<init>":(Ljava/util/zip/ZipFile;[Ljava/lang/String;)V
     110: putfield      #14                 // Field zipIterator:Lorg/atmosphere/util/annotation/ZipFileIterator;
     113: goto          131
     116: astore_3
     117: aload_0
     118: getfield      #6                  // Field logger:Lorg/slf4j/Logger;
     121: ldc           #36                 // String Unable to construct file {}
     123: aload_1
     124: invokeinterface #37,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     129: aconst_null
     130: areturn
     131: goto          0
     134: aload_0
     135: getfield      #14                 // Field zipIterator:Lorg/atmosphere/util/annotation/ZipFileIterator;
     138: invokevirtual #38                 // Method org/atmosphere/util/annotation/ZipFileIterator.next:()Ljava/io/InputStream;
     141: astore_1
     142: aload_1
     143: ifnonnull     154
     146: aload_0
     147: aconst_null
     148: putfield      #14                 // Field zipIterator:Lorg/atmosphere/util/annotation/ZipFileIterator;
     151: goto          161
     154: aload_0
     155: iconst_0
     156: putfield      #19                 // Field isFile:Z
     159: aload_1
     160: areturn
     161: goto          0
     164: aload_0
     165: getfield      #11                 // Field inputStreamIterator:Lorg/atmosphere/util/annotation/InputStreamIterator;
     168: invokevirtual #39                 // Method org/atmosphere/util/annotation/InputStreamIterator.next:()Ljava/io/InputStream;
     171: areturn
     172: astore_1
     173: aload_0
     174: getfield      #6                  // Field logger:Lorg/slf4j/Logger;
     177: ldc           #40                 // String Unable to scan classes
     179: aload_1
     180: invokeinterface #41,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     185: aconst_null
     186: areturn
    Exception table:
       from    to  target type
          90   113   116   Class java/lang/Exception
           0    27   172   Class java/lang/Exception
          28    55   172   Class java/lang/Exception
          56   130   172   Class java/lang/Exception
         131   160   172   Class java/lang/Exception
         161   171   172   Class java/lang/Exception

  private boolean isZipFile(java.io.File) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: new           #42                 // class java/io/DataInputStream
       5: dup
       6: new           #24                 // class java/io/FileInputStream
       9: dup
      10: aload_1
      11: invokespecial #25                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      14: invokespecial #43                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      17: astore_2
      18: aload_2
      19: invokevirtual #44                 // Method java/io/DataInputStream.readInt:()I
      22: istore_3
      23: aload_2
      24: invokevirtual #45                 // Method java/io/DataInputStream.close:()V
      27: iload_3
      28: ldc           #46                 // int 1347093252
      30: if_icmpne     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: istore        4
      40: aload_2
      41: ifnull        53
      44: aload_2
      45: invokevirtual #45                 // Method java/io/DataInputStream.close:()V
      48: goto          53
      51: astore        5
      53: iload         4
      55: ireturn
      56: astore_3
      57: aload_2
      58: ifnull        65
      61: aload_2
      62: invokevirtual #45                 // Method java/io/DataInputStream.close:()V
      65: iconst_0
      66: istore        4
      68: aload_2
      69: ifnull        81
      72: aload_2
      73: invokevirtual #45                 // Method java/io/DataInputStream.close:()V
      76: goto          81
      79: astore        5
      81: iload         4
      83: ireturn
      84: astore        6
      86: aload_2
      87: ifnull        99
      90: aload_2
      91: invokevirtual #45                 // Method java/io/DataInputStream.close:()V
      94: goto          99
      97: astore        7
      99: aload         6
     101: athrow
    Exception table:
       from    to  target type
          44    48    51   Class java/io/IOException
           2    40    56   Class java/lang/Exception
          72    76    79   Class java/io/IOException
           2    40    84   any
          56    68    84   any
          90    94    97   Class java/io/IOException
          84    86    84   any

  private static java.io.File[] classPath();
    Code:
       0: ldc           #48                 // String java.class.path
       2: invokestatic  #49                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: getstatic     #50                 // Field java/io/File.pathSeparator:Ljava/lang/String;
       8: invokevirtual #51                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      11: astore_0
      12: aload_0
      13: arraylength
      14: anewarray     #52                 // class java/io/File
      17: astore_1
      18: iconst_0
      19: istore_2
      20: iload_2
      21: aload_1
      22: arraylength
      23: if_icmpge     45
      26: aload_1
      27: iload_2
      28: new           #52                 // class java/io/File
      31: dup
      32: aload_0
      33: iload_2
      34: aaload
      35: invokespecial #53                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      38: aastore
      39: iinc          2, 1
      42: goto          20
      45: aload_1
      46: areturn

  private static boolean endsWithIgnoreCase(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #54                 // Method java/lang/String.length:()I
       4: istore_2
       5: aload_0
       6: iconst_1
       7: aload_0
       8: invokevirtual #54                 // Method java/lang/String.length:()I
      11: iload_2
      12: isub
      13: aload_1
      14: iconst_0
      15: iload_2
      16: invokevirtual #55                 // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
      19: ireturn
}
