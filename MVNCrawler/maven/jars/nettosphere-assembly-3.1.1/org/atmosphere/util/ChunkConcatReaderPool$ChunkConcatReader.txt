Compiled from "ChunkConcatReaderPool.java"
class org.atmosphere.util.ChunkConcatReaderPool$ChunkConcatReader extends java.io.Reader {
  private java.lang.String key;

  private java.util.Deque<java.io.Reader> readers;

  private boolean continued;

  private boolean closed;

  final org.atmosphere.util.ChunkConcatReaderPool this$0;

  public org.atmosphere.util.ChunkConcatReaderPool$ChunkConcatReader(org.atmosphere.util.ChunkConcatReaderPool, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/atmosphere/util/ChunkConcatReaderPool;
       5: aload_0
       6: invokespecial #2                  // Method java/io/Reader."<init>":()V
       9: aload_0
      10: new           #3                  // class java/util/LinkedList
      13: dup
      14: invokespecial #4                  // Method java/util/LinkedList."<init>":()V
      17: putfield      #5                  // Field readers:Ljava/util/Deque;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field key:Ljava/lang/String;
      25: return

  public int read(char[], int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: aload_0
       4: getfield      #7                  // Field closed:Z
       7: ifne          215
      10: iload         4
      12: iload_3
      13: if_icmpge     215
      16: aload_0
      17: getfield      #5                  // Field readers:Ljava/util/Deque;
      20: invokeinterface #8,  1            // InterfaceMethod java/util/Deque.isEmpty:()Z
      25: ifeq          124
      28: aload_0
      29: getfield      #9                  // Field continued:Z
      32: ifeq          215
      35: iload         4
      37: ifle          43
      40: goto          215
      43: aload_0
      44: getfield      #5                  // Field readers:Ljava/util/Deque;
      47: dup
      48: astore        5
      50: monitorenter
      51: aload_0
      52: getfield      #5                  // Field readers:Ljava/util/Deque;
      55: invokeinterface #8,  1            // InterfaceMethod java/util/Deque.isEmpty:()Z
      60: ifne          69
      63: aload         5
      65: monitorexit
      66: goto          3
      69: aload_0
      70: getfield      #5                  // Field readers:Ljava/util/Deque;
      73: aload_0
      74: getfield      #1                  // Field this$0:Lorg/atmosphere/util/ChunkConcatReaderPool;
      77: invokestatic  #10                 // Method org/atmosphere/util/ChunkConcatReaderPool.access$000:(Lorg/atmosphere/util/ChunkConcatReaderPool;)J
      80: invokevirtual #11                 // Method java/lang/Object.wait:(J)V
      83: goto          88
      86: astore        6
      88: aload_0
      89: getfield      #5                  // Field readers:Ljava/util/Deque;
      92: invokeinterface #8,  1            // InterfaceMethod java/util/Deque.isEmpty:()Z
      97: ifeq          110
     100: new           #13                 // class java/io/IOException
     103: dup
     104: ldc           #14                 // String Read timeout
     106: invokespecial #15                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: aload         5
     112: monitorexit
     113: goto          3
     116: astore        7
     118: aload         5
     120: monitorexit
     121: aload         7
     123: athrow
     124: aload_0
     125: getfield      #5                  // Field readers:Ljava/util/Deque;
     128: invokeinterface #16,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
     133: checkcast     #17                 // class java/io/Reader
     136: astore        5
     138: aload         5
     140: aload_1
     141: iload_2
     142: iload         4
     144: iadd
     145: iload_3
     146: iload         4
     148: isub
     149: invokevirtual #18                 // Method java/io/Reader.read:([CII)I
     152: istore        6
     154: iload         6
     156: iconst_m1
     157: if_icmpne     205
     160: aload_0
     161: getfield      #5                  // Field readers:Ljava/util/Deque;
     164: dup
     165: astore        7
     167: monitorenter
     168: aload_0
     169: getfield      #5                  // Field readers:Ljava/util/Deque;
     172: invokeinterface #19,  1           // InterfaceMethod java/util/Deque.removeFirst:()Ljava/lang/Object;
     177: pop
     178: aload         7
     180: monitorexit
     181: goto          192
     184: astore        8
     186: aload         7
     188: monitorexit
     189: aload         8
     191: athrow
     192: aload         5
     194: invokevirtual #20                 // Method java/io/Reader.close:()V
     197: goto          3
     200: astore        7
     202: goto          3
     205: iload         4
     207: iload         6
     209: iadd
     210: istore        4
     212: goto          3
     215: iload         4
     217: ifne          224
     220: iconst_m1
     221: goto          226
     224: iload         4
     226: ireturn
    Exception table:
       from    to  target type
          69    83    86   Class java/lang/InterruptedException
          51    66   116   any
          69   113   116   any
         116   121   116   any
         168   181   184   any
         184   189   184   any
         192   197   200   Class java/io/IOException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #5                  // Field readers:Ljava/util/Deque;
      12: invokeinterface #21,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
      17: astore_1
      18: aload_1
      19: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          48
      27: aload_1
      28: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #17                 // class java/io/Reader
      36: astore_2
      37: aload_2
      38: invokevirtual #20                 // Method java/io/Reader.close:()V
      41: goto          45
      44: astore_3
      45: goto          18
      48: aload_0
      49: getfield      #1                  // Field this$0:Lorg/atmosphere/util/ChunkConcatReaderPool;
      52: aload_0
      53: getfield      #6                  // Field key:Ljava/lang/String;
      56: invokevirtual #24                 // Method org/atmosphere/util/ChunkConcatReaderPool.releaseReader:(Ljava/lang/String;)V
      59: aload_0
      60: iconst_1
      61: putfield      #7                  // Field closed:Z
      64: aload_0
      65: getfield      #5                  // Field readers:Ljava/util/Deque;
      68: dup
      69: astore_1
      70: monitorenter
      71: aload_0
      72: getfield      #5                  // Field readers:Ljava/util/Deque;
      75: invokevirtual #25                 // Method java/lang/Object.notifyAll:()V
      78: aload_1
      79: monitorexit
      80: goto          90
      83: astore        4
      85: aload_1
      86: monitorexit
      87: aload         4
      89: athrow
      90: return
    Exception table:
       from    to  target type
          37    41    44   Class java/io/IOException
          71    80    83   any
          83    87    83   any

  public boolean ready() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field readers:Ljava/util/Deque;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/Deque.isEmpty:()Z
       9: ifeq          14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: getfield      #5                  // Field readers:Ljava/util/Deque;
      18: invokeinterface #16,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
      23: checkcast     #17                 // class java/io/Reader
      26: invokevirtual #26                 // Method java/io/Reader.ready:()Z
      29: ireturn

  void addChunk(java.io.Reader, boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field readers:Ljava/util/Deque;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field readers:Ljava/util/Deque;
      11: aload_1
      12: invokeinterface #27,  2           // InterfaceMethod java/util/Deque.addLast:(Ljava/lang/Object;)V
      17: aload_0
      18: getfield      #5                  // Field readers:Ljava/util/Deque;
      21: invokevirtual #25                 // Method java/lang/Object.notifyAll:()V
      24: aload_0
      25: iload_2
      26: putfield      #9                  // Field continued:Z
      29: aload_3
      30: monitorexit
      31: goto          41
      34: astore        4
      36: aload_3
      37: monitorexit
      38: aload         4
      40: athrow
      41: return
    Exception table:
       from    to  target type
           7    31    34   any
          34    38    34   any
}
