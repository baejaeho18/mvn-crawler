Compiled from "ForkJoinPool.java"
public class org.atmosphere.util.ForkJoinPool extends java.util.concurrent.AbstractExecutorService {
  private static final org.slf4j.Logger logger;

  private final java.util.concurrent.AbstractExecutorService forkJoinPool;

  private final boolean shared;

  public org.atmosphere.util.ForkJoinPool(boolean, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/util/concurrent/AbstractExecutorService."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #1                  // Field shared:Z
       9: aload_0
      10: new           #3                  // class java/util/concurrent/ForkJoinPool
      13: dup
      14: invokestatic  #4                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      17: invokevirtual #5                  // Method java/lang/Runtime.availableProcessors:()I
      20: new           #6                  // class org/atmosphere/util/ForkJoinPool$1
      23: dup
      24: aload_0
      25: aload_2
      26: invokespecial #7                  // Method org/atmosphere/util/ForkJoinPool$1."<init>":(Lorg/atmosphere/util/ForkJoinPool;Ljava/lang/String;)V
      29: aconst_null
      30: iconst_0
      31: invokespecial #8                  // Method java/util/concurrent/ForkJoinPool."<init>":(ILjava/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory;Ljava/lang/Thread$UncaughtExceptionHandler;Z)V
      34: putfield      #9                  // Field forkJoinPool:Ljava/util/concurrent/AbstractExecutorService;
      37: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
      40: ldc           #11                 // String Using ForkJoinPool  {}. Set the {} to -1 to fully use its power.
      42: aload_0
      43: getfield      #9                  // Field forkJoinPool:Ljava/util/concurrent/AbstractExecutorService;
      46: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      49: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
      52: ldc           #15                 // String org.atmosphere.cpr.broadcaster.maxAsyncWriteThreads
      54: invokeinterface #16,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      59: return

  public java.util.concurrent.AbstractExecutorService pool();
    Code:
       0: aload_0
       1: getfield      #9                  // Field forkJoinPool:Ljava/util/concurrent/AbstractExecutorService;
       4: areturn

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #9                  // Field forkJoinPool:Ljava/util/concurrent/AbstractExecutorService;
       4: invokevirtual #17                 // Method java/util/concurrent/AbstractExecutorService.shutdown:()V
       7: return

  public java.util.List<java.lang.Runnable> shutdownNow();
    Code:
       0: aload_0
       1: getfield      #9                  // Field forkJoinPool:Ljava/util/concurrent/AbstractExecutorService;
       4: invokevirtual #18                 // Method java/util/concurrent/AbstractExecutorService.shutdownNow:()Ljava/util/List;
       7: areturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #9                  // Field forkJoinPool:Ljava/util/concurrent/AbstractExecutorService;
       4: invokevirtual #19                 // Method java/util/concurrent/AbstractExecutorService.isShutdown:()Z
       7: ireturn

  public boolean isTerminated();
    Code:
       0: aload_0
       1: getfield      #9                  // Field forkJoinPool:Ljava/util/concurrent/AbstractExecutorService;
       4: invokevirtual #20                 // Method java/util/concurrent/AbstractExecutorService.isTerminated:()Z
       7: ireturn

  public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field forkJoinPool:Ljava/util/concurrent/AbstractExecutorService;
       4: lload_1
       5: aload_3
       6: invokevirtual #21                 // Method java/util/concurrent/AbstractExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
       9: ireturn

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #9                  // Field forkJoinPool:Ljava/util/concurrent/AbstractExecutorService;
       4: aload_1
       5: invokevirtual #22                 // Method java/util/concurrent/AbstractExecutorService.execute:(Ljava/lang/Runnable;)V
       8: return

  static boolean access$000(org.atmosphere.util.ForkJoinPool);
    Code:
       0: aload_0
       1: getfield      #1                  // Field shared:Z
       4: ireturn

  static {};
    Code:
       0: ldc           #23                 // class org/atmosphere/util/ForkJoinPool
       2: invokestatic  #24                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #10                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
