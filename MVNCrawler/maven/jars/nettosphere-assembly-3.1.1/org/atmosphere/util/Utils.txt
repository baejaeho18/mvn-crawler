Compiled from "Utils.java"
public final class org.atmosphere.util.Utils {
  private static final org.slf4j.Logger LOGGER;

  public org.atmosphere.util.Utils();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  public static final boolean webSocketEnabled(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method closeMessage:(Ljavax/servlet/http/HttpServletRequest;)Z
       4: ifne          14
       7: aload_0
       8: invokestatic  #5                  // Method webSocketQueryStringPresentOrNull:(Ljavax/servlet/http/HttpServletRequest;)Z
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: ldc           #6                  // String X-Atmosphere-WebSocket-Proxy
      19: invokeinterface #7,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      24: ifnull        31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: istore_1
      33: iload_1
      34: ifeq          39
      37: iconst_1
      38: ireturn
      39: aload_0
      40: invokestatic  #8                  // Method rawWebSocket:(Ljavax/servlet/http/HttpServletRequest;)Z
      43: istore_2
      44: iload_2
      45: ireturn

  public static final boolean rawWebSocket(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: ldc           #9                  // String Connection
       3: invokeinterface #10,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeaders:(Ljava/lang/String;)Ljava/util/Enumeration;
       8: astore_1
       9: aload_1
      10: ifnull        22
      13: aload_1
      14: invokeinterface #11,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      19: ifne          31
      22: aload_0
      23: ldc           #12                 // String connection
      25: invokeinterface #10,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeaders:(Ljava/lang/String;)Ljava/util/Enumeration;
      30: astore_1
      31: aload_1
      32: ifnull        105
      35: aload_1
      36: invokeinterface #11,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      41: ifeq          105
      44: aload_1
      45: invokeinterface #13,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      50: checkcast     #14                 // class java/lang/String
      53: invokevirtual #15                 // Method java/lang/String.toString:()Ljava/lang/String;
      56: ldc           #16                 // String ,
      58: invokevirtual #17                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      61: astore_2
      62: aload_2
      63: astore_3
      64: aload_3
      65: arraylength
      66: istore        4
      68: iconst_0
      69: istore        5
      71: iload         5
      73: iload         4
      75: if_icmpge     105
      78: aload_3
      79: iload         5
      81: aaload
      82: astore        6
      84: aload         6
      86: invokevirtual #18                 // Method java/lang/String.trim:()Ljava/lang/String;
      89: ldc           #19                 // String Upgrade
      91: invokevirtual #20                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      94: ifeq          99
      97: iconst_1
      98: ireturn
      99: iinc          5, 1
     102: goto          71
     105: iconst_0
     106: ireturn

  public static final boolean firefoxWebSocketEnabled(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method webSocketEnabled:(Ljavax/servlet/http/HttpServletRequest;)Z
       4: ifeq          69
       7: aload_0
       8: ldc           #22                 // String X-atmo-protocol
      10: invokeinterface #7,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      15: ifnull        69
      18: aload_0
      19: ldc           #22                 // String X-atmo-protocol
      21: invokeinterface #7,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      26: ldc           #23                 // String true
      28: invokevirtual #24                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifeq          69
      34: aload_0
      35: ldc           #25                 // String User-Agent
      37: invokeinterface #7,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      42: ifnull        69
      45: aload_0
      46: ldc           #25                 // String User-Agent
      48: invokeinterface #7,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      53: invokevirtual #26                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      56: ldc           #27                 // String firefox
      58: invokevirtual #28                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      61: iconst_m1
      62: if_icmpeq     69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: ireturn

  public static final boolean twoConnectionsTransport(org.atmosphere.cpr.AtmosphereResource$TRANSPORT);
    Code:
       0: getstatic     #29                 // Field org/atmosphere/util/Utils$1.$SwitchMap$org$atmosphere$cpr$AtmosphereResource$TRANSPORT:[I
       3: aload_0
       4: invokevirtual #30                 // Method org/atmosphere/cpr/AtmosphereResource$TRANSPORT.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 6
                     1: 48
                     2: 48
                     3: 48
                     4: 48
                     5: 48
                     6: 48
               default: 50
          }
      48: iconst_1
      49: ireturn
      50: iconst_0
      51: ireturn

  public static final boolean webSocketQueryStringPresentOrNull(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: ldc           #31                 // String X-Atmosphere-Transport
       3: invokeinterface #7,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_1
       9: aload_1
      10: ifnonnull     15
      13: iconst_1
      14: ireturn
      15: aload_1
      16: ldc           #32                 // String websocket
      18: invokevirtual #20                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      21: ireturn

  public static final boolean resumableTransport(org.atmosphere.cpr.AtmosphereResource$TRANSPORT);
    Code:
       0: getstatic     #29                 // Field org/atmosphere/util/Utils$1.$SwitchMap$org$atmosphere$cpr$AtmosphereResource$TRANSPORT:[I
       3: aload_0
       4: invokevirtual #30                 // Method org/atmosphere/cpr/AtmosphereResource$TRANSPORT.ordinal:()I
       7: iaload
       8: lookupswitch  { // 2
                     1: 36
                     2: 36
               default: 38
          }
      36: iconst_1
      37: ireturn
      38: iconst_0
      39: ireturn

  public static final boolean pollableTransport(org.atmosphere.cpr.AtmosphereResource$TRANSPORT);
    Code:
       0: getstatic     #29                 // Field org/atmosphere/util/Utils$1.$SwitchMap$org$atmosphere$cpr$AtmosphereResource$TRANSPORT:[I
       3: aload_0
       4: invokevirtual #30                 // Method org/atmosphere/cpr/AtmosphereResource$TRANSPORT.ordinal:()I
       7: iaload
       8: tableswitch   { // 5 to 8
                     5: 40
                     6: 42
                     7: 40
                     8: 40
               default: 42
          }
      40: iconst_1
      41: ireturn
      42: iconst_0
      43: ireturn

  public static final boolean pushMessage(org.atmosphere.cpr.AtmosphereResource$TRANSPORT);
    Code:
       0: getstatic     #29                 // Field org/atmosphere/util/Utils$1.$SwitchMap$org$atmosphere$cpr$AtmosphereResource$TRANSPORT:[I
       3: aload_0
       4: invokevirtual #30                 // Method org/atmosphere/cpr/AtmosphereResource$TRANSPORT.ordinal:()I
       7: iaload
       8: tableswitch   { // 5 to 9
                     5: 44
                     6: 46
                     7: 46
                     8: 44
                     9: 44
               default: 46
          }
      44: iconst_1
      45: ireturn
      46: iconst_0
      47: ireturn

  public static final boolean atmosphereProtocol(org.atmosphere.cpr.AtmosphereRequest);
    Code:
       0: aload_0
       1: ldc           #22                 // String X-atmo-protocol
       3: invokeinterface #33,  2           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_1
       9: aload_1
      10: ifnull        27
      13: aload_1
      14: invokestatic  #34                 // Method java/lang/Boolean.valueOf:(Ljava/lang/String;)Ljava/lang/Boolean;
      17: invokevirtual #35                 // Method java/lang/Boolean.booleanValue:()Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public static final boolean webSocketMessage(org.atmosphere.cpr.AtmosphereResource);
    Code:
       0: ldc           #36                 // class org/atmosphere/cpr/AtmosphereResourceImpl
       2: aload_0
       3: invokevirtual #37                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
       6: checkcast     #36                 // class org/atmosphere/cpr/AtmosphereResourceImpl
       9: iconst_0
      10: invokevirtual #38                 // Method org/atmosphere/cpr/AtmosphereResourceImpl.getRequest:(Z)Lorg/atmosphere/cpr/AtmosphereRequest;
      13: astore_1
      14: aload_1
      15: getstatic     #39                 // Field org/atmosphere/cpr/FrameworkConfig.WEBSOCKET_MESSAGE:Ljava/lang/String;
      18: invokeinterface #40,  2           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      23: ifnull        30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public static boolean properProtocol(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: ldc           #9                  // String Connection
       3: invokeinterface #10,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeaders:(Ljava/lang/String;)Ljava/util/Enumeration;
       8: astore_1
       9: aload_1
      10: ifnull        22
      13: aload_1
      14: invokeinterface #11,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      19: ifne          31
      22: aload_0
      23: ldc           #12                 // String connection
      25: invokeinterface #10,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeaders:(Ljava/lang/String;)Ljava/util/Enumeration;
      30: astore_1
      31: iconst_0
      32: istore_2
      33: aload_0
      34: ldc           #41                 // String sec-websocket-version
      36: invokeinterface #7,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      41: ifnonnull     55
      44: aload_0
      45: ldc           #42                 // String Sec-WebSocket-Draft
      47: invokeinterface #7,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      52: ifnull        59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: istore_3
      61: aload_1
      62: ifnull        140
      65: aload_1
      66: invokeinterface #11,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      71: ifeq          140
      74: aload_1
      75: invokeinterface #13,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      80: checkcast     #14                 // class java/lang/String
      83: invokevirtual #15                 // Method java/lang/String.toString:()Ljava/lang/String;
      86: ldc           #16                 // String ,
      88: invokevirtual #17                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      91: astore        4
      93: aload         4
      95: astore        5
      97: aload         5
      99: arraylength
     100: istore        6
     102: iconst_0
     103: istore        7
     105: iload         7
     107: iload         6
     109: if_icmpge     140
     112: aload         5
     114: iload         7
     116: aaload
     117: astore        8
     119: aload         8
     121: invokevirtual #18                 // Method java/lang/String.trim:()Ljava/lang/String;
     124: ldc           #43                 // String upgrade
     126: invokevirtual #20                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     129: ifeq          134
     132: iconst_1
     133: istore_2
     134: iinc          7, 1
     137: goto          105
     140: iload_3
     141: ifeq          148
     144: iload_2
     145: goto          149
     148: iconst_1
     149: ireturn

  public static final org.atmosphere.cpr.AtmosphereResource websocketResource(org.atmosphere.cpr.AtmosphereResource);
    Code:
       0: ldc           #36                 // class org/atmosphere/cpr/AtmosphereResourceImpl
       2: aload_0
       3: invokevirtual #37                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
       6: checkcast     #36                 // class org/atmosphere/cpr/AtmosphereResourceImpl
       9: iconst_0
      10: invokevirtual #38                 // Method org/atmosphere/cpr/AtmosphereResourceImpl.getRequest:(Z)Lorg/atmosphere/cpr/AtmosphereRequest;
      13: ldc           #44                 // String org.atmosphere.cpr.AtmosphereResource.suspended.uuid
      15: invokeinterface #40,  2           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      20: checkcast     #14                 // class java/lang/String
      23: astore_1
      24: aload_1
      25: ifnull        50
      28: aload_0
      29: invokeinterface #45,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.getAtmosphereConfig:()Lorg/atmosphere/cpr/AtmosphereConfig;
      34: invokevirtual #46                 // Method org/atmosphere/cpr/AtmosphereConfig.resourcesFactory:()Lorg/atmosphere/cpr/AtmosphereResourceFactory;
      37: aload_1
      38: invokeinterface #47,  2           // InterfaceMethod org/atmosphere/cpr/AtmosphereResourceFactory.find:(Ljava/lang/String;)Lorg/atmosphere/cpr/AtmosphereResource;
      43: astore_2
      44: aload_2
      45: ifnull        50
      48: aload_2
      49: astore_0
      50: aload_0
      51: areturn

  public static final boolean closeMessage(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: ldc           #31                 // String X-Atmosphere-Transport
       3: invokeinterface #7,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_1
       9: aload_1
      10: ifnull        26
      13: aload_1
      14: ldc           #48                 // String close
      16: invokevirtual #20                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public static java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        64
       4: aload_1
       5: aload_0
       6: aload_2
       7: ifnull        18
      10: aload_1
      11: invokevirtual #49                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      14: arraylength
      15: ifne          25
      18: iconst_0
      19: anewarray     #50                 // class java/lang/Object
      22: goto          33
      25: iconst_1
      26: anewarray     #50                 // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_2
      32: aastore
      33: invokevirtual #51                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      36: areturn
      37: astore_3
      38: getstatic     #53                 // Field LOGGER:Lorg/slf4j/Logger;
      41: ldc           #54                 // String
      43: aload_3
      44: invokeinterface #55,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      49: goto          64
      52: astore_3
      53: getstatic     #53                 // Field LOGGER:Lorg/slf4j/Logger;
      56: ldc           #54                 // String
      58: aload_3
      59: invokeinterface #55,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      64: getstatic     #53                 // Field LOGGER:Lorg/slf4j/Logger;
      67: ldc           #57                 // String No Method Mapped for {}
      69: aload_2
      70: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      75: aconst_null
      76: areturn
    Exception table:
       from    to  target type
           4    36    37   Class java/lang/IllegalAccessException
           4    36    52   Class java/lang/reflect/InvocationTargetException

  public static final void inject(org.atmosphere.cpr.AtmosphereResource) throws java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokeinterface #45,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.getAtmosphereConfig:()Lorg/atmosphere/cpr/AtmosphereConfig;
       6: astore_1
       7: aload_1
       8: invokevirtual #59                 // Method org/atmosphere/cpr/AtmosphereConfig.properties:()Ljava/util/Map;
      11: getstatic     #60                 // Field org/atmosphere/cpr/FrameworkConfig.NEED_RUNTIME_INJECTION:Ljava/lang/String;
      14: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: ifnonnull     23
      22: return
      23: aload_1
      24: invokevirtual #62                 // Method org/atmosphere/cpr/AtmosphereConfig.framework:()Lorg/atmosphere/cpr/AtmosphereFramework;
      27: invokevirtual #63                 // Method org/atmosphere/cpr/AtmosphereFramework.objectFactory:()Lorg/atmosphere/cpr/AtmosphereObjectFactory;
      30: astore_2
      31: ldc           #64                 // class org/atmosphere/inject/InjectableObjectFactory
      33: aload_2
      34: invokevirtual #65                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      37: invokevirtual #66                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      40: ifne          44
      43: return
      44: aload_0
      45: invokestatic  #67                 // Method injectWith:(Lorg/atmosphere/cpr/AtmosphereResource;)Ljava/lang/Object;
      48: astore_3
      49: aload_3
      50: ifnull        62
      53: aload_3
      54: aload_3
      55: invokevirtual #65                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      58: aload_0
      59: invokestatic  #68                 // Method inject:(Ljava/lang/Object;Ljava/lang/Class;Lorg/atmosphere/cpr/AtmosphereResource;)V
      62: return

  public static final void inject(java.lang.Object, java.lang.Class, org.atmosphere.cpr.AtmosphereResource) throws java.lang.IllegalAccessException;
    Code:
       0: ldc           #64                 // class org/atmosphere/inject/InjectableObjectFactory
       2: aload_2
       3: invokeinterface #45,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.getAtmosphereConfig:()Lorg/atmosphere/cpr/AtmosphereConfig;
       8: invokevirtual #62                 // Method org/atmosphere/cpr/AtmosphereConfig.framework:()Lorg/atmosphere/cpr/AtmosphereFramework;
      11: invokevirtual #63                 // Method org/atmosphere/cpr/AtmosphereFramework.objectFactory:()Lorg/atmosphere/cpr/AtmosphereObjectFactory;
      14: invokevirtual #37                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #64                 // class org/atmosphere/inject/InjectableObjectFactory
      20: aload_0
      21: aload_1
      22: aload_2
      23: invokevirtual #69                 // Method org/atmosphere/inject/InjectableObjectFactory.requestScoped:(Ljava/lang/Object;Ljava/lang/Class;Lorg/atmosphere/cpr/AtmosphereResource;)V
      26: return

  public static final void inject(java.lang.Object, java.lang.Class, org.atmosphere.cpr.AtmosphereConfig) throws java.lang.IllegalAccessException;
    Code:
       0: ldc           #64                 // class org/atmosphere/inject/InjectableObjectFactory
       2: aload_2
       3: invokevirtual #62                 // Method org/atmosphere/cpr/AtmosphereConfig.framework:()Lorg/atmosphere/cpr/AtmosphereFramework;
       6: invokevirtual #63                 // Method org/atmosphere/cpr/AtmosphereFramework.objectFactory:()Lorg/atmosphere/cpr/AtmosphereObjectFactory;
       9: invokevirtual #37                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #64                 // class org/atmosphere/inject/InjectableObjectFactory
      15: aload_0
      16: aload_1
      17: invokevirtual #70                 // Method org/atmosphere/inject/InjectableObjectFactory.requestScoped:(Ljava/lang/Object;Ljava/lang/Class;)V
      20: return

  private static final java.lang.Object injectWith(org.atmosphere.cpr.AtmosphereResource);
    Code:
       0: aload_0
       1: invokeinterface #71,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.getAtmosphereHandler:()Lorg/atmosphere/cpr/AtmosphereHandler;
       6: astore_1
       7: getstatic     #72                 // Field org/atmosphere/cpr/AtmosphereFramework.REFLECTOR_ATMOSPHEREHANDLER:Lorg/atmosphere/cpr/AtmosphereHandler;
      10: invokevirtual #65                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: aload_1
      14: invokevirtual #65                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: invokevirtual #66                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      20: ifeq          50
      23: ldc           #73                 // class org/atmosphere/websocket/WebSocketProcessor$WebSocketHandlerProxy
      25: ldc           #36                 // class org/atmosphere/cpr/AtmosphereResourceImpl
      27: aload_0
      28: invokevirtual #37                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #36                 // class org/atmosphere/cpr/AtmosphereResourceImpl
      34: invokevirtual #74                 // Method org/atmosphere/cpr/AtmosphereResourceImpl.webSocket:()Lorg/atmosphere/websocket/WebSocket;
      37: invokevirtual #75                 // Method org/atmosphere/websocket/WebSocket.webSocketHandler:()Lorg/atmosphere/websocket/WebSocketHandler;
      40: invokevirtual #37                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #73                 // class org/atmosphere/websocket/WebSocketProcessor$WebSocketHandlerProxy
      46: invokevirtual #76                 // Method org/atmosphere/websocket/WebSocketProcessor$WebSocketHandlerProxy.proxied:()Lorg/atmosphere/websocket/WebSocketHandler;
      49: areturn
      50: aload_1
      51: invokestatic  #77                 // Method injectWith:(Lorg/atmosphere/cpr/AtmosphereHandler;)Ljava/lang/Object;
      54: areturn

  private static java.lang.Object injectWith(org.atmosphere.cpr.AtmosphereHandler);
    Code:
       0: ldc           #78                 // class org/atmosphere/handler/AnnotatedProxy
       2: aload_0
       3: invokevirtual #65                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: invokevirtual #66                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ifeq          27
      12: ldc           #78                 // class org/atmosphere/handler/AnnotatedProxy
      14: aload_0
      15: invokevirtual #37                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #78                 // class org/atmosphere/handler/AnnotatedProxy
      21: invokeinterface #79,  1           // InterfaceMethod org/atmosphere/handler/AnnotatedProxy.target:()Ljava/lang/Object;
      26: areturn
      27: ldc           #80                 // class org/atmosphere/handler/ReflectorServletProcessor
      29: aload_0
      30: invokevirtual #65                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      33: invokevirtual #66                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      36: ifeq          52
      39: ldc           #80                 // class org/atmosphere/handler/ReflectorServletProcessor
      41: aload_0
      42: invokevirtual #37                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #80                 // class org/atmosphere/handler/ReflectorServletProcessor
      48: invokevirtual #81                 // Method org/atmosphere/handler/ReflectorServletProcessor.getServlet:()Ljavax/servlet/Servlet;
      51: areturn
      52: aload_0
      53: areturn

  public static final java.util.Set<java.lang.reflect.Field> getInheritedPrivateFields(java.lang.Class<?>);
    Code:
       0: new           #82                 // class java/util/HashSet
       3: dup
       4: invokespecial #83                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: astore_2
      10: aload_2
      11: ifnull        76
      14: aload_2
      15: ldc           #50                 // class java/lang/Object
      17: if_acmpeq     76
      20: aload_2
      21: invokevirtual #84                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      24: astore_3
      25: aload_3
      26: arraylength
      27: istore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: iload         4
      36: if_icmpge     68
      39: aload_3
      40: iload         5
      42: aaload
      43: astore        6
      45: aload         6
      47: invokevirtual #85                 // Method java/lang/reflect/Field.isSynthetic:()Z
      50: ifne          62
      53: aload_1
      54: aload         6
      56: invokeinterface #86,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      61: pop
      62: iinc          5, 1
      65: goto          32
      68: aload_2
      69: invokevirtual #87                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      72: astore_2
      73: goto          10
      76: aload_1
      77: areturn

  public static final java.util.Set<java.lang.reflect.Method> getInheritedPrivateMethod(java.lang.Class<?>);
    Code:
       0: new           #82                 // class java/util/HashSet
       3: dup
       4: invokespecial #83                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: astore_2
      10: aload_2
      11: ifnull        76
      14: aload_2
      15: ldc           #50                 // class java/lang/Object
      17: if_acmpeq     76
      20: aload_2
      21: invokevirtual #88                 // Method java/lang/Class.getDeclaredMethods:()[Ljava/lang/reflect/Method;
      24: astore_3
      25: aload_3
      26: arraylength
      27: istore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: iload         4
      36: if_icmpge     68
      39: aload_3
      40: iload         5
      42: aaload
      43: astore        6
      45: aload         6
      47: invokevirtual #89                 // Method java/lang/reflect/Method.isSynthetic:()Z
      50: ifne          62
      53: aload_1
      54: aload         6
      56: invokeinterface #86,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      61: pop
      62: iinc          5, 1
      65: goto          32
      68: aload_2
      69: invokevirtual #87                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      72: astore_2
      73: goto          10
      76: aload_1
      77: areturn

  public static final boolean requestScopedInjection(org.atmosphere.cpr.AtmosphereConfig, org.atmosphere.cpr.AtmosphereHandler);
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method org/atmosphere/cpr/AtmosphereConfig.framework:()Lorg/atmosphere/cpr/AtmosphereFramework;
       4: invokevirtual #63                 // Method org/atmosphere/cpr/AtmosphereFramework.objectFactory:()Lorg/atmosphere/cpr/AtmosphereObjectFactory;
       7: astore_2
       8: ldc           #64                 // class org/atmosphere/inject/InjectableObjectFactory
      10: aload_2
      11: invokevirtual #65                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #66                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: invokestatic  #77                 // Method injectWith:(Lorg/atmosphere/cpr/AtmosphereHandler;)Ljava/lang/Object;
      26: astore_3
      27: aload_3
      28: ifnonnull     35
      31: iconst_0
      32: goto          57
      35: ldc           #64                 // class org/atmosphere/inject/InjectableObjectFactory
      37: aload_0
      38: invokevirtual #62                 // Method org/atmosphere/cpr/AtmosphereConfig.framework:()Lorg/atmosphere/cpr/AtmosphereFramework;
      41: invokevirtual #63                 // Method org/atmosphere/cpr/AtmosphereFramework.objectFactory:()Lorg/atmosphere/cpr/AtmosphereObjectFactory;
      44: invokevirtual #37                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #64                 // class org/atmosphere/inject/InjectableObjectFactory
      50: aload_3
      51: invokevirtual #65                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      54: invokevirtual #90                 // Method org/atmosphere/inject/InjectableObjectFactory.needRequestScoped:(Ljava/lang/Class;)Z
      57: ireturn
      58: astore_3
      59: getstatic     #53                 // Field LOGGER:Lorg/slf4j/Logger;
      62: ldc           #54                 // String
      64: aload_3
      65: invokeinterface #92,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      70: iconst_0
      71: ireturn
    Exception table:
       from    to  target type
          22    57    58   Class java/lang/Exception

  public static final boolean requestScopedInjection(org.atmosphere.cpr.AtmosphereConfig, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method org/atmosphere/cpr/AtmosphereConfig.framework:()Lorg/atmosphere/cpr/AtmosphereFramework;
       4: invokevirtual #63                 // Method org/atmosphere/cpr/AtmosphereFramework.objectFactory:()Lorg/atmosphere/cpr/AtmosphereObjectFactory;
       7: astore_2
       8: ldc           #64                 // class org/atmosphere/inject/InjectableObjectFactory
      10: aload_2
      11: invokevirtual #65                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #66                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: ldc           #64                 // class org/atmosphere/inject/InjectableObjectFactory
      24: aload_0
      25: invokevirtual #62                 // Method org/atmosphere/cpr/AtmosphereConfig.framework:()Lorg/atmosphere/cpr/AtmosphereFramework;
      28: invokevirtual #63                 // Method org/atmosphere/cpr/AtmosphereFramework.objectFactory:()Lorg/atmosphere/cpr/AtmosphereObjectFactory;
      31: invokevirtual #37                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #64                 // class org/atmosphere/inject/InjectableObjectFactory
      37: aload_1
      38: invokevirtual #65                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      41: invokevirtual #90                 // Method org/atmosphere/inject/InjectableObjectFactory.needRequestScoped:(Ljava/lang/Class;)Z
      44: ireturn
      45: astore_3
      46: getstatic     #53                 // Field LOGGER:Lorg/slf4j/Logger;
      49: ldc           #54                 // String
      51: aload_3
      52: invokeinterface #92,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      57: iconst_0
      58: ireturn
    Exception table:
       from    to  target type
          22    44    45   Class java/lang/Exception

  public static final void destroyMeteor(org.atmosphere.cpr.AtmosphereRequest);
    Code:
       0: aload_0
       1: getstatic     #93                 // Field org/atmosphere/cpr/AtmosphereResourceImpl.METEOR:Ljava/lang/String;
       4: invokeinterface #40,  2           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
       9: astore_1
      10: aload_1
      11: ifnull        38
      14: ldc           #94                 // class org/atmosphere/cpr/Meteor
      16: aload_1
      17: invokevirtual #65                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #66                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      23: ifeq          38
      26: ldc           #94                 // class org/atmosphere/cpr/Meteor
      28: aload_1
      29: invokevirtual #37                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #94                 // class org/atmosphere/cpr/Meteor
      35: invokevirtual #95                 // Method org/atmosphere/cpr/Meteor.destroy:()V
      38: goto          53
      41: astore_1
      42: getstatic     #53                 // Field LOGGER:Lorg/slf4j/Logger;
      45: ldc           #96                 // String Meteor resume exception: Cannot resume an already resumed/cancelled request
      47: aload_1
      48: invokeinterface #55,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: return
    Exception table:
       from    to  target type
           0    38    41   Class java/lang/Exception

  public static java.lang.String pathInfo(org.atmosphere.cpr.AtmosphereRequest);
    Code:
       0: aconst_null
       1: astore_1
       2: aconst_null
       3: astore_2
       4: aload_0
       5: invokeinterface #97,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getPathInfo:()Ljava/lang/String;
      10: astore_1
      11: goto          15
      14: astore_3
      15: aload_1
      16: ifnull        46
      19: new           #99                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
      26: aload_0
      27: invokeinterface #101,  1          // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getServletPath:()Ljava/lang/String;
      32: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #103                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: astore_2
      43: goto          53
      46: aload_0
      47: invokeinterface #101,  1          // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getServletPath:()Ljava/lang/String;
      52: astore_2
      53: aload_2
      54: ifnull        64
      57: aload_2
      58: invokevirtual #104                // Method java/lang/String.isEmpty:()Z
      61: ifeq          67
      64: ldc           #105                // String /
      66: astore_2
      67: aload_2
      68: areturn
    Exception table:
       from    to  target type
           4    11    14   Class java/lang/IllegalStateException

  static {};
    Code:
       0: ldc           #106                // class org/atmosphere/util/Utils
       2: invokestatic  #107                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #53                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
