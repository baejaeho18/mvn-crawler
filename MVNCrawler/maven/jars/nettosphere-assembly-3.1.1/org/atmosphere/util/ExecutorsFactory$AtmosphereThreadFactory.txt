Compiled from "ExecutorsFactory.java"
public final class org.atmosphere.util.ExecutorsFactory$AtmosphereThreadFactory implements java.util.concurrent.ThreadFactory {
  private final java.util.concurrent.atomic.AtomicInteger count;

  private final boolean shared;

  private final java.lang.String name;

  public org.atmosphere.util.ExecutorsFactory$AtmosphereThreadFactory(boolean, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      12: putfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      15: aload_0
      16: iload_1
      17: putfield      #5                  // Field shared:Z
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field name:Ljava/lang/String;
      25: return

  public java.lang.Thread newThread(java.lang.Runnable);
    Code:
       0: new           #7                  // class java/lang/Thread
       3: dup
       4: aload_1
       5: new           #8                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      12: aload_0
      13: getfield      #5                  // Field shared:Z
      16: ifeq          24
      19: ldc           #10                 // String Atmosphere-Shared-
      21: goto          28
      24: aload_0
      25: getfield      #6                  // Field name:Ljava/lang/String;
      28: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      35: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      38: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #15                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      47: astore_2
      48: aload_2
      49: iconst_1
      50: invokevirtual #16                 // Method java/lang/Thread.setDaemon:(Z)V
      53: aload_2
      54: areturn
}
