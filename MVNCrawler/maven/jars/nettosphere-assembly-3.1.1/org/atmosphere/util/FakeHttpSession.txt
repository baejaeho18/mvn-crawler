Compiled from "FakeHttpSession.java"
public class org.atmosphere.util.FakeHttpSession implements javax.servlet.http.HttpSession {
  private final long creationTime;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Object> attributes;

  private final java.lang.String sessionId;

  private final javax.servlet.ServletContext servletContext;

  private int maxInactiveInterval;

  private final java.util.concurrent.atomic.AtomicBoolean valid;

  public org.atmosphere.util.FakeHttpSession(java.lang.String, javax.servlet.ServletContext, long, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field attributes:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: iconst_1
      21: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      24: putfield      #7                  // Field valid:Ljava/util/concurrent/atomic/AtomicBoolean;
      27: aload_0
      28: aload_1
      29: putfield      #8                  // Field sessionId:Ljava/lang/String;
      32: aload_0
      33: aload_2
      34: putfield      #9                  // Field servletContext:Ljavax/servlet/ServletContext;
      37: aload_0
      38: lload_3
      39: putfield      #10                 // Field creationTime:J
      42: aload_0
      43: iload         5
      45: putfield      #11                 // Field maxInactiveInterval:I
      48: return

  public org.atmosphere.util.FakeHttpSession(javax.servlet.http.HttpSession);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #12,  1           // InterfaceMethod javax/servlet/http/HttpSession.getId:()Ljava/lang/String;
       7: aload_1
       8: invokeinterface #13,  1           // InterfaceMethod javax/servlet/http/HttpSession.getServletContext:()Ljavax/servlet/ServletContext;
      13: aload_1
      14: invokeinterface #14,  1           // InterfaceMethod javax/servlet/http/HttpSession.getLastAccessedTime:()J
      19: aload_1
      20: invokeinterface #15,  1           // InterfaceMethod javax/servlet/http/HttpSession.getMaxInactiveInterval:()I
      25: invokespecial #16                 // Method "<init>":(Ljava/lang/String;Ljavax/servlet/ServletContext;JI)V
      28: aload_0
      29: aload_1
      30: invokevirtual #17                 // Method copyAttributes:(Ljavax/servlet/http/HttpSession;)Lorg/atmosphere/util/FakeHttpSession;
      33: pop
      34: return

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #4                  // Field attributes:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #18                 // Method java/util/concurrent/ConcurrentHashMap.clear:()V
       7: return

  public long getCreationTime();
    Code:
       0: aload_0
       1: getfield      #7                  // Field valid:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          18
      10: new           #20                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #10                 // Field creationTime:J
      22: lreturn

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #7                  // Field valid:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          18
      10: new           #20                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #8                  // Field sessionId:Ljava/lang/String;
      22: areturn

  public long getLastAccessedTime();
    Code:
       0: aload_0
       1: getfield      #7                  // Field valid:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          18
      10: new           #20                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: lconst_0
      19: lreturn

  public javax.servlet.ServletContext getServletContext();
    Code:
       0: aload_0
       1: getfield      #9                  // Field servletContext:Ljavax/servlet/ServletContext;
       4: areturn

  public void setMaxInactiveInterval(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field maxInactiveInterval:I
       5: return

  public int getMaxInactiveInterval();
    Code:
       0: aload_0
       1: getfield      #11                 // Field maxInactiveInterval:I
       4: ireturn

  public javax.servlet.http.HttpSessionContext getSessionContext();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object getAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field valid:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          18
      10: new           #20                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #4                  // Field attributes:Ljava/util/concurrent/ConcurrentHashMap;
      22: aload_1
      23: invokevirtual #22                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: areturn

  public java.lang.Object getValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field valid:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          18
      10: new           #20                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #4                  // Field attributes:Ljava/util/concurrent/ConcurrentHashMap;
      22: aload_1
      23: invokevirtual #22                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: areturn

  public java.util.Enumeration<java.lang.String> getAttributeNames();
    Code:
       0: aload_0
       1: getfield      #7                  // Field valid:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          18
      10: new           #20                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #4                  // Field attributes:Ljava/util/concurrent/ConcurrentHashMap;
      22: invokevirtual #23                 // Method java/util/concurrent/ConcurrentHashMap.keys:()Ljava/util/Enumeration;
      25: areturn

  public java.lang.String[] getValueNames();
    Code:
       0: aload_0
       1: getfield      #7                  // Field valid:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          18
      10: new           #20                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #4                  // Field attributes:Ljava/util/concurrent/ConcurrentHashMap;
      22: invokevirtual #23                 // Method java/util/concurrent/ConcurrentHashMap.keys:()Ljava/util/Enumeration;
      25: invokestatic  #24                 // Method java/util/Collections.list:(Ljava/util/Enumeration;)Ljava/util/ArrayList;
      28: invokevirtual #25                 // Method java/util/ArrayList.toArray:()[Ljava/lang/Object;
      31: checkcast     #26                 // class "[Ljava/lang/String;"
      34: areturn

  public void setAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #7                  // Field valid:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          18
      10: new           #20                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #4                  // Field attributes:Ljava/util/concurrent/ConcurrentHashMap;
      22: aload_1
      23: aload_2
      24: invokevirtual #27                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: return

  public void putValue(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #7                  // Field valid:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          18
      10: new           #20                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #4                  // Field attributes:Ljava/util/concurrent/ConcurrentHashMap;
      22: aload_1
      23: aload_2
      24: invokevirtual #27                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: return

  public void removeAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field valid:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          18
      10: new           #20                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #4                  // Field attributes:Ljava/util/concurrent/ConcurrentHashMap;
      22: aload_1
      23: invokevirtual #28                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: return

  public void removeValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field valid:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          18
      10: new           #20                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #4                  // Field attributes:Ljava/util/concurrent/ConcurrentHashMap;
      22: aload_1
      23: invokevirtual #28                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: return

  public org.atmosphere.util.FakeHttpSession copyAttributes(javax.servlet.http.HttpSession);
    Code:
       0: aload_1
       1: invokeinterface #29,  1           // InterfaceMethod javax/servlet/http/HttpSession.getAttributeNames:()Ljava/util/Enumeration;
       6: astore_2
       7: aload_2
       8: invokeinterface #30,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      13: ifeq          64
      16: aload_2
      17: invokeinterface #31,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      22: checkcast     #32                 // class java/lang/String
      25: astore_3
      26: aload_3
      27: ifnonnull     33
      30: goto          7
      33: aload_1
      34: aload_3
      35: invokeinterface #33,  2           // InterfaceMethod javax/servlet/http/HttpSession.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      40: astore        4
      42: aload         4
      44: ifnonnull     50
      47: goto          7
      50: aload_0
      51: getfield      #4                  // Field attributes:Ljava/util/concurrent/ConcurrentHashMap;
      54: aload_3
      55: aload         4
      57: invokevirtual #27                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: goto          7
      64: aload_0
      65: areturn

  public void invalidate();
    Code:
       0: aload_0
       1: getfield      #7                  // Field valid:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          18
      10: new           #20                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #7                  // Field valid:Ljava/util/concurrent/atomic/AtomicBoolean;
      22: iconst_0
      23: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      26: return

  public boolean isNew();
    Code:
       0: aload_0
       1: getfield      #7                  // Field valid:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          18
      10: new           #20                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: iconst_0
      19: ireturn
}
