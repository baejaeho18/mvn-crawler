Compiled from "TrackMessageSizeInterceptor.java"
public class org.atmosphere.client.TrackMessageSizeInterceptor extends org.atmosphere.cpr.AtmosphereInterceptorAdapter {
  private static final org.slf4j.Logger logger;

  private static final byte[] END;

  private static final java.lang.String IN_ENCODING;

  private static final java.lang.String OUT_ENCODING;

  public static final java.lang.String SKIP_INTERCEPTOR;

  private byte[] end;

  private java.lang.String endString;

  private final java.nio.charset.Charset inCharset;

  private final java.nio.charset.Charset outCharset;

  private final java.util.HashSet<java.lang.String> excludedContentTypes;

  private final org.atmosphere.client.TrackMessageSizeInterceptor$Interceptor interceptor;

  public org.atmosphere.client.TrackMessageSizeInterceptor();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method org/atmosphere/cpr/AtmosphereInterceptorAdapter."<init>":()V
       4: aload_0
       5: getstatic     #8                  // Field END:[B
       8: putfield      #9                  // Field end:[B
      11: aload_0
      12: ldc           #10                 // String |
      14: putfield      #3                  // Field endString:Ljava/lang/String;
      17: aload_0
      18: ldc           #12                 // String UTF-8
      20: invokestatic  #13                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      23: putfield      #4                  // Field inCharset:Ljava/nio/charset/Charset;
      26: aload_0
      27: ldc           #12                 // String UTF-8
      29: invokestatic  #13                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      32: putfield      #2                  // Field outCharset:Ljava/nio/charset/Charset;
      35: aload_0
      36: new           #14                 // class java/util/HashSet
      39: dup
      40: invokespecial #15                 // Method java/util/HashSet."<init>":()V
      43: putfield      #5                  // Field excludedContentTypes:Ljava/util/HashSet;
      46: aload_0
      47: new           #16                 // class org/atmosphere/client/TrackMessageSizeInterceptor$Interceptor
      50: dup
      51: aload_0
      52: aconst_null
      53: invokespecial #17                 // Method org/atmosphere/client/TrackMessageSizeInterceptor$Interceptor."<init>":(Lorg/atmosphere/client/TrackMessageSizeInterceptor;Lorg/atmosphere/client/TrackMessageSizeInterceptor$1;)V
      56: putfield      #18                 // Field interceptor:Lorg/atmosphere/client/TrackMessageSizeInterceptor$Interceptor;
      59: return

  public void configure(org.atmosphere.cpr.AtmosphereConfig);
    Code:
       0: aload_1
       1: ldc           #19                 // String org.atmosphere.client.TrackMessageSizeInterceptor.delimiter
       3: invokevirtual #20                 // Method org/atmosphere/cpr/AtmosphereConfig.getInitParameter:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: ifnull        17
      11: aload_0
      12: aload_2
      13: invokevirtual #21                 // Method messageDelimiter:(Ljava/lang/String;)Lorg/atmosphere/client/TrackMessageSizeInterceptor;
      16: pop
      17: aload_1
      18: ldc           #22                 // String org.atmosphere.client.TrackMessageSizeInterceptor.excludedContentType
      20: invokevirtual #20                 // Method org/atmosphere/cpr/AtmosphereConfig.getInitParameter:(Ljava/lang/String;)Ljava/lang/String;
      23: astore_2
      24: aload_2
      25: ifnull        45
      28: aload_0
      29: getfield      #5                  // Field excludedContentTypes:Ljava/util/HashSet;
      32: aload_2
      33: ldc           #23                 // String ,
      35: invokevirtual #24                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      38: invokestatic  #25                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      41: invokevirtual #26                 // Method java/util/HashSet.addAll:(Ljava/util/Collection;)Z
      44: pop
      45: return

  public org.atmosphere.client.TrackMessageSizeInterceptor messageDelimiter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field endString:Ljava/lang/String;
       5: aload_0
       6: aload_1
       7: invokevirtual #27                 // Method java/lang/String.getBytes:()[B
      10: putfield      #9                  // Field end:[B
      13: aload_0
      14: areturn

  public org.atmosphere.client.TrackMessageSizeInterceptor excludedContentType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field excludedContentTypes:Ljava/util/HashSet;
       4: aload_1
       5: invokevirtual #28                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       8: invokevirtual #29                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      11: pop
      12: aload_0
      13: areturn

  public java.util.HashSet<java.lang.String> excludedContentTypes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field excludedContentTypes:Ljava/util/HashSet;
       4: areturn

  public org.atmosphere.cpr.Action inspect(org.atmosphere.cpr.AtmosphereResource);
    Code:
       0: getstatic     #30                 // Field org/atmosphere/cpr/AtmosphereResource$TRANSPORT.UNDEFINED:Lorg/atmosphere/cpr/AtmosphereResource$TRANSPORT;
       3: aload_1
       4: invokeinterface #31,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.transport:()Lorg/atmosphere/cpr/AtmosphereResource$TRANSPORT;
       9: if_acmpeq     19
      12: aload_1
      13: invokestatic  #32                 // Method org/atmosphere/util/Utils.webSocketMessage:(Lorg/atmosphere/cpr/AtmosphereResource;)Z
      16: ifeq          23
      19: getstatic     #33                 // Field org/atmosphere/cpr/Action.CONTINUE:Lorg/atmosphere/cpr/Action;
      22: areturn
      23: aload_1
      24: invokeinterface #34,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.getResponse:()Lorg/atmosphere/cpr/AtmosphereResponse;
      29: astore_2
      30: aload_0
      31: aload_1
      32: invokespecial #35                 // Method org/atmosphere/cpr/AtmosphereInterceptorAdapter.inspect:(Lorg/atmosphere/cpr/AtmosphereResource;)Lorg/atmosphere/cpr/Action;
      35: pop
      36: aload_2
      37: invokeinterface #36,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResponse.getAsyncIOWriter:()Lorg/atmosphere/cpr/AsyncIOWriter;
      42: astore_3
      43: ldc           #37                 // class org/atmosphere/cpr/AtmosphereInterceptorWriter
      45: aload_3
      46: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      49: invokevirtual #39                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      52: ifeq          75
      55: ldc           #37                 // class org/atmosphere/cpr/AtmosphereInterceptorWriter
      57: aload_3
      58: invokevirtual #40                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      61: checkcast     #37                 // class org/atmosphere/cpr/AtmosphereInterceptorWriter
      64: aload_0
      65: getfield      #18                 // Field interceptor:Lorg/atmosphere/client/TrackMessageSizeInterceptor$Interceptor;
      68: invokevirtual #41                 // Method org/atmosphere/cpr/AtmosphereInterceptorWriter.interceptor:(Lorg/atmosphere/cpr/AsyncIOInterceptor;)Lorg/atmosphere/cpr/AtmosphereInterceptorWriter;
      71: pop
      72: goto          97
      75: getstatic     #6                  // Field logger:Lorg/slf4j/Logger;
      78: ldc           #42                 // String Unable to apply {}. Your AsyncIOWriter must implement {}
      80: aload_0
      81: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      84: invokevirtual #43                 // Method java/lang/Class.getName:()Ljava/lang/String;
      87: ldc           #37                 // class org/atmosphere/cpr/AtmosphereInterceptorWriter
      89: invokevirtual #43                 // Method java/lang/Class.getName:()Ljava/lang/String;
      92: invokeinterface #44,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      97: getstatic     #33                 // Field org/atmosphere/cpr/Action.CONTINUE:Lorg/atmosphere/cpr/Action;
     100: areturn

  public java.lang.String toString();
    Code:
       0: new           #45                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #47                 // String  Track Message Size Interceptor using
       9: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #3                  // Field endString:Ljava/lang/String;
      16: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public org.atmosphere.interceptor.InvokationOrder$PRIORITY priority();
    Code:
       0: getstatic     #50                 // Field org/atmosphere/interceptor/InvokationOrder.BEFORE_DEFAULT:Lorg/atmosphere/interceptor/InvokationOrder$PRIORITY;
       3: areturn

  static org.slf4j.Logger access$100();
    Code:
       0: getstatic     #6                  // Field logger:Lorg/slf4j/Logger;
       3: areturn

  static java.util.HashSet access$200(org.atmosphere.client.TrackMessageSizeInterceptor);
    Code:
       0: aload_0
       1: getfield      #5                  // Field excludedContentTypes:Ljava/util/HashSet;
       4: areturn

  static java.nio.charset.Charset access$300(org.atmosphere.client.TrackMessageSizeInterceptor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field inCharset:Ljava/nio/charset/Charset;
       4: areturn

  static java.lang.String access$400(org.atmosphere.client.TrackMessageSizeInterceptor);
    Code:
       0: aload_0
       1: getfield      #3                  // Field endString:Ljava/lang/String;
       4: areturn

  static java.nio.charset.Charset access$500(org.atmosphere.client.TrackMessageSizeInterceptor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field outCharset:Ljava/nio/charset/Charset;
       4: areturn

  static {};
    Code:
       0: ldc           #11                 // class org/atmosphere/client/TrackMessageSizeInterceptor
       2: invokestatic  #51                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #6                  // Field logger:Lorg/slf4j/Logger;
       8: ldc           #10                 // String |
      10: invokevirtual #27                 // Method java/lang/String.getBytes:()[B
      13: putstatic     #8                  // Field END:[B
      16: new           #45                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #11                 // class org/atmosphere/client/TrackMessageSizeInterceptor
      25: invokevirtual #43                 // Method java/lang/Class.getName:()Ljava/lang/String;
      28: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #52                 // String .skip
      33: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: putstatic     #53                 // Field SKIP_INTERCEPTOR:Ljava/lang/String;
      42: return
}
