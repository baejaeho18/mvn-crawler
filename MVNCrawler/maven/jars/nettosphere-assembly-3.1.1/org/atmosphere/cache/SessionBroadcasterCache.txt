Compiled from "SessionBroadcasterCache.java"
public class org.atmosphere.cache.SessionBroadcasterCache extends org.atmosphere.cache.AbstractBroadcasterCache {
  private static final org.slf4j.Logger logger;

  private static final java.lang.String ERROR_MESSAGE;

  public org.atmosphere.cache.SessionBroadcasterCache();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/atmosphere/cache/AbstractBroadcasterCache."<init>":()V
       4: return

  public org.atmosphere.cache.CacheMessage addToCache(java.lang.String, java.lang.String, org.atmosphere.cache.BroadcastMessage);
    Code:
       0: invokestatic  #2                  // Method java/lang/System.nanoTime:()J
       3: lstore        4
       5: aload_0
       6: aload_3
       7: lload         4
       9: invokestatic  #3                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: aload_2
      13: invokevirtual #4                  // Method put:(Lorg/atmosphere/cache/BroadcastMessage;Ljava/lang/Long;Ljava/lang/String;)Lorg/atmosphere/cache/CacheMessage;
      16: astore        6
      18: aload_2
      19: ldc           #6                  // String null
      21: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifeq          30
      27: aload         6
      29: areturn
      30: aload_0
      31: getfield      #8                  // Field config:Lorg/atmosphere/cpr/AtmosphereConfig;
      34: invokevirtual #9                  // Method org/atmosphere/cpr/AtmosphereConfig.resourcesFactory:()Lorg/atmosphere/cpr/AtmosphereResourceFactory;
      37: aload_2
      38: invokeinterface #10,  2           // InterfaceMethod org/atmosphere/cpr/AtmosphereResourceFactory.find:(Ljava/lang/String;)Lorg/atmosphere/cpr/AtmosphereResource;
      43: invokeinterface #11,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.session:()Ljavax/servlet/http/HttpSession;
      48: astore        7
      50: aload         7
      52: ifnonnull     68
      55: getstatic     #12                 // Field logger:Lorg/slf4j/Logger;
      58: ldc           #14                 // String Session was null. The request has been recycled by the underlying container
      60: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      65: aload         6
      67: areturn
      68: aload         7
      70: aload_1
      71: lload         4
      73: invokestatic  #16                 // Method java/lang/String.valueOf:(J)Ljava/lang/String;
      76: invokeinterface #17,  3           // InterfaceMethod javax/servlet/http/HttpSession.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      81: goto          108
      84: astore        7
      86: getstatic     #12                 // Field logger:Lorg/slf4j/Logger;
      89: ldc           #19                 // String
      91: aload         7
      93: invokeinterface #20,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Throwable;)V
      98: getstatic     #12                 // Field logger:Lorg/slf4j/Logger;
     101: ldc           #21                 // String The Session has been invalidated. Message will be lost.
     103: invokeinterface #22,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     108: aload         6
     110: areturn
    Exception table:
       from    to  target type
          30    67    84   Class java/lang/IllegalStateException
          68    81    84   Class java/lang/IllegalStateException

  public java.util.List<java.lang.Object> retrieveFromCache(java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #23                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #24                 // String AtmosphereResource can\'t be null
      10: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #26                 // class java/util/ArrayList
      17: dup
      18: invokespecial #27                 // Method java/util/ArrayList."<init>":()V
      21: astore_3
      22: aload_0
      23: getfield      #8                  // Field config:Lorg/atmosphere/cpr/AtmosphereConfig;
      26: invokevirtual #9                  // Method org/atmosphere/cpr/AtmosphereConfig.resourcesFactory:()Lorg/atmosphere/cpr/AtmosphereResourceFactory;
      29: aload_2
      30: invokeinterface #10,  2           // InterfaceMethod org/atmosphere/cpr/AtmosphereResourceFactory.find:(Ljava/lang/String;)Lorg/atmosphere/cpr/AtmosphereResource;
      35: astore        4
      37: aload         4
      39: ifnonnull     55
      42: getstatic     #12                 // Field logger:Lorg/slf4j/Logger;
      45: ldc           #28                 // String Invalid UUID {}
      47: aload_2
      48: invokeinterface #29,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      53: aload_3
      54: areturn
      55: aload         4
      57: invokeinterface #11,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereResource.session:()Ljavax/servlet/http/HttpSession;
      62: astore        5
      64: aload         5
      66: ifnonnull     81
      69: getstatic     #12                 // Field logger:Lorg/slf4j/Logger;
      72: ldc           #14                 // String Session was null. The request has been recycled by the underlying container
      74: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      79: aload_3
      80: areturn
      81: aload         5
      83: aload_1
      84: invokeinterface #30,  2           // InterfaceMethod javax/servlet/http/HttpSession.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      89: checkcast     #31                 // class java/lang/String
      92: astore        6
      94: aload         6
      96: ifnonnull     101
      99: aload_3
     100: areturn
     101: aload         6
     103: invokestatic  #32                 // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
     106: astore        7
     108: aload         7
     110: ifnonnull     115
     113: aload_3
     114: areturn
     115: aload_0
     116: aload         7
     118: invokevirtual #33                 // Method java/lang/Long.longValue:()J
     121: invokevirtual #34                 // Method get:(J)Ljava/util/List;
     124: areturn
     125: astore        4
     127: getstatic     #12                 // Field logger:Lorg/slf4j/Logger;
     130: ldc           #19                 // String
     132: aload         4
     134: invokeinterface #20,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Throwable;)V
     139: getstatic     #12                 // Field logger:Lorg/slf4j/Logger;
     142: ldc           #35                 // String The Session has been invalidated. Unable to retrieve cached messages
     144: invokeinterface #22,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     149: invokestatic  #36                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     152: areturn
    Exception table:
       from    to  target type
          22    54   125   Class java/lang/IllegalStateException
          55    80   125   Class java/lang/IllegalStateException
          81   100   125   Class java/lang/IllegalStateException
         101   114   125   Class java/lang/IllegalStateException
         115   124   125   Class java/lang/IllegalStateException

  static {};
    Code:
       0: ldc           #13                 // class org/atmosphere/cache/SessionBroadcasterCache
       2: invokestatic  #37                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #12                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
