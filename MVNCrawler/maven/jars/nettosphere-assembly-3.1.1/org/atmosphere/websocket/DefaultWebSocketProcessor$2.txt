Compiled from "DefaultWebSocketProcessor.java"
class org.atmosphere.websocket.DefaultWebSocketProcessor$2 implements java.lang.Runnable {
  final org.atmosphere.websocket.WebSocket val$webSocket;

  final org.atmosphere.cpr.Action val$action;

  final java.util.concurrent.atomic.AtomicReference val$f;

  final org.atmosphere.websocket.DefaultWebSocketProcessor this$0;

  org.atmosphere.websocket.DefaultWebSocketProcessor$2(org.atmosphere.websocket.DefaultWebSocketProcessor, org.atmosphere.websocket.WebSocket, org.atmosphere.cpr.Action, java.util.concurrent.atomic.AtomicReference);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/atmosphere/websocket/DefaultWebSocketProcessor;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$webSocket:Lorg/atmosphere/websocket/WebSocket;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$action:Lorg/atmosphere/cpr/Action;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$f:Ljava/util/concurrent/atomic/AtomicReference;
      21: aload_0
      22: invokespecial #5                  // Method java/lang/Object."<init>":()V
      25: return

  public void run();
    Code:
       0: ldc           #6                  // class org/atmosphere/websocket/WebSocket
       2: aload_0
       3: getfield      #2                  // Field val$webSocket:Lorg/atmosphere/websocket/WebSocket;
       6: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #8                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      12: ifeq          83
      15: invokestatic  #9                  // Method java/lang/System.currentTimeMillis:()J
      18: ldc           #6                  // class org/atmosphere/websocket/WebSocket
      20: aload_0
      21: getfield      #2                  // Field val$webSocket:Lorg/atmosphere/websocket/WebSocket;
      24: invokevirtual #10                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #6                  // class org/atmosphere/websocket/WebSocket
      30: invokevirtual #11                 // Method org/atmosphere/websocket/WebSocket.lastWriteTimeStampInMilliseconds:()J
      33: lsub
      34: aload_0
      35: getfield      #3                  // Field val$action:Lorg/atmosphere/cpr/Action;
      38: invokevirtual #12                 // Method org/atmosphere/cpr/Action.timeout:()J
      41: lcmp
      42: ifle          83
      45: aload_0
      46: getfield      #1                  // Field this$0:Lorg/atmosphere/websocket/DefaultWebSocketProcessor;
      49: invokestatic  #13                 // Method org/atmosphere/websocket/DefaultWebSocketProcessor.access$000:(Lorg/atmosphere/websocket/DefaultWebSocketProcessor;)Lorg/atmosphere/cpr/AsynchronousProcessor;
      52: aload_0
      53: getfield      #2                  // Field val$webSocket:Lorg/atmosphere/websocket/WebSocket;
      56: invokevirtual #14                 // Method org/atmosphere/websocket/WebSocket.resource:()Lorg/atmosphere/cpr/AtmosphereResource;
      59: checkcast     #15                 // class org/atmosphere/cpr/AtmosphereResourceImpl
      62: iconst_0
      63: invokevirtual #16                 // Method org/atmosphere/cpr/AsynchronousProcessor.endRequest:(Lorg/atmosphere/cpr/AtmosphereResourceImpl;Z)V
      66: aload_0
      67: getfield      #4                  // Field val$f:Ljava/util/concurrent/atomic/AtomicReference;
      70: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      73: checkcast     #18                 // class java/util/concurrent/Future
      76: iconst_1
      77: invokeinterface #19,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      82: pop
      83: return
}
