Compiled from "WebSocketHandshakeFilter.java"
public class org.atmosphere.websocket.WebSocketHandshakeFilter implements javax.servlet.Filter {
  private static final org.slf4j.Logger logger;

  private java.lang.String[] bannedVersion;

  public org.atmosphere.websocket.WebSocketHandshakeFilter();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public void init(javax.servlet.FilterConfig) throws javax.servlet.ServletException;
    Code:
       0: aload_1
       1: ldc           #4                  // String org.atmosphere.websocket.bannedVersion
       3: invokeinterface #5,  2            // InterfaceMethod javax/servlet/FilterConfig.getInitParameter:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_2
       9: aload_2
      10: ifnull        34
      13: aload_0
      14: aload_2
      15: ldc           #6                  // String ,
      17: invokevirtual #7                  // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      20: putfield      #8                  // Field bannedVersion:[Ljava/lang/String;
      23: getstatic     #9                  // Field logger:Lorg/slf4j/Logger;
      26: ldc           #10                 // String Blocked WebSocket Draft version {}
      28: aload_2
      29: invokeinterface #11,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      34: return

  public void doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: ldc           #12                 // class javax/servlet/http/HttpServletRequest
       2: aload_1
       3: invokevirtual #13                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
       6: checkcast     #12                 // class javax/servlet/http/HttpServletRequest
       9: astore        4
      11: aload         4
      13: invokestatic  #14                 // Method org/atmosphere/util/Utils.webSocketEnabled:(Ljavax/servlet/http/HttpServletRequest;)Z
      16: ifeq          166
      19: aload         4
      21: ldc           #15                 // String Sec-WebSocket-Version
      23: invokeinterface #16,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getIntHeader:(Ljava/lang/String;)I
      28: istore        5
      30: iload         5
      32: ifge          46
      35: aload         4
      37: ldc           #17                 // String Sec-WebSocket-Draft
      39: invokeinterface #16,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getIntHeader:(Ljava/lang/String;)I
      44: istore        5
      46: aload_0
      47: getfield      #8                  // Field bannedVersion:[Ljava/lang/String;
      50: ifnull        166
      53: aload_0
      54: getfield      #8                  // Field bannedVersion:[Ljava/lang/String;
      57: astore        6
      59: aload         6
      61: arraylength
      62: istore        7
      64: iconst_0
      65: istore        8
      67: iload         8
      69: iload         7
      71: if_icmpge     166
      74: aload         6
      76: iload         8
      78: aaload
      79: astore        9
      81: aload         9
      83: invokestatic  #18                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      86: iload         5
      88: if_icmpne     160
      91: getstatic     #9                  // Field logger:Lorg/slf4j/Logger;
      94: ldc           #19                 // String Invalid WebSocket Specification {} with {}
      96: aload         4
      98: ldc           #20                 // String Connection
     100: invokeinterface #21,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
     105: aload         4
     107: ldc           #15                 // String Sec-WebSocket-Version
     109: invokeinterface #16,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getIntHeader:(Ljava/lang/String;)I
     114: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     117: invokeinterface #23,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     122: ldc           #24                 // class javax/servlet/http/HttpServletResponse
     124: aload_2
     125: invokevirtual #13                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     128: checkcast     #24                 // class javax/servlet/http/HttpServletResponse
     131: ldc           #25                 // String X-Atmosphere-error
     133: ldc           #26                 // String Websocket protocol not supported
     135: invokeinterface #27,  3           // InterfaceMethod javax/servlet/http/HttpServletResponse.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     140: ldc           #24                 // class javax/servlet/http/HttpServletResponse
     142: aload_2
     143: invokevirtual #13                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     146: checkcast     #24                 // class javax/servlet/http/HttpServletResponse
     149: sipush        501
     152: ldc           #26                 // String Websocket protocol not supported
     154: invokeinterface #28,  3           // InterfaceMethod javax/servlet/http/HttpServletResponse.sendError:(ILjava/lang/String;)V
     159: return
     160: iinc          8, 1
     163: goto          67
     166: aload_3
     167: aload_1
     168: aload_2
     169: invokeinterface #29,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
     174: return

  public void destroy();
    Code:
       0: return

  static {};
    Code:
       0: ldc           #30                 // class org/atmosphere/websocket/WebSocketHandshakeFilter
       2: invokestatic  #31                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #9                  // Field logger:Lorg/slf4j/Logger;
       8: return
}
