Compiled from "DefaultWebSocketProcessor.java"
class org.atmosphere.websocket.DefaultWebSocketProcessor$1$1 extends org.atmosphere.cpr.AsynchronousProcessor {
  final org.atmosphere.cpr.AtmosphereFramework val$framework;

  final org.atmosphere.websocket.DefaultWebSocketProcessor$1 this$1;

  org.atmosphere.websocket.DefaultWebSocketProcessor$1$1(org.atmosphere.websocket.DefaultWebSocketProcessor$1, org.atmosphere.cpr.AtmosphereConfig, org.atmosphere.cpr.AtmosphereFramework);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lorg/atmosphere/websocket/DefaultWebSocketProcessor$1;
       5: aload_0
       6: aload_3
       7: putfield      #2                  // Field val$framework:Lorg/atmosphere/cpr/AtmosphereFramework;
      10: aload_0
      11: aload_2
      12: invokespecial #3                  // Method org/atmosphere/cpr/AsynchronousProcessor."<init>":(Lorg/atmosphere/cpr/AtmosphereConfig;)V
      15: return

  public org.atmosphere.cpr.Action service(org.atmosphere.cpr.AtmosphereRequest, org.atmosphere.cpr.AtmosphereResponse) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$framework:Lorg/atmosphere/cpr/AtmosphereFramework;
       4: invokevirtual #4                  // Method org/atmosphere/cpr/AtmosphereFramework.getAsyncSupport:()Lorg/atmosphere/cpr/AsyncSupport;
       7: aload_1
       8: aload_2
       9: invokeinterface #5,  3            // InterfaceMethod org/atmosphere/cpr/AsyncSupport.service:(Lorg/atmosphere/cpr/AtmosphereRequest;Lorg/atmosphere/cpr/AtmosphereResponse;)Lorg/atmosphere/cpr/Action;
      14: areturn
}
