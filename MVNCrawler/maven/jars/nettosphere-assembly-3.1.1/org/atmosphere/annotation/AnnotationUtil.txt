Compiled from "AnnotationUtil.java"
public class org.atmosphere.annotation.AnnotationUtil {
  public static final org.slf4j.Logger logger;

  private static final java.util.List<java.lang.Class<? extends org.atmosphere.cpr.AtmosphereInterceptor>> MANAGED_ATMOSPHERE_INTERCEPTORS;

  public org.atmosphere.annotation.AnnotationUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void interceptors(java.lang.Class<? extends org.atmosphere.cpr.AtmosphereInterceptor>[], org.atmosphere.cpr.AtmosphereFramework);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     59
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_1
      21: aload_1
      22: ldc           #2                  // class org/atmosphere/cpr/AtmosphereInterceptor
      24: aload         5
      26: invokevirtual #3                  // Method org/atmosphere/cpr/AtmosphereFramework.newClassInstance:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;
      29: checkcast     #2                  // class org/atmosphere/cpr/AtmosphereInterceptor
      32: invokevirtual #4                  // Method org/atmosphere/cpr/AtmosphereFramework.interceptor:(Lorg/atmosphere/cpr/AtmosphereInterceptor;)Lorg/atmosphere/cpr/AtmosphereFramework;
      35: pop
      36: goto          53
      39: astore        6
      41: getstatic     #6                  // Field logger:Lorg/slf4j/Logger;
      44: ldc           #7                  // String
      46: aload         6
      48: invokeinterface #8,  3            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: iinc          4, 1
      56: goto          8
      59: return
    Exception table:
       from    to  target type
          20    36    39   Class java/lang/Throwable

  public static void filters(java.lang.Class<? extends org.atmosphere.cpr.BroadcastFilter>[], org.atmosphere.cpr.AtmosphereFramework) throws java.lang.IllegalAccessException, java.lang.InstantiationException;
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     42
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_1
      21: aload_1
      22: ldc           #9                  // class org/atmosphere/cpr/BroadcastFilter
      24: aload         5
      26: invokevirtual #3                  // Method org/atmosphere/cpr/AtmosphereFramework.newClassInstance:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;
      29: checkcast     #9                  // class org/atmosphere/cpr/BroadcastFilter
      32: invokevirtual #10                 // Method org/atmosphere/cpr/AtmosphereFramework.broadcasterFilters:(Lorg/atmosphere/cpr/BroadcastFilter;)Lorg/atmosphere/cpr/AtmosphereFramework;
      35: pop
      36: iinc          4, 1
      39: goto          8
      42: return

  public static void atmosphereConfig(java.lang.String[], org.atmosphere.cpr.AtmosphereFramework);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     53
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload         5
      22: ldc           #11                 // String =
      24: invokevirtual #12                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      27: astore        6
      29: aload_1
      30: aload         6
      32: iconst_0
      33: aaload
      34: aload         6
      36: iconst_1
      37: aaload
      38: invokevirtual #13                 // Method org/atmosphere/cpr/AtmosphereFramework.addInitParameter:(Ljava/lang/String;Ljava/lang/String;)Lorg/atmosphere/cpr/AtmosphereFramework;
      41: pop
      42: aload_1
      43: iconst_1
      44: invokevirtual #14                 // Method org/atmosphere/cpr/AtmosphereFramework.reconfigureInitParams:(Z)V
      47: iinc          4, 1
      50: goto          8
      53: return

  public static void defaultManagedServiceInterceptors(org.atmosphere.cpr.AtmosphereFramework, java.util.List<org.atmosphere.cpr.AtmosphereInterceptor>);
    Code:
       0: aload_0
       1: getstatic     #15                 // Field MANAGED_ATMOSPHERE_INTERCEPTORS:Ljava/util/List;
       4: aload_1
       5: iconst_0
       6: invokestatic  #16                 // Method interceptorsForManagedService:(Lorg/atmosphere/cpr/AtmosphereFramework;Ljava/util/List;Ljava/util/List;Z)V
       9: return

  public static void interceptorsForManagedService(org.atmosphere.cpr.AtmosphereFramework, java.util.List<java.lang.Class<? extends org.atmosphere.cpr.AtmosphereInterceptor>>, java.util.List<org.atmosphere.cpr.AtmosphereInterceptor>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokestatic  #16                 // Method interceptorsForManagedService:(Lorg/atmosphere/cpr/AtmosphereFramework;Ljava/util/List;Ljava/util/List;Z)V
       7: return

  public static void interceptorsForManagedService(org.atmosphere.cpr.AtmosphereFramework, java.util.List<java.lang.Class<? extends org.atmosphere.cpr.AtmosphereInterceptor>>, java.util.List<org.atmosphere.cpr.AtmosphereInterceptor>, boolean);
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore        4
       8: aload         4
      10: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          106
      18: aload         4
      20: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #20                 // class java/lang/Class
      28: astore        5
      30: aload_0
      31: invokevirtual #21                 // Method org/atmosphere/cpr/AtmosphereFramework.excludedInterceptors:()Ljava/util/List;
      34: aload         5
      36: invokevirtual #22                 // Method java/lang/Class.getName:()Ljava/lang/String;
      39: invokeinterface #23,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      44: ifne          103
      47: iload_3
      48: ifeq          59
      51: aload         5
      53: invokestatic  #24                 // Method checkDefault:(Ljava/lang/Class;)Z
      56: ifeq          103
      59: getstatic     #6                  // Field logger:Lorg/slf4j/Logger;
      62: ldc           #25                 // String Adding {}
      64: aload         5
      66: invokeinterface #26,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      71: aload_2
      72: aload_0
      73: ldc           #2                  // class org/atmosphere/cpr/AtmosphereInterceptor
      75: aload         5
      77: invokevirtual #3                  // Method org/atmosphere/cpr/AtmosphereFramework.newClassInstance:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;
      80: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      85: pop
      86: goto          103
      89: astore        6
      91: getstatic     #6                  // Field logger:Lorg/slf4j/Logger;
      94: ldc           #7                  // String
      96: aload         6
      98: invokeinterface #8,  3            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     103: goto          8
     106: return
    Exception table:
       from    to  target type
          59    86    89   Class java/lang/Throwable

  public static void interceptorsForHandler(org.atmosphere.cpr.AtmosphereFramework, java.util.List<java.lang.Class<? extends org.atmosphere.cpr.AtmosphereInterceptor>>, java.util.List<org.atmosphere.cpr.AtmosphereInterceptor>);
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          104
      16: aload_3
      17: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #20                 // class java/lang/Class
      25: astore        4
      27: aload_0
      28: invokevirtual #21                 // Method org/atmosphere/cpr/AtmosphereFramework.excludedInterceptors:()Ljava/util/List;
      31: aload         4
      33: invokevirtual #22                 // Method java/lang/Class.getName:()Ljava/lang/String;
      36: invokeinterface #23,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      41: ifne          101
      44: getstatic     #28                 // Field org/atmosphere/cpr/AtmosphereFramework.DEFAULT_ATMOSPHERE_INTERCEPTORS:Ljava/util/List;
      47: aload         4
      49: invokeinterface #23,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      54: ifne          101
      57: getstatic     #6                  // Field logger:Lorg/slf4j/Logger;
      60: ldc           #25                 // String Adding {}
      62: aload         4
      64: invokeinterface #26,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      69: aload_2
      70: aload_0
      71: ldc           #2                  // class org/atmosphere/cpr/AtmosphereInterceptor
      73: aload         4
      75: invokevirtual #3                  // Method org/atmosphere/cpr/AtmosphereFramework.newClassInstance:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;
      78: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      83: pop
      84: goto          101
      87: astore        5
      89: getstatic     #6                  // Field logger:Lorg/slf4j/Logger;
      92: ldc           #7                  // String
      94: aload         5
      96: invokeinterface #8,  3            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     101: goto          7
     104: return
    Exception table:
       from    to  target type
          57    84    87   Class java/lang/Throwable

  public static boolean checkDefault(java.lang.Class<? extends org.atmosphere.cpr.AtmosphereInterceptor>);
    Code:
       0: getstatic     #15                 // Field MANAGED_ATMOSPHERE_INTERCEPTORS:Ljava/util/List;
       3: aload_0
       4: invokeinterface #23,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
       9: ifne          28
      12: getstatic     #28                 // Field org/atmosphere/cpr/AtmosphereFramework.DEFAULT_ATMOSPHERE_INTERCEPTORS:Ljava/util/List;
      15: aload_0
      16: invokeinterface #23,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public static org.atmosphere.cpr.AtmosphereInterceptor listeners(java.lang.Class<? extends org.atmosphere.cpr.AtmosphereResourceEventListener>[], org.atmosphere.cpr.AtmosphereFramework);
    Code:
       0: aload_0
       1: arraylength
       2: ifle          27
       5: new           #29                 // class org/atmosphere/annotation/AnnotationUtil$2
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #30                 // Method org/atmosphere/annotation/AnnotationUtil$2."<init>":([Ljava/lang/Class;Lorg/atmosphere/cpr/AtmosphereFramework;)V
      14: areturn
      15: astore_2
      16: getstatic     #6                  // Field logger:Lorg/slf4j/Logger;
      19: ldc           #7                  // String
      21: aload_2
      22: invokeinterface #8,  3            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      27: aconst_null
      28: areturn
    Exception table:
       from    to  target type
           5    14    15   Class java/lang/Throwable

  public static org.atmosphere.cpr.Broadcaster broadcaster(org.atmosphere.cpr.AtmosphereFramework, java.lang.Class<? extends org.atmosphere.cpr.Broadcaster>, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method org/atmosphere/cpr/AtmosphereFramework.getBroadcasterFactory:()Lorg/atmosphere/cpr/BroadcasterFactory;
       4: aload_0
       5: aload_1
       6: invokestatic  #32                 // Method broadcasterClass:(Lorg/atmosphere/cpr/AtmosphereFramework;Ljava/lang/Class;)Ljava/lang/Class;
       9: aload_2
      10: iconst_1
      11: invokeinterface #33,  4           // InterfaceMethod org/atmosphere/cpr/BroadcasterFactory.lookup:(Ljava/lang/Class;Ljava/lang/Object;Z)Lorg/atmosphere/cpr/Broadcaster;
      16: areturn

  public static java.lang.Class<? extends org.atmosphere.cpr.Broadcaster> broadcasterClass(org.atmosphere.cpr.AtmosphereFramework, java.lang.Class<? extends org.atmosphere.cpr.Broadcaster>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method org/atmosphere/cpr/AtmosphereFramework.isBroadcasterSpecified:()Z
       4: ifeq          40
       7: aload_0
       8: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #36                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      14: aload_0
      15: invokevirtual #37                 // Method org/atmosphere/cpr/AtmosphereFramework.getDefaultBroadcasterClassName:()Ljava/lang/String;
      18: invokevirtual #38                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      21: astore_1
      22: goto          40
      25: astore_2
      26: invokestatic  #40                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      29: invokevirtual #41                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      32: aload_0
      33: invokevirtual #37                 // Method org/atmosphere/cpr/AtmosphereFramework.getDefaultBroadcasterClassName:()Ljava/lang/String;
      36: invokevirtual #38                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      39: astore_1
      40: aload_1
      41: areturn
    Exception table:
       from    to  target type
           7    22    25   Class java/lang/ClassNotFoundException

  static {};
    Code:
       0: ldc           #42                 // class org/atmosphere/annotation/AnnotationUtil
       2: invokestatic  #43                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #6                  // Field logger:Lorg/slf4j/Logger;
       8: new           #44                 // class org/atmosphere/annotation/AnnotationUtil$1
      11: dup
      12: invokespecial #45                 // Method org/atmosphere/annotation/AnnotationUtil$1."<init>":()V
      15: putstatic     #15                 // Field MANAGED_ATMOSPHERE_INTERCEPTORS:Ljava/util/List;
      18: return
}
