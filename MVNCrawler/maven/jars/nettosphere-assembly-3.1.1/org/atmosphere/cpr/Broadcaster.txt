Compiled from "Broadcaster.java"
public interface org.atmosphere.cpr.Broadcaster {
  public static final java.lang.String ROOT_MASTER;

  public abstract org.atmosphere.cpr.Broadcaster initialize(java.lang.String, java.net.URI, org.atmosphere.cpr.AtmosphereConfig);

  public abstract void setSuspendPolicy(long, org.atmosphere.cpr.Broadcaster$POLICY);

  public abstract java.util.concurrent.Future<java.lang.Object> broadcast(java.lang.Object);

  public abstract java.util.concurrent.Future<java.lang.Object> delayBroadcast(java.lang.Object);

  public abstract java.util.concurrent.Future<java.lang.Object> delayBroadcast(java.lang.Object, long, java.util.concurrent.TimeUnit);

  public abstract java.util.concurrent.Future<java.lang.Object> scheduleFixedBroadcast(java.lang.Object, long, java.util.concurrent.TimeUnit);

  public abstract java.util.concurrent.Future<java.lang.Object> scheduleFixedBroadcast(java.lang.Object, long, long, java.util.concurrent.TimeUnit);

  public abstract java.util.concurrent.Future<java.lang.Object> broadcast(java.lang.Object, org.atmosphere.cpr.AtmosphereResource);

  public abstract java.util.concurrent.Future<java.lang.Object> broadcastOnResume(java.lang.Object);

  public abstract java.util.concurrent.Future<java.lang.Object> broadcast(java.lang.Object, java.util.Set<org.atmosphere.cpr.AtmosphereResource>);

  public abstract org.atmosphere.cpr.Broadcaster addAtmosphereResource(org.atmosphere.cpr.AtmosphereResource);

  public abstract org.atmosphere.cpr.Broadcaster removeAtmosphereResource(org.atmosphere.cpr.AtmosphereResource);

  public abstract void setBroadcasterConfig(org.atmosphere.cpr.BroadcasterConfig);

  public abstract org.atmosphere.cpr.BroadcasterConfig getBroadcasterConfig();

  public abstract void destroy();

  public abstract java.util.Collection<org.atmosphere.cpr.AtmosphereResource> getAtmosphereResources();

  public abstract void setScope(org.atmosphere.cpr.Broadcaster$SCOPE);

  public abstract org.atmosphere.cpr.Broadcaster$SCOPE getScope();

  public abstract void setID(java.lang.String);

  public abstract java.lang.String getID();

  public abstract void resumeAll();

  public abstract void releaseExternalResources();

  public abstract void setBroadcasterLifeCyclePolicy(org.atmosphere.cpr.BroadcasterLifeCyclePolicy);

  public abstract org.atmosphere.cpr.BroadcasterLifeCyclePolicy getBroadcasterLifeCyclePolicy();

  public abstract void addBroadcasterLifeCyclePolicyListener(org.atmosphere.cpr.BroadcasterLifeCyclePolicyListener);

  public abstract void removeBroadcasterLifeCyclePolicyListener(org.atmosphere.cpr.BroadcasterLifeCyclePolicyListener);

  public abstract boolean isDestroyed();

  public abstract java.util.concurrent.Future<java.lang.Object> awaitAndBroadcast(java.lang.Object, long, java.util.concurrent.TimeUnit);

  public abstract org.atmosphere.cpr.Broadcaster addBroadcasterListener(org.atmosphere.cpr.BroadcasterListener);

  public abstract org.atmosphere.cpr.Broadcaster removeBroadcasterListener(org.atmosphere.cpr.BroadcasterListener);
}
