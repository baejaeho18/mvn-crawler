Compiled from "AtmosphereResponseImpl.java"
public final class org.atmosphere.cpr.AtmosphereResponseImpl$Builder implements org.atmosphere.cpr.AtmosphereResponse$Builder {
  private org.atmosphere.cpr.AsyncIOWriter asyncIOWriter;

  private int status;

  private java.lang.String statusMessage;

  private org.atmosphere.cpr.AtmosphereRequest atmosphereRequest;

  private javax.servlet.http.HttpServletResponse atmosphereResponse;

  private java.util.concurrent.atomic.AtomicBoolean writeStatusAndHeader;

  private final java.util.Map<java.lang.String, java.lang.String> headers;

  private boolean destroyable;

  public org.atmosphere.cpr.AtmosphereResponseImpl$Builder();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        200
       8: putfield      #5                  // Field status:I
      11: aload_0
      12: ldc           #10                 // String OK
      14: putfield      #4                  // Field statusMessage:Ljava/lang/String;
      17: aload_0
      18: invokestatic  #11                 // Method org/atmosphere/cpr/AtmosphereResponseImpl.access$800:()Ljavax/servlet/http/HttpServletResponse;
      21: putfield      #8                  // Field atmosphereResponse:Ljavax/servlet/http/HttpServletResponse;
      24: aload_0
      25: new           #12                 // class java/util/concurrent/atomic/AtomicBoolean
      28: dup
      29: iconst_1
      30: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      33: putfield      #3                  // Field writeStatusAndHeader:Ljava/util/concurrent/atomic/AtomicBoolean;
      36: aload_0
      37: new           #14                 // class java/util/HashMap
      40: dup
      41: invokespecial #15                 // Method java/util/HashMap."<init>":()V
      44: putfield      #2                  // Field headers:Ljava/util/Map;
      47: aload_0
      48: iconst_1
      49: putfield      #1                  // Field destroyable:Z
      52: return

  public org.atmosphere.cpr.AtmosphereResponseImpl$Builder destroyable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field destroyable:Z
       5: aload_0
       6: areturn

  public org.atmosphere.cpr.AtmosphereResponseImpl$Builder asyncIOWriter(org.atmosphere.cpr.AsyncIOWriter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field asyncIOWriter:Lorg/atmosphere/cpr/AsyncIOWriter;
       5: aload_0
       6: areturn

  public org.atmosphere.cpr.AtmosphereResponseImpl$Builder status(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field status:I
       5: aload_0
       6: areturn

  public org.atmosphere.cpr.AtmosphereResponseImpl$Builder statusMessage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field statusMessage:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.atmosphere.cpr.AtmosphereResponseImpl$Builder request(org.atmosphere.cpr.AtmosphereRequest);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field atmosphereRequest:Lorg/atmosphere/cpr/AtmosphereRequest;
       5: aload_0
       6: areturn

  public org.atmosphere.cpr.AtmosphereResponse build();
    Code:
       0: new           #16                 // class org/atmosphere/cpr/AtmosphereResponseImpl
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #17                 // Method org/atmosphere/cpr/AtmosphereResponseImpl."<init>":(Lorg/atmosphere/cpr/AtmosphereResponseImpl$Builder;Lorg/atmosphere/cpr/AtmosphereResponseImpl$1;)V
       9: areturn

  public org.atmosphere.cpr.AtmosphereResponseImpl$Builder header(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field headers:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public org.atmosphere.cpr.AtmosphereResponseImpl$Builder writeHeader(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field writeStatusAndHeader:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iload_1
       5: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: aload_0
       9: areturn

  public org.atmosphere.cpr.AtmosphereResponseImpl$Builder response(javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field atmosphereResponse:Ljavax/servlet/http/HttpServletResponse;
       5: aload_0
       6: areturn

  public org.atmosphere.cpr.AtmosphereResponse$Builder response(javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method response:(Ljavax/servlet/http/HttpServletResponse;)Lorg/atmosphere/cpr/AtmosphereResponseImpl$Builder;
       5: areturn

  public org.atmosphere.cpr.AtmosphereResponse$Builder writeHeader(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #21                 // Method writeHeader:(Z)Lorg/atmosphere/cpr/AtmosphereResponseImpl$Builder;
       5: areturn

  public org.atmosphere.cpr.AtmosphereResponse$Builder header(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #22                 // Method header:(Ljava/lang/String;Ljava/lang/String;)Lorg/atmosphere/cpr/AtmosphereResponseImpl$Builder;
       6: areturn

  public org.atmosphere.cpr.AtmosphereResponse$Builder request(org.atmosphere.cpr.AtmosphereRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method request:(Lorg/atmosphere/cpr/AtmosphereRequest;)Lorg/atmosphere/cpr/AtmosphereResponseImpl$Builder;
       5: areturn

  public org.atmosphere.cpr.AtmosphereResponse$Builder statusMessage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method statusMessage:(Ljava/lang/String;)Lorg/atmosphere/cpr/AtmosphereResponseImpl$Builder;
       5: areturn

  public org.atmosphere.cpr.AtmosphereResponse$Builder status(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #25                 // Method status:(I)Lorg/atmosphere/cpr/AtmosphereResponseImpl$Builder;
       5: areturn

  public org.atmosphere.cpr.AtmosphereResponse$Builder asyncIOWriter(org.atmosphere.cpr.AsyncIOWriter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method asyncIOWriter:(Lorg/atmosphere/cpr/AsyncIOWriter;)Lorg/atmosphere/cpr/AtmosphereResponseImpl$Builder;
       5: areturn

  public org.atmosphere.cpr.AtmosphereResponse$Builder destroyable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #27                 // Method destroyable:(Z)Lorg/atmosphere/cpr/AtmosphereResponseImpl$Builder;
       5: areturn

  static javax.servlet.http.HttpServletResponse access$000(org.atmosphere.cpr.AtmosphereResponseImpl$Builder);
    Code:
       0: aload_0
       1: getfield      #8                  // Field atmosphereResponse:Ljavax/servlet/http/HttpServletResponse;
       4: areturn

  static org.atmosphere.cpr.AsyncIOWriter access$100(org.atmosphere.cpr.AtmosphereResponseImpl$Builder);
    Code:
       0: aload_0
       1: getfield      #7                  // Field asyncIOWriter:Lorg/atmosphere/cpr/AsyncIOWriter;
       4: areturn

  static org.atmosphere.cpr.AtmosphereRequest access$200(org.atmosphere.cpr.AtmosphereResponseImpl$Builder);
    Code:
       0: aload_0
       1: getfield      #6                  // Field atmosphereRequest:Lorg/atmosphere/cpr/AtmosphereRequest;
       4: areturn

  static int access$300(org.atmosphere.cpr.AtmosphereResponseImpl$Builder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field status:I
       4: ireturn

  static java.lang.String access$400(org.atmosphere.cpr.AtmosphereResponseImpl$Builder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field statusMessage:Ljava/lang/String;
       4: areturn

  static java.util.concurrent.atomic.AtomicBoolean access$500(org.atmosphere.cpr.AtmosphereResponseImpl$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field writeStatusAndHeader:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  static java.util.Map access$600(org.atmosphere.cpr.AtmosphereResponseImpl$Builder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field headers:Ljava/util/Map;
       4: areturn

  static boolean access$700(org.atmosphere.cpr.AtmosphereResponseImpl$Builder);
    Code:
       0: aload_0
       1: getfield      #1                  // Field destroyable:Z
       4: ireturn
}
