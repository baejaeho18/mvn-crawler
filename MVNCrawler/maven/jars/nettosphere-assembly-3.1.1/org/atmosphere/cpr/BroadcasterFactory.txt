Compiled from "BroadcasterFactory.java"
public interface org.atmosphere.cpr.BroadcasterFactory {
  public abstract void configure(java.lang.Class<? extends org.atmosphere.cpr.Broadcaster>, java.lang.String, org.atmosphere.cpr.AtmosphereConfig);

  public abstract org.atmosphere.cpr.Broadcaster get();

  public abstract org.atmosphere.cpr.Broadcaster get(java.lang.Object);

  public abstract <T extends org.atmosphere.cpr.Broadcaster> T get(java.lang.Class<T>, java.lang.Object);

  public abstract void destroy();

  public abstract boolean add(org.atmosphere.cpr.Broadcaster, java.lang.Object);

  public abstract boolean remove(org.atmosphere.cpr.Broadcaster, java.lang.Object);

  public abstract <T extends org.atmosphere.cpr.Broadcaster> T lookup(java.lang.Class<T>, java.lang.Object);

  public abstract <T extends org.atmosphere.cpr.Broadcaster> T lookup(java.lang.Class<T>, java.lang.Object, boolean);

  public abstract <T extends org.atmosphere.cpr.Broadcaster> T lookup(java.lang.Object);

  public abstract <T extends org.atmosphere.cpr.Broadcaster> T lookup(java.lang.Object, boolean);

  public abstract void removeAllAtmosphereResource(org.atmosphere.cpr.AtmosphereResource);

  public abstract boolean remove(java.lang.Object);

  public abstract java.util.Collection<org.atmosphere.cpr.Broadcaster> lookupAll();

  public abstract org.atmosphere.cpr.BroadcasterFactory addBroadcasterListener(org.atmosphere.cpr.BroadcasterListener);

  public abstract org.atmosphere.cpr.BroadcasterFactory removeBroadcasterListener(org.atmosphere.cpr.BroadcasterListener);

  public abstract java.util.Collection<org.atmosphere.cpr.BroadcasterListener> broadcasterListeners();
}
