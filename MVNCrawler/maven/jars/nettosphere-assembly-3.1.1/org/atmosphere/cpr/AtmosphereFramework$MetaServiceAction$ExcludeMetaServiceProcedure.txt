Compiled from "AtmosphereFramework.java"
class org.atmosphere.cpr.AtmosphereFramework$MetaServiceAction$ExcludeMetaServiceProcedure implements org.atmosphere.cpr.AtmosphereFramework$MetaServiceAction$MetaServiceProcedure {
  private org.atmosphere.cpr.AtmosphereFramework$MetaServiceAction$ExcludeMetaServiceProcedure();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public void apply(org.atmosphere.cpr.AtmosphereFramework, java.lang.Class<?>);
    Code:
       0: ldc           #3                  // class org/atmosphere/cpr/AtmosphereInterceptor
       2: aload_2
       3: invokevirtual #4                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifeq          21
       9: aload_1
      10: aload_2
      11: invokevirtual #5                  // Method java/lang/Class.getName:()Ljava/lang/String;
      14: invokevirtual #6                  // Method org/atmosphere/cpr/AtmosphereFramework.excludeInterceptor:(Ljava/lang/String;)Lorg/atmosphere/cpr/AtmosphereFramework;
      17: pop
      18: goto          35
      21: getstatic     #7                  // Field org/atmosphere/cpr/AtmosphereFramework.logger:Lorg/slf4j/Logger;
      24: ldc           #8                  // String {} is not a framework service that could be excluded, pull request is welcome ;-)
      26: aload_2
      27: invokevirtual #5                  // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokeinterface #9,  3            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      35: return

  org.atmosphere.cpr.AtmosphereFramework$MetaServiceAction$ExcludeMetaServiceProcedure(org.atmosphere.cpr.AtmosphereFramework$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
