Compiled from "AtmosphereRequest.java"
public interface org.atmosphere.cpr.AtmosphereRequest extends javax.servlet.http.HttpServletRequest {
  public abstract boolean destroyed();

  public abstract org.atmosphere.cpr.AtmosphereRequest destroyable(boolean);

  public abstract java.lang.String getPathInfo();

  public abstract java.lang.String getPathTranslated();

  public abstract java.lang.String getQueryString();

  public abstract java.lang.String getRemoteUser();

  public abstract java.lang.String getRequestedSessionId();

  public abstract java.lang.String getMethod();

  public abstract javax.servlet.http.Part getPart(java.lang.String) throws java.io.IOException, javax.servlet.ServletException;

  public abstract java.util.Collection<javax.servlet.http.Part> getParts() throws java.io.IOException, javax.servlet.ServletException;

  public abstract java.lang.String getContentType();

  public abstract javax.servlet.DispatcherType getDispatcherType();

  public abstract java.lang.String getServletPath();

  public abstract java.lang.String getRequestURI();

  public abstract java.lang.StringBuffer getRequestURL();

  public abstract java.util.Enumeration getHeaders(java.lang.String);

  public abstract int getIntHeader(java.lang.String);

  public abstract java.util.Enumeration<java.lang.String> getHeaderNames();

  public abstract boolean authenticate(javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException;

  public abstract java.lang.String getAuthType();

  public abstract java.lang.String getContextPath();

  public abstract javax.servlet.http.Cookie[] getCookies();

  public abstract long getDateHeader(java.lang.String);

  public abstract java.lang.String getHeader(java.lang.String);

  public abstract javax.servlet.http.HttpServletRequest wrappedRequest();

  public abstract java.lang.String getHeader(java.lang.String, boolean);

  public abstract java.lang.String getParameter(java.lang.String);

  public abstract java.util.Map<java.lang.String, java.lang.String[]> getParameterMap();

  public abstract java.util.Enumeration<java.lang.String> getParameterNames();

  public abstract java.lang.String[] getParameterValues(java.lang.String);

  public abstract java.lang.String getProtocol();

  public abstract javax.servlet.ServletInputStream getInputStream() throws java.io.IOException;

  public abstract java.io.BufferedReader getReader() throws java.io.IOException;

  public abstract java.lang.String getRealPath(java.lang.String);

  public abstract org.atmosphere.cpr.AtmosphereRequest headers(java.util.Map<java.lang.String, java.lang.String>);

  public abstract org.atmosphere.cpr.AtmosphereRequest header(java.lang.String, java.lang.String);

  public abstract org.atmosphere.cpr.AtmosphereRequest queryString(java.lang.String);

  public abstract java.util.Map<java.lang.String, java.lang.String> headersMap();

  public abstract java.util.Map<java.lang.String, java.lang.String[]> queryStringsMap();

  public abstract org.atmosphere.cpr.AtmosphereRequest method(java.lang.String);

  public abstract org.atmosphere.cpr.AtmosphereRequest contentType(java.lang.String);

  public abstract org.atmosphere.cpr.AtmosphereRequest body(java.lang.String);

  public abstract org.atmosphere.cpr.AtmosphereRequest body(byte[]);

  public abstract org.atmosphere.cpr.AtmosphereRequest body(java.io.InputStream);

  public abstract org.atmosphere.cpr.AtmosphereRequest body(java.io.Reader);

  public abstract org.atmosphere.cpr.AtmosphereRequestImpl$Body body();

  public abstract org.atmosphere.cpr.AtmosphereRequest servletPath(java.lang.String);

  public abstract org.atmosphere.cpr.AtmosphereRequest contextPath(java.lang.String);

  public abstract org.atmosphere.cpr.AtmosphereRequest requestURI(java.lang.String);

  public abstract void setAttribute(java.lang.String, java.lang.Object);

  public abstract void setCharacterEncoding(java.lang.String) throws java.io.UnsupportedEncodingException;

  public abstract javax.servlet.AsyncContext startAsync();

  public abstract javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse);

  public abstract javax.servlet.AsyncContext getAsyncContext();

  public abstract java.lang.Object getAttribute(java.lang.String);

  public abstract void removeAttribute(java.lang.String);

  public abstract org.atmosphere.cpr.AtmosphereRequest$LocalAttributes attributes();

  public abstract javax.servlet.http.HttpSession getSession();

  public abstract javax.servlet.http.HttpSession getSession(boolean);

  public abstract java.security.Principal getUserPrincipal();

  public abstract boolean isRequestedSessionIdFromCookie();

  public abstract boolean isRequestedSessionIdFromUrl();

  public abstract boolean isRequestedSessionIdFromURL();

  public abstract boolean isRequestedSessionIdValid();

  public abstract boolean isUserInRole(java.lang.String);

  public abstract void login(java.lang.String, java.lang.String) throws javax.servlet.ServletException;

  public abstract void logout() throws javax.servlet.ServletException;

  public abstract java.lang.String getRemoteAddr();

  public abstract java.lang.String getRemoteHost();

  public abstract int getRemotePort();

  public abstract javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String);

  public abstract java.lang.String getScheme();

  public abstract java.lang.String getServerName();

  public abstract int getServerPort();

  public abstract javax.servlet.ServletContext getServletContext();

  public abstract boolean isAsyncStarted();

  public abstract boolean isAsyncSupported();

  public abstract boolean isSecure();

  public abstract java.lang.String getLocalName();

  public abstract int getLocalPort();

  public abstract java.lang.String getLocalAddr();

  public abstract java.util.Locale getLocale();

  public abstract org.atmosphere.cpr.AtmosphereResource resource();

  public abstract java.util.Enumeration<java.util.Locale> getLocales();

  public abstract boolean dispatchRequestAsynchronously();

  public abstract boolean isDestroyable();

  public abstract org.atmosphere.cpr.AtmosphereRequest pathInfo(java.lang.String);

  public abstract java.util.Enumeration<java.lang.String> getAttributeNames();

  public abstract org.atmosphere.cpr.AtmosphereRequest$LocalAttributes localAttributes();

  public abstract java.lang.String getCharacterEncoding();

  public abstract int getContentLength();

  public abstract java.lang.String uuid();

  public abstract void destroy();

  public abstract void destroy(boolean);

  public abstract void setRequest(javax.servlet.ServletRequest);

  public abstract java.lang.String toString();

  public abstract java.lang.String requestURL();
}
