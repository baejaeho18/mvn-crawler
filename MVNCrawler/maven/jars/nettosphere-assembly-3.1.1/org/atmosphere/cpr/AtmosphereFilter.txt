Compiled from "AtmosphereFilter.java"
public class org.atmosphere.cpr.AtmosphereFilter implements javax.servlet.Filter {
  private static final org.slf4j.Logger logger;

  private final org.atmosphere.cpr.AtmosphereServlet as;

  private static final java.lang.String EXCLUDE_FILES;

  private java.lang.String excluded;

  public org.atmosphere.cpr.AtmosphereFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // String ^.*\\.(ico|ICO|jpg|JPG|gif|GIF|doc|DOC|pdf|PDF)$
       7: putfield      #4                  // Field excluded:Ljava/lang/String;
      10: aload_0
      11: new           #5                  // class org/atmosphere/cpr/AtmosphereServlet
      14: dup
      15: iconst_1
      16: invokespecial #6                  // Method org/atmosphere/cpr/AtmosphereServlet."<init>":(Z)V
      19: putfield      #7                  // Field as:Lorg/atmosphere/cpr/AtmosphereServlet;
      22: return

  public void init(javax.servlet.FilterConfig) throws javax.servlet.ServletException;
    Code:
       0: getstatic     #8                  // Field logger:Lorg/slf4j/Logger;
       3: ldc           #9                  // String AtmosphereServlet running as a Filter
       5: invokeinterface #10,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      10: aload_0
      11: getfield      #7                  // Field as:Lorg/atmosphere/cpr/AtmosphereServlet;
      14: new           #11                 // class org/atmosphere/cpr/AtmosphereFilter$1
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #12                 // Method org/atmosphere/cpr/AtmosphereFilter$1."<init>":(Lorg/atmosphere/cpr/AtmosphereFilter;Ljavax/servlet/FilterConfig;)V
      23: invokevirtual #13                 // Method org/atmosphere/cpr/AtmosphereServlet.init:(Ljavax/servlet/ServletConfig;)V
      26: aload_1
      27: ldc           #15                 // String org.atmosphere.cpr.AtmosphereFilter.excludes
      29: invokeinterface #16,  2           // InterfaceMethod javax/servlet/FilterConfig.getInitParameter:(Ljava/lang/String;)Ljava/lang/String;
      34: astore_2
      35: aload_2
      36: ifnull        44
      39: aload_0
      40: aload_2
      41: putfield      #4                  // Field excluded:Ljava/lang/String;
      44: return

  public void doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_1
       1: checkcast     #17                 // class javax/servlet/http/HttpServletRequest
       4: invokestatic  #18                 // Method org/atmosphere/cpr/AtmosphereRequestImpl.wrap:(Ljavax/servlet/http/HttpServletRequest;)Lorg/atmosphere/cpr/AtmosphereRequest;
       7: astore        4
       9: aload_2
      10: checkcast     #19                 // class javax/servlet/http/HttpServletResponse
      13: invokestatic  #20                 // Method org/atmosphere/cpr/AtmosphereResponseImpl.wrap:(Ljavax/servlet/http/HttpServletResponse;)Lorg/atmosphere/cpr/AtmosphereResponse;
      16: astore        5
      18: aconst_null
      19: astore        6
      21: aload         4
      23: invokeinterface #21,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getServletPath:()Ljava/lang/String;
      28: ifnull        73
      31: aload_0
      32: getfield      #7                  // Field as:Lorg/atmosphere/cpr/AtmosphereServlet;
      35: invokevirtual #22                 // Method org/atmosphere/cpr/AtmosphereServlet.framework:()Lorg/atmosphere/cpr/AtmosphereFramework;
      38: invokevirtual #23                 // Method org/atmosphere/cpr/AtmosphereFramework.getServletContext:()Ljavax/servlet/ServletContext;
      41: aload         4
      43: invokeinterface #21,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getServletPath:()Ljava/lang/String;
      48: invokeinterface #24,  2           // InterfaceMethod javax/servlet/ServletContext.getResource:(Ljava/lang/String;)Ljava/net/URL;
      53: ifnonnull     89
      56: aload         4
      58: invokeinterface #21,  1           // InterfaceMethod org/atmosphere/cpr/AtmosphereRequest.getServletPath:()Ljava/lang/String;
      63: aload_0
      64: getfield      #4                  // Field excluded:Ljava/lang/String;
      67: invokevirtual #25                 // Method java/lang/String.matches:(Ljava/lang/String;)Z
      70: ifne          89
      73: aload_0
      74: getfield      #7                  // Field as:Lorg/atmosphere/cpr/AtmosphereServlet;
      77: invokevirtual #22                 // Method org/atmosphere/cpr/AtmosphereServlet.framework:()Lorg/atmosphere/cpr/AtmosphereFramework;
      80: aload         4
      82: aload         5
      84: invokevirtual #26                 // Method org/atmosphere/cpr/AtmosphereFramework.doCometSupport:(Lorg/atmosphere/cpr/AtmosphereRequest;Lorg/atmosphere/cpr/AtmosphereResponse;)Lorg/atmosphere/cpr/Action;
      87: astore        6
      89: aload         6
      91: ifnull        105
      94: aload         6
      96: invokevirtual #27                 // Method org/atmosphere/cpr/Action.type:()Lorg/atmosphere/cpr/Action$TYPE;
      99: getstatic     #28                 // Field org/atmosphere/cpr/Action$TYPE.SUSPEND:Lorg/atmosphere/cpr/Action$TYPE;
     102: if_acmpeq     113
     105: aload_3
     106: aload_1
     107: aload_2
     108: invokeinterface #29,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
     113: return

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #7                  // Field as:Lorg/atmosphere/cpr/AtmosphereServlet;
       4: invokevirtual #30                 // Method org/atmosphere/cpr/AtmosphereServlet.destroy:()V
       7: return

  static {};
    Code:
       0: ldc           #2                  // class org/atmosphere/cpr/AtmosphereFilter
       2: invokestatic  #31                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #8                  // Field logger:Lorg/slf4j/Logger;
       8: return
}
