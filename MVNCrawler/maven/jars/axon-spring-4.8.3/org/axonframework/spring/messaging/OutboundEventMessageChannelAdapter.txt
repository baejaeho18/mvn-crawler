Compiled from "OutboundEventMessageChannelAdapter.java"
public class org.axonframework.spring.messaging.OutboundEventMessageChannelAdapter implements org.springframework.beans.factory.InitializingBean {
  private final org.springframework.messaging.MessageChannel channel;

  private final java.util.function.Predicate<? super org.axonframework.eventhandling.EventMessage<?>> filter;

  private final org.axonframework.messaging.SubscribableMessageSource<org.axonframework.eventhandling.EventMessage<?>> messageSource;

  private final org.axonframework.spring.messaging.EventMessageConverter eventMessageConverter;

  public org.axonframework.spring.messaging.OutboundEventMessageChannelAdapter(org.axonframework.messaging.SubscribableMessageSource<org.axonframework.eventhandling.EventMessage<?>>, org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #1,  0              // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
       8: invokespecial #2                  // Method "<init>":(Lorg/axonframework/messaging/SubscribableMessageSource;Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Predicate;)V
      11: return

  public org.axonframework.spring.messaging.OutboundEventMessageChannelAdapter(org.axonframework.messaging.SubscribableMessageSource<org.axonframework.eventhandling.EventMessage<?>>, org.springframework.messaging.MessageChannel, java.util.function.Predicate<? super org.axonframework.eventhandling.EventMessage<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: new           #3                  // class org/axonframework/spring/messaging/DefaultEventMessageConverter
       7: dup
       8: invokespecial #4                  // Method org/axonframework/spring/messaging/DefaultEventMessageConverter."<init>":()V
      11: invokespecial #5                  // Method "<init>":(Lorg/axonframework/messaging/SubscribableMessageSource;Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Predicate;Lorg/axonframework/spring/messaging/EventMessageConverter;)V
      14: return

  public org.axonframework.spring.messaging.OutboundEventMessageChannelAdapter(org.axonframework.messaging.SubscribableMessageSource<org.axonframework.eventhandling.EventMessage<?>>, org.springframework.messaging.MessageChannel, java.util.function.Predicate<? super org.axonframework.eventhandling.EventMessage<?>>, org.axonframework.spring.messaging.EventMessageConverter);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #7                  // Field channel:Lorg/springframework/messaging/MessageChannel;
       9: aload_0
      10: aload_1
      11: putfield      #8                  // Field messageSource:Lorg/axonframework/messaging/SubscribableMessageSource;
      14: aload_0
      15: aload_3
      16: putfield      #9                  // Field filter:Ljava/util/function/Predicate;
      19: aload_0
      20: aload         4
      22: putfield      #10                 // Field eventMessageConverter:Lorg/axonframework/spring/messaging/EventMessageConverter;
      25: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: getfield      #8                  // Field messageSource:Lorg/axonframework/messaging/SubscribableMessageSource;
       4: aload_0
       5: invokedynamic #11,  0             // InvokeDynamic #1:accept:(Lorg/axonframework/spring/messaging/OutboundEventMessageChannelAdapter;)Ljava/util/function/Consumer;
      10: invokeinterface #12,  2           // InterfaceMethod org/axonframework/messaging/SubscribableMessageSource.subscribe:(Ljava/util/function/Consumer;)Lorg/axonframework/common/Registration;
      15: pop
      16: return

  protected void handle(java.util.List<? extends org.axonframework.eventhandling.EventMessage<?>>);
    Code:
       0: aload_1
       1: invokeinterface #13,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: aload_0
       7: getfield      #9                  // Field filter:Ljava/util/function/Predicate;
      10: dup
      11: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: pop
      15: invokedynamic #15,  0             // InvokeDynamic #2:test:(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;
      20: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      25: aload_0
      26: invokedynamic #17,  0             // InvokeDynamic #3:accept:(Lorg/axonframework/spring/messaging/OutboundEventMessageChannelAdapter;)Ljava/util/function/Consumer;
      31: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      36: return

  protected org.springframework.messaging.Message<?> transform(org.axonframework.eventhandling.EventMessage<?>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field eventMessageConverter:Lorg/axonframework/spring/messaging/EventMessageConverter;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod org/axonframework/spring/messaging/EventMessageConverter.convertToOutboundMessage:(Lorg/axonframework/eventhandling/EventMessage;)Lorg/springframework/messaging/Message;
      10: areturn

  private void lambda$handle$1(org.axonframework.eventhandling.EventMessage);
    Code:
       0: aload_0
       1: getfield      #7                  // Field channel:Lorg/springframework/messaging/MessageChannel;
       4: aload_0
       5: aload_1
       6: invokevirtual #20                 // Method transform:(Lorg/axonframework/eventhandling/EventMessage;)Lorg/springframework/messaging/Message;
       9: invokeinterface #21,  2           // InterfaceMethod org/springframework/messaging/MessageChannel.send:(Lorg/springframework/messaging/Message;)Z
      14: pop
      15: return

  private static boolean lambda$new$0(org.axonframework.eventhandling.EventMessage);
    Code:
       0: iconst_1
       1: ireturn
}
