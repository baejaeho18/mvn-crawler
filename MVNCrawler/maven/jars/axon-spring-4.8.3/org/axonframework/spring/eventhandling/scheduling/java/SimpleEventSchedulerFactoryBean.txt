Compiled from "SimpleEventSchedulerFactoryBean.java"
public class org.axonframework.spring.eventhandling.scheduling.java.SimpleEventSchedulerFactoryBean implements org.springframework.beans.factory.FactoryBean<org.axonframework.eventhandling.scheduling.java.SimpleEventScheduler>, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean, org.springframework.context.ApplicationContextAware {
  private org.axonframework.eventhandling.EventBus eventBus;

  private java.util.concurrent.ScheduledExecutorService executorService;

  private java.util.concurrent.ScheduledExecutorService executorServiceToShutDown;

  private org.axonframework.eventhandling.scheduling.java.SimpleEventScheduler eventScheduler;

  private org.springframework.context.ApplicationContext applicationContext;

  private org.springframework.transaction.PlatformTransactionManager transactionManager;

  private org.springframework.transaction.TransactionDefinition transactionDefinition;

  public org.axonframework.spring.eventhandling.scheduling.java.SimpleEventSchedulerFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/transaction/support/DefaultTransactionDefinition
       8: dup
       9: invokespecial #3                  // Method org/springframework/transaction/support/DefaultTransactionDefinition."<init>":()V
      12: putfield      #4                  // Field transactionDefinition:Lorg/springframework/transaction/TransactionDefinition;
      15: return

  public org.axonframework.eventhandling.scheduling.java.SimpleEventScheduler getObject();
    Code:
       0: aload_0
       1: getfield      #5                  // Field eventScheduler:Lorg/axonframework/eventhandling/scheduling/java/SimpleEventScheduler;
       4: areturn

  public java.lang.Class<?> getObjectType();
    Code:
       0: ldc           #6                  // class org/axonframework/eventhandling/scheduling/java/SimpleEventScheduler
       2: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: getfield      #7                  // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
       4: ifnonnull     34
       7: aload_0
       8: new           #8                  // class org/axonframework/common/AxonThreadFactory
      11: dup
      12: ldc           #9                  // class org/axonframework/spring/eventhandling/scheduling/java/SimpleEventSchedulerFactoryBean
      14: invokevirtual #10                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      17: invokespecial #11                 // Method org/axonframework/common/AxonThreadFactory."<init>":(Ljava/lang/String;)V
      20: invokestatic  #12                 // Method java/util/concurrent/Executors.newSingleThreadScheduledExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
      23: putfield      #7                  // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
      26: aload_0
      27: aload_0
      28: getfield      #7                  // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
      31: putfield      #13                 // Field executorServiceToShutDown:Ljava/util/concurrent/ScheduledExecutorService;
      34: aload_0
      35: getfield      #14                 // Field eventBus:Lorg/axonframework/eventhandling/EventBus;
      38: ifnonnull     59
      41: aload_0
      42: aload_0
      43: getfield      #15                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      46: ldc           #16                 // class org/axonframework/eventhandling/EventBus
      48: invokeinterface #17,  2           // InterfaceMethod org/springframework/context/ApplicationContext.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      53: checkcast     #16                 // class org/axonframework/eventhandling/EventBus
      56: putfield      #14                 // Field eventBus:Lorg/axonframework/eventhandling/EventBus;
      59: invokestatic  #18                 // Method org/axonframework/eventhandling/scheduling/java/SimpleEventScheduler.builder:()Lorg/axonframework/eventhandling/scheduling/java/SimpleEventScheduler$Builder;
      62: aload_0
      63: getfield      #7                  // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
      66: invokevirtual #19                 // Method org/axonframework/eventhandling/scheduling/java/SimpleEventScheduler$Builder.scheduledExecutorService:(Ljava/util/concurrent/ScheduledExecutorService;)Lorg/axonframework/eventhandling/scheduling/java/SimpleEventScheduler$Builder;
      69: aload_0
      70: getfield      #14                 // Field eventBus:Lorg/axonframework/eventhandling/EventBus;
      73: invokevirtual #20                 // Method org/axonframework/eventhandling/scheduling/java/SimpleEventScheduler$Builder.eventBus:(Lorg/axonframework/eventhandling/EventBus;)Lorg/axonframework/eventhandling/scheduling/java/SimpleEventScheduler$Builder;
      76: astore_1
      77: aload_0
      78: getfield      #21                 // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
      81: ifnull        104
      84: aload_1
      85: new           #22                 // class org/axonframework/spring/messaging/unitofwork/SpringTransactionManager
      88: dup
      89: aload_0
      90: getfield      #21                 // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
      93: aload_0
      94: getfield      #4                  // Field transactionDefinition:Lorg/springframework/transaction/TransactionDefinition;
      97: invokespecial #23                 // Method org/axonframework/spring/messaging/unitofwork/SpringTransactionManager."<init>":(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/TransactionDefinition;)V
     100: invokevirtual #24                 // Method org/axonframework/eventhandling/scheduling/java/SimpleEventScheduler$Builder.transactionManager:(Lorg/axonframework/common/transaction/TransactionManager;)Lorg/axonframework/eventhandling/scheduling/java/SimpleEventScheduler$Builder;
     103: pop
     104: aload_0
     105: aload_1
     106: invokevirtual #25                 // Method org/axonframework/eventhandling/scheduling/java/SimpleEventScheduler$Builder.build:()Lorg/axonframework/eventhandling/scheduling/java/SimpleEventScheduler;
     109: putfield      #5                  // Field eventScheduler:Lorg/axonframework/eventhandling/scheduling/java/SimpleEventScheduler;
     112: return

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #13                 // Field executorServiceToShutDown:Ljava/util/concurrent/ScheduledExecutorService;
       4: ifnull        16
       7: aload_0
       8: getfield      #13                 // Field executorServiceToShutDown:Ljava/util/concurrent/ScheduledExecutorService;
      11: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
      16: return

  public void setEventBus(org.axonframework.eventhandling.EventBus);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field eventBus:Lorg/axonframework/eventhandling/EventBus;
       5: return

  public void setExecutorService(java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
       5: return

  public void setTransactionManager(org.springframework.transaction.PlatformTransactionManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
       5: return

  public void setTransactionDefinition(org.springframework.transaction.TransactionDefinition);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field transactionDefinition:Lorg/springframework/transaction/TransactionDefinition;
       5: return

  public void setApplicationContext(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       5: return

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method getObject:()Lorg/axonframework/eventhandling/scheduling/java/SimpleEventScheduler;
       4: areturn
}
