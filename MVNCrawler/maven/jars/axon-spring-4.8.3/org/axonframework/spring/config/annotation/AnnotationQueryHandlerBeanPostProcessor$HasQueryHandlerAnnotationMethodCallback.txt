Compiled from "AnnotationQueryHandlerBeanPostProcessor.java"
class org.axonframework.spring.config.annotation.AnnotationQueryHandlerBeanPostProcessor$HasQueryHandlerAnnotationMethodCallback implements org.springframework.util.ReflectionUtils$MethodCallback {
  private final java.util.concurrent.atomic.AtomicBoolean result;

  final org.axonframework.spring.config.annotation.AnnotationQueryHandlerBeanPostProcessor this$0;

  public org.axonframework.spring.config.annotation.AnnotationQueryHandlerBeanPostProcessor$HasQueryHandlerAnnotationMethodCallback(org.axonframework.spring.config.annotation.AnnotationQueryHandlerBeanPostProcessor, java.util.concurrent.atomic.AtomicBoolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/axonframework/spring/config/annotation/AnnotationQueryHandlerBeanPostProcessor;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field result:Ljava/util/concurrent/atomic/AtomicBoolean;
      14: return

  public void doWith(java.lang.reflect.Method) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ldc           #4                  // class org/axonframework/queryhandling/QueryHandler
       3: invokestatic  #5                  // Method org/axonframework/common/annotation/AnnotationUtils.findAnnotationAttributes:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/util/Optional;
       6: invokevirtual #6                  // Method java/util/Optional.isPresent:()Z
       9: ifeq          20
      12: aload_0
      13: getfield      #3                  // Field result:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: iconst_1
      17: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      20: return
}
