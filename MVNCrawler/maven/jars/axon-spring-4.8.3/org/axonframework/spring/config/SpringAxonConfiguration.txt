Compiled from "SpringAxonConfiguration.java"
public class org.axonframework.spring.config.SpringAxonConfiguration implements org.springframework.beans.factory.FactoryBean<org.axonframework.config.Configuration>, org.springframework.context.SmartLifecycle {
  private final org.axonframework.config.Configurer configurer;

  private final java.util.concurrent.atomic.AtomicBoolean isRunning;

  private final java.util.concurrent.atomic.AtomicReference<org.axonframework.config.Configuration> configuration;

  private org.springframework.context.ApplicationContext applicationContext;

  public org.axonframework.spring.config.SpringAxonConfiguration(org.axonframework.config.Configurer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #4                  // Field isRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: new           #5                  // class java/util/concurrent/atomic/AtomicReference
      20: dup
      21: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      24: putfield      #7                  // Field configuration:Ljava/util/concurrent/atomic/AtomicReference;
      27: aload_0
      28: aload_1
      29: putfield      #8                  // Field configurer:Lorg/axonframework/config/Configurer;
      32: return

  public org.axonframework.config.Configuration getObject();
    Code:
       0: aload_0
       1: getfield      #7                  // Field configuration:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #10                 // class org/axonframework/config/Configuration
      10: astore_1
      11: aload_1
      12: ifnull        17
      15: aload_1
      16: areturn
      17: aload_0
      18: getfield      #7                  // Field configuration:Ljava/util/concurrent/atomic/AtomicReference;
      21: aconst_null
      22: aload_0
      23: getfield      #8                  // Field configurer:Lorg/axonframework/config/Configurer;
      26: invokeinterface #11,  1           // InterfaceMethod org/axonframework/config/Configurer.buildConfiguration:()Lorg/axonframework/config/Configuration;
      31: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      34: pop
      35: aload_0
      36: getfield      #7                  // Field configuration:Ljava/util/concurrent/atomic/AtomicReference;
      39: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      42: checkcast     #10                 // class org/axonframework/config/Configuration
      45: areturn

  public java.lang.Class<?> getObjectType();
    Code:
       0: ldc           #10                 // class org/axonframework/config/Configuration
       2: areturn

  public void start();
    Code:
       0: aload_0
       1: getfield      #4                  // Field isRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          37
      12: aload_0
      13: invokevirtual #14                 // Method getObject:()Lorg/axonframework/config/Configuration;
      16: invokeinterface #15,  1           // InterfaceMethod org/axonframework/config/Configuration.start:()V
      21: aload_0
      22: getfield      #16                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      25: new           #17                 // class org/axonframework/spring/event/AxonStartedEvent
      28: dup
      29: invokespecial #18                 // Method org/axonframework/spring/event/AxonStartedEvent."<init>":()V
      32: invokeinterface #19,  2           // InterfaceMethod org/springframework/context/ApplicationContext.publishEvent:(Ljava/lang/Object;)V
      37: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #7                  // Field configuration:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #10                 // class org/axonframework/config/Configuration
      10: astore_1
      11: aload_0
      12: getfield      #4                  // Field isRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: iconst_1
      16: iconst_0
      17: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      20: ifeq          33
      23: aload_1
      24: ifnull        33
      27: aload_1
      28: invokeinterface #20,  1           // InterfaceMethod org/axonframework/config/Configuration.shutdown:()V
      33: return

  public boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #4                  // Field isRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void setApplicationContext(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       5: return

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getObject:()Lorg/axonframework/config/Configuration;
       4: areturn
}
