Compiled from "AnnotationCommandHandlerBeanPostProcessor.java"
final class org.axonframework.spring.config.annotation.AnnotationCommandHandlerBeanPostProcessor$HasCommandHandlerAnnotationMethodCallback implements org.springframework.util.ReflectionUtils$MethodCallback {
  private final java.util.concurrent.atomic.AtomicBoolean result;

  private org.axonframework.spring.config.annotation.AnnotationCommandHandlerBeanPostProcessor$HasCommandHandlerAnnotationMethodCallback(java.util.concurrent.atomic.AtomicBoolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field result:Ljava/util/concurrent/atomic/AtomicBoolean;
       9: return

  public void doWith(java.lang.reflect.Method) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ldc           #4                  // class org/axonframework/commandhandling/CommandHandler
       3: invokestatic  #5                  // Method org/axonframework/common/annotation/AnnotationUtils.findAnnotationAttributes:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/util/Optional;
       6: invokevirtual #6                  // Method java/util/Optional.isPresent:()Z
       9: ifeq          20
      12: aload_0
      13: getfield      #3                  // Field result:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: iconst_1
      17: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      20: return

  org.axonframework.spring.config.annotation.AnnotationCommandHandlerBeanPostProcessor$HasCommandHandlerAnnotationMethodCallback(java.util.concurrent.atomic.AtomicBoolean, org.axonframework.spring.config.annotation.AnnotationCommandHandlerBeanPostProcessor$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Ljava/util/concurrent/atomic/AtomicBoolean;)V
       5: return
}
