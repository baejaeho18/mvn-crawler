Compiled from "SpringAggregateSnapshotterFactoryBean.java"
public class org.axonframework.spring.eventsourcing.SpringAggregateSnapshotterFactoryBean implements org.springframework.beans.factory.FactoryBean<org.axonframework.spring.eventsourcing.SpringAggregateSnapshotter>, org.springframework.context.ApplicationContextAware {
  private java.util.concurrent.Executor executor;

  private org.springframework.transaction.PlatformTransactionManager transactionManager;

  private org.springframework.context.ApplicationContext applicationContext;

  private org.springframework.transaction.TransactionDefinition transactionDefinition;

  private org.axonframework.eventsourcing.eventstore.EventStore eventStore;

  private org.axonframework.modelling.command.RepositoryProvider repositoryProvider;

  private org.axonframework.messaging.annotation.ParameterResolverFactory parameterResolverFactory;

  private org.axonframework.messaging.annotation.HandlerDefinition handlerDefinition;

  public org.axonframework.spring.eventsourcing.SpringAggregateSnapshotterFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/axonframework/common/DirectExecutor.INSTANCE:Lorg/axonframework/common/DirectExecutor;
       8: putfield      #3                  // Field executor:Ljava/util/concurrent/Executor;
      11: aload_0
      12: new           #4                  // class org/springframework/transaction/support/DefaultTransactionDefinition
      15: dup
      16: invokespecial #5                  // Method org/springframework/transaction/support/DefaultTransactionDefinition."<init>":()V
      19: putfield      #6                  // Field transactionDefinition:Lorg/springframework/transaction/TransactionDefinition;
      22: return

  public org.axonframework.spring.eventsourcing.SpringAggregateSnapshotter getObject();
    Code:
       0: aload_0
       1: getfield      #7                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
       4: ifnonnull     50
       7: aload_0
       8: getfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      11: ldc           #9                  // class org/springframework/transaction/PlatformTransactionManager
      13: invokestatic  #10                 // Method org/springframework/beans/factory/BeanFactoryUtils.beansOfTypeIncludingAncestors:(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;)Ljava/util/Map;
      16: astore_1
      17: aload_1
      18: invokeinterface #11,  1           // InterfaceMethod java/util/Map.size:()I
      23: iconst_1
      24: if_icmpne     50
      27: aload_0
      28: aload_1
      29: invokeinterface #12,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      34: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      39: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #9                  // class org/springframework/transaction/PlatformTransactionManager
      47: putfield      #7                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
      50: aload_0
      51: getfield      #15                 // Field eventStore:Lorg/axonframework/eventsourcing/eventstore/EventStore;
      54: ifnonnull     75
      57: aload_0
      58: aload_0
      59: getfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      62: ldc           #16                 // class org/axonframework/eventsourcing/eventstore/EventStore
      64: invokeinterface #17,  2           // InterfaceMethod org/springframework/context/ApplicationContext.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      69: checkcast     #16                 // class org/axonframework/eventsourcing/eventstore/EventStore
      72: putfield      #15                 // Field eventStore:Lorg/axonframework/eventsourcing/eventstore/EventStore;
      75: aload_0
      76: getfield      #18                 // Field repositoryProvider:Lorg/axonframework/modelling/command/RepositoryProvider;
      79: ifnonnull     110
      82: aload_0
      83: aload_0
      84: getfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      87: ldc           #19                 // class org/axonframework/config/Configuration
      89: invokeinterface #17,  2           // InterfaceMethod org/springframework/context/ApplicationContext.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      94: checkcast     #19                 // class org/axonframework/config/Configuration
      97: dup
      98: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     101: pop
     102: invokedynamic #21,  0             // InvokeDynamic #0:repositoryFor:(Lorg/axonframework/config/Configuration;)Lorg/axonframework/modelling/command/RepositoryProvider;
     107: putfield      #18                 // Field repositoryProvider:Lorg/axonframework/modelling/command/RepositoryProvider;
     110: aload_0
     111: getfield      #22                 // Field parameterResolverFactory:Lorg/axonframework/messaging/annotation/ParameterResolverFactory;
     114: ifnonnull     166
     117: aload_0
     118: iconst_3
     119: anewarray     #23                 // class org/axonframework/messaging/annotation/ParameterResolverFactory
     122: dup
     123: iconst_0
     124: aload_0
     125: invokevirtual #24                 // Method getObjectType:()Ljava/lang/Class;
     128: invokestatic  #25                 // Method org/axonframework/messaging/annotation/ClasspathParameterResolverFactory.forClass:(Ljava/lang/Class;)Lorg/axonframework/messaging/annotation/ParameterResolverFactory;
     131: aastore
     132: dup
     133: iconst_1
     134: new           #26                 // class org/axonframework/spring/config/annotation/SpringBeanDependencyResolverFactory
     137: dup
     138: aload_0
     139: getfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
     142: invokespecial #27                 // Method org/axonframework/spring/config/annotation/SpringBeanDependencyResolverFactory."<init>":(Lorg/springframework/context/ApplicationContext;)V
     145: aastore
     146: dup
     147: iconst_2
     148: new           #28                 // class org/axonframework/spring/config/annotation/SpringBeanParameterResolverFactory
     151: dup
     152: aload_0
     153: getfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
     156: invokespecial #29                 // Method org/axonframework/spring/config/annotation/SpringBeanParameterResolverFactory."<init>":(Lorg/springframework/context/ApplicationContext;)V
     159: aastore
     160: invokestatic  #30                 // Method org/axonframework/messaging/annotation/MultiParameterResolverFactory.ordered:([Lorg/axonframework/messaging/annotation/ParameterResolverFactory;)Lorg/axonframework/messaging/annotation/MultiParameterResolverFactory;
     163: putfield      #22                 // Field parameterResolverFactory:Lorg/axonframework/messaging/annotation/ParameterResolverFactory;
     166: aload_0
     167: getfield      #31                 // Field handlerDefinition:Lorg/axonframework/messaging/annotation/HandlerDefinition;
     170: ifnonnull     229
     173: aload_0
     174: new           #32                 // class org/axonframework/spring/config/annotation/HandlerDefinitionFactoryBean
     177: dup
     178: new           #33                 // class java/util/ArrayList
     181: dup
     182: aload_0
     183: getfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
     186: ldc           #34                 // class org/axonframework/messaging/annotation/HandlerDefinition
     188: invokestatic  #10                 // Method org/springframework/beans/factory/BeanFactoryUtils.beansOfTypeIncludingAncestors:(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;)Ljava/util/Map;
     191: invokeinterface #12,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     196: invokespecial #35                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     199: new           #33                 // class java/util/ArrayList
     202: dup
     203: aload_0
     204: getfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
     207: ldc           #36                 // class org/axonframework/messaging/annotation/HandlerEnhancerDefinition
     209: invokestatic  #10                 // Method org/springframework/beans/factory/BeanFactoryUtils.beansOfTypeIncludingAncestors:(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;)Ljava/util/Map;
     212: invokeinterface #12,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     217: invokespecial #35                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     220: invokespecial #37                 // Method org/axonframework/spring/config/annotation/HandlerDefinitionFactoryBean."<init>":(Ljava/util/List;Ljava/util/List;)V
     223: invokevirtual #38                 // Method org/axonframework/spring/config/annotation/HandlerDefinitionFactoryBean.getObject:()Lorg/axonframework/messaging/annotation/HandlerDefinition;
     226: putfield      #31                 // Field handlerDefinition:Lorg/axonframework/messaging/annotation/HandlerDefinition;
     229: aload_0
     230: getfield      #7                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
     233: ifnonnull     242
     236: getstatic     #39                 // Field org/axonframework/common/transaction/NoTransactionManager.INSTANCE:Lorg/axonframework/common/transaction/NoTransactionManager;
     239: goto          257
     242: new           #40                 // class org/axonframework/spring/messaging/unitofwork/SpringTransactionManager
     245: dup
     246: aload_0
     247: getfield      #7                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
     250: aload_0
     251: getfield      #6                  // Field transactionDefinition:Lorg/springframework/transaction/TransactionDefinition;
     254: invokespecial #41                 // Method org/axonframework/spring/messaging/unitofwork/SpringTransactionManager."<init>":(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/TransactionDefinition;)V
     257: astore_1
     258: invokestatic  #42                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter.builder:()Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
     261: aload_0
     262: getfield      #15                 // Field eventStore:Lorg/axonframework/eventsourcing/eventstore/EventStore;
     265: invokevirtual #43                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder.eventStore:(Lorg/axonframework/eventsourcing/eventstore/EventStore;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
     268: aload_0
     269: getfield      #3                  // Field executor:Ljava/util/concurrent/Executor;
     272: invokevirtual #44                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder.executor:(Ljava/util/concurrent/Executor;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
     275: aload_1
     276: invokevirtual #45                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder.transactionManager:(Lorg/axonframework/common/transaction/TransactionManager;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
     279: aload_0
     280: getfield      #18                 // Field repositoryProvider:Lorg/axonframework/modelling/command/RepositoryProvider;
     283: invokevirtual #46                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder.repositoryProvider:(Lorg/axonframework/modelling/command/RepositoryProvider;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
     286: aload_0
     287: getfield      #22                 // Field parameterResolverFactory:Lorg/axonframework/messaging/annotation/ParameterResolverFactory;
     290: invokevirtual #47                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder.parameterResolverFactory:(Lorg/axonframework/messaging/annotation/ParameterResolverFactory;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
     293: aload_0
     294: getfield      #31                 // Field handlerDefinition:Lorg/axonframework/messaging/annotation/HandlerDefinition;
     297: invokevirtual #48                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder.handlerDefinition:(Lorg/axonframework/messaging/annotation/HandlerDefinition;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
     300: invokevirtual #49                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder.build:()Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter;
     303: astore_2
     304: aload_2
     305: aload_0
     306: getfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
     309: invokevirtual #50                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter.setApplicationContext:(Lorg/springframework/context/ApplicationContext;)V
     312: aload_2
     313: areturn

  public java.lang.Class<?> getObjectType();
    Code:
       0: ldc           #51                 // class org/axonframework/eventsourcing/AggregateSnapshotter
       2: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public void setTransactionManager(org.springframework.transaction.PlatformTransactionManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
       5: return

  public void setTransactionDefinition(org.springframework.transaction.TransactionDefinition);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field transactionDefinition:Lorg/springframework/transaction/TransactionDefinition;
       5: return

  public void setEventStore(org.axonframework.eventsourcing.eventstore.EventStore);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field eventStore:Lorg/axonframework/eventsourcing/eventstore/EventStore;
       5: return

  public void setRepositoryProvider(org.axonframework.modelling.command.RepositoryProvider);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field repositoryProvider:Lorg/axonframework/modelling/command/RepositoryProvider;
       5: return

  public void setHandlerDefinition(org.axonframework.messaging.annotation.HandlerDefinition);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field handlerDefinition:Lorg/axonframework/messaging/annotation/HandlerDefinition;
       5: return

  public void setApplicationContext(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       5: return

  public void setExecutor(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field executor:Ljava/util/concurrent/Executor;
       5: return

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getObject:()Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter;
       4: areturn
}
