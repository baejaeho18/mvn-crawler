Compiled from "SpringAggregateSnapshotter.java"
public class org.axonframework.spring.eventsourcing.SpringAggregateSnapshotter$Builder extends org.axonframework.eventsourcing.AggregateSnapshotter$Builder {
  public org.axonframework.spring.eventsourcing.SpringAggregateSnapshotter$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/axonframework/eventsourcing/AggregateSnapshotter$Builder."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       8: invokevirtual #3                  // Method aggregateFactories:(Ljava/util/List;)Lorg/axonframework/eventsourcing/AggregateSnapshotter$Builder;
      11: pop
      12: return

  public org.axonframework.spring.eventsourcing.SpringAggregateSnapshotter$Builder eventStore(org.axonframework.eventsourcing.eventstore.EventStore);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/axonframework/eventsourcing/AggregateSnapshotter$Builder.eventStore:(Lorg/axonframework/eventsourcing/eventstore/EventStore;)Lorg/axonframework/eventsourcing/AggregateSnapshotter$Builder;
       5: pop
       6: aload_0
       7: areturn

  public org.axonframework.spring.eventsourcing.SpringAggregateSnapshotter$Builder executor(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/axonframework/eventsourcing/AggregateSnapshotter$Builder.executor:(Ljava/util/concurrent/Executor;)Lorg/axonframework/eventsourcing/AggregateSnapshotter$Builder;
       5: pop
       6: aload_0
       7: areturn

  public org.axonframework.spring.eventsourcing.SpringAggregateSnapshotter$Builder transactionManager(org.axonframework.common.transaction.TransactionManager);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/axonframework/eventsourcing/AggregateSnapshotter$Builder.transactionManager:(Lorg/axonframework/common/transaction/TransactionManager;)Lorg/axonframework/eventsourcing/AggregateSnapshotter$Builder;
       5: pop
       6: aload_0
       7: areturn

  public org.axonframework.spring.eventsourcing.SpringAggregateSnapshotter$Builder repositoryProvider(org.axonframework.modelling.command.RepositoryProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method org/axonframework/eventsourcing/AggregateSnapshotter$Builder.repositoryProvider:(Lorg/axonframework/modelling/command/RepositoryProvider;)Lorg/axonframework/eventsourcing/AggregateSnapshotter$Builder;
       5: pop
       6: aload_0
       7: areturn

  public org.axonframework.spring.eventsourcing.SpringAggregateSnapshotter$Builder parameterResolverFactory(org.axonframework.messaging.annotation.ParameterResolverFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/axonframework/eventsourcing/AggregateSnapshotter$Builder.parameterResolverFactory:(Lorg/axonframework/messaging/annotation/ParameterResolverFactory;)Lorg/axonframework/eventsourcing/AggregateSnapshotter$Builder;
       5: pop
       6: aload_0
       7: areturn

  public org.axonframework.spring.eventsourcing.SpringAggregateSnapshotter$Builder handlerDefinition(org.axonframework.messaging.annotation.HandlerDefinition);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method org/axonframework/eventsourcing/AggregateSnapshotter$Builder.handlerDefinition:(Lorg/axonframework/messaging/annotation/HandlerDefinition;)Lorg/axonframework/eventsourcing/AggregateSnapshotter$Builder;
       5: pop
       6: aload_0
       7: areturn

  public org.axonframework.spring.eventsourcing.SpringAggregateSnapshotter$Builder spanFactory(org.axonframework.tracing.SpanFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method org/axonframework/eventsourcing/AggregateSnapshotter$Builder.spanFactory:(Lorg/axonframework/tracing/SpanFactory;)Lorg/axonframework/eventsourcing/AggregateSnapshotter$Builder;
       5: pop
       6: aload_0
       7: areturn

  public org.axonframework.spring.eventsourcing.SpringAggregateSnapshotter build();
    Code:
       0: new           #11                 // class org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter
       3: dup
       4: aload_0
       5: invokespecial #12                 // Method org/axonframework/spring/eventsourcing/SpringAggregateSnapshotter."<init>":(Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;)V
       8: areturn

  protected void validate() throws org.axonframework.common.AxonConfigurationException;
    Code:
       0: aload_0
       1: invokespecial #13                 // Method org/axonframework/eventsourcing/AggregateSnapshotter$Builder.validate:()V
       4: return

  public org.axonframework.eventsourcing.AggregateSnapshotter build();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method build:()Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter;
       4: areturn

  public org.axonframework.eventsourcing.AggregateSnapshotter$Builder handlerDefinition(org.axonframework.messaging.annotation.HandlerDefinition);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method handlerDefinition:(Lorg/axonframework/messaging/annotation/HandlerDefinition;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
       5: areturn

  public org.axonframework.eventsourcing.AggregateSnapshotter$Builder parameterResolverFactory(org.axonframework.messaging.annotation.ParameterResolverFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method parameterResolverFactory:(Lorg/axonframework/messaging/annotation/ParameterResolverFactory;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
       5: areturn

  public org.axonframework.eventsourcing.AggregateSnapshotter$Builder repositoryProvider(org.axonframework.modelling.command.RepositoryProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method repositoryProvider:(Lorg/axonframework/modelling/command/RepositoryProvider;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
       5: areturn

  public org.axonframework.eventsourcing.AggregateSnapshotter$Builder spanFactory(org.axonframework.tracing.SpanFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method spanFactory:(Lorg/axonframework/tracing/SpanFactory;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
       5: areturn

  public org.axonframework.eventsourcing.AggregateSnapshotter$Builder transactionManager(org.axonframework.common.transaction.TransactionManager);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method transactionManager:(Lorg/axonframework/common/transaction/TransactionManager;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
       5: areturn

  public org.axonframework.eventsourcing.AggregateSnapshotter$Builder executor(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method executor:(Ljava/util/concurrent/Executor;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
       5: areturn

  public org.axonframework.eventsourcing.AggregateSnapshotter$Builder eventStore(org.axonframework.eventsourcing.eventstore.EventStore);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method eventStore:(Lorg/axonframework/eventsourcing/eventstore/EventStore;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
       5: areturn

  public org.axonframework.eventsourcing.AbstractSnapshotter$Builder transactionManager(org.axonframework.common.transaction.TransactionManager);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method transactionManager:(Lorg/axonframework/common/transaction/TransactionManager;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
       5: areturn

  public org.axonframework.eventsourcing.AbstractSnapshotter$Builder spanFactory(org.axonframework.tracing.SpanFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method spanFactory:(Lorg/axonframework/tracing/SpanFactory;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
       5: areturn

  public org.axonframework.eventsourcing.AbstractSnapshotter$Builder executor(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method executor:(Ljava/util/concurrent/Executor;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
       5: areturn

  public org.axonframework.eventsourcing.AbstractSnapshotter$Builder eventStore(org.axonframework.eventsourcing.eventstore.EventStore);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method eventStore:(Lorg/axonframework/eventsourcing/eventstore/EventStore;)Lorg/axonframework/spring/eventsourcing/SpringAggregateSnapshotter$Builder;
       5: areturn
}
