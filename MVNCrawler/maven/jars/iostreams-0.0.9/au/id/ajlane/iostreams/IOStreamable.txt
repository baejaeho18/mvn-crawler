Compiled from "IOStreamable.java"
public interface au.id.ajlane.iostreams.IOStreamable<T> {
  public default void consume() throws au.id.ajlane.iostreams.IOStreamReadException, au.id.ajlane.iostreams.IOStreamCloseException;
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method au/id/ajlane/iostreams/IOStreamables.consume:(Lau/id/ajlane/iostreams/IOStreamable;)V
       4: return

  public default void consume(java.util.function.Supplier<? extends au.id.ajlane.iostreams.IOStreamConsumer<? super T>>) throws au.id.ajlane.iostreams.IOStreamReadException, au.id.ajlane.iostreams.IOStreamCloseException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method au/id/ajlane/iostreams/IOStreamables.consume:(Lau/id/ajlane/iostreams/IOStreamable;Ljava/util/function/Supplier;)V
       5: return

  public default au.id.ajlane.iostreams.IOStreamable<T> filter(java.util.function.Supplier<? extends au.id.ajlane.iostreams.IOStreamFilter<? super T>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method au/id/ajlane/iostreams/IOStreamables.filter:(Lau/id/ajlane/iostreams/IOStreamable;Ljava/util/function/Supplier;)Lau/id/ajlane/iostreams/IOStreamable;
       5: areturn

  public default <R> au.id.ajlane.iostreams.IOStreamable<R> flatMap(java.util.function.Supplier<? extends au.id.ajlane.iostreams.IOStreamTransform<? super T, ? extends au.id.ajlane.iostreams.IOStreamable<? extends R>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method au/id/ajlane/iostreams/IOStreamables.flatMap:(Lau/id/ajlane/iostreams/IOStreamable;Ljava/util/function/Supplier;)Lau/id/ajlane/iostreams/IOStreamable;
       5: areturn

  public default au.id.ajlane.iostreams.IOStreamable<T> keep(java.util.function.Supplier<? extends au.id.ajlane.iostreams.IOStreamPredicate<? super T>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method au/id/ajlane/iostreams/IOStreamables.keep:(Lau/id/ajlane/iostreams/IOStreamable;Ljava/util/function/Supplier;)Lau/id/ajlane/iostreams/IOStreamable;
       5: areturn

  public default <R> au.id.ajlane.iostreams.IOStreamable<R> map(java.util.function.Supplier<? extends au.id.ajlane.iostreams.IOStreamTransform<? super T, ? extends R>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #6                  // Method au/id/ajlane/iostreams/IOStreamables.map:(Lau/id/ajlane/iostreams/IOStreamable;Ljava/util/function/Supplier;)Lau/id/ajlane/iostreams/IOStreamable;
       5: areturn

  public default au.id.ajlane.iostreams.IOStreamable<T> skip(java.util.function.Supplier<? extends au.id.ajlane.iostreams.IOStreamPredicate<? super T>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #7                  // Method au/id/ajlane/iostreams/IOStreamables.skip:(Lau/id/ajlane/iostreams/IOStreamable;Ljava/util/function/Supplier;)Lau/id/ajlane/iostreams/IOStreamable;
       5: areturn

  public abstract au.id.ajlane.iostreams.IOStream<T> stream();
}
