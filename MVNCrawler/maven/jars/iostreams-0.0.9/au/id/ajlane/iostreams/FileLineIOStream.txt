Compiled from "FileLineIOStream.java"
public class au.id.ajlane.iostreams.FileLineIOStream extends au.id.ajlane.iostreams.AbstractIOStream<au.id.ajlane.iostreams.FileLine> {
  private final au.id.ajlane.iostreams.FileLine lastLine;

  private final java.lang.String path;

  private final java.util.concurrent.Callable<java.io.BufferedReader> supplier;

  private java.io.BufferedReader reader;

  public static au.id.ajlane.iostreams.FileLineIOStream fromClasspath(java.lang.String, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_0
       2: invokedynamic #1,  0              // InvokeDynamic #0:call:(Ljava/lang/String;)Ljava/util/concurrent/Callable;
       7: aload_1
       8: invokestatic  #2                  // Method fromByteStream:(Ljava/lang/String;Ljava/util/concurrent/Callable;Ljava/nio/charset/Charset;)Lau/id/ajlane/iostreams/FileLineIOStream;
      11: areturn

  public static au.id.ajlane.iostreams.FileLineIOStream fromClasspath(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: invokedynamic #3,  0              // InvokeDynamic #1:call:(Ljava/lang/String;)Ljava/util/concurrent/Callable;
       7: invokestatic  #4                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
      10: invokestatic  #2                  // Method fromByteStream:(Ljava/lang/String;Ljava/util/concurrent/Callable;Ljava/nio/charset/Charset;)Lau/id/ajlane/iostreams/FileLineIOStream;
      13: areturn

  public static au.id.ajlane.iostreams.FileLineIOStream fromClasspath(java.lang.Class<?>, java.lang.String, java.nio.charset.Charset);
    Code:
       0: aload_1
       1: aload_0
       2: aload_1
       3: invokedynamic #5,  0              // InvokeDynamic #2:call:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/Callable;
       8: aload_2
       9: invokestatic  #2                  // Method fromByteStream:(Ljava/lang/String;Ljava/util/concurrent/Callable;Ljava/nio/charset/Charset;)Lau/id/ajlane/iostreams/FileLineIOStream;
      12: areturn

  public static au.id.ajlane.iostreams.FileLineIOStream fromClasspath(java.lang.Class<?>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       5: invokestatic  #6                  // Method fromClasspath:(Ljava/lang/Class;Ljava/lang/String;Ljava/nio/charset/Charset;)Lau/id/ajlane/iostreams/FileLineIOStream;
       8: areturn

  public static au.id.ajlane.iostreams.FileLineIOStream fromFile(java.nio.file.Path, java.nio.charset.Charset);
    Code:
       0: new           #7                  // class au/id/ajlane/iostreams/FileLineIOStream
       3: dup
       4: aload_0
       5: invokeinterface #8,  1            // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      10: aload_0
      11: aload_1
      12: invokedynamic #9,  0              // InvokeDynamic #3:call:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Ljava/util/concurrent/Callable;
      17: invokespecial #10                 // Method "<init>":(Ljava/lang/String;Ljava/util/concurrent/Callable;)V
      20: areturn

  public static au.id.ajlane.iostreams.FileLineIOStream fromFile(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       4: invokestatic  #11                 // Method fromFile:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Lau/id/ajlane/iostreams/FileLineIOStream;
       7: areturn

  public static au.id.ajlane.iostreams.FileLineIOStream fromFile(java.io.File, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       4: aload_1
       5: invokestatic  #11                 // Method fromFile:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Lau/id/ajlane/iostreams/FileLineIOStream;
       8: areturn

  public static au.id.ajlane.iostreams.FileLineIOStream fromFile(java.io.File);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       4: invokestatic  #4                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       7: invokestatic  #11                 // Method fromFile:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Lau/id/ajlane/iostreams/FileLineIOStream;
      10: areturn

  public static au.id.ajlane.iostreams.FileLineIOStream fromByteStream(java.lang.String, java.util.concurrent.Callable<java.io.InputStream>, java.nio.charset.Charset);
    Code:
       0: new           #7                  // class au/id/ajlane/iostreams/FileLineIOStream
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokedynamic #13,  0             // InvokeDynamic #4:call:(Ljava/util/concurrent/Callable;Ljava/nio/charset/Charset;)Ljava/util/concurrent/Callable;
      12: invokespecial #10                 // Method "<init>":(Ljava/lang/String;Ljava/util/concurrent/Callable;)V
      15: areturn

  public static au.id.ajlane.iostreams.FileLineIOStream fromByteStream(java.lang.String, java.util.concurrent.Callable<java.io.InputStream>);
    Code:
       0: new           #7                  // class au/id/ajlane/iostreams/FileLineIOStream
       3: dup
       4: aload_0
       5: aload_1
       6: invokedynamic #14,  0             // InvokeDynamic #5:call:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
      11: invokespecial #10                 // Method "<init>":(Ljava/lang/String;Ljava/util/concurrent/Callable;)V
      14: areturn

  private au.id.ajlane.iostreams.FileLineIOStream(java.lang.String, java.util.concurrent.Callable<java.io.BufferedReader>);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method au/id/ajlane/iostreams/AbstractIOStream."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #16                 // Field reader:Ljava/io/BufferedReader;
       9: aload_0
      10: aload_1
      11: putfield      #17                 // Field path:Ljava/lang/String;
      14: aload_0
      15: aload_2
      16: putfield      #18                 // Field supplier:Ljava/util/concurrent/Callable;
      19: aload_0
      20: new           #19                 // class au/id/ajlane/iostreams/FileLine
      23: dup
      24: aload_1
      25: iconst_m1
      26: aconst_null
      27: invokespecial #20                 // Method au/id/ajlane/iostreams/FileLine."<init>":(Ljava/lang/String;ILjava/lang/String;)V
      30: putfield      #21                 // Field lastLine:Lau/id/ajlane/iostreams/FileLine;
      33: return

  protected void end() throws au.id.ajlane.iostreams.IOStreamCloseException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field reader:Ljava/io/BufferedReader;
       4: ifnull        32
       7: aload_0
       8: getfield      #16                 // Field reader:Ljava/io/BufferedReader;
      11: invokevirtual #22                 // Method java/io/BufferedReader.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #16                 // Field reader:Ljava/io/BufferedReader;
      19: goto          32
      22: astore_1
      23: new           #24                 // class au/id/ajlane/iostreams/IOStreamCloseException
      26: dup
      27: aload_1
      28: invokespecial #25                 // Method au/id/ajlane/iostreams/IOStreamCloseException."<init>":(Ljava/lang/Exception;)V
      31: athrow
      32: return
    Exception table:
       from    to  target type
           7    19    22   Class java/io/IOException

  protected au.id.ajlane.iostreams.FileLine find() throws au.id.ajlane.iostreams.IOStreamReadException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field reader:Ljava/io/BufferedReader;
       4: invokevirtual #26                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
       7: astore_1
       8: goto          21
      11: astore_2
      12: new           #27                 // class au/id/ajlane/iostreams/IOStreamReadException
      15: dup
      16: aload_2
      17: invokespecial #28                 // Method au/id/ajlane/iostreams/IOStreamReadException."<init>":(Ljava/lang/Exception;)V
      20: athrow
      21: aload_1
      22: ifnull        51
      25: aload_0
      26: getfield      #21                 // Field lastLine:Lau/id/ajlane/iostreams/FileLine;
      29: dup
      30: getfield      #29                 // Field au/id/ajlane/iostreams/FileLine.number:I
      33: iconst_1
      34: iadd
      35: putfield      #29                 // Field au/id/ajlane/iostreams/FileLine.number:I
      38: aload_0
      39: getfield      #21                 // Field lastLine:Lau/id/ajlane/iostreams/FileLine;
      42: aload_1
      43: putfield      #30                 // Field au/id/ajlane/iostreams/FileLine.text:Ljava/lang/String;
      46: aload_0
      47: getfield      #21                 // Field lastLine:Lau/id/ajlane/iostreams/FileLine;
      50: areturn
      51: aload_0
      52: invokevirtual #31                 // Method terminate:()Ljava/lang/Object;
      55: checkcast     #19                 // class au/id/ajlane/iostreams/FileLine
      58: areturn
    Exception table:
       from    to  target type
           0     8    11   Class java/io/IOException

  public int getLineCount();
    Code:
       0: aload_0
       1: getfield      #21                 // Field lastLine:Lau/id/ajlane/iostreams/FileLine;
       4: getfield      #29                 // Field au/id/ajlane/iostreams/FileLine.number:I
       7: iconst_1
       8: iadd
       9: ireturn

  public java.lang.String getPath();
    Code:
       0: aload_0
       1: getfield      #17                 // Field path:Ljava/lang/String;
       4: areturn

  protected void open() throws au.id.ajlane.iostreams.IOStreamReadException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #18                 // Field supplier:Ljava/util/concurrent/Callable;
       5: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      10: checkcast     #33                 // class java/io/BufferedReader
      13: putfield      #16                 // Field reader:Ljava/io/BufferedReader;
      16: goto          66
      19: astore_1
      20: aload_1
      21: athrow
      22: astore_1
      23: new           #27                 // class au/id/ajlane/iostreams/IOStreamReadException
      26: dup
      27: new           #23                 // class java/io/IOException
      30: dup
      31: new           #36                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #38                 // String Could not open
      40: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #17                 // Field path:Ljava/lang/String;
      47: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: bipush        46
      52: invokevirtual #40                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      55: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: aload_1
      59: invokespecial #42                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      62: invokespecial #28                 // Method au/id/ajlane/iostreams/IOStreamReadException."<init>":(Ljava/lang/Exception;)V
      65: athrow
      66: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/RuntimeException
           0    16    22   Class java/lang/Exception

  public java.lang.String toString();
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #17                 // Field path:Ljava/lang/String;
      11: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #43                 // String :
      16: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokevirtual #44                 // Method getLineCount:()I
      23: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #16                 // Field reader:Ljava/io/BufferedReader;
      30: ifnull        38
      33: ldc           #46                 // String +
      35: goto          40
      38: ldc           #47                 // String
      40: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #48                 // String lines
      45: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  protected java.lang.Object find() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method find:()Lau/id/ajlane/iostreams/FileLine;
       4: areturn

  private static java.io.BufferedReader lambda$fromByteStream$10(java.util.concurrent.Callable) throws java.lang.Exception;
    Code:
       0: new           #33                 // class java/io/BufferedReader
       3: dup
       4: new           #50                 // class java/io/InputStreamReader
       7: dup
       8: aload_0
       9: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      14: checkcast     #51                 // class java/io/InputStream
      17: invokestatic  #4                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
      20: invokespecial #52                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      23: invokespecial #53                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      26: areturn

  private static java.io.BufferedReader lambda$fromByteStream$9(java.util.concurrent.Callable, java.nio.charset.Charset) throws java.lang.Exception;
    Code:
       0: new           #33                 // class java/io/BufferedReader
       3: dup
       4: new           #50                 // class java/io/InputStreamReader
       7: dup
       8: aload_0
       9: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      14: checkcast     #51                 // class java/io/InputStream
      17: aload_1
      18: invokespecial #52                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      21: invokespecial #53                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      24: areturn

  private static java.io.BufferedReader lambda$fromFile$8(java.nio.file.Path, java.nio.charset.Charset) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #54                 // Method java/nio/file/Files.newBufferedReader:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Ljava/io/BufferedReader;
       5: areturn

  private static java.io.InputStream lambda$fromClasspath$7(java.lang.Class, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
       5: areturn

  private static java.io.InputStream lambda$fromClasspath$6(java.lang.String) throws java.lang.Exception;
    Code:
       0: invokestatic  #56                 // Method java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;
       3: aload_0
       4: invokevirtual #57                 // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
       7: areturn

  private static java.io.InputStream lambda$fromClasspath$5(java.lang.String) throws java.lang.Exception;
    Code:
       0: invokestatic  #56                 // Method java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;
       3: aload_0
       4: invokevirtual #57                 // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
       7: areturn
}
