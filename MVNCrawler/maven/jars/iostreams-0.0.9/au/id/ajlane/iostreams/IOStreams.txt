Compiled from "IOStreams.java"
public final class au.id.ajlane.iostreams.IOStreams {
  private static final au.id.ajlane.iostreams.EmptyIOStream EMPTY;

  public static <T, R> au.id.ajlane.iostreams.IOStream<R> cast(au.id.ajlane.iostreams.IOStream<T>);
    Code:
       0: aload_0
       1: new           #1                  // class au/id/ajlane/iostreams/IOStreams$1
       4: dup
       5: invokespecial #2                  // Method au/id/ajlane/iostreams/IOStreams$1."<init>":()V
       8: invokestatic  #3                  // Method map:(Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStreamTransform;)Lau/id/ajlane/iostreams/IOStream;
      11: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> concat(java.util.Iterator<? extends au.id.ajlane.iostreams.IOStream<? extends T>>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method fromIterator:(Ljava/util/Iterator;)Lau/id/ajlane/iostreams/IOStream;
       4: invokestatic  #5                  // Method concat:(Lau/id/ajlane/iostreams/IOStream;)Lau/id/ajlane/iostreams/IOStream;
       7: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> concat(au.id.ajlane.iostreams.IOStream<? extends au.id.ajlane.iostreams.IOStream<? extends T>>);
    Code:
       0: aload_0
       1: ldc           #6                  // String The stream of streams cannot be null.
       3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #8                  // class au/id/ajlane/iostreams/IOStreams$2
      10: dup
      11: aload_0
      12: invokespecial #9                  // Method au/id/ajlane/iostreams/IOStreams$2."<init>":(Lau/id/ajlane/iostreams/IOStream;)V
      15: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> concat(au.id.ajlane.iostreams.IOStream<? extends T>...);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #11                 // class au/id/ajlane/iostreams/IOStreams$3
       8: dup
       9: aload_0
      10: invokespecial #12                 // Method au/id/ajlane/iostreams/IOStreams$3."<init>":([Lau/id/ajlane/iostreams/IOStream;)V
      13: areturn

  public static <T> void consume(au.id.ajlane.iostreams.IOStream<T>) throws au.id.ajlane.iostreams.IOStreamReadException, au.id.ajlane.iostreams.IOStreamCloseException;
    Code:
       0: aload_0
       1: astore_1
       2: aconst_null
       3: astore_2
       4: aload_0
       5: invokeinterface #13,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.hasNext:()Z
      10: ifeq          23
      13: aload_0
      14: invokeinterface #14,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.next:()Ljava/lang/Object;
      19: pop
      20: goto          4
      23: aload_1
      24: ifnull        102
      27: aload_2
      28: ifnull        49
      31: aload_1
      32: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
      37: goto          102
      40: astore_3
      41: aload_2
      42: aload_3
      43: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      46: goto          102
      49: aload_1
      50: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
      55: goto          102
      58: astore_3
      59: aload_3
      60: astore_2
      61: aload_3
      62: athrow
      63: astore        4
      65: aload_1
      66: ifnull        99
      69: aload_2
      70: ifnull        93
      73: aload_1
      74: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
      79: goto          99
      82: astore        5
      84: aload_2
      85: aload         5
      87: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      90: goto          99
      93: aload_1
      94: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
      99: aload         4
     101: athrow
     102: return
    Exception table:
       from    to  target type
          31    37    40   Class java/lang/Throwable
           4    23    58   Class java/lang/Throwable
           4    23    63   any
          73    79    82   Class java/lang/Throwable
          58    65    63   any

  public static <T> void consume(au.id.ajlane.iostreams.IOStream<T>, au.id.ajlane.iostreams.IOStreamConsumer<? super T>) throws au.id.ajlane.iostreams.IOStreamReadException, au.id.ajlane.iostreams.IOStreamCloseException;
    Code:
       0: aload_0
       1: astore_2
       2: aconst_null
       3: astore_3
       4: aload_1
       5: astore        4
       7: aconst_null
       8: astore        5
      10: aload_0
      11: invokeinterface #13,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.hasNext:()Z
      16: ifeq          51
      19: aload_1
      20: aload_0
      21: invokeinterface #14,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.next:()Ljava/lang/Object;
      26: invokeinterface #18,  2           // InterfaceMethod au/id/ajlane/iostreams/IOStreamConsumer.accept:(Ljava/lang/Object;)V
      31: goto          10
      34: astore        6
      36: aload         6
      38: athrow
      39: astore        6
      41: new           #21                 // class au/id/ajlane/iostreams/IOStreamReadException
      44: dup
      45: aload         6
      47: invokespecial #22                 // Method au/id/ajlane/iostreams/IOStreamReadException."<init>":(Ljava/lang/Exception;)V
      50: athrow
      51: aload         4
      53: ifnull        146
      56: aload         5
      58: ifnull        83
      61: aload         4
      63: invokeinterface #23,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStreamConsumer.close:()V
      68: goto          146
      71: astore        6
      73: aload         5
      75: aload         6
      77: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      80: goto          146
      83: aload         4
      85: invokeinterface #23,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStreamConsumer.close:()V
      90: goto          146
      93: astore        6
      95: aload         6
      97: astore        5
      99: aload         6
     101: athrow
     102: astore        7
     104: aload         4
     106: ifnull        143
     109: aload         5
     111: ifnull        136
     114: aload         4
     116: invokeinterface #23,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStreamConsumer.close:()V
     121: goto          143
     124: astore        8
     126: aload         5
     128: aload         8
     130: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     133: goto          143
     136: aload         4
     138: invokeinterface #23,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStreamConsumer.close:()V
     143: aload         7
     145: athrow
     146: aload_2
     147: ifnull        230
     150: aload_3
     151: ifnull        174
     154: aload_2
     155: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
     160: goto          230
     163: astore        4
     165: aload_3
     166: aload         4
     168: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     171: goto          230
     174: aload_2
     175: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
     180: goto          230
     183: astore        4
     185: aload         4
     187: astore_3
     188: aload         4
     190: athrow
     191: astore        9
     193: aload_2
     194: ifnull        227
     197: aload_3
     198: ifnull        221
     201: aload_2
     202: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
     207: goto          227
     210: astore        10
     212: aload_3
     213: aload         10
     215: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     218: goto          227
     221: aload_2
     222: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
     227: aload         9
     229: athrow
     230: goto          246
     233: astore_2
     234: aload_2
     235: athrow
     236: astore_2
     237: new           #24                 // class au/id/ajlane/iostreams/IOStreamCloseException
     240: dup
     241: aload_2
     242: invokespecial #25                 // Method au/id/ajlane/iostreams/IOStreamCloseException."<init>":(Ljava/lang/Exception;)V
     245: athrow
     246: return
    Exception table:
       from    to  target type
          19    31    34   Class java/lang/RuntimeException
          19    31    39   Class java/lang/Exception
          61    68    71   Class java/lang/Throwable
          10    51    93   Class java/lang/Throwable
          10    51   102   any
         114   121   124   Class java/lang/Throwable
          93   104   102   any
         154   160   163   Class java/lang/Throwable
           4   146   183   Class java/lang/Throwable
           4   146   191   any
         201   207   210   Class java/lang/Throwable
         183   193   191   any
           0   230   233   Class java/lang/RuntimeException
           0   230   236   Class java/lang/Exception

  public static <T> long count(au.id.ajlane.iostreams.IOStream<T>) throws au.id.ajlane.iostreams.IOStreamReadException, au.id.ajlane.iostreams.IOStreamCloseException;
    Code:
       0: aload_0
       1: astore_1
       2: aconst_null
       3: astore_2
       4: lconst_0
       5: lstore_3
       6: aload_0
       7: invokeinterface #13,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.hasNext:()Z
      12: ifeq          37
      15: aload_0
      16: invokeinterface #14,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.next:()Ljava/lang/Object;
      21: pop
      22: lload_3
      23: ldc2_w        #27                 // long 9223372036854775807l
      26: lcmp
      27: ifge          6
      30: lload_3
      31: lconst_1
      32: ladd
      33: lstore_3
      34: goto          6
      37: lload_3
      38: lstore        5
      40: aload_1
      41: ifnull        74
      44: aload_2
      45: ifnull        68
      48: aload_1
      49: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
      54: goto          74
      57: astore        7
      59: aload_2
      60: aload         7
      62: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      65: goto          74
      68: aload_1
      69: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
      74: lload         5
      76: lreturn
      77: astore_3
      78: aload_3
      79: astore_2
      80: aload_3
      81: athrow
      82: astore        8
      84: aload_1
      85: ifnull        118
      88: aload_2
      89: ifnull        112
      92: aload_1
      93: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
      98: goto          118
     101: astore        9
     103: aload_2
     104: aload         9
     106: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     109: goto          118
     112: aload_1
     113: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
     118: aload         8
     120: athrow
    Exception table:
       from    to  target type
          48    54    57   Class java/lang/Throwable
           4    40    77   Class java/lang/Throwable
           4    40    82   any
          92    98   101   Class java/lang/Throwable
          77    84    82   any

  public static <T> au.id.ajlane.iostreams.IOStream<T> empty();
    Code:
       0: getstatic     #29                 // Field EMPTY:Lau/id/ajlane/iostreams/EmptyIOStream;
       3: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> empty(java.lang.AutoCloseable);
    Code:
       0: aload_0
       1: invokestatic  #30                 // Method au/id/ajlane/iostreams/EmptyIOStream.withResource:(Ljava/lang/AutoCloseable;)Lau/id/ajlane/iostreams/EmptyIOStream;
       4: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> filter(au.id.ajlane.iostreams.IOStream<? extends T>, au.id.ajlane.iostreams.IOStreamFilter<? super T>);
    Code:
       0: aload_0
       1: ldc           #31                 // String The stream cannot be null.
       3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #32                 // String The filter cannot be null.
      10: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: new           #33                 // class au/id/ajlane/iostreams/IOStreams$4
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #34                 // Method au/id/ajlane/iostreams/IOStreams$4."<init>":(Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStreamFilter;)V
      23: areturn

  public static <T, R> au.id.ajlane.iostreams.IOStream<R> flatMap(au.id.ajlane.iostreams.IOStream<? extends T>, au.id.ajlane.iostreams.IOStreamTransform<? super T, ? extends au.id.ajlane.iostreams.IOStream<? extends R>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method map:(Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStreamTransform;)Lau/id/ajlane/iostreams/IOStream;
       5: invokestatic  #5                  // Method concat:(Lau/id/ajlane/iostreams/IOStream;)Lau/id/ajlane/iostreams/IOStream;
       8: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> flattenArrays(au.id.ajlane.iostreams.IOStream<? extends T[]>);
    Code:
       0: aload_0
       1: invokedynamic #35,  0             // InvokeDynamic #0:apply:()Lau/id/ajlane/iostreams/IOStreamTransform;
       6: invokestatic  #36                 // Method flatMap:(Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStreamTransform;)Lau/id/ajlane/iostreams/IOStream;
       9: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> flattenIterables(au.id.ajlane.iostreams.IOStream<? extends java.lang.Iterable<? extends T>>);
    Code:
       0: aload_0
       1: invokedynamic #37,  0             // InvokeDynamic #1:apply:()Lau/id/ajlane/iostreams/IOStreamTransform;
       6: invokestatic  #36                 // Method flatMap:(Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStreamTransform;)Lau/id/ajlane/iostreams/IOStream;
       9: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> flattenIterators(au.id.ajlane.iostreams.IOStream<? extends java.util.Iterator<? extends T>>);
    Code:
       0: aload_0
       1: invokedynamic #38,  0             // InvokeDynamic #2:apply:()Lau/id/ajlane/iostreams/IOStreamTransform;
       6: invokestatic  #36                 // Method flatMap:(Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStreamTransform;)Lau/id/ajlane/iostreams/IOStream;
       9: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> flattenStreams(au.id.ajlane.iostreams.IOStream<? extends java.util.stream.Stream<? extends T>>);
    Code:
       0: aload_0
       1: invokedynamic #39,  0             // InvokeDynamic #3:apply:()Lau/id/ajlane/iostreams/IOStreamTransform;
       6: invokestatic  #36                 // Method flatMap:(Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStreamTransform;)Lau/id/ajlane/iostreams/IOStream;
       9: areturn

  public static <T, R> R fold(au.id.ajlane.iostreams.IOStream<T>, R, au.id.ajlane.iostreams.IOStreamAccumulator<R, ? super T>) throws au.id.ajlane.iostreams.IOStreamReadException, au.id.ajlane.iostreams.IOStreamCloseException;
    Code:
       0: aload_0
       1: ldc           #40                 // String The stream must not be null.
       3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #41                 // String The accumulator must not be null.
      10: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: astore_3
      16: aconst_null
      17: astore        4
      19: aload_2
      20: astore        5
      22: aconst_null
      23: astore        6
      25: aload_1
      26: astore        7
      28: aload_0
      29: invokeinterface #13,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.hasNext:()Z
      34: ifeq          56
      37: aload_2
      38: aload         7
      40: aload_0
      41: invokeinterface #14,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.next:()Ljava/lang/Object;
      46: invokeinterface #42,  3           // InterfaceMethod au/id/ajlane/iostreams/IOStreamAccumulator.add:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: astore        7
      53: goto          28
      56: aload         7
      58: astore        8
      60: aload         5
      62: ifnull        99
      65: aload         6
      67: ifnull        92
      70: aload         5
      72: invokeinterface #43,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStreamAccumulator.close:()V
      77: goto          99
      80: astore        9
      82: aload         6
      84: aload         9
      86: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      89: goto          99
      92: aload         5
      94: invokeinterface #43,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStreamAccumulator.close:()V
      99: aload_3
     100: ifnull        135
     103: aload         4
     105: ifnull        129
     108: aload_3
     109: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
     114: goto          135
     117: astore        9
     119: aload         4
     121: aload         9
     123: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     126: goto          135
     129: aload_3
     130: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
     135: aload         8
     137: areturn
     138: astore        7
     140: aload         7
     142: astore        6
     144: aload         7
     146: athrow
     147: astore        10
     149: aload         5
     151: ifnull        188
     154: aload         6
     156: ifnull        181
     159: aload         5
     161: invokeinterface #43,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStreamAccumulator.close:()V
     166: goto          188
     169: astore        11
     171: aload         6
     173: aload         11
     175: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     178: goto          188
     181: aload         5
     183: invokeinterface #43,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStreamAccumulator.close:()V
     188: aload         10
     190: athrow
     191: astore        5
     193: aload         5
     195: astore        4
     197: aload         5
     199: athrow
     200: astore        12
     202: aload_3
     203: ifnull        238
     206: aload         4
     208: ifnull        232
     211: aload_3
     212: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
     217: goto          238
     220: astore        13
     222: aload         4
     224: aload         13
     226: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     229: goto          238
     232: aload_3
     233: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
     238: aload         12
     240: athrow
     241: astore_3
     242: aload_3
     243: athrow
     244: astore_3
     245: new           #21                 // class au/id/ajlane/iostreams/IOStreamReadException
     248: dup
     249: aload_3
     250: invokespecial #22                 // Method au/id/ajlane/iostreams/IOStreamReadException."<init>":(Ljava/lang/Exception;)V
     253: athrow
    Exception table:
       from    to  target type
          70    77    80   Class java/lang/Throwable
         108   114   117   Class java/lang/Throwable
          25    60   138   Class java/lang/Throwable
          25    60   147   any
         159   166   169   Class java/lang/Throwable
         138   149   147   any
          19    99   191   Class java/lang/Throwable
         138   191   191   Class java/lang/Throwable
          19    99   200   any
         211   217   220   Class java/lang/Throwable
         138   202   200   any
          14   135   241   Class java/lang/RuntimeException
         138   241   241   Class java/lang/RuntimeException
          14   135   244   Class java/lang/Exception
         138   241   244   Class java/lang/Exception

  public static <T> au.id.ajlane.iostreams.IOStream<T> fromArray(T...);
    Code:
       0: aload_0
       1: ldc           #44                 // String The array cannot be null. Use an empty array instead.
       3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #45                 // class au/id/ajlane/iostreams/IOStreams$5
      10: dup
      11: aload_0
      12: invokespecial #46                 // Method au/id/ajlane/iostreams/IOStreams$5."<init>":([Ljava/lang/Object;)V
      15: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> fromIterable(java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: ldc           #47                 // String The iterable cannot be null.
       3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokeinterface #48,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      13: invokestatic  #4                  // Method fromIterator:(Ljava/util/Iterator;)Lau/id/ajlane/iostreams/IOStream;
      16: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> fromIterator(java.util.Iterator<? extends T>);
    Code:
       0: aload_0
       1: ldc           #49                 // String The iterator cannot be null.
       3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #50                 // class au/id/ajlane/iostreams/IOStreams$6
      10: dup
      11: aload_0
      12: invokespecial #51                 // Method au/id/ajlane/iostreams/IOStreams$6."<init>":(Ljava/util/Iterator;)V
      15: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> fromStream(java.util.stream.Stream<? extends T>);
    Code:
       0: aload_0
       1: ldc           #31                 // String The stream cannot be null.
       3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #52                 // class au/id/ajlane/iostreams/IOStreams$7
      10: dup
      11: aload_0
      12: invokespecial #53                 // Method au/id/ajlane/iostreams/IOStreams$7."<init>":(Ljava/util/stream/Stream;)V
      15: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<au.id.ajlane.iostreams.IOStream<T>> group(au.id.ajlane.iostreams.IOStream<T>, int);
    Code:
       0: aload_0
       1: ldc           #31                 // String The stream cannot be null.
       3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: iload_1
       8: ifgt          21
      11: new           #54                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #55                 // String The size must be positive and non-zero.
      17: invokespecial #56                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: new           #57                 // class au/id/ajlane/iostreams/IOStreams$8
      24: dup
      25: aload_0
      26: iload_1
      27: invokespecial #58                 // Method au/id/ajlane/iostreams/IOStreams$8."<init>":(Lau/id/ajlane/iostreams/IOStream;I)V
      30: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<au.id.ajlane.iostreams.IOStream<T>> group(au.id.ajlane.iostreams.IOStream<T>, au.id.ajlane.iostreams.IOStreamBiPredicate<? super T, ? super T>);
    Code:
       0: aload_0
       1: ldc           #31                 // String The stream cannot be null.
       3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #59                 // String The predicate cannot be null.
      10: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: new           #60                 // class au/id/ajlane/iostreams/IOStreams$9
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #61                 // Method au/id/ajlane/iostreams/IOStreams$9."<init>":(Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStreamBiPredicate;)V
      23: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> keep(au.id.ajlane.iostreams.IOStream<? extends T>, au.id.ajlane.iostreams.IOStreamPredicate<? super T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #62                 // Method au/id/ajlane/iostreams/IOStreamFilters.fromPredicate:(Lau/id/ajlane/iostreams/IOStreamPredicate;)Lau/id/ajlane/iostreams/IOStreamFilter;
       5: invokestatic  #63                 // Method filter:(Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStreamFilter;)Lau/id/ajlane/iostreams/IOStream;
       8: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> limit(au.id.ajlane.iostreams.IOStream<T>, long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifgt          11
       6: aload_0
       7: invokestatic  #64                 // Method truncate:(Lau/id/ajlane/iostreams/IOStream;)Lau/id/ajlane/iostreams/IOStream;
      10: areturn
      11: aload_0
      12: lload_1
      13: invokestatic  #65                 // Method au/id/ajlane/iostreams/IOStreamFilters.limit:(J)Lau/id/ajlane/iostreams/IOStreamFilter;
      16: invokeinterface #66,  2           // InterfaceMethod au/id/ajlane/iostreams/IOStream.filter:(Lau/id/ajlane/iostreams/IOStreamFilter;)Lau/id/ajlane/iostreams/IOStream;
      21: areturn

  public static <T, R> au.id.ajlane.iostreams.IOStream<R> map(au.id.ajlane.iostreams.IOStream<? extends T>, au.id.ajlane.iostreams.IOStreamTransform<? super T, ? extends R>);
    Code:
       0: aload_0
       1: ldc           #31                 // String The stream cannot be null.
       3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #67                 // String The transform cannot be null.
      10: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: new           #68                 // class au/id/ajlane/iostreams/IOStreams$10
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #69                 // Method au/id/ajlane/iostreams/IOStreams$10."<init>":(Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStreamTransform;)V
      23: areturn

  public static <T, R> au.id.ajlane.iostreams.IOStream<R> map(au.id.ajlane.iostreams.IOStream<? extends T>, au.id.ajlane.iostreams.IOStreamTransform<? super T, ? extends R>, au.id.ajlane.iostreams.IOStreamTransformExceptionHandler<? super T>);
    Code:
       0: aload_0
       1: ldc           #31                 // String The stream cannot be null.
       3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #67                 // String The transform cannot be null.
      10: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_2
      15: ldc           #70                 // String The exception handler cannot be null.
      17: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: new           #71                 // class au/id/ajlane/iostreams/IOStreams$11
      24: dup
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokespecial #72                 // Method au/id/ajlane/iostreams/IOStreams$11."<init>":(Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStreamTransform;Lau/id/ajlane/iostreams/IOStreamTransformExceptionHandler;)V
      31: areturn

  public static <T> java.util.Optional<T> max(au.id.ajlane.iostreams.IOStream<T>, java.util.Comparator<T>) throws au.id.ajlane.iostreams.IOStreamReadException, au.id.ajlane.iostreams.IOStreamCloseException;
    Code:
       0: invokestatic  #73                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       3: astore_2
       4: aload_0
       5: astore_3
       6: aconst_null
       7: astore        4
       9: aload_0
      10: invokeinterface #13,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.hasNext:()Z
      15: ifeq          57
      18: aload_0
      19: invokeinterface #14,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.next:()Ljava/lang/Object;
      24: astore        5
      26: aload_2
      27: invokevirtual #74                 // Method java/util/Optional.isPresent:()Z
      30: ifeq          48
      33: aload_1
      34: aload         5
      36: aload_2
      37: invokevirtual #75                 // Method java/util/Optional.get:()Ljava/lang/Object;
      40: invokeinterface #76,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      45: ifle          54
      48: aload         5
      50: invokestatic  #77                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      53: astore_2
      54: goto          9
      57: aload_3
      58: ifnull        146
      61: aload         4
      63: ifnull        87
      66: aload_3
      67: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
      72: goto          146
      75: astore        5
      77: aload         4
      79: aload         5
      81: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      84: goto          146
      87: aload_3
      88: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
      93: goto          146
      96: astore        5
      98: aload         5
     100: astore        4
     102: aload         5
     104: athrow
     105: astore        6
     107: aload_3
     108: ifnull        143
     111: aload         4
     113: ifnull        137
     116: aload_3
     117: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
     122: goto          143
     125: astore        7
     127: aload         4
     129: aload         7
     131: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     134: goto          143
     137: aload_3
     138: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
     143: aload         6
     145: athrow
     146: aload_2
     147: areturn
    Exception table:
       from    to  target type
          66    72    75   Class java/lang/Throwable
           9    57    96   Class java/lang/Throwable
           9    57   105   any
         116   122   125   Class java/lang/Throwable
          96   107   105   any

  public static <T> java.util.Optional<T> min(au.id.ajlane.iostreams.IOStream<T>, java.util.Comparator<T>) throws au.id.ajlane.iostreams.IOStreamReadException, au.id.ajlane.iostreams.IOStreamCloseException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #78,  1           // InterfaceMethod java/util/Comparator.reversed:()Ljava/util/Comparator;
       7: invokestatic  #79                 // Method max:(Lau/id/ajlane/iostreams/IOStream;Ljava/util/Comparator;)Ljava/util/Optional;
      10: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> observe(au.id.ajlane.iostreams.IOStream<T>, au.id.ajlane.iostreams.IOStreamConsumer<? super T>);
    Code:
       0: aload_0
       1: ldc           #31                 // String The stream cannot be null.
       3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #80                 // String The observer cannot be null.
      10: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: new           #81                 // class au/id/ajlane/iostreams/IOStreams$12
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #82                 // Method au/id/ajlane/iostreams/IOStreams$12."<init>":(Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStreamConsumer;)V
      23: areturn

  public static <T> au.id.ajlane.iostreams.PeekableIOStream<T> peekable(au.id.ajlane.iostreams.IOStream<T>);
    Code:
       0: aload_0
       1: ldc           #31                 // String The stream cannot be null.
       3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: instanceof    #83                 // class au/id/ajlane/iostreams/PeekableIOStream
      11: ifeq          19
      14: aload_0
      15: checkcast     #83                 // class au/id/ajlane/iostreams/PeekableIOStream
      18: areturn
      19: new           #84                 // class au/id/ajlane/iostreams/IOStreams$13
      22: dup
      23: aload_0
      24: invokespecial #85                 // Method au/id/ajlane/iostreams/IOStreams$13."<init>":(Lau/id/ajlane/iostreams/IOStream;)V
      27: areturn

  public static <R, T> R reduce(au.id.ajlane.iostreams.IOStream<T>, au.id.ajlane.iostreams.IOStreamTransform<? super au.id.ajlane.iostreams.IOStream<T>, R>) throws au.id.ajlane.iostreams.IOStreamReadException, au.id.ajlane.iostreams.IOStreamCloseException;
    Code:
       0: aload_0
       1: astore_2
       2: aconst_null
       3: astore_3
       4: aload_1
       5: astore        4
       7: aconst_null
       8: astore        5
      10: aload_1
      11: aload_0
      12: invokeinterface #86,  2           // InterfaceMethod au/id/ajlane/iostreams/IOStreamTransform.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      17: astore        6
      19: aload         4
      21: ifnull        58
      24: aload         5
      26: ifnull        51
      29: aload         4
      31: invokeinterface #87,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStreamTransform.close:()V
      36: goto          58
      39: astore        7
      41: aload         5
      43: aload         7
      45: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      48: goto          58
      51: aload         4
      53: invokeinterface #87,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStreamTransform.close:()V
      58: aload_2
      59: ifnull        92
      62: aload_3
      63: ifnull        86
      66: aload_2
      67: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
      72: goto          92
      75: astore        7
      77: aload_3
      78: aload         7
      80: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      83: goto          92
      86: aload_2
      87: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
      92: aload         6
      94: areturn
      95: astore        6
      97: aload         6
      99: athrow
     100: astore        6
     102: new           #21                 // class au/id/ajlane/iostreams/IOStreamReadException
     105: dup
     106: aload         6
     108: invokespecial #22                 // Method au/id/ajlane/iostreams/IOStreamReadException."<init>":(Ljava/lang/Exception;)V
     111: athrow
     112: astore        6
     114: aload         6
     116: astore        5
     118: aload         6
     120: athrow
     121: astore        8
     123: aload         4
     125: ifnull        162
     128: aload         5
     130: ifnull        155
     133: aload         4
     135: invokeinterface #87,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStreamTransform.close:()V
     140: goto          162
     143: astore        9
     145: aload         5
     147: aload         9
     149: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     152: goto          162
     155: aload         4
     157: invokeinterface #87,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStreamTransform.close:()V
     162: aload         8
     164: athrow
     165: astore        4
     167: aload         4
     169: astore_3
     170: aload         4
     172: athrow
     173: astore        10
     175: aload_2
     176: ifnull        209
     179: aload_3
     180: ifnull        203
     183: aload_2
     184: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
     189: goto          209
     192: astore        11
     194: aload_3
     195: aload         11
     197: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     200: goto          209
     203: aload_2
     204: invokeinterface #15,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStream.close:()V
     209: aload         10
     211: athrow
     212: astore_2
     213: aload_2
     214: athrow
     215: astore_2
     216: new           #24                 // class au/id/ajlane/iostreams/IOStreamCloseException
     219: dup
     220: aload_2
     221: invokespecial #25                 // Method au/id/ajlane/iostreams/IOStreamCloseException."<init>":(Ljava/lang/Exception;)V
     224: athrow
    Exception table:
       from    to  target type
          29    36    39   Class java/lang/Throwable
          66    72    75   Class java/lang/Throwable
          10    19    95   Class java/lang/RuntimeException
          10    19   100   Class java/lang/Exception
          10    19   112   Class java/lang/Throwable
          95   112   112   Class java/lang/Throwable
          10    19   121   any
         133   140   143   Class java/lang/Throwable
          95   123   121   any
           4    58   165   Class java/lang/Throwable
          95   165   165   Class java/lang/Throwable
           4    58   173   any
         183   189   192   Class java/lang/Throwable
          95   175   173   any
           0    92   212   Class java/lang/RuntimeException
          95   212   212   Class java/lang/RuntimeException
           0    92   215   Class java/lang/Exception
          95   212   215   Class java/lang/Exception

  public static <T> au.id.ajlane.iostreams.IOStream<T> repeat(au.id.ajlane.iostreams.IOStreamSupplier<? extends T>);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #88                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #89                 // String The supplier must be non-null.
      10: invokespecial #90                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #91                 // class au/id/ajlane/iostreams/IOStreams$14
      17: dup
      18: aload_0
      19: invokespecial #92                 // Method au/id/ajlane/iostreams/IOStreams$14."<init>":(Lau/id/ajlane/iostreams/IOStreamSupplier;)V
      22: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> singleton(T);
    Code:
       0: new           #93                 // class au/id/ajlane/iostreams/IOStreams$15
       3: dup
       4: aload_0
       5: invokespecial #94                 // Method au/id/ajlane/iostreams/IOStreams$15."<init>":(Ljava/lang/Object;)V
       8: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> skip(au.id.ajlane.iostreams.IOStream<? extends T>, au.id.ajlane.iostreams.IOStreamPredicate<? super T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #62                 // Method au/id/ajlane/iostreams/IOStreamFilters.fromPredicate:(Lau/id/ajlane/iostreams/IOStreamPredicate;)Lau/id/ajlane/iostreams/IOStreamFilter;
       5: invokeinterface #95,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStreamFilter.invert:()Lau/id/ajlane/iostreams/IOStreamFilter;
      10: invokestatic  #63                 // Method filter:(Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStreamFilter;)Lau/id/ajlane/iostreams/IOStream;
      13: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<? extends au.id.ajlane.iostreams.IOStream<T>> split(au.id.ajlane.iostreams.IOStream<T>, au.id.ajlane.iostreams.IOStreamBiPredicate<? super T, ? super T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #96,  1           // InterfaceMethod au/id/ajlane/iostreams/IOStreamBiPredicate.invert:()Lau/id/ajlane/iostreams/IOStreamBiPredicate;
       7: invokeinterface #97,  2           // InterfaceMethod au/id/ajlane/iostreams/IOStream.group:(Lau/id/ajlane/iostreams/IOStreamBiPredicate;)Lau/id/ajlane/iostreams/IOStream;
      12: areturn

  public static <T> T[] toArray(au.id.ajlane.iostreams.IOStream<T>, java.util.function.IntFunction<T[]>) throws au.id.ajlane.iostreams.IOStreamReadException, au.id.ajlane.iostreams.IOStreamCloseException;
    Code:
       0: aload_0
       1: ldc           #31                 // String The stream cannot be null.
       3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #98                 // class java/util/ArrayList
      10: dup
      11: invokespecial #99                 // Method java/util/ArrayList."<init>":()V
      14: astore_2
      15: aload_0
      16: aload_2
      17: dup
      18: invokevirtual #100                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: pop
      22: invokedynamic #101,  0            // InvokeDynamic #4:accept:(Ljava/util/List;)Lau/id/ajlane/iostreams/IOStreamConsumer;
      27: invokeinterface #102,  2          // InterfaceMethod au/id/ajlane/iostreams/IOStream.consume:(Lau/id/ajlane/iostreams/IOStreamConsumer;)V
      32: aload_2
      33: aload_1
      34: aload_2
      35: invokeinterface #103,  1          // InterfaceMethod java/util/List.size:()I
      40: invokeinterface #104,  2          // InterfaceMethod java/util/function/IntFunction.apply:(I)Ljava/lang/Object;
      45: checkcast     #105                // class "[Ljava/lang/Object;"
      48: invokeinterface #106,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      53: areturn

  public static <T> java.util.List<T> toList(au.id.ajlane.iostreams.IOStream<T>) throws au.id.ajlane.iostreams.IOStreamReadException, au.id.ajlane.iostreams.IOStreamCloseException;
    Code:
       0: ldc           #31                 // String The stream cannot be null.
       2: invokestatic  #10                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: pop
       6: new           #98                 // class java/util/ArrayList
       9: dup
      10: invokespecial #99                 // Method java/util/ArrayList."<init>":()V
      13: astore_1
      14: aload_0
      15: aload_1
      16: dup
      17: invokevirtual #100                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: pop
      21: invokedynamic #101,  0            // InvokeDynamic #4:accept:(Ljava/util/List;)Lau/id/ajlane/iostreams/IOStreamConsumer;
      26: invokeinterface #102,  2          // InterfaceMethod au/id/ajlane/iostreams/IOStream.consume:(Lau/id/ajlane/iostreams/IOStreamConsumer;)V
      31: aload_1
      32: areturn

  public static <T> java.util.Set<T> toSet(au.id.ajlane.iostreams.IOStream<T>) throws au.id.ajlane.iostreams.IOStreamReadException, au.id.ajlane.iostreams.IOStreamCloseException;
    Code:
       0: ldc           #31                 // String The stream cannot be null.
       2: invokestatic  #10                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: pop
       6: new           #107                // class java/util/HashSet
       9: dup
      10: invokespecial #108                // Method java/util/HashSet."<init>":()V
      13: astore_1
      14: aload_0
      15: aload_1
      16: dup
      17: invokevirtual #100                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: pop
      21: invokedynamic #109,  0            // InvokeDynamic #5:accept:(Ljava/util/Set;)Lau/id/ajlane/iostreams/IOStreamConsumer;
      26: invokeinterface #102,  2          // InterfaceMethod au/id/ajlane/iostreams/IOStream.consume:(Lau/id/ajlane/iostreams/IOStreamConsumer;)V
      31: aload_1
      32: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> truncate(au.id.ajlane.iostreams.IOStream<T>);
    Code:
       0: aload_0
       1: invokestatic  #110                // Method empty:(Ljava/lang/AutoCloseable;)Lau/id/ajlane/iostreams/IOStream;
       4: areturn

  public static <T> au.id.ajlane.iostreams.IOStream<T> until(au.id.ajlane.iostreams.IOStream<T>, au.id.ajlane.iostreams.IOStreamPredicate<? super T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #111                // Method au/id/ajlane/iostreams/IOStreamFilters.keepUntil:(Lau/id/ajlane/iostreams/IOStreamPredicate;)Lau/id/ajlane/iostreams/IOStreamFilter;
       5: invokeinterface #66,  2           // InterfaceMethod au/id/ajlane/iostreams/IOStream.filter:(Lau/id/ajlane/iostreams/IOStreamFilter;)Lau/id/ajlane/iostreams/IOStream;
      10: areturn

  public static <A, B, Z> au.id.ajlane.iostreams.IOStream<Z> zip(au.id.ajlane.iostreams.IOStream<A>, au.id.ajlane.iostreams.IOStream<B>, au.id.ajlane.iostreams.IOStreamZipFunction<? super A, ? super B, ? extends Z>);
    Code:
       0: new           #112                // class au/id/ajlane/iostreams/IOStreams$16
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #113                // Method au/id/ajlane/iostreams/IOStreams$16."<init>":(Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStreamZipFunction;)V
      10: areturn

  public static <A, B, Z> au.id.ajlane.iostreams.IOStream<Z> zipAll(au.id.ajlane.iostreams.IOStream<A>, au.id.ajlane.iostreams.IOStream<B>, au.id.ajlane.iostreams.IOStreamZipFunction<? super A, ? super B, ? extends Z>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #114,  0            // InvokeDynamic #6:get:()Lau/id/ajlane/iostreams/IOStreamSupplier;
       8: invokedynamic #115,  0            // InvokeDynamic #7:get:()Lau/id/ajlane/iostreams/IOStreamSupplier;
      13: invokestatic  #116                // Method zipAll:(Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStreamZipFunction;Lau/id/ajlane/iostreams/IOStreamSupplier;Lau/id/ajlane/iostreams/IOStreamSupplier;)Lau/id/ajlane/iostreams/IOStream;
      16: areturn

  public static <A, B, Z> au.id.ajlane.iostreams.IOStream<Z> zipAll(au.id.ajlane.iostreams.IOStream<A>, au.id.ajlane.iostreams.IOStream<B>, au.id.ajlane.iostreams.IOStreamZipFunction<? super A, ? super B, ? extends Z>, au.id.ajlane.iostreams.IOStreamSupplier<? extends A>, au.id.ajlane.iostreams.IOStreamSupplier<? extends B>);
    Code:
       0: new           #117                // class au/id/ajlane/iostreams/IOStreams$17
       3: dup
       4: aload_0
       5: aload_1
       6: aload_3
       7: aload         4
       9: aload_2
      10: invokespecial #118                // Method au/id/ajlane/iostreams/IOStreams$17."<init>":(Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStream;Lau/id/ajlane/iostreams/IOStreamSupplier;Lau/id/ajlane/iostreams/IOStreamSupplier;Lau/id/ajlane/iostreams/IOStreamZipFunction;)V
      13: areturn

  private au.id.ajlane.iostreams.IOStreams() throws java.lang.InstantiationException;
    Code:
       0: aload_0
       1: invokespecial #119                // Method java/lang/Object."<init>":()V
       4: new           #120                // class java/lang/InstantiationException
       7: dup
       8: ldc           #121                // String This class cannot be instantiated.
      10: invokespecial #122                // Method java/lang/InstantiationException."<init>":(Ljava/lang/String;)V
      13: athrow

  private static java.lang.Object lambda$zipAll$1() throws java.lang.Exception;
    Code:
       0: aconst_null
       1: areturn

  private static java.lang.Object lambda$zipAll$0() throws java.lang.Exception;
    Code:
       0: aconst_null
       1: areturn

  static {};
    Code:
       0: new           #123                // class au/id/ajlane/iostreams/EmptyIOStream
       3: dup
       4: invokespecial #124                // Method au/id/ajlane/iostreams/EmptyIOStream."<init>":()V
       7: putstatic     #29                 // Field EMPTY:Lau/id/ajlane/iostreams/EmptyIOStream;
      10: return
}
