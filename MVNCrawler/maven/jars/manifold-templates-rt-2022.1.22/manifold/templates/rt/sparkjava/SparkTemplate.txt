Compiled from "SparkTemplate.java"
public abstract class manifold.templates.rt.sparkjava.SparkTemplate extends manifold.templates.rt.runtime.BaseTemplate {
  private static java.lang.ThreadLocal<spark.Request> REQUEST;

  private static java.lang.ThreadLocal<spark.Response> RESPONSE;

  public manifold.templates.rt.sparkjava.SparkTemplate();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method manifold/templates/rt/runtime/BaseTemplate."<init>":()V
       4: return

  public static void init();
    Code:
       0: iconst_1
       1: anewarray     #2                  // class spark/Filter
       4: dup
       5: iconst_0
       6: invokedynamic #3,  0              // InvokeDynamic #0:handle:()Lspark/Filter;
      11: aastore
      12: invokestatic  #4                  // Method spark/Spark.before:([Lspark/Filter;)V
      15: invokedynamic #5,  0              // InvokeDynamic #1:handle:()Lspark/Filter;
      20: invokestatic  #6                  // Method spark/Spark.afterAfter:(Lspark/Filter;)V
      23: return

  public spark.Response getResponse();
    Code:
       0: getstatic     #7                  // Field RESPONSE:Ljava/lang/ThreadLocal;
       3: invokevirtual #8                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #9                  // class spark/Response
       9: areturn

  public spark.Request getRequest();
    Code:
       0: getstatic     #10                 // Field REQUEST:Ljava/lang/ThreadLocal;
       3: invokevirtual #8                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #11                 // class spark/Request
       9: areturn

  public java.lang.String toS(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #12                 // class manifold/templates/rt/sparkjava/SparkTemplate$RawObject
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
      12: invokespecial #14                 // Method manifold/templates/rt/runtime/BaseTemplate.toS:(Ljava/lang/Object;)Ljava/lang/String;
      15: areturn
      16: aload_1
      17: ifnonnull     23
      20: ldc           #15                 // String
      22: areturn
      23: aload_0
      24: aload_1
      25: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
      28: invokespecial #16                 // Method escapeHTML:(Ljava/lang/String;)Ljava/lang/String;
      31: areturn

  private java.lang.String escapeHTML(java.lang.String);
    Code:
       0: aload_1
       1: iconst_0
       2: invokestatic  #17                 // Method manifold/rt/api/util/ManEscapeUtil.escapeForHTML:(Ljava/lang/String;Z)Ljava/lang/String;
       5: areturn

  public java.lang.Object raw(java.lang.Object);
    Code:
       0: new           #12                 // class manifold/templates/rt/sparkjava/SparkTemplate$RawObject
       3: dup
       4: aload_1
       5: invokespecial #18                 // Method manifold/templates/rt/sparkjava/SparkTemplate$RawObject."<init>":(Ljava/lang/Object;)V
       8: areturn

  private static void lambda$init$1(spark.Request, spark.Response) throws java.lang.Exception;
    Code:
       0: getstatic     #10                 // Field REQUEST:Ljava/lang/ThreadLocal;
       3: aconst_null
       4: invokevirtual #19                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       7: getstatic     #7                  // Field RESPONSE:Ljava/lang/ThreadLocal;
      10: aconst_null
      11: invokevirtual #19                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      14: return

  private static void lambda$init$0(spark.Request, spark.Response) throws java.lang.Exception;
    Code:
       0: getstatic     #10                 // Field REQUEST:Ljava/lang/ThreadLocal;
       3: aload_0
       4: invokevirtual #19                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       7: getstatic     #7                  // Field RESPONSE:Ljava/lang/ThreadLocal;
      10: aload_1
      11: invokevirtual #19                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      14: return

  static {};
    Code:
       0: new           #20                 // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #21                 // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #10                 // Field REQUEST:Ljava/lang/ThreadLocal;
      10: new           #20                 // class java/lang/ThreadLocal
      13: dup
      14: invokespecial #21                 // Method java/lang/ThreadLocal."<init>":()V
      17: putstatic     #7                  // Field RESPONSE:Ljava/lang/ThreadLocal;
      20: return
}
