Compiled from "OAuth2HttpRequestHandler.kt"
final class no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler$exceptionHandler$1 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function2<no.nav.security.mock.oauth2.http.OAuth2HttpRequest, java.lang.Throwable, no.nav.security.mock.oauth2.http.OAuth2HttpResponse> {
  public static final no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler$exceptionHandler$1 INSTANCE;

  no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler$exceptionHandler$1();
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #12                 // Method kotlin/jvm/internal/Lambda."<init>":(I)V
       5: return

  public final no.nav.security.mock.oauth2.http.OAuth2HttpResponse invoke(no.nav.security.mock.oauth2.http.OAuth2HttpRequest, java.lang.Throwable);
    Code:
       0: aload_1
       1: ldc           #19                 // String request
       3: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #27                 // String error
       9: invokestatic  #25                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: invokestatic  #33                 // Method no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandlerKt.access$getLog$p:()Lmu/KLogger;
      15: aload_1
      16: invokevirtual #39                 // Method no/nav/security/mock/oauth2/http/OAuth2HttpRequest.getUrl:()Lokhttp3/HttpUrl;
      19: invokedynamic #51,  0             // InvokeDynamic #0:makeConcatWithConstants:(Lokhttp3/HttpUrl;)Ljava/lang/String;
      24: aload_2
      25: invokeinterface #56,  3           // InterfaceMethod mu/KLogger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      30: aload_2
      31: invokevirtual #62                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      34: ldc           #64                 // String UTF-8
      36: invokestatic  #70                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      39: invokestatic  #76                 // Method java/net/URLEncoder.encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
      42: astore_3
      43: aload_2
      44: astore        5
      46: aload         5
      48: instanceof    #78                 // class no/nav/security/mock/oauth2/OAuth2Exception
      51: ifeq          64
      54: aload_2
      55: checkcast     #78                 // class no/nav/security/mock/oauth2/OAuth2Exception
      58: invokevirtual #82                 // Method no/nav/security/mock/oauth2/OAuth2Exception.getErrorObject:()Lcom/nimbusds/oauth2/sdk/ErrorObject;
      61: goto          118
      64: aload         5
      66: instanceof    #84                 // class com/nimbusds/oauth2/sdk/ParseException
      69: ifeq          99
      72: aload_2
      73: checkcast     #84                 // class com/nimbusds/oauth2/sdk/ParseException
      76: invokevirtual #85                 // Method com/nimbusds/oauth2/sdk/ParseException.getErrorObject:()Lcom/nimbusds/oauth2/sdk/ErrorObject;
      79: dup
      80: ifnonnull     118
      83: pop
      84: getstatic     #91                 // Field com/nimbusds/oauth2/sdk/OAuth2Error.INVALID_REQUEST:Lcom/nimbusds/oauth2/sdk/ErrorObject;
      87: aload_3
      88: invokedynamic #96,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      93: invokevirtual #102                // Method com/nimbusds/oauth2/sdk/ErrorObject.setDescription:(Ljava/lang/String;)Lcom/nimbusds/oauth2/sdk/ErrorObject;
      96: goto          118
      99: aload         5
     101: instanceof    #104                // class com/nimbusds/oauth2/sdk/GeneralException
     104: ifeq          117
     107: aload_2
     108: checkcast     #104                // class com/nimbusds/oauth2/sdk/GeneralException
     111: invokevirtual #105                // Method com/nimbusds/oauth2/sdk/GeneralException.getErrorObject:()Lcom/nimbusds/oauth2/sdk/ErrorObject;
     114: goto          118
     117: aconst_null
     118: dup
     119: ifnonnull     141
     122: pop
     123: getstatic     #108                // Field com/nimbusds/oauth2/sdk/OAuth2Error.SERVER_ERROR:Lcom/nimbusds/oauth2/sdk/ErrorObject;
     126: aload_3
     127: invokedynamic #111,  0            // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     132: invokevirtual #102                // Method com/nimbusds/oauth2/sdk/ErrorObject.setDescription:(Ljava/lang/String;)Lcom/nimbusds/oauth2/sdk/ErrorObject;
     135: dup
     136: ldc           #113                // String setDescription(...)
     138: invokestatic  #116                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
     141: astore        4
     143: aload         4
     145: invokestatic  #122                // Method no/nav/security/mock/oauth2/http/OAuth2HttpResponseKt.oauth2Error:(Lcom/nimbusds/oauth2/sdk/ErrorObject;)Lno/nav/security/mock/oauth2/http/OAuth2HttpResponse;
     148: areturn

  public java.lang.Object invoke(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #35                 // class no/nav/security/mock/oauth2/http/OAuth2HttpRequest
       5: aload_2
       6: checkcast     #58                 // class java/lang/Throwable
       9: invokevirtual #132                // Method invoke:(Lno/nav/security/mock/oauth2/http/OAuth2HttpRequest;Ljava/lang/Throwable;)Lno/nav/security/mock/oauth2/http/OAuth2HttpResponse;
      12: areturn

  static {};
    Code:
       0: new           #2                  // class no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$exceptionHandler$1
       3: dup
       4: invokespecial #138                // Method "<init>":()V
       7: putstatic     #141                // Field INSTANCE:Lno/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$exceptionHandler$1;
      10: return
}
