Compiled from "OAuth2HttpServer.kt"
public final class no.nav.security.mock.oauth2.http.NettyWrapper implements no.nav.security.mock.oauth2.http.OAuth2HttpServer {
  static final kotlin.reflect.KProperty<java.lang.Object>[] $$delegatedProperties;

  private final no.nav.security.mock.oauth2.http.Ssl ssl;

  private final io.netty.channel.nio.NioEventLoopGroup masterGroup;

  private final io.netty.channel.nio.NioEventLoopGroup workerGroup;

  private io.netty.channel.ChannelFuture closeFuture;

  private java.net.InetSocketAddress address;

  private final kotlin.properties.ReadWriteProperty port$delegate;

  public no.nav.security.mock.oauth2.http.NettyWrapper(no.nav.security.mock.oauth2.http.Ssl);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #17                 // Field ssl:Lno/nav/security/mock/oauth2/http/Ssl;
       9: aload_0
      10: new           #19                 // class io/netty/channel/nio/NioEventLoopGroup
      13: dup
      14: invokespecial #20                 // Method io/netty/channel/nio/NioEventLoopGroup."<init>":()V
      17: putfield      #24                 // Field masterGroup:Lio/netty/channel/nio/NioEventLoopGroup;
      20: aload_0
      21: new           #19                 // class io/netty/channel/nio/NioEventLoopGroup
      24: dup
      25: invokespecial #20                 // Method io/netty/channel/nio/NioEventLoopGroup."<init>":()V
      28: putfield      #27                 // Field workerGroup:Lio/netty/channel/nio/NioEventLoopGroup;
      31: aload_0
      32: getstatic     #33                 // Field kotlin/properties/Delegates.INSTANCE:Lkotlin/properties/Delegates;
      35: invokevirtual #37                 // Method kotlin/properties/Delegates.notNull:()Lkotlin/properties/ReadWriteProperty;
      38: putfield      #41                 // Field port$delegate:Lkotlin/properties/ReadWriteProperty;
      41: return

  public no.nav.security.mock.oauth2.http.NettyWrapper(no.nav.security.mock.oauth2.http.Ssl, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload_2
       1: iconst_1
       2: iand
       3: ifeq          8
       6: aconst_null
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokespecial #46                 // Method "<init>":(Lno/nav/security/mock/oauth2/http/Ssl;)V
      13: return

  public final no.nav.security.mock.oauth2.http.Ssl getSsl();
    Code:
       0: aload_0
       1: getfield      #17                 // Field ssl:Lno/nav/security/mock/oauth2/http/Ssl;
       4: areturn

  private final int getPort();
    Code:
       0: aload_0
       1: getfield      #41                 // Field port$delegate:Lkotlin/properties/ReadWriteProperty;
       4: aload_0
       5: getstatic     #54                 // Field $$delegatedProperties:[Lkotlin/reflect/KProperty;
       8: iconst_0
       9: aaload
      10: invokeinterface #60,  3           // InterfaceMethod kotlin/properties/ReadWriteProperty.getValue:(Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
      15: checkcast     #62                 // class java/lang/Number
      18: invokevirtual #65                 // Method java/lang/Number.intValue:()I
      21: ireturn

  private final void setPort(int);
    Code:
       0: aload_0
       1: getfield      #41                 // Field port$delegate:Lkotlin/properties/ReadWriteProperty;
       4: aload_0
       5: getstatic     #54                 // Field $$delegatedProperties:[Lkotlin/reflect/KProperty;
       8: iconst_0
       9: aaload
      10: iload_1
      11: invokestatic  #73                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: invokeinterface #77,  4           // InterfaceMethod kotlin/properties/ReadWriteProperty.setValue:(Ljava/lang/Object;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
      19: return

  public no.nav.security.mock.oauth2.http.OAuth2HttpServer start(java.net.InetAddress, int, kotlin.jvm.functions.Function1<? super no.nav.security.mock.oauth2.http.OAuth2HttpRequest, no.nav.security.mock.oauth2.http.OAuth2HttpResponse>);
    Code:
       0: aload_1
       1: ldc           #85                 // String inetAddress
       3: invokestatic  #91                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_3
       7: ldc           #93                 // String requestHandler
       9: invokestatic  #91                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: astore        4
      15: aload         4
      17: checkcast     #2                  // class no/nav/security/mock/oauth2/http/NettyWrapper
      20: astore        5
      22: iconst_0
      23: istore        6
      25: new           #95                 // class io/netty/bootstrap/ServerBootstrap
      28: dup
      29: invokespecial #96                 // Method io/netty/bootstrap/ServerBootstrap."<init>":()V
      32: astore        7
      34: aload         7
      36: aload         5
      38: getfield      #24                 // Field masterGroup:Lio/netty/channel/nio/NioEventLoopGroup;
      41: checkcast     #98                 // class io/netty/channel/EventLoopGroup
      44: aload         5
      46: getfield      #27                 // Field workerGroup:Lio/netty/channel/nio/NioEventLoopGroup;
      49: checkcast     #98                 // class io/netty/channel/EventLoopGroup
      52: invokevirtual #102                // Method io/netty/bootstrap/ServerBootstrap.group:(Lio/netty/channel/EventLoopGroup;Lio/netty/channel/EventLoopGroup;)Lio/netty/bootstrap/ServerBootstrap;
      55: invokedynamic #121,  0            // InvokeDynamic #0:newChannel:()Lio/netty/channel/ChannelFactory;
      60: invokevirtual #125                // Method io/netty/bootstrap/ServerBootstrap.channelFactory:(Lio/netty/channel/ChannelFactory;)Lio/netty/bootstrap/AbstractBootstrap;
      63: checkcast     #95                 // class io/netty/bootstrap/ServerBootstrap
      66: new           #127                // class no/nav/security/mock/oauth2/http/NettyWrapper$start$1$2
      69: dup
      70: aload         5
      72: aload_3
      73: invokespecial #130                // Method no/nav/security/mock/oauth2/http/NettyWrapper$start$1$2."<init>":(Lno/nav/security/mock/oauth2/http/NettyWrapper;Lkotlin/jvm/functions/Function1;)V
      76: checkcast     #132                // class io/netty/channel/ChannelHandler
      79: invokevirtual #136                // Method io/netty/bootstrap/ServerBootstrap.childHandler:(Lio/netty/channel/ChannelHandler;)Lio/netty/bootstrap/ServerBootstrap;
      82: getstatic     #142                // Field io/netty/channel/ChannelOption.SO_BACKLOG:Lio/netty/channel/ChannelOption;
      85: sipush        1000
      88: invokestatic  #73                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      91: invokevirtual #146                // Method io/netty/bootstrap/ServerBootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
      94: checkcast     #95                 // class io/netty/bootstrap/ServerBootstrap
      97: getstatic     #149                // Field io/netty/channel/ChannelOption.SO_KEEPALIVE:Lio/netty/channel/ChannelOption;
     100: iconst_1
     101: invokestatic  #154                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     104: invokevirtual #158                // Method io/netty/bootstrap/ServerBootstrap.childOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/ServerBootstrap;
     107: pop
     108: aload         7
     110: aload_1
     111: iload_2
     112: invokevirtual #162                // Method io/netty/bootstrap/ServerBootstrap.bind:(Ljava/net/InetAddress;I)Lio/netty/channel/ChannelFuture;
     115: invokeinterface #168,  1          // InterfaceMethod io/netty/channel/ChannelFuture.sync:()Lio/netty/channel/ChannelFuture;
     120: invokeinterface #171,  1          // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
     125: astore        8
     127: aload         5
     129: aload         8
     131: invokeinterface #177,  1          // InterfaceMethod io/netty/channel/Channel.localAddress:()Ljava/net/SocketAddress;
     136: dup
     137: ldc           #179                // String null cannot be cast to non-null type java.net.InetSocketAddress
     139: invokestatic  #182                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
     142: checkcast     #184                // class java/net/InetSocketAddress
     145: putfield      #188                // Field address:Ljava/net/InetSocketAddress;
     148: aload         5
     150: iload_2
     151: invokespecial #190                // Method setPort:(I)V
     154: aload         5
     156: aload         8
     158: invokeinterface #193,  1          // InterfaceMethod io/netty/channel/Channel.closeFuture:()Lio/netty/channel/ChannelFuture;
     163: putfield      #196                // Field closeFuture:Lio/netty/channel/ChannelFuture;
     166: invokestatic  #202                // Method no/nav/security/mock/oauth2/http/OAuth2HttpServerKt.access$getLog$p:()Lmu/KLogger;
     169: aload         5
     171: getfield      #188                // Field address:Ljava/net/InetSocketAddress;
     174: dup
     175: ifnonnull     185
     178: pop
     179: ldc           #203                // String address
     181: invokestatic  #207                // Method kotlin/jvm/internal/Intrinsics.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V
     184: aconst_null
     185: iload_2
     186: invokedynamic #219,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/net/InetSocketAddress;I)Ljava/lang/String;
     191: invokeinterface #224,  2          // InterfaceMethod mu/KLogger.debug:(Ljava/lang/String;)V
     196: nop
     197: aload         4
     199: checkcast     #6                  // class no/nav/security/mock/oauth2/http/OAuth2HttpServer
     202: areturn

  public no.nav.security.mock.oauth2.http.NettyWrapper stop();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: checkcast     #2                  // class no/nav/security/mock/oauth2/http/NettyWrapper
       6: astore_2
       7: iconst_0
       8: istore_3
       9: aload_2
      10: getfield      #196                // Field closeFuture:Lio/netty/channel/ChannelFuture;
      13: dup
      14: ifnull        27
      17: iconst_0
      18: invokeinterface #242,  2          // InterfaceMethod io/netty/channel/ChannelFuture.cancel:(Z)Z
      23: pop
      24: goto          28
      27: pop
      28: aload_2
      29: getfield      #27                 // Field workerGroup:Lio/netty/channel/nio/NioEventLoopGroup;
      32: invokevirtual #246                // Method io/netty/channel/nio/NioEventLoopGroup.shutdownGracefully:()Lio/netty/util/concurrent/Future;
      35: pop
      36: aload_2
      37: getfield      #24                 // Field masterGroup:Lio/netty/channel/nio/NioEventLoopGroup;
      40: invokevirtual #246                // Method io/netty/channel/nio/NioEventLoopGroup.shutdownGracefully:()Lio/netty/util/concurrent/Future;
      43: pop
      44: nop
      45: aload_1
      46: checkcast     #2                  // class no/nav/security/mock/oauth2/http/NettyWrapper
      49: areturn

  public int port();
    Code:
       0: aload_0
       1: invokespecial #250                // Method getPort:()I
       4: ifle          14
       7: aload_0
       8: invokespecial #250                // Method getPort:()I
      11: goto          32
      14: aload_0
      15: getfield      #188                // Field address:Ljava/net/InetSocketAddress;
      18: dup
      19: ifnonnull     29
      22: pop
      23: ldc           #203                // String address
      25: invokestatic  #207                // Method kotlin/jvm/internal/Intrinsics.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V
      28: aconst_null
      29: invokevirtual #251                // Method java/net/InetSocketAddress.getPort:()I
      32: ireturn

  public okhttp3.HttpUrl url(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #255                // String path
       3: invokestatic  #91                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #17                 // Field ssl:Lno/nav/security/mock/oauth2/http/Ssl;
      10: ifnull        19
      13: ldc_w         #257                // String https
      16: goto          22
      19: ldc_w         #259                // String http
      22: astore_2
      23: new           #261                // class okhttp3/HttpUrl$Builder
      26: dup
      27: invokespecial #262                // Method okhttp3/HttpUrl$Builder."<init>":()V
      30: aload_2
      31: invokevirtual #266                // Method okhttp3/HttpUrl$Builder.scheme:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
      34: aload_0
      35: getfield      #188                // Field address:Ljava/net/InetSocketAddress;
      38: dup
      39: ifnonnull     49
      42: pop
      43: ldc           #203                // String address
      45: invokestatic  #207                // Method kotlin/jvm/internal/Intrinsics.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V
      48: aconst_null
      49: invokevirtual #270                // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      52: invokevirtual #274                // Method java/net/InetAddress.getCanonicalHostName:()Ljava/lang/String;
      55: dup
      56: ldc_w         #276                // String getCanonicalHostName(...)
      59: invokestatic  #279                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      62: invokevirtual #282                // Method okhttp3/HttpUrl$Builder.host:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
      65: aload_0
      66: invokevirtual #284                // Method port:()I
      69: invokevirtual #287                // Method okhttp3/HttpUrl$Builder.port:(I)Lokhttp3/HttpUrl$Builder;
      72: invokevirtual #291                // Method okhttp3/HttpUrl$Builder.build:()Lokhttp3/HttpUrl;
      75: aload_1
      76: invokevirtual #296                // Method okhttp3/HttpUrl.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;
      79: dup
      80: invokestatic  #299                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;)V
      83: areturn

  public no.nav.security.mock.oauth2.http.Ssl sslConfig();
    Code:
       0: aload_0
       1: getfield      #17                 // Field ssl:Lno/nav/security/mock/oauth2/http/Ssl;
       4: areturn

  private final io.netty.handler.ssl.SslHandler nettySslHandler(no.nav.security.mock.oauth2.http.Ssl);
    Code:
       0: new           #307                // class io/netty/handler/ssl/SslHandler
       3: dup
       4: aload_1
       5: invokevirtual #313                // Method no/nav/security/mock/oauth2/http/Ssl.sslEngine:()Ljavax/net/ssl/SSLEngine;
       8: invokespecial #316                // Method io/netty/handler/ssl/SslHandler."<init>":(Ljavax/net/ssl/SSLEngine;)V
      11: areturn

  public no.nav.security.mock.oauth2.http.OAuth2HttpServer start(kotlin.jvm.functions.Function1<? super no.nav.security.mock.oauth2.http.OAuth2HttpRequest, no.nav.security.mock.oauth2.http.OAuth2HttpResponse>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #324                // Method no/nav/security/mock/oauth2/http/OAuth2HttpServer$DefaultImpls.start:(Lno/nav/security/mock/oauth2/http/OAuth2HttpServer;Lkotlin/jvm/functions/Function1;)Lno/nav/security/mock/oauth2/http/OAuth2HttpServer;
       5: areturn

  public no.nav.security.mock.oauth2.http.OAuth2HttpServer start(int, kotlin.jvm.functions.Function1<? super no.nav.security.mock.oauth2.http.OAuth2HttpRequest, no.nav.security.mock.oauth2.http.OAuth2HttpResponse>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #329                // Method no/nav/security/mock/oauth2/http/OAuth2HttpServer$DefaultImpls.start:(Lno/nav/security/mock/oauth2/http/OAuth2HttpServer;ILkotlin/jvm/functions/Function1;)Lno/nav/security/mock/oauth2/http/OAuth2HttpServer;
       6: areturn

  public void close();
    Code:
       0: aload_0
       1: invokestatic  #333                // Method no/nav/security/mock/oauth2/http/OAuth2HttpServer$DefaultImpls.close:(Lno/nav/security/mock/oauth2/http/OAuth2HttpServer;)V
       4: return

  public no.nav.security.mock.oauth2.http.NettyWrapper();
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_1
       3: aconst_null
       4: invokespecial #335                // Method "<init>":(Lno/nav/security/mock/oauth2/http/Ssl;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
       7: return

  private static final io.netty.channel.ServerChannel start$lambda$1$lambda$0();
    Code:
       0: new           #337                // class io/netty/channel/socket/nio/NioServerSocketChannel
       3: dup
       4: invokespecial #338                // Method io/netty/channel/socket/nio/NioServerSocketChannel."<init>":()V
       7: checkcast     #340                // class io/netty/channel/ServerChannel
      10: areturn

  public no.nav.security.mock.oauth2.http.OAuth2HttpServer stop();
    Code:
       0: aload_0
       1: invokevirtual #343                // Method stop:()Lno/nav/security/mock/oauth2/http/NettyWrapper;
       4: checkcast     #6                  // class no/nav/security/mock/oauth2/http/OAuth2HttpServer
       7: areturn

  public static final io.netty.handler.ssl.SslHandler access$nettySslHandler(no.nav.security.mock.oauth2.http.NettyWrapper, no.nav.security.mock.oauth2.http.Ssl);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #347                // Method nettySslHandler:(Lno/nav/security/mock/oauth2/http/Ssl;)Lio/netty/handler/ssl/SslHandler;
       5: areturn

  static {};
    Code:
       0: iconst_1
       1: anewarray     #352                // class kotlin/reflect/KProperty
       4: astore_0
       5: aload_0
       6: iconst_0
       7: new           #354                // class kotlin/jvm/internal/MutablePropertyReference1Impl
      10: dup
      11: ldc           #2                  // class no/nav/security/mock/oauth2/http/NettyWrapper
      13: ldc_w         #355                // String port
      16: ldc_w         #357                // String getPort()I
      19: iconst_0
      20: invokespecial #360                // Method kotlin/jvm/internal/MutablePropertyReference1Impl."<init>":(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V
      23: checkcast     #362                // class kotlin/jvm/internal/MutablePropertyReference1
      26: invokestatic  #368                // Method kotlin/jvm/internal/Reflection.mutableProperty1:(Lkotlin/jvm/internal/MutablePropertyReference1;)Lkotlin/reflect/KMutableProperty1;
      29: aastore
      30: aload_0
      31: putstatic     #54                 // Field $$delegatedProperties:[Lkotlin/reflect/KProperty;
      34: return
}
