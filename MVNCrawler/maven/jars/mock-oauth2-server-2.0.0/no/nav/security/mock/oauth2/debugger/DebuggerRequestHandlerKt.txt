Compiled from "DebuggerRequestHandler.kt"
public final class no.nav.security.mock.oauth2.debugger.DebuggerRequestHandlerKt {
  private static final mu.KLogger log;

  private static final okhttp3.OkHttpClient client;

  private static final kotlin.jvm.functions.Function2<no.nav.security.mock.oauth2.http.OAuth2HttpRequest, java.lang.Throwable, no.nav.security.mock.oauth2.http.OAuth2HttpResponse> handle(no.nav.security.mock.oauth2.debugger.SessionManager);
    Code:
       0: new           #9                  // class no/nav/security/mock/oauth2/debugger/DebuggerRequestHandlerKt$handle$1
       3: dup
       4: aload_0
       5: invokespecial #13                 // Method no/nav/security/mock/oauth2/debugger/DebuggerRequestHandlerKt$handle$1."<init>":(Lno/nav/security/mock/oauth2/debugger/SessionManager;)V
       8: checkcast     #15                 // class kotlin/jvm/functions/Function2
      11: areturn

  private static final no.nav.security.mock.oauth2.http.Route$Builder debuggerForm(no.nav.security.mock.oauth2.http.Route$Builder, no.nav.security.mock.oauth2.debugger.SessionManager);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: astore_3
       4: iconst_0
       5: istore        4
       7: aload_3
       8: iconst_1
       9: anewarray     #21                 // class java/lang/String
      12: astore        5
      14: aload         5
      16: iconst_0
      17: ldc           #23                 // String /debugger
      19: aastore
      20: aload         5
      22: getstatic     #29                 // Field no/nav/security/mock/oauth2/debugger/DebuggerRequestHandlerKt$debuggerForm$1$1.INSTANCE:Lno/nav/security/mock/oauth2/debugger/DebuggerRequestHandlerKt$debuggerForm$1$1;
      25: checkcast     #31                 // class kotlin/jvm/functions/Function1
      28: invokevirtual #37                 // Method no/nav/security/mock/oauth2/http/Route$Builder.get:([Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lno/nav/security/mock/oauth2/http/Route$Builder;
      31: pop
      32: aload_3
      33: ldc           #23                 // String /debugger
      35: new           #39                 // class no/nav/security/mock/oauth2/debugger/DebuggerRequestHandlerKt$debuggerForm$1$2
      38: dup
      39: aload_1
      40: invokespecial #40                 // Method no/nav/security/mock/oauth2/debugger/DebuggerRequestHandlerKt$debuggerForm$1$2."<init>":(Lno/nav/security/mock/oauth2/debugger/SessionManager;)V
      43: checkcast     #31                 // class kotlin/jvm/functions/Function1
      46: invokevirtual #44                 // Method no/nav/security/mock/oauth2/http/Route$Builder.post:(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lno/nav/security/mock/oauth2/http/Route$Builder;
      49: pop
      50: nop
      51: aload_2
      52: areturn

  private static final no.nav.security.mock.oauth2.http.Route$Builder debuggerCallback(no.nav.security.mock.oauth2.http.Route$Builder, no.nav.security.mock.oauth2.debugger.SessionManager, no.nav.security.mock.oauth2.http.Ssl);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #21                 // class java/lang/String
       5: astore_3
       6: aload_3
       7: iconst_0
       8: ldc           #53                 // String /debugger/callback
      10: aastore
      11: aload_3
      12: new           #55                 // class no/nav/security/mock/oauth2/debugger/DebuggerRequestHandlerKt$debuggerCallback$1
      15: dup
      16: aload_1
      17: aload_2
      18: invokespecial #58                 // Method no/nav/security/mock/oauth2/debugger/DebuggerRequestHandlerKt$debuggerCallback$1."<init>":(Lno/nav/security/mock/oauth2/debugger/SessionManager;Lno/nav/security/mock/oauth2/http/Ssl;)V
      21: checkcast     #31                 // class kotlin/jvm/functions/Function1
      24: invokevirtual #61                 // Method no/nav/security/mock/oauth2/http/Route$Builder.any:([Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lno/nav/security/mock/oauth2/http/Route$Builder;
      27: areturn

  static no.nav.security.mock.oauth2.http.Route$Builder debuggerCallback$default(no.nav.security.mock.oauth2.http.Route$Builder, no.nav.security.mock.oauth2.debugger.SessionManager, no.nav.security.mock.oauth2.http.Ssl, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_2
       2: iand
       3: ifeq          8
       6: aconst_null
       7: astore_2
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokestatic  #68                 // Method debuggerCallback:(Lno/nav/security/mock/oauth2/http/Route$Builder;Lno/nav/security/mock/oauth2/debugger/SessionManager;Lno/nav/security/mock/oauth2/http/Ssl;)Lno/nav/security/mock/oauth2/http/Route$Builder;
      14: areturn

  public static final kotlin.jvm.functions.Function2 access$handle(no.nav.security.mock.oauth2.debugger.SessionManager);
    Code:
       0: aload_0
       1: invokestatic  #71                 // Method handle:(Lno/nav/security/mock/oauth2/debugger/SessionManager;)Lkotlin/jvm/functions/Function2;
       4: areturn

  public static final no.nav.security.mock.oauth2.http.Route$Builder access$debuggerForm(no.nav.security.mock.oauth2.http.Route$Builder, no.nav.security.mock.oauth2.debugger.SessionManager);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #74                 // Method debuggerForm:(Lno/nav/security/mock/oauth2/http/Route$Builder;Lno/nav/security/mock/oauth2/debugger/SessionManager;)Lno/nav/security/mock/oauth2/http/Route$Builder;
       5: areturn

  public static final no.nav.security.mock.oauth2.http.Route$Builder access$debuggerCallback(no.nav.security.mock.oauth2.http.Route$Builder, no.nav.security.mock.oauth2.debugger.SessionManager, no.nav.security.mock.oauth2.http.Ssl);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #68                 // Method debuggerCallback:(Lno/nav/security/mock/oauth2/http/Route$Builder;Lno/nav/security/mock/oauth2/debugger/SessionManager;Lno/nav/security/mock/oauth2/http/Ssl;)Lno/nav/security/mock/oauth2/http/Route$Builder;
       6: areturn

  public static final mu.KLogger access$getLog$p();
    Code:
       0: getstatic     #82                 // Field log:Lmu/KLogger;
       3: areturn

  public static final okhttp3.OkHttpClient access$getClient$p();
    Code:
       0: getstatic     #88                 // Field client:Lokhttp3/OkHttpClient;
       3: areturn

  static {};
    Code:
       0: getstatic     #95                 // Field mu/KotlinLogging.INSTANCE:Lmu/KotlinLogging;
       3: getstatic     #100                // Field no/nav/security/mock/oauth2/debugger/DebuggerRequestHandlerKt$log$1.INSTANCE:Lno/nav/security/mock/oauth2/debugger/DebuggerRequestHandlerKt$log$1;
       6: checkcast     #102                // class kotlin/jvm/functions/Function0
       9: invokevirtual #106                // Method mu/KotlinLogging.logger:(Lkotlin/jvm/functions/Function0;)Lmu/KLogger;
      12: putstatic     #82                 // Field log:Lmu/KLogger;
      15: new           #108                // class okhttp3/OkHttpClient
      18: dup
      19: invokespecial #110                // Method okhttp3/OkHttpClient."<init>":()V
      22: invokevirtual #114                // Method okhttp3/OkHttpClient.newBuilder:()Lokhttp3/OkHttpClient$Builder;
      25: invokevirtual #119                // Method okhttp3/OkHttpClient$Builder.build:()Lokhttp3/OkHttpClient;
      28: putstatic     #88                 // Field client:Lokhttp3/OkHttpClient;
      31: return
}
