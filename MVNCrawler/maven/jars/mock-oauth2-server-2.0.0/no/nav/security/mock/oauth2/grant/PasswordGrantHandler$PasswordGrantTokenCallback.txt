Compiled from "PasswordGrantHandler.kt"
final class no.nav.security.mock.oauth2.grant.PasswordGrantHandler$PasswordGrantTokenCallback implements no.nav.security.mock.oauth2.token.OAuth2TokenCallback {
  private final no.nav.security.mock.oauth2.token.OAuth2TokenCallback tokenCallback;

  public no.nav.security.mock.oauth2.grant.PasswordGrantHandler$PasswordGrantTokenCallback(no.nav.security.mock.oauth2.token.OAuth2TokenCallback);
    Code:
       0: aload_1
       1: ldc           #11                 // String tokenCallback
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #20                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #23                 // Field tokenCallback:Lno/nav/security/mock/oauth2/token/OAuth2TokenCallback;
      15: return

  public java.util.Map<java.lang.String, java.lang.Object> addClaims(com.nimbusds.oauth2.sdk.TokenRequest);
    Code:
       0: aload_1
       1: ldc           #30                 // String tokenRequest
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #23                 // Field tokenCallback:Lno/nav/security/mock/oauth2/token/OAuth2TokenCallback;
      10: aload_1
      11: invokeinterface #32,  2           // InterfaceMethod no/nav/security/mock/oauth2/token/OAuth2TokenCallback.addClaims:(Lcom/nimbusds/oauth2/sdk/TokenRequest;)Ljava/util/Map;
      16: areturn

  public java.util.List<java.lang.String> audience(com.nimbusds.oauth2.sdk.TokenRequest);
    Code:
       0: aload_1
       1: ldc           #30                 // String tokenRequest
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #23                 // Field tokenCallback:Lno/nav/security/mock/oauth2/token/OAuth2TokenCallback;
      10: aload_1
      11: invokeinterface #38,  2           // InterfaceMethod no/nav/security/mock/oauth2/token/OAuth2TokenCallback.audience:(Lcom/nimbusds/oauth2/sdk/TokenRequest;)Ljava/util/List;
      16: areturn

  public java.lang.String issuerId();
    Code:
       0: aload_0
       1: getfield      #23                 // Field tokenCallback:Lno/nav/security/mock/oauth2/token/OAuth2TokenCallback;
       4: invokeinterface #42,  1           // InterfaceMethod no/nav/security/mock/oauth2/token/OAuth2TokenCallback.issuerId:()Ljava/lang/String;
       9: areturn

  public long tokenExpiry();
    Code:
       0: aload_0
       1: getfield      #23                 // Field tokenCallback:Lno/nav/security/mock/oauth2/token/OAuth2TokenCallback;
       4: invokeinterface #46,  1           // InterfaceMethod no/nav/security/mock/oauth2/token/OAuth2TokenCallback.tokenExpiry:()J
       9: lreturn

  public java.lang.String typeHeader(com.nimbusds.oauth2.sdk.TokenRequest);
    Code:
       0: aload_1
       1: ldc           #30                 // String tokenRequest
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #23                 // Field tokenCallback:Lno/nav/security/mock/oauth2/token/OAuth2TokenCallback;
      10: aload_1
      11: invokeinterface #50,  2           // InterfaceMethod no/nav/security/mock/oauth2/token/OAuth2TokenCallback.typeHeader:(Lcom/nimbusds/oauth2/sdk/TokenRequest;)Ljava/lang/String;
      16: areturn

  public java.lang.String subject(com.nimbusds.oauth2.sdk.TokenRequest);
    Code:
       0: aload_1
       1: ldc           #30                 // String tokenRequest
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #58                 // Method com/nimbusds/oauth2/sdk/TokenRequest.getAuthorizationGrant:()Lcom/nimbusds/oauth2/sdk/AuthorizationGrant;
      10: astore_2
      11: aload_2
      12: ifnull        60
      15: aload_2
      16: astore        5
      18: iconst_0
      19: istore        6
      21: aload         5
      23: instanceof    #60                 // class com/nimbusds/oauth2/sdk/ResourceOwnerPasswordCredentialsGrant
      26: ifeq          37
      29: aload         5
      31: checkcast     #60                 // class com/nimbusds/oauth2/sdk/ResourceOwnerPasswordCredentialsGrant
      34: goto          38
      37: aconst_null
      38: nop
      39: astore_3
      40: aload_3
      41: ifnull        60
      44: aload_3
      45: invokevirtual #63                 // Method com/nimbusds/oauth2/sdk/ResourceOwnerPasswordCredentialsGrant.getUsername:()Ljava/lang/String;
      48: astore        4
      50: aload         4
      52: ifnull        60
      55: aload         4
      57: goto          70
      60: aload_0
      61: getfield      #23                 // Field tokenCallback:Lno/nav/security/mock/oauth2/token/OAuth2TokenCallback;
      64: aload_1
      65: invokeinterface #65,  2           // InterfaceMethod no/nav/security/mock/oauth2/token/OAuth2TokenCallback.subject:(Lcom/nimbusds/oauth2/sdk/TokenRequest;)Ljava/lang/String;
      70: areturn
}
