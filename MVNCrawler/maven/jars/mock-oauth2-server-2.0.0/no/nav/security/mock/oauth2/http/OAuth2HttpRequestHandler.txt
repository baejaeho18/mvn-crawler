Compiled from "OAuth2HttpRequestHandler.kt"
public final class no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler {
  private final no.nav.security.mock.oauth2.OAuth2Config config;

  private final no.nav.security.mock.oauth2.login.LoginRequestHandler loginRequestHandler;

  private final no.nav.security.mock.oauth2.debugger.DebuggerRequestHandler debuggerRequestHandler;

  private final java.util.concurrent.BlockingQueue<no.nav.security.mock.oauth2.token.OAuth2TokenCallback> tokenCallbackQueue;

  private final no.nav.security.mock.oauth2.grant.RefreshTokenManager refreshTokenManager;

  private final java.util.Map<com.nimbusds.oauth2.sdk.GrantType, no.nav.security.mock.oauth2.grant.GrantHandler> grantHandlers;

  private final kotlin.jvm.functions.Function2<no.nav.security.mock.oauth2.http.OAuth2HttpRequest, java.lang.Throwable, no.nav.security.mock.oauth2.http.OAuth2HttpResponse> exceptionHandler;

  private final no.nav.security.mock.oauth2.http.Route authorizationServer;

  public no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler(no.nav.security.mock.oauth2.OAuth2Config);
    Code:
       0: aload_1
       1: ldc           #9                  // String config
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #18                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #21                 // Field config:Lno/nav/security/mock/oauth2/OAuth2Config;
      15: aload_0
      16: new           #23                 // class no/nav/security/mock/oauth2/login/LoginRequestHandler
      19: dup
      20: invokestatic  #29                 // Method no/nav/security/mock/oauth2/http/OAuth2HttpResponseKt.getTemplateMapper:()Lno/nav/security/mock/oauth2/templates/TemplateMapper;
      23: aload_0
      24: getfield      #21                 // Field config:Lno/nav/security/mock/oauth2/OAuth2Config;
      27: invokespecial #32                 // Method no/nav/security/mock/oauth2/login/LoginRequestHandler."<init>":(Lno/nav/security/mock/oauth2/templates/TemplateMapper;Lno/nav/security/mock/oauth2/OAuth2Config;)V
      30: putfield      #36                 // Field loginRequestHandler:Lno/nav/security/mock/oauth2/login/LoginRequestHandler;
      33: aload_0
      34: new           #38                 // class no/nav/security/mock/oauth2/debugger/DebuggerRequestHandler
      37: dup
      38: aconst_null
      39: aload_0
      40: getfield      #21                 // Field config:Lno/nav/security/mock/oauth2/OAuth2Config;
      43: invokevirtual #44                 // Method no/nav/security/mock/oauth2/OAuth2Config.getHttpServer:()Lno/nav/security/mock/oauth2/http/OAuth2HttpServer;
      46: invokeinterface #50,  1           // InterfaceMethod no/nav/security/mock/oauth2/http/OAuth2HttpServer.sslConfig:()Lno/nav/security/mock/oauth2/http/Ssl;
      51: aconst_null
      52: iconst_5
      53: aconst_null
      54: invokespecial #53                 // Method no/nav/security/mock/oauth2/debugger/DebuggerRequestHandler."<init>":(Lno/nav/security/mock/oauth2/debugger/SessionManager;Lno/nav/security/mock/oauth2/http/Ssl;Lno/nav/security/mock/oauth2/http/Route;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
      57: putfield      #57                 // Field debuggerRequestHandler:Lno/nav/security/mock/oauth2/debugger/DebuggerRequestHandler;
      60: aload_0
      61: new           #59                 // class java/util/concurrent/LinkedBlockingQueue
      64: dup
      65: invokespecial #60                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      68: checkcast     #62                 // class java/util/concurrent/BlockingQueue
      71: putfield      #66                 // Field tokenCallbackQueue:Ljava/util/concurrent/BlockingQueue;
      74: aload_0
      75: new           #68                 // class no/nav/security/mock/oauth2/grant/RefreshTokenManager
      78: dup
      79: aconst_null
      80: iconst_1
      81: aconst_null
      82: invokespecial #71                 // Method no/nav/security/mock/oauth2/grant/RefreshTokenManager."<init>":(Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
      85: putfield      #75                 // Field refreshTokenManager:Lno/nav/security/mock/oauth2/grant/RefreshTokenManager;
      88: aload_0
      89: bipush        6
      91: anewarray     #77                 // class kotlin/Pair
      94: astore_2
      95: aload_2
      96: iconst_0
      97: getstatic     #83                 // Field com/nimbusds/oauth2/sdk/GrantType.AUTHORIZATION_CODE:Lcom/nimbusds/oauth2/sdk/GrantType;
     100: new           #85                 // class no/nav/security/mock/oauth2/grant/AuthorizationCodeHandler
     103: dup
     104: aload_0
     105: getfield      #21                 // Field config:Lno/nav/security/mock/oauth2/OAuth2Config;
     108: invokevirtual #89                 // Method no/nav/security/mock/oauth2/OAuth2Config.getTokenProvider:()Lno/nav/security/mock/oauth2/token/OAuth2TokenProvider;
     111: aload_0
     112: getfield      #75                 // Field refreshTokenManager:Lno/nav/security/mock/oauth2/grant/RefreshTokenManager;
     115: invokespecial #92                 // Method no/nav/security/mock/oauth2/grant/AuthorizationCodeHandler."<init>":(Lno/nav/security/mock/oauth2/token/OAuth2TokenProvider;Lno/nav/security/mock/oauth2/grant/RefreshTokenManager;)V
     118: invokestatic  #98                 // Method kotlin/TuplesKt.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
     121: aastore
     122: aload_2
     123: iconst_1
     124: getstatic     #101                // Field com/nimbusds/oauth2/sdk/GrantType.CLIENT_CREDENTIALS:Lcom/nimbusds/oauth2/sdk/GrantType;
     127: new           #103                // class no/nav/security/mock/oauth2/grant/ClientCredentialsGrantHandler
     130: dup
     131: aload_0
     132: getfield      #21                 // Field config:Lno/nav/security/mock/oauth2/OAuth2Config;
     135: invokevirtual #89                 // Method no/nav/security/mock/oauth2/OAuth2Config.getTokenProvider:()Lno/nav/security/mock/oauth2/token/OAuth2TokenProvider;
     138: invokespecial #106                // Method no/nav/security/mock/oauth2/grant/ClientCredentialsGrantHandler."<init>":(Lno/nav/security/mock/oauth2/token/OAuth2TokenProvider;)V
     141: invokestatic  #98                 // Method kotlin/TuplesKt.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
     144: aastore
     145: aload_2
     146: iconst_2
     147: getstatic     #109                // Field com/nimbusds/oauth2/sdk/GrantType.JWT_BEARER:Lcom/nimbusds/oauth2/sdk/GrantType;
     150: new           #111                // class no/nav/security/mock/oauth2/grant/JwtBearerGrantHandler
     153: dup
     154: aload_0
     155: getfield      #21                 // Field config:Lno/nav/security/mock/oauth2/OAuth2Config;
     158: invokevirtual #89                 // Method no/nav/security/mock/oauth2/OAuth2Config.getTokenProvider:()Lno/nav/security/mock/oauth2/token/OAuth2TokenProvider;
     161: invokespecial #112                // Method no/nav/security/mock/oauth2/grant/JwtBearerGrantHandler."<init>":(Lno/nav/security/mock/oauth2/token/OAuth2TokenProvider;)V
     164: invokestatic  #98                 // Method kotlin/TuplesKt.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
     167: aastore
     168: aload_2
     169: iconst_3
     170: invokestatic  #118                // Method no/nav/security/mock/oauth2/grant/TokenExchangeGrantKt.getTOKEN_EXCHANGE:()Lcom/nimbusds/oauth2/sdk/GrantType;
     173: new           #120                // class no/nav/security/mock/oauth2/grant/TokenExchangeGrantHandler
     176: dup
     177: aload_0
     178: getfield      #21                 // Field config:Lno/nav/security/mock/oauth2/OAuth2Config;
     181: invokevirtual #89                 // Method no/nav/security/mock/oauth2/OAuth2Config.getTokenProvider:()Lno/nav/security/mock/oauth2/token/OAuth2TokenProvider;
     184: invokespecial #121                // Method no/nav/security/mock/oauth2/grant/TokenExchangeGrantHandler."<init>":(Lno/nav/security/mock/oauth2/token/OAuth2TokenProvider;)V
     187: invokestatic  #98                 // Method kotlin/TuplesKt.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
     190: aastore
     191: aload_2
     192: iconst_4
     193: getstatic     #124                // Field com/nimbusds/oauth2/sdk/GrantType.REFRESH_TOKEN:Lcom/nimbusds/oauth2/sdk/GrantType;
     196: new           #126                // class no/nav/security/mock/oauth2/grant/RefreshTokenGrantHandler
     199: dup
     200: aload_0
     201: getfield      #21                 // Field config:Lno/nav/security/mock/oauth2/OAuth2Config;
     204: invokevirtual #89                 // Method no/nav/security/mock/oauth2/OAuth2Config.getTokenProvider:()Lno/nav/security/mock/oauth2/token/OAuth2TokenProvider;
     207: aload_0
     208: getfield      #75                 // Field refreshTokenManager:Lno/nav/security/mock/oauth2/grant/RefreshTokenManager;
     211: invokespecial #127                // Method no/nav/security/mock/oauth2/grant/RefreshTokenGrantHandler."<init>":(Lno/nav/security/mock/oauth2/token/OAuth2TokenProvider;Lno/nav/security/mock/oauth2/grant/RefreshTokenManager;)V
     214: invokestatic  #98                 // Method kotlin/TuplesKt.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
     217: aastore
     218: aload_2
     219: iconst_5
     220: getstatic     #130                // Field com/nimbusds/oauth2/sdk/GrantType.PASSWORD:Lcom/nimbusds/oauth2/sdk/GrantType;
     223: new           #132                // class no/nav/security/mock/oauth2/grant/PasswordGrantHandler
     226: dup
     227: aload_0
     228: getfield      #21                 // Field config:Lno/nav/security/mock/oauth2/OAuth2Config;
     231: invokevirtual #89                 // Method no/nav/security/mock/oauth2/OAuth2Config.getTokenProvider:()Lno/nav/security/mock/oauth2/token/OAuth2TokenProvider;
     234: invokespecial #133                // Method no/nav/security/mock/oauth2/grant/PasswordGrantHandler."<init>":(Lno/nav/security/mock/oauth2/token/OAuth2TokenProvider;)V
     237: invokestatic  #98                 // Method kotlin/TuplesKt.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
     240: aastore
     241: aload_2
     242: invokestatic  #139                // Method kotlin/collections/MapsKt.mapOf:([Lkotlin/Pair;)Ljava/util/Map;
     245: putfield      #143                // Field grantHandlers:Ljava/util/Map;
     248: aload_0
     249: getstatic     #149                // Field no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$exceptionHandler$1.INSTANCE:Lno/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$exceptionHandler$1;
     252: checkcast     #151                // class kotlin/jvm/functions/Function2
     255: putfield      #155                // Field exceptionHandler:Lkotlin/jvm/functions/Function2;
     258: aload_0
     259: new           #157                // class no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$authorizationServer$1
     262: dup
     263: aload_0
     264: invokespecial #160                // Method no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$authorizationServer$1."<init>":(Lno/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler;)V
     267: checkcast     #162                // class kotlin/jvm/functions/Function1
     270: invokestatic  #168                // Method no/nav/security/mock/oauth2/http/OAuth2HttpRouterKt.routes:(Lkotlin/jvm/functions/Function1;)Lno/nav/security/mock/oauth2/http/Route;
     273: putfield      #172                // Field authorizationServer:Lno/nav/security/mock/oauth2/http/Route;
     276: return

  public final no.nav.security.mock.oauth2.http.Route getAuthorizationServer();
    Code:
       0: aload_0
       1: getfield      #172                // Field authorizationServer:Lno/nav/security/mock/oauth2/http/Route;
       4: areturn

  public final boolean enqueueTokenCallback(no.nav.security.mock.oauth2.token.OAuth2TokenCallback);
    Code:
       0: aload_1
       1: ldc           #180                // String oAuth2TokenCallback
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #66                 // Field tokenCallbackQueue:Ljava/util/concurrent/BlockingQueue;
      10: aload_1
      11: invokeinterface #184,  2          // InterfaceMethod java/util/concurrent/BlockingQueue.add:(Ljava/lang/Object;)Z
      16: ireturn

  private final no.nav.security.mock.oauth2.http.Route$Builder wellKnown(no.nav.security.mock.oauth2.http.Route$Builder);
    Code:
       0: aload_1
       1: iconst_2
       2: anewarray     #189                // class java/lang/String
       5: astore_2
       6: aload_2
       7: iconst_0
       8: ldc           #191                // String /.well-known/openid-configuration
      10: aastore
      11: aload_2
      12: iconst_1
      13: ldc           #193                // String /.well-known/oauth-authorization-server
      15: aastore
      16: aload_2
      17: getstatic     #198                // Field no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$wellKnown$1.INSTANCE:Lno/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$wellKnown$1;
      20: checkcast     #162                // class kotlin/jvm/functions/Function1
      23: invokevirtual #204                // Method no/nav/security/mock/oauth2/http/Route$Builder.get:([Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lno/nav/security/mock/oauth2/http/Route$Builder;
      26: areturn

  private final no.nav.security.mock.oauth2.http.Route$Builder jwks(no.nav.security.mock.oauth2.http.Route$Builder);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #189                // class java/lang/String
       5: astore_2
       6: aload_2
       7: iconst_0
       8: ldc           #209                // String /jwks
      10: aastore
      11: aload_2
      12: new           #211                // class no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$jwks$1
      15: dup
      16: aload_0
      17: invokespecial #212                // Method no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$jwks$1."<init>":(Lno/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler;)V
      20: checkcast     #162                // class kotlin/jvm/functions/Function1
      23: invokevirtual #204                // Method no/nav/security/mock/oauth2/http/Route$Builder.get:([Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lno/nav/security/mock/oauth2/http/Route$Builder;
      26: areturn

  private final no.nav.security.mock.oauth2.http.Route$Builder authorization(no.nav.security.mock.oauth2.http.Route$Builder);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: astore_3
       4: iconst_0
       5: istore        4
       7: aload_0
       8: getfield      #143                // Field grantHandlers:Ljava/util/Map;
      11: getstatic     #83                 // Field com/nimbusds/oauth2/sdk/GrantType.AUTHORIZATION_CODE:Lcom/nimbusds/oauth2/sdk/GrantType;
      14: invokeinterface #219,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: dup
      20: ldc           #221                // String null cannot be cast to non-null type no.nav.security.mock.oauth2.grant.AuthorizationCodeHandler
      22: invokestatic  #224                // Method kotlin/jvm/internal/Intrinsics.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      25: checkcast     #85                 // class no/nav/security/mock/oauth2/grant/AuthorizationCodeHandler
      28: astore        5
      30: aload_3
      31: iconst_1
      32: anewarray     #189                // class java/lang/String
      35: astore        6
      37: aload         6
      39: iconst_0
      40: ldc           #226                // String /authorize
      42: aastore
      43: aload         6
      45: new           #228                // class no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$authorization$1$1
      48: dup
      49: aload_0
      50: aload         5
      52: invokespecial #231                // Method no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$authorization$1$1."<init>":(Lno/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler;Lno/nav/security/mock/oauth2/grant/AuthorizationCodeHandler;)V
      55: checkcast     #162                // class kotlin/jvm/functions/Function1
      58: invokevirtual #204                // Method no/nav/security/mock/oauth2/http/Route$Builder.get:([Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lno/nav/security/mock/oauth2/http/Route$Builder;
      61: pop
      62: aload_3
      63: ldc           #226                // String /authorize
      65: new           #233                // class no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$authorization$1$2
      68: dup
      69: aload_0
      70: aload         5
      72: invokespecial #234                // Method no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$authorization$1$2."<init>":(Lno/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler;Lno/nav/security/mock/oauth2/grant/AuthorizationCodeHandler;)V
      75: checkcast     #162                // class kotlin/jvm/functions/Function1
      78: invokevirtual #238                // Method no/nav/security/mock/oauth2/http/Route$Builder.post:(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lno/nav/security/mock/oauth2/http/Route$Builder;
      81: pop
      82: nop
      83: aload_2
      84: areturn

  private final no.nav.security.mock.oauth2.http.Route$Builder endSession(no.nav.security.mock.oauth2.http.Route$Builder);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #189                // class java/lang/String
       5: astore_2
       6: aload_2
       7: iconst_0
       8: ldc           #247                // String /endsession
      10: aastore
      11: aload_2
      12: getstatic     #252                // Field no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$endSession$1.INSTANCE:Lno/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$endSession$1;
      15: checkcast     #162                // class kotlin/jvm/functions/Function1
      18: invokevirtual #255                // Method no/nav/security/mock/oauth2/http/Route$Builder.any:([Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lno/nav/security/mock/oauth2/http/Route$Builder;
      21: areturn

  private final no.nav.security.mock.oauth2.http.Route$Builder revocation(no.nav.security.mock.oauth2.http.Route$Builder, no.nav.security.mock.oauth2.grant.RefreshTokenManager);
    Code:
       0: aload_1
       1: ldc_w         #260                // String /revoke
       4: new           #262                // class no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$revocation$1
       7: dup
       8: aload_2
       9: invokespecial #265                // Method no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$revocation$1."<init>":(Lno/nav/security/mock/oauth2/grant/RefreshTokenManager;)V
      12: checkcast     #162                // class kotlin/jvm/functions/Function1
      15: invokevirtual #238                // Method no/nav/security/mock/oauth2/http/Route$Builder.post:(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lno/nav/security/mock/oauth2/http/Route$Builder;
      18: areturn

  private final no.nav.security.mock.oauth2.http.Route$Builder token(no.nav.security.mock.oauth2.http.Route$Builder);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: astore_3
       4: iconst_0
       5: istore        4
       7: aload_3
       8: iconst_1
       9: anewarray     #189                // class java/lang/String
      12: astore        5
      14: aload         5
      16: iconst_0
      17: ldc_w         #269                // String /token
      20: aastore
      21: aload         5
      23: getstatic     #274                // Field no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$token$1$1.INSTANCE:Lno/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$token$1$1;
      26: checkcast     #162                // class kotlin/jvm/functions/Function1
      29: invokevirtual #204                // Method no/nav/security/mock/oauth2/http/Route$Builder.get:([Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lno/nav/security/mock/oauth2/http/Route$Builder;
      32: pop
      33: aload_3
      34: ldc_w         #269                // String /token
      37: new           #276                // class no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$token$1$2
      40: dup
      41: aload_0
      42: invokespecial #277                // Method no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$token$1$2."<init>":(Lno/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler;)V
      45: checkcast     #162                // class kotlin/jvm/functions/Function1
      48: invokevirtual #238                // Method no/nav/security/mock/oauth2/http/Route$Builder.post:(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lno/nav/security/mock/oauth2/http/Route$Builder;
      51: pop
      52: nop
      53: aload_2
      54: areturn

  private final no.nav.security.mock.oauth2.http.Route$Builder staticAssets(no.nav.security.mock.oauth2.http.Route$Builder);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: astore_3
       4: iconst_0
       5: istore        4
       7: aload_0
       8: getfield      #21                 // Field config:Lno/nav/security/mock/oauth2/OAuth2Config;
      11: invokevirtual #285                // Method no/nav/security/mock/oauth2/OAuth2Config.getStaticAssetsPath:()Ljava/lang/String;
      14: ifnull        48
      17: aload_3
      18: iconst_1
      19: anewarray     #189                // class java/lang/String
      22: astore        5
      24: aload         5
      26: iconst_0
      27: ldc_w         #287                // String /static/*
      30: aastore
      31: aload         5
      33: new           #289                // class no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$staticAssets$1$1
      36: dup
      37: aload_0
      38: invokespecial #290                // Method no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$staticAssets$1$1."<init>":(Lno/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler;)V
      41: checkcast     #162                // class kotlin/jvm/functions/Function1
      44: invokevirtual #204                // Method no/nav/security/mock/oauth2/http/Route$Builder.get:([Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lno/nav/security/mock/oauth2/http/Route$Builder;
      47: pop
      48: nop
      49: aload_2
      50: areturn

  private final no.nav.security.mock.oauth2.http.Route$Builder preflight(no.nav.security.mock.oauth2.http.Route$Builder);
    Code:
       0: aload_1
       1: getstatic     #299                // Field no/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$preflight$1.INSTANCE:Lno/nav/security/mock/oauth2/http/OAuth2HttpRequestHandler$preflight$1;
       4: checkcast     #162                // class kotlin/jvm/functions/Function1
       7: invokevirtual #303                // Method no/nav/security/mock/oauth2/http/Route$Builder.options:(Lkotlin/jvm/functions/Function1;)Lno/nav/security/mock/oauth2/http/Route$Builder;
      10: areturn

  private final no.nav.security.mock.oauth2.token.OAuth2TokenCallback tokenCallbackFromQueueOrDefault(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #66                 // Field tokenCallbackQueue:Ljava/util/concurrent/BlockingQueue;
       5: invokeinterface #310,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.peek:()Ljava/lang/Object;
      10: checkcast     #312                // class no/nav/security/mock/oauth2/token/OAuth2TokenCallback
      13: dup
      14: ifnull        25
      17: invokeinterface #315,  1          // InterfaceMethod no/nav/security/mock/oauth2/token/OAuth2TokenCallback.issuerId:()Ljava/lang/String;
      22: goto          27
      25: pop
      26: aconst_null
      27: invokestatic  #319                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      30: ifeq          55
      33: aload_0
      34: getfield      #66                 // Field tokenCallbackQueue:Ljava/util/concurrent/BlockingQueue;
      37: invokeinterface #322,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.take:()Ljava/lang/Object;
      42: dup
      43: ldc_w         #324                // String take(...)
      46: invokestatic  #327                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      49: checkcast     #312                // class no/nav/security/mock/oauth2/token/OAuth2TokenCallback
      52: goto          152
      55: aload_0
      56: getfield      #21                 // Field config:Lno/nav/security/mock/oauth2/OAuth2Config;
      59: invokevirtual #331                // Method no/nav/security/mock/oauth2/OAuth2Config.getTokenCallbacks:()Ljava/util/Set;
      62: checkcast     #333                // class java/lang/Iterable
      65: astore_2
      66: iconst_0
      67: istore_3
      68: aload_2
      69: invokeinterface #337,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      74: astore        4
      76: aload         4
      78: invokeinterface #343,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      83: ifeq          124
      86: aload         4
      88: invokeinterface #346,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      93: astore        5
      95: aload         5
      97: checkcast     #312                // class no/nav/security/mock/oauth2/token/OAuth2TokenCallback
     100: astore        6
     102: iconst_0
     103: istore        7
     105: aload         6
     107: invokeinterface #315,  1          // InterfaceMethod no/nav/security/mock/oauth2/token/OAuth2TokenCallback.issuerId:()Ljava/lang/String;
     112: aload_1
     113: invokestatic  #319                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     116: ifeq          76
     119: aload         5
     121: goto          125
     124: aconst_null
     125: checkcast     #312                // class no/nav/security/mock/oauth2/token/OAuth2TokenCallback
     128: dup
     129: ifnonnull     152
     132: pop
     133: new           #348                // class no/nav/security/mock/oauth2/token/DefaultOAuth2TokenCallback
     136: dup
     137: aload_1
     138: aconst_null
     139: aconst_null
     140: aconst_null
     141: aconst_null
     142: lconst_0
     143: bipush        62
     145: aconst_null
     146: invokespecial #351                // Method no/nav/security/mock/oauth2/token/DefaultOAuth2TokenCallback."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;JILkotlin/jvm/internal/DefaultConstructorMarker;)V
     149: checkcast     #312                // class no/nav/security/mock/oauth2/token/OAuth2TokenCallback
     152: areturn

  public static final no.nav.security.mock.oauth2.OAuth2Config access$getConfig$p(no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler);
    Code:
       0: aload_0
       1: getfield      #21                 // Field config:Lno/nav/security/mock/oauth2/OAuth2Config;
       4: areturn

  public static final no.nav.security.mock.oauth2.login.LoginRequestHandler access$getLoginRequestHandler$p(no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler);
    Code:
       0: aload_0
       1: getfield      #36                 // Field loginRequestHandler:Lno/nav/security/mock/oauth2/login/LoginRequestHandler;
       4: areturn

  public static final no.nav.security.mock.oauth2.token.OAuth2TokenCallback access$tokenCallbackFromQueueOrDefault(no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #368                // Method tokenCallbackFromQueueOrDefault:(Ljava/lang/String;)Lno/nav/security/mock/oauth2/token/OAuth2TokenCallback;
       5: areturn

  public static final java.util.Map access$getGrantHandlers$p(no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler);
    Code:
       0: aload_0
       1: getfield      #143                // Field grantHandlers:Ljava/util/Map;
       4: areturn

  public static final kotlin.jvm.functions.Function2 access$getExceptionHandler$p(no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler);
    Code:
       0: aload_0
       1: getfield      #155                // Field exceptionHandler:Lkotlin/jvm/functions/Function2;
       4: areturn

  public static final no.nav.security.mock.oauth2.http.Route$Builder access$wellKnown(no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler, no.nav.security.mock.oauth2.http.Route$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #376                // Method wellKnown:(Lno/nav/security/mock/oauth2/http/Route$Builder;)Lno/nav/security/mock/oauth2/http/Route$Builder;
       5: areturn

  public static final no.nav.security.mock.oauth2.http.Route$Builder access$jwks(no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler, no.nav.security.mock.oauth2.http.Route$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #380                // Method jwks:(Lno/nav/security/mock/oauth2/http/Route$Builder;)Lno/nav/security/mock/oauth2/http/Route$Builder;
       5: areturn

  public static final no.nav.security.mock.oauth2.http.Route$Builder access$authorization(no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler, no.nav.security.mock.oauth2.http.Route$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #383                // Method authorization:(Lno/nav/security/mock/oauth2/http/Route$Builder;)Lno/nav/security/mock/oauth2/http/Route$Builder;
       5: areturn

  public static final no.nav.security.mock.oauth2.http.Route$Builder access$token(no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler, no.nav.security.mock.oauth2.http.Route$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #386                // Method token:(Lno/nav/security/mock/oauth2/http/Route$Builder;)Lno/nav/security/mock/oauth2/http/Route$Builder;
       5: areturn

  public static final no.nav.security.mock.oauth2.http.Route$Builder access$endSession(no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler, no.nav.security.mock.oauth2.http.Route$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #389                // Method endSession:(Lno/nav/security/mock/oauth2/http/Route$Builder;)Lno/nav/security/mock/oauth2/http/Route$Builder;
       5: areturn

  public static final no.nav.security.mock.oauth2.http.Route$Builder access$revocation(no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler, no.nav.security.mock.oauth2.http.Route$Builder, no.nav.security.mock.oauth2.grant.RefreshTokenManager);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #393                // Method revocation:(Lno/nav/security/mock/oauth2/http/Route$Builder;Lno/nav/security/mock/oauth2/grant/RefreshTokenManager;)Lno/nav/security/mock/oauth2/http/Route$Builder;
       6: areturn

  public static final no.nav.security.mock.oauth2.grant.RefreshTokenManager access$getRefreshTokenManager$p(no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler);
    Code:
       0: aload_0
       1: getfield      #75                 // Field refreshTokenManager:Lno/nav/security/mock/oauth2/grant/RefreshTokenManager;
       4: areturn

  public static final no.nav.security.mock.oauth2.http.Route$Builder access$preflight(no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler, no.nav.security.mock.oauth2.http.Route$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #398                // Method preflight:(Lno/nav/security/mock/oauth2/http/Route$Builder;)Lno/nav/security/mock/oauth2/http/Route$Builder;
       5: areturn

  public static final no.nav.security.mock.oauth2.http.Route$Builder access$staticAssets(no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler, no.nav.security.mock.oauth2.http.Route$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #401                // Method staticAssets:(Lno/nav/security/mock/oauth2/http/Route$Builder;)Lno/nav/security/mock/oauth2/http/Route$Builder;
       5: areturn

  public static final no.nav.security.mock.oauth2.debugger.DebuggerRequestHandler access$getDebuggerRequestHandler$p(no.nav.security.mock.oauth2.http.OAuth2HttpRequestHandler);
    Code:
       0: aload_0
       1: getfield      #57                 // Field debuggerRequestHandler:Lno/nav/security/mock/oauth2/debugger/DebuggerRequestHandler;
       4: areturn
}
