Compiled from "OAuth2HttpServer.kt"
public final class no.nav.security.mock.oauth2.http.MockWebServerWrapper$MockWebServerDispatcher extends okhttp3.mockwebserver.Dispatcher {
  private final kotlin.jvm.functions.Function1<no.nav.security.mock.oauth2.http.OAuth2HttpRequest, no.nav.security.mock.oauth2.http.OAuth2HttpResponse> requestHandler;

  private final java.util.concurrent.BlockingQueue<okhttp3.mockwebserver.MockResponse> responseQueue;

  public no.nav.security.mock.oauth2.http.MockWebServerWrapper$MockWebServerDispatcher(kotlin.jvm.functions.Function1<? super no.nav.security.mock.oauth2.http.OAuth2HttpRequest, no.nav.security.mock.oauth2.http.OAuth2HttpResponse>, java.util.concurrent.BlockingQueue<okhttp3.mockwebserver.MockResponse>);
    Code:
       0: aload_1
       1: ldc           #10                 // String requestHandler
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #18                 // String responseQueue
       9: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokespecial #21                 // Method okhttp3/mockwebserver/Dispatcher."<init>":()V
      16: aload_0
      17: aload_1
      18: putfield      #24                 // Field requestHandler:Lkotlin/jvm/functions/Function1;
      21: aload_0
      22: aload_2
      23: putfield      #27                 // Field responseQueue:Ljava/util/concurrent/BlockingQueue;
      26: return

  public no.nav.security.mock.oauth2.http.MockWebServerWrapper$MockWebServerDispatcher(kotlin.jvm.functions.Function1, java.util.concurrent.BlockingQueue, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload_3
       1: iconst_2
       2: iand
       3: ifeq          17
       6: new           #32                 // class java/util/concurrent/LinkedBlockingQueue
       9: dup
      10: invokespecial #33                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      13: checkcast     #35                 // class java/util/concurrent/BlockingQueue
      16: astore_2
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokespecial #37                 // Method "<init>":(Lkotlin/jvm/functions/Function1;Ljava/util/concurrent/BlockingQueue;)V
      23: return

  public okhttp3.mockwebserver.MockResponse dispatch(okhttp3.mockwebserver.RecordedRequest);
    Code:
       0: aload_1
       1: ldc           #41                 // String request
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #27                 // Field responseQueue:Ljava/util/concurrent/BlockingQueue;
      10: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.peek:()Ljava/lang/Object;
      15: checkcast     #47                 // class okhttp3/mockwebserver/MockResponse
      18: dup
      19: ifnull        41
      22: astore_3
      23: iconst_0
      24: istore        4
      26: aload_0
      27: getfield      #27                 // Field responseQueue:Ljava/util/concurrent/BlockingQueue;
      30: invokeinterface #50,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.take:()Ljava/lang/Object;
      35: checkcast     #47                 // class okhttp3/mockwebserver/MockResponse
      38: goto          43
      41: pop
      42: aconst_null
      43: astore_2
      44: aload_2
      45: ifnonnull     71
      48: aload_0
      49: aload_0
      50: getfield      #24                 // Field requestHandler:Lkotlin/jvm/functions/Function1;
      53: aload_1
      54: invokestatic  #56                 // Method no/nav/security/mock/oauth2/extensions/AsOAuth2HttpRequestKt.asOAuth2HttpRequest:(Lokhttp3/mockwebserver/RecordedRequest;)Lno/nav/security/mock/oauth2/http/OAuth2HttpRequest;
      57: invokeinterface #62,  2           // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
      62: checkcast     #64                 // class no/nav/security/mock/oauth2/http/OAuth2HttpResponse
      65: invokespecial #68                 // Method toMockResponse:(Lno/nav/security/mock/oauth2/http/OAuth2HttpResponse;)Lokhttp3/mockwebserver/MockResponse;
      68: goto          72
      71: aload_2
      72: areturn

  private final okhttp3.mockwebserver.MockResponse toMockResponse(no.nav.security.mock.oauth2.http.OAuth2HttpResponse);
    Code:
       0: new           #47                 // class okhttp3/mockwebserver/MockResponse
       3: dup
       4: invokespecial #74                 // Method okhttp3/mockwebserver/MockResponse."<init>":()V
       7: aload_1
       8: invokevirtual #78                 // Method no/nav/security/mock/oauth2/http/OAuth2HttpResponse.getHeaders:()Lokhttp3/Headers;
      11: invokevirtual #82                 // Method okhttp3/mockwebserver/MockResponse.setHeaders:(Lokhttp3/Headers;)Lokhttp3/mockwebserver/MockResponse;
      14: aload_1
      15: invokevirtual #86                 // Method no/nav/security/mock/oauth2/http/OAuth2HttpResponse.getStatus:()I
      18: invokevirtual #90                 // Method okhttp3/mockwebserver/MockResponse.setResponseCode:(I)Lokhttp3/mockwebserver/MockResponse;
      21: astore_2
      22: iconst_0
      23: istore_3
      24: nop
      25: aload_1
      26: invokevirtual #94                 // Method no/nav/security/mock/oauth2/http/OAuth2HttpResponse.getBody:()Ljava/lang/String;
      29: ifnull        43
      32: aload_2
      33: aload_1
      34: invokevirtual #94                 // Method no/nav/security/mock/oauth2/http/OAuth2HttpResponse.getBody:()Ljava/lang/String;
      37: invokevirtual #98                 // Method okhttp3/mockwebserver/MockResponse.setBody:(Ljava/lang/String;)Lokhttp3/mockwebserver/MockResponse;
      40: goto          77
      43: aload_1
      44: invokevirtual #102                // Method no/nav/security/mock/oauth2/http/OAuth2HttpResponse.getBytesBody:()[B
      47: ifnull        71
      50: aload_2
      51: new           #104                // class okio/Buffer
      54: dup
      55: invokespecial #105                // Method okio/Buffer."<init>":()V
      58: aload_1
      59: invokevirtual #102                // Method no/nav/security/mock/oauth2/http/OAuth2HttpResponse.getBytesBody:()[B
      62: invokevirtual #109                // Method okio/Buffer.write:([B)Lokio/Buffer;
      65: invokevirtual #112                // Method okhttp3/mockwebserver/MockResponse.setBody:(Lokio/Buffer;)Lokhttp3/mockwebserver/MockResponse;
      68: goto          77
      71: aload_2
      72: ldc           #114                // String
      74: invokevirtual #98                 // Method okhttp3/mockwebserver/MockResponse.setBody:(Ljava/lang/String;)Lokhttp3/mockwebserver/MockResponse;
      77: nop
      78: nop
      79: areturn
}
