Compiled from "AbstractModelCommand.java"
public abstract class org.jreleaser.cli.AbstractModelCommand extends org.jreleaser.cli.AbstractLoggingCommand {
  java.nio.file.Path configFile;

  boolean gitRootSearch;

  java.lang.String[] properties;

  org.jreleaser.cli.Main parent;

  java.nio.file.Path actualConfigFile;

  java.nio.file.Path actualBasedir;

  public org.jreleaser.cli.AbstractModelCommand();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jreleaser/cli/AbstractLoggingCommand."<init>":()V
       4: return

  protected org.jreleaser.cli.Main parent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lorg/jreleaser/cli/Main;
       4: areturn

  protected void execute();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method resolveConfigFile:()V
       4: aload_0
       5: invokespecial #4                  // Method resolveBasedir:()V
       8: aload_0
       9: invokevirtual #5                  // Method initLogger:()V
      12: aload_0
      13: getfield      #6                  // Field logger:Lorg/jreleaser/logging/JReleaserLogger;
      16: invokestatic  #7                  // Method org/jreleaser/util/PlatformUtils.resolveCurrentPlatform:(Lorg/jreleaser/logging/JReleaserLogger;)V
      19: aload_0
      20: getfield      #6                  // Field logger:Lorg/jreleaser/logging/JReleaserLogger;
      23: ldc           #8                  // String JReleaser {}
      25: iconst_1
      26: anewarray     #9                  // class java/lang/Object
      29: dup
      30: iconst_0
      31: invokestatic  #10                 // Method org/jreleaser/model/JReleaserVersion.getPlainVersion:()Ljava/lang/String;
      34: aastore
      35: invokeinterface #11,  3           // InterfaceMethod org/jreleaser/logging/JReleaserLogger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      40: aload_0
      41: getfield      #6                  // Field logger:Lorg/jreleaser/logging/JReleaserLogger;
      44: invokeinterface #12,  1           // InterfaceMethod org/jreleaser/logging/JReleaserLogger.getTracer:()Ljava/io/PrintWriter;
      49: invokestatic  #13                 // Method org/jreleaser/model/JReleaserVersion.banner:(Ljava/io/PrintWriter;)V
      52: aload_0
      53: getfield      #6                  // Field logger:Lorg/jreleaser/logging/JReleaserLogger;
      56: aload_0
      57: ldc           #14                 // String TEXT_config_file
      59: iconst_0
      60: anewarray     #9                  // class java/lang/Object
      63: invokevirtual #15                 // Method $:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      66: iconst_1
      67: anewarray     #9                  // class java/lang/Object
      70: dup
      71: iconst_0
      72: aload_0
      73: getfield      #16                 // Field actualConfigFile:Ljava/nio/file/Path;
      76: aastore
      77: invokeinterface #11,  3           // InterfaceMethod org/jreleaser/logging/JReleaserLogger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
      82: aload_0
      83: getfield      #6                  // Field logger:Lorg/jreleaser/logging/JReleaserLogger;
      86: invokeinterface #17,  1           // InterfaceMethod org/jreleaser/logging/JReleaserLogger.increaseIndent:()V
      91: aload_0
      92: getfield      #6                  // Field logger:Lorg/jreleaser/logging/JReleaserLogger;
      95: aload_0
      96: ldc           #18                 // String TEXT_basedir_set
      98: iconst_0
      99: anewarray     #9                  // class java/lang/Object
     102: invokevirtual #15                 // Method $:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     105: iconst_1
     106: anewarray     #9                  // class java/lang/Object
     109: dup
     110: iconst_0
     111: aload_0
     112: getfield      #19                 // Field actualBasedir:Ljava/nio/file/Path;
     115: invokeinterface #20,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
     120: aastore
     121: invokeinterface #11,  3           // InterfaceMethod org/jreleaser/logging/JReleaserLogger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     126: aload_0
     127: getfield      #6                  // Field logger:Lorg/jreleaser/logging/JReleaserLogger;
     130: invokeinterface #21,  1           // InterfaceMethod org/jreleaser/logging/JReleaserLogger.decreaseIndent:()V
     135: aload_0
     136: aload_0
     137: invokevirtual #22                 // Method createContext:()Lorg/jreleaser/model/internal/JReleaserContext;
     140: invokevirtual #23                 // Method doExecute:(Lorg/jreleaser/model/internal/JReleaserContext;)V
     143: return

  private void resolveConfigFile();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #24                 // Field configFile:Ljava/nio/file/Path;
       5: if_acmpeq     24
       8: aload_0
       9: aload_0
      10: getfield      #24                 // Field configFile:Ljava/nio/file/Path;
      13: invokeinterface #25,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
      18: putfield      #16                 // Field actualConfigFile:Ljava/nio/file/Path;
      21: goto          80
      24: ldc           #26                 // String .
      26: iconst_0
      27: anewarray     #27                 // class java/lang/String
      30: invokestatic  #28                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      33: invokeinterface #25,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
      38: astore_1
      39: aload_0
      40: aload_1
      41: invokespecial #29                 // Method resolveConfigFileAt:(Ljava/nio/file/Path;)Ljava/util/Optional;
      44: astore_2
      45: aload_2
      46: invokevirtual #30                 // Method java/util/Optional.isPresent:()Z
      49: ifne          68
      52: aload_0
      53: getfield      #31                 // Field basedir:Ljava/nio/file/Path;
      56: ifnull        68
      59: aload_0
      60: aload_0
      61: getfield      #31                 // Field basedir:Ljava/nio/file/Path;
      64: invokespecial #29                 // Method resolveConfigFileAt:(Ljava/nio/file/Path;)Ljava/util/Optional;
      67: astore_2
      68: aload_0
      69: aload_2
      70: aconst_null
      71: invokevirtual #32                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      74: checkcast     #33                 // class java/nio/file/Path
      77: putfield      #16                 // Field actualConfigFile:Ljava/nio/file/Path;
      80: aconst_null
      81: aload_0
      82: getfield      #16                 // Field actualConfigFile:Ljava/nio/file/Path;
      85: if_acmpeq     102
      88: aload_0
      89: getfield      #16                 // Field actualConfigFile:Ljava/nio/file/Path;
      92: iconst_0
      93: anewarray     #34                 // class java/nio/file/LinkOption
      96: invokestatic  #35                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      99: ifne          175
     102: aload_0
     103: getfield      #36                 // Field spec:Lpicocli/CommandLine$Model$CommandSpec;
     106: invokevirtual #37                 // Method picocli/CommandLine$Model$CommandSpec.commandLine:()Lpicocli/CommandLine;
     109: invokevirtual #38                 // Method picocli/CommandLine.getErr:()Ljava/io/PrintWriter;
     112: aload_0
     113: getfield      #36                 // Field spec:Lpicocli/CommandLine$Model$CommandSpec;
     116: invokevirtual #37                 // Method picocli/CommandLine$Model$CommandSpec.commandLine:()Lpicocli/CommandLine;
     119: invokevirtual #39                 // Method picocli/CommandLine.getColorScheme:()Lpicocli/CommandLine$Help$ColorScheme;
     122: aload_0
     123: ldc           #40                 // String ERROR_missing_config_file
     125: iconst_1
     126: anewarray     #9                  // class java/lang/Object
     129: dup
     130: iconst_0
     131: ldc           #41                 // String |
     133: aload_0
     134: invokespecial #42                 // Method getSupportedConfigFormats:()Ljava/util/Set;
     137: invokestatic  #43                 // Method java/lang/String.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;
     140: aastore
     141: invokevirtual #15                 // Method $:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     144: invokevirtual #44                 // Method picocli/CommandLine$Help$ColorScheme.errorText:(Ljava/lang/String;)Lpicocli/CommandLine$Help$Ansi$Text;
     147: invokevirtual #45                 // Method java/io/PrintWriter.println:(Ljava/lang/Object;)V
     150: aload_0
     151: getfield      #36                 // Field spec:Lpicocli/CommandLine$Model$CommandSpec;
     154: invokevirtual #37                 // Method picocli/CommandLine$Model$CommandSpec.commandLine:()Lpicocli/CommandLine;
     157: aload_0
     158: getfield      #2                  // Field parent:Lorg/jreleaser/cli/Main;
     161: getfield      #46                 // Field org/jreleaser/cli/Main.out:Ljava/io/PrintWriter;
     164: invokevirtual #47                 // Method picocli/CommandLine.usage:(Ljava/io/PrintWriter;)V
     167: new           #48                 // class org/jreleaser/cli/HaltExecutionException
     170: dup
     171: invokespecial #49                 // Method org/jreleaser/cli/HaltExecutionException."<init>":()V
     174: athrow
     175: return

  private java.util.Optional<java.nio.file.Path> resolveConfigFileAt(java.nio.file.Path);
    Code:
       0: ldc           #50                 // class org/jreleaser/config/JReleaserConfigParser
       2: ldc           #50                 // class org/jreleaser/config/JReleaserConfigParser
       4: invokevirtual #51                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       7: invokestatic  #52                 // Method java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;
      10: astore_2
      11: aload_2
      12: invokevirtual #53                 // Method java/util/ServiceLoader.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: aload_3
      17: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          95
      25: aload_3
      26: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #50                 // class org/jreleaser/config/JReleaserConfigParser
      34: astore        4
      36: aload_1
      37: new           #56                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #58                 // String jreleaser.
      46: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload         4
      51: invokeinterface #60,  1           // InterfaceMethod org/jreleaser/config/JReleaserConfigParser.getPreferredFileExtension:()Ljava/lang/String;
      56: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokeinterface #62,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      67: invokeinterface #25,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
      72: astore        5
      74: aload         5
      76: iconst_0
      77: anewarray     #34                 // class java/nio/file/LinkOption
      80: invokestatic  #35                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      83: ifeq          92
      86: aload         5
      88: invokestatic  #63                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      91: areturn
      92: goto          16
      95: invokestatic  #64                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      98: areturn

  private void resolveBasedir();
    Code:
       0: aload_0
       1: aconst_null
       2: aload_0
       3: getfield      #31                 // Field basedir:Ljava/nio/file/Path;
       6: if_acmpeq     16
       9: aload_0
      10: getfield      #31                 // Field basedir:Ljava/nio/file/Path;
      13: goto          30
      16: aload_0
      17: getfield      #16                 // Field actualConfigFile:Ljava/nio/file/Path;
      20: invokeinterface #20,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
      25: invokeinterface #65,  1           // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
      30: invokeinterface #25,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
      35: putfield      #19                 // Field actualBasedir:Ljava/nio/file/Path;
      38: aload_0
      39: getfield      #19                 // Field actualBasedir:Ljava/nio/file/Path;
      42: iconst_0
      43: anewarray     #34                 // class java/nio/file/LinkOption
      46: invokestatic  #35                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      49: ifne          118
      52: aload_0
      53: getfield      #36                 // Field spec:Lpicocli/CommandLine$Model$CommandSpec;
      56: invokevirtual #37                 // Method picocli/CommandLine$Model$CommandSpec.commandLine:()Lpicocli/CommandLine;
      59: invokevirtual #38                 // Method picocli/CommandLine.getErr:()Ljava/io/PrintWriter;
      62: aload_0
      63: getfield      #36                 // Field spec:Lpicocli/CommandLine$Model$CommandSpec;
      66: invokevirtual #37                 // Method picocli/CommandLine$Model$CommandSpec.commandLine:()Lpicocli/CommandLine;
      69: invokevirtual #39                 // Method picocli/CommandLine.getColorScheme:()Lpicocli/CommandLine$Help$ColorScheme;
      72: aload_0
      73: ldc           #66                 // String ERROR_missing_required_option
      75: iconst_1
      76: anewarray     #9                  // class java/lang/Object
      79: dup
      80: iconst_0
      81: ldc           #67                 // String --basedir=<basedir>
      83: aastore
      84: invokevirtual #15                 // Method $:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      87: invokevirtual #44                 // Method picocli/CommandLine$Help$ColorScheme.errorText:(Ljava/lang/String;)Lpicocli/CommandLine$Help$Ansi$Text;
      90: invokevirtual #45                 // Method java/io/PrintWriter.println:(Ljava/lang/Object;)V
      93: aload_0
      94: getfield      #36                 // Field spec:Lpicocli/CommandLine$Model$CommandSpec;
      97: invokevirtual #37                 // Method picocli/CommandLine$Model$CommandSpec.commandLine:()Lpicocli/CommandLine;
     100: aload_0
     101: getfield      #2                  // Field parent:Lorg/jreleaser/cli/Main;
     104: getfield      #46                 // Field org/jreleaser/cli/Main.out:Ljava/io/PrintWriter;
     107: invokevirtual #47                 // Method picocli/CommandLine.usage:(Ljava/io/PrintWriter;)V
     110: new           #48                 // class org/jreleaser/cli/HaltExecutionException
     113: dup
     114: invokespecial #49                 // Method org/jreleaser/cli/HaltExecutionException."<init>":()V
     117: athrow
     118: return

  protected abstract void doExecute(org.jreleaser.model.internal.JReleaserContext);

  protected org.jreleaser.model.internal.JReleaserContext createContext();
    Code:
       0: aload_0
       1: getfield      #6                  // Field logger:Lorg/jreleaser/logging/JReleaserLogger;
       4: aload_0
       5: getfield      #16                 // Field actualConfigFile:Ljava/nio/file/Path;
       8: invokestatic  #68                 // Method org/jreleaser/engine/context/ContextCreator.resolveModel:(Lorg/jreleaser/logging/JReleaserLogger;Ljava/nio/file/Path;)Lorg/jreleaser/model/internal/JReleaserModel;
      11: astore_1
      12: new           #69                 // class org/jreleaser/model/internal/environment/Environment$PropertiesPropertiesSource
      15: dup
      16: aload_0
      17: invokevirtual #70                 // Method collectProperties:()Ljava/util/Properties;
      20: invokespecial #71                 // Method org/jreleaser/model/internal/environment/Environment$PropertiesPropertiesSource."<init>":(Ljava/util/Properties;)V
      23: astore_2
      24: aload_1
      25: invokevirtual #72                 // Method org/jreleaser/model/internal/JReleaserModel.getEnvironment:()Lorg/jreleaser/model/internal/environment/Environment;
      28: aload_2
      29: invokevirtual #73                 // Method org/jreleaser/model/internal/environment/Environment.setPropertiesSource:(Lorg/jreleaser/model/internal/environment/Environment$PropertiesSource;)V
      32: aload_0
      33: getfield      #6                  // Field logger:Lorg/jreleaser/logging/JReleaserLogger;
      36: aload_0
      37: aload_0
      38: getfield      #16                 // Field actualConfigFile:Ljava/nio/file/Path;
      41: invokevirtual #74                 // Method resolveConfigurer:(Ljava/nio/file/Path;)Lorg/jreleaser/model/internal/JReleaserContext$Configurer;
      44: aload_0
      45: invokevirtual #75                 // Method getMode:()Lorg/jreleaser/model/api/JReleaserContext$Mode;
      48: aload_1
      49: aload_0
      50: getfield      #19                 // Field actualBasedir:Ljava/nio/file/Path;
      53: aload_0
      54: invokevirtual #76                 // Method getOutputDirectory:()Ljava/nio/file/Path;
      57: aload_0
      58: invokevirtual #77                 // Method dryrun:()Z
      61: aload_0
      62: getfield      #78                 // Field gitRootSearch:Z
      65: aload_0
      66: invokevirtual #79                 // Method collectSelectedPlatforms:()Ljava/util/List;
      69: invokestatic  #80                 // Method org/jreleaser/engine/context/ContextCreator.create:(Lorg/jreleaser/logging/JReleaserLogger;Lorg/jreleaser/model/internal/JReleaserContext$Configurer;Lorg/jreleaser/model/api/JReleaserContext$Mode;Lorg/jreleaser/model/internal/JReleaserModel;Ljava/nio/file/Path;Ljava/nio/file/Path;ZZLjava/util/List;)Lorg/jreleaser/model/internal/JReleaserContext;
      72: areturn

  protected org.jreleaser.model.internal.JReleaserContext$Configurer resolveConfigurer(java.nio.file.Path);
    Code:
       0: aload_1
       1: invokeinterface #81,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
       6: invokeinterface #82,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      11: invokestatic  #83                 // Method org/jreleaser/util/StringUtils.getFilenameExtension:(Ljava/lang/String;)Ljava/lang/String;
      14: astore_2
      15: iconst_m1
      16: istore_3
      17: aload_2
      18: invokevirtual #84                 // Method java/lang/String.hashCode:()I
      21: lookupswitch  { // 4
                119768: 64
               3271912: 106
               3565914: 92
               3701415: 78
               default: 117
          }
      64: aload_2
      65: ldc           #85                 // String yml
      67: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      70: ifeq          117
      73: iconst_0
      74: istore_3
      75: goto          117
      78: aload_2
      79: ldc           #87                 // String yaml
      81: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      84: ifeq          117
      87: iconst_1
      88: istore_3
      89: goto          117
      92: aload_2
      93: ldc           #88                 // String toml
      95: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      98: ifeq          117
     101: iconst_2
     102: istore_3
     103: goto          117
     106: aload_2
     107: ldc           #89                 // String json
     109: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     112: ifeq          117
     115: iconst_3
     116: istore_3
     117: iload_3
     118: tableswitch   { // 0 to 3
                     0: 148
                     1: 148
                     2: 152
                     3: 156
               default: 160
          }
     148: getstatic     #90                 // Field org/jreleaser/model/internal/JReleaserContext$Configurer.CLI_YAML:Lorg/jreleaser/model/internal/JReleaserContext$Configurer;
     151: areturn
     152: getstatic     #91                 // Field org/jreleaser/model/internal/JReleaserContext$Configurer.CLI_TOML:Lorg/jreleaser/model/internal/JReleaserContext$Configurer;
     155: areturn
     156: getstatic     #92                 // Field org/jreleaser/model/internal/JReleaserContext$Configurer.CLI_JSON:Lorg/jreleaser/model/internal/JReleaserContext$Configurer;
     159: areturn
     160: new           #93                 // class java/lang/IllegalArgumentException
     163: dup
     164: aload_0
     165: ldc           #94                 // String ERROR_invalid_config_format
     167: iconst_1
     168: anewarray     #9                  // class java/lang/Object
     171: dup
     172: iconst_0
     173: aload_1
     174: invokeinterface #81,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
     179: aastore
     180: invokevirtual #15                 // Method $:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     183: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     186: athrow

  protected java.nio.file.Path getOutputDirectory();
    Code:
       0: aload_0
       1: getfield      #19                 // Field actualBasedir:Ljava/nio/file/Path;
       4: aload_0
       5: getfield      #96                 // Field outputdir:Ljava/nio/file/Path;
       8: ldc           #97                 // String out
      10: invokestatic  #98                 // Method org/jreleaser/util/FileUtils.resolveOutputDirectory:(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;)Ljava/nio/file/Path;
      13: areturn

  protected boolean dryrun();
    Code:
       0: iconst_0
       1: ireturn

  private java.util.Set<java.lang.String> getSupportedConfigFormats();
    Code:
       0: new           #99                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #100                // Method java/util/LinkedHashSet."<init>":()V
       7: astore_1
       8: ldc           #50                 // class org/jreleaser/config/JReleaserConfigParser
      10: ldc           #50                 // class org/jreleaser/config/JReleaserConfigParser
      12: invokevirtual #51                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      15: invokestatic  #52                 // Method java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;
      18: astore_2
      19: aload_2
      20: invokevirtual #53                 // Method java/util/ServiceLoader.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          79
      33: aload_3
      34: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #50                 // class org/jreleaser/config/JReleaserConfigParser
      42: astore        4
      44: aload_1
      45: new           #56                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #26                 // String .
      54: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload         4
      59: invokeinterface #60,  1           // InterfaceMethod org/jreleaser/config/JReleaserConfigParser.getPreferredFileExtension:()Ljava/lang/String;
      64: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokeinterface #101,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      75: pop
      76: goto          24
      79: aload_1
      80: areturn

  protected org.jreleaser.model.api.JReleaserContext$Mode getMode();
    Code:
       0: getstatic     #102                // Field org/jreleaser/model/api/JReleaserContext$Mode.FULL:Lorg/jreleaser/model/api/JReleaserContext$Mode;
       3: areturn

  protected java.util.List<java.lang.String> collectSelectedPlatforms();
    Code:
       0: invokestatic  #103                // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: areturn

  protected java.util.Properties collectProperties();
    Code:
       0: new           #104                // class java/util/Properties
       3: dup
       4: invokespecial #105                // Method java/util/Properties."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #106                // Field properties:[Ljava/lang/String;
      12: ifnull        146
      15: aload_0
      16: getfield      #106                // Field properties:[Ljava/lang/String;
      19: arraylength
      20: ifle          146
      23: aload_0
      24: getfield      #106                // Field properties:[Ljava/lang/String;
      27: astore_2
      28: aload_2
      29: arraylength
      30: istore_3
      31: iconst_0
      32: istore        4
      34: iload         4
      36: iload_3
      37: if_icmpge     146
      40: aload_2
      41: iload         4
      43: aaload
      44: astore        5
      46: aload         5
      48: ldc           #107                // String =
      50: invokevirtual #108                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      53: ifeq          130
      56: aload         5
      58: bipush        61
      60: invokevirtual #109                // Method java/lang/String.indexOf:(I)I
      63: istore        6
      65: iload         6
      67: ifeq          82
      70: iload         6
      72: aload_0
      73: getfield      #106                // Field properties:[Ljava/lang/String;
      76: arraylength
      77: iconst_1
      78: isub
      79: if_icmpne     105
      82: new           #93                 // class java/lang/IllegalArgumentException
      85: dup
      86: aload_0
      87: ldc           #110                // String ERROR_invalid_property
      89: iconst_1
      90: anewarray     #9                  // class java/lang/Object
      93: dup
      94: iconst_0
      95: aload         5
      97: aastore
      98: invokevirtual #15                 // Method $:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     101: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_1
     106: aload         5
     108: iconst_0
     109: iload         6
     111: invokevirtual #111                // Method java/lang/String.substring:(II)Ljava/lang/String;
     114: aload         5
     116: iload         6
     118: iconst_1
     119: iadd
     120: invokevirtual #112                // Method java/lang/String.substring:(I)Ljava/lang/String;
     123: invokevirtual #113                // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     126: pop
     127: goto          140
     130: aload_1
     131: aload         5
     133: getstatic     #114                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     136: invokevirtual #113                // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     139: pop
     140: iinc          4, 1
     143: goto          34
     146: aload_1
     147: areturn

  public java.lang.Integer call();
    Code:
       0: aload_0
       1: invokespecial #115                // Method org/jreleaser/cli/AbstractLoggingCommand.call:()Ljava/lang/Integer;
       4: areturn
}
