Compiled from "PgSchemaOption.java"
public class net.sf.xsd2pgschema.PgSchemaOption {
  boolean rel_model_ext;

  boolean rel_data_ext;

  public boolean wild_card;

  public boolean document_key;

  public boolean serial_key;

  public boolean xpath_key;

  public boolean case_sense;

  public boolean ddl_output;

  public boolean retain_key;

  public boolean no_field_anno;

  public boolean validate;

  public boolean append;

  public java.lang.String hash_algorithm;

  public net.sf.xsd2pgschema.PgHashSize hash_size;

  public net.sf.xsd2pgschema.PgSerSize ser_size;

  public net.sf.xsd2pgschema.PgSchemaOption(boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field rel_model_ext:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field rel_data_ext:Z
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field wild_card:Z
      19: aload_0
      20: iconst_1
      21: putfield      #5                  // Field document_key:Z
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field serial_key:Z
      29: aload_0
      30: iconst_0
      31: putfield      #7                  // Field xpath_key:Z
      34: aload_0
      35: iconst_1
      36: putfield      #8                  // Field case_sense:Z
      39: aload_0
      40: iconst_0
      41: putfield      #9                  // Field ddl_output:Z
      44: aload_0
      45: iconst_1
      46: putfield      #10                 // Field retain_key:Z
      49: aload_0
      50: iconst_1
      51: putfield      #11                 // Field no_field_anno:Z
      54: aload_0
      55: iconst_0
      56: putfield      #12                 // Field validate:Z
      59: aload_0
      60: iconst_0
      61: putfield      #13                 // Field append:Z
      64: aload_0
      65: ldc           #15                 // String SHA-1
      67: putfield      #16                 // Field hash_algorithm:Ljava/lang/String;
      70: aload_0
      71: invokestatic  #17                 // Method net/sf/xsd2pgschema/PgHashSize.defaultSize:()Lnet/sf/xsd2pgschema/PgHashSize;
      74: putfield      #18                 // Field hash_size:Lnet/sf/xsd2pgschema/PgHashSize;
      77: aload_0
      78: invokestatic  #19                 // Method net/sf/xsd2pgschema/PgSerSize.defaultSize:()Lnet/sf/xsd2pgschema/PgSerSize;
      81: putfield      #20                 // Field ser_size:Lnet/sf/xsd2pgschema/PgSerSize;
      84: aload_0
      85: iload_1
      86: putfield      #5                  // Field document_key:Z
      89: return

  public net.sf.xsd2pgschema.PgSchemaOption(net.sf.xsd2pgschema.JsonType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field rel_model_ext:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field rel_data_ext:Z
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field wild_card:Z
      19: aload_0
      20: iconst_1
      21: putfield      #5                  // Field document_key:Z
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field serial_key:Z
      29: aload_0
      30: iconst_0
      31: putfield      #7                  // Field xpath_key:Z
      34: aload_0
      35: iconst_1
      36: putfield      #8                  // Field case_sense:Z
      39: aload_0
      40: iconst_0
      41: putfield      #9                  // Field ddl_output:Z
      44: aload_0
      45: iconst_1
      46: putfield      #10                 // Field retain_key:Z
      49: aload_0
      50: iconst_1
      51: putfield      #11                 // Field no_field_anno:Z
      54: aload_0
      55: iconst_0
      56: putfield      #12                 // Field validate:Z
      59: aload_0
      60: iconst_0
      61: putfield      #13                 // Field append:Z
      64: aload_0
      65: ldc           #15                 // String SHA-1
      67: putfield      #16                 // Field hash_algorithm:Ljava/lang/String;
      70: aload_0
      71: invokestatic  #17                 // Method net/sf/xsd2pgschema/PgHashSize.defaultSize:()Lnet/sf/xsd2pgschema/PgHashSize;
      74: putfield      #18                 // Field hash_size:Lnet/sf/xsd2pgschema/PgHashSize;
      77: aload_0
      78: invokestatic  #19                 // Method net/sf/xsd2pgschema/PgSerSize.defaultSize:()Lnet/sf/xsd2pgschema/PgSerSize;
      81: putfield      #20                 // Field ser_size:Lnet/sf/xsd2pgschema/PgSerSize;
      84: aload_0
      85: aload_1
      86: invokevirtual #21                 // Method setDefaultForJsonSchema:(Lnet/sf/xsd2pgschema/JsonType;)V
      89: return

  public void setDefaultForJsonSchema(net.sf.xsd2pgschema.JsonType);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #22                 // Field net/sf/xsd2pgschema/JsonType.relational:Lnet/sf/xsd2pgschema/JsonType;
       5: invokevirtual #23                 // Method net/sf/xsd2pgschema/JsonType.equals:(Ljava/lang/Object;)Z
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: putfield      #2                  // Field rel_model_ext:Z
      19: aload_0
      20: invokevirtual #24                 // Method cancelRelDataExt:()V
      23: return

  public void cancelRelModelExt();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field rel_model_ext:Z
       5: aload_0
       6: invokevirtual #24                 // Method cancelRelDataExt:()V
       9: return

  public void cancelRelDataExt();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: aload_0
       4: aload_0
       5: iconst_0
       6: dup_x1
       7: putfield      #10                 // Field retain_key:Z
      10: dup_x1
      11: putfield      #7                  // Field xpath_key:Z
      14: dup_x1
      15: putfield      #6                  // Field serial_key:Z
      18: dup_x1
      19: putfield      #5                  // Field document_key:Z
      22: putfield      #3                  // Field rel_data_ext:Z
      25: return

  public int getMinimumSizeOfField();
    Code:
       0: aload_0
       1: getfield      #2                  // Field rel_model_ext:Z
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: aload_0
      13: getfield      #5                  // Field document_key:Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: iadd
      25: ireturn
}
