Compiled from "RollingCounter.java"
class org.sonatype.nexus.analytics.RollingCounter {
  private final java.util.concurrent.atomic.AtomicLong value;

  private final long max;

  org.sonatype.nexus.analytics.RollingCounter(long);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #15                 // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: ldc2_w        #17                 // long -1l
      12: invokespecial #19                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      15: putfield      #21                 // Field value:Ljava/util/concurrent/atomic/AtomicLong;
      18: lload_1
      19: lconst_0
      20: lcmp
      21: ifle          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      32: aload_0
      33: lload_1
      34: lconst_1
      35: ladd
      36: putfield      #29                 // Field max:J
      39: return

  public long next();
    Code:
       0: aload_0
       1: getfield      #21                 // Field value:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lstore_1
       8: lload_1
       9: lconst_1
      10: ladd
      11: aload_0
      12: getfield      #29                 // Field max:J
      15: lrem
      16: lstore_3
      17: aload_0
      18: getfield      #21                 // Field value:Ljava/util/concurrent/atomic/AtomicLong;
      21: lload_1
      22: lload_3
      23: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
      26: ifeq          0
      29: lload_3
      30: lreturn
}
