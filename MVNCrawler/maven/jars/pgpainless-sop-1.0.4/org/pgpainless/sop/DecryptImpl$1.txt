Compiled from "DecryptImpl.java"
class org.pgpainless.sop.DecryptImpl$1 extends sop.ReadyWithResult<sop.DecryptionResult> {
  final org.pgpainless.decryption_verification.DecryptionStream val$decryptionStream;

  final org.pgpainless.sop.DecryptImpl this$0;

  org.pgpainless.sop.DecryptImpl$1(org.pgpainless.sop.DecryptImpl, org.pgpainless.decryption_verification.DecryptionStream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/pgpainless/sop/DecryptImpl;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$decryptionStream:Lorg/pgpainless/decryption_verification/DecryptionStream;
      10: aload_0
      11: invokespecial #3                  // Method sop/ReadyWithResult."<init>":()V
      14: return

  public sop.DecryptionResult writeTo(java.io.OutputStream) throws java.io.IOException, sop.exception.SOPGPException$NoSignature;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$decryptionStream:Lorg/pgpainless/decryption_verification/DecryptionStream;
       4: aload_1
       5: invokestatic  #4                  // Method org/bouncycastle/util/io/Streams.pipeAll:(Ljava/io/InputStream;Ljava/io/OutputStream;)V
       8: aload_0
       9: getfield      #2                  // Field val$decryptionStream:Lorg/pgpainless/decryption_verification/DecryptionStream;
      12: invokevirtual #5                  // Method org/pgpainless/decryption_verification/DecryptionStream.close:()V
      15: aload_0
      16: getfield      #2                  // Field val$decryptionStream:Lorg/pgpainless/decryption_verification/DecryptionStream;
      19: invokevirtual #6                  // Method org/pgpainless/decryption_verification/DecryptionStream.getResult:()Lorg/pgpainless/decryption_verification/OpenPgpMetadata;
      22: astore_2
      23: new           #7                  // class java/util/ArrayList
      26: dup
      27: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      30: astore_3
      31: aload_2
      32: invokevirtual #9                  // Method org/pgpainless/decryption_verification/OpenPgpMetadata.getVerifiedSignatures:()Ljava/util/Map;
      35: invokeinterface #10,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      40: invokeinterface #11,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      45: astore        4
      47: aload         4
      49: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          123
      57: aload         4
      59: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #14                 // class org/pgpainless/key/SubkeyIdentifier
      67: astore        5
      69: aload_2
      70: invokevirtual #9                  // Method org/pgpainless/decryption_verification/OpenPgpMetadata.getVerifiedSignatures:()Ljava/util/Map;
      73: aload         5
      75: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      80: checkcast     #16                 // class org/bouncycastle/openpgp/PGPSignature
      83: astore        6
      85: aload_3
      86: new           #17                 // class sop/Verification
      89: dup
      90: aload         6
      92: invokevirtual #18                 // Method org/bouncycastle/openpgp/PGPSignature.getCreationTime:()Ljava/util/Date;
      95: aload         5
      97: invokevirtual #19                 // Method org/pgpainless/key/SubkeyIdentifier.getSubkeyFingerprint:()Lorg/pgpainless/key/OpenPgpFingerprint;
     100: invokevirtual #20                 // Method org/pgpainless/key/OpenPgpFingerprint.toString:()Ljava/lang/String;
     103: aload         5
     105: invokevirtual #21                 // Method org/pgpainless/key/SubkeyIdentifier.getPrimaryKeyFingerprint:()Lorg/pgpainless/key/OpenPgpFingerprint;
     108: invokevirtual #20                 // Method org/pgpainless/key/OpenPgpFingerprint.toString:()Ljava/lang/String;
     111: invokespecial #22                 // Method sop/Verification."<init>":(Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V
     114: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     119: pop
     120: goto          47
     123: aload_0
     124: getfield      #1                  // Field this$0:Lorg/pgpainless/sop/DecryptImpl;
     127: invokestatic  #24                 // Method org/pgpainless/sop/DecryptImpl.access$000:(Lorg/pgpainless/sop/DecryptImpl;)Lorg/pgpainless/decryption_verification/ConsumerOptions;
     130: invokevirtual #25                 // Method org/pgpainless/decryption_verification/ConsumerOptions.getCertificates:()Ljava/util/Set;
     133: invokeinterface #26,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     138: ifne          158
     141: aload_3
     142: invokeinterface #27,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     147: ifeq          158
     150: new           #28                 // class sop/exception/SOPGPException$NoSignature
     153: dup
     154: invokespecial #29                 // Method sop/exception/SOPGPException$NoSignature."<init>":()V
     157: athrow
     158: aconst_null
     159: astore        4
     161: aload_2
     162: invokevirtual #30                 // Method org/pgpainless/decryption_verification/OpenPgpMetadata.getSessionKey:()Lorg/pgpainless/util/SessionKey;
     165: ifnull        197
     168: aload_2
     169: invokevirtual #30                 // Method org/pgpainless/decryption_verification/OpenPgpMetadata.getSessionKey:()Lorg/pgpainless/util/SessionKey;
     172: astore        5
     174: new           #31                 // class sop/SessionKey
     177: dup
     178: aload         5
     180: invokevirtual #32                 // Method org/pgpainless/util/SessionKey.getAlgorithm:()Lorg/pgpainless/algorithm/SymmetricKeyAlgorithm;
     183: invokevirtual #33                 // Method org/pgpainless/algorithm/SymmetricKeyAlgorithm.getAlgorithmId:()I
     186: i2b
     187: aload         5
     189: invokevirtual #34                 // Method org/pgpainless/util/SessionKey.getKey:()[B
     192: invokespecial #35                 // Method sop/SessionKey."<init>":(B[B)V
     195: astore        4
     197: new           #36                 // class sop/DecryptionResult
     200: dup
     201: aload         4
     203: aload_3
     204: invokespecial #37                 // Method sop/DecryptionResult."<init>":(Lsop/SessionKey;Ljava/util/List;)V
     207: areturn

  public java.lang.Object writeTo(java.io.OutputStream) throws java.io.IOException, sop.exception.SOPGPException$NoSignature;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method writeTo:(Ljava/io/OutputStream;)Lsop/DecryptionResult;
       5: areturn
}
