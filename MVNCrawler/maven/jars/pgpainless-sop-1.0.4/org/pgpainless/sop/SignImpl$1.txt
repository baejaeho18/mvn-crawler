Compiled from "SignImpl.java"
class org.pgpainless.sop.SignImpl$1 extends sop.ReadyWithResult<sop.SigningResult> {
  final org.pgpainless.encryption_signing.EncryptionStream val$signingStream;

  final java.io.InputStream val$data;

  final org.pgpainless.sop.SignImpl this$0;

  org.pgpainless.sop.SignImpl$1(org.pgpainless.sop.SignImpl, org.pgpainless.encryption_signing.EncryptionStream, java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/pgpainless/sop/SignImpl;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$signingStream:Lorg/pgpainless/encryption_signing/EncryptionStream;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$data:Ljava/io/InputStream;
      15: aload_0
      16: invokespecial #4                  // Method sop/ReadyWithResult."<init>":()V
      19: return

  public sop.SigningResult writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$signingStream:Lorg/pgpainless/encryption_signing/EncryptionStream;
       4: invokevirtual #5                  // Method org/pgpainless/encryption_signing/EncryptionStream.isClosed:()Z
       7: ifeq          20
      10: new           #6                  // class java/lang/IllegalStateException
      13: dup
      14: ldc           #7                  // String EncryptionStream is already closed.
      16: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #3                  // Field val$data:Ljava/io/InputStream;
      24: aload_0
      25: getfield      #2                  // Field val$signingStream:Lorg/pgpainless/encryption_signing/EncryptionStream;
      28: invokestatic  #9                  // Method org/bouncycastle/util/io/Streams.pipeAll:(Ljava/io/InputStream;Ljava/io/OutputStream;)V
      31: aload_0
      32: getfield      #2                  // Field val$signingStream:Lorg/pgpainless/encryption_signing/EncryptionStream;
      35: invokevirtual #10                 // Method org/pgpainless/encryption_signing/EncryptionStream.close:()V
      38: aload_0
      39: getfield      #2                  // Field val$signingStream:Lorg/pgpainless/encryption_signing/EncryptionStream;
      42: invokevirtual #11                 // Method org/pgpainless/encryption_signing/EncryptionStream.getResult:()Lorg/pgpainless/encryption_signing/EncryptionResult;
      45: astore_2
      46: new           #12                 // class java/util/ArrayList
      49: dup
      50: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      53: astore_3
      54: aload_2
      55: invokevirtual #14                 // Method org/pgpainless/encryption_signing/EncryptionResult.getDetachedSignatures:()Lorg/pgpainless/util/MultiMap;
      58: invokevirtual #15                 // Method org/pgpainless/util/MultiMap.keySet:()Ljava/util/Set;
      61: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      66: astore        4
      68: aload         4
      70: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifeq          109
      78: aload         4
      80: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: checkcast     #19                 // class org/pgpainless/key/SubkeyIdentifier
      88: astore        5
      90: aload_3
      91: aload_2
      92: invokevirtual #14                 // Method org/pgpainless/encryption_signing/EncryptionResult.getDetachedSignatures:()Lorg/pgpainless/util/MultiMap;
      95: aload         5
      97: invokevirtual #20                 // Method org/pgpainless/util/MultiMap.get:(Ljava/lang/Object;)Ljava/util/Set;
     100: invokeinterface #21,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     105: pop
     106: goto          68
     109: aload_0
     110: getfield      #1                  // Field this$0:Lorg/pgpainless/sop/SignImpl;
     113: invokestatic  #22                 // Method org/pgpainless/sop/SignImpl.access$000:(Lorg/pgpainless/sop/SignImpl;)Z
     116: ifeq          128
     119: aload_1
     120: invokestatic  #23                 // Method org/pgpainless/util/ArmoredOutputStreamFactory.get:(Ljava/io/OutputStream;)Lorg/bouncycastle/bcpg/ArmoredOutputStream;
     123: astore        4
     125: goto          131
     128: aload_1
     129: astore        4
     131: aload_3
     132: invokeinterface #24,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     137: astore        5
     139: aload         5
     141: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     146: ifeq          171
     149: aload         5
     151: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     156: checkcast     #25                 // class org/bouncycastle/openpgp/PGPSignature
     159: astore        6
     161: aload         6
     163: aload         4
     165: invokevirtual #26                 // Method org/bouncycastle/openpgp/PGPSignature.encode:(Ljava/io/OutputStream;)V
     168: goto          139
     171: aload         4
     173: invokevirtual #27                 // Method java/io/OutputStream.close:()V
     176: aload_1
     177: invokevirtual #27                 // Method java/io/OutputStream.close:()V
     180: invokestatic  #28                 // Method sop/SigningResult.builder:()Lsop/SigningResult$Builder;
     183: aload_0
     184: getfield      #1                  // Field this$0:Lorg/pgpainless/sop/SignImpl;
     187: aload_3
     188: invokestatic  #29                 // Method org/pgpainless/sop/SignImpl.access$100:(Lorg/pgpainless/sop/SignImpl;Ljava/lang/Iterable;)Lsop/MicAlg;
     191: invokevirtual #30                 // Method sop/SigningResult$Builder.setMicAlg:(Lsop/MicAlg;)Lsop/SigningResult$Builder;
     194: invokevirtual #31                 // Method sop/SigningResult$Builder.build:()Lsop/SigningResult;
     197: areturn

  public java.lang.Object writeTo(java.io.OutputStream) throws java.io.IOException, sop.exception.SOPGPException$NoSignature;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method writeTo:(Ljava/io/OutputStream;)Lsop/SigningResult;
       5: areturn
}
