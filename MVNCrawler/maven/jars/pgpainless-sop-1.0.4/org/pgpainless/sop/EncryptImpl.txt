Compiled from "EncryptImpl.java"
public class org.pgpainless.sop.EncryptImpl implements sop.operation.Encrypt {
  org.pgpainless.encryption_signing.EncryptionOptions encryptionOptions;

  org.pgpainless.encryption_signing.SigningOptions signingOptions;

  private sop.enums.EncryptAs encryptAs;

  boolean armor;

  public org.pgpainless.sop.EncryptImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/pgpainless/encryption_signing/EncryptionOptions
       8: dup
       9: invokespecial #3                  // Method org/pgpainless/encryption_signing/EncryptionOptions."<init>":()V
      12: putfield      #4                  // Field encryptionOptions:Lorg/pgpainless/encryption_signing/EncryptionOptions;
      15: aload_0
      16: aconst_null
      17: putfield      #5                  // Field signingOptions:Lorg/pgpainless/encryption_signing/SigningOptions;
      20: aload_0
      21: getstatic     #6                  // Field sop/enums/EncryptAs.Binary:Lsop/enums/EncryptAs;
      24: putfield      #7                  // Field encryptAs:Lsop/enums/EncryptAs;
      27: aload_0
      28: iconst_1
      29: putfield      #8                  // Field armor:Z
      32: return

  public sop.operation.Encrypt noArmor();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #8                  // Field armor:Z
       5: aload_0
       6: areturn

  public sop.operation.Encrypt mode(sop.enums.EncryptAs) throws sop.exception.SOPGPException$UnsupportedOption;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field encryptAs:Lsop/enums/EncryptAs;
       5: aload_0
       6: areturn

  public sop.operation.Encrypt signWith(java.io.InputStream) throws sop.exception.SOPGPException$KeyIsProtected, sop.exception.SOPGPException$KeyCannotSign, sop.exception.SOPGPException$UnsupportedAsymmetricAlgo, sop.exception.SOPGPException$BadData;
    Code:
       0: invokestatic  #9                  // Method org/pgpainless/PGPainless.readKeyRing:()Lorg/pgpainless/key/parsing/KeyRingReader;
       3: aload_1
       4: invokevirtual #10                 // Method org/pgpainless/key/parsing/KeyRingReader.secretKeyRingCollection:(Ljava/io/InputStream;)Lorg/bouncycastle/openpgp/PGPSecretKeyRingCollection;
       7: astore_2
       8: aload_2
       9: invokevirtual #11                 // Method org/bouncycastle/openpgp/PGPSecretKeyRingCollection.size:()I
      12: iconst_1
      13: if_icmpeq     53
      16: new           #12                 // class sop/exception/SOPGPException$BadData
      19: dup
      20: new           #13                 // class java/lang/AssertionError
      23: dup
      24: new           #14                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #16                 // String Exactly one secret key at a time expected. Got
      33: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_2
      37: invokevirtual #11                 // Method org/bouncycastle/openpgp/PGPSecretKeyRingCollection.size:()I
      40: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #20                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      49: invokespecial #21                 // Method sop/exception/SOPGPException$BadData."<init>":(Ljava/lang/Throwable;)V
      52: athrow
      53: aload_0
      54: getfield      #5                  // Field signingOptions:Lorg/pgpainless/encryption_signing/SigningOptions;
      57: ifnonnull     67
      60: aload_0
      61: invokestatic  #22                 // Method org/pgpainless/encryption_signing/SigningOptions.get:()Lorg/pgpainless/encryption_signing/SigningOptions;
      64: putfield      #5                  // Field signingOptions:Lorg/pgpainless/encryption_signing/SigningOptions;
      67: aload_0
      68: getfield      #5                  // Field signingOptions:Lorg/pgpainless/encryption_signing/SigningOptions;
      71: invokestatic  #23                 // InterfaceMethod org/pgpainless/key/protection/SecretKeyRingProtector.unprotectedKeys:()Lorg/pgpainless/key/protection/SecretKeyRingProtector;
      74: aload_2
      75: getstatic     #24                 // Field org/pgpainless/algorithm/DocumentSignatureType.BINARY_DOCUMENT:Lorg/pgpainless/algorithm/DocumentSignatureType;
      78: invokevirtual #25                 // Method org/pgpainless/encryption_signing/SigningOptions.addInlineSignatures:(Lorg/pgpainless/key/protection/SecretKeyRingProtector;Ljava/lang/Iterable;Lorg/pgpainless/algorithm/DocumentSignatureType;)Lorg/pgpainless/encryption_signing/SigningOptions;
      81: pop
      82: goto          103
      85: astore_3
      86: new           #27                 // class sop/exception/SOPGPException$KeyCannotSign
      89: dup
      90: invokespecial #28                 // Method sop/exception/SOPGPException$KeyCannotSign."<init>":()V
      93: athrow
      94: astore_3
      95: new           #30                 // class sop/exception/SOPGPException$KeyIsProtected
      98: dup
      99: invokespecial #31                 // Method sop/exception/SOPGPException$KeyIsProtected."<init>":()V
     102: athrow
     103: goto          116
     106: astore_2
     107: new           #12                 // class sop/exception/SOPGPException$BadData
     110: dup
     111: aload_2
     112: invokespecial #21                 // Method sop/exception/SOPGPException$BadData."<init>":(Ljava/lang/Throwable;)V
     115: athrow
     116: aload_0
     117: areturn
    Exception table:
       from    to  target type
          67    82    85   Class java/lang/IllegalArgumentException
          67    82    94   Class org/pgpainless/exception/WrongPassphraseException
           0   103   106   Class java/io/IOException
           0   103   106   Class org/bouncycastle/openpgp/PGPException

  public sop.operation.Encrypt withPassword(java.lang.String) throws sop.exception.SOPGPException$PasswordNotHumanReadable, sop.exception.SOPGPException$UnsupportedOption;
    Code:
       0: aload_0
       1: getfield      #4                  // Field encryptionOptions:Lorg/pgpainless/encryption_signing/EncryptionOptions;
       4: aload_1
       5: invokestatic  #34                 // Method org/pgpainless/util/Passphrase.fromPassword:(Ljava/lang/String;)Lorg/pgpainless/util/Passphrase;
       8: invokevirtual #35                 // Method org/pgpainless/encryption_signing/EncryptionOptions.addPassphrase:(Lorg/pgpainless/util/Passphrase;)Lorg/pgpainless/encryption_signing/EncryptionOptions;
      11: pop
      12: aload_0
      13: areturn

  public sop.operation.Encrypt withCert(java.io.InputStream) throws sop.exception.SOPGPException$CertCannotEncrypt, sop.exception.SOPGPException$UnsupportedAsymmetricAlgo, sop.exception.SOPGPException$BadData;
    Code:
       0: invokestatic  #9                  // Method org/pgpainless/PGPainless.readKeyRing:()Lorg/pgpainless/key/parsing/KeyRingReader;
       3: aload_1
       4: iconst_0
       5: invokevirtual #36                 // Method org/pgpainless/key/parsing/KeyRingReader.keyRingCollection:(Ljava/io/InputStream;Z)Lorg/pgpainless/key/collection/PGPKeyRingCollection;
       8: invokevirtual #37                 // Method org/pgpainless/key/collection/PGPKeyRingCollection.getPgpPublicKeyRingCollection:()Lorg/bouncycastle/openpgp/PGPPublicKeyRingCollection;
      11: astore_2
      12: aload_0
      13: getfield      #4                  // Field encryptionOptions:Lorg/pgpainless/encryption_signing/EncryptionOptions;
      16: aload_2
      17: invokevirtual #38                 // Method org/pgpainless/encryption_signing/EncryptionOptions.addRecipients:(Ljava/lang/Iterable;)Lorg/pgpainless/encryption_signing/EncryptionOptions;
      20: pop
      21: goto          34
      24: astore_2
      25: new           #12                 // class sop/exception/SOPGPException$BadData
      28: dup
      29: aload_2
      30: invokespecial #21                 // Method sop/exception/SOPGPException$BadData."<init>":(Ljava/lang/Throwable;)V
      33: athrow
      34: aload_0
      35: areturn
    Exception table:
       from    to  target type
           0    21    24   Class java/io/IOException
           0    21    24   Class org/bouncycastle/openpgp/PGPException

  public sop.Ready plaintext(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field signingOptions:Lorg/pgpainless/encryption_signing/SigningOptions;
       4: ifnull        21
       7: aload_0
       8: getfield      #4                  // Field encryptionOptions:Lorg/pgpainless/encryption_signing/EncryptionOptions;
      11: aload_0
      12: getfield      #5                  // Field signingOptions:Lorg/pgpainless/encryption_signing/SigningOptions;
      15: invokestatic  #39                 // Method org/pgpainless/encryption_signing/ProducerOptions.signAndEncrypt:(Lorg/pgpainless/encryption_signing/EncryptionOptions;Lorg/pgpainless/encryption_signing/SigningOptions;)Lorg/pgpainless/encryption_signing/ProducerOptions;
      18: goto          28
      21: aload_0
      22: getfield      #4                  // Field encryptionOptions:Lorg/pgpainless/encryption_signing/EncryptionOptions;
      25: invokestatic  #40                 // Method org/pgpainless/encryption_signing/ProducerOptions.encrypt:(Lorg/pgpainless/encryption_signing/EncryptionOptions;)Lorg/pgpainless/encryption_signing/ProducerOptions;
      28: astore_2
      29: aload_2
      30: aload_0
      31: getfield      #8                  // Field armor:Z
      34: invokevirtual #41                 // Method org/pgpainless/encryption_signing/ProducerOptions.setAsciiArmor:(Z)Lorg/pgpainless/encryption_signing/ProducerOptions;
      37: pop
      38: aload_2
      39: aload_0
      40: getfield      #7                  // Field encryptAs:Lsop/enums/EncryptAs;
      43: invokestatic  #42                 // Method encryptAsToStreamEncoding:(Lsop/enums/EncryptAs;)Lorg/pgpainless/algorithm/StreamEncoding;
      46: invokevirtual #43                 // Method org/pgpainless/encryption_signing/ProducerOptions.setEncoding:(Lorg/pgpainless/algorithm/StreamEncoding;)Lorg/pgpainless/encryption_signing/ProducerOptions;
      49: pop
      50: new           #44                 // class sop/util/ProxyOutputStream
      53: dup
      54: invokespecial #45                 // Method sop/util/ProxyOutputStream."<init>":()V
      57: astore_3
      58: invokestatic  #46                 // Method org/pgpainless/PGPainless.encryptAndOrSign:()Lorg/pgpainless/encryption_signing/EncryptionBuilder;
      61: aload_3
      62: invokevirtual #47                 // Method org/pgpainless/encryption_signing/EncryptionBuilder.onOutputStream:(Ljava/io/OutputStream;)Lorg/pgpainless/encryption_signing/EncryptionBuilderInterface$WithOptions;
      65: aload_2
      66: invokeinterface #48,  2           // InterfaceMethod org/pgpainless/encryption_signing/EncryptionBuilderInterface$WithOptions.withOptions:(Lorg/pgpainless/encryption_signing/ProducerOptions;)Lorg/pgpainless/encryption_signing/EncryptionStream;
      71: astore        4
      73: new           #49                 // class org/pgpainless/sop/EncryptImpl$1
      76: dup
      77: aload_0
      78: aload_3
      79: aload_1
      80: aload         4
      82: invokespecial #50                 // Method org/pgpainless/sop/EncryptImpl$1."<init>":(Lorg/pgpainless/sop/EncryptImpl;Lsop/util/ProxyOutputStream;Ljava/io/InputStream;Lorg/pgpainless/encryption_signing/EncryptionStream;)V
      85: areturn
      86: astore_3
      87: new           #32                 // class java/io/IOException
      90: dup
      91: invokespecial #51                 // Method java/io/IOException."<init>":()V
      94: athrow
    Exception table:
       from    to  target type
          50    85    86   Class org/bouncycastle/openpgp/PGPException

  private static org.pgpainless.algorithm.StreamEncoding encryptAsToStreamEncoding(sop.enums.EncryptAs);
    Code:
       0: getstatic     #52                 // Field org/pgpainless/sop/EncryptImpl$2.$SwitchMap$sop$enums$EncryptAs:[I
       3: aload_0
       4: invokevirtual #53                 // Method sop/enums/EncryptAs.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 3
                     1: 36
                     2: 40
                     3: 44
               default: 48
          }
      36: getstatic     #54                 // Field org/pgpainless/algorithm/StreamEncoding.BINARY:Lorg/pgpainless/algorithm/StreamEncoding;
      39: areturn
      40: getstatic     #55                 // Field org/pgpainless/algorithm/StreamEncoding.TEXT:Lorg/pgpainless/algorithm/StreamEncoding;
      43: areturn
      44: getstatic     #56                 // Field org/pgpainless/algorithm/StreamEncoding.UTF8:Lorg/pgpainless/algorithm/StreamEncoding;
      47: areturn
      48: new           #26                 // class java/lang/IllegalArgumentException
      51: dup
      52: new           #14                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #57                 // String Invalid value encountered:
      61: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_0
      65: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      68: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      74: athrow
}
