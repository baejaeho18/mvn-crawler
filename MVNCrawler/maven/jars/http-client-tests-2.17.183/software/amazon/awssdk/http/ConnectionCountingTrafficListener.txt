Compiled from "ConnectionCountingTrafficListener.java"
public class software.amazon.awssdk.http.ConnectionCountingTrafficListener implements com.github.tomakehurst.wiremock.http.trafficlistener.WiremockNetworkTrafficListener {
  private final java.util.Map<java.net.Socket, java.io.ByteArrayOutputStream> sockets;

  public software.amazon.awssdk.http.ConnectionCountingTrafficListener();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field sockets:Ljava/util/Map;
      15: return

  public void opened(java.net.Socket);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sockets:Ljava/util/Map;
       4: aload_1
       5: new           #5                  // class java/io/ByteArrayOutputStream
       8: dup
       9: invokespecial #6                  // Method java/io/ByteArrayOutputStream."<init>":()V
      12: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  public void incoming(java.net.Socket, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #8,  0              // InvokeDynamic #0:run:(Lsoftware/amazon/awssdk/http/ConnectionCountingTrafficListener;Ljava/net/Socket;Ljava/nio/ByteBuffer;)Lsoftware/amazon/awssdk/utils/FunctionalUtils$UnsafeRunnable;
       8: invokestatic  #9                  // Method software/amazon/awssdk/utils/FunctionalUtils.invokeSafely:(Lsoftware/amazon/awssdk/utils/FunctionalUtils$UnsafeRunnable;)V
      11: return

  public void outgoing(java.net.Socket, java.nio.ByteBuffer);
    Code:
       0: return

  public void closed(java.net.Socket);
    Code:
       0: return

  public int openedConnections();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #4                  // Field sockets:Ljava/util/Map;
       6: invokeinterface #10,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      11: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          79
      26: aload_2
      27: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #5                  // class java/io/ByteArrayOutputStream
      35: astore_3
      36: aload_3
      37: invokevirtual #14                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      40: astore        4
      42: new           #15                 // class java/lang/String
      45: dup
      46: aload         4
      48: getstatic     #16                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      51: invokespecial #17                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      54: ldc           #18                 // String POST /__admin/mappings
      56: invokevirtual #19                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      59: ifeq          65
      62: goto          17
      65: iinc          1, 1
      68: goto          76
      71: astore        5
      73: iinc          1, 1
      76: goto          17
      79: iload_1
      80: ireturn
    Exception table:
       from    to  target type
          42    62    71   Class java/lang/RuntimeException
          65    68    71   Class java/lang/RuntimeException

  private void lambda$incoming$0(java.net.Socket, java.nio.ByteBuffer) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field sockets:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #5                  // class java/io/ByteArrayOutputStream
      13: aload_2
      14: invokevirtual #22                 // Method java/nio/ByteBuffer.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;
      17: invokestatic  #23                 // Method software/amazon/awssdk/utils/BinaryUtils.copyBytesFrom:(Ljava/nio/ByteBuffer;)[B
      20: invokevirtual #24                 // Method java/io/ByteArrayOutputStream.write:([B)V
      23: return
}
