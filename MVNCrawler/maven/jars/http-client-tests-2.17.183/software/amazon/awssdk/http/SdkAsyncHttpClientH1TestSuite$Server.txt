Compiled from "SdkAsyncHttpClientH1TestSuite.java"
class software.amazon.awssdk.http.SdkAsyncHttpClientH1TestSuite$Server extends io.netty.channel.ChannelInitializer<io.netty.channel.Channel> {
  private static final byte[] CONTENT;

  private io.netty.bootstrap.ServerBootstrap bootstrap;

  private io.netty.channel.socket.ServerSocketChannel serverSock;

  private java.util.List<io.netty.channel.Channel> channels;

  private final io.netty.channel.nio.NioEventLoopGroup group;

  private io.netty.handler.ssl.SslContext sslCtx;

  private boolean return500OnFirstRequest;

  private boolean closeConnection;

  private volatile io.netty.handler.codec.http.HttpRequest lastRequestReceived;

  private software.amazon.awssdk.http.SdkAsyncHttpClientH1TestSuite$Server();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method io/netty/channel/ChannelInitializer."<init>":()V
       4: aload_0
       5: new           #8                  // class java/util/ArrayList
       8: dup
       9: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #3                  // Field channels:Ljava/util/List;
      15: aload_0
      16: new           #10                 // class io/netty/channel/nio/NioEventLoopGroup
      19: dup
      20: invokespecial #11                 // Method io/netty/channel/nio/NioEventLoopGroup."<init>":()V
      23: putfield      #12                 // Field group:Lio/netty/channel/nio/NioEventLoopGroup;
      26: return

  public void init() throws java.lang.Exception;
    Code:
       0: new           #13                 // class io/netty/handler/ssl/util/SelfSignedCertificate
       3: dup
       4: invokespecial #14                 // Method io/netty/handler/ssl/util/SelfSignedCertificate."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #15                 // Method io/netty/handler/ssl/util/SelfSignedCertificate.certificate:()Ljava/io/File;
      13: aload_1
      14: invokevirtual #16                 // Method io/netty/handler/ssl/util/SelfSignedCertificate.privateKey:()Ljava/io/File;
      17: invokestatic  #17                 // Method io/netty/handler/ssl/SslContextBuilder.forServer:(Ljava/io/File;Ljava/io/File;)Lio/netty/handler/ssl/SslContextBuilder;
      20: invokevirtual #18                 // Method io/netty/handler/ssl/SslContextBuilder.build:()Lio/netty/handler/ssl/SslContext;
      23: putfield      #19                 // Field sslCtx:Lio/netty/handler/ssl/SslContext;
      26: aload_0
      27: new           #20                 // class io/netty/bootstrap/ServerBootstrap
      30: dup
      31: invokespecial #21                 // Method io/netty/bootstrap/ServerBootstrap."<init>":()V
      34: ldc           #22                 // class io/netty/channel/socket/nio/NioServerSocketChannel
      36: invokevirtual #23                 // Method io/netty/bootstrap/ServerBootstrap.channel:(Ljava/lang/Class;)Lio/netty/bootstrap/AbstractBootstrap;
      39: checkcast     #20                 // class io/netty/bootstrap/ServerBootstrap
      42: new           #24                 // class io/netty/handler/logging/LoggingHandler
      45: dup
      46: getstatic     #25                 // Field io/netty/handler/logging/LogLevel.DEBUG:Lio/netty/handler/logging/LogLevel;
      49: invokespecial #26                 // Method io/netty/handler/logging/LoggingHandler."<init>":(Lio/netty/handler/logging/LogLevel;)V
      52: invokevirtual #27                 // Method io/netty/bootstrap/ServerBootstrap.handler:(Lio/netty/channel/ChannelHandler;)Lio/netty/bootstrap/AbstractBootstrap;
      55: checkcast     #20                 // class io/netty/bootstrap/ServerBootstrap
      58: aload_0
      59: getfield      #12                 // Field group:Lio/netty/channel/nio/NioEventLoopGroup;
      62: invokevirtual #28                 // Method io/netty/bootstrap/ServerBootstrap.group:(Lio/netty/channel/EventLoopGroup;)Lio/netty/bootstrap/ServerBootstrap;
      65: aload_0
      66: invokevirtual #29                 // Method io/netty/bootstrap/ServerBootstrap.childHandler:(Lio/netty/channel/ChannelHandler;)Lio/netty/bootstrap/ServerBootstrap;
      69: putfield      #30                 // Field bootstrap:Lio/netty/bootstrap/ServerBootstrap;
      72: aload_0
      73: aload_0
      74: getfield      #30                 // Field bootstrap:Lio/netty/bootstrap/ServerBootstrap;
      77: iconst_0
      78: invokevirtual #31                 // Method io/netty/bootstrap/ServerBootstrap.bind:(I)Lio/netty/channel/ChannelFuture;
      81: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/ChannelFuture.sync:()Lio/netty/channel/ChannelFuture;
      86: invokeinterface #33,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
      91: checkcast     #34                 // class io/netty/channel/socket/ServerSocketChannel
      94: putfield      #35                 // Field serverSock:Lio/netty/channel/socket/ServerSocketChannel;
      97: return

  public void shutdown() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field group:Lio/netty/channel/nio/NioEventLoopGroup;
       4: invokevirtual #36                 // Method io/netty/channel/nio/NioEventLoopGroup.shutdownGracefully:()Lio/netty/util/concurrent/Future;
       7: invokeinterface #37,  1           // InterfaceMethod io/netty/util/concurrent/Future.await:()Lio/netty/util/concurrent/Future;
      12: pop
      13: aload_0
      14: getfield      #35                 // Field serverSock:Lio/netty/channel/socket/ServerSocketChannel;
      17: invokeinterface #38,  1           // InterfaceMethod io/netty/channel/socket/ServerSocketChannel.close:()Lio/netty/channel/ChannelFuture;
      22: pop
      23: return

  public int port();
    Code:
       0: aload_0
       1: getfield      #35                 // Field serverSock:Lio/netty/channel/socket/ServerSocketChannel;
       4: invokeinterface #39,  1           // InterfaceMethod io/netty/channel/socket/ServerSocketChannel.localAddress:()Ljava/net/InetSocketAddress;
       9: invokevirtual #40                 // Method java/net/InetSocketAddress.getPort:()I
      12: ireturn

  protected void initChannel(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: getfield      #3                  // Field channels:Ljava/util/List;
       4: aload_1
       5: invokeinterface #41,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_1
      12: invokeinterface #42,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      17: astore_2
      18: aload_2
      19: iconst_1
      20: anewarray     #43                 // class io/netty/channel/ChannelHandler
      23: dup
      24: iconst_0
      25: aload_0
      26: getfield      #19                 // Field sslCtx:Lio/netty/handler/ssl/SslContext;
      29: aload_1
      30: invokeinterface #44,  1           // InterfaceMethod io/netty/channel/Channel.alloc:()Lio/netty/buffer/ByteBufAllocator;
      35: invokevirtual #45                 // Method io/netty/handler/ssl/SslContext.newHandler:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/handler/ssl/SslHandler;
      38: aastore
      39: invokeinterface #46,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      44: pop
      45: aload_2
      46: iconst_1
      47: anewarray     #43                 // class io/netty/channel/ChannelHandler
      50: dup
      51: iconst_0
      52: new           #47                 // class io/netty/handler/codec/http/HttpServerCodec
      55: dup
      56: invokespecial #48                 // Method io/netty/handler/codec/http/HttpServerCodec."<init>":()V
      59: aastore
      60: invokeinterface #46,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      65: pop
      66: aload_2
      67: iconst_1
      68: anewarray     #43                 // class io/netty/channel/ChannelHandler
      71: dup
      72: iconst_0
      73: new           #49                 // class software/amazon/awssdk/http/SdkAsyncHttpClientH1TestSuite$Server$BehaviorTestChannelHandler
      76: dup
      77: aload_0
      78: aconst_null
      79: invokespecial #50                 // Method software/amazon/awssdk/http/SdkAsyncHttpClientH1TestSuite$Server$BehaviorTestChannelHandler."<init>":(Lsoftware/amazon/awssdk/http/SdkAsyncHttpClientH1TestSuite$Server;Lsoftware/amazon/awssdk/http/SdkAsyncHttpClientH1TestSuite$1;)V
      82: aastore
      83: invokeinterface #46,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      88: pop
      89: return

  software.amazon.awssdk.http.SdkAsyncHttpClientH1TestSuite$Server(software.amazon.awssdk.http.SdkAsyncHttpClientH1TestSuite$1);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method "<init>":()V
       4: return

  static boolean access$102(software.amazon.awssdk.http.SdkAsyncHttpClientH1TestSuite$Server, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #5                  // Field return500OnFirstRequest:Z
       6: ireturn

  static boolean access$202(software.amazon.awssdk.http.SdkAsyncHttpClientH1TestSuite$Server, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #4                  // Field closeConnection:Z
       6: ireturn

  static java.util.List access$300(software.amazon.awssdk.http.SdkAsyncHttpClientH1TestSuite$Server);
    Code:
       0: aload_0
       1: getfield      #3                  // Field channels:Ljava/util/List;
       4: areturn

  static io.netty.handler.codec.http.HttpRequest access$502(software.amazon.awssdk.http.SdkAsyncHttpClientH1TestSuite$Server, io.netty.handler.codec.http.HttpRequest);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field lastRequestReceived:Lio/netty/handler/codec/http/HttpRequest;
       6: areturn

  static boolean access$100(software.amazon.awssdk.http.SdkAsyncHttpClientH1TestSuite$Server);
    Code:
       0: aload_0
       1: getfield      #5                  // Field return500OnFirstRequest:Z
       4: ireturn

  static byte[] access$600();
    Code:
       0: getstatic     #1                  // Field CONTENT:[B
       3: areturn

  static boolean access$200(software.amazon.awssdk.http.SdkAsyncHttpClientH1TestSuite$Server);
    Code:
       0: aload_0
       1: getfield      #4                  // Field closeConnection:Z
       4: ireturn

  static {};
    Code:
       0: ldc           #51                 // String helloworld
       2: getstatic     #52                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       5: invokevirtual #53                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       8: putstatic     #1                  // Field CONTENT:[B
      11: return
}
