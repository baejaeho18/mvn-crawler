Compiled from "ConnectionAliasPermission.scala"
public interface zio.aws.workspaces.model.ConnectionAliasPermission$ReadOnly {
  public static zio.aws.workspaces.model.ConnectionAliasPermission asEditable$(zio.aws.workspaces.model.ConnectionAliasPermission$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #20                 // InterfaceMethod asEditable:()Lzio/aws/workspaces/model/ConnectionAliasPermission;
       4: areturn

  public default zio.aws.workspaces.model.ConnectionAliasPermission asEditable();
    Code:
       0: new           #12                 // class zio/aws/workspaces/model/ConnectionAliasPermission
       3: dup
       4: aload_0
       5: invokeinterface #25,  1           // InterfaceMethod sharedAccountId:()Ljava/lang/String;
      10: aload_0
      11: invokeinterface #29,  1           // InterfaceMethod allowAssociation:()Z
      16: invokespecial #33                 // Method zio/aws/workspaces/model/ConnectionAliasPermission."<init>":(Ljava/lang/String;Z)V
      19: areturn

  public abstract java.lang.String sharedAccountId();

  public abstract boolean allowAssociation();

  public static zio.ZIO getSharedAccountId$(zio.aws.workspaces.model.ConnectionAliasPermission$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #40                 // InterfaceMethod getSharedAccountId:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.String> getSharedAccountId();
    Code:
       0: getstatic     #47                 // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #68,  0             // InvokeDynamic #0:apply:(Lzio/aws/workspaces/model/ConnectionAliasPermission$ReadOnly;)Lscala/Function0;
       9: ldc           #70                 // String zio.aws.workspaces.model.ConnectionAliasPermission.ReadOnly.getSharedAccountId(ConnectionAliasPermission.scala:33)
      11: invokevirtual #74                 // Method zio/ZIO$.succeed:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getAllowAssociation$(zio.aws.workspaces.model.ConnectionAliasPermission$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #78                 // InterfaceMethod getAllowAssociation:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object> getAllowAssociation();
    Code:
       0: getstatic     #47                 // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #89,  0             // InvokeDynamic #1:apply$mcZ$sp:(Lzio/aws/workspaces/model/ConnectionAliasPermission$ReadOnly;)Lscala/runtime/java8/JFunction0$mcZ$sp;
       9: ldc           #91                 // String zio.aws.workspaces.model.ConnectionAliasPermission.ReadOnly.getAllowAssociation(ConnectionAliasPermission.scala:35)
      11: invokevirtual #74                 // Method zio/ZIO$.succeed:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static java.lang.String $anonfun$getSharedAccountId$1(zio.aws.workspaces.model.ConnectionAliasPermission$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #25,  1           // InterfaceMethod sharedAccountId:()Ljava/lang/String;
       6: areturn

  public static boolean $anonfun$getAllowAssociation$1(zio.aws.workspaces.model.ConnectionAliasPermission$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #29,  1           // InterfaceMethod allowAssociation:()Z
       6: ireturn

  public static void $init$(zio.aws.workspaces.model.ConnectionAliasPermission$ReadOnly);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #105,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
