Compiled from "ImportClientBrandingResponse.scala"
public interface zio.aws.workspaces.model.ImportClientBrandingResponse$ReadOnly {
  public static zio.aws.workspaces.model.ImportClientBrandingResponse asEditable$(zio.aws.workspaces.model.ImportClientBrandingResponse$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #28                 // InterfaceMethod asEditable:()Lzio/aws/workspaces/model/ImportClientBrandingResponse;
       4: areturn

  public default zio.aws.workspaces.model.ImportClientBrandingResponse asEditable();
    Code:
       0: new           #17                 // class zio/aws/workspaces/model/ImportClientBrandingResponse
       3: dup
       4: aload_0
       5: invokeinterface #33,  1           // InterfaceMethod deviceTypeWindows:()Lzio/prelude/data/Optional;
      10: invokedynamic #54,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
      15: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      20: aload_0
      21: invokeinterface #63,  1           // InterfaceMethod deviceTypeOsx:()Lzio/prelude/data/Optional;
      26: invokedynamic #68,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
      31: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      36: aload_0
      37: invokeinterface #71,  1           // InterfaceMethod deviceTypeAndroid:()Lzio/prelude/data/Optional;
      42: invokedynamic #76,  0             // InvokeDynamic #2:apply:()Lscala/Function1;
      47: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      52: aload_0
      53: invokeinterface #79,  1           // InterfaceMethod deviceTypeIos:()Lzio/prelude/data/Optional;
      58: invokedynamic #86,  0             // InvokeDynamic #3:apply:()Lscala/Function1;
      63: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      68: aload_0
      69: invokeinterface #89,  1           // InterfaceMethod deviceTypeLinux:()Lzio/prelude/data/Optional;
      74: invokedynamic #94,  0             // InvokeDynamic #4:apply:()Lscala/Function1;
      79: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      84: aload_0
      85: invokeinterface #97,  1           // InterfaceMethod deviceTypeWeb:()Lzio/prelude/data/Optional;
      90: invokedynamic #102,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
      95: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     100: invokespecial #106                // Method zio/aws/workspaces/model/ImportClientBrandingResponse."<init>":(Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;)V
     103: areturn

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.DefaultClientBrandingAttributes$ReadOnly> deviceTypeWindows();

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.DefaultClientBrandingAttributes$ReadOnly> deviceTypeOsx();

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.DefaultClientBrandingAttributes$ReadOnly> deviceTypeAndroid();

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.IosClientBrandingAttributes$ReadOnly> deviceTypeIos();

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.DefaultClientBrandingAttributes$ReadOnly> deviceTypeLinux();

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.DefaultClientBrandingAttributes$ReadOnly> deviceTypeWeb();

  public static zio.ZIO getDeviceTypeWindows$(zio.aws.workspaces.model.ImportClientBrandingResponse$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #115                // InterfaceMethod getDeviceTypeWindows:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DefaultClientBrandingAttributes$ReadOnly> getDeviceTypeWindows();
    Code:
       0: getstatic     #122                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #123                // String deviceTypeWindows
       5: aload_0
       6: invokedynamic #134,  0            // InvokeDynamic #6:apply:(Lzio/aws/workspaces/model/ImportClientBrandingResponse$ReadOnly;)Lscala/Function0;
      11: invokevirtual #138                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDeviceTypeOsx$(zio.aws.workspaces.model.ImportClientBrandingResponse$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #142                // InterfaceMethod getDeviceTypeOsx:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DefaultClientBrandingAttributes$ReadOnly> getDeviceTypeOsx();
    Code:
       0: getstatic     #122                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #143                // String deviceTypeOsx
       5: aload_0
       6: invokedynamic #148,  0            // InvokeDynamic #7:apply:(Lzio/aws/workspaces/model/ImportClientBrandingResponse$ReadOnly;)Lscala/Function0;
      11: invokevirtual #138                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDeviceTypeAndroid$(zio.aws.workspaces.model.ImportClientBrandingResponse$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #152                // InterfaceMethod getDeviceTypeAndroid:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DefaultClientBrandingAttributes$ReadOnly> getDeviceTypeAndroid();
    Code:
       0: getstatic     #122                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #153                // String deviceTypeAndroid
       5: aload_0
       6: invokedynamic #158,  0            // InvokeDynamic #8:apply:(Lzio/aws/workspaces/model/ImportClientBrandingResponse$ReadOnly;)Lscala/Function0;
      11: invokevirtual #138                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDeviceTypeIos$(zio.aws.workspaces.model.ImportClientBrandingResponse$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #162                // InterfaceMethod getDeviceTypeIos:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.IosClientBrandingAttributes$ReadOnly> getDeviceTypeIos();
    Code:
       0: getstatic     #122                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #164                // String deviceTypeIos
       5: aload_0
       6: invokedynamic #169,  0            // InvokeDynamic #9:apply:(Lzio/aws/workspaces/model/ImportClientBrandingResponse$ReadOnly;)Lscala/Function0;
      11: invokevirtual #138                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDeviceTypeLinux$(zio.aws.workspaces.model.ImportClientBrandingResponse$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #173                // InterfaceMethod getDeviceTypeLinux:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DefaultClientBrandingAttributes$ReadOnly> getDeviceTypeLinux();
    Code:
       0: getstatic     #122                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #174                // String deviceTypeLinux
       5: aload_0
       6: invokedynamic #179,  0            // InvokeDynamic #10:apply:(Lzio/aws/workspaces/model/ImportClientBrandingResponse$ReadOnly;)Lscala/Function0;
      11: invokevirtual #138                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDeviceTypeWeb$(zio.aws.workspaces.model.ImportClientBrandingResponse$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #183                // InterfaceMethod getDeviceTypeWeb:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.DefaultClientBrandingAttributes$ReadOnly> getDeviceTypeWeb();
    Code:
       0: getstatic     #122                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #184                // String deviceTypeWeb
       5: aload_0
       6: invokedynamic #189,  0            // InvokeDynamic #11:apply:(Lzio/aws/workspaces/model/ImportClientBrandingResponse$ReadOnly;)Lscala/Function0;
      11: invokevirtual #138                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.aws.workspaces.model.DefaultClientBrandingAttributes $anonfun$asEditable$1(zio.aws.workspaces.model.DefaultClientBrandingAttributes$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #193,  1          // InterfaceMethod zio/aws/workspaces/model/DefaultClientBrandingAttributes$ReadOnly.asEditable:()Lzio/aws/workspaces/model/DefaultClientBrandingAttributes;
       6: areturn

  public static zio.aws.workspaces.model.DefaultClientBrandingAttributes $anonfun$asEditable$2(zio.aws.workspaces.model.DefaultClientBrandingAttributes$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #193,  1          // InterfaceMethod zio/aws/workspaces/model/DefaultClientBrandingAttributes$ReadOnly.asEditable:()Lzio/aws/workspaces/model/DefaultClientBrandingAttributes;
       6: areturn

  public static zio.aws.workspaces.model.DefaultClientBrandingAttributes $anonfun$asEditable$3(zio.aws.workspaces.model.DefaultClientBrandingAttributes$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #193,  1          // InterfaceMethod zio/aws/workspaces/model/DefaultClientBrandingAttributes$ReadOnly.asEditable:()Lzio/aws/workspaces/model/DefaultClientBrandingAttributes;
       6: areturn

  public static zio.aws.workspaces.model.IosClientBrandingAttributes $anonfun$asEditable$4(zio.aws.workspaces.model.IosClientBrandingAttributes$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #197,  1          // InterfaceMethod zio/aws/workspaces/model/IosClientBrandingAttributes$ReadOnly.asEditable:()Lzio/aws/workspaces/model/IosClientBrandingAttributes;
       6: areturn

  public static zio.aws.workspaces.model.DefaultClientBrandingAttributes $anonfun$asEditable$5(zio.aws.workspaces.model.DefaultClientBrandingAttributes$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #193,  1          // InterfaceMethod zio/aws/workspaces/model/DefaultClientBrandingAttributes$ReadOnly.asEditable:()Lzio/aws/workspaces/model/DefaultClientBrandingAttributes;
       6: areturn

  public static zio.aws.workspaces.model.DefaultClientBrandingAttributes $anonfun$asEditable$6(zio.aws.workspaces.model.DefaultClientBrandingAttributes$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #193,  1          // InterfaceMethod zio/aws/workspaces/model/DefaultClientBrandingAttributes$ReadOnly.asEditable:()Lzio/aws/workspaces/model/DefaultClientBrandingAttributes;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getDeviceTypeWindows$1(zio.aws.workspaces.model.ImportClientBrandingResponse$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #33,  1           // InterfaceMethod deviceTypeWindows:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getDeviceTypeOsx$1(zio.aws.workspaces.model.ImportClientBrandingResponse$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #63,  1           // InterfaceMethod deviceTypeOsx:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getDeviceTypeAndroid$1(zio.aws.workspaces.model.ImportClientBrandingResponse$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #71,  1           // InterfaceMethod deviceTypeAndroid:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getDeviceTypeIos$1(zio.aws.workspaces.model.ImportClientBrandingResponse$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #79,  1           // InterfaceMethod deviceTypeIos:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getDeviceTypeLinux$1(zio.aws.workspaces.model.ImportClientBrandingResponse$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #89,  1           // InterfaceMethod deviceTypeLinux:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getDeviceTypeWeb$1(zio.aws.workspaces.model.ImportClientBrandingResponse$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #97,  1           // InterfaceMethod deviceTypeWeb:()Lzio/prelude/data/Optional;
       6: areturn

  public static void $init$(zio.aws.workspaces.model.ImportClientBrandingResponse$ReadOnly);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #212,  0            // InvokeDynamic #12:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
