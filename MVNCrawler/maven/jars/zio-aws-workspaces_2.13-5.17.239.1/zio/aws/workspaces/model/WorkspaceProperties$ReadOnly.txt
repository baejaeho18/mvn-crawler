Compiled from "WorkspaceProperties.scala"
public interface zio.aws.workspaces.model.WorkspaceProperties$ReadOnly {
  public static zio.aws.workspaces.model.WorkspaceProperties asEditable$(zio.aws.workspaces.model.WorkspaceProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #20                 // InterfaceMethod asEditable:()Lzio/aws/workspaces/model/WorkspaceProperties;
       4: areturn

  public default zio.aws.workspaces.model.WorkspaceProperties asEditable();
    Code:
       0: new           #12                 // class zio/aws/workspaces/model/WorkspaceProperties
       3: dup
       4: aload_0
       5: invokeinterface #25,  1           // InterfaceMethod runningMode:()Lzio/prelude/data/Optional;
      10: invokedynamic #46,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
      15: invokeinterface #52,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      20: aload_0
      21: invokeinterface #55,  1           // InterfaceMethod runningModeAutoStopTimeoutInMinutes:()Lzio/prelude/data/Optional;
      26: invokedynamic #65,  0             // InvokeDynamic #1:apply$mcII$sp:()Lscala/runtime/java8/JFunction1$mcII$sp;
      31: invokeinterface #52,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      36: aload_0
      37: invokeinterface #68,  1           // InterfaceMethod rootVolumeSizeGib:()Lzio/prelude/data/Optional;
      42: invokedynamic #73,  0             // InvokeDynamic #2:apply$mcII$sp:()Lscala/runtime/java8/JFunction1$mcII$sp;
      47: invokeinterface #52,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      52: aload_0
      53: invokeinterface #76,  1           // InterfaceMethod userVolumeSizeGib:()Lzio/prelude/data/Optional;
      58: invokedynamic #81,  0             // InvokeDynamic #3:apply$mcII$sp:()Lscala/runtime/java8/JFunction1$mcII$sp;
      63: invokeinterface #52,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      68: aload_0
      69: invokeinterface #84,  1           // InterfaceMethod computeTypeName:()Lzio/prelude/data/Optional;
      74: invokedynamic #91,  0             // InvokeDynamic #4:apply:()Lscala/Function1;
      79: invokeinterface #52,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      84: invokespecial #95                 // Method zio/aws/workspaces/model/WorkspaceProperties."<init>":(Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;)V
      87: areturn

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.RunningMode> runningMode();

  public abstract zio.prelude.data.Optional<java.lang.Object> runningModeAutoStopTimeoutInMinutes();

  public abstract zio.prelude.data.Optional<java.lang.Object> rootVolumeSizeGib();

  public abstract zio.prelude.data.Optional<java.lang.Object> userVolumeSizeGib();

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.Compute> computeTypeName();

  public static zio.ZIO getRunningMode$(zio.aws.workspaces.model.WorkspaceProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #105                // InterfaceMethod getRunningMode:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.RunningMode> getRunningMode();
    Code:
       0: getstatic     #112                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #113                // String runningMode
       5: aload_0
       6: invokedynamic #124,  0            // InvokeDynamic #5:apply:(Lzio/aws/workspaces/model/WorkspaceProperties$ReadOnly;)Lscala/Function0;
      11: invokevirtual #128                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getRunningModeAutoStopTimeoutInMinutes$(zio.aws.workspaces.model.WorkspaceProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #132                // InterfaceMethod getRunningModeAutoStopTimeoutInMinutes:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getRunningModeAutoStopTimeoutInMinutes();
    Code:
       0: getstatic     #112                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #134                // String runningModeAutoStopTimeoutInMinutes
       5: aload_0
       6: invokedynamic #139,  0            // InvokeDynamic #6:apply:(Lzio/aws/workspaces/model/WorkspaceProperties$ReadOnly;)Lscala/Function0;
      11: invokevirtual #128                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getRootVolumeSizeGib$(zio.aws.workspaces.model.WorkspaceProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #143                // InterfaceMethod getRootVolumeSizeGib:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getRootVolumeSizeGib();
    Code:
       0: getstatic     #112                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #144                // String rootVolumeSizeGib
       5: aload_0
       6: invokedynamic #149,  0            // InvokeDynamic #7:apply:(Lzio/aws/workspaces/model/WorkspaceProperties$ReadOnly;)Lscala/Function0;
      11: invokevirtual #128                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getUserVolumeSizeGib$(zio.aws.workspaces.model.WorkspaceProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #153                // InterfaceMethod getUserVolumeSizeGib:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getUserVolumeSizeGib();
    Code:
       0: getstatic     #112                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #154                // String userVolumeSizeGib
       5: aload_0
       6: invokedynamic #159,  0            // InvokeDynamic #8:apply:(Lzio/aws/workspaces/model/WorkspaceProperties$ReadOnly;)Lscala/Function0;
      11: invokevirtual #128                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getComputeTypeName$(zio.aws.workspaces.model.WorkspaceProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #163                // InterfaceMethod getComputeTypeName:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.Compute> getComputeTypeName();
    Code:
       0: getstatic     #112                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #165                // String computeTypeName
       5: aload_0
       6: invokedynamic #170,  0            // InvokeDynamic #9:apply:(Lzio/aws/workspaces/model/WorkspaceProperties$ReadOnly;)Lscala/Function0;
      11: invokevirtual #128                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.aws.workspaces.model.RunningMode $anonfun$asEditable$1(zio.aws.workspaces.model.RunningMode);
    Code:
       0: aload_0
       1: areturn

  public static int $anonfun$asEditable$2(int);
    Code:
       0: iload_0
       1: ireturn

  public static int $anonfun$asEditable$3(int);
    Code:
       0: iload_0
       1: ireturn

  public static int $anonfun$asEditable$4(int);
    Code:
       0: iload_0
       1: ireturn

  public static zio.aws.workspaces.model.Compute $anonfun$asEditable$5(zio.aws.workspaces.model.Compute);
    Code:
       0: aload_0
       1: areturn

  public static zio.prelude.data.Optional $anonfun$getRunningMode$1(zio.aws.workspaces.model.WorkspaceProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #25,  1           // InterfaceMethod runningMode:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getRunningModeAutoStopTimeoutInMinutes$1(zio.aws.workspaces.model.WorkspaceProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #55,  1           // InterfaceMethod runningModeAutoStopTimeoutInMinutes:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getRootVolumeSizeGib$1(zio.aws.workspaces.model.WorkspaceProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #68,  1           // InterfaceMethod rootVolumeSizeGib:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getUserVolumeSizeGib$1(zio.aws.workspaces.model.WorkspaceProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #76,  1           // InterfaceMethod userVolumeSizeGib:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getComputeTypeName$1(zio.aws.workspaces.model.WorkspaceProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #84,  1           // InterfaceMethod computeTypeName:()Lzio/prelude/data/Optional;
       6: areturn

  public static void $init$(zio.aws.workspaces.model.WorkspaceProperties$ReadOnly);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #188,  0            // InvokeDynamic #10:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
