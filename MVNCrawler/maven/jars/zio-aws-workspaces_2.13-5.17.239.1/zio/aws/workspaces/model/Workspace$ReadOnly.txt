Compiled from "Workspace.scala"
public interface zio.aws.workspaces.model.Workspace$ReadOnly {
  public static zio.aws.workspaces.model.Workspace asEditable$(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #28                 // InterfaceMethod asEditable:()Lzio/aws/workspaces/model/Workspace;
       4: areturn

  public default zio.aws.workspaces.model.Workspace asEditable();
    Code:
       0: new           #17                 // class zio/aws/workspaces/model/Workspace
       3: dup
       4: aload_0
       5: invokeinterface #33,  1           // InterfaceMethod workspaceId:()Lzio/prelude/data/Optional;
      10: invokedynamic #54,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
      15: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      20: aload_0
      21: invokeinterface #63,  1           // InterfaceMethod directoryId:()Lzio/prelude/data/Optional;
      26: invokedynamic #68,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
      31: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      36: aload_0
      37: invokeinterface #71,  1           // InterfaceMethod userName:()Lzio/prelude/data/Optional;
      42: invokedynamic #76,  0             // InvokeDynamic #2:apply:()Lscala/Function1;
      47: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      52: aload_0
      53: invokeinterface #79,  1           // InterfaceMethod ipAddress:()Lzio/prelude/data/Optional;
      58: invokedynamic #84,  0             // InvokeDynamic #3:apply:()Lscala/Function1;
      63: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      68: aload_0
      69: invokeinterface #87,  1           // InterfaceMethod state:()Lzio/prelude/data/Optional;
      74: invokedynamic #94,  0             // InvokeDynamic #4:apply:()Lscala/Function1;
      79: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      84: aload_0
      85: invokeinterface #97,  1           // InterfaceMethod bundleId:()Lzio/prelude/data/Optional;
      90: invokedynamic #102,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
      95: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     100: aload_0
     101: invokeinterface #105,  1          // InterfaceMethod subnetId:()Lzio/prelude/data/Optional;
     106: invokedynamic #110,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
     111: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     116: aload_0
     117: invokeinterface #113,  1          // InterfaceMethod errorMessage:()Lzio/prelude/data/Optional;
     122: invokedynamic #118,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
     127: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     132: aload_0
     133: invokeinterface #121,  1          // InterfaceMethod errorCode:()Lzio/prelude/data/Optional;
     138: invokedynamic #126,  0            // InvokeDynamic #8:apply:()Lscala/Function1;
     143: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     148: aload_0
     149: invokeinterface #129,  1          // InterfaceMethod computerName:()Lzio/prelude/data/Optional;
     154: invokedynamic #134,  0            // InvokeDynamic #9:apply:()Lscala/Function1;
     159: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     164: aload_0
     165: invokeinterface #137,  1          // InterfaceMethod volumeEncryptionKey:()Lzio/prelude/data/Optional;
     170: invokedynamic #142,  0            // InvokeDynamic #10:apply:()Lscala/Function1;
     175: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     180: aload_0
     181: invokeinterface #145,  1          // InterfaceMethod userVolumeEncryptionEnabled:()Lzio/prelude/data/Optional;
     186: invokedynamic #150,  0            // InvokeDynamic #11:apply:()Lscala/Function1;
     191: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     196: aload_0
     197: invokeinterface #153,  1          // InterfaceMethod rootVolumeEncryptionEnabled:()Lzio/prelude/data/Optional;
     202: invokedynamic #158,  0            // InvokeDynamic #12:apply:()Lscala/Function1;
     207: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     212: aload_0
     213: invokeinterface #161,  1          // InterfaceMethod workspaceProperties:()Lzio/prelude/data/Optional;
     218: invokedynamic #168,  0            // InvokeDynamic #13:apply:()Lscala/Function1;
     223: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     228: aload_0
     229: invokeinterface #171,  1          // InterfaceMethod modificationStates:()Lzio/prelude/data/Optional;
     234: invokedynamic #178,  0            // InvokeDynamic #14:apply:()Lscala/Function1;
     239: invokeinterface #60,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     244: invokespecial #182                // Method zio/aws/workspaces/model/Workspace."<init>":(Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;)V
     247: areturn

  public abstract zio.prelude.data.Optional<java.lang.String> workspaceId();

  public abstract zio.prelude.data.Optional<java.lang.String> directoryId();

  public abstract zio.prelude.data.Optional<java.lang.String> userName();

  public abstract zio.prelude.data.Optional<java.lang.String> ipAddress();

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.WorkspaceState> state();

  public abstract zio.prelude.data.Optional<java.lang.String> bundleId();

  public abstract zio.prelude.data.Optional<java.lang.String> subnetId();

  public abstract zio.prelude.data.Optional<java.lang.String> errorMessage();

  public abstract zio.prelude.data.Optional<java.lang.String> errorCode();

  public abstract zio.prelude.data.Optional<java.lang.String> computerName();

  public abstract zio.prelude.data.Optional<java.lang.String> volumeEncryptionKey();

  public abstract zio.prelude.data.Optional<java.lang.Object> userVolumeEncryptionEnabled();

  public abstract zio.prelude.data.Optional<java.lang.Object> rootVolumeEncryptionEnabled();

  public abstract zio.prelude.data.Optional<zio.aws.workspaces.model.WorkspaceProperties$ReadOnly> workspaceProperties();

  public abstract zio.prelude.data.Optional<scala.collection.immutable.List<zio.aws.workspaces.model.ModificationState$ReadOnly>> modificationStates();

  public static zio.ZIO getWorkspaceId$(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #194                // InterfaceMethod getWorkspaceId:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getWorkspaceId();
    Code:
       0: getstatic     #201                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #202                // String workspaceId
       5: aload_0
       6: invokedynamic #213,  0            // InvokeDynamic #15:apply:(Lzio/aws/workspaces/model/Workspace$ReadOnly;)Lscala/Function0;
      11: invokevirtual #217                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getDirectoryId$(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #221                // InterfaceMethod getDirectoryId:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getDirectoryId();
    Code:
       0: getstatic     #201                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #222                // String directoryId
       5: aload_0
       6: invokedynamic #227,  0            // InvokeDynamic #16:apply:(Lzio/aws/workspaces/model/Workspace$ReadOnly;)Lscala/Function0;
      11: invokevirtual #217                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getUserName$(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #231                // InterfaceMethod getUserName:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getUserName();
    Code:
       0: getstatic     #201                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #232                // String userName
       5: aload_0
       6: invokedynamic #237,  0            // InvokeDynamic #17:apply:(Lzio/aws/workspaces/model/Workspace$ReadOnly;)Lscala/Function0;
      11: invokevirtual #217                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getIpAddress$(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #241                // InterfaceMethod getIpAddress:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getIpAddress();
    Code:
       0: getstatic     #201                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #242                // String ipAddress
       5: aload_0
       6: invokedynamic #247,  0            // InvokeDynamic #18:apply:(Lzio/aws/workspaces/model/Workspace$ReadOnly;)Lscala/Function0;
      11: invokevirtual #217                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getState$(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #251                // InterfaceMethod getState:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.WorkspaceState> getState();
    Code:
       0: getstatic     #201                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #253                // String state
       5: aload_0
       6: invokedynamic #258,  0            // InvokeDynamic #19:apply:(Lzio/aws/workspaces/model/Workspace$ReadOnly;)Lscala/Function0;
      11: invokevirtual #217                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getBundleId$(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #262                // InterfaceMethod getBundleId:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getBundleId();
    Code:
       0: getstatic     #201                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #263                // String bundleId
       6: aload_0
       7: invokedynamic #268,  0            // InvokeDynamic #20:apply:(Lzio/aws/workspaces/model/Workspace$ReadOnly;)Lscala/Function0;
      12: invokevirtual #217                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getSubnetId$(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #272                // InterfaceMethod getSubnetId:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getSubnetId();
    Code:
       0: getstatic     #201                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #273                // String subnetId
       6: aload_0
       7: invokedynamic #278,  0            // InvokeDynamic #21:apply:(Lzio/aws/workspaces/model/Workspace$ReadOnly;)Lscala/Function0;
      12: invokevirtual #217                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getErrorMessage$(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #282                // InterfaceMethod getErrorMessage:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getErrorMessage();
    Code:
       0: getstatic     #201                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #283                // String errorMessage
       6: aload_0
       7: invokedynamic #288,  0            // InvokeDynamic #22:apply:(Lzio/aws/workspaces/model/Workspace$ReadOnly;)Lscala/Function0;
      12: invokevirtual #217                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getErrorCode$(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #292                // InterfaceMethod getErrorCode:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getErrorCode();
    Code:
       0: getstatic     #201                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #293                // String errorCode
       6: aload_0
       7: invokedynamic #298,  0            // InvokeDynamic #23:apply:(Lzio/aws/workspaces/model/Workspace$ReadOnly;)Lscala/Function0;
      12: invokevirtual #217                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getComputerName$(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #302                // InterfaceMethod getComputerName:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getComputerName();
    Code:
       0: getstatic     #201                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #303                // String computerName
       6: aload_0
       7: invokedynamic #308,  0            // InvokeDynamic #24:apply:(Lzio/aws/workspaces/model/Workspace$ReadOnly;)Lscala/Function0;
      12: invokevirtual #217                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getVolumeEncryptionKey$(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #312                // InterfaceMethod getVolumeEncryptionKey:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getVolumeEncryptionKey();
    Code:
       0: getstatic     #201                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #313                // String volumeEncryptionKey
       6: aload_0
       7: invokedynamic #318,  0            // InvokeDynamic #25:apply:(Lzio/aws/workspaces/model/Workspace$ReadOnly;)Lscala/Function0;
      12: invokevirtual #217                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getUserVolumeEncryptionEnabled$(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #322                // InterfaceMethod getUserVolumeEncryptionEnabled:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getUserVolumeEncryptionEnabled();
    Code:
       0: getstatic     #201                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #324                // String userVolumeEncryptionEnabled
       6: aload_0
       7: invokedynamic #329,  0            // InvokeDynamic #26:apply:(Lzio/aws/workspaces/model/Workspace$ReadOnly;)Lscala/Function0;
      12: invokevirtual #217                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getRootVolumeEncryptionEnabled$(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #333                // InterfaceMethod getRootVolumeEncryptionEnabled:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getRootVolumeEncryptionEnabled();
    Code:
       0: getstatic     #201                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #334                // String rootVolumeEncryptionEnabled
       6: aload_0
       7: invokedynamic #339,  0            // InvokeDynamic #27:apply:(Lzio/aws/workspaces/model/Workspace$ReadOnly;)Lscala/Function0;
      12: invokevirtual #217                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getWorkspaceProperties$(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #343                // InterfaceMethod getWorkspaceProperties:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workspaces.model.WorkspaceProperties$ReadOnly> getWorkspaceProperties();
    Code:
       0: getstatic     #201                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #345                // String workspaceProperties
       6: aload_0
       7: invokedynamic #350,  0            // InvokeDynamic #28:apply:(Lzio/aws/workspaces/model/Workspace$ReadOnly;)Lscala/Function0;
      12: invokevirtual #217                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getModificationStates$(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #354                // InterfaceMethod getModificationStates:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, scala.collection.immutable.List<zio.aws.workspaces.model.ModificationState$ReadOnly>> getModificationStates();
    Code:
       0: getstatic     #201                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #356                // String modificationStates
       6: aload_0
       7: invokedynamic #361,  0            // InvokeDynamic #29:apply:(Lzio/aws/workspaces/model/Workspace$ReadOnly;)Lscala/Function0;
      12: invokevirtual #217                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static java.lang.String $anonfun$asEditable$1(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String $anonfun$asEditable$2(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String $anonfun$asEditable$3(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String $anonfun$asEditable$4(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static zio.aws.workspaces.model.WorkspaceState $anonfun$asEditable$5(zio.aws.workspaces.model.WorkspaceState);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String $anonfun$asEditable$6(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String $anonfun$asEditable$7(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String $anonfun$asEditable$8(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String $anonfun$asEditable$9(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String $anonfun$asEditable$10(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String $anonfun$asEditable$11(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  public static boolean $anonfun$asEditable$12(boolean);
    Code:
       0: iload_0
       1: ireturn

  public static boolean $anonfun$asEditable$13(boolean);
    Code:
       0: iload_0
       1: ireturn

  public static zio.aws.workspaces.model.WorkspaceProperties $anonfun$asEditable$14(zio.aws.workspaces.model.WorkspaceProperties$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #371,  1          // InterfaceMethod zio/aws/workspaces/model/WorkspaceProperties$ReadOnly.asEditable:()Lzio/aws/workspaces/model/WorkspaceProperties;
       6: areturn

  public static zio.aws.workspaces.model.ModificationState $anonfun$asEditable$16(zio.aws.workspaces.model.ModificationState$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #378,  1          // InterfaceMethod zio/aws/workspaces/model/ModificationState$ReadOnly.asEditable:()Lzio/aws/workspaces/model/ModificationState;
       6: areturn

  public static scala.collection.immutable.List $anonfun$asEditable$15(scala.collection.immutable.List);
    Code:
       0: aload_0
       1: invokedynamic #384,  0            // InvokeDynamic #30:apply:()Lscala/Function1;
       6: invokevirtual #389                // Method scala/collection/immutable/List.map:(Lscala/Function1;)Lscala/collection/immutable/List;
       9: areturn

  public static zio.prelude.data.Optional $anonfun$getWorkspaceId$1(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #33,  1           // InterfaceMethod workspaceId:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getDirectoryId$1(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #63,  1           // InterfaceMethod directoryId:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getUserName$1(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #71,  1           // InterfaceMethod userName:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getIpAddress$1(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #79,  1           // InterfaceMethod ipAddress:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getState$1(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #87,  1           // InterfaceMethod state:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getBundleId$1(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #97,  1           // InterfaceMethod bundleId:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getSubnetId$1(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #105,  1          // InterfaceMethod subnetId:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getErrorMessage$1(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #113,  1          // InterfaceMethod errorMessage:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getErrorCode$1(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #121,  1          // InterfaceMethod errorCode:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getComputerName$1(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #129,  1          // InterfaceMethod computerName:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getVolumeEncryptionKey$1(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #137,  1          // InterfaceMethod volumeEncryptionKey:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getUserVolumeEncryptionEnabled$1(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #145,  1          // InterfaceMethod userVolumeEncryptionEnabled:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getRootVolumeEncryptionEnabled$1(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #153,  1          // InterfaceMethod rootVolumeEncryptionEnabled:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getWorkspaceProperties$1(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #161,  1          // InterfaceMethod workspaceProperties:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional $anonfun$getModificationStates$1(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: aload_0
       1: invokeinterface #171,  1          // InterfaceMethod modificationStates:()Lzio/prelude/data/Optional;
       6: areturn

  public static void $init$(zio.aws.workspaces.model.Workspace$ReadOnly);
    Code:
       0: return

  public static java.lang.Object $anonfun$asEditable$12$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #398                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #400                // InterfaceMethod $anonfun$asEditable$12:(Z)Z
       7: invokestatic  #404                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  public static java.lang.Object $anonfun$asEditable$13$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #398                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #407                // InterfaceMethod $anonfun$asEditable$13:(Z)Z
       7: invokestatic  #404                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #419,  0            // InvokeDynamic #31:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
