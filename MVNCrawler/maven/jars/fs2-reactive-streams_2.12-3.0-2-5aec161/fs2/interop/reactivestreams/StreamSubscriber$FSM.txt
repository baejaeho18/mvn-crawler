Compiled from "StreamSubscriber.scala"
public interface fs2.interop.reactivestreams.StreamSubscriber$FSM<F, A> {
  public abstract F onSubscribe(org.reactivestreams.Subscription);

  public abstract F onNext(A);

  public abstract F onError(java.lang.Throwable);

  public abstract F onComplete();

  public abstract F onFinalize();

  public abstract F dequeue1();

  public static fs2.Stream stream$(fs2.interop.reactivestreams.StreamSubscriber$FSM, java.lang.Object, cats.ApplicativeError);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #50                 // InterfaceMethod stream:(Ljava/lang/Object;Lcats/ApplicativeError;)Lfs2/Stream;
       6: areturn

  public default fs2.Stream<F, A> stream(F, cats.ApplicativeError<F, java.lang.Throwable>);
    Code:
       0: getstatic     #60                 // Field fs2/Stream$.MODULE$:Lfs2/Stream$;
       3: aload_1
       4: aload_0
       5: invokedynamic #83,  0             // InvokeDynamic #0:apply:(Lfs2/interop/reactivestreams/StreamSubscriber$FSM;)Lscala/Function1;
      10: invokevirtual #87                 // Method fs2/Stream$.bracket:(Ljava/lang/Object;Lscala/Function1;)Lfs2/Stream;
      13: aload_0
      14: aload_2
      15: invokedynamic #98,  0             // InvokeDynamic #1:apply:(Lfs2/interop/reactivestreams/StreamSubscriber$FSM;Lcats/ApplicativeError;)Lscala/Function0;
      20: getstatic     #103                // Field fs2/compat/NotGiven$.MODULE$:Lfs2/compat/NotGiven$;
      23: invokevirtual #107                // Method fs2/compat/NotGiven$.default:()Lfs2/compat/NotGiven;
      26: invokevirtual #111                // Method fs2/Stream.$greater$greater:(Lscala/Function0;Lfs2/compat/NotGiven;)Lfs2/Stream;
      29: areturn

  public static java.lang.Object $anonfun$stream$1(fs2.interop.reactivestreams.StreamSubscriber$FSM, scala.runtime.BoxedUnit);
    Code:
       0: aload_0
       1: invokeinterface #115,  1          // InterfaceMethod onFinalize:()Ljava/lang/Object;
       6: areturn

  public static fs2.Stream $anonfun$stream$2(fs2.interop.reactivestreams.StreamSubscriber$FSM, cats.ApplicativeError);
    Code:
       0: getstatic     #120                // Field fs2/Stream$OptionStreamOps$.MODULE$:Lfs2/Stream$OptionStreamOps$;
       3: getstatic     #60                 // Field fs2/Stream$.MODULE$:Lfs2/Stream$;
       6: getstatic     #60                 // Field fs2/Stream$.MODULE$:Lfs2/Stream$;
       9: aload_0
      10: invokeinterface #122,  1          // InterfaceMethod dequeue1:()Ljava/lang/Object;
      15: invokevirtual #126                // Method fs2/Stream$.eval:(Ljava/lang/Object;)Lfs2/Stream;
      18: invokevirtual #129                // Method fs2/Stream.repeat:()Lfs2/Stream;
      21: getstatic     #134                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      24: invokevirtual #138                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      27: getstatic     #143                // Field fs2/RaiseThrowable$.MODULE$:Lfs2/RaiseThrowable$;
      30: aload_1
      31: invokevirtual #147                // Method fs2/RaiseThrowable$.fromApplicativeError:(Lcats/ApplicativeError;)Lfs2/RaiseThrowable;
      34: invokevirtual #151                // Method fs2/Stream.rethrow:(Lscala/Predef$$less$colon$less;Lfs2/RaiseThrowable;)Lfs2/Stream;
      37: invokevirtual #155                // Method fs2/Stream$.OptionStreamOps:(Lfs2/Stream;)Lfs2/Stream;
      40: invokevirtual #158                // Method fs2/Stream$OptionStreamOps$.unNoneTerminate$extension:(Lfs2/Stream;)Lfs2/Stream;
      43: areturn

  public static void $init$(fs2.interop.reactivestreams.StreamSubscriber$FSM);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #172,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
