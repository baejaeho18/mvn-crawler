Compiled from "BackboneElement.java"
public abstract class org.hl7.fhir.dstu3.model.BackboneElement extends org.hl7.fhir.dstu3.model.Element implements org.hl7.fhir.instance.model.api.IBaseBackboneElement {
  protected java.util.List<org.hl7.fhir.dstu3.model.Extension> modifierExtension;

  private static final long serialVersionUID;

  public org.hl7.fhir.dstu3.model.BackboneElement();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hl7/fhir/dstu3/model/Element."<init>":()V
       4: return

  public java.util.List<org.hl7.fhir.dstu3.model.Extension> getModifierExtension();
    Code:
       0: aload_0
       1: getfield      #2                  // Field modifierExtension:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #3                  // class java/util/ArrayList
      11: dup
      12: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      15: putfield      #2                  // Field modifierExtension:Ljava/util/List;
      18: aload_0
      19: getfield      #2                  // Field modifierExtension:Ljava/util/List;
      22: areturn

  public org.hl7.fhir.dstu3.model.BackboneElement setModifierExtension(java.util.List<org.hl7.fhir.dstu3.model.Extension>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field modifierExtension:Ljava/util/List;
       5: aload_0
       6: areturn

  public boolean hasModifierExtension();
    Code:
       0: aload_0
       1: getfield      #2                  // Field modifierExtension:Ljava/util/List;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #2                  // Field modifierExtension:Ljava/util/List;
      13: invokeinterface #5,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_1
      19: aload_1
      20: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          50
      28: aload_1
      29: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #8                  // class org/hl7/fhir/dstu3/model/Extension
      37: astore_2
      38: aload_2
      39: invokevirtual #9                  // Method org/hl7/fhir/dstu3/model/Extension.isEmpty:()Z
      42: ifne          47
      45: iconst_1
      46: ireturn
      47: goto          19
      50: iconst_0
      51: ireturn

  public org.hl7.fhir.dstu3.model.Extension addModifierExtension();
    Code:
       0: new           #8                  // class org/hl7/fhir/dstu3/model/Extension
       3: dup
       4: invokespecial #10                 // Method org/hl7/fhir/dstu3/model/Extension."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #2                  // Field modifierExtension:Ljava/util/List;
      12: ifnonnull     26
      15: aload_0
      16: new           #3                  // class java/util/ArrayList
      19: dup
      20: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #2                  // Field modifierExtension:Ljava/util/List;
      26: aload_0
      27: getfield      #2                  // Field modifierExtension:Ljava/util/List;
      30: aload_1
      31: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      36: pop
      37: aload_1
      38: areturn

  public org.hl7.fhir.dstu3.model.BackboneElement addModifierExtension(org.hl7.fhir.dstu3.model.Extension);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aload_0
       5: areturn
       6: aload_0
       7: getfield      #2                  // Field modifierExtension:Ljava/util/List;
      10: ifnonnull     24
      13: aload_0
      14: new           #3                  // class java/util/ArrayList
      17: dup
      18: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      21: putfield      #2                  // Field modifierExtension:Ljava/util/List;
      24: aload_0
      25: getfield      #2                  // Field modifierExtension:Ljava/util/List;
      28: aload_1
      29: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      34: pop
      35: aload_0
      36: areturn

  public org.hl7.fhir.dstu3.model.Extension getModifierExtensionFirstRep();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getModifierExtension:()Ljava/util/List;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          17
      12: aload_0
      13: invokevirtual #14                 // Method addModifierExtension:()Lorg/hl7/fhir/dstu3/model/Extension;
      16: pop
      17: aload_0
      18: invokevirtual #12                 // Method getModifierExtension:()Ljava/util/List;
      21: iconst_0
      22: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      27: checkcast     #8                  // class org/hl7/fhir/dstu3/model/Extension
      30: areturn

  protected void listChildren(java.util.List<org.hl7.fhir.dstu3.model.Property>);
    Code:
       0: aload_1
       1: new           #16                 // class org/hl7/fhir/dstu3/model/Property
       4: dup
       5: ldc           #17                 // String modifierExtension
       7: ldc           #18                 // String Extension
       9: ldc           #19                 // String May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
      11: iconst_0
      12: ldc           #21                 // int 2147483647
      14: aload_0
      15: getfield      #2                  // Field modifierExtension:Ljava/util/List;
      18: invokespecial #22                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILjava/util/List;)V
      21: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      26: pop
      27: return

  public org.hl7.fhir.dstu3.model.Property getNamedProperty(int, java.lang.String, boolean) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: iload_1
       1: lookupswitch  { // 1
            -298878168: 20
               default: 41
          }
      20: new           #16                 // class org/hl7/fhir/dstu3/model/Property
      23: dup
      24: ldc           #17                 // String modifierExtension
      26: ldc           #18                 // String Extension
      28: ldc           #19                 // String May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
      30: iconst_0
      31: ldc           #21                 // int 2147483647
      33: aload_0
      34: getfield      #2                  // Field modifierExtension:Ljava/util/List;
      37: invokespecial #22                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILjava/util/List;)V
      40: areturn
      41: aload_0
      42: iload_1
      43: aload_2
      44: iload_3
      45: invokespecial #23                 // Method org/hl7/fhir/dstu3/model/Element.getNamedProperty:(ILjava/lang/String;Z)Lorg/hl7/fhir/dstu3/model/Property;
      48: areturn

  public org.hl7.fhir.dstu3.model.Base[] getProperty(int, java.lang.String, boolean) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: iload_1
       1: lookupswitch  { // 1
            -298878168: 20
               default: 59
          }
      20: aload_0
      21: getfield      #2                  // Field modifierExtension:Ljava/util/List;
      24: ifnonnull     34
      27: iconst_0
      28: anewarray     #24                 // class org/hl7/fhir/dstu3/model/Base
      31: goto          58
      34: aload_0
      35: getfield      #2                  // Field modifierExtension:Ljava/util/List;
      38: aload_0
      39: getfield      #2                  // Field modifierExtension:Ljava/util/List;
      42: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
      47: anewarray     #24                 // class org/hl7/fhir/dstu3/model/Base
      50: invokeinterface #26,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      55: checkcast     #27                 // class "[Lorg/hl7/fhir/dstu3/model/Base;"
      58: areturn
      59: aload_0
      60: iload_1
      61: aload_2
      62: iload_3
      63: invokespecial #28                 // Method org/hl7/fhir/dstu3/model/Element.getProperty:(ILjava/lang/String;Z)[Lorg/hl7/fhir/dstu3/model/Base;
      66: areturn

  public org.hl7.fhir.dstu3.model.Base setProperty(int, java.lang.String, org.hl7.fhir.dstu3.model.Base) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: iload_1
       1: lookupswitch  { // 1
            -298878168: 20
               default: 37
          }
      20: aload_0
      21: invokevirtual #12                 // Method getModifierExtension:()Ljava/util/List;
      24: aload_0
      25: aload_3
      26: invokevirtual #29                 // Method castToExtension:(Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/Extension;
      29: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      34: pop
      35: aload_3
      36: areturn
      37: aload_0
      38: iload_1
      39: aload_2
      40: aload_3
      41: invokespecial #30                 // Method org/hl7/fhir/dstu3/model/Element.setProperty:(ILjava/lang/String;Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/Base;
      44: areturn

  public org.hl7.fhir.dstu3.model.Base setProperty(java.lang.String, org.hl7.fhir.dstu3.model.Base) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: aload_1
       1: ldc           #17                 // String modifierExtension
       3: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          27
       9: aload_0
      10: invokevirtual #12                 // Method getModifierExtension:()Ljava/util/List;
      13: aload_0
      14: aload_2
      15: invokevirtual #29                 // Method castToExtension:(Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/Extension;
      18: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: goto          34
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokespecial #32                 // Method org/hl7/fhir/dstu3/model/Element.setProperty:(Ljava/lang/String;Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/Base;
      33: areturn
      34: aload_2
      35: areturn

  public org.hl7.fhir.dstu3.model.Base makeProperty(int, java.lang.String) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: iload_1
       1: lookupswitch  { // 1
            -298878168: 20
               default: 25
          }
      20: aload_0
      21: invokevirtual #14                 // Method addModifierExtension:()Lorg/hl7/fhir/dstu3/model/Extension;
      24: areturn
      25: aload_0
      26: iload_1
      27: aload_2
      28: invokespecial #33                 // Method org/hl7/fhir/dstu3/model/Element.makeProperty:(ILjava/lang/String;)Lorg/hl7/fhir/dstu3/model/Base;
      31: areturn

  public java.lang.String[] getTypesForProperty(int, java.lang.String) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: iload_1
       1: lookupswitch  { // 1
            -298878168: 20
               default: 30
          }
      20: iconst_1
      21: anewarray     #34                 // class java/lang/String
      24: dup
      25: iconst_0
      26: ldc           #18                 // String Extension
      28: aastore
      29: areturn
      30: aload_0
      31: iload_1
      32: aload_2
      33: invokespecial #35                 // Method org/hl7/fhir/dstu3/model/Element.getTypesForProperty:(ILjava/lang/String;)[Ljava/lang/String;
      36: areturn

  public org.hl7.fhir.dstu3.model.Base addChild(java.lang.String) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: aload_1
       1: ldc           #17                 // String modifierExtension
       3: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          14
       9: aload_0
      10: invokevirtual #14                 // Method addModifierExtension:()Lorg/hl7/fhir/dstu3/model/Extension;
      13: areturn
      14: aload_0
      15: aload_1
      16: invokespecial #36                 // Method org/hl7/fhir/dstu3/model/Element.addChild:(Ljava/lang/String;)Lorg/hl7/fhir/dstu3/model/Base;
      19: areturn

  public java.lang.String fhirType();
    Code:
       0: ldc           #37                 // String BackboneElement
       2: areturn

  public abstract org.hl7.fhir.dstu3.model.BackboneElement copy();

  public void copyValues(org.hl7.fhir.dstu3.model.BackboneElement);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #38                 // Method org/hl7/fhir/dstu3/model/Element.copyValues:(Lorg/hl7/fhir/dstu3/model/Element;)V
       5: aload_0
       6: getfield      #2                  // Field modifierExtension:Ljava/util/List;
       9: ifnull        69
      12: aload_1
      13: new           #3                  // class java/util/ArrayList
      16: dup
      17: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      20: putfield      #2                  // Field modifierExtension:Ljava/util/List;
      23: aload_0
      24: getfield      #2                  // Field modifierExtension:Ljava/util/List;
      27: invokeinterface #5,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      32: astore_2
      33: aload_2
      34: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          69
      42: aload_2
      43: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #8                  // class org/hl7/fhir/dstu3/model/Extension
      51: astore_3
      52: aload_1
      53: getfield      #2                  // Field modifierExtension:Ljava/util/List;
      56: aload_3
      57: invokevirtual #39                 // Method org/hl7/fhir/dstu3/model/Extension.copy:()Lorg/hl7/fhir/dstu3/model/Extension;
      60: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      65: pop
      66: goto          33
      69: return

  public boolean equalsDeep(org.hl7.fhir.dstu3.model.Base);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #40                 // Method org/hl7/fhir/dstu3/model/Element.equalsDeep:(Lorg/hl7/fhir/dstu3/model/Base;)Z
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_1
      11: instanceof    #41                 // class org/hl7/fhir/dstu3/model/BackboneElement
      14: ifne          19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: checkcast     #41                 // class org/hl7/fhir/dstu3/model/BackboneElement
      23: astore_2
      24: aload_0
      25: getfield      #2                  // Field modifierExtension:Ljava/util/List;
      28: aload_2
      29: getfield      #2                  // Field modifierExtension:Ljava/util/List;
      32: iconst_1
      33: invokestatic  #42                 // Method compareDeep:(Ljava/util/List;Ljava/util/List;Z)Z
      36: ireturn

  public boolean equalsShallow(org.hl7.fhir.dstu3.model.Base);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #43                 // Method org/hl7/fhir/dstu3/model/Element.equalsShallow:(Lorg/hl7/fhir/dstu3/model/Base;)Z
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_1
      11: instanceof    #41                 // class org/hl7/fhir/dstu3/model/BackboneElement
      14: ifne          19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: checkcast     #41                 // class org/hl7/fhir/dstu3/model/BackboneElement
      23: astore_2
      24: iconst_1
      25: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method org/hl7/fhir/dstu3/model/Element.isEmpty:()Z
       4: ifeq          21
       7: aload_0
       8: getfield      #2                  // Field modifierExtension:Ljava/util/List;
      11: invokestatic  #45                 // Method ca/uhn/fhir/util/ElementUtil.isEmpty:(Ljava/util/List;)Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public org.hl7.fhir.dstu3.model.Element copy();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method copy:()Lorg/hl7/fhir/dstu3/model/BackboneElement;
       4: areturn

  public org.hl7.fhir.instance.model.api.IBaseExtension addModifierExtension();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method addModifierExtension:()Lorg/hl7/fhir/dstu3/model/Extension;
       4: areturn
}
