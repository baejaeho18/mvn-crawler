Compiled from "PlanDefinition.java"
public class org.hl7.fhir.dstu3.model.PlanDefinition$PlanDefinitionGoalTargetComponent extends org.hl7.fhir.dstu3.model.BackboneElement implements org.hl7.fhir.instance.model.api.IBaseBackboneElement {
  protected org.hl7.fhir.dstu3.model.CodeableConcept measure;

  protected org.hl7.fhir.dstu3.model.Type detail;

  protected org.hl7.fhir.dstu3.model.Duration due;

  private static final long serialVersionUID;

  public org.hl7.fhir.dstu3.model.PlanDefinition$PlanDefinitionGoalTargetComponent();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hl7/fhir/dstu3/model/BackboneElement."<init>":()V
       4: return

  public org.hl7.fhir.dstu3.model.CodeableConcept getMeasure();
    Code:
       0: aload_0
       1: getfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
       4: ifnonnull     40
       7: invokestatic  #3                  // Method org/hl7/fhir/dstu3/model/Configuration.errorOnAutoCreate:()Z
      10: ifeq          23
      13: new           #4                  // class java/lang/Error
      16: dup
      17: ldc           #5                  // String Attempt to auto-create PlanDefinitionGoalTargetComponent.measure
      19: invokespecial #6                  // Method java/lang/Error."<init>":(Ljava/lang/String;)V
      22: athrow
      23: invokestatic  #7                  // Method org/hl7/fhir/dstu3/model/Configuration.doAutoCreate:()Z
      26: ifeq          40
      29: aload_0
      30: new           #8                  // class org/hl7/fhir/dstu3/model/CodeableConcept
      33: dup
      34: invokespecial #9                  // Method org/hl7/fhir/dstu3/model/CodeableConcept."<init>":()V
      37: putfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      40: aload_0
      41: getfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      44: areturn

  public boolean hasMeasure();
    Code:
       0: aload_0
       1: getfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
       4: ifnull        21
       7: aload_0
       8: getfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      11: invokevirtual #10                 // Method org/hl7/fhir/dstu3/model/CodeableConcept.isEmpty:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public org.hl7.fhir.dstu3.model.PlanDefinition$PlanDefinitionGoalTargetComponent setMeasure(org.hl7.fhir.dstu3.model.CodeableConcept);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
       5: aload_0
       6: areturn

  public org.hl7.fhir.dstu3.model.Type getDetail();
    Code:
       0: aload_0
       1: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
       4: areturn

  public org.hl7.fhir.dstu3.model.Quantity getDetailQuantity() throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      13: instanceof    #12                 // class org/hl7/fhir/dstu3/model/Quantity
      16: ifne          60
      19: new           #13                 // class org/hl7/fhir/exceptions/FHIRException
      22: dup
      23: new           #14                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #16                 // String Type mismatch: the type Quantity was expected, but
      32: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      39: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      42: invokevirtual #19                 // Method java/lang/Class.getName:()Ljava/lang/String;
      45: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #20                 // String  was encountered
      50: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #22                 // Method org/hl7/fhir/exceptions/FHIRException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_0
      61: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      64: checkcast     #12                 // class org/hl7/fhir/dstu3/model/Quantity
      67: areturn

  public boolean hasDetailQuantity();
    Code:
       0: aload_0
       1: ifnull        18
       4: aload_0
       5: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
       8: instanceof    #12                 // class org/hl7/fhir/dstu3/model/Quantity
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public org.hl7.fhir.dstu3.model.Range getDetailRange() throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      13: instanceof    #23                 // class org/hl7/fhir/dstu3/model/Range
      16: ifne          60
      19: new           #13                 // class org/hl7/fhir/exceptions/FHIRException
      22: dup
      23: new           #14                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #24                 // String Type mismatch: the type Range was expected, but
      32: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      39: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      42: invokevirtual #19                 // Method java/lang/Class.getName:()Ljava/lang/String;
      45: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #20                 // String  was encountered
      50: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #22                 // Method org/hl7/fhir/exceptions/FHIRException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_0
      61: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      64: checkcast     #23                 // class org/hl7/fhir/dstu3/model/Range
      67: areturn

  public boolean hasDetailRange();
    Code:
       0: aload_0
       1: ifnull        18
       4: aload_0
       5: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
       8: instanceof    #23                 // class org/hl7/fhir/dstu3/model/Range
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public org.hl7.fhir.dstu3.model.CodeableConcept getDetailCodeableConcept() throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      13: instanceof    #8                  // class org/hl7/fhir/dstu3/model/CodeableConcept
      16: ifne          60
      19: new           #13                 // class org/hl7/fhir/exceptions/FHIRException
      22: dup
      23: new           #14                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #25                 // String Type mismatch: the type CodeableConcept was expected, but
      32: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      39: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      42: invokevirtual #19                 // Method java/lang/Class.getName:()Ljava/lang/String;
      45: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #20                 // String  was encountered
      50: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #22                 // Method org/hl7/fhir/exceptions/FHIRException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_0
      61: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      64: checkcast     #8                  // class org/hl7/fhir/dstu3/model/CodeableConcept
      67: areturn

  public boolean hasDetailCodeableConcept();
    Code:
       0: aload_0
       1: ifnull        18
       4: aload_0
       5: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
       8: instanceof    #8                  // class org/hl7/fhir/dstu3/model/CodeableConcept
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean hasDetail();
    Code:
       0: aload_0
       1: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
       4: ifnull        21
       7: aload_0
       8: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      11: invokevirtual #26                 // Method org/hl7/fhir/dstu3/model/Type.isEmpty:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public org.hl7.fhir.dstu3.model.PlanDefinition$PlanDefinitionGoalTargetComponent setDetail(org.hl7.fhir.dstu3.model.Type) throws org.hl7.fhir.exceptions.FHIRFormatError;
    Code:
       0: aload_1
       1: ifnull        55
       4: aload_1
       5: instanceof    #12                 // class org/hl7/fhir/dstu3/model/Quantity
       8: ifne          55
      11: aload_1
      12: instanceof    #23                 // class org/hl7/fhir/dstu3/model/Range
      15: ifne          55
      18: aload_1
      19: instanceof    #8                  // class org/hl7/fhir/dstu3/model/CodeableConcept
      22: ifne          55
      25: new           #27                 // class org/hl7/fhir/exceptions/FHIRFormatError
      28: dup
      29: new           #14                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #28                 // String Not the right type for PlanDefinition.goal.target.detail[x]:
      38: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_1
      42: invokevirtual #29                 // Method org/hl7/fhir/dstu3/model/Type.fhirType:()Ljava/lang/String;
      45: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #30                 // Method org/hl7/fhir/exceptions/FHIRFormatError."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: aload_1
      57: putfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      60: aload_0
      61: areturn

  public org.hl7.fhir.dstu3.model.Duration getDue();
    Code:
       0: aload_0
       1: getfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
       4: ifnonnull     40
       7: invokestatic  #3                  // Method org/hl7/fhir/dstu3/model/Configuration.errorOnAutoCreate:()Z
      10: ifeq          23
      13: new           #4                  // class java/lang/Error
      16: dup
      17: ldc           #32                 // String Attempt to auto-create PlanDefinitionGoalTargetComponent.due
      19: invokespecial #6                  // Method java/lang/Error."<init>":(Ljava/lang/String;)V
      22: athrow
      23: invokestatic  #7                  // Method org/hl7/fhir/dstu3/model/Configuration.doAutoCreate:()Z
      26: ifeq          40
      29: aload_0
      30: new           #33                 // class org/hl7/fhir/dstu3/model/Duration
      33: dup
      34: invokespecial #34                 // Method org/hl7/fhir/dstu3/model/Duration."<init>":()V
      37: putfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
      40: aload_0
      41: getfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
      44: areturn

  public boolean hasDue();
    Code:
       0: aload_0
       1: getfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
       4: ifnull        21
       7: aload_0
       8: getfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
      11: invokevirtual #35                 // Method org/hl7/fhir/dstu3/model/Duration.isEmpty:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public org.hl7.fhir.dstu3.model.PlanDefinition$PlanDefinitionGoalTargetComponent setDue(org.hl7.fhir.dstu3.model.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
       5: aload_0
       6: areturn

  protected void listChildren(java.util.List<org.hl7.fhir.dstu3.model.Property>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #36                 // Method org/hl7/fhir/dstu3/model/BackboneElement.listChildren:(Ljava/util/List;)V
       5: aload_1
       6: new           #37                 // class org/hl7/fhir/dstu3/model/Property
       9: dup
      10: ldc           #38                 // String measure
      12: ldc           #39                 // String CodeableConcept
      14: ldc           #40                 // String The parameter whose value is to be tracked, e.g. body weigth, blood pressure, or hemoglobin A1c level.
      16: iconst_0
      17: iconst_1
      18: aload_0
      19: getfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      22: invokespecial #41                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
      25: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_1
      32: new           #37                 // class org/hl7/fhir/dstu3/model/Property
      35: dup
      36: ldc           #43                 // String detail[x]
      38: ldc           #44                 // String Quantity|Range|CodeableConcept
      40: ldc           #45                 // String The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%. Either the high or low or both values of the range can be specified. Whan a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.
      42: iconst_0
      43: iconst_1
      44: aload_0
      45: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      48: invokespecial #41                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
      51: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      56: pop
      57: aload_1
      58: new           #37                 // class org/hl7/fhir/dstu3/model/Property
      61: dup
      62: ldc           #46                 // String due
      64: ldc           #47                 // String Duration
      66: ldc           #48                 // String Indicates the timeframe after the start of the goal in which the goal should be met.
      68: iconst_0
      69: iconst_1
      70: aload_0
      71: getfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
      74: invokespecial #41                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
      77: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      82: pop
      83: return

  public org.hl7.fhir.dstu3.model.Property getNamedProperty(int, java.lang.String, boolean) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: iload_1
       1: lookupswitch  { // 7
           -2062632084: 148
           -1973084529: 88
           -1335224239: 108
           -1313079300: 128
            -175586544: 168
                 99828: 188
             938321246: 68
               default: 208
          }
      68: new           #37                 // class org/hl7/fhir/dstu3/model/Property
      71: dup
      72: ldc           #38                 // String measure
      74: ldc           #39                 // String CodeableConcept
      76: ldc           #40                 // String The parameter whose value is to be tracked, e.g. body weigth, blood pressure, or hemoglobin A1c level.
      78: iconst_0
      79: iconst_1
      80: aload_0
      81: getfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      84: invokespecial #41                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
      87: areturn
      88: new           #37                 // class org/hl7/fhir/dstu3/model/Property
      91: dup
      92: ldc           #43                 // String detail[x]
      94: ldc           #44                 // String Quantity|Range|CodeableConcept
      96: ldc           #45                 // String The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%. Either the high or low or both values of the range can be specified. Whan a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.
      98: iconst_0
      99: iconst_1
     100: aload_0
     101: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
     104: invokespecial #41                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
     107: areturn
     108: new           #37                 // class org/hl7/fhir/dstu3/model/Property
     111: dup
     112: ldc           #43                 // String detail[x]
     114: ldc           #44                 // String Quantity|Range|CodeableConcept
     116: ldc           #45                 // String The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%. Either the high or low or both values of the range can be specified. Whan a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.
     118: iconst_0
     119: iconst_1
     120: aload_0
     121: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
     124: invokespecial #41                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
     127: areturn
     128: new           #37                 // class org/hl7/fhir/dstu3/model/Property
     131: dup
     132: ldc           #43                 // String detail[x]
     134: ldc           #44                 // String Quantity|Range|CodeableConcept
     136: ldc           #45                 // String The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%. Either the high or low or both values of the range can be specified. Whan a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.
     138: iconst_0
     139: iconst_1
     140: aload_0
     141: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
     144: invokespecial #41                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
     147: areturn
     148: new           #37                 // class org/hl7/fhir/dstu3/model/Property
     151: dup
     152: ldc           #43                 // String detail[x]
     154: ldc           #44                 // String Quantity|Range|CodeableConcept
     156: ldc           #45                 // String The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%. Either the high or low or both values of the range can be specified. Whan a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.
     158: iconst_0
     159: iconst_1
     160: aload_0
     161: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
     164: invokespecial #41                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
     167: areturn
     168: new           #37                 // class org/hl7/fhir/dstu3/model/Property
     171: dup
     172: ldc           #43                 // String detail[x]
     174: ldc           #44                 // String Quantity|Range|CodeableConcept
     176: ldc           #45                 // String The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%. Either the high or low or both values of the range can be specified. Whan a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.
     178: iconst_0
     179: iconst_1
     180: aload_0
     181: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
     184: invokespecial #41                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
     187: areturn
     188: new           #37                 // class org/hl7/fhir/dstu3/model/Property
     191: dup
     192: ldc           #46                 // String due
     194: ldc           #47                 // String Duration
     196: ldc           #48                 // String Indicates the timeframe after the start of the goal in which the goal should be met.
     198: iconst_0
     199: iconst_1
     200: aload_0
     201: getfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
     204: invokespecial #41                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
     207: areturn
     208: aload_0
     209: iload_1
     210: aload_2
     211: iload_3
     212: invokespecial #49                 // Method org/hl7/fhir/dstu3/model/BackboneElement.getNamedProperty:(ILjava/lang/String;Z)Lorg/hl7/fhir/dstu3/model/Property;
     215: areturn

  public org.hl7.fhir.dstu3.model.Base[] getProperty(int, java.lang.String, boolean) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: iload_1
       1: lookupswitch  { // 3
           -1335224239: 62
                 99828: 88
             938321246: 36
               default: 114
          }
      36: aload_0
      37: getfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      40: ifnonnull     50
      43: iconst_0
      44: anewarray     #50                 // class org/hl7/fhir/dstu3/model/Base
      47: goto          61
      50: iconst_1
      51: anewarray     #50                 // class org/hl7/fhir/dstu3/model/Base
      54: dup
      55: iconst_0
      56: aload_0
      57: getfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      60: aastore
      61: areturn
      62: aload_0
      63: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      66: ifnonnull     76
      69: iconst_0
      70: anewarray     #50                 // class org/hl7/fhir/dstu3/model/Base
      73: goto          87
      76: iconst_1
      77: anewarray     #50                 // class org/hl7/fhir/dstu3/model/Base
      80: dup
      81: iconst_0
      82: aload_0
      83: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      86: aastore
      87: areturn
      88: aload_0
      89: getfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
      92: ifnonnull     102
      95: iconst_0
      96: anewarray     #50                 // class org/hl7/fhir/dstu3/model/Base
      99: goto          113
     102: iconst_1
     103: anewarray     #50                 // class org/hl7/fhir/dstu3/model/Base
     106: dup
     107: iconst_0
     108: aload_0
     109: getfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
     112: aastore
     113: areturn
     114: aload_0
     115: iload_1
     116: aload_2
     117: iload_3
     118: invokespecial #51                 // Method org/hl7/fhir/dstu3/model/BackboneElement.getProperty:(ILjava/lang/String;Z)[Lorg/hl7/fhir/dstu3/model/Base;
     121: areturn

  public org.hl7.fhir.dstu3.model.Base setProperty(int, java.lang.String, org.hl7.fhir.dstu3.model.Base) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: iload_1
       1: lookupswitch  { // 3
           -1335224239: 47
                 99828: 58
             938321246: 36
               default: 69
          }
      36: aload_0
      37: aload_0
      38: aload_3
      39: invokevirtual #52                 // Method castToCodeableConcept:(Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      42: putfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      45: aload_3
      46: areturn
      47: aload_0
      48: aload_0
      49: aload_3
      50: invokevirtual #53                 // Method castToType:(Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/Type;
      53: putfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      56: aload_3
      57: areturn
      58: aload_0
      59: aload_0
      60: aload_3
      61: invokevirtual #54                 // Method castToDuration:(Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/Duration;
      64: putfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
      67: aload_3
      68: areturn
      69: aload_0
      70: iload_1
      71: aload_2
      72: aload_3
      73: invokespecial #55                 // Method org/hl7/fhir/dstu3/model/BackboneElement.setProperty:(ILjava/lang/String;Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/Base;
      76: areturn

  public org.hl7.fhir.dstu3.model.Base setProperty(java.lang.String, org.hl7.fhir.dstu3.model.Base) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: aload_1
       1: ldc           #38                 // String measure
       3: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          21
       9: aload_0
      10: aload_0
      11: aload_2
      12: invokevirtual #52                 // Method castToCodeableConcept:(Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      15: putfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      18: goto          70
      21: aload_1
      22: ldc           #43                 // String detail[x]
      24: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifeq          42
      30: aload_0
      31: aload_0
      32: aload_2
      33: invokevirtual #53                 // Method castToType:(Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/Type;
      36: putfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      39: goto          70
      42: aload_1
      43: ldc           #46                 // String due
      45: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ifeq          63
      51: aload_0
      52: aload_0
      53: aload_2
      54: invokevirtual #54                 // Method castToDuration:(Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/Duration;
      57: putfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
      60: goto          70
      63: aload_0
      64: aload_1
      65: aload_2
      66: invokespecial #57                 // Method org/hl7/fhir/dstu3/model/BackboneElement.setProperty:(Ljava/lang/String;Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/Base;
      69: areturn
      70: aload_2
      71: areturn

  public org.hl7.fhir.dstu3.model.Base makeProperty(int, java.lang.String) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: iload_1
       1: lookupswitch  { // 4
           -1973084529: 49
           -1335224239: 54
                 99828: 59
             938321246: 44
               default: 64
          }
      44: aload_0
      45: invokevirtual #58                 // Method getMeasure:()Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      48: areturn
      49: aload_0
      50: invokevirtual #59                 // Method getDetail:()Lorg/hl7/fhir/dstu3/model/Type;
      53: areturn
      54: aload_0
      55: invokevirtual #59                 // Method getDetail:()Lorg/hl7/fhir/dstu3/model/Type;
      58: areturn
      59: aload_0
      60: invokevirtual #60                 // Method getDue:()Lorg/hl7/fhir/dstu3/model/Duration;
      63: areturn
      64: aload_0
      65: iload_1
      66: aload_2
      67: invokespecial #61                 // Method org/hl7/fhir/dstu3/model/BackboneElement.makeProperty:(ILjava/lang/String;)Lorg/hl7/fhir/dstu3/model/Base;
      70: areturn

  public java.lang.String[] getTypesForProperty(int, java.lang.String) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: iload_1
       1: lookupswitch  { // 3
           -1335224239: 46
                 99828: 66
             938321246: 36
               default: 76
          }
      36: iconst_1
      37: anewarray     #62                 // class java/lang/String
      40: dup
      41: iconst_0
      42: ldc           #39                 // String CodeableConcept
      44: aastore
      45: areturn
      46: iconst_3
      47: anewarray     #62                 // class java/lang/String
      50: dup
      51: iconst_0
      52: ldc           #63                 // String Quantity
      54: aastore
      55: dup
      56: iconst_1
      57: ldc           #64                 // String Range
      59: aastore
      60: dup
      61: iconst_2
      62: ldc           #39                 // String CodeableConcept
      64: aastore
      65: areturn
      66: iconst_1
      67: anewarray     #62                 // class java/lang/String
      70: dup
      71: iconst_0
      72: ldc           #47                 // String Duration
      74: aastore
      75: areturn
      76: aload_0
      77: iload_1
      78: aload_2
      79: invokespecial #65                 // Method org/hl7/fhir/dstu3/model/BackboneElement.getTypesForProperty:(ILjava/lang/String;)[Ljava/lang/String;
      82: areturn

  public org.hl7.fhir.dstu3.model.Base addChild(java.lang.String) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: aload_1
       1: ldc           #38                 // String measure
       3: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          25
       9: aload_0
      10: new           #8                  // class org/hl7/fhir/dstu3/model/CodeableConcept
      13: dup
      14: invokespecial #9                  // Method org/hl7/fhir/dstu3/model/CodeableConcept."<init>":()V
      17: putfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      20: aload_0
      21: getfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      24: areturn
      25: aload_1
      26: ldc           #66                 // String detailQuantity
      28: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifeq          50
      34: aload_0
      35: new           #12                 // class org/hl7/fhir/dstu3/model/Quantity
      38: dup
      39: invokespecial #67                 // Method org/hl7/fhir/dstu3/model/Quantity."<init>":()V
      42: putfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      45: aload_0
      46: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      49: areturn
      50: aload_1
      51: ldc           #68                 // String detailRange
      53: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      56: ifeq          75
      59: aload_0
      60: new           #23                 // class org/hl7/fhir/dstu3/model/Range
      63: dup
      64: invokespecial #69                 // Method org/hl7/fhir/dstu3/model/Range."<init>":()V
      67: putfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      70: aload_0
      71: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      74: areturn
      75: aload_1
      76: ldc           #70                 // String detailCodeableConcept
      78: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      81: ifeq          100
      84: aload_0
      85: new           #8                  // class org/hl7/fhir/dstu3/model/CodeableConcept
      88: dup
      89: invokespecial #9                  // Method org/hl7/fhir/dstu3/model/CodeableConcept."<init>":()V
      92: putfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      95: aload_0
      96: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      99: areturn
     100: aload_1
     101: ldc           #46                 // String due
     103: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     106: ifeq          125
     109: aload_0
     110: new           #33                 // class org/hl7/fhir/dstu3/model/Duration
     113: dup
     114: invokespecial #34                 // Method org/hl7/fhir/dstu3/model/Duration."<init>":()V
     117: putfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
     120: aload_0
     121: getfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
     124: areturn
     125: aload_0
     126: aload_1
     127: invokespecial #71                 // Method org/hl7/fhir/dstu3/model/BackboneElement.addChild:(Ljava/lang/String;)Lorg/hl7/fhir/dstu3/model/Base;
     130: areturn

  public org.hl7.fhir.dstu3.model.PlanDefinition$PlanDefinitionGoalTargetComponent copy();
    Code:
       0: new           #72                 // class org/hl7/fhir/dstu3/model/PlanDefinition$PlanDefinitionGoalTargetComponent
       3: dup
       4: invokespecial #73                 // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #74                 // Method copyValues:(Lorg/hl7/fhir/dstu3/model/BackboneElement;)V
      13: aload_1
      14: aload_0
      15: getfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      18: ifnonnull     25
      21: aconst_null
      22: goto          32
      25: aload_0
      26: getfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      29: invokevirtual #75                 // Method org/hl7/fhir/dstu3/model/CodeableConcept.copy:()Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      32: putfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      35: aload_1
      36: aload_0
      37: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      40: ifnonnull     47
      43: aconst_null
      44: goto          54
      47: aload_0
      48: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      51: invokevirtual #76                 // Method org/hl7/fhir/dstu3/model/Type.copy:()Lorg/hl7/fhir/dstu3/model/Type;
      54: putfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      57: aload_1
      58: aload_0
      59: getfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
      62: ifnonnull     69
      65: aconst_null
      66: goto          76
      69: aload_0
      70: getfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
      73: invokevirtual #77                 // Method org/hl7/fhir/dstu3/model/Duration.copy:()Lorg/hl7/fhir/dstu3/model/Duration;
      76: putfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
      79: aload_1
      80: areturn

  public boolean equalsDeep(org.hl7.fhir.dstu3.model.Base);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #78                 // Method org/hl7/fhir/dstu3/model/BackboneElement.equalsDeep:(Lorg/hl7/fhir/dstu3/model/Base;)Z
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_1
      11: instanceof    #72                 // class org/hl7/fhir/dstu3/model/PlanDefinition$PlanDefinitionGoalTargetComponent
      14: ifne          19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: checkcast     #72                 // class org/hl7/fhir/dstu3/model/PlanDefinition$PlanDefinitionGoalTargetComponent
      23: astore_2
      24: aload_0
      25: getfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      28: aload_2
      29: getfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      32: iconst_1
      33: invokestatic  #79                 // Method compareDeep:(Lorg/hl7/fhir/dstu3/model/Base;Lorg/hl7/fhir/dstu3/model/Base;Z)Z
      36: ifeq          73
      39: aload_0
      40: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      43: aload_2
      44: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      47: iconst_1
      48: invokestatic  #79                 // Method compareDeep:(Lorg/hl7/fhir/dstu3/model/Base;Lorg/hl7/fhir/dstu3/model/Base;Z)Z
      51: ifeq          73
      54: aload_0
      55: getfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
      58: aload_2
      59: getfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
      62: iconst_1
      63: invokestatic  #79                 // Method compareDeep:(Lorg/hl7/fhir/dstu3/model/Base;Lorg/hl7/fhir/dstu3/model/Base;Z)Z
      66: ifeq          73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: ireturn

  public boolean equalsShallow(org.hl7.fhir.dstu3.model.Base);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #80                 // Method org/hl7/fhir/dstu3/model/BackboneElement.equalsShallow:(Lorg/hl7/fhir/dstu3/model/Base;)Z
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_1
      11: instanceof    #72                 // class org/hl7/fhir/dstu3/model/PlanDefinition$PlanDefinitionGoalTargetComponent
      14: ifne          19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: checkcast     #72                 // class org/hl7/fhir/dstu3/model/PlanDefinition$PlanDefinitionGoalTargetComponent
      23: astore_2
      24: iconst_1
      25: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokespecial #81                 // Method org/hl7/fhir/dstu3/model/BackboneElement.isEmpty:()Z
       4: ifeq          42
       7: iconst_3
       8: anewarray     #82                 // class ca/uhn/fhir/model/api/IElement
      11: dup
      12: iconst_0
      13: aload_0
      14: getfield      #2                  // Field measure:Lorg/hl7/fhir/dstu3/model/CodeableConcept;
      17: aastore
      18: dup
      19: iconst_1
      20: aload_0
      21: getfield      #11                 // Field detail:Lorg/hl7/fhir/dstu3/model/Type;
      24: aastore
      25: dup
      26: iconst_2
      27: aload_0
      28: getfield      #31                 // Field due:Lorg/hl7/fhir/dstu3/model/Duration;
      31: aastore
      32: invokestatic  #83                 // Method ca/uhn/fhir/util/ElementUtil.isEmpty:([Lca/uhn/fhir/model/api/IElement;)Z
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  public java.lang.String fhirType();
    Code:
       0: ldc           #84                 // String PlanDefinition.goal.target
       2: areturn

  public org.hl7.fhir.dstu3.model.BackboneElement copy();
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method copy:()Lorg/hl7/fhir/dstu3/model/PlanDefinition$PlanDefinitionGoalTargetComponent;
       4: areturn

  public org.hl7.fhir.dstu3.model.Element copy();
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method copy:()Lorg/hl7/fhir/dstu3/model/PlanDefinition$PlanDefinitionGoalTargetComponent;
       4: areturn
}
