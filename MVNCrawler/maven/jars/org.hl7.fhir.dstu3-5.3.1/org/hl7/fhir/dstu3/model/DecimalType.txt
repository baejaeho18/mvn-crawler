Compiled from "DecimalType.java"
public class org.hl7.fhir.dstu3.model.DecimalType extends org.hl7.fhir.dstu3.model.PrimitiveType<java.math.BigDecimal> implements java.lang.Comparable<org.hl7.fhir.dstu3.model.DecimalType>, org.hl7.fhir.instance.model.api.IBaseDecimalDatatype {
  private static final long serialVersionUID;

  public org.hl7.fhir.dstu3.model.DecimalType();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hl7/fhir/dstu3/model/PrimitiveType."<init>":()V
       4: return

  public org.hl7.fhir.dstu3.model.DecimalType(java.math.BigDecimal);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hl7/fhir/dstu3/model/PrimitiveType."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method setValue:(Ljava/lang/Object;)Lorg/hl7/fhir/dstu3/model/PrimitiveType;
       9: pop
      10: return

  public org.hl7.fhir.dstu3.model.DecimalType(double);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hl7/fhir/dstu3/model/PrimitiveType."<init>":()V
       4: aload_0
       5: dload_1
       6: invokestatic  #3                  // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
       9: invokevirtual #2                  // Method setValue:(Ljava/lang/Object;)Lorg/hl7/fhir/dstu3/model/PrimitiveType;
      12: pop
      13: return

  public org.hl7.fhir.dstu3.model.DecimalType(long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hl7/fhir/dstu3/model/PrimitiveType."<init>":()V
       4: aload_0
       5: lload_1
       6: invokevirtual #4                  // Method setValue:(J)V
       9: return

  public org.hl7.fhir.dstu3.model.DecimalType(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hl7/fhir/dstu3/model/PrimitiveType."<init>":()V
       4: aload_0
       5: new           #5                  // class java/math/BigDecimal
       8: dup
       9: aload_1
      10: invokespecial #6                  // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
      13: invokevirtual #2                  // Method setValue:(Ljava/lang/Object;)Lorg/hl7/fhir/dstu3/model/PrimitiveType;
      16: pop
      17: return

  public int compareTo(org.hl7.fhir.dstu3.model.DecimalType);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
       4: ifnonnull     16
       7: aload_1
       8: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
      11: ifnonnull     16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
      20: ifnull        32
      23: aload_1
      24: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
      27: ifnonnull     32
      30: iconst_1
      31: ireturn
      32: aload_0
      33: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
      36: ifnonnull     48
      39: aload_1
      40: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
      43: ifnull        48
      46: iconst_m1
      47: ireturn
      48: aload_0
      49: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
      52: checkcast     #5                  // class java/math/BigDecimal
      55: aload_1
      56: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
      59: checkcast     #5                  // class java/math/BigDecimal
      62: invokevirtual #8                  // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
      65: ireturn

  protected java.lang.String encode(java.math.BigDecimal);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #5                  // class java/math/BigDecimal
       7: invokevirtual #9                  // Method java/math/BigDecimal.toPlainString:()Ljava/lang/String;
      10: areturn

  public int getValueAsInteger();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #5                  // class java/math/BigDecimal
       7: invokevirtual #10                 // Method java/math/BigDecimal.intValue:()I
      10: ireturn

  public java.lang.Number getValueAsNumber();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
       4: checkcast     #11                 // class java/lang/Number
       7: areturn

  protected java.math.BigDecimal parse(java.lang.String);
    Code:
       0: new           #5                  // class java/math/BigDecimal
       3: dup
       4: aload_1
       5: invokespecial #6                  // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
       8: areturn

  public void round(int);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
       4: ifnull        32
       7: aload_0
       8: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
      11: checkcast     #5                  // class java/math/BigDecimal
      14: new           #12                 // class java/math/MathContext
      17: dup
      18: iload_1
      19: invokespecial #13                 // Method java/math/MathContext."<init>":(I)V
      22: invokevirtual #14                 // Method java/math/BigDecimal.round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;
      25: astore_2
      26: aload_0
      27: aload_2
      28: invokevirtual #2                  // Method setValue:(Ljava/lang/Object;)Lorg/hl7/fhir/dstu3/model/PrimitiveType;
      31: pop
      32: return

  public void round(int, java.math.RoundingMode);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
       4: ifnull        33
       7: aload_0
       8: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
      11: checkcast     #5                  // class java/math/BigDecimal
      14: new           #12                 // class java/math/MathContext
      17: dup
      18: iload_1
      19: aload_2
      20: invokespecial #15                 // Method java/math/MathContext."<init>":(ILjava/math/RoundingMode;)V
      23: invokevirtual #14                 // Method java/math/BigDecimal.round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;
      26: astore_3
      27: aload_0
      28: aload_3
      29: invokevirtual #2                  // Method setValue:(Ljava/lang/Object;)Lorg/hl7/fhir/dstu3/model/PrimitiveType;
      32: pop
      33: return

  public void setValueAsInteger(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: invokestatic  #16                 // Method java/math/BigDecimal.valueOf:(J)Ljava/math/BigDecimal;
       6: invokevirtual #2                  // Method setValue:(Ljava/lang/Object;)Lorg/hl7/fhir/dstu3/model/PrimitiveType;
       9: pop
      10: return

  public void setValue(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #16                 // Method java/math/BigDecimal.valueOf:(J)Ljava/math/BigDecimal;
       5: invokevirtual #2                  // Method setValue:(Ljava/lang/Object;)Lorg/hl7/fhir/dstu3/model/PrimitiveType;
       8: pop
       9: return

  public void setValue(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #3                  // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
       5: invokevirtual #2                  // Method setValue:(Ljava/lang/Object;)Lorg/hl7/fhir/dstu3/model/PrimitiveType;
       8: pop
       9: return

  public org.hl7.fhir.dstu3.model.DecimalType copy();
    Code:
       0: new           #17                 // class org/hl7/fhir/dstu3/model/DecimalType
       3: dup
       4: aload_0
       5: invokevirtual #7                  // Method getValue:()Ljava/lang/Object;
       8: checkcast     #5                  // class java/math/BigDecimal
      11: invokespecial #18                 // Method "<init>":(Ljava/math/BigDecimal;)V
      14: areturn

  public java.lang.String fhirType();
    Code:
       0: ldc           #19                 // String decimal
       2: areturn

  protected java.lang.Object parse(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method parse:(Ljava/lang/String;)Ljava/math/BigDecimal;
       5: areturn

  protected java.lang.String encode(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class java/math/BigDecimal
       5: invokevirtual #21                 // Method encode:(Ljava/math/BigDecimal;)Ljava/lang/String;
       8: areturn

  public org.hl7.fhir.dstu3.model.Type copy();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method copy:()Lorg/hl7/fhir/dstu3/model/DecimalType;
       4: areturn

  public org.hl7.fhir.dstu3.model.Element copy();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method copy:()Lorg/hl7/fhir/dstu3/model/DecimalType;
       4: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #17                 // class org/hl7/fhir/dstu3/model/DecimalType
       5: invokevirtual #23                 // Method compareTo:(Lorg/hl7/fhir/dstu3/model/DecimalType;)I
       8: ireturn
}
