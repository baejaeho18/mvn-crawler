Compiled from "Medication.java"
public class org.hl7.fhir.dstu3.model.Medication$MedicationIngredientComponent extends org.hl7.fhir.dstu3.model.BackboneElement implements org.hl7.fhir.instance.model.api.IBaseBackboneElement {
  protected org.hl7.fhir.dstu3.model.Type item;

  protected org.hl7.fhir.dstu3.model.BooleanType isActive;

  protected org.hl7.fhir.dstu3.model.Ratio amount;

  private static final long serialVersionUID;

  public org.hl7.fhir.dstu3.model.Medication$MedicationIngredientComponent();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hl7/fhir/dstu3/model/BackboneElement."<init>":()V
       4: return

  public org.hl7.fhir.dstu3.model.Medication$MedicationIngredientComponent(org.hl7.fhir.dstu3.model.Type);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hl7/fhir/dstu3/model/BackboneElement."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
       9: return

  public org.hl7.fhir.dstu3.model.Type getItem();
    Code:
       0: aload_0
       1: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
       4: areturn

  public org.hl7.fhir.dstu3.model.CodeableConcept getItemCodeableConcept() throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      13: instanceof    #3                  // class org/hl7/fhir/dstu3/model/CodeableConcept
      16: ifne          60
      19: new           #4                  // class org/hl7/fhir/exceptions/FHIRException
      22: dup
      23: new           #5                  // class java/lang/StringBuilder
      26: dup
      27: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #7                  // String Type mismatch: the type CodeableConcept was expected, but
      32: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      39: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      42: invokevirtual #10                 // Method java/lang/Class.getName:()Ljava/lang/String;
      45: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #11                 // String  was encountered
      50: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #13                 // Method org/hl7/fhir/exceptions/FHIRException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_0
      61: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      64: checkcast     #3                  // class org/hl7/fhir/dstu3/model/CodeableConcept
      67: areturn

  public boolean hasItemCodeableConcept();
    Code:
       0: aload_0
       1: ifnull        18
       4: aload_0
       5: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
       8: instanceof    #3                  // class org/hl7/fhir/dstu3/model/CodeableConcept
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public org.hl7.fhir.dstu3.model.Reference getItemReference() throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      13: instanceof    #14                 // class org/hl7/fhir/dstu3/model/Reference
      16: ifne          60
      19: new           #4                  // class org/hl7/fhir/exceptions/FHIRException
      22: dup
      23: new           #5                  // class java/lang/StringBuilder
      26: dup
      27: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #15                 // String Type mismatch: the type Reference was expected, but
      32: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      39: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      42: invokevirtual #10                 // Method java/lang/Class.getName:()Ljava/lang/String;
      45: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #11                 // String  was encountered
      50: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #13                 // Method org/hl7/fhir/exceptions/FHIRException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_0
      61: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      64: checkcast     #14                 // class org/hl7/fhir/dstu3/model/Reference
      67: areturn

  public boolean hasItemReference();
    Code:
       0: aload_0
       1: ifnull        18
       4: aload_0
       5: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
       8: instanceof    #14                 // class org/hl7/fhir/dstu3/model/Reference
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean hasItem();
    Code:
       0: aload_0
       1: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
       4: ifnull        21
       7: aload_0
       8: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      11: invokevirtual #16                 // Method org/hl7/fhir/dstu3/model/Type.isEmpty:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public org.hl7.fhir.dstu3.model.Medication$MedicationIngredientComponent setItem(org.hl7.fhir.dstu3.model.Type) throws org.hl7.fhir.exceptions.FHIRFormatError;
    Code:
       0: aload_1
       1: ifnull        48
       4: aload_1
       5: instanceof    #3                  // class org/hl7/fhir/dstu3/model/CodeableConcept
       8: ifne          48
      11: aload_1
      12: instanceof    #14                 // class org/hl7/fhir/dstu3/model/Reference
      15: ifne          48
      18: new           #17                 // class org/hl7/fhir/exceptions/FHIRFormatError
      21: dup
      22: new           #5                  // class java/lang/StringBuilder
      25: dup
      26: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #18                 // String Not the right type for Medication.ingredient.item[x]:
      31: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #19                 // Method org/hl7/fhir/dstu3/model/Type.fhirType:()Ljava/lang/String;
      38: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #20                 // Method org/hl7/fhir/exceptions/FHIRFormatError."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: aload_1
      50: putfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      53: aload_0
      54: areturn

  public org.hl7.fhir.dstu3.model.BooleanType getIsActiveElement();
    Code:
       0: aload_0
       1: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
       4: ifnonnull     40
       7: invokestatic  #22                 // Method org/hl7/fhir/dstu3/model/Configuration.errorOnAutoCreate:()Z
      10: ifeq          23
      13: new           #23                 // class java/lang/Error
      16: dup
      17: ldc           #24                 // String Attempt to auto-create MedicationIngredientComponent.isActive
      19: invokespecial #25                 // Method java/lang/Error."<init>":(Ljava/lang/String;)V
      22: athrow
      23: invokestatic  #26                 // Method org/hl7/fhir/dstu3/model/Configuration.doAutoCreate:()Z
      26: ifeq          40
      29: aload_0
      30: new           #27                 // class org/hl7/fhir/dstu3/model/BooleanType
      33: dup
      34: invokespecial #28                 // Method org/hl7/fhir/dstu3/model/BooleanType."<init>":()V
      37: putfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      40: aload_0
      41: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      44: areturn

  public boolean hasIsActiveElement();
    Code:
       0: aload_0
       1: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
       4: ifnull        21
       7: aload_0
       8: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      11: invokevirtual #29                 // Method org/hl7/fhir/dstu3/model/BooleanType.isEmpty:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean hasIsActive();
    Code:
       0: aload_0
       1: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
       4: ifnull        21
       7: aload_0
       8: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      11: invokevirtual #29                 // Method org/hl7/fhir/dstu3/model/BooleanType.isEmpty:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public org.hl7.fhir.dstu3.model.Medication$MedicationIngredientComponent setIsActiveElement(org.hl7.fhir.dstu3.model.BooleanType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
       5: aload_0
       6: areturn

  public boolean getIsActive();
    Code:
       0: aload_0
       1: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
       4: ifnull        17
       7: aload_0
       8: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      11: invokevirtual #29                 // Method org/hl7/fhir/dstu3/model/BooleanType.isEmpty:()Z
      14: ifeq          21
      17: iconst_0
      18: goto          34
      21: aload_0
      22: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      25: invokevirtual #30                 // Method org/hl7/fhir/dstu3/model/BooleanType.getValue:()Ljava/lang/Object;
      28: checkcast     #31                 // class java/lang/Boolean
      31: invokevirtual #32                 // Method java/lang/Boolean.booleanValue:()Z
      34: ireturn

  public org.hl7.fhir.dstu3.model.Medication$MedicationIngredientComponent setIsActive(boolean);
    Code:
       0: aload_0
       1: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
       4: ifnonnull     18
       7: aload_0
       8: new           #27                 // class org/hl7/fhir/dstu3/model/BooleanType
      11: dup
      12: invokespecial #28                 // Method org/hl7/fhir/dstu3/model/BooleanType."<init>":()V
      15: putfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      18: aload_0
      19: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      22: iload_1
      23: invokestatic  #33                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: invokevirtual #34                 // Method org/hl7/fhir/dstu3/model/BooleanType.setValue:(Ljava/lang/Object;)Lorg/hl7/fhir/dstu3/model/PrimitiveType;
      29: pop
      30: aload_0
      31: areturn

  public org.hl7.fhir.dstu3.model.Ratio getAmount();
    Code:
       0: aload_0
       1: getfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
       4: ifnonnull     40
       7: invokestatic  #22                 // Method org/hl7/fhir/dstu3/model/Configuration.errorOnAutoCreate:()Z
      10: ifeq          23
      13: new           #23                 // class java/lang/Error
      16: dup
      17: ldc           #36                 // String Attempt to auto-create MedicationIngredientComponent.amount
      19: invokespecial #25                 // Method java/lang/Error."<init>":(Ljava/lang/String;)V
      22: athrow
      23: invokestatic  #26                 // Method org/hl7/fhir/dstu3/model/Configuration.doAutoCreate:()Z
      26: ifeq          40
      29: aload_0
      30: new           #37                 // class org/hl7/fhir/dstu3/model/Ratio
      33: dup
      34: invokespecial #38                 // Method org/hl7/fhir/dstu3/model/Ratio."<init>":()V
      37: putfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
      40: aload_0
      41: getfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
      44: areturn

  public boolean hasAmount();
    Code:
       0: aload_0
       1: getfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
       4: ifnull        21
       7: aload_0
       8: getfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
      11: invokevirtual #39                 // Method org/hl7/fhir/dstu3/model/Ratio.isEmpty:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public org.hl7.fhir.dstu3.model.Medication$MedicationIngredientComponent setAmount(org.hl7.fhir.dstu3.model.Ratio);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
       5: aload_0
       6: areturn

  protected void listChildren(java.util.List<org.hl7.fhir.dstu3.model.Property>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #40                 // Method org/hl7/fhir/dstu3/model/BackboneElement.listChildren:(Ljava/util/List;)V
       5: aload_1
       6: new           #41                 // class org/hl7/fhir/dstu3/model/Property
       9: dup
      10: ldc           #42                 // String item[x]
      12: ldc           #43                 // String CodeableConcept|Reference(Substance|Medication)
      14: ldc           #44                 // String The actual ingredient - either a substance (simple ingredient) or another medication.
      16: iconst_0
      17: iconst_1
      18: aload_0
      19: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      22: invokespecial #45                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
      25: invokeinterface #46,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_1
      32: new           #41                 // class org/hl7/fhir/dstu3/model/Property
      35: dup
      36: ldc           #47                 // String isActive
      38: ldc           #48                 // String boolean
      40: ldc           #49                 // String Indication of whether this ingredient affects the therapeutic action of the drug.
      42: iconst_0
      43: iconst_1
      44: aload_0
      45: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      48: invokespecial #45                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
      51: invokeinterface #46,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      56: pop
      57: aload_1
      58: new           #41                 // class org/hl7/fhir/dstu3/model/Property
      61: dup
      62: ldc           #50                 // String amount
      64: ldc           #51                 // String Ratio
      66: ldc           #52                 // String Specifies how many (or how much) of the items there are in this Medication.  For example, 250 mg per tablet.  This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet.
      68: iconst_0
      69: iconst_1
      70: aload_0
      71: getfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
      74: invokespecial #45                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
      77: invokeinterface #46,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      82: pop
      83: return

  public org.hl7.fhir.dstu3.model.Property getNamedProperty(int, java.lang.String, boolean) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: iload_1
       1: lookupswitch  { // 6
           -1413853096: 160
            -748916528: 140
               3242771: 80
             106644494: 100
            1376364920: 120
            2116201613: 60
               default: 180
          }
      60: new           #41                 // class org/hl7/fhir/dstu3/model/Property
      63: dup
      64: ldc           #42                 // String item[x]
      66: ldc           #43                 // String CodeableConcept|Reference(Substance|Medication)
      68: ldc           #44                 // String The actual ingredient - either a substance (simple ingredient) or another medication.
      70: iconst_0
      71: iconst_1
      72: aload_0
      73: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      76: invokespecial #45                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
      79: areturn
      80: new           #41                 // class org/hl7/fhir/dstu3/model/Property
      83: dup
      84: ldc           #42                 // String item[x]
      86: ldc           #43                 // String CodeableConcept|Reference(Substance|Medication)
      88: ldc           #44                 // String The actual ingredient - either a substance (simple ingredient) or another medication.
      90: iconst_0
      91: iconst_1
      92: aload_0
      93: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      96: invokespecial #45                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
      99: areturn
     100: new           #41                 // class org/hl7/fhir/dstu3/model/Property
     103: dup
     104: ldc           #42                 // String item[x]
     106: ldc           #43                 // String CodeableConcept|Reference(Substance|Medication)
     108: ldc           #44                 // String The actual ingredient - either a substance (simple ingredient) or another medication.
     110: iconst_0
     111: iconst_1
     112: aload_0
     113: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
     116: invokespecial #45                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
     119: areturn
     120: new           #41                 // class org/hl7/fhir/dstu3/model/Property
     123: dup
     124: ldc           #42                 // String item[x]
     126: ldc           #43                 // String CodeableConcept|Reference(Substance|Medication)
     128: ldc           #44                 // String The actual ingredient - either a substance (simple ingredient) or another medication.
     130: iconst_0
     131: iconst_1
     132: aload_0
     133: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
     136: invokespecial #45                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
     139: areturn
     140: new           #41                 // class org/hl7/fhir/dstu3/model/Property
     143: dup
     144: ldc           #47                 // String isActive
     146: ldc           #48                 // String boolean
     148: ldc           #49                 // String Indication of whether this ingredient affects the therapeutic action of the drug.
     150: iconst_0
     151: iconst_1
     152: aload_0
     153: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
     156: invokespecial #45                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
     159: areturn
     160: new           #41                 // class org/hl7/fhir/dstu3/model/Property
     163: dup
     164: ldc           #50                 // String amount
     166: ldc           #51                 // String Ratio
     168: ldc           #52                 // String Specifies how many (or how much) of the items there are in this Medication.  For example, 250 mg per tablet.  This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet.
     170: iconst_0
     171: iconst_1
     172: aload_0
     173: getfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
     176: invokespecial #45                 // Method org/hl7/fhir/dstu3/model/Property."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILorg/hl7/fhir/dstu3/model/Base;)V
     179: areturn
     180: aload_0
     181: iload_1
     182: aload_2
     183: iload_3
     184: invokespecial #53                 // Method org/hl7/fhir/dstu3/model/BackboneElement.getNamedProperty:(ILjava/lang/String;Z)Lorg/hl7/fhir/dstu3/model/Property;
     187: areturn

  public org.hl7.fhir.dstu3.model.Base[] getProperty(int, java.lang.String, boolean) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: iload_1
       1: lookupswitch  { // 3
           -1413853096: 88
            -748916528: 62
               3242771: 36
               default: 114
          }
      36: aload_0
      37: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      40: ifnonnull     50
      43: iconst_0
      44: anewarray     #54                 // class org/hl7/fhir/dstu3/model/Base
      47: goto          61
      50: iconst_1
      51: anewarray     #54                 // class org/hl7/fhir/dstu3/model/Base
      54: dup
      55: iconst_0
      56: aload_0
      57: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      60: aastore
      61: areturn
      62: aload_0
      63: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      66: ifnonnull     76
      69: iconst_0
      70: anewarray     #54                 // class org/hl7/fhir/dstu3/model/Base
      73: goto          87
      76: iconst_1
      77: anewarray     #54                 // class org/hl7/fhir/dstu3/model/Base
      80: dup
      81: iconst_0
      82: aload_0
      83: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      86: aastore
      87: areturn
      88: aload_0
      89: getfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
      92: ifnonnull     102
      95: iconst_0
      96: anewarray     #54                 // class org/hl7/fhir/dstu3/model/Base
      99: goto          113
     102: iconst_1
     103: anewarray     #54                 // class org/hl7/fhir/dstu3/model/Base
     106: dup
     107: iconst_0
     108: aload_0
     109: getfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
     112: aastore
     113: areturn
     114: aload_0
     115: iload_1
     116: aload_2
     117: iload_3
     118: invokespecial #55                 // Method org/hl7/fhir/dstu3/model/BackboneElement.getProperty:(ILjava/lang/String;Z)[Lorg/hl7/fhir/dstu3/model/Base;
     121: areturn

  public org.hl7.fhir.dstu3.model.Base setProperty(int, java.lang.String, org.hl7.fhir.dstu3.model.Base) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: iload_1
       1: lookupswitch  { // 3
           -1413853096: 58
            -748916528: 47
               3242771: 36
               default: 69
          }
      36: aload_0
      37: aload_0
      38: aload_3
      39: invokevirtual #56                 // Method castToType:(Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/Type;
      42: putfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      45: aload_3
      46: areturn
      47: aload_0
      48: aload_0
      49: aload_3
      50: invokevirtual #57                 // Method castToBoolean:(Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/BooleanType;
      53: putfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      56: aload_3
      57: areturn
      58: aload_0
      59: aload_0
      60: aload_3
      61: invokevirtual #58                 // Method castToRatio:(Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/Ratio;
      64: putfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
      67: aload_3
      68: areturn
      69: aload_0
      70: iload_1
      71: aload_2
      72: aload_3
      73: invokespecial #59                 // Method org/hl7/fhir/dstu3/model/BackboneElement.setProperty:(ILjava/lang/String;Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/Base;
      76: areturn

  public org.hl7.fhir.dstu3.model.Base setProperty(java.lang.String, org.hl7.fhir.dstu3.model.Base) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: aload_1
       1: ldc           #42                 // String item[x]
       3: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          21
       9: aload_0
      10: aload_0
      11: aload_2
      12: invokevirtual #56                 // Method castToType:(Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/Type;
      15: putfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      18: goto          70
      21: aload_1
      22: ldc           #47                 // String isActive
      24: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifeq          42
      30: aload_0
      31: aload_0
      32: aload_2
      33: invokevirtual #57                 // Method castToBoolean:(Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/BooleanType;
      36: putfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      39: goto          70
      42: aload_1
      43: ldc           #50                 // String amount
      45: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ifeq          63
      51: aload_0
      52: aload_0
      53: aload_2
      54: invokevirtual #58                 // Method castToRatio:(Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/Ratio;
      57: putfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
      60: goto          70
      63: aload_0
      64: aload_1
      65: aload_2
      66: invokespecial #61                 // Method org/hl7/fhir/dstu3/model/BackboneElement.setProperty:(Ljava/lang/String;Lorg/hl7/fhir/dstu3/model/Base;)Lorg/hl7/fhir/dstu3/model/Base;
      69: areturn
      70: aload_2
      71: areturn

  public org.hl7.fhir.dstu3.model.Base makeProperty(int, java.lang.String) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: iload_1
       1: lookupswitch  { // 4
           -1413853096: 59
            -748916528: 54
               3242771: 49
            2116201613: 44
               default: 64
          }
      44: aload_0
      45: invokevirtual #62                 // Method getItem:()Lorg/hl7/fhir/dstu3/model/Type;
      48: areturn
      49: aload_0
      50: invokevirtual #62                 // Method getItem:()Lorg/hl7/fhir/dstu3/model/Type;
      53: areturn
      54: aload_0
      55: invokevirtual #63                 // Method getIsActiveElement:()Lorg/hl7/fhir/dstu3/model/BooleanType;
      58: areturn
      59: aload_0
      60: invokevirtual #64                 // Method getAmount:()Lorg/hl7/fhir/dstu3/model/Ratio;
      63: areturn
      64: aload_0
      65: iload_1
      66: aload_2
      67: invokespecial #65                 // Method org/hl7/fhir/dstu3/model/BackboneElement.makeProperty:(ILjava/lang/String;)Lorg/hl7/fhir/dstu3/model/Base;
      70: areturn

  public java.lang.String[] getTypesForProperty(int, java.lang.String) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: iload_1
       1: lookupswitch  { // 3
           -1413853096: 61
            -748916528: 51
               3242771: 36
               default: 71
          }
      36: iconst_2
      37: anewarray     #66                 // class java/lang/String
      40: dup
      41: iconst_0
      42: ldc           #67                 // String CodeableConcept
      44: aastore
      45: dup
      46: iconst_1
      47: ldc           #68                 // String Reference
      49: aastore
      50: areturn
      51: iconst_1
      52: anewarray     #66                 // class java/lang/String
      55: dup
      56: iconst_0
      57: ldc           #48                 // String boolean
      59: aastore
      60: areturn
      61: iconst_1
      62: anewarray     #66                 // class java/lang/String
      65: dup
      66: iconst_0
      67: ldc           #51                 // String Ratio
      69: aastore
      70: areturn
      71: aload_0
      72: iload_1
      73: aload_2
      74: invokespecial #69                 // Method org/hl7/fhir/dstu3/model/BackboneElement.getTypesForProperty:(ILjava/lang/String;)[Ljava/lang/String;
      77: areturn

  public org.hl7.fhir.dstu3.model.Base addChild(java.lang.String) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: aload_1
       1: ldc           #70                 // String itemCodeableConcept
       3: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          25
       9: aload_0
      10: new           #3                  // class org/hl7/fhir/dstu3/model/CodeableConcept
      13: dup
      14: invokespecial #71                 // Method org/hl7/fhir/dstu3/model/CodeableConcept."<init>":()V
      17: putfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      20: aload_0
      21: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      24: areturn
      25: aload_1
      26: ldc           #72                 // String itemReference
      28: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifeq          50
      34: aload_0
      35: new           #14                 // class org/hl7/fhir/dstu3/model/Reference
      38: dup
      39: invokespecial #73                 // Method org/hl7/fhir/dstu3/model/Reference."<init>":()V
      42: putfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      45: aload_0
      46: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      49: areturn
      50: aload_1
      51: ldc           #47                 // String isActive
      53: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      56: ifeq          69
      59: new           #4                  // class org/hl7/fhir/exceptions/FHIRException
      62: dup
      63: ldc           #74                 // String Cannot call addChild on a primitive type Medication.isActive
      65: invokespecial #13                 // Method org/hl7/fhir/exceptions/FHIRException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload_1
      70: ldc           #50                 // String amount
      72: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifeq          94
      78: aload_0
      79: new           #37                 // class org/hl7/fhir/dstu3/model/Ratio
      82: dup
      83: invokespecial #38                 // Method org/hl7/fhir/dstu3/model/Ratio."<init>":()V
      86: putfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
      89: aload_0
      90: getfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
      93: areturn
      94: aload_0
      95: aload_1
      96: invokespecial #75                 // Method org/hl7/fhir/dstu3/model/BackboneElement.addChild:(Ljava/lang/String;)Lorg/hl7/fhir/dstu3/model/Base;
      99: areturn

  public org.hl7.fhir.dstu3.model.Medication$MedicationIngredientComponent copy();
    Code:
       0: new           #76                 // class org/hl7/fhir/dstu3/model/Medication$MedicationIngredientComponent
       3: dup
       4: invokespecial #77                 // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #78                 // Method copyValues:(Lorg/hl7/fhir/dstu3/model/BackboneElement;)V
      13: aload_1
      14: aload_0
      15: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      18: ifnonnull     25
      21: aconst_null
      22: goto          32
      25: aload_0
      26: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      29: invokevirtual #79                 // Method org/hl7/fhir/dstu3/model/Type.copy:()Lorg/hl7/fhir/dstu3/model/Type;
      32: putfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      35: aload_1
      36: aload_0
      37: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      40: ifnonnull     47
      43: aconst_null
      44: goto          54
      47: aload_0
      48: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      51: invokevirtual #80                 // Method org/hl7/fhir/dstu3/model/BooleanType.copy:()Lorg/hl7/fhir/dstu3/model/BooleanType;
      54: putfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      57: aload_1
      58: aload_0
      59: getfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
      62: ifnonnull     69
      65: aconst_null
      66: goto          76
      69: aload_0
      70: getfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
      73: invokevirtual #81                 // Method org/hl7/fhir/dstu3/model/Ratio.copy:()Lorg/hl7/fhir/dstu3/model/Ratio;
      76: putfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
      79: aload_1
      80: areturn

  public boolean equalsDeep(org.hl7.fhir.dstu3.model.Base);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #82                 // Method org/hl7/fhir/dstu3/model/BackboneElement.equalsDeep:(Lorg/hl7/fhir/dstu3/model/Base;)Z
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_1
      11: instanceof    #76                 // class org/hl7/fhir/dstu3/model/Medication$MedicationIngredientComponent
      14: ifne          19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: checkcast     #76                 // class org/hl7/fhir/dstu3/model/Medication$MedicationIngredientComponent
      23: astore_2
      24: aload_0
      25: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      28: aload_2
      29: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      32: iconst_1
      33: invokestatic  #83                 // Method compareDeep:(Lorg/hl7/fhir/dstu3/model/Base;Lorg/hl7/fhir/dstu3/model/Base;Z)Z
      36: ifeq          73
      39: aload_0
      40: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      43: aload_2
      44: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      47: iconst_1
      48: invokestatic  #83                 // Method compareDeep:(Lorg/hl7/fhir/dstu3/model/Base;Lorg/hl7/fhir/dstu3/model/Base;Z)Z
      51: ifeq          73
      54: aload_0
      55: getfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
      58: aload_2
      59: getfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
      62: iconst_1
      63: invokestatic  #83                 // Method compareDeep:(Lorg/hl7/fhir/dstu3/model/Base;Lorg/hl7/fhir/dstu3/model/Base;Z)Z
      66: ifeq          73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: ireturn

  public boolean equalsShallow(org.hl7.fhir.dstu3.model.Base);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #84                 // Method org/hl7/fhir/dstu3/model/BackboneElement.equalsShallow:(Lorg/hl7/fhir/dstu3/model/Base;)Z
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_1
      11: instanceof    #76                 // class org/hl7/fhir/dstu3/model/Medication$MedicationIngredientComponent
      14: ifne          19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: checkcast     #76                 // class org/hl7/fhir/dstu3/model/Medication$MedicationIngredientComponent
      23: astore_2
      24: aload_0
      25: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      28: aload_2
      29: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      32: iconst_1
      33: invokestatic  #85                 // Method compareValues:(Lorg/hl7/fhir/dstu3/model/PrimitiveType;Lorg/hl7/fhir/dstu3/model/PrimitiveType;Z)Z
      36: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokespecial #86                 // Method org/hl7/fhir/dstu3/model/BackboneElement.isEmpty:()Z
       4: ifeq          42
       7: iconst_3
       8: anewarray     #87                 // class ca/uhn/fhir/model/api/IElement
      11: dup
      12: iconst_0
      13: aload_0
      14: getfield      #2                  // Field item:Lorg/hl7/fhir/dstu3/model/Type;
      17: aastore
      18: dup
      19: iconst_1
      20: aload_0
      21: getfield      #21                 // Field isActive:Lorg/hl7/fhir/dstu3/model/BooleanType;
      24: aastore
      25: dup
      26: iconst_2
      27: aload_0
      28: getfield      #35                 // Field amount:Lorg/hl7/fhir/dstu3/model/Ratio;
      31: aastore
      32: invokestatic  #88                 // Method ca/uhn/fhir/util/ElementUtil.isEmpty:([Lca/uhn/fhir/model/api/IElement;)Z
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  public java.lang.String fhirType();
    Code:
       0: ldc           #89                 // String Medication.ingredient
       2: areturn

  public org.hl7.fhir.dstu3.model.BackboneElement copy();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method copy:()Lorg/hl7/fhir/dstu3/model/Medication$MedicationIngredientComponent;
       4: areturn

  public org.hl7.fhir.dstu3.model.Element copy();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method copy:()Lorg/hl7/fhir/dstu3/model/Medication$MedicationIngredientComponent;
       4: areturn
}
