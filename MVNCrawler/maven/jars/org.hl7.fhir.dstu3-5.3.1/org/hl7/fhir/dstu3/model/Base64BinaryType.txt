Compiled from "Base64BinaryType.java"
public class org.hl7.fhir.dstu3.model.Base64BinaryType extends org.hl7.fhir.dstu3.model.PrimitiveType<byte[]> implements org.hl7.fhir.instance.model.api.IPrimitiveType<byte[]>, org.hl7.fhir.instance.model.api.IBaseHasExtensions, ca.uhn.fhir.model.api.IElement, java.io.Externalizable {
  private static final long serialVersionUID;

  private byte[] myValue;

  public org.hl7.fhir.dstu3.model.Base64BinaryType();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hl7/fhir/dstu3/model/PrimitiveType."<init>":()V
       4: return

  public org.hl7.fhir.dstu3.model.Base64BinaryType(byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hl7/fhir/dstu3/model/PrimitiveType."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method setValue:([B)Lorg/hl7/fhir/dstu3/model/Base64BinaryType;
       9: pop
      10: return

  public org.hl7.fhir.dstu3.model.Base64BinaryType(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hl7/fhir/dstu3/model/PrimitiveType."<init>":()V
       4: aload_1
       5: ifnull        13
       8: aload_0
       9: aload_1
      10: invokevirtual #3                  // Method checkValidBase64:(Ljava/lang/String;)V
      13: aload_0
      14: aload_1
      15: invokevirtual #4                  // Method setValueAsString:(Ljava/lang/String;)V
      18: return

  protected byte[] parse(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_1
       5: getstatic     #5                  // Field ca/uhn/fhir/rest/api/Constants.CHARSET_UTF8:Ljava/nio/charset/Charset;
       8: invokevirtual #6                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: invokestatic  #7                  // Method org/apache/commons/codec/binary/Base64.decodeBase64:([B)[B
      14: areturn
      15: aconst_null
      16: areturn

  protected java.lang.String encode(byte[]);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #8                  // class java/lang/String
       9: dup
      10: aload_1
      11: invokestatic  #9                  // Method org/apache/commons/codec/binary/Base64.encodeBase64:([B)[B
      14: getstatic     #5                  // Field ca/uhn/fhir/rest/api/Constants.CHARSET_UTF8:Ljava/nio/charset/Charset;
      17: invokespecial #10                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      20: areturn

  public org.hl7.fhir.dstu3.model.Base64BinaryType copy();
    Code:
       0: new           #11                 // class org/hl7/fhir/dstu3/model/Base64BinaryType
       3: dup
       4: aload_0
       5: invokevirtual #12                 // Method getValue:()[B
       8: invokespecial #13                 // Method "<init>":([B)V
      11: areturn

  protected org.hl7.fhir.dstu3.model.Type typedCopy();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String fhirType();
    Code:
       0: ldc           #14                 // String base64Binary
       2: areturn

  public void writeExternal(java.io.ObjectOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #12                 // Method getValue:()[B
       5: invokeinterface #15,  2           // InterfaceMethod java/io/ObjectOutput.writeObject:(Ljava/lang/Object;)V
      10: return

  public void readExternal(java.io.ObjectInput) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #16,  1           // InterfaceMethod java/io/ObjectInput.readObject:()Ljava/lang/Object;
       7: checkcast     #17                 // class "[B"
      10: checkcast     #17                 // class "[B"
      13: invokevirtual #2                  // Method setValue:([B)Lorg/hl7/fhir/dstu3/model/Base64BinaryType;
      16: pop
      17: return

  public java.lang.String getValueAsString();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #18                 // Field myValue:[B
       5: invokevirtual #19                 // Method encode:([B)Ljava/lang/String;
       8: areturn

  public void setValueAsString(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method fromStringValue:(Ljava/lang/String;)V
       5: aload_0
       6: aload_0
       7: aload_1
       8: invokevirtual #21                 // Method parse:(Ljava/lang/String;)[B
      11: invokevirtual #2                  // Method setValue:([B)Lorg/hl7/fhir/dstu3/model/Base64BinaryType;
      14: pop
      15: return

  public byte[] getValue();
    Code:
       0: aload_0
       1: getfield      #18                 // Field myValue:[B
       4: areturn

  public org.hl7.fhir.dstu3.model.Base64BinaryType setValue(byte[]) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field myValue:[B
       5: aload_0
       6: areturn

  public boolean hasValue();
    Code:
       0: aload_0
       1: getfield      #18                 // Field myValue:[B
       4: ifnull        19
       7: aload_0
       8: getfield      #18                 // Field myValue:[B
      11: arraylength
      12: ifle          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean isEmpty();
    Code:
       0: iconst_2
       1: anewarray     #22                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #23                 // Field id:Lorg/hl7/fhir/dstu3/model/StringType;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #24                 // Field extension:Ljava/util/List;
      17: aastore
      18: invokestatic  #25                 // Method ca/uhn/fhir/util/ElementUtil.isEmpty:([Ljava/lang/Object;)Z
      21: ifeq          35
      24: aload_0
      25: invokevirtual #26                 // Method hasValue:()Z
      28: ifne          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public void checkValidBase64(java.lang.String) throws ca.uhn.fhir.parser.DataFormatException;
    Code:
       0: aload_1
       1: invokevirtual #27                 // Method java/lang/String.getBytes:()[B
       4: invokestatic  #28                 // Method org/apache/commons/codec/binary/Base64.isBase64:([B)Z
       7: ifne          20
      10: new           #29                 // class ca/uhn/fhir/parser/DataFormatException
      13: dup
      14: ldc           #30                 // String
      16: invokespecial #31                 // Method ca/uhn/fhir/parser/DataFormatException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return

  public org.hl7.fhir.dstu3.model.PrimitiveType setValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #17                 // class "[B"
       5: invokevirtual #2                  // Method setValue:([B)Lorg/hl7/fhir/dstu3/model/Base64BinaryType;
       8: areturn

  protected java.lang.Object parse(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method parse:(Ljava/lang/String;)[B
       5: areturn

  public java.lang.Object getValue();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getValue:()[B
       4: areturn

  protected java.lang.String encode(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #17                 // class "[B"
       5: invokevirtual #19                 // Method encode:([B)Ljava/lang/String;
       8: areturn

  public org.hl7.fhir.dstu3.model.Type copy();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method copy:()Lorg/hl7/fhir/dstu3/model/Base64BinaryType;
       4: areturn

  public org.hl7.fhir.instance.model.api.IPrimitiveType setValue(java.lang.Object) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #17                 // class "[B"
       5: invokevirtual #2                  // Method setValue:([B)Lorg/hl7/fhir/dstu3/model/Base64BinaryType;
       8: areturn

  public org.hl7.fhir.dstu3.model.Element copy();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method copy:()Lorg/hl7/fhir/dstu3/model/Base64BinaryType;
       4: areturn
}
