Compiled from "IWorkerContext.java"
public interface org.hl7.fhir.dstu3.context.IWorkerContext {
  public abstract java.lang.String getVersion();

  public abstract org.hl7.fhir.dstu3.formats.IParser getParser(org.hl7.fhir.dstu3.formats.ParserType);

  public abstract org.hl7.fhir.dstu3.formats.IParser getParser(java.lang.String);

  public abstract org.hl7.fhir.dstu3.formats.IParser newJsonParser();

  public abstract org.hl7.fhir.dstu3.formats.IParser newXmlParser();

  public abstract org.hl7.fhir.dstu3.utils.INarrativeGenerator getNarrativeGenerator(java.lang.String, java.lang.String);

  public abstract org.hl7.fhir.dstu3.utils.IResourceValidator newValidator() throws org.hl7.fhir.exceptions.FHIRException;

  public abstract <T extends org.hl7.fhir.dstu3.model.Resource> T fetchResource(java.lang.Class<T>, java.lang.String);

  public abstract <T extends org.hl7.fhir.dstu3.model.Resource> T fetchResourceWithException(java.lang.Class<T>, java.lang.String) throws org.hl7.fhir.exceptions.FHIRException;

  public abstract <T extends org.hl7.fhir.dstu3.model.Resource> boolean hasResource(java.lang.Class<T>, java.lang.String);

  public abstract java.util.List<java.lang.String> getResourceNames();

  public abstract java.util.Set<java.lang.String> getResourceNamesAsSet();

  public abstract java.util.List<java.lang.String> getTypeNames();

  public abstract java.util.List<org.hl7.fhir.dstu3.model.StructureDefinition> allStructures();

  public abstract java.util.List<org.hl7.fhir.dstu3.model.MetadataResource> allConformanceResources();

  public abstract org.hl7.fhir.dstu3.model.ExpansionProfile getExpansionProfile();

  public abstract void setExpansionProfile(org.hl7.fhir.dstu3.model.ExpansionProfile);

  public abstract org.hl7.fhir.dstu3.model.CodeSystem fetchCodeSystem(java.lang.String);

  public abstract boolean supportsSystem(java.lang.String) throws org.hl7.fhir.exceptions.TerminologyServiceException;

  public abstract java.util.List<org.hl7.fhir.dstu3.model.ConceptMap> findMapsForSource(java.lang.String);

  public abstract org.hl7.fhir.dstu3.terminologies.ValueSetExpander$ValueSetExpansionOutcome expandVS(org.hl7.fhir.dstu3.model.ValueSet, boolean, boolean);

  public abstract org.hl7.fhir.dstu3.model.ValueSet$ValueSetExpansionComponent expandVS(org.hl7.fhir.dstu3.model.ValueSet$ConceptSetComponent, boolean) throws org.hl7.fhir.exceptions.TerminologyServiceException;

  public abstract java.util.Locale getLocale();

  public abstract void setLocale(java.util.Locale);

  public abstract java.lang.String formatMessage(java.lang.String, java.lang.Object...);

  public abstract void setValidationMessageLanguage(java.util.Locale);

  public abstract org.hl7.fhir.dstu3.context.IWorkerContext$ValidationResult validateCode(java.lang.String, java.lang.String, java.lang.String);

  public abstract org.hl7.fhir.dstu3.context.IWorkerContext$ValidationResult validateCode(java.lang.String, java.lang.String, java.lang.String, org.hl7.fhir.dstu3.model.ValueSet);

  public abstract org.hl7.fhir.dstu3.context.IWorkerContext$ValidationResult validateCode(org.hl7.fhir.dstu3.model.Coding, org.hl7.fhir.dstu3.model.ValueSet);

  public abstract org.hl7.fhir.dstu3.context.IWorkerContext$ValidationResult validateCode(org.hl7.fhir.dstu3.model.CodeableConcept, org.hl7.fhir.dstu3.model.ValueSet);

  public abstract org.hl7.fhir.dstu3.context.IWorkerContext$ValidationResult validateCode(java.lang.String, java.lang.String, java.lang.String, org.hl7.fhir.dstu3.model.ValueSet$ConceptSetComponent);

  public abstract java.lang.String getAbbreviation(java.lang.String);

  public abstract java.util.Set<java.lang.String> typeTails();

  public abstract java.lang.String oid2Uri(java.lang.String);

  public abstract boolean hasCache();

  public abstract void setLogger(org.hl7.fhir.dstu3.context.IWorkerContext$ILoggingService);

  public abstract boolean isNoTerminologyServer();

  public abstract org.hl7.fhir.dstu3.model.StructureDefinition fetchTypeDefinition(java.lang.String);
}
