Compiled from "LinkedMapWritable.java"
public class org.elasticsearch.hadoop.mr.LinkedMapWritable extends org.apache.hadoop.io.MapWritable {
  private java.util.Map<org.apache.hadoop.io.Writable, org.apache.hadoop.io.Writable> instance;

  public org.elasticsearch.hadoop.mr.LinkedMapWritable();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/hadoop/io/MapWritable."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #9                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #10                 // Field instance:Ljava/util/Map;
      15: aload_0
      16: ldc           #11                 // class org/elasticsearch/hadoop/mr/LinkedMapWritable
      18: invokevirtual #16                 // Method addToMap:(Ljava/lang/Class;)V
      21: return

  public org.elasticsearch.hadoop.mr.LinkedMapWritable(org.apache.hadoop.io.MapWritable);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #21                 // Method copy:(Lorg/apache/hadoop/io/Writable;)V
       9: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #10                 // Field instance:Ljava/util/Map;
       4: invokeinterface #25,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field instance:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field instance:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #34,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Set<java.util.Map$Entry<org.apache.hadoop.io.Writable, org.apache.hadoop.io.Writable>> entrySet();
    Code:
       0: aload_0
       1: getfield      #10                 // Field instance:Ljava/util/Map;
       4: invokeinterface #37,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public org.apache.hadoop.io.Writable get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field instance:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #45                 // class org/apache/hadoop/io/Writable
      13: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #10                 // Field instance:Ljava/util/Map;
       4: invokeinterface #47,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public java.util.Set<org.apache.hadoop.io.Writable> keySet();
    Code:
       0: aload_0
       1: getfield      #10                 // Field instance:Ljava/util/Map;
       4: invokeinterface #51,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public org.apache.hadoop.io.Writable put(org.apache.hadoop.io.Writable, org.apache.hadoop.io.Writable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #16                 // Method addToMap:(Ljava/lang/Class;)V
       8: aload_0
       9: aload_2
      10: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: invokevirtual #16                 // Method addToMap:(Ljava/lang/Class;)V
      16: aload_0
      17: getfield      #10                 // Field instance:Ljava/util/Map;
      20: aload_1
      21: aload_2
      22: invokeinterface #60,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #45                 // class org/apache/hadoop/io/Writable
      30: areturn

  public void putAll(java.util.Map<? extends org.apache.hadoop.io.Writable, ? extends org.apache.hadoop.io.Writable>);
    Code:
       0: aload_1
       1: invokeinterface #37,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #64,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          57
      21: aload_2
      22: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #79                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #81,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: checkcast     #45                 // class org/apache/hadoop/io/Writable
      41: aload_3
      42: invokeinterface #84,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      47: checkcast     #45                 // class org/apache/hadoop/io/Writable
      50: invokevirtual #87                 // Method put:(Lorg/apache/hadoop/io/Writable;Lorg/apache/hadoop/io/Writable;)Lorg/apache/hadoop/io/Writable;
      53: pop
      54: goto          12
      57: return

  public org.apache.hadoop.io.Writable remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field instance:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #90,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #45                 // class org/apache/hadoop/io/Writable
      13: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #10                 // Field instance:Ljava/util/Map;
       4: invokeinterface #93,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public java.util.Collection<org.apache.hadoop.io.Writable> values();
    Code:
       0: aload_0
       1: getfield      #10                 // Field instance:Ljava/util/Map;
       4: invokeinterface #97,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public void write(java.io.DataOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #101                // Method org/apache/hadoop/io/MapWritable.write:(Ljava/io/DataOutput;)V
       5: aload_1
       6: aload_0
       7: getfield      #10                 // Field instance:Ljava/util/Map;
      10: invokeinterface #93,  1           // InterfaceMethod java/util/Map.size:()I
      15: invokeinterface #105,  2          // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      20: aload_0
      21: getfield      #10                 // Field instance:Ljava/util/Map;
      24: invokeinterface #37,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      29: invokeinterface #64,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      34: astore_2
      35: aload_2
      36: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          131
      44: aload_2
      45: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #79                 // class java/util/Map$Entry
      53: astore_3
      54: aload_1
      55: aload_0
      56: aload_3
      57: invokeinterface #81,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      62: checkcast     #45                 // class org/apache/hadoop/io/Writable
      65: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      68: invokevirtual #111                // Method getId:(Ljava/lang/Class;)B
      71: invokeinterface #115,  2          // InterfaceMethod java/io/DataOutput.writeByte:(I)V
      76: aload_3
      77: invokeinterface #81,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      82: checkcast     #45                 // class org/apache/hadoop/io/Writable
      85: aload_1
      86: invokeinterface #118,  2          // InterfaceMethod org/apache/hadoop/io/Writable.write:(Ljava/io/DataOutput;)V
      91: aload_1
      92: aload_0
      93: aload_3
      94: invokeinterface #84,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      99: checkcast     #45                 // class org/apache/hadoop/io/Writable
     102: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     105: invokevirtual #111                // Method getId:(Ljava/lang/Class;)B
     108: invokeinterface #115,  2          // InterfaceMethod java/io/DataOutput.writeByte:(I)V
     113: aload_3
     114: invokeinterface #84,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     119: checkcast     #45                 // class org/apache/hadoop/io/Writable
     122: aload_1
     123: invokeinterface #118,  2          // InterfaceMethod org/apache/hadoop/io/Writable.write:(Ljava/io/DataOutput;)V
     128: goto          35
     131: return

  public void readFields(java.io.DataInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #119                // Method org/apache/hadoop/io/MapWritable.readFields:(Ljava/io/DataInput;)V
       5: aload_0
       6: getfield      #10                 // Field instance:Ljava/util/Map;
       9: invokeinterface #25,  1           // InterfaceMethod java/util/Map.clear:()V
      14: aload_1
      15: invokeinterface #123,  1          // InterfaceMethod java/io/DataInput.readInt:()I
      20: istore_2
      21: iconst_0
      22: istore_3
      23: iload_3
      24: iload_2
      25: if_icmpge     108
      28: aload_0
      29: aload_1
      30: invokeinterface #128,  1          // InterfaceMethod java/io/DataInput.readByte:()B
      35: invokevirtual #132                // Method getClass:(B)Ljava/lang/Class;
      38: aload_0
      39: invokevirtual #135                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      42: invokestatic  #139                // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      45: checkcast     #45                 // class org/apache/hadoop/io/Writable
      48: astore        4
      50: aload         4
      52: aload_1
      53: invokeinterface #145,  2          // InterfaceMethod org/apache/hadoop/io/Writable.readFields:(Ljava/io/DataInput;)V
      58: aload_0
      59: aload_1
      60: invokeinterface #128,  1          // InterfaceMethod java/io/DataInput.readByte:()B
      65: invokevirtual #132                // Method getClass:(B)Ljava/lang/Class;
      68: aload_0
      69: invokevirtual #135                // Method getConf:()Lorg/apache/hadoop/conf/Configuration;
      72: invokestatic  #139                // Method org/apache/hadoop/util/ReflectionUtils.newInstance:(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
      75: checkcast     #45                 // class org/apache/hadoop/io/Writable
      78: astore        5
      80: aload         5
      82: aload_1
      83: invokeinterface #145,  2          // InterfaceMethod org/apache/hadoop/io/Writable.readFields:(Ljava/io/DataInput;)V
      88: aload_0
      89: getfield      #10                 // Field instance:Ljava/util/Map;
      92: aload         4
      94: aload         5
      96: invokeinterface #60,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     101: pop
     102: iinc          3, 1
     105: goto          23
     108: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #26                 // class java/util/Map
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #26                 // class java/util/Map
      20: astore_2
      21: aload_2
      22: invokeinterface #93,  1           // InterfaceMethod java/util/Map.size:()I
      27: aload_0
      28: invokevirtual #146                // Method size:()I
      31: if_icmpeq     36
      34: iconst_0
      35: ireturn
      36: aload_0
      37: invokevirtual #147                // Method entrySet:()Ljava/util/Set;
      40: invokeinterface #64,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      45: astore_3
      46: aload_3
      47: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          140
      55: aload_3
      56: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #79                 // class java/util/Map$Entry
      64: astore        4
      66: aload         4
      68: invokeinterface #81,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      73: checkcast     #45                 // class org/apache/hadoop/io/Writable
      76: astore        5
      78: aload         4
      80: invokeinterface #84,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      85: checkcast     #45                 // class org/apache/hadoop/io/Writable
      88: astore        6
      90: aload         6
      92: ifnonnull     119
      95: aload_2
      96: aload         5
      98: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     103: ifnonnull     117
     106: aload_2
     107: aload         5
     109: invokeinterface #30,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     114: ifne          137
     117: iconst_0
     118: ireturn
     119: aload         6
     121: aload_2
     122: aload         5
     124: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     129: invokevirtual #148                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     132: ifne          137
     135: iconst_0
     136: ireturn
     137: goto          46
     140: goto          149
     143: astore_3
     144: iconst_0
     145: ireturn
     146: astore_3
     147: iconst_0
     148: ireturn
     149: iconst_1
     150: ireturn
    Exception table:
       from    to  target type
          36   118   143   Class java/lang/ClassCastException
         119   136   143   Class java/lang/ClassCastException
         137   140   143   Class java/lang/ClassCastException
          36   118   146   Class java/lang/NullPointerException
         119   136   146   Class java/lang/NullPointerException
         137   140   146   Class java/lang/NullPointerException

  public int hashCode();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #147                // Method entrySet:()Ljava/util/Set;
       6: invokeinterface #64,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          41
      21: iload_1
      22: aload_2
      23: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #79                 // class java/util/Map$Entry
      31: invokeinterface #155,  1          // InterfaceMethod java/util/Map$Entry.hashCode:()I
      36: iadd
      37: istore_1
      38: goto          12
      41: iload_1
      42: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #147                // Method entrySet:()Ljava/util/Set;
       4: invokeinterface #64,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifne          22
      19: ldc           #158                // String {}
      21: areturn
      22: new           #160                // class java/lang/StringBuilder
      25: dup
      26: invokespecial #162                // Method java/lang/StringBuilder."<init>":()V
      29: astore_2
      30: aload_2
      31: bipush        123
      33: invokevirtual #163                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: pop
      37: aload_1
      38: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #79                 // class java/util/Map$Entry
      46: astore_3
      47: aload_3
      48: invokeinterface #81,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      53: checkcast     #45                 // class org/apache/hadoop/io/Writable
      56: astore        4
      58: aload_3
      59: invokeinterface #84,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      64: checkcast     #45                 // class org/apache/hadoop/io/Writable
      67: astore        5
      69: aload_2
      70: aload         4
      72: aload_0
      73: if_acmpne     81
      76: ldc           #167                // String (this Map)
      78: goto          83
      81: aload         4
      83: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: pop
      87: aload_2
      88: bipush        61
      90: invokevirtual #163                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      93: pop
      94: aload         5
      96: instanceof    #172                // class org/apache/hadoop/io/ArrayWritable
      99: ifeq          121
     102: aload_2
     103: aload         5
     105: checkcast     #172                // class org/apache/hadoop/io/ArrayWritable
     108: invokevirtual #174                // Method org/apache/hadoop/io/ArrayWritable.get:()[Lorg/apache/hadoop/io/Writable;
     111: invokestatic  #177                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
     114: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: pop
     118: goto          139
     121: aload_2
     122: aload         5
     124: aload_0
     125: if_acmpne     133
     128: ldc           #167                // String (this Map)
     130: goto          135
     133: aload         5
     135: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     138: pop
     139: aload_1
     140: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     145: ifne          158
     148: aload_2
     149: bipush        125
     151: invokevirtual #163                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     154: invokevirtual #186                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: areturn
     158: aload_2
     159: ldc           #189                // String ,
     161: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: pop
     165: goto          37

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #191                // Method remove:(Ljava/lang/Object;)Lorg/apache/hadoop/io/Writable;
       5: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #45                 // class org/apache/hadoop/io/Writable
       5: aload_2
       6: checkcast     #45                 // class org/apache/hadoop/io/Writable
       9: invokevirtual #87                 // Method put:(Lorg/apache/hadoop/io/Writable;Lorg/apache/hadoop/io/Writable;)Lorg/apache/hadoop/io/Writable;
      12: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #194                // Method get:(Ljava/lang/Object;)Lorg/apache/hadoop/io/Writable;
       5: areturn
}
