Compiled from "SerdeErrorCollector.java"
public class org.elasticsearch.hadoop.serialization.handler.SerdeErrorCollector<T> implements org.elasticsearch.hadoop.handler.ErrorCollector<T> {
  private boolean isRetry;

  private T currentRetry;

  private java.lang.String currentMessage;

  public org.elasticsearch.hadoop.serialization.handler.SerdeErrorCollector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.elasticsearch.hadoop.handler.HandlerResult retry();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #7                  // Field isRetry:Z
       5: getstatic     #13                 // Field org/elasticsearch/hadoop/handler/HandlerResult.HANDLED:Lorg/elasticsearch/hadoop/handler/HandlerResult;
       8: areturn

  public org.elasticsearch.hadoop.handler.HandlerResult retry(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field currentRetry:Ljava/lang/Object;
       5: aload_0
       6: invokevirtual #23                 // Method retry:()Lorg/elasticsearch/hadoop/handler/HandlerResult;
       9: areturn

  public org.elasticsearch.hadoop.handler.HandlerResult pass(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #27                 // Field currentMessage:Ljava/lang/String;
       4: ifnonnull     15
       7: aload_0
       8: aload_1
       9: putfield      #27                 // Field currentMessage:Ljava/lang/String;
      12: goto          25
      15: new           #31                 // class org/elasticsearch/hadoop/EsHadoopIllegalStateException
      18: dup
      19: ldc           #33                 // String Error Handler is attempting to pass with a reason, but a reason already exists! Be sure to return the result of your call to errorCollector.pass(String), and call it only once per call to your Handler!
      21: invokespecial #35                 // Method org/elasticsearch/hadoop/EsHadoopIllegalStateException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: getstatic     #38                 // Field org/elasticsearch/hadoop/handler/HandlerResult.PASS:Lorg/elasticsearch/hadoop/handler/HandlerResult;
      28: areturn

  public boolean receivedRetries();
    Code:
       0: aload_0
       1: getfield      #7                  // Field isRetry:Z
       4: ireturn

  public T getAndClearRetryValue();
    Code:
       0: aload_0
       1: getfield      #7                  // Field isRetry:Z
       4: ifeq          33
       7: aconst_null
       8: astore_1
       9: aload_0
      10: getfield      #19                 // Field currentRetry:Ljava/lang/Object;
      13: ifnull        26
      16: aload_0
      17: getfield      #19                 // Field currentRetry:Ljava/lang/Object;
      20: astore_1
      21: aload_0
      22: aconst_null
      23: putfield      #19                 // Field currentRetry:Ljava/lang/Object;
      26: aload_0
      27: iconst_0
      28: putfield      #7                  // Field isRetry:Z
      31: aload_1
      32: areturn
      33: aconst_null
      34: areturn

  public java.lang.String getAndClearMessage();
    Code:
       0: aload_0
       1: getfield      #27                 // Field currentMessage:Ljava/lang/String;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #27                 // Field currentMessage:Ljava/lang/String;
      10: aload_1
      11: areturn
}
