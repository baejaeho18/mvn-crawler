Compiled from "SimpleResponse.java"
public class org.elasticsearch.hadoop.rest.SimpleResponse implements org.elasticsearch.hadoop.rest.Response {
  private final int status;

  private final java.io.InputStream body;

  private final java.lang.CharSequence uri;

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> headers;

  public org.elasticsearch.hadoop.rest.SimpleResponse(int, java.io.InputStream, java.lang.CharSequence);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       7: invokespecial #7                  // Method "<init>":(ILjava/io/InputStream;Ljava/lang/CharSequence;Ljava/util/Map;)V
      10: return

  public org.elasticsearch.hadoop.rest.SimpleResponse(int, java.io.InputStream, java.lang.CharSequence, java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #18                 // Field status:I
       9: aload_0
      10: aload_2
      11: putfield      #22                 // Field body:Ljava/io/InputStream;
      14: aload_0
      15: aload_3
      16: putfield      #26                 // Field uri:Ljava/lang/CharSequence;
      19: aload_0
      20: aload         4
      22: putfield      #30                 // Field headers:Ljava/util/Map;
      25: return

  public int status();
    Code:
       0: aload_0
       1: getfield      #18                 // Field status:I
       4: ireturn

  public java.lang.String statusDescription();
    Code:
       0: aload_0
       1: getfield      #18                 // Field status:I
       4: invokestatic  #34                 // Method org/elasticsearch/hadoop/rest/HttpStatus.getText:(I)Ljava/lang/String;
       7: areturn

  public java.io.InputStream body();
    Code:
       0: aload_0
       1: getfield      #22                 // Field body:Ljava/io/InputStream;
       4: instanceof    #40                 // class org/elasticsearch/hadoop/rest/ReusableInputStream
       7: ifeq          29
      10: aload_0
      11: getfield      #22                 // Field body:Ljava/io/InputStream;
      14: checkcast     #40                 // class org/elasticsearch/hadoop/rest/ReusableInputStream
      17: invokeinterface #42,  1           // InterfaceMethod org/elasticsearch/hadoop/rest/ReusableInputStream.copy:()Ljava/io/InputStream;
      22: astore_1
      23: aload_1
      24: ifnull        29
      27: aload_1
      28: areturn
      29: aload_0
      30: getfield      #22                 // Field body:Ljava/io/InputStream;
      33: areturn

  public java.lang.CharSequence uri();
    Code:
       0: aload_0
       1: getfield      #26                 // Field uri:Ljava/lang/CharSequence;
       4: areturn

  public boolean isInformal();
    Code:
       0: aload_0
       1: getfield      #18                 // Field status:I
       4: invokestatic  #46                 // Method org/elasticsearch/hadoop/rest/HttpStatus.isInformal:(I)Z
       7: ireturn

  public boolean isSuccess();
    Code:
       0: aload_0
       1: getfield      #18                 // Field status:I
       4: invokestatic  #50                 // Method org/elasticsearch/hadoop/rest/HttpStatus.isSuccess:(I)Z
       7: ireturn

  public boolean isRedirection();
    Code:
       0: aload_0
       1: getfield      #18                 // Field status:I
       4: invokestatic  #53                 // Method org/elasticsearch/hadoop/rest/HttpStatus.isRedirection:(I)Z
       7: ireturn

  public boolean isClientError();
    Code:
       0: aload_0
       1: getfield      #18                 // Field status:I
       4: invokestatic  #56                 // Method org/elasticsearch/hadoop/rest/HttpStatus.isClientError:(I)Z
       7: ireturn

  public boolean isServerError();
    Code:
       0: aload_0
       1: getfield      #18                 // Field status:I
       4: invokestatic  #59                 // Method org/elasticsearch/hadoop/rest/HttpStatus.isServerError:(I)Z
       7: ireturn

  public boolean hasSucceeded();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method isSuccess:()Z
       4: ireturn

  public boolean hasFailed();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method hasSucceeded:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.util.List<java.lang.String> getHeaders(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #30                 // Field headers:Ljava/util/Map;
       4: invokeinterface #68,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #74,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      14: aload_1
      15: invokedynamic #80,  0             // InvokeDynamic #0:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      20: invokeinterface #84,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      25: invokedynamic #90,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      30: invokeinterface #94,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      35: invokedynamic #98,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      40: invokeinterface #99,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      45: invokestatic  #102                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      48: invokeinterface #108,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      53: checkcast     #112                // class java/util/List
      56: areturn

  private static boolean lambda$getHeaders$0(java.lang.String, java.util.Map$Entry);
    Code:
       0: aload_1
       1: invokeinterface #114,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       6: checkcast     #120                // class java/lang/String
       9: aload_0
      10: invokevirtual #122                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      13: ireturn
}
