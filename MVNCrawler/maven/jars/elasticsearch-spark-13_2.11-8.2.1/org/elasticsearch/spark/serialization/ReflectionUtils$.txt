Compiled from "ReflectionUtils.scala"
public final class org.elasticsearch.spark.serialization.ReflectionUtils$ {
  public static final org.elasticsearch.spark.serialization.ReflectionUtils$ MODULE$;

  private final scala.collection.mutable.HashMap<java.lang.Class<?>, scala.Tuple2<java.lang.Object, scala.collection.Iterable<java.lang.String>>> caseClassCache;

  private final scala.collection.mutable.HashMap<java.lang.Class<?>, scala.Tuple2<java.lang.String, java.lang.reflect.Method>[]> javaBeanCache;

  public static {};
    Code:
       0: new           #2                  // class org/elasticsearch/spark/serialization/ReflectionUtils$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public scala.collection.mutable.HashMap<java.lang.Class<?>, scala.Tuple2<java.lang.Object, scala.collection.Iterable<java.lang.String>>> caseClassCache();
    Code:
       0: aload_0
       1: getfield      #20                 // Field caseClassCache:Lscala/collection/mutable/HashMap;
       4: areturn

  public scala.collection.mutable.HashMap<java.lang.Class<?>, scala.Tuple2<java.lang.String, java.lang.reflect.Method>[]> javaBeanCache();
    Code:
       0: aload_0
       1: getfield      #23                 // Field javaBeanCache:Lscala/collection/mutable/HashMap;
       4: areturn

  public boolean org$elasticsearch$spark$serialization$ReflectionUtils$$checkCaseClass(java.lang.Class<?>);
    Code:
       0: getstatic     #30                 // Field org/elasticsearch/spark/serialization/ReflectionUtils$ReflectionLock$.MODULE$:Lorg/elasticsearch/spark/serialization/ReflectionUtils$ReflectionLock$;
       3: dup
       4: astore_2
       5: monitorenter
       6: getstatic     #35                 // Field scala/reflect/runtime/package$.MODULE$:Lscala/reflect/runtime/package$;
       9: invokevirtual #39                 // Method scala/reflect/runtime/package$.universe:()Lscala/reflect/api/JavaUniverse;
      12: aload_1
      13: invokevirtual #45                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      16: invokeinterface #51,  2           // InterfaceMethod scala/reflect/api/JavaUniverse.runtimeMirror:(Ljava/lang/ClassLoader;)Lscala/reflect/api/JavaUniverse$JavaMirror;
      21: aload_1
      22: invokeinterface #57,  2           // InterfaceMethod scala/reflect/api/JavaUniverse$JavaMirror.classSymbol:(Ljava/lang/Object;)Lscala/reflect/api/Symbols$ClassSymbolApi;
      27: invokeinterface #63,  1           // InterfaceMethod scala/reflect/api/Symbols$ClassSymbolApi.isCaseClass:()Z
      32: invokestatic  #69                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      35: astore_3
      36: aload_2
      37: monitorexit
      38: aload_3
      39: invokestatic  #73                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      42: ireturn
      43: aload_2
      44: monitorexit
      45: athrow
    Exception table:
       from    to  target type
           6    38    43   any

  public scala.collection.Iterable<java.lang.String> org$elasticsearch$spark$serialization$ReflectionUtils$$doGetCaseClassInfo(java.lang.Class<?>);
    Code:
       0: getstatic     #30                 // Field org/elasticsearch/spark/serialization/ReflectionUtils$ReflectionLock$.MODULE$:Lorg/elasticsearch/spark/serialization/ReflectionUtils$ReflectionLock$;
       3: dup
       4: astore_2
       5: monitorenter
       6: getstatic     #35                 // Field scala/reflect/runtime/package$.MODULE$:Lscala/reflect/runtime/package$;
       9: invokevirtual #39                 // Method scala/reflect/runtime/package$.universe:()Lscala/reflect/api/JavaUniverse;
      12: aload_1
      13: invokevirtual #45                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      16: invokeinterface #51,  2           // InterfaceMethod scala/reflect/api/JavaUniverse.runtimeMirror:(Ljava/lang/ClassLoader;)Lscala/reflect/api/JavaUniverse$JavaMirror;
      21: aload_1
      22: invokeinterface #57,  2           // InterfaceMethod scala/reflect/api/JavaUniverse$JavaMirror.classSymbol:(Ljava/lang/Object;)Lscala/reflect/api/Symbols$ClassSymbolApi;
      27: invokeinterface #83,  1           // InterfaceMethod scala/reflect/api/Symbols$ClassSymbolApi.toType:()Lscala/reflect/api/Types$TypeApi;
      32: astore        4
      34: aload_0
      35: aload         4
      37: invokespecial #87                 // Method liftedTree1$1:(Lscala/reflect/api/Types$TypeApi;)Ljava/lang/reflect/Method;
      40: astore        5
      42: aload         5
      44: aload         4
      46: iconst_0
      47: anewarray     #4                  // class java/lang/Object
      50: invokevirtual #93                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #95                 // class scala/collection/Iterable
      56: astore        6
      58: aload         6
      60: new           #97                 // class org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$org$elasticsearch$spark$serialization$ReflectionUtils$$doGetCaseClassInfo$1
      63: dup
      64: invokespecial #98                 // Method org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$org$elasticsearch$spark$serialization$ReflectionUtils$$doGetCaseClassInfo$1."<init>":()V
      67: getstatic     #103                // Field scala/collection/Iterable$.MODULE$:Lscala/collection/Iterable$;
      70: invokevirtual #107                // Method scala/collection/Iterable$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      73: invokeinterface #111,  3          // InterfaceMethod scala/collection/Iterable.collect:(Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      78: astore_3
      79: aload_2
      80: monitorexit
      81: aload_3
      82: checkcast     #95                 // class scala/collection/Iterable
      85: areturn
      86: aload_2
      87: monitorexit
      88: athrow
    Exception table:
       from    to  target type
           6    81    86   any

  public boolean org$elasticsearch$spark$serialization$ReflectionUtils$$isCaseClassInsideACompanionModule(java.lang.Class<?>, int);
    Code:
       0: ldc           #121                // class scala/Serializable
       2: aload_1
       3: invokevirtual #124                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifeq          15
       9: getstatic     #130                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      12: goto          19
      15: iconst_0
      16: invokestatic  #69                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      19: pop
      20: getstatic     #135                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      23: aload_1
      24: invokevirtual #139                // Method java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
      27: checkcast     #141                // class "[Ljava/lang/Object;"
      30: invokevirtual #145                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
      33: new           #147                // class org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$1
      36: dup
      37: invokespecial #148                // Method org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$1."<init>":()V
      40: getstatic     #153                // Field scala/Array$.MODULE$:Lscala/Array$;
      43: getstatic     #158                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      46: ldc           #160                // class java/lang/String
      48: invokevirtual #164                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      51: invokevirtual #167                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
      54: invokeinterface #170,  3          // InterfaceMethod scala/collection/mutable/ArrayOps.collect:(Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      59: checkcast     #172                // class "[Ljava/lang/String;"
      62: astore_3
      63: iload_2
      64: aload_3
      65: arraylength
      66: if_icmpne     73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: ireturn

  public scala.collection.Iterable<java.lang.String> org$elasticsearch$spark$serialization$ReflectionUtils$$caseClassInfoInsideACompanionModule(java.lang.Class<?>, int);
    Code:
       0: iconst_0
       1: invokestatic  #183                // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;
       4: astore_3
       5: getstatic     #135                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       8: aload_1
       9: invokevirtual #187                // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      12: checkcast     #141                // class "[Ljava/lang/Object;"
      15: invokevirtual #145                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
      18: new           #189                // class org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$org$elasticsearch$spark$serialization$ReflectionUtils$$caseClassInfoInsideACompanionModule$1
      21: dup
      22: iload_2
      23: aload_3
      24: invokespecial #192                // Method org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$org$elasticsearch$spark$serialization$ReflectionUtils$$caseClassInfoInsideACompanionModule$1."<init>":(ILscala/runtime/IntRef;)V
      27: getstatic     #153                // Field scala/Array$.MODULE$:Lscala/Array$;
      30: getstatic     #197                // Field scala/Predef$DummyImplicit$.MODULE$:Lscala/Predef$DummyImplicit$;
      33: invokevirtual #201                // Method scala/Predef$DummyImplicit$.dummyImplicit:()Lscala/Predef$DummyImplicit;
      36: invokevirtual #205                // Method scala/Array$.fallbackCanBuildFrom:(Lscala/Predef$DummyImplicit;)Lscala/collection/generic/CanBuildFrom;
      39: invokeinterface #170,  3          // InterfaceMethod scala/collection/mutable/ArrayOps.collect:(Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      44: checkcast     #95                 // class scala/collection/Iterable
      47: areturn

  private scala.collection.immutable.Map<java.lang.String, java.lang.Object> doGetCaseClassValues(java.lang.Object, scala.collection.Iterable<java.lang.String>);
    Code:
       0: aload_1
       1: checkcast     #211                // class scala/Product
       4: invokeinterface #215,  1          // InterfaceMethod scala/Product.productIterator:()Lscala/collection/Iterator;
       9: astore_3
      10: aload_2
      11: new           #217                // class org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$2
      14: dup
      15: aload_3
      16: invokespecial #220                // Method org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$2."<init>":(Lscala/collection/Iterator;)V
      19: getstatic     #103                // Field scala/collection/Iterable$.MODULE$:Lscala/collection/Iterable$;
      22: invokevirtual #107                // Method scala/collection/Iterable$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      25: invokeinterface #224,  3          // InterfaceMethod scala/collection/Iterable.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      30: checkcast     #95                 // class scala/collection/Iterable
      33: astore        4
      35: aload         4
      37: getstatic     #135                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      40: invokevirtual #228                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      43: invokeinterface #232,  2          // InterfaceMethod scala/collection/Iterable.toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
      48: areturn

  private scala.Tuple2<java.lang.Object, scala.collection.Iterable<java.lang.String>> checkCaseClassCache(scala.Product);
    Code:
       0: aload_0
       1: invokevirtual #242                // Method caseClassCache:()Lscala/collection/mutable/HashMap;
       4: aload_1
       5: invokevirtual #246                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: new           #248                // class org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$checkCaseClassCache$1
      11: dup
      12: aload_1
      13: invokespecial #251                // Method org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$checkCaseClassCache$1."<init>":(Lscala/Product;)V
      16: invokevirtual #257                // Method scala/collection/mutable/HashMap.getOrElseUpdate:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      19: checkcast     #259                // class scala/Tuple2
      22: areturn

  public boolean isCaseClass(scala.Product);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #264                // Method checkCaseClassCache:(Lscala/Product;)Lscala/Tuple2;
       5: invokevirtual #267                // Method scala/Tuple2._1$mcZ$sp:()Z
       8: ireturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> caseClassValues(scala.Product);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokespecial #264                // Method checkCaseClassCache:(Lscala/Product;)Lscala/Tuple2;
       7: invokevirtual #273                // Method scala/Tuple2._2:()Ljava/lang/Object;
      10: checkcast     #95                 // class scala/collection/Iterable
      13: invokespecial #275                // Method doGetCaseClassValues:(Ljava/lang/Object;Lscala/collection/Iterable;)Lscala/collection/immutable/Map;
      16: areturn

  private scala.Tuple2<java.lang.String, java.lang.reflect.Method>[] checkJavaBeansCache(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #279                // Method javaBeanCache:()Lscala/collection/mutable/HashMap;
       4: aload_1
       5: invokevirtual #246                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: new           #281                // class org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$checkJavaBeansCache$1
      11: dup
      12: aload_1
      13: invokespecial #284                // Method org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$checkJavaBeansCache$1."<init>":(Ljava/lang/Object;)V
      16: invokevirtual #257                // Method scala/collection/mutable/HashMap.getOrElseUpdate:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      19: checkcast     #286                // class "[Lscala/Tuple2;"
      22: areturn

  public boolean isJavaBean(java.lang.Object);
    Code:
       0: getstatic     #135                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: aload_1
       5: invokespecial #290                // Method checkJavaBeansCache:(Ljava/lang/Object;)[Lscala/Tuple2;
       8: checkcast     #141                // class "[Ljava/lang/Object;"
      11: invokevirtual #145                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
      14: invokeinterface #293,  1          // InterfaceMethod scala/collection/mutable/ArrayOps.isEmpty:()Z
      19: ifeq          26
      22: iconst_0
      23: goto          27
      26: iconst_1
      27: ireturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> javaBeanAsMap(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokespecial #290                // Method checkJavaBeansCache:(Ljava/lang/Object;)[Lscala/Tuple2;
       7: invokespecial #300                // Method javaBeansValues:(Ljava/lang/Object;[Lscala/Tuple2;)Lscala/collection/immutable/Map;
      10: areturn

  public scala.Tuple2<java.lang.String, java.lang.reflect.Method>[] org$elasticsearch$spark$serialization$ReflectionUtils$$javaBeansInfo(java.lang.Class<?>);
    Code:
       0: getstatic     #135                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: getstatic     #135                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: aload_1
       7: invokestatic  #308                // Method java/beans/Introspector.getBeanInfo:(Ljava/lang/Class;)Ljava/beans/BeanInfo;
      10: invokeinterface #314,  1          // InterfaceMethod java/beans/BeanInfo.getPropertyDescriptors:()[Ljava/beans/PropertyDescriptor;
      15: checkcast     #141                // class "[Ljava/lang/Object;"
      18: invokevirtual #145                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
      21: new           #316                // class org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$org$elasticsearch$spark$serialization$ReflectionUtils$$javaBeansInfo$1
      24: dup
      25: invokespecial #317                // Method org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$org$elasticsearch$spark$serialization$ReflectionUtils$$javaBeansInfo$1."<init>":()V
      28: getstatic     #153                // Field scala/Array$.MODULE$:Lscala/Array$;
      31: getstatic     #158                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      34: ldc_w         #259                // class scala/Tuple2
      37: invokevirtual #164                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      40: invokevirtual #167                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
      43: invokeinterface #170,  3          // InterfaceMethod scala/collection/mutable/ArrayOps.collect:(Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      48: checkcast     #141                // class "[Ljava/lang/Object;"
      51: invokevirtual #145                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
      54: new           #319                // class org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$org$elasticsearch$spark$serialization$ReflectionUtils$$javaBeansInfo$2
      57: dup
      58: invokespecial #320                // Method org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$org$elasticsearch$spark$serialization$ReflectionUtils$$javaBeansInfo$2."<init>":()V
      61: getstatic     #325                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
      64: invokeinterface #329,  3          // InterfaceMethod scala/collection/mutable/ArrayOps.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
      69: checkcast     #286                // class "[Lscala/Tuple2;"
      72: areturn

  private scala.collection.immutable.Map<java.lang.String, java.lang.Object> javaBeansValues(java.lang.Object, scala.Tuple2<java.lang.String, java.lang.reflect.Method>[]);
    Code:
       0: getstatic     #135                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: getstatic     #135                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: aload_2
       7: checkcast     #141                // class "[Ljava/lang/Object;"
      10: invokevirtual #145                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
      13: new           #331                // class org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$javaBeansValues$1
      16: dup
      17: aload_1
      18: invokespecial #332                // Method org/elasticsearch/spark/serialization/ReflectionUtils$$anonfun$javaBeansValues$1."<init>":(Ljava/lang/Object;)V
      21: getstatic     #153                // Field scala/Array$.MODULE$:Lscala/Array$;
      24: getstatic     #158                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      27: ldc_w         #259                // class scala/Tuple2
      30: invokevirtual #164                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      33: invokevirtual #167                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
      36: invokeinterface #333,  3          // InterfaceMethod scala/collection/mutable/ArrayOps.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      41: checkcast     #141                // class "[Ljava/lang/Object;"
      44: invokevirtual #145                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
      47: getstatic     #135                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      50: invokevirtual #228                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      53: invokeinterface #334,  2          // InterfaceMethod scala/collection/mutable/ArrayOps.toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
      58: areturn

  private final java.lang.reflect.Method liftedTree1$1(scala.reflect.api.Types$TypeApi);
    Code:
       0: aload_1
       1: invokevirtual #246                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #336                // String decls
       7: iconst_0
       8: anewarray     #41                 // class java/lang/Class
      11: invokevirtual #340                // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      14: goto          32
      17: pop
      18: aload_1
      19: invokevirtual #246                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: ldc_w         #342                // String declarations
      25: iconst_0
      26: anewarray     #41                 // class java/lang/Class
      29: invokevirtual #340                // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      32: areturn
    Exception table:
       from    to  target type
           0    17    17   any

  private org.elasticsearch.spark.serialization.ReflectionUtils$();
    Code:
       0: aload_0
       1: invokespecial #344                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #346                // Field MODULE$:Lorg/elasticsearch/spark/serialization/ReflectionUtils$;
       8: aload_0
       9: new           #253                // class scala/collection/mutable/HashMap
      12: dup
      13: invokespecial #347                // Method scala/collection/mutable/HashMap."<init>":()V
      16: putfield      #20                 // Field caseClassCache:Lscala/collection/mutable/HashMap;
      19: aload_0
      20: new           #253                // class scala/collection/mutable/HashMap
      23: dup
      24: invokespecial #347                // Method scala/collection/mutable/HashMap."<init>":()V
      27: putfield      #23                 // Field javaBeanCache:Lscala/collection/mutable/HashMap;
      30: return
}
