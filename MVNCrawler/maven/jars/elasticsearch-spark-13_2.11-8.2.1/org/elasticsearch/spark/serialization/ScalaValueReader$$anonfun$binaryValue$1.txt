Compiled from "ScalaValueReader.scala"
public final class org.elasticsearch.spark.serialization.ScalaValueReader$$anonfun$binaryValue$1 extends scala.runtime.AbstractPartialFunction<byte[], byte[]> implements scala.Serializable {
  public static final long serialVersionUID;

  private final org.elasticsearch.spark.serialization.ScalaValueReader $outer;

  public final <A1 extends byte[], B1> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: ifnull        49
       6: aload_3
       7: astore        4
       9: aload_0
      10: getfield      #23                 // Field $outer:Lorg/elasticsearch/spark/serialization/ScalaValueReader;
      13: invokevirtual #27                 // Method org/elasticsearch/spark/serialization/ScalaValueReader.emptyAsNull:()Z
      16: ifeq          35
      19: getstatic     #33                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      22: aload         4
      24: invokevirtual #37                 // Method scala/Predef$.byteArrayOps:([B)Lscala/collection/mutable/ArrayOps;
      27: invokeinterface #42,  1           // InterfaceMethod scala/collection/mutable/ArrayOps.isEmpty:()Z
      32: ifne          49
      35: aload_0
      36: getfield      #23                 // Field $outer:Lorg/elasticsearch/spark/serialization/ScalaValueReader;
      39: aload         4
      41: invokevirtual #45                 // Method org/elasticsearch/spark/serialization/ScalaValueReader.parseBinary:([B)[B
      44: astore        5
      46: goto          58
      49: aload_2
      50: aload_1
      51: invokeinterface #51,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      56: astore        5
      58: aload         5
      60: areturn

  public final boolean isDefinedAt(byte[]);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        39
       6: aload_2
       7: astore_3
       8: aload_0
       9: getfield      #23                 // Field $outer:Lorg/elasticsearch/spark/serialization/ScalaValueReader;
      12: invokevirtual #27                 // Method org/elasticsearch/spark/serialization/ScalaValueReader.emptyAsNull:()Z
      15: ifeq          33
      18: getstatic     #33                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: aload_3
      22: invokevirtual #37                 // Method scala/Predef$.byteArrayOps:([B)Lscala/collection/mutable/ArrayOps;
      25: invokeinterface #42,  1           // InterfaceMethod scala/collection/mutable/ArrayOps.isEmpty:()Z
      30: ifne          39
      33: iconst_1
      34: istore        4
      36: goto          42
      39: iconst_0
      40: istore        4
      42: iload         4
      44: ireturn

  public final boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #58                 // class "[B"
       5: invokevirtual #65                 // Method isDefinedAt:([B)Z
       8: ireturn

  public final java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #58                 // class "[B"
       5: aload_2
       6: invokevirtual #70                 // Method applyOrElse:([BLscala/Function1;)Ljava/lang/Object;
       9: areturn

  public org.elasticsearch.spark.serialization.ScalaValueReader$$anonfun$binaryValue$1(org.elasticsearch.spark.serialization.ScalaValueReader);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #23                 // Field $outer:Lorg/elasticsearch/spark/serialization/ScalaValueReader;
      11: aload_0
      12: invokespecial #75                 // Method scala/runtime/AbstractPartialFunction."<init>":()V
      15: return
}
