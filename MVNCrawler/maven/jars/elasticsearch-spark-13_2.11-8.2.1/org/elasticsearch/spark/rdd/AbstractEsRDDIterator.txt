Compiled from "AbstractEsRDDIterator.scala"
public abstract class org.elasticsearch.spark.rdd.AbstractEsRDDIterator<T> implements scala.collection.Iterator<T> {
  private final org.apache.spark.TaskContext context;

  private final org.elasticsearch.hadoop.rest.PartitionDefinition partition;

  private boolean finished;

  private boolean gotNext;

  private T nextValue;

  private boolean closed;

  private transient org.apache.commons.logging.Log log;

  private boolean initialized;

  private org.elasticsearch.hadoop.rest.ScrollQuery reader;

  private volatile transient boolean bitmap$trans$0;

  private volatile boolean bitmap$0;

  private org.apache.commons.logging.Log log$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #33                 // Field bitmap$trans$0:Z
       8: ifne          24
      11: aload_0
      12: aload_0
      13: invokevirtual #36                 // Method getLogger:()Lorg/apache/commons/logging/Log;
      16: putfield      #38                 // Field log:Lorg/apache/commons/logging/Log;
      19: aload_0
      20: iconst_1
      21: putfield      #33                 // Field bitmap$trans$0:Z
      24: getstatic     #44                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      27: pop
      28: aload_1
      29: monitorexit
      30: aload_0
      31: getfield      #38                 // Field log:Lorg/apache/commons/logging/Log;
      34: areturn
      35: aload_1
      36: monitorexit
      37: athrow
    Exception table:
       from    to  target type
           4    30    35   any

  private org.elasticsearch.hadoop.rest.ScrollQuery reader$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #52                 // Field bitmap$0:Z
       8: ifne          141
      11: aload_0
      12: aload_0
      13: iconst_1
      14: invokespecial #56                 // Method initialized_$eq:(Z)V
      17: aload_0
      18: getfield      #58                 // Field partition:Lorg/elasticsearch/hadoop/rest/PartitionDefinition;
      21: invokevirtual #64                 // Method org/elasticsearch/hadoop/rest/PartitionDefinition.settings:()Lorg/elasticsearch/hadoop/cfg/Settings;
      24: astore_2
      25: aload_0
      26: aload_2
      27: aload_0
      28: invokespecial #66                 // Method log:()Lorg/apache/commons/logging/Log;
      31: invokevirtual #70                 // Method initReader:(Lorg/elasticsearch/hadoop/cfg/Settings;Lorg/apache/commons/logging/Log;)V
      34: aload_2
      35: invokevirtual #76                 // Method org/elasticsearch/hadoop/cfg/Settings.getOpaqueId:()Ljava/lang/String;
      38: ifnull        112
      41: aload_2
      42: invokevirtual #76                 // Method org/elasticsearch/hadoop/cfg/Settings.getOpaqueId:()Ljava/lang/String;
      45: ldc           #78                 // String task attempt
      47: invokevirtual #84                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      50: iconst_0
      51: if_icmpne     112
      54: aload_2
      55: getstatic     #90                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
      58: ldc           #92                 // String %s, stage %s, task attempt %s
      60: iconst_3
      61: anewarray     #5                  // class java/lang/Object
      64: dup
      65: iconst_0
      66: aload_2
      67: invokevirtual #76                 // Method org/elasticsearch/hadoop/cfg/Settings.getOpaqueId:()Ljava/lang/String;
      70: aastore
      71: dup
      72: iconst_1
      73: aload_0
      74: invokevirtual #95                 // Method context:()Lorg/apache/spark/TaskContext;
      77: invokevirtual #101                // Method org/apache/spark/TaskContext.stageId:()I
      80: invokestatic  #107                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      83: invokevirtual #110                // Method java/lang/Object.toString:()Ljava/lang/String;
      86: aastore
      87: dup
      88: iconst_2
      89: aload_0
      90: invokevirtual #95                 // Method context:()Lorg/apache/spark/TaskContext;
      93: invokevirtual #114                // Method org/apache/spark/TaskContext.taskAttemptId:()J
      96: invokestatic  #118                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      99: invokevirtual #110                // Method java/lang/Object.toString:()Ljava/lang/String;
     102: aastore
     103: invokestatic  #122                // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     106: invokevirtual #126                // Method org/elasticsearch/hadoop/cfg/Settings.setOpaqueId:(Ljava/lang/String;)Lorg/elasticsearch/hadoop/cfg/Settings;
     109: goto          115
     112: getstatic     #44                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     115: pop
     116: aload_2
     117: aload_0
     118: getfield      #58                 // Field partition:Lorg/elasticsearch/hadoop/rest/PartitionDefinition;
     121: aload_0
     122: invokespecial #66                 // Method log:()Lorg/apache/commons/logging/Log;
     125: invokestatic  #132                // Method org/elasticsearch/hadoop/rest/RestService.createReader:(Lorg/elasticsearch/hadoop/cfg/Settings;Lorg/elasticsearch/hadoop/rest/PartitionDefinition;Lorg/apache/commons/logging/Log;)Lorg/elasticsearch/hadoop/rest/RestService$PartitionReader;
     128: astore_3
     129: aload_3
     130: invokevirtual #137                // Method org/elasticsearch/hadoop/rest/RestService$PartitionReader.scrollQuery:()Lorg/elasticsearch/hadoop/rest/ScrollQuery;
     133: putfield      #139                // Field reader:Lorg/elasticsearch/hadoop/rest/ScrollQuery;
     136: aload_0
     137: iconst_1
     138: putfield      #52                 // Field bitmap$0:Z
     141: getstatic     #44                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     144: pop
     145: aload_1
     146: monitorexit
     147: aload_0
     148: getfield      #139                // Field reader:Lorg/elasticsearch/hadoop/rest/ScrollQuery;
     151: areturn
     152: aload_1
     153: monitorexit
     154: athrow
    Exception table:
       from    to  target type
           4   147   152   any

  public scala.collection.Iterator<T> seq();
    Code:
       0: aload_0
       1: invokestatic  #149                // Method scala/collection/Iterator$class.seq:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #154                // Method scala/collection/Iterator$class.isEmpty:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #157                // Method scala/collection/Iterator$class.isTraversableAgain:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #160                // Method scala/collection/Iterator$class.hasDefiniteSize:(Lscala/collection/Iterator;)Z
       4: ireturn

  public scala.collection.Iterator<T> take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #165                // Method scala/collection/Iterator$class.take:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<T> drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #170                // Method scala/collection/Iterator$class.drop:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<T> slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #175                // Method scala/collection/Iterator$class.slice:(Lscala/collection/Iterator;II)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> map(scala.Function1<T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #182                // Method scala/collection/Iterator$class.map:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> $plus$plus(scala.Function0<scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #189                // Method scala/collection/Iterator$class.$plus$plus:(Lscala/collection/Iterator;Lscala/Function0;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> flatMap(scala.Function1<T, scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #194                // Method scala/collection/Iterator$class.flatMap:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<T> filter(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #197                // Method scala/collection/Iterator$class.filter:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> boolean corresponds(scala.collection.GenTraversableOnce<B>, scala.Function2<T, B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #203                // Method scala/collection/Iterator$class.corresponds:(Lscala/collection/Iterator;Lscala/collection/GenTraversableOnce;Lscala/Function2;)Z
       6: ireturn

  public scala.collection.Iterator<T> withFilter(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #208                // Method scala/collection/Iterator$class.withFilter:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<T> filterNot(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #211                // Method scala/collection/Iterator$class.filterNot:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> collect(scala.PartialFunction<T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // Method scala/collection/Iterator$class.collect:(Lscala/collection/Iterator;Lscala/PartialFunction;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> scanLeft(B, scala.Function2<B, T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #223                // Method scala/collection/Iterator$class.scanLeft:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> scanRight(B, scala.Function2<T, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #228                // Method scala/collection/Iterator$class.scanRight:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<T> takeWhile(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #231                // Method scala/collection/Iterator$class.takeWhile:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<T>, scala.collection.Iterator<T>> partition(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #235                // Method scala/collection/Iterator$class.partition:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<T>, scala.collection.Iterator<T>> span(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #238                // Method scala/collection/Iterator$class.span:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.Iterator<T> dropWhile(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #241                // Method scala/collection/Iterator$class.dropWhile:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<scala.Tuple2<T, B>> zip(scala.collection.Iterator<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #245                // Method scala/collection/Iterator$class.zip:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Lscala/collection/Iterator;
       5: areturn

  public <A1> scala.collection.Iterator<A1> padTo(int, A1);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #251                // Method scala/collection/Iterator$class.padTo:(Lscala/collection/Iterator;ILjava/lang/Object;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scala.Tuple2<T, java.lang.Object>> zipWithIndex();
    Code:
       0: aload_0
       1: invokestatic  #256                // Method scala/collection/Iterator$class.zipWithIndex:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public <B, A1, B1> scala.collection.Iterator<scala.Tuple2<A1, B1>> zipAll(scala.collection.Iterator<B>, A1, B1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #261                // Method scala/collection/Iterator$class.zipAll:(Lscala/collection/Iterator;Lscala/collection/Iterator;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/Iterator;
       7: areturn

  public <U> void foreach(scala.Function1<T, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #268                // Method scala/collection/Iterator$class.foreach:(Lscala/collection/Iterator;Lscala/Function1;)V
       5: return

  public boolean forall(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #273                // Method scala/collection/Iterator$class.forall:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #276                // Method scala/collection/Iterator$class.exists:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #280                // Method scala/collection/Iterator$class.contains:(Lscala/collection/Iterator;Ljava/lang/Object;)Z
       5: ireturn

  public scala.Option<T> find(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #285                // Method scala/collection/Iterator$class.find:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Option;
       5: areturn

  public int indexWhere(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #290                // Method scala/collection/Iterator$class.indexWhere:(Lscala/collection/Iterator;Lscala/Function1;)I
       5: ireturn

  public <B> int indexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #295                // Method scala/collection/Iterator$class.indexOf:(Lscala/collection/Iterator;Ljava/lang/Object;)I
       5: ireturn

  public scala.collection.BufferedIterator<T> buffered();
    Code:
       0: aload_0
       1: invokestatic  #300                // Method scala/collection/Iterator$class.buffered:(Lscala/collection/Iterator;)Lscala/collection/BufferedIterator;
       4: areturn

  public <B> scala.collection.Iterator<T>.GroupedIterator<B> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #305                // Method scala/collection/Iterator$class.grouped:(Lscala/collection/Iterator;I)Lscala/collection/Iterator$GroupedIterator;
       5: areturn

  public <B> scala.collection.Iterator<T>.GroupedIterator<B> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #311                // Method scala/collection/Iterator$class.sliding:(Lscala/collection/Iterator;II)Lscala/collection/Iterator$GroupedIterator;
       6: areturn

  public int length();
    Code:
       0: aload_0
       1: invokestatic  #316                // Method scala/collection/Iterator$class.length:(Lscala/collection/Iterator;)I
       4: ireturn

  public scala.Tuple2<scala.collection.Iterator<T>, scala.collection.Iterator<T>> duplicate();
    Code:
       0: aload_0
       1: invokestatic  #321                // Method scala/collection/Iterator$class.duplicate:(Lscala/collection/Iterator;)Lscala/Tuple2;
       4: areturn

  public <B> scala.collection.Iterator<B> patch(int, scala.collection.Iterator<B>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #326                // Method scala/collection/Iterator$class.patch:(Lscala/collection/Iterator;ILscala/collection/Iterator;I)Lscala/collection/Iterator;
       7: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #333                // Method scala/collection/Iterator$class.copyToArray:(Lscala/collection/Iterator;Ljava/lang/Object;II)V
       7: return

  public boolean sameElements(scala.collection.Iterator<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #339                // Method scala/collection/Iterator$class.sameElements:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Z
       5: ireturn

  public scala.collection.Traversable<T> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #344                // Method scala/collection/Iterator$class.toTraversable:(Lscala/collection/Iterator;)Lscala/collection/Traversable;
       4: areturn

  public scala.collection.Iterator<T> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #347                // Method scala/collection/Iterator$class.toIterator:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.immutable.Stream<T> toStream();
    Code:
       0: aload_0
       1: invokestatic  #352                // Method scala/collection/Iterator$class.toStream:(Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #355                // Method scala/collection/Iterator$class.toString:(Lscala/collection/Iterator;)Ljava/lang/String;
       4: areturn

  public <B> int sliding$default$2();
    Code:
       0: aload_0
       1: invokestatic  #358                // Method scala/collection/Iterator$class.sliding$default$2:(Lscala/collection/Iterator;)I
       4: ireturn

  public scala.collection.immutable.List<T> reversed();
    Code:
       0: aload_0
       1: invokestatic  #365                // Method scala/collection/TraversableOnce$class.reversed:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #368                // Method scala/collection/TraversableOnce$class.size:(Lscala/collection/TraversableOnce;)I
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #372                // Method scala/collection/TraversableOnce$class.nonEmpty:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<T, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #376                // Method scala/collection/TraversableOnce$class.count:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #381                // Method scala/collection/TraversableOnce$class.collectFirst:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #386                // Method scala/collection/TraversableOnce$class.$div$colon:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<T, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #389                // Method scala/collection/TraversableOnce$class.$colon$bslash:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #392                // Method scala/collection/TraversableOnce$class.foldLeft:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldRight(B, scala.Function2<T, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #395                // Method scala/collection/TraversableOnce$class.foldRight:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #400                // Method scala/collection/TraversableOnce$class.reduceLeft:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> B reduceRight(scala.Function2<T, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #403                // Method scala/collection/TraversableOnce$class.reduceRight:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, T, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #408                // Method scala/collection/TraversableOnce$class.reduceLeftOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<T, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #411                // Method scala/collection/TraversableOnce$class.reduceRightOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #414                // Method scala/collection/TraversableOnce$class.reduce:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #417                // Method scala/collection/TraversableOnce$class.reduceOption:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #420                // Method scala/collection/TraversableOnce$class.fold:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, T, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #425                // Method scala/collection/TraversableOnce$class.aggregate:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #432                // Method scala/collection/TraversableOnce$class.sum:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #437                // Method scala/collection/TraversableOnce$class.product:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> T min(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #442                // Method scala/collection/TraversableOnce$class.min:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> T max(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #447                // Method scala/collection/TraversableOnce$class.max:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> T maxBy(scala.Function1<T, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #452                // Method scala/collection/TraversableOnce$class.maxBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> T minBy(scala.Function1<T, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #455                // Method scala/collection/TraversableOnce$class.minBy:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #460                // Method scala/collection/TraversableOnce$class.copyToBuffer:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #466                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #470                // Method scala/collection/TraversableOnce$class.copyToArray:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #475                // Method scala/collection/TraversableOnce$class.toArray:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<T> toList();
    Code:
       0: aload_0
       1: invokestatic  #480                // Method scala/collection/TraversableOnce$class.toList:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.Iterable<T> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #485                // Method scala/collection/TraversableOnce$class.toIterable:(Lscala/collection/TraversableOnce;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Seq<T> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #490                // Method scala/collection/TraversableOnce$class.toSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.immutable.IndexedSeq<T> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #495                // Method scala/collection/TraversableOnce$class.toIndexedSeq:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #500                // Method scala/collection/TraversableOnce$class.toBuffer:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #505                // Method scala/collection/TraversableOnce$class.toSet:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<T> toVector();
    Code:
       0: aload_0
       1: invokestatic  #510                // Method scala/collection/TraversableOnce$class.toVector:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, T, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #515                // Method scala/collection/TraversableOnce$class.to:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<T, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #522                // Method scala/collection/TraversableOnce$class.toMap:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #529                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #536                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #539                // Method scala/collection/TraversableOnce$class.mkString:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #544                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #550                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #554                // Method scala/collection/TraversableOnce$class.addString:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public org.apache.spark.TaskContext context();
    Code:
       0: aload_0
       1: getfield      #556                // Field context:Lorg/apache/spark/TaskContext;
       4: areturn

  public boolean finished();
    Code:
       0: aload_0
       1: getfield      #558                // Field finished:Z
       4: ireturn

  public void finished_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #558                // Field finished:Z
       5: return

  private boolean gotNext();
    Code:
       0: aload_0
       1: getfield      #562                // Field gotNext:Z
       4: ireturn

  private void gotNext_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #562                // Field gotNext:Z
       5: return

  private T nextValue();
    Code:
       0: aload_0
       1: getfield      #566                // Field nextValue:Ljava/lang/Object;
       4: areturn

  private void nextValue_$eq(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #566                // Field nextValue:Ljava/lang/Object;
       5: return

  private boolean closed();
    Code:
       0: aload_0
       1: getfield      #569                // Field closed:Z
       4: ireturn

  private void closed_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #569                // Field closed:Z
       5: return

  private org.apache.commons.logging.Log log();
    Code:
       0: aload_0
       1: getfield      #33                 // Field bitmap$trans$0:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #38                 // Field log:Lorg/apache/commons/logging/Log;
      11: goto          18
      14: aload_0
      15: invokespecial #572                // Method log$lzycompute:()Lorg/apache/commons/logging/Log;
      18: areturn

  private boolean initialized();
    Code:
       0: aload_0
       1: getfield      #576                // Field initialized:Z
       4: ireturn

  private void initialized_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #576                // Field initialized:Z
       5: return

  public org.elasticsearch.hadoop.rest.ScrollQuery reader();
    Code:
       0: aload_0
       1: getfield      #52                 // Field bitmap$0:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #139                // Field reader:Lorg/elasticsearch/hadoop/rest/ScrollQuery;
      11: goto          18
      14: aload_0
      15: invokespecial #578                // Method reader$lzycompute:()Lorg/elasticsearch/hadoop/rest/ScrollQuery;
      18: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method context:()Lorg/apache/spark/TaskContext;
       4: invokestatic  #587                // Method org/elasticsearch/spark/rdd/CompatUtils.isInterrupted:(Lorg/apache/spark/TaskContext;)Z
       7: ifeq          18
      10: new           #589                // class org/apache/spark/TaskKilledException
      13: dup
      14: invokespecial #593                // Method org/apache/spark/TaskKilledException."<init>":()V
      17: athrow
      18: aload_0
      19: invokevirtual #595                // Method finished:()Z
      22: ifne          39
      25: aload_0
      26: invokevirtual #597                // Method reader:()Lorg/elasticsearch/hadoop/rest/ScrollQuery;
      29: invokevirtual #599                // Method org/elasticsearch/hadoop/rest/ScrollQuery.hasNext:()Z
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  public T next();
    Code:
       0: aload_0
       1: invokevirtual #601                // Method hasNext:()Z
       4: ifeq          21
       7: aload_0
       8: invokevirtual #597                // Method reader:()Lorg/elasticsearch/hadoop/rest/ScrollQuery;
      11: invokevirtual #604                // Method org/elasticsearch/hadoop/rest/ScrollQuery.next:()[Ljava/lang/Object;
      14: astore_1
      15: aload_0
      16: aload_1
      17: invokevirtual #608                // Method createValue:([Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn
      21: new           #610                // class java/util/NoSuchElementException
      24: dup
      25: ldc_w         #612                // String End of stream
      28: invokespecial #615                // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
      31: athrow

  public void closeIfNeeded();
    Code:
       0: aload_0
       1: invokespecial #620                // Method closed:()Z
       4: ifne          16
       7: aload_0
       8: invokevirtual #623                // Method close:()V
      11: aload_0
      12: iconst_1
      13: invokespecial #625                // Method closed_$eq:(Z)V
      16: return

  public void close();
    Code:
       0: aload_0
       1: invokespecial #627                // Method initialized:()Z
       4: ifeq          14
       7: aload_0
       8: invokevirtual #597                // Method reader:()Lorg/elasticsearch/hadoop/rest/ScrollQuery;
      11: invokevirtual #628                // Method org/elasticsearch/hadoop/rest/ScrollQuery.close:()V
      14: return

  public abstract org.apache.commons.logging.Log getLogger();

  public abstract void initReader(org.elasticsearch.hadoop.cfg.Settings, org.apache.commons.logging.Log);

  public abstract T createValue(java.lang.Object[]);

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #631                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #634                // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #637                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #640                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #643                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #646                // Method seq:()Lscala/collection/Iterator;
       4: areturn

  public org.elasticsearch.spark.rdd.AbstractEsRDDIterator(org.apache.spark.TaskContext, org.elasticsearch.hadoop.rest.PartitionDefinition);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #556                // Field context:Lorg/apache/spark/TaskContext;
       5: aload_0
       6: aload_2
       7: putfield      #58                 // Field partition:Lorg/elasticsearch/hadoop/rest/PartitionDefinition;
      10: aload_0
      11: invokespecial #648                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #652                // Method scala/collection/TraversableOnce$class.$init$:(Lscala/collection/TraversableOnce;)V
      18: aload_0
      19: invokestatic  #655                // Method scala/collection/Iterator$class.$init$:(Lscala/collection/Iterator;)V
      22: aload_0
      23: iconst_0
      24: putfield      #558                // Field finished:Z
      27: aload_0
      28: iconst_0
      29: putfield      #562                // Field gotNext:Z
      32: aload_0
      33: iconst_0
      34: putfield      #569                // Field closed:Z
      37: aload_0
      38: iconst_0
      39: putfield      #576                // Field initialized:Z
      42: aload_1
      43: new           #657                // class org/elasticsearch/spark/rdd/AbstractEsRDDIterator$$anonfun$1
      46: dup
      47: aload_0
      48: invokespecial #660                // Method org/elasticsearch/spark/rdd/AbstractEsRDDIterator$$anonfun$1."<init>":(Lorg/elasticsearch/spark/rdd/AbstractEsRDDIterator;)V
      51: invokestatic  #664                // Method org/elasticsearch/spark/rdd/CompatUtils.addOnCompletition:(Lorg/apache/spark/TaskContext;Lscala/Function0;)V
      54: return
}
