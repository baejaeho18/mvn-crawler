Compiled from "RowValueReader.scala"
public abstract class org.elasticsearch.spark.sql.RowValueReader$class {
  public static void setSettings(org.elasticsearch.spark.sql.RowValueReader, org.elasticsearch.hadoop.cfg.Settings);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #13,  2           // InterfaceMethod org/elasticsearch/spark/sql/RowValueReader.org$elasticsearch$spark$sql$RowValueReader$$super$setSettings:(Lorg/elasticsearch/hadoop/cfg/Settings;)V
       7: aload_0
       8: aload_1
       9: invokevirtual #19                 // Method org/elasticsearch/hadoop/cfg/Settings.getReadMetadata:()Z
      12: invokeinterface #23,  2           // InterfaceMethod org/elasticsearch/spark/sql/RowValueReader.readMetadata_$eq:(Z)V
      17: getstatic     #29                 // Field org/elasticsearch/spark/sql/SchemaUtils$.MODULE$:Lorg/elasticsearch/spark/sql/SchemaUtils$;
      20: aload_1
      21: invokevirtual #33                 // Method org/elasticsearch/spark/sql/SchemaUtils$.getRowInfo:(Lorg/elasticsearch/hadoop/cfg/Settings;)Lscala/Tuple2;
      24: astore_2
      25: aload_0
      26: aload_2
      27: invokevirtual #39                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      30: checkcast     #41                 // class scala/collection/Map
      33: invokeinterface #45,  2           // InterfaceMethod org/elasticsearch/spark/sql/RowValueReader.rowColumnsMap_$eq:(Lscala/collection/Map;)V
      38: aload_0
      39: aload_2
      40: invokevirtual #48                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      43: checkcast     #50                 // class java/util/Set
      46: invokeinterface #54,  2           // InterfaceMethod org/elasticsearch/spark/sql/RowValueReader.arrayFields_$eq:(Ljava/util/Set;)V
      51: return

  public static scala.collection.Seq rowColumns(org.elasticsearch.spark.sql.RowValueReader, java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #66,  1           // InterfaceMethod org/elasticsearch/spark/sql/RowValueReader.rowColumnsMap:()Lscala/collection/Map;
       6: aload_1
       7: invokeinterface #70,  2           // InterfaceMethod scala/collection/Map.get:(Ljava/lang/Object;)Lscala/Option;
      12: astore_2
      13: aload_2
      14: instanceof    #72                 // class scala/Some
      17: ifeq          41
      20: aload_2
      21: checkcast     #72                 // class scala/Some
      24: astore_3
      25: aload_3
      26: invokevirtual #75                 // Method scala/Some.x:()Ljava/lang/Object;
      29: checkcast     #77                 // class scala/collection/Seq
      32: astore        4
      34: aload         4
      36: astore        5
      38: aload         5
      40: areturn
      41: getstatic     #82                 // Field scala/None$.MODULE$:Lscala/None$;
      44: aload_2
      45: invokevirtual #86                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      48: ifeq          106
      51: new           #88                 // class org/elasticsearch/hadoop/EsHadoopIllegalStateException
      54: dup
      55: new           #90                 // class scala/StringContext
      58: dup
      59: getstatic     #95                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      62: iconst_2
      63: anewarray     #97                 // class java/lang/String
      66: dup
      67: iconst_0
      68: ldc           #99                 // String Field \'
      70: aastore
      71: dup
      72: iconst_1
      73: ldc           #101                // String \' not found; typically this occurs with arrays which are not mapped as single value
      75: aastore
      76: checkcast     #103                // class "[Ljava/lang/Object;"
      79: invokevirtual #107                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      82: invokespecial #111                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      85: getstatic     #95                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      88: iconst_1
      89: anewarray     #4                  // class java/lang/Object
      92: dup
      93: iconst_0
      94: aload_1
      95: aastore
      96: invokevirtual #115                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      99: invokevirtual #119                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     102: invokespecial #122                // Method org/elasticsearch/hadoop/EsHadoopIllegalStateException."<init>":(Ljava/lang/String;)V
     105: athrow
     106: new           #124                // class scala/MatchError
     109: dup
     110: aload_2
     111: invokespecial #127                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     114: athrow

  public static void addToBuffer(org.elasticsearch.spark.sql.RowValueReader, org.elasticsearch.spark.sql.ScalaEsRow, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #141                // Method org/elasticsearch/spark/sql/ScalaEsRow.rowOrder:()Lscala/collection/Seq;
       4: aload_2
       5: invokevirtual #145                // Method java/lang/Object.toString:()Ljava/lang/String;
       8: invokeinterface #149,  2          // InterfaceMethod scala/collection/Seq.indexOf:(Ljava/lang/Object;)I
      13: istore        4
      15: iload         4
      17: iconst_0
      18: if_icmplt     33
      21: iload         4
      23: aload_1
      24: invokevirtual #153                // Method org/elasticsearch/spark/sql/ScalaEsRow.values:()Lscala/collection/mutable/ArrayBuffer;
      27: invokevirtual #159                // Method scala/collection/mutable/ArrayBuffer.size:()I
      30: if_icmplt     108
      33: iload         4
      35: iconst_0
      36: if_icmpge     48
      39: aload_0
      40: invokeinterface #162,  1          // InterfaceMethod org/elasticsearch/spark/sql/RowValueReader.currentFieldIsGeo:()Z
      45: ifne          118
      48: new           #88                 // class org/elasticsearch/hadoop/EsHadoopIllegalStateException
      51: dup
      52: new           #90                 // class scala/StringContext
      55: dup
      56: getstatic     #95                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      59: iconst_2
      60: anewarray     #97                 // class java/lang/String
      63: dup
      64: iconst_0
      65: ldc           #164                // String Position for \'
      67: aastore
      68: dup
      69: iconst_1
      70: ldc           #166                // String \' not found in row; typically this is caused by a mapping inconsistency
      72: aastore
      73: checkcast     #103                // class "[Ljava/lang/Object;"
      76: invokevirtual #107                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      79: invokespecial #111                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      82: getstatic     #95                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      85: iconst_1
      86: anewarray     #4                  // class java/lang/Object
      89: dup
      90: iconst_0
      91: aload_0
      92: invokeinterface #169,  1          // InterfaceMethod org/elasticsearch/spark/sql/RowValueReader.sparkRowField:()Ljava/lang/String;
      97: aastore
      98: invokevirtual #115                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     101: invokevirtual #119                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     104: invokespecial #122                // Method org/elasticsearch/hadoop/EsHadoopIllegalStateException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: aload_1
     109: invokevirtual #153                // Method org/elasticsearch/spark/sql/ScalaEsRow.values:()Lscala/collection/mutable/ArrayBuffer;
     112: iload         4
     114: aload_3
     115: invokevirtual #173                // Method scala/collection/mutable/ArrayBuffer.update:(ILjava/lang/Object;)V
     118: return

  public static void $init$(org.elasticsearch.spark.sql.RowValueReader);
    Code:
       0: aload_0
       1: iconst_0
       2: invokeinterface #23,  2           // InterfaceMethod org/elasticsearch/spark/sql/RowValueReader.readMetadata_$eq:(Z)V
       7: aload_0
       8: ldc           #184                // String
      10: invokeinterface #187,  2          // InterfaceMethod org/elasticsearch/spark/sql/RowValueReader.metadataField_$eq:(Ljava/lang/String;)V
      15: aload_0
      16: getstatic     #95                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      19: invokevirtual #191                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      22: invokevirtual #197                // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
      25: invokeinterface #45,  2           // InterfaceMethod org/elasticsearch/spark/sql/RowValueReader.rowColumnsMap_$eq:(Lscala/collection/Map;)V
      30: aload_0
      31: invokestatic  #203                // Method java/util/Collections.emptySet:()Ljava/util/Set;
      34: invokeinterface #54,  2           // InterfaceMethod org/elasticsearch/spark/sql/RowValueReader.arrayFields_$eq:(Ljava/util/Set;)V
      39: aload_0
      40: ldc           #205                // String _
      42: invokeinterface #208,  2          // InterfaceMethod org/elasticsearch/spark/sql/RowValueReader.sparkRowField_$eq:(Ljava/lang/String;)V
      47: aload_0
      48: iconst_0
      49: invokeinterface #211,  2          // InterfaceMethod org/elasticsearch/spark/sql/RowValueReader.currentFieldIsGeo_$eq:(Z)V
      54: return
}
