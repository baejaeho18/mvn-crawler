Compiled from "ScalaEsRowValueReader.scala"
public class org.elasticsearch.spark.sql.ScalaRowValueReader extends org.elasticsearch.spark.serialization.ScalaValueReader implements org.elasticsearch.spark.sql.RowValueReader,org.elasticsearch.hadoop.serialization.builder.ValueParsingCallback {
  private boolean metadataMap;

  private boolean rootLevel;

  private boolean inArray;

  private scala.collection.Seq<java.lang.String> currentArrayRowOrder;

  private boolean readMetadata;

  private java.lang.String metadataField;

  private scala.collection.Map<java.lang.String, scala.collection.Seq<java.lang.String>> rowColumnsMap;

  private java.util.Set<java.lang.String> arrayFields;

  private java.lang.String sparkRowField;

  private boolean currentFieldIsGeo;

  public boolean readMetadata();
    Code:
       0: aload_0
       1: getfield      #33                 // Field readMetadata:Z
       4: ireturn

  public void readMetadata_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #33                 // Field readMetadata:Z
       5: return

  public java.lang.String metadataField();
    Code:
       0: aload_0
       1: getfield      #42                 // Field metadataField:Ljava/lang/String;
       4: areturn

  public void metadataField_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field metadataField:Ljava/lang/String;
       5: return

  public scala.collection.Map<java.lang.String, scala.collection.Seq<java.lang.String>> rowColumnsMap();
    Code:
       0: aload_0
       1: getfield      #47                 // Field rowColumnsMap:Lscala/collection/Map;
       4: areturn

  public void rowColumnsMap_$eq(scala.collection.Map<java.lang.String, scala.collection.Seq<java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field rowColumnsMap:Lscala/collection/Map;
       5: return

  public java.util.Set<java.lang.String> arrayFields();
    Code:
       0: aload_0
       1: getfield      #52                 // Field arrayFields:Ljava/util/Set;
       4: areturn

  public void arrayFields_$eq(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field arrayFields:Ljava/util/Set;
       5: return

  public java.lang.String sparkRowField();
    Code:
       0: aload_0
       1: getfield      #56                 // Field sparkRowField:Ljava/lang/String;
       4: areturn

  public void sparkRowField_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #56                 // Field sparkRowField:Ljava/lang/String;
       5: return

  public boolean currentFieldIsGeo();
    Code:
       0: aload_0
       1: getfield      #59                 // Field currentFieldIsGeo:Z
       4: ireturn

  public void currentFieldIsGeo_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #59                 // Field currentFieldIsGeo:Z
       5: return

  public void org$elasticsearch$spark$sql$RowValueReader$$super$setSettings(org.elasticsearch.hadoop.cfg.Settings);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #65                 // Method org/elasticsearch/spark/serialization/ScalaValueReader.setSettings:(Lorg/elasticsearch/hadoop/cfg/Settings;)V
       5: return

  public void setSettings(org.elasticsearch.hadoop.cfg.Settings);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // Method org/elasticsearch/spark/sql/RowValueReader$class.setSettings:(Lorg/elasticsearch/spark/sql/RowValueReader;Lorg/elasticsearch/hadoop/cfg/Settings;)V
       5: return

  public scala.collection.Seq<java.lang.String> rowColumns(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #77                 // Method org/elasticsearch/spark/sql/RowValueReader$class.rowColumns:(Lorg/elasticsearch/spark/sql/RowValueReader;Ljava/lang/String;)Lscala/collection/Seq;
       5: areturn

  public void addToBuffer(org.elasticsearch.spark.sql.ScalaEsRow, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #83                 // Method org/elasticsearch/spark/sql/RowValueReader$class.addToBuffer:(Lorg/elasticsearch/spark/sql/RowValueReader;Lorg/elasticsearch/spark/sql/ScalaEsRow;Ljava/lang/Object;Ljava/lang/Object;)V
       7: return

  public boolean metadataMap();
    Code:
       0: aload_0
       1: getfield      #90                 // Field metadataMap:Z
       4: ireturn

  public void metadataMap_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #90                 // Field metadataMap:Z
       5: return

  public boolean rootLevel();
    Code:
       0: aload_0
       1: getfield      #93                 // Field rootLevel:Z
       4: ireturn

  public void rootLevel_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #93                 // Field rootLevel:Z
       5: return

  public boolean inArray();
    Code:
       0: aload_0
       1: getfield      #96                 // Field inArray:Z
       4: ireturn

  public void inArray_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #96                 // Field inArray:Z
       5: return

  public scala.collection.Seq<java.lang.String> currentArrayRowOrder();
    Code:
       0: aload_0
       1: getfield      #100                // Field currentArrayRowOrder:Lscala/collection/Seq;
       4: areturn

  public void currentArrayRowOrder_$eq(scala.collection.Seq<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #100                // Field currentArrayRowOrder:Lscala/collection/Seq;
       5: return

  public java.lang.Object readValue(org.elasticsearch.hadoop.serialization.Parser, java.lang.String, org.elasticsearch.hadoop.serialization.FieldType);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #108                // Method getCurrentField:()Lorg/elasticsearch/hadoop/serialization/builder/AbstractValueReader$FieldContext;
       5: ifnonnull     12
       8: aconst_null
       9: goto          19
      12: aload_0
      13: invokevirtual #108                // Method getCurrentField:()Lorg/elasticsearch/hadoop/serialization/builder/AbstractValueReader$FieldContext;
      16: invokevirtual #113                // Method org/elasticsearch/hadoop/serialization/builder/AbstractValueReader$FieldContext.getFieldName:()Ljava/lang/String;
      19: invokevirtual #115                // Method sparkRowField_$eq:(Ljava/lang/String;)V
      22: aload_0
      23: invokevirtual #117                // Method sparkRowField:()Ljava/lang/String;
      26: ifnonnull     35
      29: aload_0
      30: ldc           #119                // String _
      32: invokevirtual #115                // Method sparkRowField_$eq:(Ljava/lang/String;)V
      35: aload_0
      36: aload_1
      37: aload_2
      38: aload_3
      39: invokespecial #121                // Method org/elasticsearch/spark/serialization/ScalaValueReader.readValue:(Lorg/elasticsearch/hadoop/serialization/Parser;Ljava/lang/String;Lorg/elasticsearch/hadoop/serialization/FieldType;)Ljava/lang/Object;
      42: areturn

  public java.lang.Object createMap();
    Code:
       0: aload_0
       1: invokevirtual #135                // Method readMetadata:()Z
       4: ifeq          30
       7: aload_0
       8: invokevirtual #137                // Method metadataMap:()Z
      11: ifeq          30
      14: aload_0
      15: iconst_0
      16: invokevirtual #139                // Method metadataMap_$eq:(Z)V
      19: new           #141                // class org/elasticsearch/spark/sql/ScalaRowValueReader$$anon$1
      22: dup
      23: aload_0
      24: invokespecial #145                // Method org/elasticsearch/spark/sql/ScalaRowValueReader$$anon$1."<init>":(Lorg/elasticsearch/spark/sql/ScalaRowValueReader;)V
      27: goto          88
      30: aload_0
      31: invokevirtual #147                // Method inArray:()Z
      34: ifeq          71
      37: aload_0
      38: invokevirtual #149                // Method rowColumnsMap:()Lscala/collection/Map;
      41: aload_0
      42: invokevirtual #117                // Method sparkRowField:()Ljava/lang/String;
      45: invokeinterface #155,  2          // InterfaceMethod scala/collection/Map.contains:(Ljava/lang/Object;)Z
      50: ifeq          64
      53: aload_0
      54: aload_0
      55: invokevirtual #117                // Method sparkRowField:()Ljava/lang/String;
      58: invokevirtual #157                // Method rowColumns:(Ljava/lang/String;)Lscala/collection/Seq;
      61: goto          79
      64: aload_0
      65: invokevirtual #159                // Method currentArrayRowOrder:()Lscala/collection/Seq;
      68: goto          79
      71: aload_0
      72: aload_0
      73: invokevirtual #117                // Method sparkRowField:()Ljava/lang/String;
      76: invokevirtual #157                // Method rowColumns:(Ljava/lang/String;)Lscala/collection/Seq;
      79: astore_1
      80: new           #161                // class org/elasticsearch/spark/sql/ScalaEsRow
      83: dup
      84: aload_1
      85: invokespecial #163                // Method org/elasticsearch/spark/sql/ScalaEsRow."<init>":(Lscala/collection/Seq;)V
      88: areturn

  public java.lang.Object createArray(org.elasticsearch.hadoop.serialization.FieldType);
    Code:
       0: new           #172                // class scala/Tuple2
       3: dup
       4: aload_0
       5: invokevirtual #147                // Method inArray:()Z
       8: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      11: aload_0
      12: invokevirtual #159                // Method currentArrayRowOrder:()Lscala/collection/Seq;
      15: invokespecial #181                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      18: astore_2
      19: aload_0
      20: invokevirtual #183                // Method arrayFields:()Ljava/util/Set;
      23: aload_0
      24: invokevirtual #117                // Method sparkRowField:()Ljava/lang/String;
      27: invokeinterface #186,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      32: ifeq          71
      35: aload_0
      36: iconst_1
      37: invokevirtual #188                // Method inArray_$eq:(Z)V
      40: aload_0
      41: invokevirtual #149                // Method rowColumnsMap:()Lscala/collection/Map;
      44: aload_0
      45: invokevirtual #117                // Method sparkRowField:()Ljava/lang/String;
      48: invokeinterface #155,  2          // InterfaceMethod scala/collection/Map.contains:(Ljava/lang/Object;)Z
      53: ifeq          159
      56: aload_0
      57: aload_0
      58: aload_0
      59: invokevirtual #117                // Method sparkRowField:()Ljava/lang/String;
      62: invokevirtual #157                // Method rowColumns:(Ljava/lang/String;)Lscala/collection/Seq;
      65: invokevirtual #190                // Method currentArrayRowOrder_$eq:(Lscala/collection/Seq;)V
      68: goto          159
      71: aload_0
      72: invokevirtual #194                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      75: invokestatic  #200                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      78: new           #202                // class scala/collection/immutable/StringOps
      81: dup
      82: getstatic     #208                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      85: new           #210                // class scala/StringContext
      88: dup
      89: getstatic     #208                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      92: iconst_3
      93: anewarray     #129                // class java/lang/String
      96: dup
      97: iconst_0
      98: ldc           #212                // String Field \'
     100: aastore
     101: dup
     102: iconst_1
     103: ldc           #214                // String \' is backed by an array but the associated Spark Schema does not reflect this;\n              (use
     105: aastore
     106: dup
     107: iconst_2
     108: ldc           #216                // String /exclude)
     110: aastore
     111: checkcast     #218                // class "[Ljava/lang/Object;"
     114: invokevirtual #222                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     117: invokespecial #223                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
     120: getstatic     #208                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     123: iconst_2
     124: anewarray     #168                // class java/lang/Object
     127: dup
     128: iconst_0
     129: aload_0
     130: invokevirtual #117                // Method sparkRowField:()Ljava/lang/String;
     133: aastore
     134: dup
     135: iconst_1
     136: ldc           #225                // String es.read.field.as.array.include
     138: aastore
     139: invokevirtual #229                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     142: invokevirtual #233                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     145: invokevirtual #237                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
     148: invokespecial #239                // Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
     151: invokevirtual #242                // Method scala/collection/immutable/StringOps.stripMargin:()Ljava/lang/String;
     154: invokeinterface #248,  2          // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     159: aload_2
     160: areturn

  public java.lang.Object addToArray(java.lang.Object, java.util.List<java.lang.Object>);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: instanceof    #172                // class scala/Tuple2
       6: ifeq          79
       9: aload_3
      10: checkcast     #172                // class scala/Tuple2
      13: astore        4
      15: aload         4
      17: invokevirtual #256                // Method scala/Tuple2._1:()Ljava/lang/Object;
      20: astore        5
      22: aload         4
      24: invokevirtual #259                // Method scala/Tuple2._2:()Ljava/lang/Object;
      27: astore        6
      29: aload         5
      31: instanceof    #261                // class java/lang/Boolean
      34: ifeq          79
      37: aload         5
      39: invokestatic  #264                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      42: istore        7
      44: aload         6
      46: instanceof    #166                // class scala/collection/Seq
      49: ifeq          79
      52: aload         6
      54: checkcast     #166                // class scala/collection/Seq
      57: astore        8
      59: aload_0
      60: iload         7
      62: invokevirtual #188                // Method inArray_$eq:(Z)V
      65: aload_0
      66: aload         8
      68: invokevirtual #190                // Method currentArrayRowOrder_$eq:(Lscala/collection/Seq;)V
      71: getstatic     #270                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      74: astore        9
      76: goto          94
      79: aload_0
      80: iconst_0
      81: invokevirtual #188                // Method inArray_$eq:(Z)V
      84: aload_0
      85: aconst_null
      86: invokevirtual #190                // Method currentArrayRowOrder_$eq:(Lscala/collection/Seq;)V
      89: getstatic     #270                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      92: astore        9
      94: aload_0
      95: aload_1
      96: aload_2
      97: invokespecial #272                // Method org/elasticsearch/spark/serialization/ScalaValueReader.addToArray:(Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;
     100: areturn

  public void addToMap(java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: astore        4
       3: aload         4
       5: instanceof    #283                // class scala/collection/mutable/Map
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: aload_2
      14: aload_3
      15: invokespecial #285                // Method org/elasticsearch/spark/serialization/ScalaValueReader.addToMap:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      18: getstatic     #270                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      21: astore        5
      23: goto          54
      26: aload         4
      28: instanceof    #161                // class org/elasticsearch/spark/sql/ScalaEsRow
      31: ifeq          55
      34: aload         4
      36: checkcast     #161                // class org/elasticsearch/spark/sql/ScalaEsRow
      39: astore        6
      41: aload_0
      42: aload         6
      44: aload_2
      45: aload_3
      46: invokevirtual #287                // Method addToBuffer:(Lorg/elasticsearch/spark/sql/ScalaEsRow;Ljava/lang/Object;Ljava/lang/Object;)V
      49: getstatic     #270                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      52: astore        5
      54: return
      55: new           #289                // class scala/MatchError
      58: dup
      59: aload         4
      61: invokespecial #291                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      64: athrow

  public java.sql.Timestamp createDate(long);
    Code:
       0: new           #296                // class java/sql/Timestamp
       3: dup
       4: lload_1
       5: invokespecial #299                // Method java/sql/Timestamp."<init>":(J)V
       8: areturn

  public void beginDoc();
    Code:
       0: return

  public void beginLeadMetadata();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #139                // Method metadataMap_$eq:(Z)V
       5: return

  public void endLeadMetadata();
    Code:
       0: return

  public void beginSource();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #307                // Method rootLevel_$eq:(Z)V
       5: aload_0
       6: ldc           #119                // String _
       8: invokevirtual #115                // Method sparkRowField_$eq:(Ljava/lang/String;)V
      11: return

  public void endSource();
    Code:
       0: return

  public void excludeSource();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #307                // Method rootLevel_$eq:(Z)V
       5: aload_0
       6: ldc           #119                // String _
       8: invokevirtual #115                // Method sparkRowField_$eq:(Ljava/lang/String;)V
      11: return

  public void beginTrailMetadata();
    Code:
       0: return

  public void endTrailMetadata();
    Code:
       0: return

  public void endDoc();
    Code:
       0: return

  public void beginGeoField();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #315                // Method currentFieldIsGeo_$eq:(Z)V
       5: return

  public void endGeoField();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #315                // Method currentFieldIsGeo_$eq:(Z)V
       5: return

  public java.lang.Object createDate(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #319                // Method createDate:(J)Ljava/sql/Timestamp;
       5: areturn

  public org.elasticsearch.spark.sql.ScalaRowValueReader();
    Code:
       0: aload_0
       1: invokespecial #321                // Method org/elasticsearch/spark/serialization/ScalaValueReader."<init>":()V
       4: aload_0
       5: invokestatic  #325                // Method org/elasticsearch/spark/sql/RowValueReader$class.$init$:(Lorg/elasticsearch/spark/sql/RowValueReader;)V
       8: aload_0
       9: iconst_1
      10: putfield      #90                 // Field metadataMap:Z
      13: aload_0
      14: iconst_1
      15: putfield      #93                 // Field rootLevel:Z
      18: aload_0
      19: iconst_0
      20: putfield      #96                 // Field inArray:Z
      23: aload_0
      24: getstatic     #330                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      27: invokevirtual #334                // Method scala/collection/Seq$.empty:()Lscala/collection/GenTraversable;
      30: checkcast     #166                // class scala/collection/Seq
      33: putfield      #100                // Field currentArrayRowOrder:Lscala/collection/Seq;
      36: return
}
