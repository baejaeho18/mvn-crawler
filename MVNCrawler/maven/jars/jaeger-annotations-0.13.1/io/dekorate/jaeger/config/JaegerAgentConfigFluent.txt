Compiled from "JaegerAgentConfigFluent.java"
public interface io.dekorate.jaeger.config.JaegerAgentConfigFluent<A extends io.dekorate.jaeger.config.JaegerAgentConfigFluent<A>> extends io.dekorate.kubernetes.config.ConfigurationFluent<A> {
  public abstract boolean isOperatorEnabled();

  public abstract A withOperatorEnabled(boolean);

  public abstract java.lang.Boolean hasOperatorEnabled();

  public abstract java.lang.String getVersion();

  public abstract A withVersion(java.lang.String);

  public abstract java.lang.Boolean hasVersion();

  public abstract A withNewVersion(java.lang.String);

  public abstract A withNewVersion(java.lang.StringBuilder);

  public abstract A withNewVersion(java.lang.StringBuffer);

  public abstract io.dekorate.jaeger.config.Collector getCollector();

  public abstract io.dekorate.jaeger.config.Collector buildCollector();

  public abstract A withCollector(io.dekorate.jaeger.config.Collector);

  public abstract java.lang.Boolean hasCollector();

  public abstract A withNewCollector(java.lang.String, java.lang.String, java.lang.String, int);

  public abstract io.dekorate.jaeger.config.JaegerAgentConfigFluent$CollectorNested<A> withNewCollector();

  public abstract io.dekorate.jaeger.config.JaegerAgentConfigFluent$CollectorNested<A> withNewCollectorLike(io.dekorate.jaeger.config.Collector);

  public abstract io.dekorate.jaeger.config.JaegerAgentConfigFluent$CollectorNested<A> editCollector();

  public abstract io.dekorate.jaeger.config.JaegerAgentConfigFluent$CollectorNested<A> editOrNewCollector();

  public abstract io.dekorate.jaeger.config.JaegerAgentConfigFluent$CollectorNested<A> editOrNewCollectorLike(io.dekorate.jaeger.config.Collector);

  public abstract A withPorts(io.dekorate.kubernetes.config.Port...);

  public abstract io.dekorate.kubernetes.config.Port[] getPorts();

  public abstract io.dekorate.kubernetes.config.Port[] buildPorts();

  public abstract io.dekorate.kubernetes.config.Port buildPort(int);

  public abstract io.dekorate.kubernetes.config.Port buildFirstPort();

  public abstract io.dekorate.kubernetes.config.Port buildLastPort();

  public abstract io.dekorate.kubernetes.config.Port buildMatchingPort(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.kubernetes.config.PortBuilder>);

  public abstract java.lang.Boolean hasMatchingPort(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.kubernetes.config.PortBuilder>);

  public abstract A addToPorts(int, io.dekorate.kubernetes.config.Port);

  public abstract A setToPorts(int, io.dekorate.kubernetes.config.Port);

  public abstract A addToPorts(io.dekorate.kubernetes.config.Port...);

  public abstract A addAllToConfigPorts(java.util.Collection<io.dekorate.kubernetes.config.Port>);

  public abstract A removeFromPorts(io.dekorate.kubernetes.config.Port...);

  public abstract A removeAllFromConfigPorts(java.util.Collection<io.dekorate.kubernetes.config.Port>);

  public abstract A removeMatchingFromConfigPorts(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.kubernetes.config.PortBuilder>);

  public abstract java.lang.Boolean hasPorts();

  public abstract io.dekorate.jaeger.config.JaegerAgentConfigFluent$ConfigPortsNested<A> addNewConfigPort();

  public abstract io.dekorate.jaeger.config.JaegerAgentConfigFluent$ConfigPortsNested<A> addNewPortLike(io.dekorate.kubernetes.config.Port);

  public abstract io.dekorate.jaeger.config.JaegerAgentConfigFluent$ConfigPortsNested<A> setNewPortLike(int, io.dekorate.kubernetes.config.Port);

  public abstract io.dekorate.jaeger.config.JaegerAgentConfigFluent$ConfigPortsNested<A> editPort(int);

  public abstract io.dekorate.jaeger.config.JaegerAgentConfigFluent$ConfigPortsNested<A> editFirstPort();

  public abstract io.dekorate.jaeger.config.JaegerAgentConfigFluent$ConfigPortsNested<A> editLastPort();

  public abstract io.dekorate.jaeger.config.JaegerAgentConfigFluent$ConfigPortsNested<A> editMatchingPort(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.kubernetes.config.PortBuilder>);
}
