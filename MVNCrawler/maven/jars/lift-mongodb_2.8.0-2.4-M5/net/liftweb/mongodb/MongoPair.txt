Compiled from "Mongo.scala"
public class net.liftweb.mongodb.MongoPair extends net.liftweb.mongodb.MongoHostBase implements scala.ScalaObject,scala.Product,java.io.Serializable {
  private final com.mongodb.ServerAddress left;

  private final com.mongodb.ServerAddress right;

  private final com.mongodb.MongoOptions options;

  private com.mongodb.Mongo mongo;

  public volatile int bitmap$0;

  public static final com.mongodb.MongoOptions apply$default$3();
    Code:
       0: getstatic     #11                 // Field net/liftweb/mongodb/MongoPair$.MODULE$:Lnet/liftweb/mongodb/MongoPair$;
       3: invokevirtual #13                 // Method net/liftweb/mongodb/MongoPair$.apply$default$3:()Lcom/mongodb/MongoOptions;
       6: areturn

  public static final com.mongodb.MongoOptions init$default$3();
    Code:
       0: getstatic     #11                 // Field net/liftweb/mongodb/MongoPair$.MODULE$:Lnet/liftweb/mongodb/MongoPair$;
       3: invokevirtual #16                 // Method net/liftweb/mongodb/MongoPair$.init$default$3:()Lcom/mongodb/MongoOptions;
       6: areturn

  public static final scala.Function1 tupled();
    Code:
       0: getstatic     #11                 // Field net/liftweb/mongodb/MongoPair$.MODULE$:Lnet/liftweb/mongodb/MongoPair$;
       3: invokevirtual #20                 // Method net/liftweb/mongodb/MongoPair$.tupled:()Lscala/Function1;
       6: areturn

  public static final scala.Function1 curry();
    Code:
       0: getstatic     #11                 // Field net/liftweb/mongodb/MongoPair$.MODULE$:Lnet/liftweb/mongodb/MongoPair$;
       3: invokevirtual #23                 // Method net/liftweb/mongodb/MongoPair$.curry:()Lscala/Function1;
       6: areturn

  public static final scala.Function1 curried();
    Code:
       0: getstatic     #11                 // Field net/liftweb/mongodb/MongoPair$.MODULE$:Lnet/liftweb/mongodb/MongoPair$;
       3: invokevirtual #27                 // Method net/liftweb/mongodb/MongoPair$.curried:()Lscala/Function1;
       6: areturn

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #44                 // Method scala/Product$class.productIterator:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElements();
    Code:
       0: aload_0
       1: invokestatic  #47                 // Method scala/Product$class.productElements:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public com.mongodb.MongoOptions copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method options:()Lcom/mongodb/MongoOptions;
       4: areturn

  public com.mongodb.ServerAddress copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method right:()Lcom/mongodb/ServerAddress;
       4: areturn

  public com.mongodb.ServerAddress copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method left:()Lcom/mongodb/ServerAddress;
       4: areturn

  public com.mongodb.ServerAddress left();
    Code:
       0: aload_0
       1: getfield      #61                 // Field left:Lcom/mongodb/ServerAddress;
       4: areturn

  public com.mongodb.ServerAddress right();
    Code:
       0: aload_0
       1: getfield      #63                 // Field right:Lcom/mongodb/ServerAddress;
       4: areturn

  public com.mongodb.MongoOptions options();
    Code:
       0: aload_0
       1: getfield      #65                 // Field options:Lcom/mongodb/MongoOptions;
       4: areturn

  public com.mongodb.Mongo mongo();
    Code:
       0: aload_0
       1: getfield      #68                 // Field bitmap$0:I
       4: iconst_1
       5: iand
       6: iconst_0
       7: if_icmpne     59
      10: aload_0
      11: dup
      12: pop
      13: monitorenter
      14: aload_0
      15: getfield      #68                 // Field bitmap$0:I
      18: iconst_1
      19: iand
      20: iconst_0
      21: if_icmpne     57
      24: aload_0
      25: new           #70                 // class com/mongodb/Mongo
      28: dup
      29: aload_0
      30: invokevirtual #59                 // Method left:()Lcom/mongodb/ServerAddress;
      33: aload_0
      34: invokevirtual #56                 // Method right:()Lcom/mongodb/ServerAddress;
      37: aload_0
      38: invokevirtual #52                 // Method options:()Lcom/mongodb/MongoOptions;
      41: invokespecial #74                 // Method com/mongodb/Mongo."<init>":(Lcom/mongodb/ServerAddress;Lcom/mongodb/ServerAddress;Lcom/mongodb/MongoOptions;)V
      44: putfield      #76                 // Field mongo:Lcom/mongodb/Mongo;
      47: aload_0
      48: aload_0
      49: getfield      #68                 // Field bitmap$0:I
      52: iconst_1
      53: ior
      54: putfield      #68                 // Field bitmap$0:I
      57: aload_0
      58: monitorexit
      59: aload_0
      60: getfield      #76                 // Field mongo:Lcom/mongodb/Mongo;
      63: areturn
      64: aload_0
      65: monitorexit
      66: athrow
    Exception table:
       from    to  target type
          14    59    64   any

  public net.liftweb.mongodb.MongoPair copy(com.mongodb.ServerAddress, com.mongodb.ServerAddress, com.mongodb.MongoOptions);
    Code:
       0: new           #50                 // class net/liftweb/mongodb/MongoPair
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #79                 // Method "<init>":(Lcom/mongodb/ServerAddress;Lcom/mongodb/ServerAddress;Lcom/mongodb/MongoOptions;)V
      10: areturn

  public int hashCode();
    Code:
       0: getstatic     #89                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #93                 // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokeinterface #99,  1           // InterfaceMethod scala/Product.productIterator:()Lscala/collection/Iterator;
       6: new           #101                // class scala/collection/mutable/StringBuilder
       9: dup
      10: invokespecial #104                // Method scala/collection/mutable/StringBuilder."<init>":()V
      13: aload_0
      14: invokeinterface #107,  1          // InterfaceMethod scala/Product.productPrefix:()Ljava/lang/String;
      19: invokevirtual #111                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      22: ldc           #113                // String (
      24: invokevirtual #111                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      27: invokevirtual #115                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      30: ldc           #117                // String ,
      32: ldc           #119                // String )
      34: invokeinterface #125,  4          // InterfaceMethod scala/collection/TraversableOnce.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      39: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     67
       5: aload_1
       6: instanceof    #50                 // class net/liftweb/mongodb/MongoPair
       9: ifeq          63
      12: aload_1
      13: checkcast     #50                 // class net/liftweb/mongodb/MongoPair
      16: astore_2
      17: aload_2
      18: invokevirtual #59                 // Method left:()Lcom/mongodb/ServerAddress;
      21: astore_3
      22: aload_2
      23: invokevirtual #56                 // Method right:()Lcom/mongodb/ServerAddress;
      26: astore        4
      28: aload_2
      29: invokevirtual #52                 // Method options:()Lcom/mongodb/MongoOptions;
      32: astore        5
      34: aload_0
      35: aload_3
      36: aload         4
      38: aload         5
      40: invokespecial #131                // Method gd3$1:(Lcom/mongodb/ServerAddress;Lcom/mongodb/ServerAddress;Lcom/mongodb/MongoOptions;)Z
      43: ifeq          59
      46: aload_1
      47: checkcast     #50                 // class net/liftweb/mongodb/MongoPair
      50: aload_0
      51: invokeinterface #136,  2          // InterfaceMethod scala/Equals.canEqual:(Ljava/lang/Object;)Z
      56: goto          64
      59: iconst_0
      60: goto          64
      63: iconst_0
      64: ifeq          71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #138                // String MongoPair
       2: areturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 2
                     0: 57
                     1: 50
                     2: 43
               default: 28
          }
      28: new           #143                // class java/lang/IndexOutOfBoundsException
      31: dup
      32: iload_1
      33: invokestatic  #149                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      36: invokevirtual #152                // Method java/lang/Object.toString:()Ljava/lang/String;
      39: invokespecial #155                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: invokevirtual #52                 // Method options:()Lcom/mongodb/MongoOptions;
      47: goto          61
      50: aload_0
      51: invokevirtual #56                 // Method right:()Lcom/mongodb/ServerAddress;
      54: goto          61
      57: aload_0
      58: invokevirtual #59                 // Method left:()Lcom/mongodb/ServerAddress;
      61: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #50                 // class net/liftweb/mongodb/MongoPair
       4: ireturn

  private final boolean gd3$1(com.mongodb.ServerAddress, com.mongodb.ServerAddress, com.mongodb.MongoOptions);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #59                 // Method left:()Lcom/mongodb/ServerAddress;
       5: astore        4
       7: dup
       8: ifnonnull     20
      11: pop
      12: aload         4
      14: ifnull        28
      17: goto          88
      20: aload         4
      22: invokevirtual #157                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      25: ifeq          88
      28: aload_2
      29: aload_0
      30: invokevirtual #56                 // Method right:()Lcom/mongodb/ServerAddress;
      33: astore        5
      35: dup
      36: ifnonnull     48
      39: pop
      40: aload         5
      42: ifnull        56
      45: goto          88
      48: aload         5
      50: invokevirtual #157                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      53: ifeq          88
      56: aload_3
      57: aload_0
      58: invokevirtual #52                 // Method options:()Lcom/mongodb/MongoOptions;
      61: astore        6
      63: dup
      64: ifnonnull     76
      67: pop
      68: aload         6
      70: ifnull        84
      73: goto          88
      76: aload         6
      78: invokevirtual #157                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      81: ifeq          88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: ireturn

  public net.liftweb.mongodb.MongoPair(com.mongodb.ServerAddress, com.mongodb.ServerAddress, com.mongodb.MongoOptions);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field left:Lcom/mongodb/ServerAddress;
       5: aload_0
       6: aload_2
       7: putfield      #63                 // Field right:Lcom/mongodb/ServerAddress;
      10: aload_0
      11: aload_3
      12: putfield      #65                 // Field options:Lcom/mongodb/MongoOptions;
      15: aload_0
      16: invokespecial #160                // Method net/liftweb/mongodb/MongoHostBase."<init>":()V
      19: aload_0
      20: invokestatic  #164                // Method scala/Product$class.$init$:(Lscala/Product;)V
      23: return
}
