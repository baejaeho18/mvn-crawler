Compiled from "JObjectParser.scala"
public final class net.liftweb.mongodb.JObjectParser$ implements scala.ScalaObject {
  public static final net.liftweb.mongodb.JObjectParser$ MODULE$;

  public static {};
    Code:
       0: new           #9                  // class net/liftweb/mongodb/JObjectParser$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public com.mongodb.DBObject parse(net.liftweb.json.JsonAST$JObject, net.liftweb.json.Formats);
    Code:
       0: getstatic     #19                 // Field net/liftweb/mongodb/JObjectParser$Parser$.MODULE$:Lnet/liftweb/mongodb/JObjectParser$Parser$;
       3: astore_3
       4: aload_3
       5: aload_1
       6: invokevirtual #26                 // Method net/liftweb/json/JsonAST$JObject.obj:()Lscala/collection/immutable/List;
       9: aload_2
      10: invokevirtual #30                 // Method net/liftweb/mongodb/JObjectParser$Parser$.net$liftweb$mongodb$JObjectParser$Parser$$parseObject:(Lscala/collection/immutable/List;Lnet/liftweb/json/Formats;)Lcom/mongodb/BasicDBObject;
      13: areturn

  public net.liftweb.json.JsonAST$JValue serialize(java.lang.Object, net.liftweb.json.Formats);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #41                 // Method net$liftweb$mongodb$JObjectParser$$serialize:(Ljava/lang/Object;Lnet/liftweb/json/Formats;)Lnet/liftweb/json/JsonAST$JValue;
       6: areturn

  public final net.liftweb.json.JsonAST$JValue net$liftweb$mongodb$JObjectParser$$serialize(java.lang.Object, net.liftweb.json.Formats);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: getstatic     #48                 // Field net/liftweb/json/package$.MODULE$:Lnet/liftweb/json/package$;
       7: invokevirtual #52                 // Method net/liftweb/json/package$.JNull:()Lnet/liftweb/json/JsonAST$JNull$;
      10: goto          189
      13: aload_0
      14: aload_1
      15: invokespecial #56                 // Method gd1$1:(Ljava/lang/Object;)Z
      18: ifeq          31
      21: getstatic     #61                 // Field net/liftweb/mongodb/Meta$Reflection$.MODULE$:Lnet/liftweb/mongodb/Meta$Reflection$;
      24: aload_1
      25: invokevirtual #65                 // Method net/liftweb/mongodb/Meta$Reflection$.primitive2jvalue:(Ljava/lang/Object;)Lnet/liftweb/json/JsonAST$JValue;
      28: goto          189
      31: aload_0
      32: aload_1
      33: invokespecial #68                 // Method gd2$1:(Ljava/lang/Object;)Z
      36: ifeq          50
      39: getstatic     #61                 // Field net/liftweb/mongodb/Meta$Reflection$.MODULE$:Lnet/liftweb/mongodb/Meta$Reflection$;
      42: aload_1
      43: aload_2
      44: invokevirtual #72                 // Method net/liftweb/mongodb/Meta$Reflection$.datetype2jvalue:(Ljava/lang/Object;Lnet/liftweb/json/Formats;)Lnet/liftweb/json/JsonAST$JObject;
      47: goto          189
      50: aload_0
      51: aload_1
      52: invokespecial #75                 // Method gd3$1:(Ljava/lang/Object;)Z
      55: ifeq          69
      58: getstatic     #61                 // Field net/liftweb/mongodb/Meta$Reflection$.MODULE$:Lnet/liftweb/mongodb/Meta$Reflection$;
      61: aload_1
      62: aload_2
      63: invokevirtual #78                 // Method net/liftweb/mongodb/Meta$Reflection$.mongotype2jvalue:(Ljava/lang/Object;Lnet/liftweb/json/Formats;)Lnet/liftweb/json/JsonAST$JValue;
      66: goto          189
      69: aload_1
      70: instanceof    #80                 // class com/mongodb/BasicDBList
      73: ifeq          123
      76: new           #82                 // class net/liftweb/json/JsonAST$JArray
      79: dup
      80: getstatic     #87                 // Field scala/collection/JavaConversions$.MODULE$:Lscala/collection/JavaConversions$;
      83: aload_1
      84: checkcast     #80                 // class com/mongodb/BasicDBList
      87: invokevirtual #91                 // Method scala/collection/JavaConversions$.asBuffer:(Ljava/util/List;)Lscala/collection/mutable/Buffer;
      90: invokeinterface #96,  1           // InterfaceMethod scala/collection/TraversableOnce.toList:()Lscala/collection/immutable/List;
      95: new           #98                 // class net/liftweb/mongodb/JObjectParser$$anonfun$net$liftweb$mongodb$JObjectParser$$serialize$1
      98: dup
      99: aload_2
     100: invokespecial #101                // Method net/liftweb/mongodb/JObjectParser$$anonfun$net$liftweb$mongodb$JObjectParser$$serialize$1."<init>":(Lnet/liftweb/json/Formats;)V
     103: getstatic     #106                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
     106: invokevirtual #110                // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     109: invokeinterface #116,  3          // InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     114: checkcast     #118                // class scala/collection/immutable/List
     117: invokespecial #121                // Method net/liftweb/json/JsonAST$JArray."<init>":(Lscala/collection/immutable/List;)V
     120: goto          189
     123: aload_1
     124: instanceof    #123                // class com/mongodb/BasicDBObject
     127: ifeq          183
     130: aload_1
     131: checkcast     #123                // class com/mongodb/BasicDBObject
     134: astore_3
     135: new           #22                 // class net/liftweb/json/JsonAST$JObject
     138: dup
     139: getstatic     #87                 // Field scala/collection/JavaConversions$.MODULE$:Lscala/collection/JavaConversions$;
     142: aload_3
     143: invokevirtual #127                // Method com/mongodb/BasicDBObject.keySet:()Ljava/util/Set;
     146: invokevirtual #131                // Method scala/collection/JavaConversions$.asSet:(Ljava/util/Set;)Lscala/collection/mutable/Set;
     149: invokeinterface #96,  1           // InterfaceMethod scala/collection/TraversableOnce.toList:()Lscala/collection/immutable/List;
     154: new           #133                // class net/liftweb/mongodb/JObjectParser$$anonfun$net$liftweb$mongodb$JObjectParser$$serialize$2
     157: dup
     158: aload_2
     159: aload_3
     160: invokespecial #136                // Method net/liftweb/mongodb/JObjectParser$$anonfun$net$liftweb$mongodb$JObjectParser$$serialize$2."<init>":(Lnet/liftweb/json/Formats;Lcom/mongodb/BasicDBObject;)V
     163: getstatic     #106                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
     166: invokevirtual #110                // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     169: invokeinterface #116,  3          // InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     174: checkcast     #118                // class scala/collection/immutable/List
     177: invokespecial #137                // Method net/liftweb/json/JsonAST$JObject."<init>":(Lscala/collection/immutable/List;)V
     180: goto          189
     183: getstatic     #48                 // Field net/liftweb/json/package$.MODULE$:Lnet/liftweb/json/package$;
     186: invokevirtual #141                // Method net/liftweb/json/package$.JNothing:()Lnet/liftweb/json/JsonAST$JNothing$;
     189: areturn

  private final boolean gd1$1(java.lang.Object);
    Code:
       0: getstatic     #61                 // Field net/liftweb/mongodb/Meta$Reflection$.MODULE$:Lnet/liftweb/mongodb/Meta$Reflection$;
       3: aload_1
       4: invokevirtual #148                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: astore_3
       8: astore_2
       9: aload_2
      10: invokevirtual #152                // Method net/liftweb/mongodb/Meta$Reflection$.primitives:()Lscala/collection/immutable/Set;
      13: aload_3
      14: invokeinterface #157,  2          // InterfaceMethod scala/collection/SetLike.contains:(Ljava/lang/Object;)Z
      19: ireturn

  private final boolean gd2$1(java.lang.Object);
    Code:
       0: getstatic     #61                 // Field net/liftweb/mongodb/Meta$Reflection$.MODULE$:Lnet/liftweb/mongodb/Meta$Reflection$;
       3: aload_1
       4: invokevirtual #148                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: astore_3
       8: astore_2
       9: aload_2
      10: invokevirtual #160                // Method net/liftweb/mongodb/Meta$Reflection$.datetypes:()Lscala/collection/immutable/Set;
      13: aload_3
      14: invokeinterface #157,  2          // InterfaceMethod scala/collection/SetLike.contains:(Ljava/lang/Object;)Z
      19: ireturn

  private final boolean gd3$1(java.lang.Object);
    Code:
       0: getstatic     #61                 // Field net/liftweb/mongodb/Meta$Reflection$.MODULE$:Lnet/liftweb/mongodb/Meta$Reflection$;
       3: aload_1
       4: invokevirtual #148                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: astore_3
       8: astore_2
       9: aload_2
      10: invokevirtual #163                // Method net/liftweb/mongodb/Meta$Reflection$.mongotypes:()Lscala/collection/immutable/Set;
      13: aload_3
      14: invokeinterface #157,  2          // InterfaceMethod scala/collection/SetLike.contains:(Ljava/lang/Object;)Z
      19: ireturn

  private net.liftweb.mongodb.JObjectParser$();
    Code:
       0: aload_0
       1: invokespecial #164                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #166                // Field MODULE$:Lnet/liftweb/mongodb/JObjectParser$;
       8: return
}
