Compiled from "Serializers.scala"
public final class net.liftweb.mongodb.UUIDSerializer$$anonfun$deserialize$4 implements scala.PartialFunction,java.io.Serializable {
  public static final long serialVersionUID;

  public final net.liftweb.mongodb.UUIDSerializer $outer;

  public static {};
    Code:
       0: lconst_0
       1: putstatic     #11                 // Field serialVersionUID:J
       4: return

  public scala.PartialFunction orElse(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #21                 // Method scala/PartialFunction$class.orElse:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
       5: areturn

  public scala.PartialFunction andThen(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #31                 // Method scala/PartialFunction$class.andThen:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public scala.Function1 lift();
    Code:
       0: aload_0
       1: invokestatic  #38                 // Method scala/PartialFunction$class.lift:(Lscala/PartialFunction;)Lscala/Function1;
       4: areturn

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #45                 // Method scala/Function1$class.apply$mcVI$sp:(Lscala/Function1;I)V
       5: return

  public boolean apply$mcZI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #52                 // Method scala/Function1$class.apply$mcZI$sp:(Lscala/Function1;I)Z
       5: ireturn

  public int apply$mcII$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #57                 // Method scala/Function1$class.apply$mcII$sp:(Lscala/Function1;I)I
       5: ireturn

  public float apply$mcFI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #62                 // Method scala/Function1$class.apply$mcFI$sp:(Lscala/Function1;I)F
       5: freturn

  public long apply$mcLI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #67                 // Method scala/Function1$class.apply$mcLI$sp:(Lscala/Function1;I)J
       5: lreturn

  public double apply$mcDI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #72                 // Method scala/Function1$class.apply$mcDI$sp:(Lscala/Function1;I)D
       5: dreturn

  public void apply$mcVL$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #77                 // Method scala/Function1$class.apply$mcVL$sp:(Lscala/Function1;J)V
       5: return

  public boolean apply$mcZL$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #82                 // Method scala/Function1$class.apply$mcZL$sp:(Lscala/Function1;J)Z
       5: ireturn

  public int apply$mcIL$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #87                 // Method scala/Function1$class.apply$mcIL$sp:(Lscala/Function1;J)I
       5: ireturn

  public float apply$mcFL$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #92                 // Method scala/Function1$class.apply$mcFL$sp:(Lscala/Function1;J)F
       5: freturn

  public long apply$mcLL$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #97                 // Method scala/Function1$class.apply$mcLL$sp:(Lscala/Function1;J)J
       5: lreturn

  public double apply$mcDL$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #102                // Method scala/Function1$class.apply$mcDL$sp:(Lscala/Function1;J)D
       5: dreturn

  public void apply$mcVF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #107                // Method scala/Function1$class.apply$mcVF$sp:(Lscala/Function1;F)V
       5: return

  public boolean apply$mcZF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #113                // Method scala/Function1$class.apply$mcZF$sp:(Lscala/Function1;F)Z
       5: ireturn

  public int apply$mcIF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #118                // Method scala/Function1$class.apply$mcIF$sp:(Lscala/Function1;F)I
       5: ireturn

  public float apply$mcFF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #123                // Method scala/Function1$class.apply$mcFF$sp:(Lscala/Function1;F)F
       5: freturn

  public long apply$mcLF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #128                // Method scala/Function1$class.apply$mcLF$sp:(Lscala/Function1;F)J
       5: lreturn

  public double apply$mcDF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #133                // Method scala/Function1$class.apply$mcDF$sp:(Lscala/Function1;F)D
       5: dreturn

  public void apply$mcVD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #138                // Method scala/Function1$class.apply$mcVD$sp:(Lscala/Function1;D)V
       5: return

  public boolean apply$mcZD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #144                // Method scala/Function1$class.apply$mcZD$sp:(Lscala/Function1;D)Z
       5: ireturn

  public int apply$mcID$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #149                // Method scala/Function1$class.apply$mcID$sp:(Lscala/Function1;D)I
       5: ireturn

  public float apply$mcFD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #154                // Method scala/Function1$class.apply$mcFD$sp:(Lscala/Function1;D)F
       5: freturn

  public long apply$mcLD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #159                // Method scala/Function1$class.apply$mcLD$sp:(Lscala/Function1;D)J
       5: lreturn

  public double apply$mcDD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #164                // Method scala/Function1$class.apply$mcDD$sp:(Lscala/Function1;D)D
       5: dreturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #169                // Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
       4: areturn

  public scala.Function1 compose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #174                // Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcVI$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #178                // Method scala/Function1$class.compose$mcVI$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcZI$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #181                // Method scala/Function1$class.compose$mcZI$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcII$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #184                // Method scala/Function1$class.compose$mcII$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcFI$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #187                // Method scala/Function1$class.compose$mcFI$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcLI$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #190                // Method scala/Function1$class.compose$mcLI$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcDI$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #193                // Method scala/Function1$class.compose$mcDI$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcVL$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #196                // Method scala/Function1$class.compose$mcVL$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcZL$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #199                // Method scala/Function1$class.compose$mcZL$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcIL$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #202                // Method scala/Function1$class.compose$mcIL$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcFL$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #205                // Method scala/Function1$class.compose$mcFL$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcLL$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #208                // Method scala/Function1$class.compose$mcLL$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcDL$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #211                // Method scala/Function1$class.compose$mcDL$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcVF$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #214                // Method scala/Function1$class.compose$mcVF$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcZF$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #217                // Method scala/Function1$class.compose$mcZF$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcIF$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #220                // Method scala/Function1$class.compose$mcIF$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcFF$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #223                // Method scala/Function1$class.compose$mcFF$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcLF$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #226                // Method scala/Function1$class.compose$mcLF$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcDF$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #229                // Method scala/Function1$class.compose$mcDF$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcVD$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #232                // Method scala/Function1$class.compose$mcVD$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcZD$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #235                // Method scala/Function1$class.compose$mcZD$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcID$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #238                // Method scala/Function1$class.compose$mcID$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcFD$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #241                // Method scala/Function1$class.compose$mcFD$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcLD$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #244                // Method scala/Function1$class.compose$mcLD$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 compose$mcDD$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #247                // Method scala/Function1$class.compose$mcDD$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcVI$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #250                // Method scala/Function1$class.andThen$mcVI$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcZI$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #253                // Method scala/Function1$class.andThen$mcZI$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcII$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #256                // Method scala/Function1$class.andThen$mcII$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcFI$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #259                // Method scala/Function1$class.andThen$mcFI$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcLI$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #262                // Method scala/Function1$class.andThen$mcLI$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcDI$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #265                // Method scala/Function1$class.andThen$mcDI$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcVL$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #268                // Method scala/Function1$class.andThen$mcVL$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcZL$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #271                // Method scala/Function1$class.andThen$mcZL$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcIL$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #274                // Method scala/Function1$class.andThen$mcIL$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcFL$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #277                // Method scala/Function1$class.andThen$mcFL$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcLL$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #280                // Method scala/Function1$class.andThen$mcLL$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcDL$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #283                // Method scala/Function1$class.andThen$mcDL$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcVF$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #286                // Method scala/Function1$class.andThen$mcVF$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcZF$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #289                // Method scala/Function1$class.andThen$mcZF$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcIF$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #292                // Method scala/Function1$class.andThen$mcIF$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcFF$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #295                // Method scala/Function1$class.andThen$mcFF$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcLF$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #298                // Method scala/Function1$class.andThen$mcLF$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcDF$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #301                // Method scala/Function1$class.andThen$mcDF$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcVD$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #304                // Method scala/Function1$class.andThen$mcVD$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcZD$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #307                // Method scala/Function1$class.andThen$mcZD$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcID$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #310                // Method scala/Function1$class.andThen$mcID$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcFD$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #313                // Method scala/Function1$class.andThen$mcFD$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcLD$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #316                // Method scala/Function1$class.andThen$mcLD$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public scala.Function1 andThen$mcDD$sp(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #319                // Method scala/Function1$class.andThen$mcDD$sp:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public final java.util.UUID apply(scala.Tuple2<net.liftweb.json.TypeInfo, net.liftweb.json.JsonAST$JValue>);
    Code:
       0: aload_1
       1: ifnull        430
       4: aload_1
       5: invokevirtual #327                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: checkcast     #329                // class net/liftweb/json/TypeInfo
      11: astore_2
      12: aload_1
      13: invokevirtual #332                // Method scala/Tuple2._2:()Ljava/lang/Object;
      16: checkcast     #334                // class net/liftweb/json/JsonAST$JValue
      19: astore        12
      21: aload_2
      22: ifnull        421
      25: aload_2
      26: invokevirtual #338                // Method net/liftweb/json/TypeInfo.clazz:()Ljava/lang/Class;
      29: aload_0
      30: getfield      #340                // Field $outer:Lnet/liftweb/mongodb/UUIDSerializer;
      33: invokevirtual #345                // Method net/liftweb/mongodb/UUIDSerializer.net$liftweb$mongodb$UUIDSerializer$$UUIDClass:()Ljava/lang/Class;
      36: astore_3
      37: dup
      38: ifnonnull     49
      41: pop
      42: aload_3
      43: ifnull        56
      46: goto          412
      49: aload_3
      50: invokevirtual #351                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      53: ifeq          412
      56: aload         12
      58: instanceof    #353                // class net/liftweb/json/JsonAST$JObject
      61: ifeq          377
      64: aload         12
      66: checkcast     #353                // class net/liftweb/json/JsonAST$JObject
      69: astore        11
      71: aload         11
      73: invokevirtual #357                // Method net/liftweb/json/JsonAST$JObject.obj:()Lscala/collection/immutable/List;
      76: astore        4
      78: aload         4
      80: instanceof    #359                // class scala/collection/immutable/$colon$colon
      83: ifeq          342
      86: aload         4
      88: checkcast     #359                // class scala/collection/immutable/$colon$colon
      91: astore        8
      93: aload         8
      95: invokevirtual #362                // Method scala/collection/immutable/$colon$colon.hd$1:()Ljava/lang/Object;
      98: checkcast     #364                // class net/liftweb/json/JsonAST$JField
     101: astore        5
     103: aload         5
     105: ifnull        307
     108: aload         5
     110: invokevirtual #368                // Method net/liftweb/json/JsonAST$JField.value:()Lnet/liftweb/json/JsonAST$JValue;
     113: astore        6
     115: aload         5
     117: invokevirtual #371                // Method net/liftweb/json/JsonAST$JField.name:()Ljava/lang/String;
     120: dup
     121: ifnonnull     134
     124: pop
     125: ldc_w         #373                // String $uuid
     128: ifnull        143
     131: goto          272
     134: ldc_w         #373                // String $uuid
     137: invokevirtual #351                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     140: ifeq          272
     143: aload         6
     145: instanceof    #375                // class net/liftweb/json/JsonAST$JString
     148: ifeq          237
     151: aload         6
     153: checkcast     #375                // class net/liftweb/json/JsonAST$JString
     156: astore        7
     158: aload         7
     160: invokevirtual #378                // Method net/liftweb/json/JsonAST$JString.s:()Ljava/lang/String;
     163: astore        10
     165: getstatic     #384                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     168: aload         8
     170: invokevirtual #387                // Method scala/collection/immutable/$colon$colon.tl$1:()Lscala/collection/immutable/List;
     173: astore        9
     175: dup
     176: ifnonnull     188
     179: pop
     180: aload         9
     182: ifnull        196
     185: goto          202
     188: aload         9
     190: invokevirtual #351                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     193: ifeq          202
     196: aload         10
     198: invokestatic  #393                // Method java/util/UUID.fromString:(Ljava/lang/String;)Ljava/util/UUID;
     201: areturn
     202: new           #395                // class net/liftweb/json/MappingException
     205: dup
     206: new           #397                // class scala/collection/mutable/StringBuilder
     209: dup
     210: invokespecial #400                // Method scala/collection/mutable/StringBuilder."<init>":()V
     213: ldc_w         #402                // String Can\'t convert
     216: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     219: aload         11
     221: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     224: ldc_w         #408                // String  to Date
     227: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     230: invokevirtual #410                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     233: invokespecial #413                // Method net/liftweb/json/MappingException."<init>":(Ljava/lang/String;)V
     236: athrow
     237: new           #395                // class net/liftweb/json/MappingException
     240: dup
     241: new           #397                // class scala/collection/mutable/StringBuilder
     244: dup
     245: invokespecial #400                // Method scala/collection/mutable/StringBuilder."<init>":()V
     248: ldc_w         #402                // String Can\'t convert
     251: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     254: aload         11
     256: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     259: ldc_w         #408                // String  to Date
     262: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     265: invokevirtual #410                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     268: invokespecial #413                // Method net/liftweb/json/MappingException."<init>":(Ljava/lang/String;)V
     271: athrow
     272: new           #395                // class net/liftweb/json/MappingException
     275: dup
     276: new           #397                // class scala/collection/mutable/StringBuilder
     279: dup
     280: invokespecial #400                // Method scala/collection/mutable/StringBuilder."<init>":()V
     283: ldc_w         #402                // String Can\'t convert
     286: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     289: aload         11
     291: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     294: ldc_w         #408                // String  to Date
     297: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     300: invokevirtual #410                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     303: invokespecial #413                // Method net/liftweb/json/MappingException."<init>":(Ljava/lang/String;)V
     306: athrow
     307: new           #395                // class net/liftweb/json/MappingException
     310: dup
     311: new           #397                // class scala/collection/mutable/StringBuilder
     314: dup
     315: invokespecial #400                // Method scala/collection/mutable/StringBuilder."<init>":()V
     318: ldc_w         #402                // String Can\'t convert
     321: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     324: aload         11
     326: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     329: ldc_w         #408                // String  to Date
     332: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     335: invokevirtual #410                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     338: invokespecial #413                // Method net/liftweb/json/MappingException."<init>":(Ljava/lang/String;)V
     341: athrow
     342: new           #395                // class net/liftweb/json/MappingException
     345: dup
     346: new           #397                // class scala/collection/mutable/StringBuilder
     349: dup
     350: invokespecial #400                // Method scala/collection/mutable/StringBuilder."<init>":()V
     353: ldc_w         #402                // String Can\'t convert
     356: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     359: aload         11
     361: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     364: ldc_w         #408                // String  to Date
     367: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     370: invokevirtual #410                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     373: invokespecial #413                // Method net/liftweb/json/MappingException."<init>":(Ljava/lang/String;)V
     376: athrow
     377: new           #395                // class net/liftweb/json/MappingException
     380: dup
     381: new           #397                // class scala/collection/mutable/StringBuilder
     384: dup
     385: invokespecial #400                // Method scala/collection/mutable/StringBuilder."<init>":()V
     388: ldc_w         #402                // String Can\'t convert
     391: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     394: aload         12
     396: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     399: ldc_w         #408                // String  to Date
     402: invokevirtual #406                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     405: invokevirtual #410                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     408: invokespecial #413                // Method net/liftweb/json/MappingException."<init>":(Ljava/lang/String;)V
     411: athrow
     412: new           #415                // class scala/MatchError
     415: dup
     416: aload_1
     417: invokespecial #418                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     420: athrow
     421: new           #415                // class scala/MatchError
     424: dup
     425: aload_1
     426: invokespecial #418                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     429: athrow
     430: new           #415                // class scala/MatchError
     433: dup
     434: aload_1
     435: invokespecial #418                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     438: athrow

  public final boolean isDefinedAt(scala.Tuple2<net.liftweb.json.TypeInfo, net.liftweb.json.JsonAST$JValue>);
    Code:
       0: aload_1
       1: ifnull        59
       4: aload_1
       5: invokevirtual #327                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: checkcast     #329                // class net/liftweb/json/TypeInfo
      11: astore_2
      12: aload_2
      13: ifnull        55
      16: aload_2
      17: invokevirtual #338                // Method net/liftweb/json/TypeInfo.clazz:()Ljava/lang/Class;
      20: aload_0
      21: getfield      #340                // Field $outer:Lnet/liftweb/mongodb/UUIDSerializer;
      24: invokevirtual #345                // Method net/liftweb/mongodb/UUIDSerializer.net$liftweb$mongodb$UUIDSerializer$$UUIDClass:()Ljava/lang/Class;
      27: astore_3
      28: dup
      29: ifnonnull     40
      32: pop
      33: aload_3
      34: ifnull        47
      37: goto          51
      40: aload_3
      41: invokevirtual #351                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      44: ifeq          51
      47: iconst_1
      48: goto          60
      51: iconst_0
      52: goto          60
      55: iconst_0
      56: goto          60
      59: iconst_0
      60: ireturn

  public scala.Function1 andThen(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #427,  2          // InterfaceMethod scala/PartialFunction.andThen:(Lscala/Function1;)Lscala/PartialFunction;
       7: areturn

  public final boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #323                // class scala/Tuple2
       5: invokevirtual #429                // Method isDefinedAt:(Lscala/Tuple2;)Z
       8: ireturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #323                // class scala/Tuple2
       5: invokevirtual #434                // Method apply:(Lscala/Tuple2;)Ljava/util/UUID;
       8: areturn

  public net.liftweb.mongodb.UUIDSerializer$$anonfun$deserialize$4(net.liftweb.mongodb.UUIDSerializer);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #437                // class java/lang/NullPointerException
       7: dup
       8: invokespecial #438                // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: aload_1
      14: putfield      #340                // Field $outer:Lnet/liftweb/mongodb/UUIDSerializer;
      17: aload_0
      18: invokespecial #439                // Method java/lang/Object."<init>":()V
      21: aload_0
      22: invokestatic  #443                // Method scala/Function1$class.$init$:(Lscala/Function1;)V
      25: aload_0
      26: invokestatic  #446                // Method scala/PartialFunction$class.$init$:(Lscala/PartialFunction;)V
      29: return
}
