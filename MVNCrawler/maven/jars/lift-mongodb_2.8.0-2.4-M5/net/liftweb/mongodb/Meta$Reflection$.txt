Compiled from "Meta.scala"
public final class net.liftweb.mongodb.Meta$Reflection$ implements scala.ScalaObject {
  public static final net.liftweb.mongodb.Meta$Reflection$ MODULE$;

  private final scala.collection.immutable.Set<java.lang.Class<?>> primitives;

  private final scala.collection.immutable.Set<java.lang.Class<?>> datetypes;

  private final scala.collection.immutable.Set<java.lang.Class<?>> mongotypes;

  public static {};
    Code:
       0: new           #9                  // class net/liftweb/mongodb/Meta$Reflection$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public scala.collection.immutable.Set<java.lang.Class<?>> primitives();
    Code:
       0: aload_0
       1: getfield      #22                 // Field primitives:Lscala/collection/immutable/Set;
       4: areturn

  public boolean primitive_$qmark(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #22                 // Field primitives:Lscala/collection/immutable/Set;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod scala/collection/SetLike.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public net.liftweb.json.JsonAST$JValue primitive2jvalue(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #40                 // class java/lang/String
       4: ifeq          21
       7: new           #42                 // class net/liftweb/json/JsonAST$JString
      10: dup
      11: aload_1
      12: checkcast     #40                 // class java/lang/String
      15: invokespecial #45                 // Method net/liftweb/json/JsonAST$JString."<init>":(Ljava/lang/String;)V
      18: goto          422
      21: aload_1
      22: instanceof    #47                 // class java/lang/Integer
      25: ifeq          48
      28: new           #49                 // class net/liftweb/json/JsonAST$JInt
      31: dup
      32: getstatic     #54                 // Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
      35: aload_1
      36: invokestatic  #60                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      39: invokevirtual #64                 // Method scala/math/BigInt$.int2bigInt:(I)Lscala/math/BigInt;
      42: invokespecial #67                 // Method net/liftweb/json/JsonAST$JInt."<init>":(Lscala/math/BigInt;)V
      45: goto          422
      48: aload_1
      49: instanceof    #69                 // class java/lang/Long
      52: ifeq          75
      55: new           #49                 // class net/liftweb/json/JsonAST$JInt
      58: dup
      59: getstatic     #54                 // Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
      62: aload_1
      63: invokestatic  #73                 // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
      66: invokevirtual #77                 // Method scala/math/BigInt$.long2bigInt:(J)Lscala/math/BigInt;
      69: invokespecial #67                 // Method net/liftweb/json/JsonAST$JInt."<init>":(Lscala/math/BigInt;)V
      72: goto          422
      75: aload_1
      76: instanceof    #79                 // class java/lang/Double
      79: ifeq          96
      82: new           #81                 // class net/liftweb/json/JsonAST$JDouble
      85: dup
      86: aload_1
      87: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
      90: invokespecial #88                 // Method net/liftweb/json/JsonAST$JDouble."<init>":(D)V
      93: goto          422
      96: aload_1
      97: instanceof    #90                 // class java/lang/Float
     100: ifeq          118
     103: new           #81                 // class net/liftweb/json/JsonAST$JDouble
     106: dup
     107: aload_1
     108: invokestatic  #94                 // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
     111: f2d
     112: invokespecial #88                 // Method net/liftweb/json/JsonAST$JDouble."<init>":(D)V
     115: goto          422
     118: aload_1
     119: instanceof    #96                 // class java/lang/Byte
     122: ifeq          148
     125: new           #49                 // class net/liftweb/json/JsonAST$JInt
     128: dup
     129: getstatic     #101                // Field scala/package$.MODULE$:Lscala/package$;
     132: invokevirtual #105                // Method scala/package$.BigInt:()Lscala/math/BigInt$;
     135: aload_1
     136: invokestatic  #109                // Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
     139: invokevirtual #112                // Method scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
     142: invokespecial #67                 // Method net/liftweb/json/JsonAST$JInt."<init>":(Lscala/math/BigInt;)V
     145: goto          422
     148: aload_1
     149: instanceof    #114                // class scala/math/BigInt
     152: ifeq          169
     155: new           #49                 // class net/liftweb/json/JsonAST$JInt
     158: dup
     159: aload_1
     160: checkcast     #114                // class scala/math/BigInt
     163: invokespecial #67                 // Method net/liftweb/json/JsonAST$JInt."<init>":(Lscala/math/BigInt;)V
     166: goto          422
     169: aload_1
     170: instanceof    #116                // class java/lang/Boolean
     173: ifeq          190
     176: new           #118                // class net/liftweb/json/JsonAST$JBool
     179: dup
     180: aload_1
     181: invokestatic  #121                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     184: invokespecial #124                // Method net/liftweb/json/JsonAST$JBool."<init>":(Z)V
     187: goto          422
     190: aload_1
     191: instanceof    #126                // class java/lang/Short
     194: ifeq          220
     197: new           #49                 // class net/liftweb/json/JsonAST$JInt
     200: dup
     201: getstatic     #101                // Field scala/package$.MODULE$:Lscala/package$;
     204: invokevirtual #105                // Method scala/package$.BigInt:()Lscala/math/BigInt$;
     207: aload_1
     208: invokestatic  #130                // Method scala/runtime/BoxesRunTime.unboxToShort:(Ljava/lang/Object;)S
     211: invokevirtual #112                // Method scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
     214: invokespecial #67                 // Method net/liftweb/json/JsonAST$JInt."<init>":(Lscala/math/BigInt;)V
     217: goto          422
     220: aload_1
     221: instanceof    #47                 // class java/lang/Integer
     224: ifeq          253
     227: new           #49                 // class net/liftweb/json/JsonAST$JInt
     230: dup
     231: getstatic     #101                // Field scala/package$.MODULE$:Lscala/package$;
     234: invokevirtual #105                // Method scala/package$.BigInt:()Lscala/math/BigInt$;
     237: aload_1
     238: checkcast     #47                 // class java/lang/Integer
     241: invokestatic  #60                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
     244: invokevirtual #112                // Method scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
     247: invokespecial #67                 // Method net/liftweb/json/JsonAST$JInt."<init>":(Lscala/math/BigInt;)V
     250: goto          422
     253: aload_1
     254: instanceof    #69                 // class java/lang/Long
     257: ifeq          286
     260: new           #49                 // class net/liftweb/json/JsonAST$JInt
     263: dup
     264: getstatic     #101                // Field scala/package$.MODULE$:Lscala/package$;
     267: invokevirtual #105                // Method scala/package$.BigInt:()Lscala/math/BigInt$;
     270: aload_1
     271: checkcast     #69                 // class java/lang/Long
     274: invokestatic  #73                 // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
     277: invokevirtual #132                // Method scala/math/BigInt$.apply:(J)Lscala/math/BigInt;
     280: invokespecial #67                 // Method net/liftweb/json/JsonAST$JInt."<init>":(Lscala/math/BigInt;)V
     283: goto          422
     286: aload_1
     287: instanceof    #79                 // class java/lang/Double
     290: ifeq          310
     293: new           #81                 // class net/liftweb/json/JsonAST$JDouble
     296: dup
     297: aload_1
     298: checkcast     #79                 // class java/lang/Double
     301: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
     304: invokespecial #88                 // Method net/liftweb/json/JsonAST$JDouble."<init>":(D)V
     307: goto          422
     310: aload_1
     311: instanceof    #90                 // class java/lang/Float
     314: ifeq          335
     317: new           #81                 // class net/liftweb/json/JsonAST$JDouble
     320: dup
     321: aload_1
     322: checkcast     #90                 // class java/lang/Float
     325: invokestatic  #94                 // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
     328: f2d
     329: invokespecial #88                 // Method net/liftweb/json/JsonAST$JDouble."<init>":(D)V
     332: goto          422
     335: aload_1
     336: instanceof    #96                 // class java/lang/Byte
     339: ifeq          368
     342: new           #49                 // class net/liftweb/json/JsonAST$JInt
     345: dup
     346: getstatic     #101                // Field scala/package$.MODULE$:Lscala/package$;
     349: invokevirtual #105                // Method scala/package$.BigInt:()Lscala/math/BigInt$;
     352: aload_1
     353: checkcast     #96                 // class java/lang/Byte
     356: invokestatic  #109                // Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
     359: invokevirtual #112                // Method scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
     362: invokespecial #67                 // Method net/liftweb/json/JsonAST$JInt."<init>":(Lscala/math/BigInt;)V
     365: goto          422
     368: aload_1
     369: instanceof    #116                // class java/lang/Boolean
     372: ifeq          392
     375: new           #118                // class net/liftweb/json/JsonAST$JBool
     378: dup
     379: aload_1
     380: checkcast     #116                // class java/lang/Boolean
     383: invokestatic  #121                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     386: invokespecial #124                // Method net/liftweb/json/JsonAST$JBool."<init>":(Z)V
     389: goto          422
     392: aload_1
     393: instanceof    #126                // class java/lang/Short
     396: ifeq          423
     399: new           #49                 // class net/liftweb/json/JsonAST$JInt
     402: dup
     403: getstatic     #101                // Field scala/package$.MODULE$:Lscala/package$;
     406: invokevirtual #105                // Method scala/package$.BigInt:()Lscala/math/BigInt$;
     409: aload_1
     410: checkcast     #126                // class java/lang/Short
     413: invokestatic  #130                // Method scala/runtime/BoxesRunTime.unboxToShort:(Ljava/lang/Object;)S
     416: invokevirtual #112                // Method scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
     419: invokespecial #67                 // Method net/liftweb/json/JsonAST$JInt."<init>":(Lscala/math/BigInt;)V
     422: areturn
     423: new           #134                // class scala/collection/mutable/StringBuilder
     426: dup
     427: invokespecial #135                // Method scala/collection/mutable/StringBuilder."<init>":()V
     430: ldc           #137                // String not a primitive
     432: invokevirtual #141                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     435: aload_1
     436: invokevirtual #147                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     439: invokevirtual #141                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     442: invokevirtual #151                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     445: astore_2
     446: new           #153                // class java/lang/RuntimeException
     449: dup
     450: aload_2
     451: invokespecial #154                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     454: athrow

  public scala.collection.immutable.Set<java.lang.Class<?>> datetypes();
    Code:
       0: aload_0
       1: getfield      #158                // Field datetypes:Lscala/collection/immutable/Set;
       4: areturn

  public boolean datetype_$qmark(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #158                // Field datetypes:Lscala/collection/immutable/Set;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod scala/collection/SetLike.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public net.liftweb.json.JsonAST$JObject datetype2jvalue(java.lang.Object, net.liftweb.json.Formats);
    Code:
       0: aload_1
       1: instanceof    #163                // class java/util/Calendar
       4: ifeq          63
       7: aload_1
       8: checkcast     #163                // class java/util/Calendar
      11: invokevirtual #167                // Method java/util/Calendar.getTime:()Ljava/util/Date;
      14: astore_3
      15: new           #169                // class net/liftweb/json/JsonAST$JObject
      18: dup
      19: new           #171                // class net/liftweb/json/JsonAST$JField
      22: dup
      23: ldc           #173                // String $dt
      25: new           #42                 // class net/liftweb/json/JsonAST$JString
      28: dup
      29: aload_2
      30: invokeinterface #179,  1          // InterfaceMethod net/liftweb/json/Formats.dateFormat:()Lnet/liftweb/json/DateFormat;
      35: aload_3
      36: invokeinterface #185,  2          // InterfaceMethod net/liftweb/json/DateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      41: invokespecial #45                 // Method net/liftweb/json/JsonAST$JString."<init>":(Ljava/lang/String;)V
      44: invokespecial #188                // Method net/liftweb/json/JsonAST$JField."<init>":(Ljava/lang/String;Lnet/liftweb/json/JsonAST$JValue;)V
      47: astore        4
      49: getstatic     #193                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      52: aload         4
      54: invokevirtual #197                // Method scala/collection/immutable/Nil$.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      57: invokespecial #200                // Method net/liftweb/json/JsonAST$JObject."<init>":(Lscala/collection/immutable/List;)V
      60: goto          122
      63: aload_1
      64: instanceof    #202                // class java/util/Date
      67: ifeq          123
      70: aload_1
      71: checkcast     #202                // class java/util/Date
      74: astore        5
      76: new           #169                // class net/liftweb/json/JsonAST$JObject
      79: dup
      80: new           #171                // class net/liftweb/json/JsonAST$JField
      83: dup
      84: ldc           #173                // String $dt
      86: new           #42                 // class net/liftweb/json/JsonAST$JString
      89: dup
      90: aload_2
      91: invokeinterface #179,  1          // InterfaceMethod net/liftweb/json/Formats.dateFormat:()Lnet/liftweb/json/DateFormat;
      96: aload         5
      98: invokeinterface #185,  2          // InterfaceMethod net/liftweb/json/DateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
     103: invokespecial #45                 // Method net/liftweb/json/JsonAST$JString."<init>":(Ljava/lang/String;)V
     106: invokespecial #188                // Method net/liftweb/json/JsonAST$JField."<init>":(Ljava/lang/String;Lnet/liftweb/json/JsonAST$JValue;)V
     109: astore        6
     111: getstatic     #193                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     114: aload         6
     116: invokevirtual #197                // Method scala/collection/immutable/Nil$.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
     119: invokespecial #200                // Method net/liftweb/json/JsonAST$JObject."<init>":(Lscala/collection/immutable/List;)V
     122: areturn
     123: new           #204                // class scala/MatchError
     126: dup
     127: aload_1
     128: invokespecial #207                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     131: athrow

  public java.util.Date datetype2dbovalue(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #163                // class java/util/Calendar
       4: ifeq          17
       7: aload_1
       8: checkcast     #163                // class java/util/Calendar
      11: invokevirtual #167                // Method java/util/Calendar.getTime:()Ljava/util/Date;
      14: goto          28
      17: aload_1
      18: instanceof    #202                // class java/util/Date
      21: ifeq          29
      24: aload_1
      25: checkcast     #202                // class java/util/Date
      28: areturn
      29: new           #204                // class scala/MatchError
      32: dup
      33: aload_1
      34: invokespecial #207                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      37: athrow

  public scala.collection.immutable.Set<java.lang.Class<?>> mongotypes();
    Code:
       0: aload_0
       1: getfield      #216                // Field mongotypes:Lscala/collection/immutable/Set;
       4: areturn

  public boolean mongotype_$qmark(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #216                // Field mongotypes:Lscala/collection/immutable/Set;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod scala/collection/SetLike.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public net.liftweb.json.JsonAST$JValue mongotype2jvalue(java.lang.Object, net.liftweb.json.Formats);
    Code:
       0: aload_1
       1: instanceof    #221                // class org/bson/types/ObjectId
       4: ifeq          21
       7: getstatic     #226                // Field net/liftweb/mongodb/Meta$.MODULE$:Lnet/liftweb/mongodb/Meta$;
      10: aload_1
      11: checkcast     #221                // class org/bson/types/ObjectId
      14: aload_2
      15: invokevirtual #230                // Method net/liftweb/mongodb/Meta$.objectIdAsJValue:(Lorg/bson/types/ObjectId;Lnet/liftweb/json/Formats;)Lnet/liftweb/json/JsonAST$JValue;
      18: goto          157
      21: aload_1
      22: instanceof    #232                // class java/util/regex/Pattern
      25: ifeq          106
      28: aload_1
      29: checkcast     #232                // class java/util/regex/Pattern
      32: astore_3
      33: new           #169                // class net/liftweb/json/JsonAST$JObject
      36: dup
      37: new           #171                // class net/liftweb/json/JsonAST$JField
      40: dup
      41: ldc           #234                // String $regex
      43: new           #42                 // class net/liftweb/json/JsonAST$JString
      46: dup
      47: aload_3
      48: invokevirtual #237                // Method java/util/regex/Pattern.pattern:()Ljava/lang/String;
      51: invokespecial #45                 // Method net/liftweb/json/JsonAST$JString."<init>":(Ljava/lang/String;)V
      54: invokespecial #188                // Method net/liftweb/json/JsonAST$JField."<init>":(Ljava/lang/String;Lnet/liftweb/json/JsonAST$JValue;)V
      57: astore        5
      59: new           #171                // class net/liftweb/json/JsonAST$JField
      62: dup
      63: ldc           #239                // String $flags
      65: new           #49                 // class net/liftweb/json/JsonAST$JInt
      68: dup
      69: getstatic     #54                 // Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
      72: aload_3
      73: invokevirtual #243                // Method java/util/regex/Pattern.flags:()I
      76: invokevirtual #64                 // Method scala/math/BigInt$.int2bigInt:(I)Lscala/math/BigInt;
      79: invokespecial #67                 // Method net/liftweb/json/JsonAST$JInt."<init>":(Lscala/math/BigInt;)V
      82: invokespecial #188                // Method net/liftweb/json/JsonAST$JField."<init>":(Ljava/lang/String;Lnet/liftweb/json/JsonAST$JValue;)V
      85: astore        4
      87: getstatic     #193                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      90: aload         4
      92: invokevirtual #197                // Method scala/collection/immutable/Nil$.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      95: aload         5
      97: invokevirtual #246                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
     100: invokespecial #200                // Method net/liftweb/json/JsonAST$JObject."<init>":(Lscala/collection/immutable/List;)V
     103: goto          157
     106: aload_1
     107: instanceof    #248                // class java/util/UUID
     110: ifeq          158
     113: aload_1
     114: checkcast     #248                // class java/util/UUID
     117: astore        6
     119: new           #169                // class net/liftweb/json/JsonAST$JObject
     122: dup
     123: new           #171                // class net/liftweb/json/JsonAST$JField
     126: dup
     127: ldc           #250                // String $uuid
     129: new           #42                 // class net/liftweb/json/JsonAST$JString
     132: dup
     133: aload         6
     135: invokevirtual #251                // Method java/util/UUID.toString:()Ljava/lang/String;
     138: invokespecial #45                 // Method net/liftweb/json/JsonAST$JString."<init>":(Ljava/lang/String;)V
     141: invokespecial #188                // Method net/liftweb/json/JsonAST$JField."<init>":(Ljava/lang/String;Lnet/liftweb/json/JsonAST$JValue;)V
     144: astore        7
     146: getstatic     #193                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     149: aload         7
     151: invokevirtual #197                // Method scala/collection/immutable/Nil$.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
     154: invokespecial #200                // Method net/liftweb/json/JsonAST$JObject."<init>":(Lscala/collection/immutable/List;)V
     157: areturn
     158: aload_1
     159: instanceof    #253                // class com/mongodb/DBRef
     162: ifeq          175
     165: new           #153                // class java/lang/RuntimeException
     168: dup
     169: ldc           #255                // String DBRefs are not supported.
     171: invokespecial #154                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     174: athrow
     175: new           #134                // class scala/collection/mutable/StringBuilder
     178: dup
     179: invokespecial #135                // Method scala/collection/mutable/StringBuilder."<init>":()V
     182: ldc_w         #257                // String not a mongotype
     185: invokevirtual #141                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     188: aload_1
     189: invokevirtual #147                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     192: invokevirtual #141                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
     195: invokevirtual #151                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
     198: astore        8
     200: new           #153                // class java/lang/RuntimeException
     203: dup
     204: aload         8
     206: invokespecial #154                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     209: athrow

  public net.liftweb.mongodb.Meta$Reflection$();
    Code:
       0: aload_0
       1: invokespecial #261                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #263                // Field MODULE$:Lnet/liftweb/mongodb/Meta$Reflection$;
       8: aload_0
       9: getstatic     #268                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      12: invokevirtual #272                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
      15: getstatic     #268                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      18: ldc_w         #273                // int 16
      21: anewarray     #275                // class java/lang/Class
      24: dup
      25: iconst_0
      26: ldc           #40                 // class java/lang/String
      28: aastore
      29: dup
      30: iconst_1
      31: getstatic     #278                // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      34: aastore
      35: dup
      36: iconst_2
      37: getstatic     #279                // Field java/lang/Long.TYPE:Ljava/lang/Class;
      40: aastore
      41: dup
      42: iconst_3
      43: getstatic     #280                // Field java/lang/Double.TYPE:Ljava/lang/Class;
      46: aastore
      47: dup
      48: iconst_4
      49: getstatic     #281                // Field java/lang/Float.TYPE:Ljava/lang/Class;
      52: aastore
      53: dup
      54: iconst_5
      55: getstatic     #282                // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      58: aastore
      59: dup
      60: ldc_w         #283                // int 6
      63: ldc           #114                // class scala/math/BigInt
      65: aastore
      66: dup
      67: ldc_w         #284                // int 7
      70: getstatic     #285                // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      73: aastore
      74: dup
      75: ldc_w         #286                // int 8
      78: getstatic     #287                // Field java/lang/Short.TYPE:Ljava/lang/Class;
      81: aastore
      82: dup
      83: ldc_w         #288                // int 9
      86: ldc           #47                 // class java/lang/Integer
      88: aastore
      89: dup
      90: ldc_w         #289                // int 10
      93: ldc           #69                 // class java/lang/Long
      95: aastore
      96: dup
      97: ldc_w         #290                // int 11
     100: ldc           #79                 // class java/lang/Double
     102: aastore
     103: dup
     104: ldc_w         #291                // int 12
     107: ldc           #90                 // class java/lang/Float
     109: aastore
     110: dup
     111: ldc_w         #292                // int 13
     114: ldc           #96                 // class java/lang/Byte
     116: aastore
     117: dup
     118: ldc_w         #293                // int 14
     121: ldc           #116                // class java/lang/Boolean
     123: aastore
     124: dup
     125: ldc_w         #294                // int 15
     128: ldc           #126                // class java/lang/Short
     130: aastore
     131: checkcast     #296                // class "[Ljava/lang/Object;"
     134: invokevirtual #300                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     137: invokevirtual #305                // Method scala/collection/immutable/Set$.apply:(Lscala/collection/Seq;)Lscala/collection/Traversable;
     140: checkcast     #307                // class scala/collection/immutable/Set
     143: putfield      #22                 // Field primitives:Lscala/collection/immutable/Set;
     146: aload_0
     147: getstatic     #268                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     150: invokevirtual #272                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
     153: getstatic     #268                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     156: iconst_3
     157: anewarray     #275                // class java/lang/Class
     160: dup
     161: iconst_0
     162: ldc           #163                // class java/util/Calendar
     164: aastore
     165: dup
     166: iconst_1
     167: ldc           #202                // class java/util/Date
     169: aastore
     170: dup
     171: iconst_2
     172: ldc_w         #309                // class java/util/GregorianCalendar
     175: aastore
     176: checkcast     #296                // class "[Ljava/lang/Object;"
     179: invokevirtual #300                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     182: invokevirtual #305                // Method scala/collection/immutable/Set$.apply:(Lscala/collection/Seq;)Lscala/collection/Traversable;
     185: checkcast     #307                // class scala/collection/immutable/Set
     188: putfield      #158                // Field datetypes:Lscala/collection/immutable/Set;
     191: aload_0
     192: getstatic     #268                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     195: invokevirtual #272                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
     198: getstatic     #268                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     201: iconst_4
     202: anewarray     #275                // class java/lang/Class
     205: dup
     206: iconst_0
     207: ldc           #253                // class com/mongodb/DBRef
     209: aastore
     210: dup
     211: iconst_1
     212: ldc           #221                // class org/bson/types/ObjectId
     214: aastore
     215: dup
     216: iconst_2
     217: ldc           #232                // class java/util/regex/Pattern
     219: aastore
     220: dup
     221: iconst_3
     222: ldc           #248                // class java/util/UUID
     224: aastore
     225: checkcast     #296                // class "[Ljava/lang/Object;"
     228: invokevirtual #300                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     231: invokevirtual #305                // Method scala/collection/immutable/Set$.apply:(Lscala/collection/Seq;)Lscala/collection/Traversable;
     234: checkcast     #307                // class scala/collection/immutable/Set
     237: putfield      #216                // Field mongotypes:Lscala/collection/immutable/Set;
     240: return
}
