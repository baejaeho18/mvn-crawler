Compiled from "Delegate2.java"
public class org.camunda.bpm.engine.spring.test.components.scope.Delegate2 implements org.camunda.bpm.engine.delegate.JavaDelegate {
  private java.util.logging.Logger log;

  private org.camunda.bpm.engine.spring.test.components.scope.StatefulObject statefulObject;

  public org.camunda.bpm.engine.spring.test.components.scope.Delegate2();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokestatic  #4                  // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      15: putfield      #5                  // Field log:Ljava/util/logging/Logger;
      18: return

  public void execute(org.camunda.bpm.engine.delegate.DelegateExecution) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #6                  // Field statefulObject:Lorg/camunda/bpm/engine/spring/test/components/scope/StatefulObject;
       4: invokevirtual #7                  // Method org/camunda/bpm/engine/spring/test/components/scope/StatefulObject.increment:()V
       7: ldc           #8                  // String the \'scopedCustomer\' reference can\'t be null
       9: aload_0
      10: getfield      #6                  // Field statefulObject:Lorg/camunda/bpm/engine/spring/test/components/scope/StatefulObject;
      13: invokestatic  #9                  // Method org/junit/Assert.assertNotNull:(Ljava/lang/String;Ljava/lang/Object;)V
      16: ldc           #10                 // String the \'scopedCustomer.name\' property should be non-null, since it was set in a previous delegate bound to this very thread
      18: aload_0
      19: getfield      #6                  // Field statefulObject:Lorg/camunda/bpm/engine/spring/test/components/scope/StatefulObject;
      22: invokevirtual #11                 // Method org/camunda/bpm/engine/spring/test/components/scope/StatefulObject.getName:()Ljava/lang/String;
      25: invokestatic  #9                  // Method org/junit/Assert.assertNotNull:(Ljava/lang/String;Ljava/lang/Object;)V
      28: aload_0
      29: getfield      #5                  // Field log:Ljava/util/logging/Logger;
      32: new           #12                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #14                 // String the \'uuid\' value retrieved from the ScopedCustomer#name property is \'
      41: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: getfield      #6                  // Field statefulObject:Lorg/camunda/bpm/engine/spring/test/components/scope/StatefulObject;
      48: invokevirtual #11                 // Method org/camunda/bpm/engine/spring/test/components/scope/StatefulObject.getName:()Ljava/lang/String;
      51: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #16                 // String \' in
      56: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      63: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
      66: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokevirtual #18                 // Method java/util/logging/Logger.info:(Ljava/lang/String;)V
      75: return
}
