Compiled from "Counter.java"
public class org.camunda.bpm.engine.spring.test.configuration.Counter {
  private java.util.concurrent.atomic.AtomicInteger counter;

  public org.camunda.bpm.engine.spring.test.configuration.Counter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      16: return

  public int getCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public void increment();
    Code:
       0: aload_0
       1: getfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       7: pop
       8: return
}
