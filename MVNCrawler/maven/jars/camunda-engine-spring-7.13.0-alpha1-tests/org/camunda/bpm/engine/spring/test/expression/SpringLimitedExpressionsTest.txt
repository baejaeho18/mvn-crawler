Compiled from "SpringLimitedExpressionsTest.java"
public class org.camunda.bpm.engine.spring.test.expression.SpringLimitedExpressionsTest extends org.camunda.bpm.engine.spring.test.SpringProcessEngineTestCase {
  public org.camunda.bpm.engine.spring.test.expression.SpringLimitedExpressionsTest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/camunda/bpm/engine/spring/test/SpringProcessEngineTestCase."<init>":()V
       4: return

  public void testLimitedBeansExposed() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field runtimeService:Lorg/camunda/bpm/engine/RuntimeService;
       4: ldc           #3                  // String limitedExpressionProcess
       6: invokeinterface #4,  2            // InterfaceMethod org/camunda/bpm/engine/RuntimeService.startProcessInstanceByKey:(Ljava/lang/String;)Lorg/camunda/bpm/engine/runtime/ProcessInstance;
      11: astore_1
      12: aload_0
      13: getfield      #2                  // Field runtimeService:Lorg/camunda/bpm/engine/RuntimeService;
      16: aload_1
      17: invokeinterface #5,  1            // InterfaceMethod org/camunda/bpm/engine/runtime/ProcessInstance.getId:()Ljava/lang/String;
      22: ldc           #6                  // String beanOutput
      24: invokeinterface #7,  3            // InterfaceMethod org/camunda/bpm/engine/RuntimeService.getVariable:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      29: checkcast     #8                  // class java/lang/String
      32: astore_2
      33: aload_2
      34: invokestatic  #9                  // Method assertNotNull:(Ljava/lang/Object;)V
      37: ldc           #10                 // String Activiti BPMN 2.0 process engine
      39: aload_2
      40: invokestatic  #11                 // Method assertEquals:(Ljava/lang/String;Ljava/lang/String;)V
      43: aload_0
      44: getfield      #12                 // Field taskService:Lorg/camunda/bpm/engine/TaskService;
      47: invokeinterface #13,  1           // InterfaceMethod org/camunda/bpm/engine/TaskService.createTaskQuery:()Lorg/camunda/bpm/engine/task/TaskQuery;
      52: aload_1
      53: invokeinterface #5,  1            // InterfaceMethod org/camunda/bpm/engine/runtime/ProcessInstance.getId:()Ljava/lang/String;
      58: invokeinterface #14,  2           // InterfaceMethod org/camunda/bpm/engine/task/TaskQuery.processInstanceId:(Ljava/lang/String;)Lorg/camunda/bpm/engine/task/TaskQuery;
      63: invokeinterface #15,  1           // InterfaceMethod org/camunda/bpm/engine/task/TaskQuery.singleResult:()Ljava/lang/Object;
      68: checkcast     #16                 // class org/camunda/bpm/engine/task/Task
      71: astore_3
      72: aload_3
      73: invokestatic  #9                  // Method assertNotNull:(Ljava/lang/Object;)V
      76: aload_0
      77: getfield      #12                 // Field taskService:Lorg/camunda/bpm/engine/TaskService;
      80: aload_3
      81: invokeinterface #17,  1           // InterfaceMethod org/camunda/bpm/engine/task/Task.getId:()Ljava/lang/String;
      86: invokeinterface #18,  2           // InterfaceMethod org/camunda/bpm/engine/TaskService.complete:(Ljava/lang/String;)V
      91: ldc           #19                 // String Exception should have been thrown
      93: invokestatic  #20                 // Method fail:(Ljava/lang/String;)V
      96: goto          112
      99: astore        4
     101: aload_0
     102: ldc           #22                 // String Unknown property used in expression
     104: aload         4
     106: invokevirtual #23                 // Method org/camunda/bpm/engine/ProcessEngineException.getMessage:()Ljava/lang/String;
     109: invokevirtual #24                 // Method assertTextPresent:(Ljava/lang/String;Ljava/lang/String;)V
     112: return
    Exception table:
       from    to  target type
          76    96    99   Class org/camunda/bpm/engine/ProcessEngineException
}
