Compiled from "InnerProcessServiceImpl.java"
public class org.camunda.bpm.engine.spring.test.transaction.inner.rollback.InnerProcessServiceImpl implements org.camunda.bpm.engine.spring.test.transaction.inner.rollback.InnerProcessService {
  public org.camunda.bpm.engine.spring.test.transaction.inner.rollback.InnerProcessServiceImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void startInnerProcess(org.camunda.bpm.engine.delegate.DelegateExecution);
    Code:
       0: invokestatic  #2                  // Method org/camunda/bpm/engine/context/ProcessEngineContext.requiresNew:()V
       3: aload_1
       4: invokeinterface #3,  1            // InterfaceMethod org/camunda/bpm/engine/delegate/DelegateExecution.getProcessEngineServices:()Lorg/camunda/bpm/engine/ProcessEngineServices;
       9: invokeinterface #4,  1            // InterfaceMethod org/camunda/bpm/engine/ProcessEngineServices.getRuntimeService:()Lorg/camunda/bpm/engine/RuntimeService;
      14: ldc           #5                  // String InnerTxNestedTransactionTest
      16: invokeinterface #6,  2            // InterfaceMethod org/camunda/bpm/engine/RuntimeService.startProcessInstanceByKey:(Ljava/lang/String;)Lorg/camunda/bpm/engine/runtime/ProcessInstance;
      21: pop
      22: invokestatic  #7                  // Method org/camunda/bpm/engine/context/ProcessEngineContext.clear:()V
      25: goto          34
      28: astore_2
      29: invokestatic  #7                  // Method org/camunda/bpm/engine/context/ProcessEngineContext.clear:()V
      32: aload_2
      33: athrow
      34: new           #8                  // class java/lang/RuntimeException
      37: dup
      38: ldc           #9                  // String Inner Transaction Fails and Rolls back error!
      40: invokespecial #10                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      43: athrow
    Exception table:
       from    to  target type
           0    22    28   any
}
