Compiled from "OkHttp.kt"
public final class org.http4k.client.PreCannedOkHttpClients {
  public static final org.http4k.client.PreCannedOkHttpClients INSTANCE;

  private org.http4k.client.PreCannedOkHttpClients();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: return

  public final okhttp3.OkHttpClient defaultOkHttpClient();
    Code:
       0: new           #15                 // class okhttp3/OkHttpClient$Builder
       3: dup
       4: invokespecial #16                 // Method okhttp3/OkHttpClient$Builder."<init>":()V
       7: iconst_0
       8: invokevirtual #20                 // Method okhttp3/OkHttpClient$Builder.followRedirects:(Z)Lokhttp3/OkHttpClient$Builder;
      11: invokevirtual #23                 // Method okhttp3/OkHttpClient$Builder.build:()Lokhttp3/OkHttpClient;
      14: areturn

  public final okhttp3.OkHttpClient insecureOkHttpClient();
    Code:
       0: iconst_1
       1: anewarray     #26                 // class javax/net/ssl/TrustManager
       4: astore_2
       5: aload_2
       6: iconst_0
       7: new           #28                 // class org/http4k/client/PreCannedOkHttpClients$insecureOkHttpClient$trustAllCerts$1
      10: dup
      11: invokespecial #29                 // Method org/http4k/client/PreCannedOkHttpClients$insecureOkHttpClient$trustAllCerts$1."<init>":()V
      14: checkcast     #26                 // class javax/net/ssl/TrustManager
      17: aastore
      18: aload_2
      19: astore_1
      20: ldc           #31                 // String SSL
      22: invokestatic  #37                 // Method javax/net/ssl/SSLContext.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;
      25: astore_3
      26: aload_3
      27: astore        4
      29: iconst_0
      30: istore        5
      32: aload         4
      34: aconst_null
      35: aload_1
      36: new           #39                 // class java/security/SecureRandom
      39: dup
      40: invokespecial #40                 // Method java/security/SecureRandom."<init>":()V
      43: invokevirtual #44                 // Method javax/net/ssl/SSLContext.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V
      46: nop
      47: aload_3
      48: invokevirtual #48                 // Method javax/net/ssl/SSLContext.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;
      51: astore_2
      52: new           #15                 // class okhttp3/OkHttpClient$Builder
      55: dup
      56: invokespecial #16                 // Method okhttp3/OkHttpClient$Builder."<init>":()V
      59: aload_2
      60: ldc           #50                 // String sslSocketFactory
      62: invokestatic  #56                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      65: aload_2
      66: aload_1
      67: iconst_0
      68: aaload
      69: checkcast     #58                 // class javax/net/ssl/X509TrustManager
      72: invokevirtual #61                 // Method okhttp3/OkHttpClient$Builder.sslSocketFactory:(Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/X509TrustManager;)Lokhttp3/OkHttpClient$Builder;
      75: invokedynamic #78,  0             // InvokeDynamic #0:verify:()Ljavax/net/ssl/HostnameVerifier;
      80: invokevirtual #82                 // Method okhttp3/OkHttpClient$Builder.hostnameVerifier:(Ljavax/net/ssl/HostnameVerifier;)Lokhttp3/OkHttpClient$Builder;
      83: invokevirtual #23                 // Method okhttp3/OkHttpClient$Builder.build:()Lokhttp3/OkHttpClient;
      86: areturn

  private static final boolean insecureOkHttpClient$lambda-1(java.lang.String, javax.net.ssl.SSLSession);
    Code:
       0: iconst_1
       1: ireturn

  static {};
    Code:
       0: new           #2                  // class org/http4k/client/PreCannedOkHttpClients
       3: dup
       4: invokespecial #95                 // Method "<init>":()V
       7: putstatic     #98                 // Field INSTANCE:Lorg/http4k/client/PreCannedOkHttpClients;
      10: return
}
