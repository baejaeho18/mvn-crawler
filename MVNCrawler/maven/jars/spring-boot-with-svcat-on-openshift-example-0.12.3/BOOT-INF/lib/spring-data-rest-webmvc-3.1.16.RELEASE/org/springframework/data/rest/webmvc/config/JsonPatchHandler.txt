Compiled from "JsonPatchHandler.java"
class org.springframework.data.rest.webmvc.config.JsonPatchHandler {
  private final com.fasterxml.jackson.databind.ObjectMapper mapper;

  private final com.fasterxml.jackson.databind.ObjectMapper sourceMapper;

  private final org.springframework.data.rest.webmvc.json.DomainObjectReader reader;

  public org.springframework.data.rest.webmvc.config.JsonPatchHandler(com.fasterxml.jackson.databind.ObjectMapper, org.springframework.data.rest.webmvc.json.DomainObjectReader);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String ObjectMapper must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #4                  // String DomainObjectReader must not be null!
      13: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field reader:Lorg/springframework/data/rest/webmvc/json/DomainObjectReader;
      26: aload_0
      27: aload_1
      28: invokevirtual #7                  // Method com/fasterxml/jackson/databind/ObjectMapper.copy:()Lcom/fasterxml/jackson/databind/ObjectMapper;
      31: putfield      #8                  // Field sourceMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      34: aload_0
      35: getfield      #8                  // Field sourceMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      38: getstatic     #9                  // Field com/fasterxml/jackson/annotation/JsonInclude$Include.NON_NULL:Lcom/fasterxml/jackson/annotation/JsonInclude$Include;
      41: invokevirtual #10                 // Method com/fasterxml/jackson/databind/ObjectMapper.setSerializationInclusion:(Lcom/fasterxml/jackson/annotation/JsonInclude$Include;)Lcom/fasterxml/jackson/databind/ObjectMapper;
      44: pop
      45: return

  public <T> T apply(org.springframework.data.rest.webmvc.IncomingRequest, T) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ldc           #11                 // String Request must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #12                 // Method org/springframework/data/rest/webmvc/IncomingRequest.isPatchRequest:()Z
      10: ldc           #13                 // String Cannot handle non-PATCH request!
      12: invokestatic  #14                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      15: aload_2
      16: ldc           #15                 // String Target must not be null!
      18: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_1
      22: invokevirtual #16                 // Method org/springframework/data/rest/webmvc/IncomingRequest.isJsonPatchRequest:()Z
      25: ifeq          38
      28: aload_0
      29: aload_1
      30: invokevirtual #17                 // Method org/springframework/data/rest/webmvc/IncomingRequest.getBody:()Ljava/io/InputStream;
      33: aload_2
      34: invokevirtual #18                 // Method applyPatch:(Ljava/io/InputStream;Ljava/lang/Object;)Ljava/lang/Object;
      37: areturn
      38: aload_0
      39: aload_1
      40: invokevirtual #17                 // Method org/springframework/data/rest/webmvc/IncomingRequest.getBody:()Ljava/io/InputStream;
      43: aload_2
      44: invokevirtual #19                 // Method applyMergePatch:(Ljava/io/InputStream;Ljava/lang/Object;)Ljava/lang/Object;
      47: areturn

  <T> T applyPatch(java.io.InputStream, T) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method getPatchOperations:(Ljava/io/InputStream;)Lorg/springframework/data/rest/webmvc/json/patch/Patch;
       5: aload_2
       6: aload_2
       7: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: invokevirtual #22                 // Method org/springframework/data/rest/webmvc/json/patch/Patch.apply:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      13: areturn

  <T> T applyMergePatch(java.io.InputStream, T) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #6                  // Field reader:Lorg/springframework/data/rest/webmvc/json/DomainObjectReader;
       4: aload_1
       5: aload_2
       6: aload_0
       7: getfield      #5                  // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      10: invokevirtual #23                 // Method org/springframework/data/rest/webmvc/json/DomainObjectReader.read:(Ljava/io/InputStream;Ljava/lang/Object;Lcom/fasterxml/jackson/databind/ObjectMapper;)Ljava/lang/Object;
      13: areturn

  <T> T applyPut(com.fasterxml.jackson.databind.node.ObjectNode, T);
    Code:
       0: aload_0
       1: getfield      #6                  // Field reader:Lorg/springframework/data/rest/webmvc/json/DomainObjectReader;
       4: aload_1
       5: aload_2
       6: aload_0
       7: getfield      #5                  // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      10: invokevirtual #24                 // Method org/springframework/data/rest/webmvc/json/DomainObjectReader.readPut:(Lcom/fasterxml/jackson/databind/node/ObjectNode;Ljava/lang/Object;Lcom/fasterxml/jackson/databind/ObjectMapper;)Ljava/lang/Object;
      13: areturn

  private org.springframework.data.rest.webmvc.json.patch.Patch getPatchOperations(java.io.InputStream);
    Code:
       0: new           #25                 // class org/springframework/data/rest/webmvc/json/patch/JsonPatchPatchConverter
       3: dup
       4: aload_0
       5: getfield      #5                  // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       8: invokespecial #26                 // Method org/springframework/data/rest/webmvc/json/patch/JsonPatchPatchConverter."<init>":(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
      11: aload_0
      12: getfield      #5                  // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      15: aload_1
      16: invokevirtual #27                 // Method com/fasterxml/jackson/databind/ObjectMapper.readTree:(Ljava/io/InputStream;)Lcom/fasterxml/jackson/databind/JsonNode;
      19: invokevirtual #28                 // Method org/springframework/data/rest/webmvc/json/patch/JsonPatchPatchConverter.convert:(Lcom/fasterxml/jackson/databind/JsonNode;)Lorg/springframework/data/rest/webmvc/json/patch/Patch;
      22: areturn
      23: astore_2
      24: new           #30                 // class org/springframework/http/converter/HttpMessageNotReadableException
      27: dup
      28: ldc           #31                 // String Could not read PATCH operations! Expected %s!
      30: iconst_1
      31: anewarray     #32                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: getstatic     #33                 // Field org/springframework/data/rest/webmvc/RestMediaTypes.JSON_PATCH_JSON:Lorg/springframework/http/MediaType;
      39: aastore
      40: invokestatic  #34                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: aload_2
      44: invokespecial #35                 // Method org/springframework/http/converter/HttpMessageNotReadableException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: athrow
    Exception table:
       from    to  target type
           0    22    23   Class java/lang/Exception
}
