Compiled from "PersistentEntityProjector.java"
public class org.springframework.data.rest.webmvc.support.PersistentEntityProjector extends org.springframework.data.rest.webmvc.support.DefaultExcerptProjector implements org.springframework.data.rest.webmvc.support.Projector {
  private final org.springframework.data.rest.core.projection.ProjectionDefinitions definitions;

  private final org.springframework.data.projection.ProjectionFactory factory;

  private final java.lang.String projection;

  public org.springframework.data.rest.webmvc.support.PersistentEntityProjector(org.springframework.data.rest.core.projection.ProjectionDefinitions, org.springframework.data.projection.ProjectionFactory, java.lang.String, org.springframework.data.rest.core.mapping.ResourceMappings);
    Code:
       0: aload_0
       1: aload_2
       2: aload         4
       4: invokespecial #2                  // Method org/springframework/data/rest/webmvc/support/DefaultExcerptProjector."<init>":(Lorg/springframework/data/projection/ProjectionFactory;Lorg/springframework/data/rest/core/mapping/ResourceMappings;)V
       7: aload_1
       8: ldc           #3                  // String ProjectionDefinitions must not be null!
      10: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      13: aload_2
      14: ldc           #5                  // String ProjectionFactory must not be null!
      16: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload_0
      20: aload_2
      21: putfield      #6                  // Field factory:Lorg/springframework/data/projection/ProjectionFactory;
      24: aload_0
      25: aload_1
      26: putfield      #7                  // Field definitions:Lorg/springframework/data/rest/core/projection/ProjectionDefinitions;
      29: aload_0
      30: aload_3
      31: putfield      #8                  // Field projection:Ljava/lang/String;
      34: return

  public java.lang.Object project(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #9                  // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
       5: invokespecial #10                 // Method projectWithDefault:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object projectExcerpt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokedynamic #11,  0             // InvokeDynamic #0:apply:(Lorg/springframework/data/rest/webmvc/support/PersistentEntityProjector;)Ljava/util/function/Function;
       8: invokespecial #10                 // Method projectWithDefault:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      11: areturn

  private java.lang.Object projectWithDefault(java.lang.Object, java.util.function.Function<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_1
       1: ldc           #12                 // String Projection source must not be null!
       3: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #13                 // String Converter must not be null!
       9: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #8                  // Field projection:Ljava/lang/String;
      16: invokestatic  #14                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      19: ifne          30
      22: aload_2
      23: aload_1
      24: invokeinterface #15,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      29: areturn
      30: aload_0
      31: getfield      #7                  // Field definitions:Lorg/springframework/data/rest/core/projection/ProjectionDefinitions;
      34: aload_1
      35: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      38: aload_0
      39: getfield      #8                  // Field projection:Ljava/lang/String;
      42: invokeinterface #17,  3           // InterfaceMethod org/springframework/data/rest/core/projection/ProjectionDefinitions.getProjectionType:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Class;
      47: astore_3
      48: aload_3
      49: ifnonnull     62
      52: aload_2
      53: aload_1
      54: invokeinterface #15,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      59: goto          73
      62: aload_0
      63: getfield      #6                  // Field factory:Lorg/springframework/data/projection/ProjectionFactory;
      66: aload_3
      67: aload_1
      68: invokeinterface #18,  3           // InterfaceMethod org/springframework/data/projection/ProjectionFactory.createProjection:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      73: areturn

  private java.lang.Object lambda$projectExcerpt$0(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #19                 // Method access$001:(Lorg/springframework/data/rest/webmvc/support/PersistentEntityProjector;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  static java.lang.Object access$001(org.springframework.data.rest.webmvc.support.PersistentEntityProjector, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/data/rest/webmvc/support/DefaultExcerptProjector.projectExcerpt:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn
}
