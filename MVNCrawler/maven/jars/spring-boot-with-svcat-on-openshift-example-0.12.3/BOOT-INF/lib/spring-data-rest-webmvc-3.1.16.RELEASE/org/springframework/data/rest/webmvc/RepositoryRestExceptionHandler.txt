Compiled from "RepositoryRestExceptionHandler.java"
public class org.springframework.data.rest.webmvc.RepositoryRestExceptionHandler {
  private static final org.slf4j.Logger LOG;

  private final org.springframework.context.support.MessageSourceAccessor messageSourceAccessor;

  public org.springframework.data.rest.webmvc.RepositoryRestExceptionHandler(org.springframework.context.MessageSource);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String MessageSource must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: new           #4                  // class org/springframework/context/support/MessageSourceAccessor
      14: dup
      15: aload_1
      16: invokespecial #5                  // Method org/springframework/context/support/MessageSourceAccessor."<init>":(Lorg/springframework/context/MessageSource;)V
      19: putfield      #6                  // Field messageSourceAccessor:Lorg/springframework/context/support/MessageSourceAccessor;
      22: return

  org.springframework.http.ResponseEntity<?> handleNotFound(org.springframework.data.rest.webmvc.ResourceNotFoundException);
    Code:
       0: new           #7                  // class org/springframework/http/HttpHeaders
       3: dup
       4: invokespecial #8                  // Method org/springframework/http/HttpHeaders."<init>":()V
       7: invokestatic  #9                  // Method notFound:(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/ResponseEntity;
      10: areturn

  org.springframework.http.ResponseEntity<org.springframework.data.rest.webmvc.support.ExceptionMessage> handleNotReadable(org.springframework.http.converter.HttpMessageNotReadableException);
    Code:
       0: new           #7                  // class org/springframework/http/HttpHeaders
       3: dup
       4: invokespecial #8                  // Method org/springframework/http/HttpHeaders."<init>":()V
       7: aload_1
       8: invokestatic  #10                 // Method badRequest:(Lorg/springframework/http/HttpHeaders;Ljava/lang/Exception;)Lorg/springframework/http/ResponseEntity;
      11: areturn

  org.springframework.http.ResponseEntity<org.springframework.data.rest.webmvc.support.ExceptionMessage> handleMiscFailures(java.lang.Exception);
    Code:
       0: getstatic     #11                 // Field org/springframework/http/HttpStatus.INTERNAL_SERVER_ERROR:Lorg/springframework/http/HttpStatus;
       3: new           #7                  // class org/springframework/http/HttpHeaders
       6: dup
       7: invokespecial #8                  // Method org/springframework/http/HttpHeaders."<init>":()V
      10: aload_1
      11: invokestatic  #12                 // Method errorResponse:(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;Ljava/lang/Exception;)Lorg/springframework/http/ResponseEntity;
      14: areturn

  org.springframework.http.ResponseEntity<org.springframework.data.rest.webmvc.support.RepositoryConstraintViolationExceptionMessage> handleRepositoryConstraintViolationException(org.springframework.data.rest.core.RepositoryConstraintViolationException);
    Code:
       0: getstatic     #13                 // Field org/springframework/http/HttpStatus.BAD_REQUEST:Lorg/springframework/http/HttpStatus;
       3: new           #7                  // class org/springframework/http/HttpHeaders
       6: dup
       7: invokespecial #8                  // Method org/springframework/http/HttpHeaders."<init>":()V
      10: new           #14                 // class org/springframework/data/rest/webmvc/support/RepositoryConstraintViolationExceptionMessage
      13: dup
      14: aload_1
      15: aload_0
      16: getfield      #6                  // Field messageSourceAccessor:Lorg/springframework/context/support/MessageSourceAccessor;
      19: invokespecial #15                 // Method org/springframework/data/rest/webmvc/support/RepositoryConstraintViolationExceptionMessage."<init>":(Lorg/springframework/data/rest/core/RepositoryConstraintViolationException;Lorg/springframework/context/support/MessageSourceAccessor;)V
      22: invokestatic  #16                 // Method response:(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
      25: areturn

  org.springframework.http.ResponseEntity<org.springframework.data.rest.webmvc.support.ExceptionMessage> handleConflict(java.lang.Exception);
    Code:
       0: getstatic     #17                 // Field org/springframework/http/HttpStatus.CONFLICT:Lorg/springframework/http/HttpStatus;
       3: new           #7                  // class org/springframework/http/HttpHeaders
       6: dup
       7: invokespecial #8                  // Method org/springframework/http/HttpHeaders."<init>":()V
      10: aload_1
      11: invokestatic  #12                 // Method errorResponse:(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;Ljava/lang/Exception;)Lorg/springframework/http/ResponseEntity;
      14: areturn

  org.springframework.http.ResponseEntity<java.lang.Void> handle(org.springframework.web.HttpRequestMethodNotSupportedException);
    Code:
       0: new           #7                  // class org/springframework/http/HttpHeaders
       3: dup
       4: invokespecial #8                  // Method org/springframework/http/HttpHeaders."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #18                 // Method org/springframework/web/HttpRequestMethodNotSupportedException.getSupportedHttpMethods:()Ljava/util/Set;
      13: invokevirtual #19                 // Method org/springframework/http/HttpHeaders.setAllow:(Ljava/util/Set;)V
      16: getstatic     #20                 // Field org/springframework/http/HttpStatus.METHOD_NOT_ALLOWED:Lorg/springframework/http/HttpStatus;
      19: aload_2
      20: invokestatic  #21                 // Method response:(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/ResponseEntity;
      23: areturn

  org.springframework.http.ResponseEntity<java.lang.Void> handle(org.springframework.data.rest.webmvc.support.ETagDoesntMatchException);
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method org/springframework/data/rest/webmvc/support/ETagDoesntMatchException.getExpectedETag:()Lorg/springframework/data/rest/webmvc/support/ETag;
       4: new           #7                  // class org/springframework/http/HttpHeaders
       7: dup
       8: invokespecial #8                  // Method org/springframework/http/HttpHeaders."<init>":()V
      11: invokevirtual #23                 // Method org/springframework/data/rest/webmvc/support/ETag.addTo:(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpHeaders;
      14: astore_2
      15: getstatic     #24                 // Field org/springframework/http/HttpStatus.PRECONDITION_FAILED:Lorg/springframework/http/HttpStatus;
      18: aload_2
      19: invokestatic  #21                 // Method response:(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/ResponseEntity;
      22: areturn

  private static org.springframework.http.ResponseEntity<?> notFound(org.springframework.http.HttpHeaders);
    Code:
       0: getstatic     #25                 // Field org/springframework/http/HttpStatus.NOT_FOUND:Lorg/springframework/http/HttpStatus;
       3: aload_0
       4: aconst_null
       5: invokestatic  #16                 // Method response:(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
       8: areturn

  private static org.springframework.http.ResponseEntity<org.springframework.data.rest.webmvc.support.ExceptionMessage> badRequest(org.springframework.http.HttpHeaders, java.lang.Exception);
    Code:
       0: getstatic     #13                 // Field org/springframework/http/HttpStatus.BAD_REQUEST:Lorg/springframework/http/HttpStatus;
       3: aload_0
       4: aload_1
       5: invokestatic  #12                 // Method errorResponse:(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;Ljava/lang/Exception;)Lorg/springframework/http/ResponseEntity;
       8: areturn

  private static org.springframework.http.ResponseEntity<org.springframework.data.rest.webmvc.support.ExceptionMessage> errorResponse(org.springframework.http.HttpStatus, org.springframework.http.HttpHeaders, java.lang.Exception);
    Code:
       0: aload_2
       1: ifnull        40
       4: aload_2
       5: invokevirtual #26                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
       8: astore_3
       9: getstatic     #27                 // Field LOG:Lorg/slf4j/Logger;
      12: aload_3
      13: aload_2
      14: invokeinterface #28,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: aload_3
      20: invokestatic  #29                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      23: ifeq          40
      26: aload_0
      27: aload_1
      28: new           #30                 // class org/springframework/data/rest/webmvc/support/ExceptionMessage
      31: dup
      32: aload_2
      33: invokespecial #31                 // Method org/springframework/data/rest/webmvc/support/ExceptionMessage."<init>":(Ljava/lang/Throwable;)V
      36: invokestatic  #16                 // Method response:(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
      39: areturn
      40: aload_0
      41: aload_1
      42: aconst_null
      43: invokestatic  #16                 // Method response:(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
      46: areturn

  private static <T> org.springframework.http.ResponseEntity<T> response(org.springframework.http.HttpStatus, org.springframework.http.HttpHeaders);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokestatic  #16                 // Method response:(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
       6: areturn

  private static <T> org.springframework.http.ResponseEntity<T> response(org.springframework.http.HttpStatus, org.springframework.http.HttpHeaders, T);
    Code:
       0: aload_1
       1: ldc           #32                 // String Headers must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: ldc           #33                 // String HttpStatus must not be null!
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #34                 // class org/springframework/http/ResponseEntity
      15: dup
      16: aload_2
      17: aload_1
      18: aload_0
      19: invokespecial #35                 // Method org/springframework/http/ResponseEntity."<init>":(Ljava/lang/Object;Lorg/springframework/util/MultiValueMap;Lorg/springframework/http/HttpStatus;)V
      22: areturn

  static {};
    Code:
       0: ldc           #36                 // class org/springframework/data/rest/webmvc/RepositoryRestExceptionHandler
       2: invokestatic  #37                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #27                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
