Compiled from "LinkCollectingAssociationHandler.java"
public class org.springframework.data.rest.webmvc.mapping.LinkCollectingAssociationHandler implements org.springframework.data.mapping.SimpleAssociationHandler {
  private static final java.lang.String AMBIGUOUS_ASSOCIATIONS;

  private final org.springframework.data.mapping.context.PersistentEntities entities;

  private final org.springframework.data.rest.webmvc.mapping.Associations associations;

  private final org.springframework.data.rest.core.Path basePath;

  private final boolean nested;

  private final java.util.List<org.springframework.hateoas.Link> links;

  public org.springframework.data.rest.webmvc.mapping.LinkCollectingAssociationHandler(org.springframework.data.mapping.context.PersistentEntities, org.springframework.data.rest.core.Path, org.springframework.data.rest.webmvc.mapping.Associations);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: invokespecial #1                  // Method "<init>":(Lorg/springframework/data/mapping/context/PersistentEntities;Lorg/springframework/data/rest/core/Path;Lorg/springframework/data/rest/webmvc/mapping/Associations;Z)V
       8: return

  private org.springframework.data.rest.webmvc.mapping.LinkCollectingAssociationHandler(org.springframework.data.mapping.context.PersistentEntities, org.springframework.data.rest.core.Path, org.springframework.data.rest.webmvc.mapping.Associations, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #3                  // String PersistentEntities must not be null!
       7: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #5                  // String Path must not be null!
      13: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_3
      17: ldc           #6                  // String AssociationLinks must not be null!
      19: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: putfield      #7                  // Field entities:Lorg/springframework/data/mapping/context/PersistentEntities;
      27: aload_0
      28: aload_3
      29: putfield      #8                  // Field associations:Lorg/springframework/data/rest/webmvc/mapping/Associations;
      32: aload_0
      33: aload_2
      34: putfield      #9                  // Field basePath:Lorg/springframework/data/rest/core/Path;
      37: aload_0
      38: new           #10                 // class java/util/ArrayList
      41: dup
      42: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      45: putfield      #12                 // Field links:Ljava/util/List;
      48: aload_0
      49: iload         4
      51: putfield      #13                 // Field nested:Z
      54: return

  public org.springframework.data.rest.webmvc.mapping.LinkCollectingAssociationHandler nested();
    Code:
       0: aload_0
       1: getfield      #13                 // Field nested:Z
       4: ifeq          11
       7: aload_0
       8: goto          31
      11: new           #14                 // class org/springframework/data/rest/webmvc/mapping/LinkCollectingAssociationHandler
      14: dup
      15: aload_0
      16: getfield      #7                  // Field entities:Lorg/springframework/data/mapping/context/PersistentEntities;
      19: aload_0
      20: getfield      #9                  // Field basePath:Lorg/springframework/data/rest/core/Path;
      23: aload_0
      24: getfield      #8                  // Field associations:Lorg/springframework/data/rest/webmvc/mapping/Associations;
      27: iconst_1
      28: invokespecial #1                  // Method "<init>":(Lorg/springframework/data/mapping/context/PersistentEntities;Lorg/springframework/data/rest/core/Path;Lorg/springframework/data/rest/webmvc/mapping/Associations;Z)V
      31: areturn

  public java.util.List<org.springframework.hateoas.Link> getLinks();
    Code:
       0: aload_0
       1: getfield      #12                 // Field links:Ljava/util/List;
       4: areturn

  public void doWithAssociation(org.springframework.data.mapping.Association<? extends org.springframework.data.mapping.PersistentProperty<?>>);
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method org/springframework/data/mapping/Association.getInverse:()Lorg/springframework/data/mapping/PersistentProperty;
       4: astore_2
       5: aload_0
       6: getfield      #8                  // Field associations:Lorg/springframework/data/rest/webmvc/mapping/Associations;
       9: aload_2
      10: invokevirtual #16                 // Method org/springframework/data/rest/webmvc/mapping/Associations.isLinkableAssociation:(Lorg/springframework/data/mapping/PersistentProperty;)Z
      13: ifeq          120
      16: new           #17                 // class org/springframework/hateoas/Links
      19: dup
      20: aload_0
      21: getfield      #12                 // Field links:Ljava/util/List;
      24: invokespecial #18                 // Method org/springframework/hateoas/Links."<init>":(Ljava/util/List;)V
      27: astore_3
      28: aload_0
      29: getfield      #8                  // Field associations:Lorg/springframework/data/rest/webmvc/mapping/Associations;
      32: aload_1
      33: aload_0
      34: getfield      #9                  // Field basePath:Lorg/springframework/data/rest/core/Path;
      37: invokevirtual #19                 // Method org/springframework/data/rest/webmvc/mapping/Associations.getLinksFor:(Lorg/springframework/data/mapping/Association;Lorg/springframework/data/rest/core/Path;)Ljava/util/List;
      40: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      45: astore        4
      47: aload         4
      49: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          120
      57: aload         4
      59: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #23                 // class org/springframework/hateoas/Link
      67: astore        5
      69: aload_3
      70: aload         5
      72: invokevirtual #24                 // Method org/springframework/hateoas/Link.getRel:()Ljava/lang/String;
      75: invokevirtual #25                 // Method org/springframework/hateoas/Links.hasLink:(Ljava/lang/String;)Z
      78: ifeq          105
      81: new           #26                 // class org/springframework/data/mapping/MappingException
      84: dup
      85: ldc           #27                 // String Detected multiple association links with same relation type! Disambiguate association %s using @RestResource!
      87: iconst_1
      88: anewarray     #28                 // class java/lang/Object
      91: dup
      92: iconst_0
      93: aload_2
      94: invokevirtual #29                 // Method java/lang/Object.toString:()Ljava/lang/String;
      97: aastore
      98: invokestatic  #30                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     101: invokespecial #31                 // Method org/springframework/data/mapping/MappingException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_0
     106: getfield      #12                 // Field links:Ljava/util/List;
     109: aload         5
     111: invokeinterface #32,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     116: pop
     117: goto          47
     120: return
}
