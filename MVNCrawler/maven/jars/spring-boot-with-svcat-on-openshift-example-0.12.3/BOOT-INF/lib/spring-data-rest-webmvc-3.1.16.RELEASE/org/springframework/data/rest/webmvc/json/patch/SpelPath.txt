Compiled from "SpelPath.java"
class org.springframework.data.rest.webmvc.json.patch.SpelPath {
  private static final org.springframework.expression.spel.standard.SpelExpressionParser SPEL_EXPRESSION_PARSER;

  private static final java.lang.String APPEND_CHARACTER;

  private static final java.util.Map<java.lang.String, org.springframework.data.rest.webmvc.json.patch.SpelPath$UntypedSpelPath> UNTYPED_PATHS;

  protected final java.lang.String path;

  public static org.springframework.data.rest.webmvc.json.patch.SpelPath$UntypedSpelPath untyped(java.lang.String);
    Code:
       0: getstatic     #3                  // Field UNTYPED_PATHS:Ljava/util/Map;
       3: aload_0
       4: invokedynamic #4,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
       9: invokeinterface #5,  3            // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      14: checkcast     #6                  // class org/springframework/data/rest/webmvc/json/patch/SpelPath$UntypedSpelPath
      17: areturn

  public static org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath typed(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method untyped:(Ljava/lang/String;)Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$UntypedSpelPath;
       4: aload_1
       5: invokevirtual #8                  // Method org/springframework/data/rest/webmvc/json/patch/SpelPath$UntypedSpelPath.bindTo:(Ljava/lang/Class;)Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath;
       8: areturn

  public boolean isAppend();
    Code:
       0: aload_0
       1: getfield      #9                  // Field path:Ljava/lang/String;
       4: ldc           #10                 // String -
       6: invokevirtual #11                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       9: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #9                  // Field path:Ljava/lang/String;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: ldc           #12                 // class org/springframework/data/rest/webmvc/json/patch/SpelPath
       9: aload_1
      10: invokevirtual #13                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      13: ifne          18
      16: iconst_0
      17: ireturn
      18: aload_1
      19: checkcast     #12                 // class org/springframework/data/rest/webmvc/json/patch/SpelPath
      22: astore_2
      23: aload_0
      24: getfield      #9                  // Field path:Ljava/lang/String;
      27: aload_2
      28: getfield      #9                  // Field path:Ljava/lang/String;
      31: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      34: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #9                  // Field path:Ljava/lang/String;
       4: invokevirtual #15                 // Method java/lang/String.hashCode:()I
       7: ireturn

  private org.springframework.data.rest.webmvc.json.patch.SpelPath(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #9                  // Field path:Ljava/lang/String;
       9: return

  public java.lang.String getPath();
    Code:
       0: aload_0
       1: getfield      #9                  // Field path:Ljava/lang/String;
       4: areturn

  private static org.springframework.data.rest.webmvc.json.patch.SpelPath$UntypedSpelPath lambda$untyped$0(java.lang.String);
    Code:
       0: new           #6                  // class org/springframework/data/rest/webmvc/json/patch/SpelPath$UntypedSpelPath
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #17                 // Method org/springframework/data/rest/webmvc/json/patch/SpelPath$UntypedSpelPath."<init>":(Ljava/lang/String;Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$1;)V
       9: areturn

  org.springframework.data.rest.webmvc.json.patch.SpelPath(java.lang.String, org.springframework.data.rest.webmvc.json.patch.SpelPath$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method "<init>":(Ljava/lang/String;)V
       5: return

  static org.springframework.expression.spel.standard.SpelExpressionParser access$100();
    Code:
       0: getstatic     #1                  // Field SPEL_EXPRESSION_PARSER:Lorg/springframework/expression/spel/standard/SpelExpressionParser;
       3: areturn

  static {};
    Code:
       0: new           #18                 // class org/springframework/expression/spel/standard/SpelExpressionParser
       3: dup
       4: invokespecial #19                 // Method org/springframework/expression/spel/standard/SpelExpressionParser."<init>":()V
       7: putstatic     #1                  // Field SPEL_EXPRESSION_PARSER:Lorg/springframework/expression/spel/standard/SpelExpressionParser;
      10: new           #20                 // class org/springframework/util/ConcurrentReferenceHashMap
      13: dup
      14: bipush        32
      16: invokespecial #21                 // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":(I)V
      19: putstatic     #3                  // Field UNTYPED_PATHS:Ljava/util/Map;
      22: return
}
