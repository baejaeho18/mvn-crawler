Compiled from "RepositoryRestHandlerMapping.java"
public class org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping extends org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping {
  private static final org.springframework.web.util.pattern.PathPatternParser PARSER;

  static final java.lang.String EFFECTIVE_LOOKUP_PATH_ATTRIBUTE;

  private final org.springframework.data.rest.core.mapping.ResourceMappings mappings;

  private final org.springframework.data.rest.core.config.RepositoryRestConfiguration configuration;

  private final java.util.Optional<org.springframework.data.repository.support.Repositories> repositories;

  private org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping$RepositoryCorsConfigurationAccessor corsConfigurationAccessor;

  private java.util.Optional<org.springframework.data.rest.webmvc.support.JpaHelper> jpaHelper;

  public org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping(org.springframework.data.rest.core.mapping.ResourceMappings, org.springframework.data.rest.core.config.RepositoryRestConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
       6: invokespecial #3                  // Method "<init>":(Lorg/springframework/data/rest/core/mapping/ResourceMappings;Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;Ljava/util/Optional;)V
       9: return

  public org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping(org.springframework.data.rest.core.mapping.ResourceMappings, org.springframework.data.rest.core.config.RepositoryRestConfiguration, org.springframework.data.repository.support.Repositories);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #4                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       7: invokespecial #3                  // Method "<init>":(Lorg/springframework/data/rest/core/mapping/ResourceMappings;Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;Ljava/util/Optional;)V
      10: return

  private org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping(org.springframework.data.rest.core.mapping.ResourceMappings, org.springframework.data.rest.core.config.RepositoryRestConfiguration, java.util.Optional<org.springframework.data.repository.support.Repositories>);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #5                  // Method org/springframework/data/rest/webmvc/BasePathAwareHandlerMapping."<init>":(Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;)V
       5: aload_0
       6: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
       9: putfield      #6                  // Field jpaHelper:Ljava/util/Optional;
      12: aload_1
      13: ldc           #7                  // String ResourceMappings must not be null!
      15: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_2
      19: ldc           #9                  // String RepositoryRestConfiguration must not be null!
      21: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      24: aload_3
      25: ldc           #10                 // String Repositories must not be null!
      27: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      30: aload_0
      31: aload_1
      32: putfield      #11                 // Field mappings:Lorg/springframework/data/rest/core/mapping/ResourceMappings;
      35: aload_0
      36: aload_2
      37: putfield      #12                 // Field configuration:Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
      40: aload_0
      41: aload_3
      42: putfield      #13                 // Field repositories:Ljava/util/Optional;
      45: aload_0
      46: new           #14                 // class org/springframework/data/rest/webmvc/RepositoryRestHandlerMapping$RepositoryCorsConfigurationAccessor
      49: dup
      50: aload_1
      51: getstatic     #15                 // Field org/springframework/data/rest/webmvc/RepositoryRestHandlerMapping$NoOpStringValueResolver.INSTANCE:Lorg/springframework/data/rest/webmvc/RepositoryRestHandlerMapping$NoOpStringValueResolver;
      54: aload_3
      55: invokespecial #16                 // Method org/springframework/data/rest/webmvc/RepositoryRestHandlerMapping$RepositoryCorsConfigurationAccessor."<init>":(Lorg/springframework/data/rest/core/mapping/ResourceMappings;Lorg/springframework/util/StringValueResolver;Ljava/util/Optional;)V
      58: putfield      #17                 // Field corsConfigurationAccessor:Lorg/springframework/data/rest/webmvc/RepositoryRestHandlerMapping$RepositoryCorsConfigurationAccessor;
      61: return

  public void setJpaHelper(org.springframework.data.rest.webmvc.support.JpaHelper);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #18                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       5: putfield      #6                  // Field jpaHelper:Ljava/util/Optional;
       8: return

  public void setEmbeddedValueResolver(org.springframework.util.StringValueResolver);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method org/springframework/data/rest/webmvc/BasePathAwareHandlerMapping.setEmbeddedValueResolver:(Lorg/springframework/util/StringValueResolver;)V
       5: aload_0
       6: new           #14                 // class org/springframework/data/rest/webmvc/RepositoryRestHandlerMapping$RepositoryCorsConfigurationAccessor
       9: dup
      10: aload_0
      11: getfield      #11                 // Field mappings:Lorg/springframework/data/rest/core/mapping/ResourceMappings;
      14: aload_1
      15: ifnonnull     24
      18: getstatic     #15                 // Field org/springframework/data/rest/webmvc/RepositoryRestHandlerMapping$NoOpStringValueResolver.INSTANCE:Lorg/springframework/data/rest/webmvc/RepositoryRestHandlerMapping$NoOpStringValueResolver;
      21: goto          25
      24: aload_1
      25: aload_0
      26: getfield      #13                 // Field repositories:Ljava/util/Optional;
      29: invokespecial #16                 // Method org/springframework/data/rest/webmvc/RepositoryRestHandlerMapping$RepositoryCorsConfigurationAccessor."<init>":(Lorg/springframework/data/rest/core/mapping/ResourceMappings;Lorg/springframework/util/StringValueResolver;Ljava/util/Optional;)V
      32: putfield      #17                 // Field corsConfigurationAccessor:Lorg/springframework/data/rest/webmvc/RepositoryRestHandlerMapping$RepositoryCorsConfigurationAccessor;
      35: return

  protected org.springframework.web.method.HandlerMethod lookupHandlerMethod(java.lang.String, javax.servlet.http.HttpServletRequest) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #20                 // Method org/springframework/data/rest/webmvc/BasePathAwareHandlerMapping.lookupHandlerMethod:(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/method/HandlerMethod;
       6: astore_3
       7: aload_3
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: new           #21                 // class org/springframework/data/rest/webmvc/BaseUri
      16: dup
      17: aload_0
      18: getfield      #12                 // Field configuration:Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
      21: invokevirtual #22                 // Method org/springframework/data/rest/core/config/RepositoryRestConfiguration.getBaseUri:()Ljava/net/URI;
      24: invokespecial #23                 // Method org/springframework/data/rest/webmvc/BaseUri."<init>":(Ljava/net/URI;)V
      27: aload_1
      28: invokevirtual #24                 // Method org/springframework/data/rest/webmvc/BaseUri.getRepositoryLookupPath:(Ljava/lang/String;)Ljava/lang/String;
      31: astore        4
      33: aload         4
      35: invokestatic  #25                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      38: ifne          43
      41: aload_3
      42: areturn
      43: aload         4
      45: invokestatic  #1                  // Method getRepositoryBasePath:(Ljava/lang/String;)Ljava/lang/String;
      48: astore        5
      50: aload_0
      51: getfield      #11                 // Field mappings:Lorg/springframework/data/rest/core/mapping/ResourceMappings;
      54: aload         5
      56: invokeinterface #26,  2           // InterfaceMethod org/springframework/data/rest/core/mapping/ResourceMappings.exportsTopLevelResourceFor:(Ljava/lang/String;)Z
      61: ifne          66
      64: aconst_null
      65: areturn
      66: aload_0
      67: aload_3
      68: aload_2
      69: aload         5
      71: invokespecial #27                 // Method exposeEffectiveLookupPathKey:(Lorg/springframework/web/method/HandlerMethod;Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)V
      74: aload_3
      75: areturn

  protected org.springframework.web.method.HandlerMethod handleNoMatch(java.util.Set<org.springframework.web.servlet.mvc.method.RequestMappingInfo>, java.lang.String, javax.servlet.http.HttpServletRequest) throws javax.servlet.ServletException;
    Code:
       0: aconst_null
       1: areturn

  protected boolean isHandler(java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokestatic  #28                 // Method org/springframework/data/util/ProxyUtils.getUserClass:(Ljava/lang/Class;)Ljava/lang/Class;
       4: astore_2
       5: aload_2
       6: ldc           #29                 // class org/springframework/data/rest/webmvc/RepositoryRestController
       8: invokestatic  #30                 // Method org/springframework/core/annotation/AnnotationUtils.findAnnotation:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  protected void extendInterceptors(java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field jpaHelper:Ljava/util/Optional;
       4: invokedynamic #31,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
       9: invokevirtual #32                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      12: invokedynamic #33,  0             // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
      17: invokevirtual #34                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      20: checkcast     #35                 // class java/util/List
      23: aload_1
      24: dup
      25: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: pop
      29: invokedynamic #37,  0             // InvokeDynamic #2:accept:(Ljava/util/List;)Ljava/util/function/Consumer;
      34: invokeinterface #38,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      39: return

  protected org.springframework.web.servlet.mvc.condition.ProducesRequestCondition customize(org.springframework.web.servlet.mvc.condition.ProducesRequestCondition);
    Code:
       0: aload_1
       1: invokevirtual #39                 // Method org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.isEmpty:()Z
       4: ifne          9
       7: aload_1
       8: areturn
       9: new           #40                 // class java/util/LinkedHashSet
      12: dup
      13: invokespecial #41                 // Method java/util/LinkedHashSet."<init>":()V
      16: astore_2
      17: aload_2
      18: aload_0
      19: getfield      #12                 // Field configuration:Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
      22: invokevirtual #42                 // Method org/springframework/data/rest/core/config/RepositoryRestConfiguration.getDefaultMediaType:()Lorg/springframework/http/MediaType;
      25: invokevirtual #43                 // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      28: invokevirtual #44                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      31: pop
      32: aload_2
      33: ldc           #46                 // String application/json
      35: invokevirtual #44                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      38: pop
      39: new           #47                 // class org/springframework/web/servlet/mvc/condition/ProducesRequestCondition
      42: dup
      43: aload_2
      44: aload_2
      45: invokevirtual #48                 // Method java/util/HashSet.size:()I
      48: anewarray     #49                 // class java/lang/String
      51: invokevirtual #50                 // Method java/util/HashSet.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      54: checkcast     #51                 // class "[Ljava/lang/String;"
      57: invokespecial #52                 // Method org/springframework/web/servlet/mvc/condition/ProducesRequestCondition."<init>":([Ljava/lang/String;)V
      60: areturn

  protected org.springframework.web.cors.CorsConfiguration getCorsConfiguration(java.lang.Object, javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method getUrlPathHelper:()Lorg/springframework/web/util/UrlPathHelper;
       4: aload_2
       5: invokevirtual #54                 // Method org/springframework/web/util/UrlPathHelper.getLookupPathForRequest:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
       8: astore_3
       9: new           #21                 // class org/springframework/data/rest/webmvc/BaseUri
      12: dup
      13: aload_0
      14: getfield      #12                 // Field configuration:Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
      17: invokevirtual #22                 // Method org/springframework/data/rest/core/config/RepositoryRestConfiguration.getBaseUri:()Ljava/net/URI;
      20: invokespecial #23                 // Method org/springframework/data/rest/webmvc/BaseUri."<init>":(Ljava/net/URI;)V
      23: aload_3
      24: invokevirtual #24                 // Method org/springframework/data/rest/webmvc/BaseUri.getRepositoryLookupPath:(Ljava/lang/String;)Ljava/lang/String;
      27: astore        4
      29: aload_0
      30: aload_1
      31: aload_2
      32: invokespecial #55                 // Method org/springframework/data/rest/webmvc/BasePathAwareHandlerMapping.getCorsConfiguration:(Ljava/lang/Object;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/cors/CorsConfiguration;
      35: astore        5
      37: aload_0
      38: getfield      #13                 // Field repositories:Ljava/util/Optional;
      41: aload         4
      43: invokedynamic #56,  0             // InvokeDynamic #3:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      48: invokevirtual #57                 // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
      51: aload_0
      52: aload         4
      54: invokedynamic #58,  0             // InvokeDynamic #4:apply:(Lorg/springframework/data/rest/webmvc/RepositoryRestHandlerMapping;Ljava/lang/String;)Ljava/util/function/Function;
      59: invokevirtual #59                 // Method java/util/Optional.flatMap:(Ljava/util/function/Function;)Ljava/util/Optional;
      62: aload         5
      64: invokedynamic #60,  0             // InvokeDynamic #5:apply:(Lorg/springframework/web/cors/CorsConfiguration;)Ljava/util/function/Function;
      69: invokevirtual #32                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      72: aload         5
      74: invokevirtual #61                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #62                 // class org/springframework/web/cors/CorsConfiguration
      80: areturn

  private static java.lang.String getRepositoryBasePath(java.lang.String);
    Code:
       0: aload_0
       1: bipush        47
       3: aload_0
       4: ldc           #63                 // String /
       6: invokevirtual #64                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: invokevirtual #65                 // Method java/lang/String.indexOf:(II)I
      20: istore_1
      21: iload_1
      22: iconst_m1
      23: if_icmpne     30
      26: aload_0
      27: goto          36
      30: aload_0
      31: iconst_0
      32: iload_1
      33: invokevirtual #66                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      36: areturn

  private void exposeEffectiveLookupPathKey(org.springframework.web.method.HandlerMethod, javax.servlet.http.HttpServletRequest, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #67                 // Method org/springframework/web/method/HandlerMethod.getMethod:()Ljava/lang/reflect/Method;
       5: aload_1
       6: invokevirtual #68                 // Method org/springframework/web/method/HandlerMethod.getBeanType:()Ljava/lang/Class;
       9: invokevirtual #69                 // Method getMappingForMethod:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Lorg/springframework/web/servlet/mvc/method/RequestMappingInfo;
      12: astore        4
      14: aload         4
      16: ifnonnull     20
      19: return
      20: aload         4
      22: invokevirtual #70                 // Method org/springframework/web/servlet/mvc/method/RequestMappingInfo.getPatternsCondition:()Lorg/springframework/web/servlet/mvc/condition/PatternsRequestCondition;
      25: aload_2
      26: invokevirtual #71                 // Method org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.getMatchingCondition:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/mvc/condition/PatternsRequestCondition;
      29: invokevirtual #72                 // Method org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.getPatterns:()Ljava/util/Set;
      32: invokeinterface #73,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      37: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #49                 // class java/lang/String
      45: astore        5
      47: aload_2
      48: getstatic     #75                 // Field EFFECTIVE_LOOKUP_PATH_ATTRIBUTE:Ljava/lang/String;
      51: getstatic     #76                 // Field PARSER:Lorg/springframework/web/util/pattern/PathPatternParser;
      54: aload         5
      56: ldc           #77                 // String /{repository}
      58: aload_3
      59: invokevirtual #78                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      62: invokevirtual #79                 // Method org/springframework/web/util/pattern/PathPatternParser.parse:(Ljava/lang/String;)Lorg/springframework/web/util/pattern/PathPattern;
      65: invokeinterface #80,  3           // InterfaceMethod javax/servlet/http/HttpServletRequest.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      70: return

  private static org.springframework.web.cors.CorsConfiguration lambda$getCorsConfiguration$3(org.springframework.web.cors.CorsConfiguration, org.springframework.web.cors.CorsConfiguration);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #81                 // Method org/springframework/web/cors/CorsConfiguration.combine:(Lorg/springframework/web/cors/CorsConfiguration;)Lorg/springframework/web/cors/CorsConfiguration;
       5: areturn

  private java.util.Optional lambda$getCorsConfiguration$2(java.lang.String, org.springframework.data.repository.support.Repositories);
    Code:
       0: aload_0
       1: getfield      #17                 // Field corsConfigurationAccessor:Lorg/springframework/data/rest/webmvc/RepositoryRestHandlerMapping$RepositoryCorsConfigurationAccessor;
       4: aload_1
       5: invokevirtual #82                 // Method org/springframework/data/rest/webmvc/RepositoryRestHandlerMapping$RepositoryCorsConfigurationAccessor.findCorsConfiguration:(Ljava/lang/String;)Ljava/util/Optional;
       8: areturn

  private static boolean lambda$getCorsConfiguration$1(java.lang.String, org.springframework.data.repository.support.Repositories);
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       4: ireturn

  private static java.util.List lambda$extendInterceptors$0();
    Code:
       0: invokestatic  #83                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: areturn

  static java.lang.String access$000(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method getRepositoryBasePath:(Ljava/lang/String;)Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: new           #84                 // class org/springframework/web/util/pattern/PathPatternParser
       3: dup
       4: invokespecial #85                 // Method org/springframework/web/util/pattern/PathPatternParser."<init>":()V
       7: putstatic     #76                 // Field PARSER:Lorg/springframework/web/util/pattern/PathPatternParser;
      10: new           #86                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #88                 // class org/springframework/data/rest/webmvc/RepositoryRestHandlerMapping
      19: invokevirtual #89                 // Method java/lang/Class.getName:()Ljava/lang/String;
      22: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #91                 // String .EFFECTIVE_REPOSITORY_RESOURCE_LOOKUP_PATH
      27: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: putstatic     #75                 // Field EFFECTIVE_LOOKUP_PATH_ATTRIBUTE:Ljava/lang/String;
      36: return
}
