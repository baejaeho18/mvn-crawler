Compiled from "SpelPath.java"
class org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath extends org.springframework.data.rest.webmvc.json.patch.SpelPath {
  private static final java.lang.String INVALID_PATH_REFERENCE;

  private static final java.lang.String INVALID_COLLECTION_INDEX;

  private static final java.util.Map<org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath$CacheKey, org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath> TYPED_PATHS;

  private static final org.springframework.expression.EvaluationContext CONTEXT;

  private final org.springframework.expression.Expression expression;

  private final java.lang.Class<?> type;

  private org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath(org.springframework.data.rest.webmvc.json.patch.SpelPath$UntypedSpelPath, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #2                  // Field org/springframework/data/rest/webmvc/json/patch/SpelPath$UntypedSpelPath.path:Ljava/lang/String;
       5: aconst_null
       6: invokespecial #3                  // Method org/springframework/data/rest/webmvc/json/patch/SpelPath."<init>":(Ljava/lang/String;Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$1;)V
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field type:Ljava/lang/Class;
      14: aload_0
      15: aload_1
      16: getfield      #2                  // Field org/springframework/data/rest/webmvc/json/patch/SpelPath$UntypedSpelPath.path:Ljava/lang/String;
      19: aload_2
      20: invokestatic  #5                  // Method toSpel:(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/expression/Expression;
      23: putfield      #6                  // Field expression:Lorg/springframework/expression/Expression;
      26: return

  public static org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath of(org.springframework.data.rest.webmvc.json.patch.SpelPath$UntypedSpelPath, java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #7                  // String Path must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #9                  // String Type must not be null!
       9: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: getstatic     #10                 // Field TYPED_PATHS:Ljava/util/Map;
      15: aload_1
      16: aload_0
      17: invokestatic  #11                 // Method org/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$CacheKey.of:(Ljava/lang/Class;Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$UntypedSpelPath;)Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$CacheKey;
      20: invokedynamic #12,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      25: invokeinterface #13,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      30: checkcast     #14                 // class org/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath
      33: areturn

  public <T> T getValue(java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #15                 // String Target must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #6                  // Field expression:Lorg/springframework/expression/Expression;
      10: getstatic     #16                 // Field CONTEXT:Lorg/springframework/expression/EvaluationContext;
      13: aload_1
      14: invokeinterface #17,  3           // InterfaceMethod org/springframework/expression/Expression.getValue:(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn
      20: astore_2
      21: new           #19                 // class org/springframework/data/rest/webmvc/json/patch/PatchException
      24: dup
      25: ldc           #20                 // String Unable to get value from target
      27: aload_2
      28: invokespecial #21                 // Method org/springframework/data/rest/webmvc/json/patch/PatchException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      31: athrow
    Exception table:
       from    to  target type
           6    19    20   Class org/springframework/expression/ExpressionException

  public void setValue(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #15                 // String Target must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #6                  // Field expression:Lorg/springframework/expression/Expression;
      10: getstatic     #16                 // Field CONTEXT:Lorg/springframework/expression/EvaluationContext;
      13: aload_1
      14: aload_2
      15: invokeinterface #22,  4           // InterfaceMethod org/springframework/expression/Expression.setValue:(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  public java.lang.Class<?> getLeafType();
    Code:
       0: aload_0
       1: getfield      #23                 // Field path:Ljava/lang/String;
       4: aload_0
       5: getfield      #4                  // Field type:Ljava/lang/Class;
       8: invokestatic  #24                 // Method verifyPath:(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Optional;
      11: invokedynamic #25,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      16: invokevirtual #26                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      19: invokedynamic #27,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      24: invokevirtual #26                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      27: aload_0
      28: getfield      #4                  // Field type:Ljava/lang/Class;
      31: invokevirtual #28                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #29                 // class java/lang/Class
      37: areturn

  public java.lang.String getExpressionString();
    Code:
       0: aload_0
       1: getfield      #6                  // Field expression:Lorg/springframework/expression/Expression;
       4: invokeinterface #30,  1           // InterfaceMethod org/springframework/expression/Expression.getExpressionString:()Ljava/lang/String;
       9: areturn

  public java.lang.Class<?> getType(java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #31                 // String Root object must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #6                  // Field expression:Lorg/springframework/expression/Expression;
      10: getstatic     #16                 // Field CONTEXT:Lorg/springframework/expression/EvaluationContext;
      13: aload_1
      14: invokeinterface #32,  3           // InterfaceMethod org/springframework/expression/Expression.getValueType:(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Ljava/lang/Class;
      19: areturn
      20: astore_2
      21: getstatic     #34                 // Field org/springframework/expression/spel/SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS:Lorg/springframework/expression/spel/SpelMessage;
      24: aload_2
      25: invokevirtual #35                 // Method org/springframework/expression/spel/SpelEvaluationException.getMessageCode:()Lorg/springframework/expression/spel/SpelMessage;
      28: invokevirtual #36                 // Method org/springframework/expression/spel/SpelMessage.equals:(Ljava/lang/Object;)Z
      31: ifne          36
      34: aload_2
      35: athrow
      36: aload_0
      37: invokespecial #37                 // Method getParent:()Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath;
      40: aload_1
      41: invokevirtual #38                 // Method getValue:(Ljava/lang/Object;)Ljava/lang/Object;
      44: astore_3
      45: ldc           #39                 // class java/util/Collection
      47: aload_3
      48: invokevirtual #40                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      51: ifeq          67
      54: ldc           #39                 // class java/util/Collection
      56: aload_3
      57: invokevirtual #41                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      60: checkcast     #39                 // class java/util/Collection
      63: invokestatic  #42                 // Method org/springframework/util/CollectionUtils.findCommonElementType:(Ljava/util/Collection;)Ljava/lang/Class;
      66: areturn
      67: new           #43                 // class java/lang/IllegalArgumentException
      70: dup
      71: ldc           #44                 // String Cannot obtain type for path %s on %s!
      73: iconst_2
      74: anewarray     #45                 // class java/lang/Object
      77: dup
      78: iconst_0
      79: aload_0
      80: getfield      #23                 // Field path:Ljava/lang/String;
      83: aastore
      84: dup
      85: iconst_1
      86: aload_1
      87: aastore
      88: invokestatic  #46                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      91: invokespecial #47                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      94: athrow
    Exception table:
       from    to  target type
           6    19    20   Class org/springframework/expression/spel/SpelEvaluationException

  public void copyFrom(org.springframework.data.rest.webmvc.json.patch.SpelPath$UntypedSpelPath, java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #48                 // String Source path must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #49                 // String Source value must not be null!
       9: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_2
      14: aload_1
      15: aload_0
      16: getfield      #4                  // Field type:Ljava/lang/Class;
      19: invokevirtual #50                 // Method org/springframework/data/rest/webmvc/json/patch/SpelPath$UntypedSpelPath.bindTo:(Ljava/lang/Class;)Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath;
      22: aload_2
      23: invokevirtual #38                 // Method getValue:(Ljava/lang/Object;)Ljava/lang/Object;
      26: invokevirtual #51                 // Method addValue:(Ljava/lang/Object;Ljava/lang/Object;)V
      29: return

  public void moveFrom(org.springframework.data.rest.webmvc.json.patch.SpelPath$UntypedSpelPath, java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #48                 // String Source path must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #49                 // String Source value must not be null!
       9: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_2
      14: aload_1
      15: aload_0
      16: getfield      #4                  // Field type:Ljava/lang/Class;
      19: invokevirtual #50                 // Method org/springframework/data/rest/webmvc/json/patch/SpelPath$UntypedSpelPath.bindTo:(Ljava/lang/Class;)Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath;
      22: aload_2
      23: invokevirtual #52                 // Method removeFrom:(Ljava/lang/Object;)Ljava/lang/Object;
      26: invokevirtual #51                 // Method addValue:(Ljava/lang/Object;Ljava/lang/Object;)V
      29: return

  public java.lang.Object removeFrom(java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #15                 // String Target must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #53                 // Method getTargetListIndex:()Ljava/lang/Integer;
      10: astore_2
      11: aload_0
      12: aload_1
      13: invokevirtual #38                 // Method getValue:(Ljava/lang/Object;)Ljava/lang/Object;
      16: astore_3
      17: aload_2
      18: ifnonnull     68
      21: aload_0
      22: aload_1
      23: aconst_null
      24: invokevirtual #54                 // Method setValue:(Ljava/lang/Object;Ljava/lang/Object;)V
      27: aload_3
      28: areturn
      29: astore        4
      31: new           #19                 // class org/springframework/data/rest/webmvc/json/patch/PatchException
      34: dup
      35: new           #55                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #57                 // String Path \'
      44: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_0
      48: getfield      #23                 // Field path:Ljava/lang/String;
      51: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #59                 // String \' is not nullable.
      56: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: aload         4
      64: invokespecial #21                 // Method org/springframework/data/rest/webmvc/json/patch/PatchException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      67: athrow
      68: aload_0
      69: invokespecial #37                 // Method getParent:()Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath;
      72: aload_1
      73: invokevirtual #38                 // Method getValue:(Ljava/lang/Object;)Ljava/lang/Object;
      76: checkcast     #61                 // class java/util/List
      79: astore        4
      81: aload         4
      83: aload_2
      84: invokevirtual #62                 // Method java/lang/Integer.intValue:()I
      87: iflt          97
      90: aload_2
      91: invokevirtual #62                 // Method java/lang/Integer.intValue:()I
      94: goto          106
      97: aload         4
      99: invokeinterface #63,  1           // InterfaceMethod java/util/List.size:()I
     104: iconst_1
     105: isub
     106: invokeinterface #64,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     111: pop
     112: aload_3
     113: areturn
    Exception table:
       from    to  target type
          21    28    29   Class org/springframework/expression/spel/SpelEvaluationException

  public void addValue(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #37                 // Method getParent:()Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath;
       4: astore_3
       5: aload_3
       6: aload_1
       7: invokevirtual #38                 // Method getValue:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore        4
      12: aload_0
      13: invokespecial #53                 // Method getTargetListIndex:()Ljava/lang/Integer;
      16: astore        5
      18: aload         4
      20: ifnull        36
      23: aload         4
      25: instanceof    #61                 // class java/util/List
      28: ifeq          36
      31: aload         5
      33: ifnonnull     99
      36: aload_3
      37: aload_1
      38: invokespecial #65                 // Method getTypeDescriptor:(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
      41: astore        6
      43: aload         6
      45: invokevirtual #66                 // Method org/springframework/core/convert/TypeDescriptor.isCollection:()Z
      48: ifeq          90
      51: ldc           #39                 // class java/util/Collection
      53: aload_2
      54: invokevirtual #40                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      57: ifne          90
      60: aload         6
      62: invokevirtual #67                 // Method org/springframework/core/convert/TypeDescriptor.getType:()Ljava/lang/Class;
      65: iconst_1
      66: invokestatic  #68                 // Method org/springframework/core/CollectionFactory.createCollection:(Ljava/lang/Class;I)Ljava/util/Collection;
      69: astore        7
      71: aload         7
      73: aload_2
      74: invokeinterface #69,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      79: pop
      80: aload_3
      81: aload_1
      82: aload         7
      84: invokevirtual #54                 // Method setValue:(Ljava/lang/Object;Ljava/lang/Object;)V
      87: goto          96
      90: aload_0
      91: aload_1
      92: aload_2
      93: invokevirtual #54                 // Method setValue:(Ljava/lang/Object;Ljava/lang/Object;)V
      96: goto          190
      99: aload_3
     100: aload_1
     101: invokevirtual #38                 // Method getValue:(Ljava/lang/Object;)Ljava/lang/Object;
     104: checkcast     #61                 // class java/util/List
     107: astore        6
     109: aload         5
     111: invokevirtual #62                 // Method java/lang/Integer.intValue:()I
     114: aload         6
     116: invokeinterface #63,  1           // InterfaceMethod java/util/List.size:()I
     121: if_icmple     159
     124: new           #19                 // class org/springframework/data/rest/webmvc/json/patch/PatchException
     127: dup
     128: ldc           #70                 // String Invalid collection index %s for collection of size %s. Use \'…/-\' or the collection\'s actual size as index to append to it!
     130: iconst_2
     131: anewarray     #45                 // class java/lang/Object
     134: dup
     135: iconst_0
     136: aload         5
     138: aastore
     139: dup
     140: iconst_1
     141: aload         6
     143: invokeinterface #63,  1           // InterfaceMethod java/util/List.size:()I
     148: invokestatic  #71                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     151: aastore
     152: invokestatic  #46                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     155: invokespecial #72                 // Method org/springframework/data/rest/webmvc/json/patch/PatchException."<init>":(Ljava/lang/String;)V
     158: athrow
     159: aload         6
     161: aload         5
     163: invokevirtual #62                 // Method java/lang/Integer.intValue:()I
     166: iflt          177
     169: aload         5
     171: invokevirtual #62                 // Method java/lang/Integer.intValue:()I
     174: goto          184
     177: aload         6
     179: invokeinterface #63,  1           // InterfaceMethod java/util/List.size:()I
     184: aload_2
     185: invokeinterface #73,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
     190: return

  public java.lang.String toString();
    Code:
       0: ldc           #74                 // String %s on %s -> %s
       2: iconst_3
       3: anewarray     #45                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #23                 // Field path:Ljava/lang/String;
      12: aastore
      13: dup
      14: iconst_1
      15: aload_0
      16: getfield      #4                  // Field type:Ljava/lang/Class;
      19: invokevirtual #75                 // Method java/lang/Class.getName:()Ljava/lang/String;
      22: aastore
      23: dup
      24: iconst_2
      25: aload_0
      26: invokevirtual #76                 // Method getExpressionString:()Ljava/lang/String;
      29: aastore
      30: invokestatic  #46                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: areturn

  private org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath getParent();
    Code:
       0: aload_0
       1: getfield      #23                 // Field path:Ljava/lang/String;
       4: iconst_0
       5: aload_0
       6: getfield      #23                 // Field path:Ljava/lang/String;
       9: bipush        47
      11: invokevirtual #77                 // Method java/lang/String.lastIndexOf:(I)I
      14: invokevirtual #78                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      17: invokestatic  #79                 // Method org/springframework/data/rest/webmvc/json/patch/SpelPath.untyped:(Ljava/lang/String;)Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$UntypedSpelPath;
      20: aload_0
      21: getfield      #4                  // Field type:Ljava/lang/Class;
      24: invokevirtual #50                 // Method org/springframework/data/rest/webmvc/json/patch/SpelPath$UntypedSpelPath.bindTo:(Ljava/lang/Class;)Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath;
      27: areturn

  private org.springframework.core.convert.TypeDescriptor getTypeDescriptor(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field expression:Lorg/springframework/expression/Expression;
       4: getstatic     #16                 // Field CONTEXT:Lorg/springframework/expression/EvaluationContext;
       7: aload_1
       8: invokeinterface #80,  3           // InterfaceMethod org/springframework/expression/Expression.getValueTypeDescriptor:(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
      13: areturn

  private java.lang.Integer getTargetListIndex();
    Code:
       0: aload_0
       1: getfield      #23                 // Field path:Ljava/lang/String;
       4: aload_0
       5: getfield      #23                 // Field path:Ljava/lang/String;
       8: bipush        47
      10: invokevirtual #77                 // Method java/lang/String.lastIndexOf:(I)I
      13: iconst_1
      14: iadd
      15: invokevirtual #81                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      18: astore_1
      19: ldc           #82                 // String -
      21: aload_1
      22: invokevirtual #83                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifeq          33
      28: iconst_m1
      29: invokestatic  #71                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: areturn
      33: aload_1
      34: invokestatic  #84                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      37: invokestatic  #71                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: areturn
      41: astore_2
      42: aconst_null
      43: areturn
    Exception table:
       from    to  target type
          33    40    41   Class java/lang/NumberFormatException

  private static java.util.Optional<org.springframework.data.mapping.PropertyPath> verifyPath(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #7                  // String Path must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #9                  // String Type must not be null!
       9: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: ldc           #86                 // String ^/\\d+
      15: ldc           #87                 // String
      17: invokevirtual #88                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      20: astore_2
      21: aload_2
      22: ldc           #89                 // String /
      24: invokevirtual #90                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      27: invokestatic  #91                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      30: invokedynamic #92,  0             // InvokeDynamic #3:test:()Ljava/util/function/Predicate;
      35: invokeinterface #93,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      40: invokedynamic #94,  0             // InvokeDynamic #4:test:()Ljava/util/function/Predicate;
      45: invokeinterface #93,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      50: astore_3
      51: aload_3
      52: invokestatic  #95                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      55: aload_1
      56: invokedynamic #96,  0             // InvokeDynamic #5:apply:(Ljava/lang/Class;)Ljava/util/function/BiFunction;
      61: invokedynamic #97,  0             // InvokeDynamic #6:apply:()Ljava/util/function/BinaryOperator;
      66: invokeinterface #98,  4           // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;
      71: checkcast     #99                 // class java/util/Optional
      74: invokedynamic #100,  0            // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      79: invokevirtual #26                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      82: areturn
      83: astore        4
      85: new           #19                 // class org/springframework/data/rest/webmvc/json/patch/PatchException
      88: dup
      89: ldc           #102                // String Invalid path reference %s on type %s!
      91: iconst_2
      92: anewarray     #45                 // class java/lang/Object
      95: dup
      96: iconst_0
      97: aload         4
      99: invokevirtual #103                // Method org/springframework/data/mapping/PropertyReferenceException.getPropertyName:()Ljava/lang/String;
     102: aastore
     103: dup
     104: iconst_1
     105: aload_1
     106: aastore
     107: invokestatic  #46                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     110: aload         4
     112: invokespecial #21                 // Method org/springframework/data/rest/webmvc/json/patch/PatchException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
     115: athrow
    Exception table:
       from    to  target type
          51    82    83   Class org/springframework/data/mapping/PropertyReferenceException

  private static org.springframework.expression.Expression toSpel(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #89                 // String /
       3: invokevirtual #90                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: invokestatic  #91                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       9: invokedynamic #104,  0            // InvokeDynamic #8:test:()Ljava/util/function/Predicate;
      14: invokeinterface #93,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      19: invokestatic  #95                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      22: aload_1
      23: invokedynamic #105,  0            // InvokeDynamic #9:apply:(Ljava/lang/Class;)Ljava/util/function/BiFunction;
      28: invokedynamic #106,  0            // InvokeDynamic #10:apply:()Ljava/util/function/BinaryOperator;
      33: invokeinterface #98,  4           // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;
      38: checkcast     #99                 // class java/util/Optional
      41: invokedynamic #107,  0            // InvokeDynamic #11:apply:()Ljava/util/function/Function;
      46: invokevirtual #26                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      49: ldc           #108                // String #this
      51: invokevirtual #28                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #109                // class java/lang/String
      57: astore_2
      58: invokestatic  #110                // Method org/springframework/data/rest/webmvc/json/patch/SpelPath.access$100:()Lorg/springframework/expression/spel/standard/SpelExpressionParser;
      61: aload_2
      62: invokevirtual #111                // Method org/springframework/expression/spel/standard/SpelExpressionParser.parseExpression:(Ljava/lang/String;)Lorg/springframework/expression/Expression;
      65: areturn

  private static org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath$SpelExpressionBuilder nextOrCreate(java.util.Optional<org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath$SpelExpressionBuilder>, java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #112,  0            // InvokeDynamic #12:apply:(Ljava/lang/String;)Ljava/util/function/Function;
       7: invokevirtual #26                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      10: aload_2
      11: aload_1
      12: invokedynamic #113,  0            // InvokeDynamic #13:get:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/function/Supplier;
      17: invokevirtual #114                // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      20: checkcast     #115                // class org/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$SpelExpressionBuilder
      23: areturn

  private static org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath$SkippedPropertyPath createOrSkip(java.util.Optional<org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath$SkippedPropertyPath>, java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #116,  0            // InvokeDynamic #14:apply:(Ljava/lang/String;)Ljava/util/function/Function;
       7: invokevirtual #26                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      10: aload_1
      11: aload_2
      12: invokedynamic #117,  0            // InvokeDynamic #15:get:(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/function/Supplier;
      17: invokevirtual #114                // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      20: checkcast     #118                // class org/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$SkippedPropertyPath
      23: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #14                 // class org/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #14                 // class org/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #119                // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: aload_1
      33: invokespecial #120                // Method org/springframework/data/rest/webmvc/json/patch/SpelPath.equals:(Ljava/lang/Object;)Z
      36: ifne          41
      39: iconst_0
      40: ireturn
      41: aload_0
      42: getfield      #6                  // Field expression:Lorg/springframework/expression/Expression;
      45: astore_3
      46: aload_2
      47: getfield      #6                  // Field expression:Lorg/springframework/expression/Expression;
      50: astore        4
      52: aload_3
      53: ifnonnull     64
      56: aload         4
      58: ifnull        75
      61: goto          73
      64: aload_3
      65: aload         4
      67: invokevirtual #121                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      70: ifne          75
      73: iconst_0
      74: ireturn
      75: aload_0
      76: getfield      #4                  // Field type:Ljava/lang/Class;
      79: astore        5
      81: aload_2
      82: getfield      #4                  // Field type:Ljava/lang/Class;
      85: astore        6
      87: aload         5
      89: ifnonnull     100
      92: aload         6
      94: ifnull        112
      97: goto          110
     100: aload         5
     102: aload         6
     104: invokevirtual #121                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     107: ifne          112
     110: iconst_0
     111: ireturn
     112: iconst_1
     113: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #14                 // class org/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: aload_0
       4: invokespecial #122                // Method org/springframework/data/rest/webmvc/json/patch/SpelPath.hashCode:()I
       7: istore_2
       8: aload_0
       9: getfield      #6                  // Field expression:Lorg/springframework/expression/Expression;
      12: astore_3
      13: iload_2
      14: bipush        59
      16: imul
      17: aload_3
      18: ifnonnull     26
      21: bipush        43
      23: goto          30
      26: aload_3
      27: invokevirtual #123                // Method java/lang/Object.hashCode:()I
      30: iadd
      31: istore_2
      32: aload_0
      33: getfield      #4                  // Field type:Ljava/lang/Class;
      36: astore        4
      38: iload_2
      39: bipush        59
      41: imul
      42: aload         4
      44: ifnonnull     52
      47: bipush        43
      49: goto          57
      52: aload         4
      54: invokevirtual #123                // Method java/lang/Object.hashCode:()I
      57: iadd
      58: istore_2
      59: iload_2
      60: ireturn

  private static org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath$SkippedPropertyPath lambda$createOrSkip$12(java.lang.String, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #124                // Method org/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$SkippedPropertyPath.of:(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$SkippedPropertyPath;
       5: areturn

  private static org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath$SkippedPropertyPath lambda$createOrSkip$11(java.lang.String, org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath$SkippedPropertyPath);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #125                // Method org/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$SkippedPropertyPath.nested:(Ljava/lang/String;)Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$SkippedPropertyPath;
       5: areturn

  private static org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath$SpelExpressionBuilder lambda$nextOrCreate$10(java.lang.Class, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #126                // Method org/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$SpelExpressionBuilder.of:(Ljava/lang/Class;)Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$SpelExpressionBuilder;
       4: aload_1
       5: invokevirtual #127                // Method org/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$SpelExpressionBuilder.next:(Ljava/lang/String;)Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$SpelExpressionBuilder;
       8: areturn

  private static org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath$SpelExpressionBuilder lambda$nextOrCreate$9(java.lang.String, org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath$SpelExpressionBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #127                // Method org/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$SpelExpressionBuilder.next:(Ljava/lang/String;)Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$SpelExpressionBuilder;
       5: areturn

  private static java.lang.String lambda$toSpel$8(org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath$SpelExpressionBuilder);
    Code:
       0: aload_0
       1: invokevirtual #128                // Method org/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$SpelExpressionBuilder.getExpression:()Ljava/lang/String;
       4: areturn

  private static java.util.Optional lambda$toSpel$7(java.util.Optional, java.util.Optional);
    Code:
       0: aload_1
       1: areturn

  private static java.util.Optional lambda$toSpel$6(java.lang.Class, java.util.Optional, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: invokestatic  #129                // Method nextOrCreate:(Ljava/util/Optional;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$SpelExpressionBuilder;
       6: invokestatic  #130                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       9: areturn

  private static boolean lambda$toSpel$5(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #131                // Method java/lang/String.isEmpty:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private static java.util.Optional lambda$verifyPath$4(java.util.Optional, java.util.Optional);
    Code:
       0: aload_1
       1: areturn

  private static java.util.Optional lambda$verifyPath$3(java.lang.Class, java.util.Optional, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: invokestatic  #132                // Method createOrSkip:(Ljava/util/Optional;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$SkippedPropertyPath;
       6: invokestatic  #130                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       9: areturn

  private static boolean lambda$verifyPath$2(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #131                // Method java/lang/String.isEmpty:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private static boolean lambda$verifyPath$1(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #82                 // String -
       3: invokevirtual #83                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private static org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath lambda$of$0(org.springframework.data.rest.webmvc.json.patch.SpelPath$TypedSpelPath$CacheKey);
    Code:
       0: new           #14                 // class org/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath
       3: dup
       4: aload_0
       5: invokestatic  #133                // Method org/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$CacheKey.access$200:(Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$CacheKey;)Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$UntypedSpelPath;
       8: aload_0
       9: invokestatic  #134                // Method org/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$CacheKey.access$300:(Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$TypedSpelPath$CacheKey;)Ljava/lang/Class;
      12: invokespecial #135                // Method "<init>":(Lorg/springframework/data/rest/webmvc/json/patch/SpelPath$UntypedSpelPath;Ljava/lang/Class;)V
      15: areturn

  static {};
    Code:
       0: new           #136                // class org/springframework/util/ConcurrentReferenceHashMap
       3: dup
       4: bipush        32
       6: invokespecial #137                // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":(I)V
       9: putstatic     #10                 // Field TYPED_PATHS:Ljava/util/Map;
      12: invokestatic  #138                // Method org/springframework/expression/spel/support/SimpleEvaluationContext.forReadWriteDataBinding:()Lorg/springframework/expression/spel/support/SimpleEvaluationContext$Builder;
      15: invokevirtual #139                // Method org/springframework/expression/spel/support/SimpleEvaluationContext$Builder.build:()Lorg/springframework/expression/spel/support/SimpleEvaluationContext;
      18: putstatic     #16                 // Field CONTEXT:Lorg/springframework/expression/EvaluationContext;
      21: return
}
