Compiled from "WrappedProperties.java"
class org.springframework.data.rest.webmvc.json.WrappedProperties {
  private static final com.fasterxml.jackson.databind.introspect.ClassIntrospector INTROSPECTOR;

  private static final com.fasterxml.jackson.databind.AnnotationIntrospector ANNOTATION_INTROSPECTOR;

  private final java.util.Map<java.lang.String, java.util.List<org.springframework.data.mapping.PersistentProperty<?>>> fieldNameToProperties;

  private org.springframework.data.rest.webmvc.json.WrappedProperties(java.util.Map<java.lang.String, java.util.List<org.springframework.data.mapping.PersistentProperty<?>>>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/HashMap
       8: dup
       9: aload_1
      10: invokespecial #5                  // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      13: putfield      #6                  // Field fieldNameToProperties:Ljava/util/Map;
      16: return

  public static org.springframework.data.rest.webmvc.json.WrappedProperties fromJacksonProperties(org.springframework.data.mapping.context.PersistentEntities, org.springframework.data.mapping.PersistentEntity<?, ?>, com.fasterxml.jackson.databind.ObjectMapper);
    Code:
       0: aload_1
       1: ldc           #7                  // String PersistentEntity must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #9                  // class org/springframework/data/rest/webmvc/json/WrappedProperties$JacksonUnwrappedPropertiesResolver
       9: dup
      10: aload_0
      11: aload_2
      12: invokespecial #10                 // Method org/springframework/data/rest/webmvc/json/WrappedProperties$JacksonUnwrappedPropertiesResolver."<init>":(Lorg/springframework/data/mapping/context/PersistentEntities;Lcom/fasterxml/jackson/databind/ObjectMapper;)V
      15: astore_3
      16: new           #11                 // class org/springframework/data/rest/webmvc/json/WrappedProperties
      19: dup
      20: aload_3
      21: aload_1
      22: invokeinterface #12,  1           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getType:()Ljava/lang/Class;
      27: invokevirtual #13                 // Method org/springframework/data/rest/webmvc/json/WrappedProperties$JacksonUnwrappedPropertiesResolver.findUnwrappedPropertyPaths:(Ljava/lang/Class;)Ljava/util/Map;
      30: invokespecial #14                 // Method "<init>":(Ljava/util/Map;)V
      33: areturn

  public static org.springframework.data.rest.webmvc.json.WrappedProperties none();
    Code:
       0: new           #11                 // class org/springframework/data/rest/webmvc/json/WrappedProperties
       3: dup
       4: invokestatic  #15                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       7: invokespecial #14                 // Method "<init>":(Ljava/util/Map;)V
      10: areturn

  public boolean hasPersistentPropertiesForField(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #16                 // String Field name must not be null or empty!
       3: invokestatic  #17                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #6                  // Field fieldNameToProperties:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #18,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ireturn

  public java.util.List<org.springframework.data.mapping.PersistentProperty<?>> getPersistentProperties(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #16                 // String Field name must not be null or empty!
       3: invokestatic  #17                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #19                 // Method hasPersistentPropertiesForField:(Ljava/lang/String;)Z
      11: ifeq          33
      14: aload_0
      15: getfield      #6                  // Field fieldNameToProperties:Ljava/util/Map;
      18: aload_1
      19: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #21                 // class java/util/List
      27: invokestatic  #22                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      30: goto          36
      33: invokestatic  #23                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      36: areturn

  static com.fasterxml.jackson.databind.AnnotationIntrospector access$000();
    Code:
       0: getstatic     #2                  // Field ANNOTATION_INTROSPECTOR:Lcom/fasterxml/jackson/databind/AnnotationIntrospector;
       3: areturn

  static com.fasterxml.jackson.databind.introspect.ClassIntrospector access$100();
    Code:
       0: getstatic     #1                  // Field INTROSPECTOR:Lcom/fasterxml/jackson/databind/introspect/ClassIntrospector;
       3: areturn

  static {};
    Code:
       0: new           #24                 // class com/fasterxml/jackson/databind/introspect/BasicClassIntrospector
       3: dup
       4: invokespecial #25                 // Method com/fasterxml/jackson/databind/introspect/BasicClassIntrospector."<init>":()V
       7: putstatic     #1                  // Field INTROSPECTOR:Lcom/fasterxml/jackson/databind/introspect/ClassIntrospector;
      10: new           #26                 // class com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector
      13: dup
      14: invokespecial #27                 // Method com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector."<init>":()V
      17: putstatic     #2                  // Field ANNOTATION_INTROSPECTOR:Lcom/fasterxml/jackson/databind/AnnotationIntrospector;
      20: return
}
