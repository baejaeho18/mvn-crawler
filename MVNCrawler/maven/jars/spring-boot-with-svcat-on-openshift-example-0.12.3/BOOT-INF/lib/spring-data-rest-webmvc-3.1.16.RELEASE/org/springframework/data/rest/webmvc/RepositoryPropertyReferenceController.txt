Compiled from "RepositoryPropertyReferenceController.java"
class org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController extends org.springframework.data.rest.webmvc.AbstractRepositoryRestController implements org.springframework.context.ApplicationEventPublisherAware {
  private static final java.lang.String BASE_MAPPING;

  private static final java.util.Collection<org.springframework.http.HttpMethod> AUGMENTING_METHODS;

  private final org.springframework.data.repository.support.Repositories repositories;

  private final org.springframework.data.repository.support.RepositoryInvokerFactory repositoryInvokerFactory;

  private org.springframework.context.ApplicationEventPublisher publisher;

  public org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController(org.springframework.data.repository.support.Repositories, org.springframework.data.repository.support.RepositoryInvokerFactory, org.springframework.data.web.PagedResourcesAssembler<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #2                  // Method org/springframework/data/rest/webmvc/AbstractRepositoryRestController."<init>":(Lorg/springframework/data/web/PagedResourcesAssembler;)V
       5: aload_0
       6: aload_1
       7: putfield      #1                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
      10: aload_0
      11: aload_2
      12: putfield      #3                  // Field repositoryInvokerFactory:Lorg/springframework/data/repository/support/RepositoryInvokerFactory;
      15: return

  public void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field publisher:Lorg/springframework/context/ApplicationEventPublisher;
       5: return

  public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation, java.io.Serializable, java.lang.String, org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception;
    Code:
       0: new           #5                  // class org/springframework/http/HttpHeaders
       3: dup
       4: invokespecial #6                  // Method org/springframework/http/HttpHeaders."<init>":()V
       7: astore        5
       9: aload_0
      10: aload         4
      12: aload         5
      14: invokedynamic #7,  0              // InvokeDynamic #0:apply:(Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController;Lorg/springframework/data/rest/webmvc/PersistentEntityResourceAssembler;Lorg/springframework/http/HttpHeaders;)Ljava/util/function/Function;
      19: astore        6
      21: getstatic     #8                  // Field org/springframework/http/HttpStatus.OK:Lorg/springframework/http/HttpStatus;
      24: aload         5
      26: aload_0
      27: aload_1
      28: aload_2
      29: aload_3
      30: aload         6
      32: getstatic     #9                  // Field org/springframework/http/HttpMethod.GET:Lorg/springframework/http/HttpMethod;
      35: invokespecial #10                 // Method doWithReferencedProperty:(Lorg/springframework/data/rest/webmvc/RootResourceInformation;Ljava/io/Serializable;Ljava/lang/String;Ljava/util/function/Function;Lorg/springframework/http/HttpMethod;)Ljava/util/Optional;
      38: invokestatic  #11                 // Method org/springframework/data/rest/webmvc/ControllerUtils.toResponseEntity:(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;Ljava/util/Optional;)Lorg/springframework/http/ResponseEntity;
      41: areturn

  public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation, java.io.Serializable, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #12,  0             // InvokeDynamic #1:apply:(Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController;Lorg/springframework/data/rest/webmvc/RootResourceInformation;)Ljava/util/function/Function;
       7: astore        4
       9: aload_0
      10: aload_1
      11: aload_2
      12: aload_3
      13: aload         4
      15: getstatic     #13                 // Field org/springframework/http/HttpMethod.DELETE:Lorg/springframework/http/HttpMethod;
      18: invokespecial #10                 // Method doWithReferencedProperty:(Lorg/springframework/data/rest/webmvc/RootResourceInformation;Ljava/io/Serializable;Ljava/lang/String;Ljava/util/function/Function;Lorg/springframework/http/HttpMethod;)Ljava/util/Optional;
      21: pop
      22: getstatic     #14                 // Field org/springframework/http/HttpStatus.NO_CONTENT:Lorg/springframework/http/HttpStatus;
      25: invokestatic  #15                 // Method org/springframework/data/rest/webmvc/ControllerUtils.toEmptyResponse:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/http/ResponseEntity;
      28: areturn

  public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation, java.io.Serializable, java.lang.String, java.lang.String, org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception;
    Code:
       0: new           #5                  // class org/springframework/http/HttpHeaders
       3: dup
       4: invokespecial #6                  // Method org/springframework/http/HttpHeaders."<init>":()V
       7: astore        6
       9: aload         4
      11: aload         5
      13: aload         6
      15: invokedynamic #16,  0             // InvokeDynamic #2:apply:(Ljava/lang/String;Lorg/springframework/data/rest/webmvc/PersistentEntityResourceAssembler;Lorg/springframework/http/HttpHeaders;)Ljava/util/function/Function;
      20: astore        7
      22: getstatic     #8                  // Field org/springframework/http/HttpStatus.OK:Lorg/springframework/http/HttpStatus;
      25: aload         6
      27: aload_0
      28: aload_1
      29: aload_2
      30: aload_3
      31: aload         7
      33: getstatic     #9                  // Field org/springframework/http/HttpMethod.GET:Lorg/springframework/http/HttpMethod;
      36: invokespecial #10                 // Method doWithReferencedProperty:(Lorg/springframework/data/rest/webmvc/RootResourceInformation;Ljava/io/Serializable;Ljava/lang/String;Ljava/util/function/Function;Lorg/springframework/http/HttpMethod;)Ljava/util/Optional;
      39: invokestatic  #11                 // Method org/springframework/data/rest/webmvc/ControllerUtils.toResponseEntity:(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;Ljava/util/Optional;)Lorg/springframework/http/ResponseEntity;
      42: areturn

  public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation, java.io.Serializable, java.lang.String, org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #17                 // Method followPropertyReference:(Lorg/springframework/data/rest/webmvc/RootResourceInformation;Ljava/io/Serializable;Ljava/lang/String;Lorg/springframework/data/rest/webmvc/PersistentEntityResourceAssembler;)Lorg/springframework/http/ResponseEntity;
       9: astore        5
      11: aload         5
      13: invokevirtual #18                 // Method org/springframework/http/ResponseEntity.getStatusCode:()Lorg/springframework/http/HttpStatus;
      16: getstatic     #8                  // Field org/springframework/http/HttpStatus.OK:Lorg/springframework/http/HttpStatus;
      19: if_acmpeq     25
      22: aload         5
      24: areturn
      25: aload_1
      26: invokevirtual #19                 // Method org/springframework/data/rest/webmvc/RootResourceInformation.getResourceMetadata:()Lorg/springframework/data/rest/core/mapping/ResourceMetadata;
      29: astore        6
      31: aload_1
      32: invokevirtual #20                 // Method org/springframework/data/rest/webmvc/RootResourceInformation.getPersistentEntity:()Lorg/springframework/data/mapping/PersistentEntity;
      35: aload_3
      36: invokeinterface #21,  2           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getRequiredPersistentProperty:(Ljava/lang/String;)Lorg/springframework/data/mapping/PersistentProperty;
      41: astore        7
      43: aload         6
      45: aload         7
      47: invokeinterface #22,  2           // InterfaceMethod org/springframework/data/rest/core/mapping/ResourceMetadata.getMappingFor:(Lorg/springframework/data/mapping/PersistentProperty;)Lorg/springframework/data/rest/core/mapping/ResourceMapping;
      52: astore        8
      54: aload         5
      56: invokevirtual #23                 // Method org/springframework/http/ResponseEntity.getBody:()Ljava/lang/Object;
      59: checkcast     #24                 // class org/springframework/hateoas/ResourceSupport
      62: astore        9
      64: new           #25                 // class java/util/ArrayList
      67: dup
      68: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
      71: astore        10
      73: ldc           #27                 // class org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController
      75: iconst_0
      76: anewarray     #28                 // class java/lang/Object
      79: invokestatic  #29                 // Method org/springframework/hateoas/mvc/ControllerLinkBuilder.methodOn:(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
      82: checkcast     #27                 // class org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController
      85: aload_1
      86: aload_2
      87: aload_3
      88: aload         4
      90: invokevirtual #17                 // Method followPropertyReference:(Lorg/springframework/data/rest/webmvc/RootResourceInformation;Ljava/io/Serializable;Ljava/lang/String;Lorg/springframework/data/rest/webmvc/PersistentEntityResourceAssembler;)Lorg/springframework/http/ResponseEntity;
      93: invokestatic  #30                 // Method org/springframework/hateoas/mvc/ControllerLinkBuilder.linkTo:(Ljava/lang/Object;)Lorg/springframework/hateoas/mvc/ControllerLinkBuilder;
      96: astore        11
      98: aload         9
     100: instanceof    #31                 // class org/springframework/hateoas/Resource
     103: ifeq          288
     106: aload         9
     108: checkcast     #31                 // class org/springframework/hateoas/Resource
     111: invokevirtual #32                 // Method org/springframework/hateoas/Resource.getContent:()Ljava/lang/Object;
     114: astore        12
     116: aload         12
     118: instanceof    #33                 // class java/lang/Iterable
     121: ifeq          184
     124: aload         12
     126: checkcast     #33                 // class java/lang/Iterable
     129: invokeinterface #34,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     134: astore        13
     136: aload         13
     138: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     143: ifeq          181
     146: aload         13
     148: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     153: checkcast     #31                 // class org/springframework/hateoas/Resource
     156: astore        14
     158: aload         10
     160: aload         11
     162: aload         8
     164: invokeinterface #37,  1           // InterfaceMethod org/springframework/data/rest/core/mapping/ResourceMapping.getRel:()Ljava/lang/String;
     169: invokevirtual #38                 // Method org/springframework/hateoas/mvc/ControllerLinkBuilder.withRel:(Ljava/lang/String;)Lorg/springframework/hateoas/Link;
     172: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     177: pop
     178: goto          136
     181: goto          285
     184: aload         12
     186: instanceof    #40                 // class java/util/Map
     189: ifeq          285
     192: aload         12
     194: checkcast     #40                 // class java/util/Map
     197: astore        13
     199: aload         13
     201: invokeinterface #41,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     206: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     211: astore        14
     213: aload         14
     215: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     220: ifeq          285
     223: aload         14
     225: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     230: checkcast     #43                 // class java/util/Map$Entry
     233: astore        15
     235: new           #44                 // class org/springframework/hateoas/Link
     238: dup
     239: aload         15
     241: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     246: checkcast     #31                 // class org/springframework/hateoas/Resource
     249: ldc           #46                 // String self
     251: invokevirtual #47                 // Method org/springframework/hateoas/Resource.getLink:(Ljava/lang/String;)Lorg/springframework/hateoas/Link;
     254: invokevirtual #48                 // Method org/springframework/hateoas/Link.getHref:()Ljava/lang/String;
     257: aload         15
     259: invokeinterface #49,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     264: invokevirtual #50                 // Method java/lang/Object.toString:()Ljava/lang/String;
     267: invokespecial #51                 // Method org/springframework/hateoas/Link."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     270: astore        16
     272: aload         10
     274: aload         16
     276: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     281: pop
     282: goto          213
     285: goto          308
     288: aload         10
     290: aload         11
     292: aload         8
     294: invokeinterface #37,  1           // InterfaceMethod org/springframework/data/rest/core/mapping/ResourceMapping.getRel:()Ljava/lang/String;
     299: invokevirtual #38                 // Method org/springframework/hateoas/mvc/ControllerLinkBuilder.withRel:(Ljava/lang/String;)Lorg/springframework/hateoas/Link;
     302: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     307: pop
     308: getstatic     #8                  // Field org/springframework/http/HttpStatus.OK:Lorg/springframework/http/HttpStatus;
     311: aconst_null
     312: new           #31                 // class org/springframework/hateoas/Resource
     315: dup
     316: getstatic     #52                 // Field org/springframework/data/rest/webmvc/ControllerUtils.EMPTY_RESOURCE_LIST:Ljava/lang/Iterable;
     319: aload         10
     321: invokespecial #53                 // Method org/springframework/hateoas/Resource."<init>":(Ljava/lang/Object;Ljava/lang/Iterable;)V
     324: invokestatic  #54                 // Method org/springframework/data/rest/webmvc/ControllerUtils.toResponseEntity:(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;Lorg/springframework/hateoas/ResourceSupport;)Lorg/springframework/http/ResponseEntity;
     327: areturn

  public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation, org.springframework.http.HttpMethod, org.springframework.hateoas.Resources<java.lang.Object>, java.io.Serializable, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_3
       1: ifnonnull     21
       4: new           #55                 // class org/springframework/hateoas/Resources
       7: dup
       8: invokestatic  #56                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      11: iconst_0
      12: anewarray     #44                 // class org/springframework/hateoas/Link
      15: invokespecial #57                 // Method org/springframework/hateoas/Resources."<init>":(Ljava/lang/Iterable;[Lorg/springframework/hateoas/Link;)V
      18: goto          22
      21: aload_3
      22: astore        6
      24: aload_1
      25: invokevirtual #58                 // Method org/springframework/data/rest/webmvc/RootResourceInformation.getInvoker:()Lorg/springframework/data/repository/support/RepositoryInvoker;
      28: astore        7
      30: aload_0
      31: aload_2
      32: aload         6
      34: aload         7
      36: invokedynamic #59,  0             // InvokeDynamic #3:apply:(Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController;Lorg/springframework/http/HttpMethod;Lorg/springframework/hateoas/Resources;Lorg/springframework/data/repository/support/RepositoryInvoker;)Ljava/util/function/Function;
      41: astore        8
      43: aload_0
      44: aload_1
      45: aload         4
      47: aload         5
      49: aload         8
      51: aload_2
      52: invokespecial #10                 // Method doWithReferencedProperty:(Lorg/springframework/data/rest/webmvc/RootResourceInformation;Ljava/io/Serializable;Ljava/lang/String;Ljava/util/function/Function;Lorg/springframework/http/HttpMethod;)Ljava/util/Optional;
      55: pop
      56: getstatic     #14                 // Field org/springframework/http/HttpStatus.NO_CONTENT:Lorg/springframework/http/HttpStatus;
      59: invokestatic  #15                 // Method org/springframework/data/rest/webmvc/ControllerUtils.toEmptyResponse:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/http/ResponseEntity;
      62: areturn

  public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation, java.io.Serializable, java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload         4
       3: aload_1
       4: invokedynamic #60,  0             // InvokeDynamic #4:apply:(Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController;Ljava/lang/String;Lorg/springframework/data/rest/webmvc/RootResourceInformation;)Ljava/util/function/Function;
       9: astore        5
      11: aload_0
      12: aload_1
      13: aload_2
      14: aload_3
      15: aload         5
      17: getstatic     #13                 // Field org/springframework/http/HttpMethod.DELETE:Lorg/springframework/http/HttpMethod;
      20: invokespecial #10                 // Method doWithReferencedProperty:(Lorg/springframework/data/rest/webmvc/RootResourceInformation;Ljava/io/Serializable;Ljava/lang/String;Ljava/util/function/Function;Lorg/springframework/http/HttpMethod;)Ljava/util/Optional;
      23: pop
      24: getstatic     #14                 // Field org/springframework/http/HttpStatus.NO_CONTENT:Lorg/springframework/http/HttpStatus;
      27: invokestatic  #15                 // Method org/springframework/data/rest/webmvc/ControllerUtils.toEmptyResponse:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/http/ResponseEntity;
      30: areturn

  private java.lang.Object loadPropertyValue(java.lang.Class<?>, org.springframework.hateoas.Link);
    Code:
       0: aload_2
       1: iconst_0
       2: anewarray     #28                 // class java/lang/Object
       5: invokevirtual #61                 // Method org/springframework/hateoas/Link.expand:([Ljava/lang/Object;)Lorg/springframework/hateoas/Link;
       8: invokevirtual #48                 // Method org/springframework/hateoas/Link.getHref:()Ljava/lang/String;
      11: astore_3
      12: aload_3
      13: aload_3
      14: bipush        47
      16: invokevirtual #62                 // Method java/lang/String.lastIndexOf:(I)I
      19: iconst_1
      20: iadd
      21: invokevirtual #63                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      24: astore        4
      26: aload_0
      27: getfield      #3                  // Field repositoryInvokerFactory:Lorg/springframework/data/repository/support/RepositoryInvokerFactory;
      30: aload_1
      31: invokeinterface #64,  2           // InterfaceMethod org/springframework/data/repository/support/RepositoryInvokerFactory.getInvokerFor:(Ljava/lang/Class;)Lorg/springframework/data/repository/support/RepositoryInvoker;
      36: astore        5
      38: aload         5
      40: aload         4
      42: invokeinterface #65,  2           // InterfaceMethod org/springframework/data/repository/support/RepositoryInvoker.invokeFindById:(Ljava/lang/Object;)Ljava/util/Optional;
      47: aconst_null
      48: invokevirtual #66                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      51: areturn

  private java.util.Optional<org.springframework.hateoas.ResourceSupport> doWithReferencedProperty(org.springframework.data.rest.webmvc.RootResourceInformation, java.io.Serializable, java.lang.String, java.util.function.Function<org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController$ReferencedProperty, org.springframework.hateoas.ResourceSupport>, org.springframework.http.HttpMethod) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method org/springframework/data/rest/webmvc/RootResourceInformation.getResourceMetadata:()Lorg/springframework/data/rest/core/mapping/ResourceMetadata;
       4: astore        6
       6: aload         6
       8: aload_3
       9: invokeinterface #67,  2           // InterfaceMethod org/springframework/data/rest/core/mapping/ResourceMetadata.getProperty:(Ljava/lang/String;)Lorg/springframework/data/rest/core/mapping/PropertyAwareResourceMapping;
      14: astore        7
      16: aload         7
      18: ifnull        31
      21: aload         7
      23: invokeinterface #68,  1           // InterfaceMethod org/springframework/data/rest/core/mapping/PropertyAwareResourceMapping.isExported:()Z
      28: ifne          39
      31: new           #69                 // class org/springframework/data/rest/webmvc/ResourceNotFoundException
      34: dup
      35: invokespecial #70                 // Method org/springframework/data/rest/webmvc/ResourceNotFoundException."<init>":()V
      38: athrow
      39: aload         7
      41: invokeinterface #71,  1           // InterfaceMethod org/springframework/data/rest/core/mapping/PropertyAwareResourceMapping.getProperty:()Lorg/springframework/data/mapping/PersistentProperty;
      46: astore        8
      48: aload_1
      49: aload         5
      51: aload         8
      53: invokevirtual #72                 // Method org/springframework/data/rest/webmvc/RootResourceInformation.verifySupportedMethod:(Lorg/springframework/http/HttpMethod;Lorg/springframework/data/mapping/PersistentProperty;)V
      56: aload_1
      57: invokevirtual #58                 // Method org/springframework/data/rest/webmvc/RootResourceInformation.getInvoker:()Lorg/springframework/data/repository/support/RepositoryInvoker;
      60: astore        9
      62: aload         9
      64: aload_2
      65: invokeinterface #65,  2           // InterfaceMethod org/springframework/data/repository/support/RepositoryInvoker.invokeFindById:(Ljava/lang/Object;)Ljava/util/Optional;
      70: astore        10
      72: aload         10
      74: invokedynamic #73,  0             // InvokeDynamic #5:get:()Ljava/util/function/Supplier;
      79: invokevirtual #74                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      82: pop
      83: aload         10
      85: aload_0
      86: aload         8
      88: aload         4
      90: invokedynamic #75,  0             // InvokeDynamic #6:apply:(Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController;Lorg/springframework/data/mapping/PersistentProperty;Ljava/util/function/Function;)Ljava/util/function/Function;
      95: invokevirtual #76                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      98: areturn

  public org.springframework.http.ResponseEntity<java.lang.Void> handle(org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController$HttpRequestMethodNotSupportedException);
    Code:
       0: aload_1
       1: invokevirtual #77                 // Method org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$HttpRequestMethodNotSupportedException.toResponse:()Lorg/springframework/http/ResponseEntity;
       4: areturn

  private org.springframework.hateoas.ResourceSupport lambda$doWithReferencedProperty$16(org.springframework.data.mapping.PersistentProperty, java.util.function.Function, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #78,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getOwner:()Lorg/springframework/data/mapping/PersistentEntity;
       6: aload_3
       7: invokeinterface #79,  2           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getPropertyAccessor:(Ljava/lang/Object;)Lorg/springframework/data/mapping/PersistentPropertyAccessor;
      12: astore        4
      14: aload_2
      15: new           #80                 // class org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty
      18: dup
      19: aload_0
      20: aload_1
      21: aload         4
      23: aload_1
      24: invokeinterface #81,  2           // InterfaceMethod org/springframework/data/mapping/PersistentPropertyAccessor.getProperty:(Lorg/springframework/data/mapping/PersistentProperty;)Ljava/lang/Object;
      29: aload         4
      31: aconst_null
      32: invokespecial #82                 // Method org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty."<init>":(Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController;Lorg/springframework/data/mapping/PersistentProperty;Ljava/lang/Object;Lorg/springframework/data/mapping/PersistentPropertyAccessor;Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$1;)V
      35: invokeinterface #83,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #24                 // class org/springframework/hateoas/ResourceSupport
      43: areturn

  private static org.springframework.data.rest.webmvc.ResourceNotFoundException lambda$doWithReferencedProperty$15();
    Code:
       0: new           #69                 // class org/springframework/data/rest/webmvc/ResourceNotFoundException
       3: dup
       4: invokespecial #70                 // Method org/springframework/data/rest/webmvc/ResourceNotFoundException."<init>":()V
       7: areturn

  private org.springframework.hateoas.ResourceSupport lambda$deletePropertyReferenceId$14(java.lang.String, org.springframework.data.rest.webmvc.RootResourceInformation, org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController$ReferencedProperty);
    Code:
       0: aload_3
       1: aload_0
       2: aload_3
       3: aload_1
       4: aload_2
       5: invokedynamic #84,  0             // InvokeDynamic #7:apply:(Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController;Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty;Ljava/lang/String;Lorg/springframework/data/rest/webmvc/RootResourceInformation;)Ljava/util/function/Function;
      10: invokevirtual #85                 // Method org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.mapValue:(Ljava/util/function/Function;)Ljava/util/Optional;
      13: aconst_null
      14: invokevirtual #66                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #24                 // class org/springframework/hateoas/ResourceSupport
      20: areturn

  private org.springframework.hateoas.ResourceSupport lambda$null$13(org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController$ReferencedProperty, java.lang.String, org.springframework.data.rest.webmvc.RootResourceInformation, java.lang.Object);
    Code:
       0: aload_1
       1: getfield      #86                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.property:Lorg/springframework/data/mapping/PersistentProperty;
       4: invokeinterface #87,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isCollectionLike:()Z
       9: ifeq          99
      12: aload         4
      14: checkcast     #88                 // class java/util/Collection
      17: astore        5
      19: aload         5
      21: invokeinterface #89,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      26: astore        6
      28: aload         6
      30: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          96
      38: aload         6
      40: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: astore        7
      47: aload_1
      48: getfield      #90                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.entity:Lorg/springframework/data/mapping/PersistentEntity;
      51: aload         7
      53: invokeinterface #91,  2           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getIdentifierAccessor:(Ljava/lang/Object;)Lorg/springframework/data/mapping/IdentifierAccessor;
      58: invokeinterface #92,  1           // InterfaceMethod org/springframework/data/mapping/IdentifierAccessor.getIdentifier:()Ljava/lang/Object;
      63: invokestatic  #93                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      66: invokedynamic #94,  0             // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      71: invokevirtual #76                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      74: aload_2
      75: invokedynamic #95,  0             // InvokeDynamic #9:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      80: invokevirtual #96                 // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
      83: aload         6
      85: invokedynamic #97,  0             // InvokeDynamic #10:accept:(Ljava/util/Iterator;)Ljava/util/function/Consumer;
      90: invokevirtual #98                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      93: goto          28
      96: goto          222
      99: aload_1
     100: getfield      #86                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.property:Lorg/springframework/data/mapping/PersistentProperty;
     103: invokeinterface #99,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isMap:()Z
     108: ifeq          218
     111: aload         4
     113: checkcast     #40                 // class java/util/Map
     116: astore        5
     118: aload         5
     120: invokeinterface #41,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     125: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     130: astore        6
     132: aload         6
     134: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     139: ifeq          215
     142: aload         6
     144: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     149: checkcast     #43                 // class java/util/Map$Entry
     152: invokeinterface #49,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     157: astore        7
     159: aload_1
     160: getfield      #90                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.entity:Lorg/springframework/data/mapping/PersistentEntity;
     163: aload         5
     165: aload         7
     167: invokeinterface #100,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     172: invokeinterface #91,  2           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getIdentifierAccessor:(Ljava/lang/Object;)Lorg/springframework/data/mapping/IdentifierAccessor;
     177: invokeinterface #92,  1           // InterfaceMethod org/springframework/data/mapping/IdentifierAccessor.getIdentifier:()Ljava/lang/Object;
     182: invokestatic  #93                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
     185: invokedynamic #94,  0             // InvokeDynamic #8:apply:()Ljava/util/function/Function;
     190: invokevirtual #76                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     193: aload_2
     194: invokedynamic #101,  0            // InvokeDynamic #11:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
     199: invokevirtual #96                 // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
     202: aload         6
     204: invokedynamic #102,  0            // InvokeDynamic #12:accept:(Ljava/util/Iterator;)Ljava/util/function/Consumer;
     209: invokevirtual #98                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     212: goto          132
     215: goto          222
     218: aload_1
     219: invokevirtual #103                // Method org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.wipeValue:()V
     222: aload_0
     223: getfield      #4                  // Field publisher:Lorg/springframework/context/ApplicationEventPublisher;
     226: new           #104                // class org/springframework/data/rest/core/event/BeforeLinkDeleteEvent
     229: dup
     230: aload_1
     231: getfield      #105                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.accessor:Lorg/springframework/data/mapping/PersistentPropertyAccessor;
     234: invokeinterface #106,  1          // InterfaceMethod org/springframework/data/mapping/PersistentPropertyAccessor.getBean:()Ljava/lang/Object;
     239: aload         4
     241: invokespecial #107                // Method org/springframework/data/rest/core/event/BeforeLinkDeleteEvent."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     244: invokeinterface #108,  2          // InterfaceMethod org/springframework/context/ApplicationEventPublisher.publishEvent:(Lorg/springframework/context/ApplicationEvent;)V
     249: aload_3
     250: invokevirtual #58                 // Method org/springframework/data/rest/webmvc/RootResourceInformation.getInvoker:()Lorg/springframework/data/repository/support/RepositoryInvoker;
     253: aload_1
     254: getfield      #105                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.accessor:Lorg/springframework/data/mapping/PersistentPropertyAccessor;
     257: invokeinterface #106,  1          // InterfaceMethod org/springframework/data/mapping/PersistentPropertyAccessor.getBean:()Ljava/lang/Object;
     262: invokeinterface #109,  2          // InterfaceMethod org/springframework/data/repository/support/RepositoryInvoker.invokeSave:(Ljava/lang/Object;)Ljava/lang/Object;
     267: astore        5
     269: aload_0
     270: getfield      #4                  // Field publisher:Lorg/springframework/context/ApplicationEventPublisher;
     273: new           #110                // class org/springframework/data/rest/core/event/AfterLinkDeleteEvent
     276: dup
     277: aload         5
     279: aload         4
     281: invokespecial #111                // Method org/springframework/data/rest/core/event/AfterLinkDeleteEvent."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     284: invokeinterface #108,  2          // InterfaceMethod org/springframework/context/ApplicationEventPublisher.publishEvent:(Lorg/springframework/context/ApplicationEvent;)V
     289: aconst_null
     290: checkcast     #24                 // class org/springframework/hateoas/ResourceSupport
     293: areturn

  private static void lambda$null$12(java.util.Iterator, java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #112,  1          // InterfaceMethod java/util/Iterator.remove:()V
       6: return

  private static boolean lambda$null$11(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #113                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       5: ireturn

  private static void lambda$null$10(java.util.Iterator, java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #112,  1          // InterfaceMethod java/util/Iterator.remove:()V
       6: return

  private static boolean lambda$null$9(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #113                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       5: ireturn

  private org.springframework.hateoas.ResourceSupport lambda$createPropertyReference$8(org.springframework.http.HttpMethod, org.springframework.hateoas.Resources, org.springframework.data.repository.support.RepositoryInvoker, org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController$ReferencedProperty);
    Code:
       0: aload         4
       2: getfield      #86                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.property:Lorg/springframework/data/mapping/PersistentProperty;
       5: invokeinterface #114,  1          // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getType:()Ljava/lang/Class;
      10: astore        5
      12: aload         4
      14: getfield      #86                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.property:Lorg/springframework/data/mapping/PersistentProperty;
      17: invokeinterface #87,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isCollectionLike:()Z
      22: ifeq          131
      25: getstatic     #115                // Field AUGMENTING_METHODS:Ljava/util/Collection;
      28: aload_1
      29: invokeinterface #116,  2          // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      34: ifeq          48
      37: aload         4
      39: getfield      #117                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.propertyValue:Ljava/lang/Object;
      42: checkcast     #88                 // class java/util/Collection
      45: goto          54
      48: aload         5
      50: iconst_0
      51: invokestatic  #118                // Method org/springframework/core/CollectionFactory.createCollection:(Ljava/lang/Class;I)Ljava/util/Collection;
      54: astore        6
      56: aload_2
      57: invokevirtual #119                // Method org/springframework/hateoas/Resources.getLinks:()Ljava/util/List;
      60: invokeinterface #120,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      65: astore        7
      67: aload         7
      69: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      74: ifeq          111
      77: aload         7
      79: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      84: checkcast     #44                 // class org/springframework/hateoas/Link
      87: astore        8
      89: aload         6
      91: aload_0
      92: aload         4
      94: getfield      #121                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.propertyType:Ljava/lang/Class;
      97: aload         8
      99: invokespecial #122                // Method loadPropertyValue:(Ljava/lang/Class;Lorg/springframework/hateoas/Link;)Ljava/lang/Object;
     102: invokeinterface #123,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     107: pop
     108: goto          67
     111: aload         4
     113: getfield      #105                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.accessor:Lorg/springframework/data/mapping/PersistentPropertyAccessor;
     116: aload         4
     118: getfield      #86                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.property:Lorg/springframework/data/mapping/PersistentProperty;
     121: aload         6
     123: invokeinterface #124,  3          // InterfaceMethod org/springframework/data/mapping/PersistentPropertyAccessor.setProperty:(Lorg/springframework/data/mapping/PersistentProperty;Ljava/lang/Object;)V
     128: goto          354
     131: aload         4
     133: getfield      #86                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.property:Lorg/springframework/data/mapping/PersistentProperty;
     136: invokeinterface #99,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isMap:()Z
     141: ifeq          255
     144: getstatic     #115                // Field AUGMENTING_METHODS:Ljava/util/Collection;
     147: aload_1
     148: invokeinterface #116,  2          // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
     153: ifeq          167
     156: aload         4
     158: getfield      #117                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.propertyValue:Ljava/lang/Object;
     161: checkcast     #40                 // class java/util/Map
     164: goto          173
     167: aload         5
     169: iconst_0
     170: invokestatic  #125                // Method org/springframework/core/CollectionFactory.createMap:(Ljava/lang/Class;I)Ljava/util/Map;
     173: astore        6
     175: aload_2
     176: invokevirtual #119                // Method org/springframework/hateoas/Resources.getLinks:()Ljava/util/List;
     179: invokeinterface #120,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     184: astore        7
     186: aload         7
     188: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     193: ifeq          235
     196: aload         7
     198: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     203: checkcast     #44                 // class org/springframework/hateoas/Link
     206: astore        8
     208: aload         6
     210: aload         8
     212: invokevirtual #126                // Method org/springframework/hateoas/Link.getRel:()Ljava/lang/String;
     215: aload_0
     216: aload         4
     218: getfield      #121                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.propertyType:Ljava/lang/Class;
     221: aload         8
     223: invokespecial #122                // Method loadPropertyValue:(Ljava/lang/Class;Lorg/springframework/hateoas/Link;)Ljava/lang/Object;
     226: invokeinterface #127,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     231: pop
     232: goto          186
     235: aload         4
     237: getfield      #105                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.accessor:Lorg/springframework/data/mapping/PersistentPropertyAccessor;
     240: aload         4
     242: getfield      #86                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.property:Lorg/springframework/data/mapping/PersistentProperty;
     245: aload         6
     247: invokeinterface #124,  3          // InterfaceMethod org/springframework/data/mapping/PersistentPropertyAccessor.setProperty:(Lorg/springframework/data/mapping/PersistentProperty;Ljava/lang/Object;)V
     252: goto          354
     255: getstatic     #128                // Field org/springframework/http/HttpMethod.PATCH:Lorg/springframework/http/HttpMethod;
     258: aload_1
     259: invokevirtual #129                // Method org/springframework/http/HttpMethod.equals:(Ljava/lang/Object;)Z
     262: ifeq          294
     265: getstatic     #128                // Field org/springframework/http/HttpMethod.PATCH:Lorg/springframework/http/HttpMethod;
     268: invokestatic  #130                // Method org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$HttpRequestMethodNotSupportedException.forRejectedMethod:(Lorg/springframework/http/HttpMethod;)Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$HttpRequestMethodNotSupportedException;
     271: iconst_1
     272: anewarray     #131                // class org/springframework/http/HttpMethod
     275: dup
     276: iconst_0
     277: getstatic     #128                // Field org/springframework/http/HttpMethod.PATCH:Lorg/springframework/http/HttpMethod;
     280: aastore
     281: invokevirtual #132                // Method org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$HttpRequestMethodNotSupportedException.withAllowedMethods:([Lorg/springframework/http/HttpMethod;)Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$HttpRequestMethodNotSupportedException;
     284: ldc           #133                // String Cannot PATCH a reference to this singular property since the property type is not a List or a Map.
     286: iconst_0
     287: anewarray     #28                 // class java/lang/Object
     290: invokevirtual #134                // Method org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$HttpRequestMethodNotSupportedException.withMessage:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$HttpRequestMethodNotSupportedException;
     293: athrow
     294: aload_2
     295: invokevirtual #119                // Method org/springframework/hateoas/Resources.getLinks:()Ljava/util/List;
     298: invokeinterface #135,  1          // InterfaceMethod java/util/List.size:()I
     303: iconst_1
     304: if_icmpeq     317
     307: new           #136                // class java/lang/IllegalArgumentException
     310: dup
     311: ldc           #137                // String Must send only 1 link to update a property reference that isn\'t a List or a Map.
     313: invokespecial #138                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     316: athrow
     317: aload         4
     319: getfield      #105                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.accessor:Lorg/springframework/data/mapping/PersistentPropertyAccessor;
     322: aload         4
     324: getfield      #86                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.property:Lorg/springframework/data/mapping/PersistentProperty;
     327: aload_0
     328: aload         4
     330: getfield      #121                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.propertyType:Ljava/lang/Class;
     333: aload_2
     334: invokevirtual #119                // Method org/springframework/hateoas/Resources.getLinks:()Ljava/util/List;
     337: iconst_0
     338: invokeinterface #139,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     343: checkcast     #44                 // class org/springframework/hateoas/Link
     346: invokespecial #122                // Method loadPropertyValue:(Ljava/lang/Class;Lorg/springframework/hateoas/Link;)Ljava/lang/Object;
     349: invokeinterface #124,  3          // InterfaceMethod org/springframework/data/mapping/PersistentPropertyAccessor.setProperty:(Lorg/springframework/data/mapping/PersistentProperty;Ljava/lang/Object;)V
     354: aload_0
     355: getfield      #4                  // Field publisher:Lorg/springframework/context/ApplicationEventPublisher;
     358: new           #140                // class org/springframework/data/rest/core/event/BeforeLinkSaveEvent
     361: dup
     362: aload         4
     364: getfield      #105                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.accessor:Lorg/springframework/data/mapping/PersistentPropertyAccessor;
     367: invokeinterface #106,  1          // InterfaceMethod org/springframework/data/mapping/PersistentPropertyAccessor.getBean:()Ljava/lang/Object;
     372: aload         4
     374: getfield      #117                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.propertyValue:Ljava/lang/Object;
     377: invokespecial #141                // Method org/springframework/data/rest/core/event/BeforeLinkSaveEvent."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     380: invokeinterface #108,  2          // InterfaceMethod org/springframework/context/ApplicationEventPublisher.publishEvent:(Lorg/springframework/context/ApplicationEvent;)V
     385: aload_3
     386: aload         4
     388: getfield      #105                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.accessor:Lorg/springframework/data/mapping/PersistentPropertyAccessor;
     391: invokeinterface #106,  1          // InterfaceMethod org/springframework/data/mapping/PersistentPropertyAccessor.getBean:()Ljava/lang/Object;
     396: invokeinterface #109,  2          // InterfaceMethod org/springframework/data/repository/support/RepositoryInvoker.invokeSave:(Ljava/lang/Object;)Ljava/lang/Object;
     401: astore        6
     403: aload_0
     404: getfield      #4                  // Field publisher:Lorg/springframework/context/ApplicationEventPublisher;
     407: new           #142                // class org/springframework/data/rest/core/event/AfterLinkSaveEvent
     410: dup
     411: aload         6
     413: aload         4
     415: getfield      #117                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.propertyValue:Ljava/lang/Object;
     418: invokespecial #143                // Method org/springframework/data/rest/core/event/AfterLinkSaveEvent."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     421: invokeinterface #108,  2          // InterfaceMethod org/springframework/context/ApplicationEventPublisher.publishEvent:(Lorg/springframework/context/ApplicationEvent;)V
     426: aconst_null
     427: areturn

  private static org.springframework.hateoas.ResourceSupport lambda$followPropertyReference$7(java.lang.String, org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler, org.springframework.http.HttpHeaders, org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController$ReferencedProperty);
    Code:
       0: aload_3
       1: aload_3
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokedynamic #144,  0            // InvokeDynamic #13:apply:(Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty;Ljava/lang/String;Lorg/springframework/data/rest/webmvc/PersistentEntityResourceAssembler;Lorg/springframework/http/HttpHeaders;)Ljava/util/function/Function;
      10: invokevirtual #85                 // Method org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.mapValue:(Ljava/util/function/Function;)Ljava/util/Optional;
      13: invokedynamic #145,  0            // InvokeDynamic #14:get:()Ljava/util/function/Supplier;
      18: invokevirtual #74                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      21: checkcast     #31                 // class org/springframework/hateoas/Resource
      24: areturn

  private static org.springframework.data.rest.webmvc.ResourceNotFoundException lambda$null$6();
    Code:
       0: new           #69                 // class org/springframework/data/rest/webmvc/ResourceNotFoundException
       3: dup
       4: invokespecial #70                 // Method org/springframework/data/rest/webmvc/ResourceNotFoundException."<init>":()V
       7: areturn

  private static org.springframework.hateoas.Resource lambda$null$5(org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController$ReferencedProperty, java.lang.String, org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler, org.springframework.http.HttpHeaders, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #86                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.property:Lorg/springframework/data/mapping/PersistentProperty;
       4: invokeinterface #87,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isCollectionLike:()Z
       9: ifeq          104
      12: aload         4
      14: checkcast     #33                 // class java/lang/Iterable
      17: invokeinterface #34,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      22: astore        5
      24: aload         5
      26: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          101
      34: aload         5
      36: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: astore        6
      43: aload_0
      44: getfield      #90                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.entity:Lorg/springframework/data/mapping/PersistentEntity;
      47: aload         6
      49: invokeinterface #91,  2           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getIdentifierAccessor:(Ljava/lang/Object;)Lorg/springframework/data/mapping/IdentifierAccessor;
      54: astore        7
      56: aload_1
      57: aload         7
      59: invokeinterface #92,  1           // InterfaceMethod org/springframework/data/mapping/IdentifierAccessor.getIdentifier:()Ljava/lang/Object;
      64: invokevirtual #50                 // Method java/lang/Object.toString:()Ljava/lang/String;
      67: invokevirtual #113                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      70: ifeq          98
      73: aload_2
      74: aload         6
      76: invokevirtual #146                // Method org/springframework/data/rest/webmvc/PersistentEntityResourceAssembler.toResource:(Ljava/lang/Object;)Lorg/springframework/data/rest/webmvc/PersistentEntityResource;
      79: astore        8
      81: aload_3
      82: ldc           #147                // String Content-Location
      84: aload         8
      86: invokevirtual #148                // Method org/springframework/data/rest/webmvc/PersistentEntityResource.getId:()Lorg/springframework/hateoas/Link;
      89: invokevirtual #48                 // Method org/springframework/hateoas/Link.getHref:()Ljava/lang/String;
      92: invokevirtual #149                // Method org/springframework/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/String;)V
      95: aload         8
      97: areturn
      98: goto          24
     101: goto          242
     104: aload_0
     105: getfield      #86                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.property:Lorg/springframework/data/mapping/PersistentProperty;
     108: invokeinterface #99,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isMap:()Z
     113: ifeq          226
     116: aload         4
     118: checkcast     #40                 // class java/util/Map
     121: invokeinterface #41,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     126: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     131: astore        5
     133: aload         5
     135: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     140: ifeq          223
     143: aload         5
     145: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     150: checkcast     #43                 // class java/util/Map$Entry
     153: astore        6
     155: aload_0
     156: getfield      #90                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.entity:Lorg/springframework/data/mapping/PersistentEntity;
     159: aload         6
     161: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     166: invokeinterface #91,  2           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getIdentifierAccessor:(Ljava/lang/Object;)Lorg/springframework/data/mapping/IdentifierAccessor;
     171: astore        7
     173: aload_1
     174: aload         7
     176: invokeinterface #92,  1           // InterfaceMethod org/springframework/data/mapping/IdentifierAccessor.getIdentifier:()Ljava/lang/Object;
     181: invokevirtual #50                 // Method java/lang/Object.toString:()Ljava/lang/String;
     184: invokevirtual #113                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     187: ifeq          220
     190: aload_2
     191: aload         6
     193: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     198: invokevirtual #146                // Method org/springframework/data/rest/webmvc/PersistentEntityResourceAssembler.toResource:(Ljava/lang/Object;)Lorg/springframework/data/rest/webmvc/PersistentEntityResource;
     201: astore        8
     203: aload_3
     204: ldc           #147                // String Content-Location
     206: aload         8
     208: invokevirtual #148                // Method org/springframework/data/rest/webmvc/PersistentEntityResource.getId:()Lorg/springframework/hateoas/Link;
     211: invokevirtual #48                 // Method org/springframework/hateoas/Link.getHref:()Ljava/lang/String;
     214: invokevirtual #149                // Method org/springframework/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/String;)V
     217: aload         8
     219: areturn
     220: goto          133
     223: goto          242
     226: new           #31                 // class org/springframework/hateoas/Resource
     229: dup
     230: aload_0
     231: getfield      #117                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.propertyValue:Ljava/lang/Object;
     234: iconst_0
     235: anewarray     #44                 // class org/springframework/hateoas/Link
     238: invokespecial #150                // Method org/springframework/hateoas/Resource."<init>":(Ljava/lang/Object;[Lorg/springframework/hateoas/Link;)V
     241: areturn
     242: new           #69                 // class org/springframework/data/rest/webmvc/ResourceNotFoundException
     245: dup
     246: invokespecial #70                 // Method org/springframework/data/rest/webmvc/ResourceNotFoundException."<init>":()V
     249: athrow

  private org.springframework.hateoas.ResourceSupport lambda$deletePropertyReference$4(org.springframework.data.rest.webmvc.RootResourceInformation, org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController$ReferencedProperty);
    Code:
       0: aload_2
       1: aload_0
       2: aload_2
       3: aload_1
       4: invokedynamic #151,  0            // InvokeDynamic #15:apply:(Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController;Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty;Lorg/springframework/data/rest/webmvc/RootResourceInformation;)Ljava/util/function/Function;
       9: invokevirtual #85                 // Method org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.mapValue:(Ljava/util/function/Function;)Ljava/util/Optional;
      12: aconst_null
      13: invokevirtual #66                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #24                 // class org/springframework/hateoas/ResourceSupport
      19: areturn

  private org.springframework.hateoas.ResourceSupport lambda$null$3(org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController$ReferencedProperty, org.springframework.data.rest.webmvc.RootResourceInformation, java.lang.Object);
    Code:
       0: aload_1
       1: getfield      #86                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.property:Lorg/springframework/data/mapping/PersistentProperty;
       4: invokeinterface #87,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isCollectionLike:()Z
       9: ifne          24
      12: aload_1
      13: getfield      #86                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.property:Lorg/springframework/data/mapping/PersistentProperty;
      16: invokeinterface #99,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isMap:()Z
      21: ifeq          50
      24: getstatic     #13                 // Field org/springframework/http/HttpMethod.DELETE:Lorg/springframework/http/HttpMethod;
      27: invokestatic  #130                // Method org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$HttpRequestMethodNotSupportedException.forRejectedMethod:(Lorg/springframework/http/HttpMethod;)Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$HttpRequestMethodNotSupportedException;
      30: iconst_2
      31: anewarray     #131                // class org/springframework/http/HttpMethod
      34: dup
      35: iconst_0
      36: getstatic     #9                  // Field org/springframework/http/HttpMethod.GET:Lorg/springframework/http/HttpMethod;
      39: aastore
      40: dup
      41: iconst_1
      42: getstatic     #152                // Field org/springframework/http/HttpMethod.HEAD:Lorg/springframework/http/HttpMethod;
      45: aastore
      46: invokevirtual #132                // Method org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$HttpRequestMethodNotSupportedException.withAllowedMethods:([Lorg/springframework/http/HttpMethod;)Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$HttpRequestMethodNotSupportedException;
      49: athrow
      50: aload_1
      51: invokevirtual #103                // Method org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.wipeValue:()V
      54: aload_0
      55: getfield      #4                  // Field publisher:Lorg/springframework/context/ApplicationEventPublisher;
      58: new           #104                // class org/springframework/data/rest/core/event/BeforeLinkDeleteEvent
      61: dup
      62: aload_1
      63: getfield      #105                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.accessor:Lorg/springframework/data/mapping/PersistentPropertyAccessor;
      66: invokeinterface #106,  1          // InterfaceMethod org/springframework/data/mapping/PersistentPropertyAccessor.getBean:()Ljava/lang/Object;
      71: aload_1
      72: getfield      #117                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.propertyValue:Ljava/lang/Object;
      75: invokespecial #107                // Method org/springframework/data/rest/core/event/BeforeLinkDeleteEvent."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      78: invokeinterface #108,  2          // InterfaceMethod org/springframework/context/ApplicationEventPublisher.publishEvent:(Lorg/springframework/context/ApplicationEvent;)V
      83: aload_2
      84: invokevirtual #58                 // Method org/springframework/data/rest/webmvc/RootResourceInformation.getInvoker:()Lorg/springframework/data/repository/support/RepositoryInvoker;
      87: aload_1
      88: getfield      #105                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.accessor:Lorg/springframework/data/mapping/PersistentPropertyAccessor;
      91: invokeinterface #106,  1          // InterfaceMethod org/springframework/data/mapping/PersistentPropertyAccessor.getBean:()Ljava/lang/Object;
      96: invokeinterface #109,  2          // InterfaceMethod org/springframework/data/repository/support/RepositoryInvoker.invokeSave:(Ljava/lang/Object;)Ljava/lang/Object;
     101: astore        4
     103: aload_0
     104: getfield      #4                  // Field publisher:Lorg/springframework/context/ApplicationEventPublisher;
     107: new           #110                // class org/springframework/data/rest/core/event/AfterLinkDeleteEvent
     110: dup
     111: aload         4
     113: aload_1
     114: getfield      #117                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.propertyValue:Ljava/lang/Object;
     117: invokespecial #111                // Method org/springframework/data/rest/core/event/AfterLinkDeleteEvent."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     120: invokeinterface #108,  2          // InterfaceMethod org/springframework/context/ApplicationEventPublisher.publishEvent:(Lorg/springframework/context/ApplicationEvent;)V
     125: aconst_null
     126: checkcast     #24                 // class org/springframework/hateoas/ResourceSupport
     129: areturn

  private org.springframework.hateoas.ResourceSupport lambda$followPropertyReference$2(org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler, org.springframework.http.HttpHeaders, org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController$ReferencedProperty);
    Code:
       0: aload_3
       1: aload_0
       2: aload_3
       3: aload_1
       4: aload_2
       5: invokedynamic #153,  0            // InvokeDynamic #16:apply:(Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController;Lorg/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty;Lorg/springframework/data/rest/webmvc/PersistentEntityResourceAssembler;Lorg/springframework/http/HttpHeaders;)Ljava/util/function/Function;
      10: invokevirtual #85                 // Method org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.mapValue:(Ljava/util/function/Function;)Ljava/util/Optional;
      13: invokedynamic #154,  0            // InvokeDynamic #17:get:()Ljava/util/function/Supplier;
      18: invokevirtual #74                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      21: checkcast     #24                 // class org/springframework/hateoas/ResourceSupport
      24: areturn

  private static org.springframework.data.rest.webmvc.ResourceNotFoundException lambda$null$1();
    Code:
       0: new           #69                 // class org/springframework/data/rest/webmvc/ResourceNotFoundException
       3: dup
       4: invokespecial #70                 // Method org/springframework/data/rest/webmvc/ResourceNotFoundException."<init>":()V
       7: areturn

  private org.springframework.hateoas.ResourceSupport lambda$null$0(org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController$ReferencedProperty, org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler, org.springframework.http.HttpHeaders, java.lang.Object);
    Code:
       0: aload_1
       1: getfield      #86                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.property:Lorg/springframework/data/mapping/PersistentProperty;
       4: invokeinterface #87,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isCollectionLike:()Z
       9: ifeq          30
      12: aload_0
      13: aload         4
      15: checkcast     #33                 // class java/lang/Iterable
      18: aload_2
      19: aload_1
      20: getfield      #121                // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.propertyType:Ljava/lang/Class;
      23: invokestatic  #155                // Method java/util/Optional.empty:()Ljava/util/Optional;
      26: invokevirtual #156                // Method toResources:(Ljava/lang/Iterable;Lorg/springframework/data/rest/webmvc/PersistentEntityResourceAssembler;Ljava/lang/Class;Ljava/util/Optional;)Lorg/springframework/hateoas/Resources;
      29: areturn
      30: aload_1
      31: getfield      #86                 // Field org/springframework/data/rest/webmvc/RepositoryPropertyReferenceController$ReferencedProperty.property:Lorg/springframework/data/mapping/PersistentProperty;
      34: invokeinterface #99,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isMap:()Z
      39: ifeq          133
      42: new           #157                // class java/util/HashMap
      45: dup
      46: invokespecial #158                // Method java/util/HashMap."<init>":()V
      49: astore        5
      51: aload         4
      53: checkcast     #40                 // class java/util/Map
      56: invokeinterface #41,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      61: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      66: astore        6
      68: aload         6
      70: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifeq          119
      78: aload         6
      80: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: checkcast     #43                 // class java/util/Map$Entry
      88: astore        7
      90: aload         5
      92: aload         7
      94: invokeinterface #49,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      99: aload_2
     100: aload         7
     102: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     107: invokevirtual #146                // Method org/springframework/data/rest/webmvc/PersistentEntityResourceAssembler.toResource:(Ljava/lang/Object;)Lorg/springframework/data/rest/webmvc/PersistentEntityResource;
     110: invokeinterface #127,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     115: pop
     116: goto          68
     119: new           #31                 // class org/springframework/hateoas/Resource
     122: dup
     123: aload         5
     125: iconst_0
     126: anewarray     #44                 // class org/springframework/hateoas/Link
     129: invokespecial #150                // Method org/springframework/hateoas/Resource."<init>":(Ljava/lang/Object;[Lorg/springframework/hateoas/Link;)V
     132: areturn
     133: aload_2
     134: aload         4
     136: invokevirtual #146                // Method org/springframework/data/rest/webmvc/PersistentEntityResourceAssembler.toResource:(Ljava/lang/Object;)Lorg/springframework/data/rest/webmvc/PersistentEntityResource;
     139: astore        5
     141: aload_3
     142: ldc           #147                // String Content-Location
     144: aload         5
     146: invokevirtual #148                // Method org/springframework/data/rest/webmvc/PersistentEntityResource.getId:()Lorg/springframework/hateoas/Link;
     149: invokevirtual #48                 // Method org/springframework/hateoas/Link.getHref:()Ljava/lang/String;
     152: invokevirtual #149                // Method org/springframework/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/String;)V
     155: aload         5
     157: areturn

  static org.springframework.data.repository.support.Repositories access$000(org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController);
    Code:
       0: aload_0
       1: getfield      #1                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
       4: areturn

  static {};
    Code:
       0: iconst_2
       1: anewarray     #131                // class org/springframework/http/HttpMethod
       4: dup
       5: iconst_0
       6: getstatic     #128                // Field org/springframework/http/HttpMethod.PATCH:Lorg/springframework/http/HttpMethod;
       9: aastore
      10: dup
      11: iconst_1
      12: getstatic     #159                // Field org/springframework/http/HttpMethod.POST:Lorg/springframework/http/HttpMethod;
      15: aastore
      16: invokestatic  #160                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      19: putstatic     #115                // Field AUGMENTING_METHODS:Ljava/util/Collection;
      22: return
}
