Compiled from "EnumTranslator.java"
public class org.springframework.data.rest.webmvc.json.EnumTranslator implements org.springframework.data.rest.core.config.EnumTranslationConfiguration {
  private final org.springframework.context.support.MessageSourceAccessor messageSourceAccessor;

  private boolean enableDefaultTranslation;

  private boolean parseEnumNameAsFallback;

  public org.springframework.data.rest.webmvc.json.EnumTranslator(org.springframework.context.support.MessageSourceAccessor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String MessageSourceAccessor must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field messageSourceAccessor:Lorg/springframework/context/support/MessageSourceAccessor;
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field enableDefaultTranslation:Z
      20: aload_0
      21: iconst_1
      22: putfield      #6                  // Field parseEnumNameAsFallback:Z
      25: return

  public void setEnableDefaultTranslation(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field enableDefaultTranslation:Z
       5: return

  public void setParseEnumNameAsFallback(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field parseEnumNameAsFallback:Z
       5: return

  public java.lang.String asText(java.lang.Enum<?>);
    Code:
       0: aload_1
       1: ldc           #7                  // String Enum value must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #4                  // Field messageSourceAccessor:Lorg/springframework/context/support/MessageSourceAccessor;
      10: aload_1
      11: aload_0
      12: getfield      #5                  // Field enableDefaultTranslation:Z
      15: invokestatic  #8                  // Method org/springframework/data/rest/webmvc/json/EnumTranslator$TranslatedEnum.of:(Ljava/lang/Enum;Z)Lorg/springframework/data/rest/webmvc/json/EnumTranslator$TranslatedEnum;
      18: invokevirtual #9                  // Method org/springframework/context/support/MessageSourceAccessor.getMessage:(Lorg/springframework/context/MessageSourceResolvable;)Ljava/lang/String;
      21: areturn

  public java.util.List<java.lang.String> getValues(java.lang.Class<? extends java.lang.Enum<?>>);
    Code:
       0: aload_1
       1: ldc           #10                 // String Enum type must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #11                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;
      10: invokestatic  #12                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      13: aload_0
      14: invokedynamic #13,  0             // InvokeDynamic #0:apply:(Lorg/springframework/data/rest/webmvc/json/EnumTranslator;)Ljava/util/function/Function;
      19: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      24: invokestatic  #15                 // InterfaceMethod org/springframework/data/util/StreamUtils.toUnmodifiableList:()Ljava/util/stream/Collector;
      27: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      32: checkcast     #17                 // class java/util/List
      35: areturn

  public <T extends java.lang.Enum<?>> T fromText(java.lang.Class<T>, java.lang.String);
    Code:
       0: aload_2
       1: invokestatic  #18                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_1
      10: ldc           #10                 // String Enum type must not be null!
      12: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      15: aload_0
      16: aload_1
      17: aload_2
      18: iconst_1
      19: invokespecial #19                 // Method resolveEnum:(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/Enum;
      22: astore_3
      23: aload_3
      24: ifnull        29
      27: aload_3
      28: areturn
      29: aload_0
      30: aload_1
      31: aload_2
      32: invokespecial #20                 // Method fromDefault:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
      35: astore_3
      36: aload_3
      37: ifnull        61
      40: aload_0
      41: getfield      #5                  // Field enableDefaultTranslation:Z
      44: ifeq          61
      47: aload_0
      48: aload_3
      49: invokevirtual #21                 // Method asText:(Ljava/lang/Enum;)Ljava/lang/String;
      52: aload_2
      53: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      56: ifeq          61
      59: aload_3
      60: areturn
      61: aload_0
      62: getfield      #6                  // Field parseEnumNameAsFallback:Z
      65: ifeq          78
      68: aload_0
      69: aload_1
      70: aload_2
      71: iconst_0
      72: invokespecial #19                 // Method resolveEnum:(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/Enum;
      75: goto          79
      78: aconst_null
      79: areturn

  private <T extends java.lang.Enum<?>> T resolveEnum(java.lang.Class<T>, java.lang.String, boolean);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;
       4: checkcast     #23                 // class "[Ljava/lang/Enum;"
       7: astore        4
       9: aload         4
      11: arraylength
      12: istore        5
      14: iconst_0
      15: istore        6
      17: iload         6
      19: iload         5
      21: if_icmpge     74
      24: aload         4
      26: iload         6
      28: aaload
      29: astore        7
      31: iload_3
      32: ifeq          44
      35: aload_0
      36: aload         7
      38: invokevirtual #21                 // Method asText:(Ljava/lang/Enum;)Ljava/lang/String;
      41: goto          49
      44: aload         7
      46: invokevirtual #24                 // Method java/lang/Enum.name:()Ljava/lang/String;
      49: astore        8
      51: aload         8
      53: ifnull        68
      56: aload         8
      58: aload_2
      59: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      62: ifeq          68
      65: aload         7
      67: areturn
      68: iinc          6, 1
      71: goto          17
      74: aconst_null
      75: areturn

  private <T extends java.lang.Enum<?>> T fromDefault(java.lang.Class<T>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #25                 // Field java/util/Locale.US:Ljava/util/Locale;
       6: invokevirtual #26                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
       9: ldc           #27                 // String
      11: ldc           #28                 // String _
      13: invokevirtual #29                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      16: iconst_1
      17: invokespecial #19                 // Method resolveEnum:(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/Enum;
      20: areturn
}
