Compiled from "JsonSchema.java"
public class org.springframework.data.rest.webmvc.json.JsonSchema$JsonSchemaProperty extends org.springframework.data.rest.webmvc.json.JsonSchema$AbstractJsonSchemaProperty<org.springframework.data.rest.webmvc.json.JsonSchema$JsonSchemaProperty> {
  private static final org.springframework.data.util.TypeInformation<?> STRING_TYPE_INFORMATION;

  public java.lang.String description;

  public java.lang.String type;

  public org.springframework.data.rest.core.config.JsonSchemaFormat format;

  public java.lang.String pattern;

  public java.lang.Boolean uniqueItems;

  public java.lang.String reference;

  public java.util.Map<java.lang.String, java.lang.String> items;

  org.springframework.data.rest.webmvc.json.JsonSchema$JsonSchemaProperty(java.lang.String, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload         4
       5: invokespecial #1                  // Method org/springframework/data/rest/webmvc/json/JsonSchema$AbstractJsonSchemaProperty."<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
       8: aload_0
       9: aload_3
      10: putfield      #2                  // Field description:Ljava/lang/String;
      13: return

  public org.springframework.data.rest.webmvc.json.JsonSchema$JsonSchemaProperty withType(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #3                  // String Type must not be null!
       3: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokestatic  #5                  // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
      11: invokevirtual #6                  // Method with:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/rest/webmvc/json/JsonSchema$JsonSchemaProperty;
      14: areturn

  public org.springframework.data.rest.webmvc.json.JsonSchema$JsonSchemaProperty with(org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_1
       1: ldc           #3                  // String Type must not be null!
       3: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokestatic  #7                  // Method org/springframework/data/rest/webmvc/json/JsonSchema.access$000:(Lorg/springframework/data/util/TypeInformation;)Ljava/lang/String;
      11: putfield      #8                  // Field type:Ljava/lang/String;
      14: aload_1
      15: invokestatic  #9                  // Method org/springframework/data/rest/webmvc/json/JsonSchema.access$300:(Lorg/springframework/data/util/TypeInformation;)Z
      18: ifeq          29
      21: aload_0
      22: getstatic     #10                 // Field org/springframework/data/rest/core/config/JsonSchemaFormat.DATE_TIME:Lorg/springframework/data/rest/core/config/JsonSchemaFormat;
      25: invokevirtual #11                 // Method withFormat:(Lorg/springframework/data/rest/core/config/JsonSchemaFormat;)Lorg/springframework/data/rest/webmvc/json/JsonSchema$JsonSchemaProperty;
      28: areturn
      29: aload_1
      30: invokeinterface #12,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.isCollectionLike:()Z
      35: ifeq          78
      38: ldc           #13                 // class java/util/Set
      40: aload_1
      41: invokeinterface #14,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      46: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      49: ifeq          60
      52: aload_0
      53: iconst_1
      54: invokestatic  #16                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      57: putfield      #17                 // Field uniqueItems:Ljava/lang/Boolean;
      60: aload_0
      61: ldc           #18                 // String type
      63: aload_1
      64: invokeinterface #19,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getActualType:()Lorg/springframework/data/util/TypeInformation;
      69: invokestatic  #7                  // Method org/springframework/data/rest/webmvc/json/JsonSchema.access$000:(Lorg/springframework/data/util/TypeInformation;)Ljava/lang/String;
      72: invokestatic  #20                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      75: putfield      #21                 // Field items:Ljava/util/Map;
      78: aload_0
      79: areturn

  public org.springframework.data.rest.webmvc.json.JsonSchema$JsonSchemaProperty withFormat(org.springframework.data.rest.core.config.JsonSchemaFormat);
    Code:
       0: aload_1
       1: ldc           #22                 // String Format must not be null!
       3: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #23                 // Field format:Lorg/springframework/data/rest/core/config/JsonSchemaFormat;
      11: aload_0
      12: getstatic     #24                 // Field STRING_TYPE_INFORMATION:Lorg/springframework/data/util/TypeInformation;
      15: invokevirtual #6                  // Method with:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/rest/webmvc/json/JsonSchema$JsonSchemaProperty;
      18: areturn

  public org.springframework.data.rest.webmvc.json.JsonSchema$JsonSchemaProperty withRegex(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #25                 // String Regular expression must not be null or empty!
       3: invokestatic  #26                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokestatic  #27                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      11: invokevirtual #28                 // Method withPattern:(Ljava/util/regex/Pattern;)Lorg/springframework/data/rest/webmvc/json/JsonSchema$JsonSchemaProperty;
      14: areturn

  public org.springframework.data.rest.webmvc.json.JsonSchema$JsonSchemaProperty withPattern(java.util.regex.Pattern);
    Code:
       0: aload_1
       1: ldc           #29                 // String Pattern must not be null!
       3: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #30                 // Method java/util/regex/Pattern.toString:()Ljava/lang/String;
      11: putfield      #31                 // Field pattern:Ljava/lang/String;
      14: aload_0
      15: getstatic     #24                 // Field STRING_TYPE_INFORMATION:Lorg/springframework/data/util/TypeInformation;
      18: invokevirtual #6                  // Method with:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/rest/webmvc/json/JsonSchema$JsonSchemaProperty;
      21: areturn

  public org.springframework.data.rest.webmvc.json.JsonSchema$JsonSchemaProperty asAssociation();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #21                 // Field items:Ljava/util/Map;
       5: aload_0
       6: aconst_null
       7: putfield      #17                 // Field uniqueItems:Ljava/lang/Boolean;
      10: aload_0
      11: getstatic     #32                 // Field org/springframework/data/rest/core/config/JsonSchemaFormat.URI:Lorg/springframework/data/rest/core/config/JsonSchemaFormat;
      14: invokevirtual #11                 // Method withFormat:(Lorg/springframework/data/rest/core/config/JsonSchemaFormat;)Lorg/springframework/data/rest/webmvc/json/JsonSchema$JsonSchemaProperty;
      17: areturn

  org.springframework.data.rest.webmvc.json.JsonSchema$JsonSchemaProperty with(org.springframework.data.util.TypeInformation<?>, java.lang.String);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.isCollectionLike:()Z
       6: ifeq          51
       9: ldc           #13                 // class java/util/Set
      11: aload_1
      12: invokeinterface #14,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      17: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      20: ifeq          31
      23: aload_0
      24: iconst_1
      25: invokestatic  #16                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      28: putfield      #17                 // Field uniqueItems:Ljava/lang/Boolean;
      31: aload_0
      32: aload_1
      33: invokestatic  #7                  // Method org/springframework/data/rest/webmvc/json/JsonSchema.access$000:(Lorg/springframework/data/util/TypeInformation;)Ljava/lang/String;
      36: putfield      #8                  // Field type:Ljava/lang/String;
      39: aload_0
      40: ldc           #33                 // String $ref
      42: aload_2
      43: invokestatic  #20                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      46: putfield      #21                 // Field items:Ljava/util/Map;
      49: aload_0
      50: areturn
      51: aload_0
      52: aload_2
      53: putfield      #34                 // Field reference:Ljava/lang/String;
      56: aload_0
      57: areturn

  public boolean isReadOnly();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method org/springframework/data/rest/webmvc/json/JsonSchema$AbstractJsonSchemaProperty.isReadOnly:()Z
       4: ireturn

  public java.lang.String getTitle();
    Code:
       0: aload_0
       1: invokespecial #36                 // Method org/springframework/data/rest/webmvc/json/JsonSchema$AbstractJsonSchemaProperty.getTitle:()Ljava/lang/String;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method org/springframework/data/rest/webmvc/json/JsonSchema$AbstractJsonSchemaProperty.getName:()Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: ldc           #38                 // class java/lang/String
       2: invokestatic  #5                  // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
       5: putstatic     #24                 // Field STRING_TYPE_INFORMATION:Lorg/springframework/data/util/TypeInformation;
       8: return
}
