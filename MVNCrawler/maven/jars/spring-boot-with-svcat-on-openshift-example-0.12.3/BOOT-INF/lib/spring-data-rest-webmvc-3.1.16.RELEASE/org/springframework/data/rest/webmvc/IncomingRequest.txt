Compiled from "IncomingRequest.java"
public class org.springframework.data.rest.webmvc.IncomingRequest {
  private final org.springframework.http.server.ServerHttpRequest request;

  private final org.springframework.http.MediaType contentType;

  public org.springframework.data.rest.webmvc.IncomingRequest(org.springframework.http.server.ServerHttpRequest);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String ServerHttpRequest must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field request:Lorg/springframework/http/server/ServerHttpRequest;
      15: aload_0
      16: aload_1
      17: invokeinterface #5,  1            // InterfaceMethod org/springframework/http/server/ServerHttpRequest.getHeaders:()Lorg/springframework/http/HttpHeaders;
      22: invokevirtual #6                  // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      25: putfield      #7                  // Field contentType:Lorg/springframework/http/MediaType;
      28: return

  public boolean isPatchRequest();
    Code:
       0: aload_0
       1: getfield      #4                  // Field request:Lorg/springframework/http/server/ServerHttpRequest;
       4: invokeinterface #8,  1            // InterfaceMethod org/springframework/http/server/ServerHttpRequest.getMethod:()Lorg/springframework/http/HttpMethod;
       9: getstatic     #9                  // Field org/springframework/http/HttpMethod.PATCH:Lorg/springframework/http/HttpMethod;
      12: invokevirtual #10                 // Method org/springframework/http/HttpMethod.equals:(Ljava/lang/Object;)Z
      15: ireturn

  public boolean isJsonPatchRequest();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method isPatchRequest:()Z
       4: ifeq          24
       7: getstatic     #12                 // Field org/springframework/data/rest/webmvc/RestMediaTypes.JSON_PATCH_JSON:Lorg/springframework/http/MediaType;
      10: aload_0
      11: getfield      #7                  // Field contentType:Lorg/springframework/http/MediaType;
      14: invokevirtual #13                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean isJsonMergePatchRequest();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method isPatchRequest:()Z
       4: ifeq          24
       7: getstatic     #14                 // Field org/springframework/data/rest/webmvc/RestMediaTypes.MERGE_PATCH_JSON:Lorg/springframework/http/MediaType;
      10: aload_0
      11: getfield      #7                  // Field contentType:Lorg/springframework/http/MediaType;
      14: invokevirtual #13                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public java.io.InputStream getBody() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field request:Lorg/springframework/http/server/ServerHttpRequest;
       4: invokeinterface #15,  1           // InterfaceMethod org/springframework/http/server/ServerHttpRequest.getBody:()Ljava/io/InputStream;
       9: areturn

  public org.springframework.http.server.ServerHttpRequest getServerHttpRequest();
    Code:
       0: aload_0
       1: getfield      #4                  // Field request:Lorg/springframework/http/server/ServerHttpRequest;
       4: areturn
}
