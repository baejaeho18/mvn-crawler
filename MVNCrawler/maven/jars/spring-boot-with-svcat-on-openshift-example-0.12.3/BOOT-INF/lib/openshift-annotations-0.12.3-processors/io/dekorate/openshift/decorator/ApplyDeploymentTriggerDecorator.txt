Compiled from "ApplyDeploymentTriggerDecorator.java"
public class io.dekorate.openshift.decorator.ApplyDeploymentTriggerDecorator extends io.dekorate.kubernetes.decorator.NamedResourceDecorator<io.dekorate.deps.openshift.api.model.DeploymentConfigSpecFluent<?>> {
  private static final java.lang.String IMAGESTREAMTAG;

  private static final java.lang.String IMAGECHANGE;

  private final java.lang.String containerName;

  private final java.lang.String imageStreamTag;

  private final io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.DeploymentTriggerPolicyBuilder> predicate;

  public io.dekorate.openshift.decorator.ApplyDeploymentTriggerDecorator(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/dekorate/kubernetes/decorator/NamedResourceDecorator."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field containerName:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field imageStreamTag:Ljava/lang/String;
      14: aload_0
      15: aload_1
      16: invokedynamic #4,  0              // InvokeDynamic #0:apply:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/builder/Predicate;
      21: putfield      #5                  // Field predicate:Lio/dekorate/deps/kubernetes/api/builder/Predicate;
      24: return

  public void andThenVisit(io.dekorate.deps.openshift.api.model.DeploymentConfigSpecFluent<?>, io.dekorate.deps.kubernetes.api.model.ObjectMeta);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #5                  // Field predicate:Lio/dekorate/deps/kubernetes/api/builder/Predicate;
       5: invokeinterface #6,  2            // InterfaceMethod io/dekorate/deps/openshift/api/model/DeploymentConfigSpecFluent.buildMatchingTrigger:(Lio/dekorate/deps/kubernetes/api/builder/Predicate;)Lio/dekorate/deps/openshift/api/model/DeploymentTriggerPolicy;
      10: ifnull        27
      13: aload_1
      14: aload_0
      15: getfield      #5                  // Field predicate:Lio/dekorate/deps/kubernetes/api/builder/Predicate;
      18: invokeinterface #7,  2            // InterfaceMethod io/dekorate/deps/openshift/api/model/DeploymentConfigSpecFluent.editMatchingTrigger:(Lio/dekorate/deps/kubernetes/api/builder/Predicate;)Lio/dekorate/deps/openshift/api/model/DeploymentConfigSpecFluent$TriggersNested;
      23: astore_3
      24: goto          34
      27: aload_1
      28: invokeinterface #8,  1            // InterfaceMethod io/dekorate/deps/openshift/api/model/DeploymentConfigSpecFluent.addNewTrigger:()Lio/dekorate/deps/openshift/api/model/DeploymentConfigSpecFluent$TriggersNested;
      33: astore_3
      34: aload_3
      35: ldc           #10                 // String ImageChange
      37: invokeinterface #11,  2           // InterfaceMethod io/dekorate/deps/openshift/api/model/DeploymentConfigSpecFluent$TriggersNested.withType:(Ljava/lang/String;)Lio/dekorate/deps/openshift/api/model/DeploymentTriggerPolicyFluent;
      42: checkcast     #12                 // class io/dekorate/deps/openshift/api/model/DeploymentConfigSpecFluent$TriggersNested
      45: invokeinterface #13,  1           // InterfaceMethod io/dekorate/deps/openshift/api/model/DeploymentConfigSpecFluent$TriggersNested.withNewImageChangeParams:()Lio/dekorate/deps/openshift/api/model/DeploymentTriggerPolicyFluent$ImageChangeParamsNested;
      50: iconst_1
      51: invokestatic  #14                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      54: invokeinterface #15,  2           // InterfaceMethod io/dekorate/deps/openshift/api/model/DeploymentTriggerPolicyFluent$ImageChangeParamsNested.withAutomatic:(Ljava/lang/Boolean;)Lio/dekorate/deps/openshift/api/model/DeploymentTriggerImageChangeParamsFluent;
      59: checkcast     #16                 // class io/dekorate/deps/openshift/api/model/DeploymentTriggerPolicyFluent$ImageChangeParamsNested
      62: iconst_1
      63: anewarray     #17                 // class java/lang/String
      66: dup
      67: iconst_0
      68: aload_0
      69: getfield      #2                  // Field containerName:Ljava/lang/String;
      72: aastore
      73: invokeinterface #18,  2           // InterfaceMethod io/dekorate/deps/openshift/api/model/DeploymentTriggerPolicyFluent$ImageChangeParamsNested.withContainerNames:([Ljava/lang/String;)Lio/dekorate/deps/openshift/api/model/DeploymentTriggerImageChangeParamsFluent;
      78: checkcast     #16                 // class io/dekorate/deps/openshift/api/model/DeploymentTriggerPolicyFluent$ImageChangeParamsNested
      81: invokeinterface #19,  1           // InterfaceMethod io/dekorate/deps/openshift/api/model/DeploymentTriggerPolicyFluent$ImageChangeParamsNested.withNewFrom:()Lio/dekorate/deps/openshift/api/model/DeploymentTriggerImageChangeParamsFluent$FromNested;
      86: ldc           #20                 // String ImageStreamTag
      88: invokeinterface #21,  2           // InterfaceMethod io/dekorate/deps/openshift/api/model/DeploymentTriggerImageChangeParamsFluent$FromNested.withKind:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/ObjectReferenceFluent;
      93: checkcast     #22                 // class io/dekorate/deps/openshift/api/model/DeploymentTriggerImageChangeParamsFluent$FromNested
      96: aload_0
      97: getfield      #3                  // Field imageStreamTag:Ljava/lang/String;
     100: invokeinterface #23,  2           // InterfaceMethod io/dekorate/deps/openshift/api/model/DeploymentTriggerImageChangeParamsFluent$FromNested.withName:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/ObjectReferenceFluent;
     105: checkcast     #22                 // class io/dekorate/deps/openshift/api/model/DeploymentTriggerImageChangeParamsFluent$FromNested
     108: invokeinterface #24,  1           // InterfaceMethod io/dekorate/deps/openshift/api/model/DeploymentTriggerImageChangeParamsFluent$FromNested.endFrom:()Ljava/lang/Object;
     113: checkcast     #16                 // class io/dekorate/deps/openshift/api/model/DeploymentTriggerPolicyFluent$ImageChangeParamsNested
     116: invokeinterface #25,  1           // InterfaceMethod io/dekorate/deps/openshift/api/model/DeploymentTriggerPolicyFluent$ImageChangeParamsNested.endImageChangeParams:()Ljava/lang/Object;
     121: checkcast     #12                 // class io/dekorate/deps/openshift/api/model/DeploymentConfigSpecFluent$TriggersNested
     124: invokeinterface #26,  1           // InterfaceMethod io/dekorate/deps/openshift/api/model/DeploymentConfigSpecFluent$TriggersNested.endTrigger:()Ljava/lang/Object;
     129: pop
     130: return

  public java.lang.Class<? extends io.dekorate.kubernetes.decorator.Decorator>[] after();
    Code:
       0: bipush        17
       2: anewarray     #27                 // class java/lang/Class
       5: dup
       6: iconst_0
       7: ldc           #28                 // class io/dekorate/kubernetes/decorator/AddEnvVarDecorator
       9: aastore
      10: dup
      11: iconst_1
      12: ldc           #29                 // class io/dekorate/kubernetes/decorator/AddPortDecorator
      14: aastore
      15: dup
      16: iconst_2
      17: ldc           #30                 // class io/dekorate/kubernetes/decorator/AddMountDecorator
      19: aastore
      20: dup
      21: iconst_3
      22: ldc           #31                 // class io/dekorate/kubernetes/decorator/AddPvcVolumeDecorator
      24: aastore
      25: dup
      26: iconst_4
      27: ldc           #32                 // class io/dekorate/kubernetes/decorator/AddAwsElasticBlockStoreVolumeDecorator
      29: aastore
      30: dup
      31: iconst_5
      32: ldc           #33                 // class io/dekorate/kubernetes/decorator/AddAzureDiskVolumeDecorator
      34: aastore
      35: dup
      36: bipush        6
      38: ldc           #32                 // class io/dekorate/kubernetes/decorator/AddAwsElasticBlockStoreVolumeDecorator
      40: aastore
      41: dup
      42: bipush        7
      44: ldc           #34                 // class io/dekorate/kubernetes/decorator/ApplyImageDecorator
      46: aastore
      47: dup
      48: bipush        8
      50: ldc           #35                 // class io/dekorate/kubernetes/decorator/ApplyImagePullPolicyDecorator
      52: aastore
      53: dup
      54: bipush        9
      56: ldc           #36                 // class io/dekorate/kubernetes/decorator/ApplyWorkingDirDecorator
      58: aastore
      59: dup
      60: bipush        10
      62: ldc           #37                 // class io/dekorate/kubernetes/decorator/ApplyCommandDecorator
      64: aastore
      65: dup
      66: bipush        11
      68: ldc           #38                 // class io/dekorate/kubernetes/decorator/ApplyArgsDecorator
      70: aastore
      71: dup
      72: bipush        12
      74: ldc           #39                 // class io/dekorate/kubernetes/decorator/ApplyServiceAccountNamedDecorator
      76: aastore
      77: dup
      78: bipush        13
      80: ldc           #40                 // class io/dekorate/kubernetes/decorator/AddReadinessProbeDecorator
      82: aastore
      83: dup
      84: bipush        14
      86: ldc           #41                 // class io/dekorate/kubernetes/decorator/AddLivenessProbeDecorator
      88: aastore
      89: dup
      90: bipush        15
      92: ldc           #42                 // class io/dekorate/kubernetes/decorator/AddSidecarDecorator
      94: aastore
      95: dup
      96: bipush        16
      98: ldc           #43                 // class io/dekorate/kubernetes/decorator/AddInitContainerDecorator
     100: aastore
     101: areturn

  public void andThenVisit(java.lang.Object, io.dekorate.deps.kubernetes.api.model.ObjectMeta);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #44                 // class io/dekorate/deps/openshift/api/model/DeploymentConfigSpecFluent
       5: aload_2
       6: invokevirtual #45                 // Method andThenVisit:(Lio/dekorate/deps/openshift/api/model/DeploymentConfigSpecFluent;Lio/dekorate/deps/kubernetes/api/model/ObjectMeta;)V
       9: return

  private static java.lang.Boolean lambda$new$0(java.lang.String, io.dekorate.deps.openshift.api.model.DeploymentTriggerPolicyBuilder);
    Code:
       0: aload_1
       1: invokevirtual #46                 // Method io/dekorate/deps/openshift/api/model/DeploymentTriggerPolicyBuilder.hasImageChangeParams:()Ljava/lang/Boolean;
       4: invokevirtual #47                 // Method java/lang/Boolean.booleanValue:()Z
       7: ifeq          40
      10: aload_1
      11: invokevirtual #48                 // Method io/dekorate/deps/openshift/api/model/DeploymentTriggerPolicyBuilder.buildImageChangeParams:()Lio/dekorate/deps/openshift/api/model/DeploymentTriggerImageChangeParams;
      14: invokevirtual #49                 // Method io/dekorate/deps/openshift/api/model/DeploymentTriggerImageChangeParams.getContainerNames:()Ljava/util/List;
      17: ifnull        40
      20: aload_1
      21: invokevirtual #48                 // Method io/dekorate/deps/openshift/api/model/DeploymentTriggerPolicyBuilder.buildImageChangeParams:()Lio/dekorate/deps/openshift/api/model/DeploymentTriggerImageChangeParams;
      24: invokevirtual #49                 // Method io/dekorate/deps/openshift/api/model/DeploymentTriggerImageChangeParams.getContainerNames:()Ljava/util/List;
      27: aload_0
      28: invokeinterface #50,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: invokestatic  #14                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      44: areturn
}
