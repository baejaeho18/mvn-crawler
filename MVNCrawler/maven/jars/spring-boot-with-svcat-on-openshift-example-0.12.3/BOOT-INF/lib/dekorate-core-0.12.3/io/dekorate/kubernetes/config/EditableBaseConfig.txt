Compiled from "EditableBaseConfig.java"
public class io.dekorate.kubernetes.config.EditableBaseConfig extends io.dekorate.kubernetes.config.BaseConfig implements io.dekorate.deps.kubernetes.api.builder.Editable<io.dekorate.kubernetes.config.BaseConfigBuilder> {
  public io.dekorate.kubernetes.config.EditableBaseConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/dekorate/kubernetes/config/BaseConfig."<init>":()V
       4: return

  public io.dekorate.kubernetes.config.EditableBaseConfig(io.dekorate.project.Project, java.util.Map<io.dekorate.kubernetes.config.ConfigKey, java.lang.Object>, java.lang.String, java.lang.String, java.lang.String, io.dekorate.kubernetes.config.Label[], io.dekorate.kubernetes.config.Annotation[], io.dekorate.kubernetes.config.Env[], java.lang.String, java.lang.String[], java.lang.String[], java.lang.String, java.lang.String, io.dekorate.kubernetes.config.Port[], io.dekorate.kubernetes.annotation.ServiceType, io.dekorate.kubernetes.config.PersistentVolumeClaimVolume[], io.dekorate.kubernetes.config.SecretVolume[], io.dekorate.kubernetes.config.ConfigMapVolume[], io.dekorate.kubernetes.config.GitRepoVolume[], io.dekorate.kubernetes.config.AwsElasticBlockStoreVolume[], io.dekorate.kubernetes.config.AzureDiskVolume[], io.dekorate.kubernetes.config.AzureFileVolume[], io.dekorate.kubernetes.config.Mount[], io.dekorate.kubernetes.annotation.ImagePullPolicy, java.lang.String[], io.dekorate.kubernetes.config.Probe, io.dekorate.kubernetes.config.Probe, io.dekorate.kubernetes.config.Container[], boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: aload         14
      26: aload         15
      28: aload         16
      30: aload         17
      32: aload         18
      34: aload         19
      36: aload         20
      38: aload         21
      40: aload         22
      42: aload         23
      44: aload         24
      46: aload         25
      48: aload         26
      50: aload         27
      52: aload         28
      54: iload         29
      56: iload         30
      58: invokespecial #2                  // Method io/dekorate/kubernetes/config/BaseConfig."<init>":(Lio/dekorate/project/Project;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Lio/dekorate/kubernetes/config/Label;[Lio/dekorate/kubernetes/config/Annotation;[Lio/dekorate/kubernetes/config/Env;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Lio/dekorate/kubernetes/config/Port;Lio/dekorate/kubernetes/annotation/ServiceType;[Lio/dekorate/kubernetes/config/PersistentVolumeClaimVolume;[Lio/dekorate/kubernetes/config/SecretVolume;[Lio/dekorate/kubernetes/config/ConfigMapVolume;[Lio/dekorate/kubernetes/config/GitRepoVolume;[Lio/dekorate/kubernetes/config/AwsElasticBlockStoreVolume;[Lio/dekorate/kubernetes/config/AzureDiskVolume;[Lio/dekorate/kubernetes/config/AzureFileVolume;[Lio/dekorate/kubernetes/config/Mount;Lio/dekorate/kubernetes/annotation/ImagePullPolicy;[Ljava/lang/String;Lio/dekorate/kubernetes/config/Probe;Lio/dekorate/kubernetes/config/Probe;[Lio/dekorate/kubernetes/config/Container;ZZ)V
      61: return

  public io.dekorate.kubernetes.config.BaseConfigBuilder edit();
    Code:
       0: new           #3                  // class io/dekorate/kubernetes/config/BaseConfigBuilder
       3: dup
       4: aload_0
       5: invokespecial #4                  // Method io/dekorate/kubernetes/config/BaseConfigBuilder."<init>":(Lio/dekorate/kubernetes/config/BaseConfig;)V
       8: areturn

  public java.lang.Object edit();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method edit:()Lio/dekorate/kubernetes/config/BaseConfigBuilder;
       4: areturn
}
