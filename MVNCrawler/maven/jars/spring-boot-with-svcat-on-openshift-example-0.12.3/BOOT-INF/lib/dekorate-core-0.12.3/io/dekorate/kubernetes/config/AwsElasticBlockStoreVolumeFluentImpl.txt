Compiled from "AwsElasticBlockStoreVolumeFluentImpl.java"
public class io.dekorate.kubernetes.config.AwsElasticBlockStoreVolumeFluentImpl<A extends io.dekorate.kubernetes.config.AwsElasticBlockStoreVolumeFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.BaseFluent<A> implements io.dekorate.kubernetes.config.AwsElasticBlockStoreVolumeFluent<A> {
  private java.lang.String volumeName;

  private java.lang.String volumeId;

  private int partition;

  private java.lang.String fsType;

  private boolean readOnly;

  public io.dekorate.kubernetes.config.AwsElasticBlockStoreVolumeFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/dekorate/deps/kubernetes/api/builder/BaseFluent."<init>":()V
       4: aload_0
       5: ldc           #2                  // String ext4
       7: putfield      #3                  // Field fsType:Ljava/lang/String;
      10: aload_0
      11: iconst_0
      12: putfield      #4                  // Field readOnly:Z
      15: return

  public io.dekorate.kubernetes.config.AwsElasticBlockStoreVolumeFluentImpl(io.dekorate.kubernetes.config.AwsElasticBlockStoreVolume);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/dekorate/deps/kubernetes/api/builder/BaseFluent."<init>":()V
       4: aload_0
       5: ldc           #2                  // String ext4
       7: putfield      #3                  // Field fsType:Ljava/lang/String;
      10: aload_0
      11: iconst_0
      12: putfield      #4                  // Field readOnly:Z
      15: aload_0
      16: aload_1
      17: invokevirtual #5                  // Method io/dekorate/kubernetes/config/AwsElasticBlockStoreVolume.getVolumeName:()Ljava/lang/String;
      20: invokevirtual #6                  // Method withVolumeName:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/AwsElasticBlockStoreVolumeFluent;
      23: pop
      24: aload_0
      25: aload_1
      26: invokevirtual #7                  // Method io/dekorate/kubernetes/config/AwsElasticBlockStoreVolume.getVolumeId:()Ljava/lang/String;
      29: invokevirtual #8                  // Method withVolumeId:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/AwsElasticBlockStoreVolumeFluent;
      32: pop
      33: aload_0
      34: aload_1
      35: invokevirtual #9                  // Method io/dekorate/kubernetes/config/AwsElasticBlockStoreVolume.getPartition:()I
      38: invokevirtual #10                 // Method withPartition:(I)Lio/dekorate/kubernetes/config/AwsElasticBlockStoreVolumeFluent;
      41: pop
      42: aload_0
      43: aload_1
      44: invokevirtual #11                 // Method io/dekorate/kubernetes/config/AwsElasticBlockStoreVolume.getFsType:()Ljava/lang/String;
      47: invokevirtual #12                 // Method withFsType:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/AwsElasticBlockStoreVolumeFluent;
      50: pop
      51: aload_0
      52: aload_1
      53: invokevirtual #13                 // Method io/dekorate/kubernetes/config/AwsElasticBlockStoreVolume.isReadOnly:()Z
      56: invokevirtual #14                 // Method withReadOnly:(Z)Lio/dekorate/kubernetes/config/AwsElasticBlockStoreVolumeFluent;
      59: pop
      60: return

  public java.lang.String getVolumeName();
    Code:
       0: aload_0
       1: getfield      #15                 // Field volumeName:Ljava/lang/String;
       4: areturn

  public A withVolumeName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field volumeName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasVolumeName();
    Code:
       0: aload_0
       1: getfield      #15                 // Field volumeName:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #16                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewVolumeName(java.lang.String);
    Code:
       0: aload_0
       1: new           #17                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #18                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #6                  // Method withVolumeName:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/AwsElasticBlockStoreVolumeFluent;
      12: areturn

  public A withNewVolumeName(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #17                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #19                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #6                  // Method withVolumeName:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/AwsElasticBlockStoreVolumeFluent;
      12: areturn

  public A withNewVolumeName(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #17                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #20                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #6                  // Method withVolumeName:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/AwsElasticBlockStoreVolumeFluent;
      12: areturn

  public java.lang.String getVolumeId();
    Code:
       0: aload_0
       1: getfield      #21                 // Field volumeId:Ljava/lang/String;
       4: areturn

  public A withVolumeId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field volumeId:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasVolumeId();
    Code:
       0: aload_0
       1: getfield      #21                 // Field volumeId:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #16                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewVolumeId(java.lang.String);
    Code:
       0: aload_0
       1: new           #17                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #18                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #8                  // Method withVolumeId:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/AwsElasticBlockStoreVolumeFluent;
      12: areturn

  public A withNewVolumeId(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #17                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #19                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #8                  // Method withVolumeId:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/AwsElasticBlockStoreVolumeFluent;
      12: areturn

  public A withNewVolumeId(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #17                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #20                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #8                  // Method withVolumeId:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/AwsElasticBlockStoreVolumeFluent;
      12: areturn

  public int getPartition();
    Code:
       0: aload_0
       1: getfield      #22                 // Field partition:I
       4: ireturn

  public A withPartition(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field partition:I
       5: aload_0
       6: areturn

  public java.lang.Boolean hasPartition();
    Code:
       0: iconst_1
       1: invokestatic  #16                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       4: areturn

  public java.lang.String getFsType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fsType:Ljava/lang/String;
       4: areturn

  public A withFsType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field fsType:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasFsType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fsType:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #16                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewFsType(java.lang.String);
    Code:
       0: aload_0
       1: new           #17                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #18                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #12                 // Method withFsType:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/AwsElasticBlockStoreVolumeFluent;
      12: areturn

  public A withNewFsType(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #17                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #19                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #12                 // Method withFsType:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/AwsElasticBlockStoreVolumeFluent;
      12: areturn

  public A withNewFsType(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #17                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #20                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #12                 // Method withFsType:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/AwsElasticBlockStoreVolumeFluent;
      12: areturn

  public boolean isReadOnly();
    Code:
       0: aload_0
       1: getfield      #4                  // Field readOnly:Z
       4: ireturn

  public A withReadOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field readOnly:Z
       5: aload_0
       6: areturn

  public java.lang.Boolean hasReadOnly();
    Code:
       0: iconst_1
       1: invokestatic  #16                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #24                 // class io/dekorate/kubernetes/config/AwsElasticBlockStoreVolumeFluentImpl
      28: astore_2
      29: aload_0
      30: getfield      #15                 // Field volumeName:Ljava/lang/String;
      33: ifnull        53
      36: aload_0
      37: getfield      #15                 // Field volumeName:Ljava/lang/String;
      40: aload_2
      41: getfield      #15                 // Field volumeName:Ljava/lang/String;
      44: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifne          62
      50: goto          60
      53: aload_2
      54: getfield      #15                 // Field volumeName:Ljava/lang/String;
      57: ifnull        62
      60: iconst_0
      61: ireturn
      62: aload_0
      63: getfield      #21                 // Field volumeId:Ljava/lang/String;
      66: ifnull        86
      69: aload_0
      70: getfield      #21                 // Field volumeId:Ljava/lang/String;
      73: aload_2
      74: getfield      #21                 // Field volumeId:Ljava/lang/String;
      77: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      80: ifne          95
      83: goto          93
      86: aload_2
      87: getfield      #21                 // Field volumeId:Ljava/lang/String;
      90: ifnull        95
      93: iconst_0
      94: ireturn
      95: aload_0
      96: getfield      #22                 // Field partition:I
      99: aload_2
     100: getfield      #22                 // Field partition:I
     103: if_icmpeq     108
     106: iconst_0
     107: ireturn
     108: aload_0
     109: getfield      #3                  // Field fsType:Ljava/lang/String;
     112: ifnull        132
     115: aload_0
     116: getfield      #3                  // Field fsType:Ljava/lang/String;
     119: aload_2
     120: getfield      #3                  // Field fsType:Ljava/lang/String;
     123: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     126: ifne          141
     129: goto          139
     132: aload_2
     133: getfield      #3                  // Field fsType:Ljava/lang/String;
     136: ifnull        141
     139: iconst_0
     140: ireturn
     141: aload_0
     142: getfield      #4                  // Field readOnly:Z
     145: aload_2
     146: getfield      #4                  // Field readOnly:Z
     149: if_icmpeq     154
     152: iconst_0
     153: ireturn
     154: iconst_1
     155: ireturn
}
