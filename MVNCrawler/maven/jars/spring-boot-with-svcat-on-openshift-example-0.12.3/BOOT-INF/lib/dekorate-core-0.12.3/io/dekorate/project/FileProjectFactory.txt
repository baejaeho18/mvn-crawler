Compiled from "FileProjectFactory.java"
public class io.dekorate.project.FileProjectFactory {
  private static io.dekorate.project.Project PROJECT;

  public io.dekorate.project.FileProjectFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static io.dekorate.project.Project create(java.io.File);
    Code:
       0: getstatic     #2                  // Field PROJECT:Lio/dekorate/project/Project;
       3: ifnull        10
       6: getstatic     #2                  // Field PROJECT:Lio/dekorate/project/Project;
       9: areturn
      10: ldc           #3                  // class io/dekorate/project/FileProjectFactory
      12: dup
      13: astore_1
      14: monitorenter
      15: getstatic     #2                  // Field PROJECT:Lio/dekorate/project/Project;
      18: ifnonnull     28
      21: aload_0
      22: invokestatic  #4                  // Method createInternal:(Ljava/io/File;)Lio/dekorate/project/Project;
      25: putstatic     #2                  // Field PROJECT:Lio/dekorate/project/Project;
      28: aload_1
      29: monitorexit
      30: goto          38
      33: astore_2
      34: aload_1
      35: monitorexit
      36: aload_2
      37: athrow
      38: getstatic     #2                  // Field PROJECT:Lio/dekorate/project/Project;
      41: areturn
    Exception table:
       from    to  target type
          15    30    33   any
          33    36    33   any

  private static io.dekorate.project.Project createInternal(java.io.File);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
       4: astore_1
       5: aload_1
       6: invokestatic  #6                  // Method getProjectInfo:(Ljava/nio/file/Path;)Ljava/util/Optional;
       9: astore_2
      10: aload_1
      11: ifnull        36
      14: aload_2
      15: invokevirtual #7                  // Method java/util/Optional.isPresent:()Z
      18: ifne          36
      21: aload_1
      22: invokeinterface #8,  1            // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
      27: astore_1
      28: aload_1
      29: invokestatic  #6                  // Method getProjectInfo:(Ljava/nio/file/Path;)Ljava/util/Optional;
      32: astore_2
      33: goto          10
      36: aload_0
      37: invokevirtual #5                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
      40: astore_3
      41: aload_3
      42: ifnull        74
      45: aload_3
      46: ldc           #10                 // String .git
      48: invokeinterface #11,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      53: invokeinterface #12,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      58: invokevirtual #13                 // Method java/io/File.exists:()Z
      61: ifne          74
      64: aload_3
      65: invokeinterface #8,  1            // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
      70: astore_3
      71: goto          41
      74: aload_3
      75: invokestatic  #14                 // Method getScmInfo:(Ljava/nio/file/Path;)Ljava/util/Optional;
      78: astore        4
      80: new           #15                 // class io/dekorate/project/Project
      83: dup
      84: aload_1
      85: aload_2
      86: invokedynamic #16,  0             // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      91: invokevirtual #17                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      94: checkcast     #18                 // class io/dekorate/project/BuildInfo
      97: aload         4
      99: aconst_null
     100: invokevirtual #19                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     103: checkcast     #20                 // class io/dekorate/project/ScmInfo
     106: invokespecial #21                 // Method io/dekorate/project/Project."<init>":(Ljava/nio/file/Path;Lio/dekorate/project/BuildInfo;Lio/dekorate/project/ScmInfo;)V
     109: areturn

  private static java.util.Optional<io.dekorate.project.BuildInfo> getProjectInfo(java.nio.file.Path);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #22                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       7: areturn
       8: invokestatic  #23                 // Method io/dekorate/project/BuildInfoReaderRegistry.getReaders:()Ljava/util/Set;
      11: invokeinterface #24,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      16: aload_0
      17: invokedynamic #25,  0             // InvokeDynamic #1:test:(Ljava/nio/file/Path;)Ljava/util/function/Predicate;
      22: invokeinterface #26,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      27: invokedynamic #27,  0             // InvokeDynamic #2:applyAsInt:()Ljava/util/function/ToIntFunction;
      32: invokestatic  #28                 // InterfaceMethod java/util/Comparator.comparingInt:(Ljava/util/function/ToIntFunction;)Ljava/util/Comparator;
      35: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;
      40: invokeinterface #30,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      45: aload_0
      46: invokedynamic #31,  0             // InvokeDynamic #3:apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;
      51: invokevirtual #32                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      54: areturn

  private static java.util.Optional<io.dekorate.project.ScmInfo> getScmInfo(java.nio.file.Path);
    Code:
       0: invokestatic  #22                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       3: astore_1
       4: aload_0
       5: ifnonnull     10
       8: aload_1
       9: areturn
      10: aload_0
      11: ldc           #33                 // String origin
      13: invokestatic  #34                 // Method io/dekorate/utils/Git.getSafeRemoteUrl:(Ljava/nio/file/Path;Ljava/lang/String;)Ljava/util/Optional;
      16: aconst_null
      17: invokevirtual #19                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #35                 // class java/lang/String
      23: astore_2
      24: aload_0
      25: invokestatic  #36                 // Method io/dekorate/utils/Git.getBranch:(Ljava/nio/file/Path;)Ljava/util/Optional;
      28: aconst_null
      29: invokevirtual #19                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #35                 // class java/lang/String
      35: astore_3
      36: aload_0
      37: invokestatic  #37                 // Method io/dekorate/utils/Git.getCommitSHA:(Ljava/nio/file/Path;)Ljava/util/Optional;
      40: aconst_null
      41: invokevirtual #19                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #35                 // class java/lang/String
      47: astore        4
      49: new           #20                 // class io/dekorate/project/ScmInfo
      52: dup
      53: aload_0
      54: aload_2
      55: aload_3
      56: aload         4
      58: invokespecial #38                 // Method io/dekorate/project/ScmInfo."<init>":(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      61: invokestatic  #39                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      64: astore_1
      65: aload_1
      66: areturn
      67: astore_2
      68: invokestatic  #22                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      71: areturn
    Exception table:
       from    to  target type
          10    66    67   Class java/lang/Exception

  private static io.dekorate.project.BuildInfo lambda$getProjectInfo$2(java.nio.file.Path, io.dekorate.project.BuildInfoReader);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #41,  2           // InterfaceMethod io/dekorate/project/BuildInfoReader.getInfo:(Ljava/nio/file/Path;)Lio/dekorate/project/BuildInfo;
       7: areturn

  private static boolean lambda$getProjectInfo$1(java.nio.file.Path, io.dekorate.project.BuildInfoReader);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #42,  2           // InterfaceMethod io/dekorate/project/BuildInfoReader.isApplicable:(Ljava/nio/file/Path;)Z
       7: ireturn

  private static java.lang.IllegalStateException lambda$createInternal$0();
    Code:
       0: new           #43                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #44                 // String Could not find matching project info read
       6: invokespecial #45                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: areturn

  static {};
    Code:
       0: aconst_null
       1: putstatic     #2                  // Field PROJECT:Lio/dekorate/project/Project;
       4: return
}
