Compiled from "GradleInfoReader.java"
public class io.dekorate.project.GradleInfoReader implements io.dekorate.project.BuildInfoReader {
  private final io.dekorate.Logger LOGGER;

  private static final java.lang.String GRADLE;

  private static final java.lang.String BUILD_GRADLE_GROOVY;

  private static final java.lang.String SETTINGS_GRADLE_GROOVY;

  private static final java.lang.String BUILD_GRADLE_KTS;

  private static final java.lang.String SETTINGS_GRADLE_KTS;

  private static final java.lang.String GRADLE_PROPERTIES;

  private static final java.lang.String SRC;

  private static final java.lang.String MAIN;

  private static final java.lang.String RESOURCES;

  private static final java.lang.String BUILD;

  private static final java.lang.String LIBS;

  private static final java.lang.String CLASSES;

  private static final java.lang.String GROOVY;

  private static final java.lang.String JAVA;

  private static final java.lang.String OPEN_BRACKET;

  private static final java.lang.String CLOSE_BRACKET;

  private static final java.lang.String QUOTE;

  private static final java.lang.String EQUALS;

  private static final java.lang.String DASH;

  private static final java.lang.String DOT;

  private static final java.lang.String BASENAME;

  private static final java.lang.String SHADOW_JAR;

  private static final java.lang.String ROOT_PROJECT_PREFIX;

  public io.dekorate.project.GradleInfoReader();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method io/dekorate/LoggerFactory.getLogger:()Lio/dekorate/Logger;
       8: putfield      #3                  // Field LOGGER:Lio/dekorate/Logger;
      11: return

  public int order();
    Code:
       0: bipush        100
       2: ireturn

  public boolean isApplicable(java.nio.file.Path);
    Code:
       0: aload_1
       1: ldc           #5                  // String build.gradle
       3: invokeinterface #6,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
       8: invokeinterface #7,  1            // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      13: invokevirtual #8                  // Method java/io/File.exists:()Z
      16: ifne          38
      19: aload_1
      20: ldc           #9                  // String build.gradle.kts
      22: invokeinterface #6,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      27: invokeinterface #7,  1            // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      32: invokevirtual #8                  // Method java/io/File.exists:()Z
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  public io.dekorate.project.BuildInfo getInfo(java.nio.file.Path);
    Code:
       0: aload_1
       1: ldc           #5                  // String build.gradle
       3: invokeinterface #6,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
       8: astore_2
       9: aload_1
      10: ldc           #10                 // String settings.gradle
      12: invokeinterface #6,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      17: astore_3
      18: aload_1
      19: ldc           #9                  // String build.gradle.kts
      21: invokeinterface #6,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      26: invokeinterface #7,  1            // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      31: invokevirtual #8                  // Method java/io/File.exists:()Z
      34: istore        4
      36: iload         4
      38: ifeq          59
      41: aload_1
      42: ldc           #9                  // String build.gradle.kts
      44: invokeinterface #6,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      49: astore_2
      50: aload_1
      51: ldc           #11                 // String settings.gradle.kts
      53: invokeinterface #6,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      58: astore_3
      59: aload_1
      60: ldc           #12                 // String gradle.properties
      62: invokeinterface #6,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      67: astore        5
      69: new           #13                 // class java/util/HashMap
      72: dup
      73: invokespecial #14                 // Method java/util/HashMap."<init>":()V
      76: astore        6
      78: aload         6
      80: aload_3
      81: invokestatic  #15                 // Method readSettingsGradle:(Ljava/nio/file/Path;)Ljava/util/Map;
      84: invokeinterface #16,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      89: aload         6
      91: aload         5
      93: invokestatic  #17                 // Method readGradleProperties:(Ljava/nio/file/Path;)Ljava/util/Map;
      96: invokeinterface #16,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     101: aload         6
     103: aload_2
     104: invokestatic  #18                 // Method readBuildGradle:(Ljava/nio/file/Path;)Ljava/util/Map;
     107: invokeinterface #16,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     112: aload         6
     114: ldc           #20                 // String name
     116: aload         6
     118: ldc           #21                 // String baseName
     120: aload_1
     121: invokeinterface #22,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
     126: invokeinterface #23,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
     131: invokeinterface #24,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     136: invokeinterface #24,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     141: checkcast     #25                 // class java/lang/String
     144: astore        7
     146: aload         6
     148: ldc           #26                 // String version
     150: invokeinterface #27,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     155: checkcast     #25                 // class java/lang/String
     158: astore        8
     160: aload         6
     162: ldc           #28                 // String classifier
     164: invokeinterface #27,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     169: checkcast     #25                 // class java/lang/String
     172: astore        9
     174: aload         6
     176: ldc           #29                 // String extension
     178: ldc           #30                 // String jar
     180: invokeinterface #24,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     185: checkcast     #25                 // class java/lang/String
     188: astore        10
     190: aload         6
     192: ldc           #31                 // String DESTINATION_DIR
     194: new           #32                 // class java/lang/StringBuilder
     197: dup
     198: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     201: ldc           #34                 // String build
     203: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: getstatic     #36                 // Field java/io/File.separator:Ljava/lang/String;
     209: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: ldc           #37                 // String libs
     214: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     217: getstatic     #36                 // Field java/io/File.separator:Ljava/lang/String;
     220: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     223: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     226: invokeinterface #24,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     231: checkcast     #25                 // class java/lang/String
     234: astore        11
     236: aload_1
     237: aload         11
     239: invokeinterface #6,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     244: astore        12
     246: new           #32                 // class java/lang/StringBuilder
     249: dup
     250: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     253: astore        13
     255: aload         13
     257: aload         7
     259: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     262: pop
     263: aload         8
     265: invokestatic  #39                 // Method io/dekorate/utils/Strings.isNotNullOrEmpty:(Ljava/lang/String;)Z
     268: ifeq          284
     271: aload         13
     273: ldc           #40                 // String -
     275: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     278: aload         8
     280: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     283: pop
     284: aload         9
     286: invokestatic  #39                 // Method io/dekorate/utils/Strings.isNotNullOrEmpty:(Ljava/lang/String;)Z
     289: ifeq          305
     292: aload         13
     294: ldc           #40                 // String -
     296: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     299: aload         9
     301: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     304: pop
     305: aload         13
     307: ldc           #41                 // String .
     309: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     312: aload         10
     314: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     317: pop
     318: aload         8
     320: ifnonnull     338
     323: aload_0
     324: getfield      #3                  // Field LOGGER:Lio/dekorate/Logger;
     327: ldc           #42                 // String Could not detect project version. Using \'latest\'.
     329: invokeinterface #43,  2           // InterfaceMethod io/dekorate/Logger.warning:(Ljava/lang/String;)V
     334: ldc           #44                 // String latest
     336: astore        8
     338: new           #45                 // class io/dekorate/project/BuildInfoBuilder
     341: dup
     342: invokespecial #46                 // Method io/dekorate/project/BuildInfoBuilder."<init>":()V
     345: aload         7
     347: invokevirtual #47                 // Method io/dekorate/project/BuildInfoBuilder.withName:(Ljava/lang/String;)Lio/dekorate/project/BuildInfoFluent;
     350: checkcast     #45                 // class io/dekorate/project/BuildInfoBuilder
     353: aload         8
     355: invokevirtual #48                 // Method io/dekorate/project/BuildInfoBuilder.withVersion:(Ljava/lang/String;)Lio/dekorate/project/BuildInfoFluent;
     358: checkcast     #45                 // class io/dekorate/project/BuildInfoBuilder
     361: aload         10
     363: invokevirtual #49                 // Method io/dekorate/project/BuildInfoBuilder.withPackaging:(Ljava/lang/String;)Lio/dekorate/project/BuildInfoFluent;
     366: checkcast     #45                 // class io/dekorate/project/BuildInfoBuilder
     369: ldc           #50                 // String gradle
     371: invokevirtual #51                 // Method io/dekorate/project/BuildInfoBuilder.withBuildTool:(Ljava/lang/String;)Lio/dekorate/project/BuildInfoFluent;
     374: checkcast     #45                 // class io/dekorate/project/BuildInfoBuilder
     377: aload_1
     378: invokestatic  #52                 // Method io/dekorate/utils/Gradle.getVersion:(Ljava/nio/file/Path;)Ljava/lang/String;
     381: invokevirtual #53                 // Method io/dekorate/project/BuildInfoBuilder.withBuildToolVersion:(Ljava/lang/String;)Lio/dekorate/project/BuildInfoFluent;
     384: checkcast     #45                 // class io/dekorate/project/BuildInfoBuilder
     387: aload         12
     389: aload         13
     391: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     394: invokeinterface #6,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     399: invokevirtual #54                 // Method io/dekorate/project/BuildInfoBuilder.withOutputFile:(Ljava/nio/file/Path;)Lio/dekorate/project/BuildInfoFluent;
     402: checkcast     #45                 // class io/dekorate/project/BuildInfoBuilder
     405: aload_1
     406: ldc           #34                 // String build
     408: invokeinterface #6,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     413: ldc           #55                 // String classes
     415: invokeinterface #6,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     420: ldc           #56                 // String groovy
     422: invokeinterface #6,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     427: ldc           #57                 // String main
     429: invokeinterface #6,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     434: invokevirtual #58                 // Method io/dekorate/project/BuildInfoBuilder.withClassOutputDir:(Ljava/nio/file/Path;)Lio/dekorate/project/BuildInfoFluent;
     437: checkcast     #45                 // class io/dekorate/project/BuildInfoBuilder
     440: aload_1
     441: ldc           #59                 // String src
     443: invokeinterface #6,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     448: ldc           #57                 // String main
     450: invokeinterface #6,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     455: ldc           #60                 // String resources
     457: invokeinterface #6,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     462: invokevirtual #61                 // Method io/dekorate/project/BuildInfoBuilder.withResourceDir:(Ljava/nio/file/Path;)Lio/dekorate/project/BuildInfoFluent;
     465: checkcast     #45                 // class io/dekorate/project/BuildInfoBuilder
     468: invokevirtual #62                 // Method io/dekorate/project/BuildInfoBuilder.build:()Lio/dekorate/project/EditableBuildInfo;
     471: areturn

  protected static java.util.Map<java.lang.String, java.lang.String> readSettingsGradle(java.nio.file.Path);
    Code:
       0: new           #13                 // class java/util/HashMap
       3: dup
       4: invokespecial #14                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #7,  1            // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      14: invokevirtual #8                  // Method java/io/File.exists:()Z
      17: ifeq          64
      20: aload_0
      21: invokestatic  #63                 // Method java/nio/file/Files.lines:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;
      24: invokedynamic #64,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      29: invokeinterface #65,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      34: invokedynamic #66,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      39: invokeinterface #67,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      44: aload_1
      45: invokedynamic #68,  0             // InvokeDynamic #2:accept:(Ljava/util/Map;)Ljava/util/function/Consumer;
      50: invokeinterface #69,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      55: goto          64
      58: astore_2
      59: aload_2
      60: invokestatic  #71                 // Method io/dekorate/DekorateException.launderThrowable:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      63: athrow
      64: aload_1
      65: areturn
    Exception table:
       from    to  target type
          20    55    58   Class java/io/IOException

  protected static java.util.Map<java.lang.String, java.lang.String> readBuildGradle(java.nio.file.Path);
    Code:
       0: new           #72                 // class java/util/concurrent/atomic/AtomicBoolean
       3: dup
       4: invokespecial #73                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
       7: astore_1
       8: new           #72                 // class java/util/concurrent/atomic/AtomicBoolean
      11: dup
      12: invokespecial #73                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      15: astore_2
      16: new           #74                 // class java/util/concurrent/atomic/AtomicInteger
      19: dup
      20: iconst_0
      21: invokespecial #75                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      24: astore_3
      25: new           #13                 // class java/util/HashMap
      28: dup
      29: invokespecial #14                 // Method java/util/HashMap."<init>":()V
      32: astore        4
      34: aload_0
      35: invokestatic  #63                 // Method java/nio/file/Files.lines:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;
      38: invokedynamic #76,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      43: invokeinterface #65,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      48: aload_1
      49: aload_2
      50: aload         4
      52: aload_3
      53: invokedynamic #77,  0             // InvokeDynamic #4:accept:(Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/util/Map;Ljava/util/concurrent/atomic/AtomicInteger;)Ljava/util/function/Consumer;
      58: invokeinterface #69,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      63: goto          74
      66: astore        5
      68: aload         5
      70: invokestatic  #71                 // Method io/dekorate/DekorateException.launderThrowable:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      73: athrow
      74: aload         4
      76: areturn
    Exception table:
       from    to  target type
          34    63    66   Class java/io/IOException

  protected static java.util.Map<java.lang.String, java.lang.String> readGradleProperties(java.nio.file.Path);
    Code:
       0: new           #13                 // class java/util/HashMap
       3: dup
       4: invokespecial #14                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: new           #78                 // class java/util/Properties
      11: dup
      12: invokespecial #79                 // Method java/util/Properties."<init>":()V
      15: astore_2
      16: new           #80                 // class java/io/FileInputStream
      19: dup
      20: aload_0
      21: invokeinterface #7,  1            // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      26: invokespecial #81                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      29: astore_3
      30: aconst_null
      31: astore        4
      33: aload_2
      34: aload_3
      35: invokevirtual #82                 // Method java/util/Properties.load:(Ljava/io/InputStream;)V
      38: aload_2
      39: aload_1
      40: invokedynamic #83,  0             // InvokeDynamic #5:accept:(Ljava/util/Map;)Ljava/util/function/BiConsumer;
      45: invokevirtual #84                 // Method java/util/Properties.forEach:(Ljava/util/function/BiConsumer;)V
      48: aload_1
      49: astore        5
      51: aload_3
      52: ifnull        83
      55: aload         4
      57: ifnull        79
      60: aload_3
      61: invokevirtual #85                 // Method java/io/FileInputStream.close:()V
      64: goto          83
      67: astore        6
      69: aload         4
      71: aload         6
      73: invokevirtual #87                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      76: goto          83
      79: aload_3
      80: invokevirtual #85                 // Method java/io/FileInputStream.close:()V
      83: aload         5
      85: areturn
      86: astore        5
      88: aload         5
      90: astore        4
      92: aload         5
      94: athrow
      95: astore        7
      97: aload_3
      98: ifnull        129
     101: aload         4
     103: ifnull        125
     106: aload_3
     107: invokevirtual #85                 // Method java/io/FileInputStream.close:()V
     110: goto          129
     113: astore        8
     115: aload         4
     117: aload         8
     119: invokevirtual #87                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     122: goto          129
     125: aload_3
     126: invokevirtual #85                 // Method java/io/FileInputStream.close:()V
     129: aload         7
     131: athrow
     132: astore_3
     133: invokestatic  #88                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
     136: areturn
    Exception table:
       from    to  target type
          60    64    67   Class java/lang/Throwable
          33    51    86   Class java/lang/Throwable
          33    51    95   any
         106   110   113   Class java/lang/Throwable
          86    97    95   any
          16    83   132   Class java/io/IOException
          86   132   132   Class java/io/IOException

  private static void lambda$readGradleProperties$5(java.util.Map, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #89                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       5: aload_2
       6: invokestatic  #89                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       9: invokeinterface #90,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #25                 // class java/lang/String
      17: pop
      18: return

  private static void lambda$readBuildGradle$4(java.util.concurrent.atomic.AtomicBoolean, java.util.concurrent.atomic.AtomicBoolean, java.util.Map, java.util.concurrent.atomic.AtomicInteger, java.lang.String);
    Code:
       0: aload         4
       2: ldc           #30                 // String jar
       4: invokevirtual #91                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       7: ifeq          15
      10: aload_0
      11: iconst_1
      12: invokevirtual #92                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      15: aload         4
      17: ldc           #93                 // String shadowJar
      19: invokevirtual #91                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      22: ifeq          41
      25: aload_1
      26: iconst_1
      27: invokevirtual #92                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      30: aload_2
      31: ldc           #28                 // String classifier
      33: ldc           #94                 // String all
      35: invokeinterface #90,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload         4
      43: ldc           #95                 // String {
      45: invokevirtual #96                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      48: ifeq          56
      51: aload_3
      52: invokevirtual #97                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      55: pop
      56: aload         4
      58: ldc           #98                 // String }
      60: invokevirtual #96                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      63: ifeq          71
      66: aload_3
      67: invokevirtual #99                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      70: pop
      71: aload_3
      72: invokevirtual #100                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      75: ifne          88
      78: aload_0
      79: iconst_0
      80: invokevirtual #92                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      83: aload_1
      84: iconst_0
      85: invokevirtual #92                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      88: aload_1
      89: invokevirtual #101                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      92: ifne          109
      95: aload_0
      96: invokevirtual #101                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      99: ifne          109
     102: aload_3
     103: invokevirtual #100                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     106: ifne          168
     109: aload         4
     111: ldc           #102                // String =
     113: invokevirtual #96                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     116: ifeq          168
     119: aload         4
     121: iconst_0
     122: aload         4
     124: ldc           #102                // String =
     126: invokevirtual #103                // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
     129: invokevirtual #104                // Method java/lang/String.substring:(II)Ljava/lang/String;
     132: astore        5
     134: aload         4
     136: aload         4
     138: ldc           #102                // String =
     140: invokevirtual #103                // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
     143: iconst_1
     144: iadd
     145: invokevirtual #105                // Method java/lang/String.substring:(I)Ljava/lang/String;
     148: ldc           #106                // String \'
     150: ldc           #107                // String
     152: invokevirtual #108                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     155: astore        6
     157: aload_2
     158: aload         5
     160: aload         6
     162: invokeinterface #90,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     167: pop
     168: return

  private static java.lang.String lambda$readBuildGradle$3(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #109                // String [ ]*
       3: ldc           #107                // String
       5: invokevirtual #108                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  private static void lambda$readSettingsGradle$2(java.util.Map, java.lang.String);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_1
       3: ldc           #102                // String =
       5: invokevirtual #103                // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
       8: invokevirtual #104                // Method java/lang/String.substring:(II)Ljava/lang/String;
      11: astore_2
      12: aload_2
      13: ldc           #110                // String rootProject.
      15: invokevirtual #91                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      18: ifeq          60
      21: aload_2
      22: ldc           #110                // String rootProject.
      24: invokevirtual #111                // Method java/lang/String.length:()I
      27: invokevirtual #105                // Method java/lang/String.substring:(I)Ljava/lang/String;
      30: astore_2
      31: aload_1
      32: aload_1
      33: ldc           #102                // String =
      35: invokevirtual #103                // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      38: iconst_1
      39: iadd
      40: invokevirtual #105                // Method java/lang/String.substring:(I)Ljava/lang/String;
      43: ldc           #106                // String \'
      45: ldc           #107                // String
      47: invokevirtual #108                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      50: astore_3
      51: aload_0
      52: aload_2
      53: aload_3
      54: invokeinterface #90,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: return

  private static boolean lambda$readSettingsGradle$1(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #102                // String =
       3: invokevirtual #96                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       6: ireturn

  private static java.lang.String lambda$readSettingsGradle$0(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #109                // String [ ]*
       3: ldc           #107                // String
       5: invokevirtual #108                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn
}
