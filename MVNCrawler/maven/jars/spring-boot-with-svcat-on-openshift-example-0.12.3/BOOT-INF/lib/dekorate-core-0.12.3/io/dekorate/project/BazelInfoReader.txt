Compiled from "BazelInfoReader.java"
public class io.dekorate.project.BazelInfoReader implements io.dekorate.project.BuildInfoReader {
  private static final java.lang.String BAZEL;

  private static final java.lang.String BUILD;

  private static final java.lang.String OPEN_BRACKET;

  private static final java.lang.String CLOSE_BRACKET;

  private static final java.lang.String DOUBLE_QUOTE;

  private static final java.lang.String EQUALS;

  private static final java.lang.String DASH;

  private static final java.lang.String DOT;

  private static final java.lang.String JAVA_BINARY;

  private static final java.lang.String NAME;

  private static final java.util.regex.Pattern NAME_AND_VERSION;

  private static final java.lang.String BAZEL_BIN;

  private static final java.lang.String BAZEL_OUT;

  public io.dekorate.project.BazelInfoReader();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public int order();
    Code:
       0: sipush        300
       3: ireturn

  public boolean isApplicable(java.nio.file.Path);
    Code:
       0: aload_1
       1: ldc           #3                  // String BUILD
       3: invokeinterface #4,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
       8: invokeinterface #5,  1            // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      13: invokevirtual #6                  // Method java/io/File.exists:()Z
      16: ireturn

  public io.dekorate.project.BuildInfo getInfo(java.nio.file.Path);
    Code:
       0: aload_1
       1: ldc           #3                  // String BUILD
       3: invokeinterface #4,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
       8: astore_2
       9: new           #7                  // class java/util/HashMap
      12: dup
      13: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      16: astore_3
      17: aload_3
      18: aload_2
      19: invokestatic  #9                  // Method readBuild:(Ljava/nio/file/Path;)Ljava/util/Map;
      22: invokeinterface #10,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      27: aload_3
      28: ldc           #11                 // String name
      30: aload_3
      31: ldc           #11                 // String name
      33: aload_1
      34: invokeinterface #12,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
      39: invokeinterface #13,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      44: invokeinterface #14,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: invokeinterface #14,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #15                 // class java/lang/String
      57: astore        4
      59: aload_3
      60: ldc           #17                 // String version
      62: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #15                 // class java/lang/String
      70: astore        5
      72: aload_3
      73: ldc           #19                 // String extension
      75: ldc           #20                 // String jar
      77: invokeinterface #14,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: checkcast     #15                 // class java/lang/String
      85: astore        6
      87: aload_3
      88: ldc           #21                 // String classifier
      90: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      95: checkcast     #15                 // class java/lang/String
      98: astore        7
     100: aload_3
     101: ldc           #22                 // String DESTINATION_DIR
     103: ldc           #23                 // String bazel-bin
     105: invokeinterface #14,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     110: checkcast     #15                 // class java/lang/String
     113: astore        8
     115: aload_1
     116: aload         8
     118: invokeinterface #4,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     123: astore        9
     125: new           #24                 // class java/lang/StringBuilder
     128: dup
     129: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     132: astore        10
     134: aload         10
     136: aload         4
     138: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: pop
     142: aload         5
     144: invokestatic  #27                 // Method io/dekorate/utils/Strings.isNotNullOrEmpty:(Ljava/lang/String;)Z
     147: ifeq          163
     150: aload         10
     152: ldc           #28                 // String -
     154: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: aload         5
     159: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: pop
     163: aload         7
     165: invokestatic  #27                 // Method io/dekorate/utils/Strings.isNotNullOrEmpty:(Ljava/lang/String;)Z
     168: ifeq          184
     171: aload         10
     173: ldc           #28                 // String -
     175: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: aload         7
     180: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: pop
     184: aload         10
     186: ldc           #29                 // String .
     188: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload         6
     193: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: pop
     197: new           #30                 // class io/dekorate/project/BuildInfoBuilder
     200: dup
     201: invokespecial #31                 // Method io/dekorate/project/BuildInfoBuilder."<init>":()V
     204: aload         4
     206: invokevirtual #32                 // Method io/dekorate/project/BuildInfoBuilder.withName:(Ljava/lang/String;)Lio/dekorate/project/BuildInfoFluent;
     209: checkcast     #30                 // class io/dekorate/project/BuildInfoBuilder
     212: aload         5
     214: invokevirtual #33                 // Method io/dekorate/project/BuildInfoBuilder.withVersion:(Ljava/lang/String;)Lio/dekorate/project/BuildInfoFluent;
     217: checkcast     #30                 // class io/dekorate/project/BuildInfoBuilder
     220: aload         6
     222: invokevirtual #34                 // Method io/dekorate/project/BuildInfoBuilder.withPackaging:(Ljava/lang/String;)Lio/dekorate/project/BuildInfoFluent;
     225: checkcast     #30                 // class io/dekorate/project/BuildInfoBuilder
     228: ldc           #35                 // String bazel
     230: invokevirtual #36                 // Method io/dekorate/project/BuildInfoBuilder.withBuildTool:(Ljava/lang/String;)Lio/dekorate/project/BuildInfoFluent;
     233: checkcast     #30                 // class io/dekorate/project/BuildInfoBuilder
     236: aconst_null
     237: invokevirtual #37                 // Method io/dekorate/project/BuildInfoBuilder.withBuildToolVersion:(Ljava/lang/String;)Lio/dekorate/project/BuildInfoFluent;
     240: checkcast     #30                 // class io/dekorate/project/BuildInfoBuilder
     243: aload         9
     245: aload         10
     247: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     250: invokeinterface #4,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     255: invokevirtual #39                 // Method io/dekorate/project/BuildInfoBuilder.withOutputFile:(Ljava/nio/file/Path;)Lio/dekorate/project/BuildInfoFluent;
     258: checkcast     #30                 // class io/dekorate/project/BuildInfoBuilder
     261: aload_1
     262: ldc           #40                 // String bazel-out
     264: invokeinterface #4,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     269: invokevirtual #41                 // Method io/dekorate/project/BuildInfoBuilder.withClassOutputDir:(Ljava/nio/file/Path;)Lio/dekorate/project/BuildInfoFluent;
     272: checkcast     #30                 // class io/dekorate/project/BuildInfoBuilder
     275: invokevirtual #42                 // Method io/dekorate/project/BuildInfoBuilder.build:()Lio/dekorate/project/EditableBuildInfo;
     278: areturn

  protected static java.util.Map<java.lang.String, java.lang.String> readBuild(java.nio.file.Path);
    Code:
       0: new           #43                 // class java/util/concurrent/atomic/AtomicBoolean
       3: dup
       4: invokespecial #44                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
       7: astore_1
       8: new           #45                 // class java/util/concurrent/atomic/AtomicInteger
      11: dup
      12: iconst_0
      13: invokespecial #46                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      16: astore_2
      17: new           #7                  // class java/util/HashMap
      20: dup
      21: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      24: astore_3
      25: aload_0
      26: invokestatic  #47                 // Method java/nio/file/Files.lines:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;
      29: invokedynamic #48,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      34: invokeinterface #49,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      39: aload_1
      40: aload_2
      41: aload_3
      42: invokedynamic #50,  0             // InvokeDynamic #1:accept:(Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/Map;)Ljava/util/function/Consumer;
      47: invokeinterface #51,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      52: goto          63
      55: astore        4
      57: aload         4
      59: invokestatic  #53                 // Method io/dekorate/DekorateException.launderThrowable:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      62: athrow
      63: aload_3
      64: areturn
    Exception table:
       from    to  target type
          25    52    55   Class java/io/IOException

  private static void lambda$readBuild$1(java.util.concurrent.atomic.AtomicBoolean, java.util.concurrent.atomic.AtomicInteger, java.util.Map, java.lang.String);
    Code:
       0: aload_3
       1: ldc           #54                 // String java_binary
       3: invokevirtual #55                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          14
       9: aload_0
      10: iconst_1
      11: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      14: aload_3
      15: ldc           #57                 // String {
      17: invokevirtual #58                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      20: ifeq          28
      23: aload_1
      24: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      27: pop
      28: aload_3
      29: ldc           #60                 // String }
      31: invokevirtual #58                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      34: ifeq          42
      37: aload_1
      38: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      41: pop
      42: aload_1
      43: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      46: ifne          54
      49: aload_0
      50: iconst_0
      51: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      54: aload_0
      55: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      58: ifne          68
      61: aload_1
      62: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      65: ifne          192
      68: aload_3
      69: ldc           #64                 // String =
      71: invokevirtual #58                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      74: ifeq          192
      77: aload_3
      78: iconst_0
      79: aload_3
      80: ldc           #64                 // String =
      82: invokevirtual #65                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      85: invokevirtual #66                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      88: astore        4
      90: aload_3
      91: aload_3
      92: ldc           #64                 // String =
      94: invokevirtual #65                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      97: iconst_1
      98: iadd
      99: invokevirtual #67                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     102: ldc           #68                 // String \"
     104: ldc           #69                 // String
     106: invokevirtual #70                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     109: ldc           #71                 // String ,$
     111: ldc           #69                 // String
     113: invokevirtual #70                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     116: astore        5
     118: getstatic     #72                 // Field NAME_AND_VERSION:Ljava/util/regex/Pattern;
     121: aload         5
     123: invokevirtual #73                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     126: astore        6
     128: aload         4
     130: ldc           #11                 // String name
     132: invokevirtual #74                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     135: ifeq          181
     138: aload         6
     140: invokevirtual #75                 // Method java/util/regex/Matcher.matches:()Z
     143: ifeq          181
     146: aload_2
     147: ldc           #11                 // String name
     149: aload         6
     151: ldc           #11                 // String name
     153: invokevirtual #76                 // Method java/util/regex/Matcher.group:(Ljava/lang/String;)Ljava/lang/String;
     156: invokeinterface #77,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     161: pop
     162: aload_2
     163: ldc           #17                 // String version
     165: aload         6
     167: ldc           #17                 // String version
     169: invokevirtual #76                 // Method java/util/regex/Matcher.group:(Ljava/lang/String;)Ljava/lang/String;
     172: invokeinterface #77,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     177: pop
     178: goto          192
     181: aload_2
     182: aload         4
     184: aload         5
     186: invokeinterface #77,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     191: pop
     192: return

  private static java.lang.String lambda$readBuild$0(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #78                 // String [ ]*
       3: ldc           #69                 // String
       5: invokevirtual #70                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  static {};
    Code:
       0: ldc           #79                 // String (?<name>[^ ]+)-(?<version>[0-9\\.]+)
       2: invokestatic  #80                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #72                 // Field NAME_AND_VERSION:Ljava/util/regex/Pattern;
       8: return
}
