Compiled from "ScmInfoFluentImpl.java"
public class io.dekorate.project.ScmInfoFluentImpl<A extends io.dekorate.project.ScmInfoFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.BaseFluent<A> implements io.dekorate.project.ScmInfoFluent<A> {
  private java.nio.file.Path root;

  private java.lang.String url;

  private java.lang.String branch;

  private java.lang.String commit;

  public io.dekorate.project.ScmInfoFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/dekorate/deps/kubernetes/api/builder/BaseFluent."<init>":()V
       4: return

  public io.dekorate.project.ScmInfoFluentImpl(io.dekorate.project.ScmInfo);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/dekorate/deps/kubernetes/api/builder/BaseFluent."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method io/dekorate/project/ScmInfo.getRoot:()Ljava/nio/file/Path;
       9: invokevirtual #3                  // Method withRoot:(Ljava/nio/file/Path;)Lio/dekorate/project/ScmInfoFluent;
      12: pop
      13: aload_0
      14: aload_1
      15: invokevirtual #4                  // Method io/dekorate/project/ScmInfo.getUrl:()Ljava/lang/String;
      18: invokevirtual #5                  // Method withUrl:(Ljava/lang/String;)Lio/dekorate/project/ScmInfoFluent;
      21: pop
      22: aload_0
      23: aload_1
      24: invokevirtual #6                  // Method io/dekorate/project/ScmInfo.getBranch:()Ljava/lang/String;
      27: invokevirtual #7                  // Method withBranch:(Ljava/lang/String;)Lio/dekorate/project/ScmInfoFluent;
      30: pop
      31: aload_0
      32: aload_1
      33: invokevirtual #8                  // Method io/dekorate/project/ScmInfo.getCommit:()Ljava/lang/String;
      36: invokevirtual #9                  // Method withCommit:(Ljava/lang/String;)Lio/dekorate/project/ScmInfoFluent;
      39: pop
      40: return

  public java.nio.file.Path getRoot();
    Code:
       0: aload_0
       1: getfield      #10                 // Field root:Ljava/nio/file/Path;
       4: areturn

  public A withRoot(java.nio.file.Path);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field root:Ljava/nio/file/Path;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasRoot();
    Code:
       0: aload_0
       1: getfield      #10                 // Field root:Ljava/nio/file/Path;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public java.lang.String getUrl();
    Code:
       0: aload_0
       1: getfield      #12                 // Field url:Ljava/lang/String;
       4: areturn

  public A withUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field url:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasUrl();
    Code:
       0: aload_0
       1: getfield      #12                 // Field url:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewUrl(java.lang.String);
    Code:
       0: aload_0
       1: new           #13                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #14                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #5                  // Method withUrl:(Ljava/lang/String;)Lio/dekorate/project/ScmInfoFluent;
      12: areturn

  public A withNewUrl(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #13                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #15                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #5                  // Method withUrl:(Ljava/lang/String;)Lio/dekorate/project/ScmInfoFluent;
      12: areturn

  public A withNewUrl(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #13                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #16                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #5                  // Method withUrl:(Ljava/lang/String;)Lio/dekorate/project/ScmInfoFluent;
      12: areturn

  public java.lang.String getBranch();
    Code:
       0: aload_0
       1: getfield      #17                 // Field branch:Ljava/lang/String;
       4: areturn

  public A withBranch(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field branch:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasBranch();
    Code:
       0: aload_0
       1: getfield      #17                 // Field branch:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewBranch(java.lang.String);
    Code:
       0: aload_0
       1: new           #13                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #14                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #7                  // Method withBranch:(Ljava/lang/String;)Lio/dekorate/project/ScmInfoFluent;
      12: areturn

  public A withNewBranch(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #13                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #15                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #7                  // Method withBranch:(Ljava/lang/String;)Lio/dekorate/project/ScmInfoFluent;
      12: areturn

  public A withNewBranch(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #13                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #16                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #7                  // Method withBranch:(Ljava/lang/String;)Lio/dekorate/project/ScmInfoFluent;
      12: areturn

  public java.lang.String getCommit();
    Code:
       0: aload_0
       1: getfield      #18                 // Field commit:Ljava/lang/String;
       4: areturn

  public A withCommit(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field commit:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasCommit();
    Code:
       0: aload_0
       1: getfield      #18                 // Field commit:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewCommit(java.lang.String);
    Code:
       0: aload_0
       1: new           #13                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #14                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #9                  // Method withCommit:(Ljava/lang/String;)Lio/dekorate/project/ScmInfoFluent;
      12: areturn

  public A withNewCommit(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #13                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #15                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #9                  // Method withCommit:(Ljava/lang/String;)Lio/dekorate/project/ScmInfoFluent;
      12: areturn

  public A withNewCommit(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #13                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #16                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #9                  // Method withCommit:(Ljava/lang/String;)Lio/dekorate/project/ScmInfoFluent;
      12: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #20                 // class io/dekorate/project/ScmInfoFluentImpl
      28: astore_2
      29: aload_0
      30: getfield      #10                 // Field root:Ljava/nio/file/Path;
      33: ifnull        55
      36: aload_0
      37: getfield      #10                 // Field root:Ljava/nio/file/Path;
      40: aload_2
      41: getfield      #10                 // Field root:Ljava/nio/file/Path;
      44: invokeinterface #21,  2           // InterfaceMethod java/nio/file/Path.equals:(Ljava/lang/Object;)Z
      49: ifne          64
      52: goto          62
      55: aload_2
      56: getfield      #10                 // Field root:Ljava/nio/file/Path;
      59: ifnull        64
      62: iconst_0
      63: ireturn
      64: aload_0
      65: getfield      #12                 // Field url:Ljava/lang/String;
      68: ifnull        88
      71: aload_0
      72: getfield      #12                 // Field url:Ljava/lang/String;
      75: aload_2
      76: getfield      #12                 // Field url:Ljava/lang/String;
      79: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      82: ifne          97
      85: goto          95
      88: aload_2
      89: getfield      #12                 // Field url:Ljava/lang/String;
      92: ifnull        97
      95: iconst_0
      96: ireturn
      97: aload_0
      98: getfield      #17                 // Field branch:Ljava/lang/String;
     101: ifnull        121
     104: aload_0
     105: getfield      #17                 // Field branch:Ljava/lang/String;
     108: aload_2
     109: getfield      #17                 // Field branch:Ljava/lang/String;
     112: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     115: ifne          130
     118: goto          128
     121: aload_2
     122: getfield      #17                 // Field branch:Ljava/lang/String;
     125: ifnull        130
     128: iconst_0
     129: ireturn
     130: aload_0
     131: getfield      #18                 // Field commit:Ljava/lang/String;
     134: ifnull        154
     137: aload_0
     138: getfield      #18                 // Field commit:Ljava/lang/String;
     141: aload_2
     142: getfield      #18                 // Field commit:Ljava/lang/String;
     145: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     148: ifne          163
     151: goto          161
     154: aload_2
     155: getfield      #18                 // Field commit:Ljava/lang/String;
     158: ifnull        163
     161: iconst_0
     162: ireturn
     163: iconst_1
     164: ireturn
}
