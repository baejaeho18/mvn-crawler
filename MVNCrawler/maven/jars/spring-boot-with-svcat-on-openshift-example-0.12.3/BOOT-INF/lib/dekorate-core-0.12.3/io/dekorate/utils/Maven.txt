Compiled from "Maven.java"
public class io.dekorate.utils.Maven {
  public static java.lang.String MVN;

  public static java.lang.String MVNW;

  public static java.lang.String DASH_VERSION;

  public static java.lang.String NEW_LINE;

  public static java.lang.String SPACE;

  public static java.lang.String FALLBACK_MAVEN_VERSION;

  public io.dekorate.utils.Maven();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String getVersion(java.nio.file.Path);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field MVNW:Ljava/lang/String;
       4: invokeinterface #3,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
       9: astore_1
      10: aload_0
      11: invokestatic  #4                  // Method io/dekorate/utils/Git.getRoot:(Ljava/nio/file/Path;)Ljava/util/Optional;
      14: aload_0
      15: invokevirtual #5                  // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #6                  // class java/nio/file/Path
      21: getstatic     #2                  // Field MVNW:Ljava/lang/String;
      24: invokeinterface #3,  2            // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      29: astore_2
      30: new           #7                  // class java/io/ByteArrayOutputStream
      33: dup
      34: invokespecial #8                  // Method java/io/ByteArrayOutputStream."<init>":()V
      37: astore_3
      38: aload_0
      39: invokestatic  #9                  // Method io/dekorate/utils/Exec.inPath:(Ljava/nio/file/Path;)Lio/dekorate/utils/Exec$ProjectExec;
      42: aload_3
      43: invokevirtual #10                 // Method io/dekorate/utils/Exec$ProjectExec.redirectingOutput:(Ljava/io/OutputStream;)Lio/dekorate/utils/Exec$ProjectExec;
      46: astore        4
      48: iconst_0
      49: istore        5
      51: aload_1
      52: invokeinterface #11,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      57: invokevirtual #12                 // Method java/io/File.exists:()Z
      60: ifeq          97
      63: aload         4
      65: iconst_2
      66: anewarray     #13                 // class java/lang/String
      69: dup
      70: iconst_0
      71: aload_1
      72: invokeinterface #14,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
      77: invokeinterface #15,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      82: aastore
      83: dup
      84: iconst_1
      85: getstatic     #16                 // Field DASH_VERSION:Ljava/lang/String;
      88: aastore
      89: invokevirtual #17                 // Method io/dekorate/utils/Exec$ProjectExec.commands:([Ljava/lang/String;)Z
      92: istore        5
      94: goto          166
      97: aload_2
      98: invokeinterface #11,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
     103: invokevirtual #12                 // Method java/io/File.exists:()Z
     106: ifeq          143
     109: aload         4
     111: iconst_2
     112: anewarray     #13                 // class java/lang/String
     115: dup
     116: iconst_0
     117: aload_2
     118: invokeinterface #14,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
     123: invokeinterface #15,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
     128: aastore
     129: dup
     130: iconst_1
     131: getstatic     #16                 // Field DASH_VERSION:Ljava/lang/String;
     134: aastore
     135: invokevirtual #17                 // Method io/dekorate/utils/Exec$ProjectExec.commands:([Ljava/lang/String;)Z
     138: istore        5
     140: goto          166
     143: aload         4
     145: iconst_2
     146: anewarray     #13                 // class java/lang/String
     149: dup
     150: iconst_0
     151: getstatic     #18                 // Field MVN:Ljava/lang/String;
     154: aastore
     155: dup
     156: iconst_1
     157: getstatic     #16                 // Field DASH_VERSION:Ljava/lang/String;
     160: aastore
     161: invokevirtual #17                 // Method io/dekorate/utils/Exec$ProjectExec.commands:([Ljava/lang/String;)Z
     164: istore        5
     166: iload         5
     168: ifne          175
     171: getstatic     #19                 // Field FALLBACK_MAVEN_VERSION:Ljava/lang/String;
     174: areturn
     175: new           #13                 // class java/lang/String
     178: dup
     179: aload_3
     180: invokevirtual #20                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     183: invokespecial #21                 // Method java/lang/String."<init>":([B)V
     186: invokestatic  #22                 // Method getVersionFromOutput:(Ljava/lang/String;)Ljava/lang/String;
     189: areturn

  private static java.lang.String getVersionFromOutput(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method io/dekorate/utils/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
       4: ifeq          17
       7: new           #24                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #25                 // String Maven version output should not be empty!
      13: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getstatic     #27                 // Field NEW_LINE:Ljava/lang/String;
      21: invokevirtual #28                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      24: invokestatic  #29                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      27: invokedynamic #30,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      32: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      37: invokeinterface #32,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      42: astore_1
      43: aload_1
      44: invokevirtual #33                 // Method java/util/Optional.isPresent:()Z
      47: ifne          60
      50: new           #34                 // class java/lang/IllegalStateException
      53: dup
      54: ldc           #35                 // String Unknown maven version output format. Expected at least one line!
      56: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_1
      61: invokedynamic #37,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      66: invokevirtual #38                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      69: invokevirtual #39                 // Method java/util/Optional.get:()Ljava/lang/Object;
      72: checkcast     #40                 // class "[Ljava/lang/String;"
      75: astore_2
      76: aload_2
      77: arraylength
      78: iconst_3
      79: if_icmpge     92
      82: new           #34                 // class java/lang/IllegalStateException
      85: dup
      86: ldc           #41                 // String Unknown maven version output format. Expected \'Apache Maven x.y.z ...\'
      88: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      91: athrow
      92: aload_2
      93: iconst_2
      94: aaload
      95: areturn

  private static java.lang.String[] lambda$getVersionFromOutput$1(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #42                 // Field SPACE:Ljava/lang/String;
       4: invokevirtual #28                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       7: areturn

  private static boolean lambda$getVersionFromOutput$0(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #43                 // String Apache Maven
       3: invokevirtual #44                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ireturn

  static {};
    Code:
       0: ldc           #45                 // String mvn
       2: putstatic     #18                 // Field MVN:Ljava/lang/String;
       5: ldc           #46                 // String mvnw
       7: putstatic     #2                  // Field MVNW:Ljava/lang/String;
      10: ldc           #47                 // String -version
      12: putstatic     #16                 // Field DASH_VERSION:Ljava/lang/String;
      15: ldc           #48                 // String [\\n\\r]+
      17: putstatic     #27                 // Field NEW_LINE:Ljava/lang/String;
      20: ldc           #49                 // String
      22: putstatic     #42                 // Field SPACE:Ljava/lang/String;
      25: ldc           #50                 // String 3.6.3
      27: putstatic     #19                 // Field FALLBACK_MAVEN_VERSION:Ljava/lang/String;
      30: return
}
