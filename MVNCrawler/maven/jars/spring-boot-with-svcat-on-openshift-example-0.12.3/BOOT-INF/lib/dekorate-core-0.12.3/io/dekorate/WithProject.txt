Compiled from "WithProject.java"
public interface io.dekorate.WithProject {
  public static final java.util.concurrent.atomic.AtomicReference<io.dekorate.project.Project> project;

  public default boolean projectExists();
    Code:
       0: getstatic     #1                  // Field project:Ljava/util/concurrent/atomic/AtomicReference;
       3: invokevirtual #2                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public default io.dekorate.project.Project getProject();
    Code:
       0: getstatic     #1                  // Field project:Ljava/util/concurrent/atomic/AtomicReference;
       3: invokevirtual #2                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       6: checkcast     #3                  // class io/dekorate/project/Project
       9: areturn

  public default void setProject(io.dekorate.project.Project);
    Code:
       0: getstatic     #1                  // Field project:Ljava/util/concurrent/atomic/AtomicReference;
       3: aload_1
       4: invokevirtual #4                  // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
       7: return

  public default void applyToProject(java.util.function.Function<io.dekorate.project.Project, io.dekorate.project.Project>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokeinterface #5,  1            // InterfaceMethod getProject:()Lio/dekorate/project/Project;
       8: invokeinterface #6,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #3                  // class io/dekorate/project/Project
      16: invokeinterface #7,  2            // InterfaceMethod setProject:(Lio/dekorate/project/Project;)V
      21: return

  static {};
    Code:
       0: new           #8                  // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       7: putstatic     #1                  // Field project:Ljava/util/concurrent/atomic/AtomicReference;
      10: return
}
