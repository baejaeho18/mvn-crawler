Compiled from "AptReader.java"
public class io.dekorate.processor.AptReader implements io.dekorate.SessionReader,io.dekorate.WithProject {
  private static final java.lang.String INPUT_FILE_INCLUDE_REGEX;

  private static final java.lang.String INPUT_FILE_EXCLUDE_REGEX;

  private final javax.annotation.processing.ProcessingEnvironment processingEnv;

  private final java.util.regex.Pattern inputFileIncludePattern;

  private final java.util.regex.Pattern inputFileExcludePattern;

  io.dekorate.processor.AptReader(javax.annotation.processing.ProcessingEnvironment);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field processingEnv:Ljavax/annotation/processing/ProcessingEnvironment;
       9: aload_0
      10: ldc           #4                  // String ^(.*?)\\.(yml|yaml)$
      12: invokestatic  #5                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      15: putfield      #6                  // Field inputFileIncludePattern:Ljava/util/regex/Pattern;
      18: aload_0
      19: ldc           #7                  // String ^.*?-cr\\.(yml|yaml)$
      21: invokestatic  #5                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      24: putfield      #8                  // Field inputFileExcludePattern:Ljava/util/regex/Pattern;
      27: aload_0
      28: invokespecial #9                  // Method hack:()V
      31: return

  private void hack();
    Code:
       0: ldc           #10                 // class io/dekorate/deps/kubernetes/api/KubernetesResourceMappingProvider
       2: ldc           #3                  // class io/dekorate/processor/AptReader
       4: invokevirtual #11                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       7: invokestatic  #12                 // Method java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;
      10: invokevirtual #13                 // Method java/util/ServiceLoader.spliterator:()Ljava/util/Spliterator;
      13: iconst_0
      14: invokestatic  #14                 // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
      17: invokedynamic #15,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      22: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      27: invokedynamic #17,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      32: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      37: invokedynamic #18,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      42: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      47: invokedynamic #20,  0             // InvokeDynamic #3:accept:()Ljava/util/function/Consumer;
      52: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      57: return

  public void read(io.dekorate.Session);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method canRead:()Z
       4: ifeq          68
       7: aload_0
       8: invokespecial #23                 // Method listInputFiles:()Ljava/util/List;
      11: invokeinterface #24,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      16: aload_0
      17: invokedynamic #25,  0             // InvokeDynamic #4:apply:(Lio/dekorate/processor/AptReader;)Ljava/util/function/Function;
      22: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      27: invokedynamic #26,  0             // InvokeDynamic #5:test:()Ljava/util/function/Predicate;
      32: invokeinterface #27,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      37: invokedynamic #17,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      42: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      47: invokedynamic #18,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      52: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      57: aload_1
      58: invokedynamic #28,  0             // InvokeDynamic #6:accept:(Lio/dekorate/Session;)Ljava/util/function/Consumer;
      63: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      68: return

  private java.io.File getInputDir();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getProject:()Lio/dekorate/project/Project;
       4: invokevirtual #30                 // Method io/dekorate/project/Project.getBuildInfo:()Lio/dekorate/project/BuildInfo;
       7: invokevirtual #31                 // Method io/dekorate/project/BuildInfo.getResourceDir:()Ljava/nio/file/Path;
      10: aload_0
      11: invokevirtual #29                 // Method getProject:()Lio/dekorate/project/Project;
      14: invokevirtual #32                 // Method io/dekorate/project/Project.getDekorateInputDir:()Ljava/lang/String;
      17: invokeinterface #33,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      22: invokeinterface #34,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      27: areturn

  private boolean canRead();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method projectExists:()Z
       4: ifeq          44
       7: aload_0
       8: invokevirtual #29                 // Method getProject:()Lio/dekorate/project/Project;
      11: invokevirtual #32                 // Method io/dekorate/project/Project.getDekorateInputDir:()Ljava/lang/String;
      14: invokestatic  #36                 // Method io/dekorate/utils/Strings.isNotNullOrEmpty:(Ljava/lang/String;)Z
      17: ifeq          44
      20: aload_0
      21: invokespecial #37                 // Method getInputDir:()Ljava/io/File;
      24: invokevirtual #38                 // Method java/io/File.exists:()Z
      27: ifeq          44
      30: aload_0
      31: invokespecial #37                 // Method getInputDir:()Ljava/io/File;
      34: invokevirtual #39                 // Method java/io/File.isDirectory:()Z
      37: ifeq          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  private java.util.List<java.io.File> listInputFiles();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method getInputDir:()Ljava/io/File;
       4: aload_0
       5: invokedynamic #40,  0             // InvokeDynamic #7:accept:(Lio/dekorate/processor/AptReader;)Ljava/io/FilenameFilter;
      10: invokevirtual #41                 // Method java/io/File.listFiles:(Ljava/io/FilenameFilter;)[Ljava/io/File;
      13: astore_1
      14: aload_1
      15: invokestatic  #42                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      18: iconst_0
      19: anewarray     #43                 // class java/io/File
      22: invokevirtual #44                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #45                 // class "[Ljava/lang/Object;"
      28: invokestatic  #46                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      31: areturn

  private java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.KubernetesList> read(java.io.File);
    Code:
       0: new           #47                 // class java/io/FileInputStream
       3: dup
       4: aload_1
       5: invokespecial #48                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
       8: astore_2
       9: aconst_null
      10: astore_3
      11: aload_0
      12: getfield      #6                  // Field inputFileIncludePattern:Ljava/util/regex/Pattern;
      15: aload_1
      16: invokevirtual #49                 // Method java/io/File.getName:()Ljava/lang/String;
      19: invokevirtual #50                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      22: astore        4
      24: aload         4
      26: invokevirtual #51                 // Method java/util/regex/Matcher.find:()Z
      29: ifeq          41
      32: aload         4
      34: iconst_1
      35: invokevirtual #52                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      38: goto          43
      41: ldc           #53                 // String invalid-name
      43: astore        5
      45: aload_2
      46: ldc           #54                 // class io/dekorate/deps/kubernetes/api/model/KubernetesResource
      48: invokestatic  #55                 // Method io/dekorate/utils/Serialization.unmarshal:(Ljava/io/InputStream;Ljava/lang/Class;)Ljava/lang/Object;
      51: checkcast     #54                 // class io/dekorate/deps/kubernetes/api/model/KubernetesResource
      54: astore        6
      56: aload         6
      58: instanceof    #56                 // class io/dekorate/deps/kubernetes/api/model/KubernetesList
      61: ifeq          109
      64: aload         5
      66: aload         6
      68: checkcast     #56                 // class io/dekorate/deps/kubernetes/api/model/KubernetesList
      71: invokestatic  #57                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      74: astore        7
      76: aload_2
      77: ifnull        106
      80: aload_3
      81: ifnull        102
      84: aload_2
      85: invokevirtual #58                 // Method java/io/InputStream.close:()V
      88: goto          106
      91: astore        8
      93: aload_3
      94: aload         8
      96: invokevirtual #60                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      99: goto          106
     102: aload_2
     103: invokevirtual #58                 // Method java/io/InputStream.close:()V
     106: aload         7
     108: areturn
     109: aload         6
     111: instanceof    #61                 // class io/dekorate/deps/kubernetes/api/model/HasMetadata
     114: ifeq          189
     117: new           #62                 // class io/dekorate/deps/kubernetes/api/model/KubernetesListBuilder
     120: dup
     121: invokespecial #63                 // Method io/dekorate/deps/kubernetes/api/model/KubernetesListBuilder."<init>":()V
     124: astore        7
     126: aload         7
     128: iconst_1
     129: anewarray     #61                 // class io/dekorate/deps/kubernetes/api/model/HasMetadata
     132: dup
     133: iconst_0
     134: aload         6
     136: checkcast     #61                 // class io/dekorate/deps/kubernetes/api/model/HasMetadata
     139: aastore
     140: invokevirtual #64                 // Method io/dekorate/deps/kubernetes/api/model/KubernetesListBuilder.addToItems:([Lio/dekorate/deps/kubernetes/api/model/HasMetadata;)Lio/dekorate/deps/kubernetes/api/model/BaseKubernetesListFluent;
     143: pop
     144: aload         5
     146: aload         7
     148: invokevirtual #65                 // Method io/dekorate/deps/kubernetes/api/model/KubernetesListBuilder.build:()Lio/dekorate/deps/kubernetes/api/model/KubernetesList;
     151: invokestatic  #57                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
     154: astore        8
     156: aload_2
     157: ifnull        186
     160: aload_3
     161: ifnull        182
     164: aload_2
     165: invokevirtual #58                 // Method java/io/InputStream.close:()V
     168: goto          186
     171: astore        9
     173: aload_3
     174: aload         9
     176: invokevirtual #60                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     179: goto          186
     182: aload_2
     183: invokevirtual #58                 // Method java/io/InputStream.close:()V
     186: aload         8
     188: areturn
     189: aload_2
     190: ifnull        265
     193: aload_3
     194: ifnull        215
     197: aload_2
     198: invokevirtual #58                 // Method java/io/InputStream.close:()V
     201: goto          265
     204: astore        4
     206: aload_3
     207: aload         4
     209: invokevirtual #60                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     212: goto          265
     215: aload_2
     216: invokevirtual #58                 // Method java/io/InputStream.close:()V
     219: goto          265
     222: astore        4
     224: aload         4
     226: astore_3
     227: aload         4
     229: athrow
     230: astore        10
     232: aload_2
     233: ifnull        262
     236: aload_3
     237: ifnull        258
     240: aload_2
     241: invokevirtual #58                 // Method java/io/InputStream.close:()V
     244: goto          262
     247: astore        11
     249: aload_3
     250: aload         11
     252: invokevirtual #60                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     255: goto          262
     258: aload_2
     259: invokevirtual #58                 // Method java/io/InputStream.close:()V
     262: aload         10
     264: athrow
     265: goto          308
     268: astore_2
     269: aload_0
     270: getfield      #2                  // Field processingEnv:Ljavax/annotation/processing/ProcessingEnvironment;
     273: invokeinterface #67,  1           // InterfaceMethod javax/annotation/processing/ProcessingEnvironment.getMessager:()Ljavax/annotation/processing/Messager;
     278: getstatic     #68                 // Field javax/tools/Diagnostic$Kind.ERROR:Ljavax/tools/Diagnostic$Kind;
     281: new           #69                 // class java/lang/StringBuilder
     284: dup
     285: invokespecial #70                 // Method java/lang/StringBuilder."<init>":()V
     288: aload_1
     289: invokevirtual #71                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     292: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     295: ldc           #73                 // String  not found.
     297: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     300: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     303: invokeinterface #75,  3           // InterfaceMethod javax/annotation/processing/Messager.printMessage:(Ljavax/tools/Diagnostic$Kind;Ljava/lang/CharSequence;)V
     308: aconst_null
     309: areturn
    Exception table:
       from    to  target type
          84    88    91   Class java/lang/Throwable
         164   168   171   Class java/lang/Throwable
         197   201   204   Class java/lang/Throwable
          11    76   222   Class java/lang/Throwable
         109   156   222   Class java/lang/Throwable
          11    76   230   any
         109   156   230   any
         240   244   247   Class java/lang/Throwable
         222   232   230   any
           0   106   268   Class java/io/IOException
         109   186   268   Class java/io/IOException
         189   265   268   Class java/io/IOException

  private boolean lambda$listInputFiles$3(java.io.File, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field inputFileIncludePattern:Ljava/util/regex/Pattern;
       4: aload_2
       5: invokevirtual #50                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       8: invokevirtual #76                 // Method java/util/regex/Matcher.matches:()Z
      11: ifeq          32
      14: aload_0
      15: getfield      #8                  // Field inputFileExcludePattern:Ljava/util/regex/Pattern;
      18: aload_2
      19: invokevirtual #50                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      22: invokevirtual #76                 // Method java/util/regex/Matcher.matches:()Z
      25: ifne          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  private static void lambda$read$2(io.dekorate.Session, java.util.Map$Entry);
    Code:
       0: aload_1
       1: invokeinterface #77,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
       6: checkcast     #56                 // class io/dekorate/deps/kubernetes/api/model/KubernetesList
       9: invokevirtual #78                 // Method io/dekorate/deps/kubernetes/api/model/KubernetesList.getItems:()Ljava/util/List;
      12: aload_0
      13: aload_1
      14: invokedynamic #79,  0             // InvokeDynamic #8:accept:(Lio/dekorate/Session;Ljava/util/Map$Entry;)Ljava/util/function/Consumer;
      19: invokeinterface #80,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      24: return

  private static void lambda$null$1(io.dekorate.Session, java.util.Map$Entry, io.dekorate.deps.kubernetes.api.model.HasMetadata);
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method io/dekorate/Session.resources:()Lio/dekorate/Resources;
       4: aload_1
       5: invokeinterface #82,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      10: checkcast     #83                 // class java/lang/String
      13: aload_2
      14: invokevirtual #84                 // Method io/dekorate/Resources.add:(Ljava/lang/String;Lio/dekorate/deps/kubernetes/api/model/HasMetadata;)V
      17: return

  private static void lambda$hack$0(java.util.Map$Entry);
    Code:
       0: aload_0
       1: invokeinterface #82,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       6: checkcast     #83                 // class java/lang/String
       9: ldc           #85                 // String #
      11: invokevirtual #86                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      14: ifeq          53
      17: aload_0
      18: invokeinterface #82,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      23: checkcast     #83                 // class java/lang/String
      26: ldc           #85                 // String #
      28: invokevirtual #87                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      31: astore_1
      32: aload_1
      33: iconst_0
      34: aaload
      35: aload_1
      36: iconst_1
      37: aaload
      38: aload_0
      39: invokeinterface #77,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      44: checkcast     #88                 // class java/lang/Class
      47: invokestatic  #89                 // Method io/dekorate/deps/kubernetes/internal/KubernetesDeserializer.registerCustomKind:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)V
      50: goto          74
      53: aload_0
      54: invokeinterface #82,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      59: checkcast     #83                 // class java/lang/String
      62: aload_0
      63: invokeinterface #77,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      68: checkcast     #88                 // class java/lang/Class
      71: invokestatic  #90                 // Method io/dekorate/deps/kubernetes/internal/KubernetesDeserializer.registerCustomKind:(Ljava/lang/String;Ljava/lang/Class;)V
      74: return
}
