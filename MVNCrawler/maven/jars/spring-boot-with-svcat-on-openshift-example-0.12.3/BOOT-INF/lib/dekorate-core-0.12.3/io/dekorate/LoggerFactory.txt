Compiled from "LoggerFactory.java"
public abstract class io.dekorate.LoggerFactory<C> {
  private static io.dekorate.Logger LOGGER;

  public io.dekorate.LoggerFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.Class<C> getType();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #3                  // Method java/lang/Class.getGenericSuperclass:()Ljava/lang/reflect/Type;
       7: checkcast     #4                  // class java/lang/reflect/ParameterizedType
      10: astore_1
      11: aload_1
      12: invokeinterface #5,  1            // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;
      17: astore_2
      18: aload_2
      19: iconst_0
      20: aaload
      21: checkcast     #6                  // class java/lang/Class
      24: areturn

  protected abstract io.dekorate.Logger create(C);

  public static synchronized void setLogger(io.dekorate.Logger);
    Code:
       0: aload_0
       1: putstatic     #7                  // Field LOGGER:Lio/dekorate/Logger;
       4: return

  public static io.dekorate.Logger getLogger();
    Code:
       0: getstatic     #7                  // Field LOGGER:Lio/dekorate/Logger;
       3: ifnull        10
       6: getstatic     #7                  // Field LOGGER:Lio/dekorate/Logger;
       9: areturn
      10: ldc           #8                  // class io/dekorate/LoggerFactory
      12: dup
      13: astore_0
      14: monitorenter
      15: getstatic     #7                  // Field LOGGER:Lio/dekorate/Logger;
      18: ifnonnull     31
      21: new           #9                  // class io/dekorate/logger/AnsiLogger
      24: dup
      25: invokespecial #10                 // Method io/dekorate/logger/AnsiLogger."<init>":()V
      28: putstatic     #7                  // Field LOGGER:Lio/dekorate/Logger;
      31: aload_0
      32: monitorexit
      33: goto          41
      36: astore_1
      37: aload_0
      38: monitorexit
      39: aload_1
      40: athrow
      41: getstatic     #7                  // Field LOGGER:Lio/dekorate/Logger;
      44: areturn
    Exception table:
       from    to  target type
          15    33    36   any
          36    39    36   any

  public static <C> io.dekorate.Logger getLogger(C);
    Code:
       0: getstatic     #7                  // Field LOGGER:Lio/dekorate/Logger;
       3: ifnull        10
       6: getstatic     #7                  // Field LOGGER:Lio/dekorate/Logger;
       9: areturn
      10: ldc           #8                  // class io/dekorate/LoggerFactory
      12: dup
      13: astore_1
      14: monitorenter
      15: getstatic     #7                  // Field LOGGER:Lio/dekorate/Logger;
      18: ifnonnull     75
      21: ldc           #8                  // class io/dekorate/LoggerFactory
      23: ldc           #8                  // class io/dekorate/LoggerFactory
      25: invokevirtual #11                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      28: invokestatic  #12                 // Method java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;
      31: astore_2
      32: aload_2
      33: invokevirtual #13                 // Method java/util/ServiceLoader.spliterator:()Ljava/util/Spliterator;
      36: iconst_0
      37: invokestatic  #14                 // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
      40: aload_0
      41: invokedynamic #15,  0             // InvokeDynamic #0:test:(Ljava/lang/Object;)Ljava/util/function/Predicate;
      46: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      51: invokeinterface #17,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      56: aload_0
      57: invokedynamic #18,  0             // InvokeDynamic #1:get:(Ljava/lang/Object;)Ljava/util/function/Supplier;
      62: invokevirtual #19                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      65: checkcast     #8                  // class io/dekorate/LoggerFactory
      68: aload_0
      69: invokevirtual #20                 // Method create:(Ljava/lang/Object;)Lio/dekorate/Logger;
      72: putstatic     #7                  // Field LOGGER:Lio/dekorate/Logger;
      75: aload_1
      76: monitorexit
      77: goto          85
      80: astore_3
      81: aload_1
      82: monitorexit
      83: aload_3
      84: athrow
      85: getstatic     #7                  // Field LOGGER:Lio/dekorate/Logger;
      88: areturn
    Exception table:
       from    to  target type
          15    77    80   any
          80    83    80   any

  private static java.lang.IllegalStateException lambda$getLogger$1(java.lang.Object);
    Code:
       0: new           #21                 // class java/lang/IllegalStateException
       3: dup
       4: new           #22                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #24                 // String Could not find LoggerFactory that supports:
      13: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: ldc           #27                 // String .
      25: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      34: areturn

  private static boolean lambda$getLogger$0(java.lang.Object, io.dekorate.LoggerFactory);
    Code:
       0: aload_1
       1: invokevirtual #30                 // Method getType:()Ljava/lang/Class;
       4: aload_0
       5: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #31                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      11: ireturn
}
