Compiled from "AddServiceResourceDecorator.java"
public class io.dekorate.kubernetes.decorator.AddServiceResourceDecorator extends io.dekorate.kubernetes.decorator.ResourceProvidingDecorator<io.dekorate.deps.kubernetes.api.model.KubernetesListBuilder> {
  private static final io.dekorate.Logger LOGGER;

  private final io.dekorate.kubernetes.config.BaseConfig config;

  public io.dekorate.kubernetes.decorator.AddServiceResourceDecorator(io.dekorate.kubernetes.config.BaseConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/dekorate/kubernetes/decorator/ResourceProvidingDecorator."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field config:Lio/dekorate/kubernetes/config/BaseConfig;
       9: return

  public void visit(io.dekorate.deps.kubernetes.api.model.KubernetesListBuilder);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method io/dekorate/deps/kubernetes/api/model/KubernetesListBuilder.addNewServiceItem:()Lio/dekorate/deps/kubernetes/api/model/BaseKubernetesListFluent$ServiceItemsNested;
       4: invokeinterface #4,  1            // InterfaceMethod io/dekorate/deps/kubernetes/api/model/BaseKubernetesListFluent$ServiceItemsNested.withNewMetadata:()Lio/dekorate/deps/kubernetes/api/model/ServiceFluent$MetadataNested;
       9: aload_0
      10: getfield      #2                  // Field config:Lio/dekorate/kubernetes/config/BaseConfig;
      13: invokevirtual #5                  // Method io/dekorate/kubernetes/config/BaseConfig.getName:()Ljava/lang/String;
      16: invokeinterface #6,  2            // InterfaceMethod io/dekorate/deps/kubernetes/api/model/ServiceFluent$MetadataNested.withName:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/ObjectMetaFluent;
      21: checkcast     #7                  // class io/dekorate/deps/kubernetes/api/model/ServiceFluent$MetadataNested
      24: aload_0
      25: getfield      #2                  // Field config:Lio/dekorate/kubernetes/config/BaseConfig;
      28: invokestatic  #8                  // Method io/dekorate/utils/Labels.createLabels:(Lio/dekorate/kubernetes/config/BaseConfig;)Ljava/util/Map;
      31: invokeinterface #9,  2            // InterfaceMethod io/dekorate/deps/kubernetes/api/model/ServiceFluent$MetadataNested.withLabels:(Ljava/util/Map;)Lio/dekorate/deps/kubernetes/api/model/ObjectMetaFluent;
      36: checkcast     #7                  // class io/dekorate/deps/kubernetes/api/model/ServiceFluent$MetadataNested
      39: invokeinterface #10,  1           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/ServiceFluent$MetadataNested.endMetadata:()Ljava/lang/Object;
      44: checkcast     #11                 // class io/dekorate/deps/kubernetes/api/model/BaseKubernetesListFluent$ServiceItemsNested
      47: invokeinterface #12,  1           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/BaseKubernetesListFluent$ServiceItemsNested.withNewSpec:()Lio/dekorate/deps/kubernetes/api/model/ServiceFluent$SpecNested;
      52: aload_0
      53: getfield      #2                  // Field config:Lio/dekorate/kubernetes/config/BaseConfig;
      56: invokevirtual #13                 // Method io/dekorate/kubernetes/config/BaseConfig.getServiceType:()Lio/dekorate/kubernetes/annotation/ServiceType;
      59: invokevirtual #14                 // Method io/dekorate/kubernetes/annotation/ServiceType.name:()Ljava/lang/String;
      62: invokeinterface #15,  2           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/ServiceFluent$SpecNested.withType:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/ServiceSpecFluent;
      67: checkcast     #16                 // class io/dekorate/deps/kubernetes/api/model/ServiceFluent$SpecNested
      70: aload_0
      71: getfield      #2                  // Field config:Lio/dekorate/kubernetes/config/BaseConfig;
      74: invokestatic  #8                  // Method io/dekorate/utils/Labels.createLabels:(Lio/dekorate/kubernetes/config/BaseConfig;)Ljava/util/Map;
      77: invokeinterface #17,  2           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/ServiceFluent$SpecNested.withSelector:(Ljava/util/Map;)Lio/dekorate/deps/kubernetes/api/model/ServiceSpecFluent;
      82: checkcast     #16                 // class io/dekorate/deps/kubernetes/api/model/ServiceFluent$SpecNested
      85: aload_0
      86: getfield      #2                  // Field config:Lio/dekorate/kubernetes/config/BaseConfig;
      89: invokevirtual #18                 // Method io/dekorate/kubernetes/config/BaseConfig.getPorts:()[Lio/dekorate/kubernetes/config/Port;
      92: invokestatic  #19                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      95: invokeinterface #20,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     100: invokedynamic #21,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
     105: invokestatic  #22                 // Method distinct:(Ljava/util/function/Function;)Ljava/util/function/Predicate;
     108: invokeinterface #23,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     113: aload_0
     114: invokedynamic #24,  0             // InvokeDynamic #1:apply:(Lio/dekorate/kubernetes/decorator/AddServiceResourceDecorator;)Ljava/util/function/Function;
     119: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     124: invokestatic  #26                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     127: invokeinterface #27,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     132: checkcast     #28                 // class java/util/List
     135: invokeinterface #29,  2           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/ServiceFluent$SpecNested.withPorts:(Ljava/util/List;)Lio/dekorate/deps/kubernetes/api/model/ServiceSpecFluent;
     140: checkcast     #16                 // class io/dekorate/deps/kubernetes/api/model/ServiceFluent$SpecNested
     143: invokeinterface #30,  1           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/ServiceFluent$SpecNested.endSpec:()Ljava/lang/Object;
     148: checkcast     #11                 // class io/dekorate/deps/kubernetes/api/model/BaseKubernetesListFluent$ServiceItemsNested
     151: invokeinterface #31,  1           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/BaseKubernetesListFluent$ServiceItemsNested.endServiceItem:()Ljava/lang/Object;
     156: pop
     157: return

  private io.dekorate.deps.kubernetes.api.model.ServicePort toServicePort(io.dekorate.kubernetes.config.Port);
    Code:
       0: new           #32                 // class io/dekorate/deps/kubernetes/api/model/ServicePortBuilder
       3: dup
       4: invokespecial #33                 // Method io/dekorate/deps/kubernetes/api/model/ServicePortBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #34                 // Method io/dekorate/kubernetes/config/Port.getName:()Ljava/lang/String;
      11: invokevirtual #35                 // Method io/dekorate/deps/kubernetes/api/model/ServicePortBuilder.withName:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/ServicePortFluent;
      14: checkcast     #32                 // class io/dekorate/deps/kubernetes/api/model/ServicePortBuilder
      17: aload_1
      18: invokevirtual #36                 // Method io/dekorate/kubernetes/config/Port.getContainerPort:()I
      21: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: invokevirtual #38                 // Method io/dekorate/deps/kubernetes/api/model/ServicePortBuilder.withPort:(Ljava/lang/Integer;)Lio/dekorate/deps/kubernetes/api/model/ServicePortFluent;
      27: checkcast     #32                 // class io/dekorate/deps/kubernetes/api/model/ServicePortBuilder
      30: new           #39                 // class io/dekorate/deps/kubernetes/api/model/IntOrString
      33: dup
      34: aload_1
      35: invokevirtual #40                 // Method io/dekorate/kubernetes/config/Port.getHostPort:()I
      38: ifle          48
      41: aload_1
      42: invokevirtual #40                 // Method io/dekorate/kubernetes/config/Port.getHostPort:()I
      45: goto          52
      48: aload_1
      49: invokevirtual #36                 // Method io/dekorate/kubernetes/config/Port.getContainerPort:()I
      52: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      55: invokespecial #41                 // Method io/dekorate/deps/kubernetes/api/model/IntOrString."<init>":(Ljava/lang/Integer;)V
      58: invokevirtual #42                 // Method io/dekorate/deps/kubernetes/api/model/ServicePortBuilder.withTargetPort:(Lio/dekorate/deps/kubernetes/api/model/IntOrString;)Lio/dekorate/deps/kubernetes/api/model/ServicePortFluent;
      61: checkcast     #32                 // class io/dekorate/deps/kubernetes/api/model/ServicePortBuilder
      64: invokevirtual #43                 // Method io/dekorate/deps/kubernetes/api/model/ServicePortBuilder.build:()Lio/dekorate/deps/kubernetes/api/model/ServicePort;
      67: areturn

  public static <T> java.util.function.Predicate<T> distinct(java.util.function.Function<? super T, java.lang.Object>);
    Code:
       0: new           #44                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #45                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokedynamic #46,  0             // InvokeDynamic #2:test:(Ljava/util/function/Function;Ljava/util/Map;)Ljava/util/function/Predicate;
      15: areturn

  public void visit(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #47                 // class io/dekorate/deps/kubernetes/api/model/KubernetesListBuilder
       5: invokevirtual #48                 // Method visit:(Lio/dekorate/deps/kubernetes/api/model/KubernetesListBuilder;)V
       8: return

  private static boolean lambda$distinct$1(java.util.function.Function, java.util.Map, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #49,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: astore_3
       8: aload_3
       9: ifnonnull     24
      12: getstatic     #50                 // Field LOGGER:Lio/dekorate/Logger;
      15: ldc           #51                 // String Found incomplete port definition (name is missing). The port will be ignored.
      17: invokeinterface #52,  2           // InterfaceMethod io/dekorate/Logger.warning:(Ljava/lang/String;)V
      22: iconst_0
      23: ireturn
      24: aload_1
      25: aload_0
      26: aload_2
      27: invokeinterface #49,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      32: getstatic     #53                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      35: invokeinterface #54,  3           // InterfaceMethod java/util/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: ifnonnull     47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  private static java.lang.Object lambda$visit$0(io.dekorate.kubernetes.config.Port);
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method io/dekorate/kubernetes/config/Port.getName:()Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: invokestatic  #55                 // Method io/dekorate/LoggerFactory.getLogger:()Lio/dekorate/Logger;
       3: putstatic     #50                 // Field LOGGER:Lio/dekorate/Logger;
       6: return
}
