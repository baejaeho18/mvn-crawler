Compiled from "GeneratorRegistry.java"
public class io.dekorate.GeneratorRegistry {
  private static final java.util.Set<io.dekorate.Generator> registry;

  private static final java.util.Set<java.lang.String> blacklist;

  public io.dekorate.GeneratorRegistry();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.Set<io.dekorate.Generator> getGenerators();
    Code:
       0: getstatic     #2                  // Field registry:Ljava/util/Set;
       3: invokeinterface #3,  1            // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
       8: invokedynamic #4,  0              // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      13: invokeinterface #5,  2            // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      18: invokestatic  #6                  // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      21: invokeinterface #7,  2            // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      26: checkcast     #8                  // class java/util/Set
      29: areturn

  public static void register(io.dekorate.Generator);
    Code:
       0: getstatic     #2                  // Field registry:Ljava/util/Set;
       3: aload_0
       4: invokeinterface #9,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
       9: pop
      10: return

  public static void blacklist(java.lang.String...);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       4: invokedynamic #11,  0             // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
       9: invokeinterface #12,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      14: return

  private static void lambda$blacklist$2(java.lang.String);
    Code:
       0: getstatic     #13                 // Field blacklist:Ljava/util/Set;
       3: aload_0
       4: invokeinterface #9,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
       9: pop
      10: return

  private static boolean lambda$getGenerators$1(io.dekorate.Generator);
    Code:
       0: getstatic     #13                 // Field blacklist:Ljava/util/Set;
       3: aload_0
       4: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: invokevirtual #15                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      10: invokeinterface #16,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private static void lambda$static$0(io.dekorate.Generator);
    Code:
       0: getstatic     #2                  // Field registry:Ljava/util/Set;
       3: aload_0
       4: invokeinterface #9,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
       9: pop
      10: return

  static {};
    Code:
       0: new           #17                 // class java/util/HashSet
       3: dup
       4: invokespecial #18                 // Method java/util/HashSet."<init>":()V
       7: putstatic     #2                  // Field registry:Ljava/util/Set;
      10: new           #17                 // class java/util/HashSet
      13: dup
      14: invokespecial #18                 // Method java/util/HashSet."<init>":()V
      17: putstatic     #13                 // Field blacklist:Ljava/util/Set;
      20: ldc           #19                 // class io/dekorate/Generator
      22: ldc           #20                 // class io/dekorate/GeneratorRegistry
      24: invokevirtual #21                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      27: invokestatic  #22                 // Method java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;
      30: invokedynamic #23,  0             // InvokeDynamic #2:accept:()Ljava/util/function/Consumer;
      35: invokevirtual #24                 // Method java/util/ServiceLoader.forEach:(Ljava/util/function/Consumer;)V
      38: return
}
