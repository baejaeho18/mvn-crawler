Compiled from "AbstractAnnotationProcessor.java"
public abstract class io.dekorate.processor.AbstractAnnotationProcessor extends javax.annotation.processing.AbstractProcessor implements io.dekorate.WithProject,io.dekorate.WithSession {
  protected static final java.lang.String PACKAGE;

  protected static final java.lang.String PROJECT;

  protected static final java.lang.String JSON;

  protected static final java.lang.String YML;

  protected static final java.lang.String TMP;

  protected static final java.lang.String DOT;

  protected io.dekorate.Logger LOGGER;

  private final java.util.concurrent.atomic.AtomicReference<javax.annotation.processing.ProcessingEnvironment> processingEnvRef;

  public io.dekorate.processor.AbstractAnnotationProcessor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/annotation/processing/AbstractProcessor."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field processingEnvRef:Ljava/util/concurrent/atomic/AtomicReference;
      15: return

  public synchronized void init(javax.annotation.processing.ProcessingEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method javax/annotation/processing/AbstractProcessor.init:(Ljavax/annotation/processing/ProcessingEnvironment;)V
       5: aload_0
       6: getfield      #4                  // Field processingEnvRef:Ljava/util/concurrent/atomic/AtomicReference;
       9: aload_1
      10: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      13: aload_0
      14: invokevirtual #7                  // Method projectExists:()Z
      17: ifne          28
      20: aload_0
      21: aload_1
      22: invokestatic  #8                  // Method io/dekorate/project/AptProjectFactory.create:(Ljavax/annotation/processing/ProcessingEnvironment;)Lio/dekorate/project/Project;
      25: invokevirtual #9                  // Method setProject:(Lio/dekorate/project/Project;)V
      28: return

  public io.dekorate.Session getSession();
    Code:
       0: aload_0
       1: getfield      #4                  // Field processingEnvRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #11                 // class javax/annotation/processing/ProcessingEnvironment
      10: astore_1
      11: aload_1
      12: ifnonnull     25
      15: new           #12                 // class java/lang/IllegalStateException
      18: dup
      19: ldc           #13                 // String No processing environment available.
      21: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: invokestatic  #15                 // Method io/dekorate/Session.getSession:()Lio/dekorate/Session;
      28: astore_2
      29: aload_2
      30: invokevirtual #16                 // Method io/dekorate/Session.hasReader:()Z
      33: ifne          48
      36: aload_2
      37: new           #17                 // class io/dekorate/processor/AptReader
      40: dup
      41: aload_1
      42: invokespecial #18                 // Method io/dekorate/processor/AptReader."<init>":(Ljavax/annotation/processing/ProcessingEnvironment;)V
      45: invokevirtual #19                 // Method io/dekorate/Session.setReader:(Lio/dekorate/SessionReader;)V
      48: aload_2
      49: invokevirtual #20                 // Method io/dekorate/Session.hasWriter:()Z
      52: ifne          71
      55: aload_2
      56: new           #21                 // class io/dekorate/processor/AptWriter
      59: dup
      60: aload_0
      61: invokevirtual #22                 // Method getProject:()Lio/dekorate/project/Project;
      64: aload_1
      65: invokespecial #23                 // Method io/dekorate/processor/AptWriter."<init>":(Lio/dekorate/project/Project;Ljavax/annotation/processing/ProcessingEnvironment;)V
      68: invokevirtual #24                 // Method io/dekorate/Session.setWriter:(Lio/dekorate/SessionWriter;)V
      71: aload_2
      72: areturn

  protected java.util.Map<java.lang.String, java.lang.Object> readApplicationConfig(java.lang.String...);
    Code:
       0: new           #25                 // class java/util/HashMap
       3: dup
       4: invokespecial #26                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: astore_3
      10: aload_3
      11: arraylength
      12: istore        4
      14: iconst_0
      15: istore        5
      17: iload         5
      19: iload         4
      21: if_icmpge     271
      24: aload_3
      25: iload         5
      27: aaload
      28: astore        6
      30: new           #27                 // class java/io/FileInputStream
      33: dup
      34: aload_0
      35: invokevirtual #22                 // Method getProject:()Lio/dekorate/project/Project;
      38: invokevirtual #28                 // Method io/dekorate/project/Project.getBuildInfo:()Lio/dekorate/project/BuildInfo;
      41: invokevirtual #29                 // Method io/dekorate/project/BuildInfo.getResourceDir:()Ljava/nio/file/Path;
      44: aload         6
      46: invokeinterface #30,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      51: invokeinterface #31,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      56: invokespecial #32                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      59: astore        7
      61: aconst_null
      62: astore        8
      64: aload         6
      66: ldc           #33                 // String .properties
      68: invokevirtual #34                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      71: ifeq          90
      74: aload         7
      76: invokestatic  #35                 // Method io/dekorate/utils/Maps.fromProperties:(Ljava/io/InputStream;)Ljava/util/Map;
      79: astore        9
      81: aload_2
      82: aload         9
      84: invokestatic  #36                 // Method io/dekorate/utils/Maps.merge:(Ljava/util/Map;Ljava/util/Map;)V
      87: goto          162
      90: aload         6
      92: ldc           #37                 // String .yml
      94: invokevirtual #34                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      97: ifne          110
     100: aload         6
     102: ldc           #38                 // String .yaml
     104: invokevirtual #34                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     107: ifeq          129
     110: aload         7
     112: invokestatic  #39                 // Method io/dekorate/utils/Maps.fromYaml:(Ljava/io/InputStream;)Ljava/util/Map;
     115: invokestatic  #40                 // Method io/dekorate/utils/Maps.kebabToCamelCase:(Ljava/util/Map;)Ljava/util/Map;
     118: astore        9
     120: aload_2
     121: aload         9
     123: invokestatic  #36                 // Method io/dekorate/utils/Maps.merge:(Ljava/util/Map;Ljava/util/Map;)V
     126: goto          162
     129: new           #41                 // class java/lang/IllegalArgumentException
     132: dup
     133: new           #42                 // class java/lang/StringBuilder
     136: dup
     137: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     140: ldc           #44                 // String Illegal resource name:
     142: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: aload         6
     147: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: ldc           #46                 // String . It needs to be properties or yaml file.
     152: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     158: invokespecial #48                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     161: athrow
     162: aload         7
     164: ifnull        249
     167: aload         8
     169: ifnull        192
     172: aload         7
     174: invokevirtual #49                 // Method java/io/InputStream.close:()V
     177: goto          249
     180: astore        9
     182: aload         8
     184: aload         9
     186: invokevirtual #51                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     189: goto          249
     192: aload         7
     194: invokevirtual #49                 // Method java/io/InputStream.close:()V
     197: goto          249
     200: astore        9
     202: aload         9
     204: astore        8
     206: aload         9
     208: athrow
     209: astore        10
     211: aload         7
     213: ifnull        246
     216: aload         8
     218: ifnull        241
     221: aload         7
     223: invokevirtual #49                 // Method java/io/InputStream.close:()V
     226: goto          246
     229: astore        11
     231: aload         8
     233: aload         11
     235: invokevirtual #51                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     238: goto          246
     241: aload         7
     243: invokevirtual #49                 // Method java/io/InputStream.close:()V
     246: aload         10
     248: athrow
     249: goto          265
     252: astore        7
     254: goto          265
     257: astore        7
     259: aload         7
     261: invokestatic  #55                 // Method io/dekorate/DekorateException.launderThrowable:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     264: athrow
     265: iinc          5, 1
     268: goto          17
     271: aload_2
     272: areturn
    Exception table:
       from    to  target type
         172   177   180   Class java/lang/Throwable
          64   162   200   Class java/lang/Throwable
          64   162   209   any
         221   226   229   Class java/lang/Throwable
         200   211   209   any
          30   249   252   Class java/io/FileNotFoundException
          30   249   252   Class java/nio/file/NoSuchFileException
          30   249   257   Class java/lang/Exception

  private void mergeProperties(java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_2
       1: invokeinterface #56,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       6: invokeinterface #57,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_3
      12: aload_3
      13: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          114
      21: aload_3
      22: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #60                 // class java/lang/String
      30: astore        4
      32: aload_1
      33: aload         4
      35: invokeinterface #61,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      40: ifeq          104
      43: ldc           #62                 // class java/util/Map
      45: aload_1
      46: aload         4
      48: invokeinterface #63,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      53: invokevirtual #64                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      56: ifeq          104
      59: ldc           #62                 // class java/util/Map
      61: aload_2
      62: aload         4
      64: invokeinterface #63,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: invokevirtual #64                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      72: ifeq          104
      75: aload_0
      76: aload_1
      77: aload         4
      79: invokeinterface #63,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      84: checkcast     #62                 // class java/util/Map
      87: aload_2
      88: aload         4
      90: invokeinterface #63,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      95: checkcast     #62                 // class java/util/Map
      98: invokespecial #65                 // Method mergeProperties:(Ljava/util/Map;Ljava/util/Map;)V
     101: goto          111
     104: aload_1
     105: aload_2
     106: invokeinterface #66,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     111: goto          12
     114: return

  public java.nio.file.Path getOutputDirectory();
    Code:
       0: aload_0
       1: getfield      #67                 // Field processingEnv:Ljavax/annotation/processing/ProcessingEnvironment;
       4: invokeinterface #68,  1           // InterfaceMethod javax/annotation/processing/ProcessingEnvironment.getFiler:()Ljavax/annotation/processing/Filer;
       9: getstatic     #69                 // Field javax/tools/StandardLocation.CLASS_OUTPUT:Ljavax/tools/StandardLocation;
      12: ldc           #71                 // String
      14: ldc           #72                 // String META-INF/dekorate/.project.%s
      16: iconst_1
      17: anewarray     #73                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: ldc           #74                 // String tmp
      24: aastore
      25: invokestatic  #75                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      28: invokeinterface #76,  4           // InterfaceMethod javax/annotation/processing/Filer.getResource:(Ljavax/tools/JavaFileManager$Location;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljavax/tools/FileObject;
      33: astore_1
      34: aload_1
      35: invokeinterface #77,  1           // InterfaceMethod javax/tools/FileObject.toUri:()Ljava/net/URI;
      40: invokevirtual #78                 // Method java/net/URI.toURL:()Ljava/net/URL;
      43: invokestatic  #79                 // Method io/dekorate/utils/Urls.toFile:(Ljava/net/URL;)Ljava/io/File;
      46: invokevirtual #80                 // Method java/io/File.getParentFile:()Ljava/io/File;
      49: invokevirtual #81                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      52: iconst_0
      53: anewarray     #60                 // class java/lang/String
      56: invokestatic  #82                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      59: areturn
      60: astore_1
      61: aload_1
      62: invokestatic  #55                 // Method io/dekorate/DekorateException.launderThrowable:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      65: athrow
    Exception table:
       from    to  target type
           0    59    60   Class java/io/IOException
}
