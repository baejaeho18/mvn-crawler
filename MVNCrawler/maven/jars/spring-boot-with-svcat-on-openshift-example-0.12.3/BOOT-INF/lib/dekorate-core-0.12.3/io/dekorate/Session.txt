Compiled from "Session.java"
public class io.dekorate.Session {
  private static io.dekorate.Session INSTANCE;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  private final java.util.concurrent.atomic.AtomicBoolean generated;

  private final java.util.Set<io.dekorate.Handler> handlers;

  private final java.util.Map<java.lang.String, io.dekorate.Generator> generators;

  private final java.util.Map<java.lang.String, java.lang.Class<? extends java.lang.annotation.Annotation>> annotations;

  private final io.dekorate.Configurators configurators;

  private final io.dekorate.Resources resources;

  private final java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.KubernetesList> generatedResources;

  private final java.util.concurrent.atomic.AtomicReference<io.dekorate.SessionReader> reader;

  private final java.util.concurrent.atomic.AtomicReference<io.dekorate.SessionWriter> writer;

  private final java.util.Map<java.lang.Class<? extends io.dekorate.SessionListener>, io.dekorate.SessionListener> listeners;

  private final io.dekorate.Logger LOGGER;

  public static io.dekorate.Session getSession();
    Code:
       0: invokestatic  #1                  // Method io/dekorate/LoggerFactory.getLogger:()Lio/dekorate/Logger;
       3: invokestatic  #2                  // Method getSession:(Lio/dekorate/Logger;)Lio/dekorate/Session;
       6: areturn

  public static io.dekorate.Session getSession(io.dekorate.Logger);
    Code:
       0: getstatic     #3                  // Field INSTANCE:Lio/dekorate/Session;
       3: ifnull        10
       6: getstatic     #3                  // Field INSTANCE:Lio/dekorate/Session;
       9: areturn
      10: ldc           #4                  // class io/dekorate/Session
      12: dup
      13: astore_1
      14: monitorenter
      15: getstatic     #3                  // Field INSTANCE:Lio/dekorate/Session;
      18: ifnonnull     44
      21: new           #4                  // class io/dekorate/Session
      24: dup
      25: aload_0
      26: invokespecial #5                  // Method "<init>":(Lio/dekorate/Logger;)V
      29: putstatic     #3                  // Field INSTANCE:Lio/dekorate/Session;
      32: getstatic     #3                  // Field INSTANCE:Lio/dekorate/Session;
      35: invokevirtual #6                  // Method loadHandlers:()V
      38: getstatic     #3                  // Field INSTANCE:Lio/dekorate/Session;
      41: invokevirtual #7                  // Method loadGenerators:()V
      44: aload_1
      45: monitorexit
      46: goto          54
      49: astore_2
      50: aload_1
      51: monitorexit
      52: aload_2
      53: athrow
      54: getstatic     #3                  // Field INSTANCE:Lio/dekorate/Session;
      57: areturn
    Exception table:
       from    to  target type
          15    46    49   any
          49    52    49   any

  protected io.dekorate.Session(io.dekorate.Logger);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #9                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #11                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: new           #9                  // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      23: putfield      #12                 // Field generated:Ljava/util/concurrent/atomic/AtomicBoolean;
      26: aload_0
      27: new           #13                 // class java/util/TreeSet
      30: dup
      31: invokedynamic #14,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      36: invokestatic  #15                 // InterfaceMethod java/util/Comparator.comparing:(Ljava/util/function/Function;)Ljava/util/Comparator;
      39: invokespecial #16                 // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      42: putfield      #17                 // Field handlers:Ljava/util/Set;
      45: aload_0
      46: new           #18                 // class java/util/HashMap
      49: dup
      50: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      53: putfield      #20                 // Field generators:Ljava/util/Map;
      56: aload_0
      57: new           #18                 // class java/util/HashMap
      60: dup
      61: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      64: putfield      #21                 // Field annotations:Ljava/util/Map;
      67: aload_0
      68: new           #22                 // class io/dekorate/Configurators
      71: dup
      72: invokespecial #23                 // Method io/dekorate/Configurators."<init>":()V
      75: putfield      #24                 // Field configurators:Lio/dekorate/Configurators;
      78: aload_0
      79: new           #25                 // class io/dekorate/Resources
      82: dup
      83: invokespecial #26                 // Method io/dekorate/Resources."<init>":()V
      86: putfield      #27                 // Field resources:Lio/dekorate/Resources;
      89: aload_0
      90: new           #18                 // class java/util/HashMap
      93: dup
      94: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      97: putfield      #28                 // Field generatedResources:Ljava/util/Map;
     100: aload_0
     101: new           #29                 // class java/util/concurrent/atomic/AtomicReference
     104: dup
     105: invokespecial #30                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
     108: putfield      #31                 // Field reader:Ljava/util/concurrent/atomic/AtomicReference;
     111: aload_0
     112: new           #29                 // class java/util/concurrent/atomic/AtomicReference
     115: dup
     116: invokespecial #30                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
     119: putfield      #32                 // Field writer:Ljava/util/concurrent/atomic/AtomicReference;
     122: aload_0
     123: new           #18                 // class java/util/HashMap
     126: dup
     127: invokespecial #19                 // Method java/util/HashMap."<init>":()V
     130: putfield      #33                 // Field listeners:Ljava/util/Map;
     133: aload_1
     134: invokestatic  #34                 // Method io/dekorate/LoggerFactory.setLogger:(Lio/dekorate/Logger;)V
     137: aload_0
     138: aload_1
     139: putfield      #35                 // Field LOGGER:Lio/dekorate/Logger;
     142: aload_0
     143: getfield      #35                 // Field LOGGER:Lio/dekorate/Logger;
     146: ldc           #36                 // String Initializing dekorate session.
     148: invokeinterface #37,  2           // InterfaceMethod io/dekorate/Logger.info:(Ljava/lang/String;)V
     153: return

  public void loadHandlers();
    Code:
       0: invokestatic  #38                 // Method io/dekorate/HandlerFactoryRegistry.getHandlerfaFactories:()Ljava/util/Set;
       3: invokeinterface #39,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
       8: aload_0
       9: invokedynamic #40,  0             // InvokeDynamic #1:accept:(Lio/dekorate/Session;)Ljava/util/function/Consumer;
      14: invokeinterface #41,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      19: return

  public void loadGenerators();
    Code:
       0: invokestatic  #42                 // Method io/dekorate/GeneratorRegistry.getGenerators:()Ljava/util/Set;
       3: invokeinterface #39,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
       8: invokedynamic #43,  0             // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
      13: invokeinterface #44,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      18: aload_0
      19: invokedynamic #45,  0             // InvokeDynamic #3:accept:(Lio/dekorate/Session;)Ljava/util/function/Consumer;
      24: invokeinterface #41,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      29: invokestatic  #42                 // Method io/dekorate/GeneratorRegistry.getGenerators:()Ljava/util/Set;
      32: invokeinterface #39,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      37: invokedynamic #46,  0             // InvokeDynamic #4:test:()Ljava/util/function/Predicate;
      42: invokeinterface #44,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      47: aload_0
      48: invokedynamic #47,  0             // InvokeDynamic #5:accept:(Lio/dekorate/Session;)Ljava/util/function/Consumer;
      53: invokeinterface #41,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      58: return

  public void feed(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: invokeinterface #48,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #49,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          193
      21: aload_2
      22: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #52                 // class java/util/Map$Entry
      30: astore_3
      31: aload_3
      32: invokeinterface #53,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      37: checkcast     #54                 // class java/lang/String
      40: astore        4
      42: aload_3
      43: invokeinterface #55,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      48: astore        5
      50: aload_0
      51: getfield      #20                 // Field generators:Ljava/util/Map;
      54: aload         4
      56: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      61: checkcast     #57                 // class io/dekorate/Generator
      64: astore        6
      66: aload         6
      68: ifnonnull     116
      71: new           #58                 // class java/lang/IllegalArgumentException
      74: dup
      75: new           #59                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #61                 // String Unknown generator \'
      84: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload         4
      89: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #63                 // String \'. Known generators are:
      94: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_0
      98: getfield      #20                 // Field generators:Ljava/util/Map;
     101: invokeinterface #64,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     106: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     109: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: invokespecial #67                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     115: athrow
     116: aload         5
     118: instanceof    #68                 // class java/util/Map
     121: ifeq          190
     124: new           #18                 // class java/util/HashMap
     127: dup
     128: invokespecial #19                 // Method java/util/HashMap."<init>":()V
     131: astore        7
     133: aload_0
     134: getfield      #21                 // Field annotations:Ljava/util/Map;
     137: aload         4
     139: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     144: checkcast     #69                 // class java/lang/Class
     147: astore        8
     149: aload         8
     151: invokevirtual #70                 // Method java/lang/Class.getName:()Ljava/lang/String;
     154: astore        9
     156: aload         8
     158: aload         5
     160: checkcast     #68                 // class java/util/Map
     163: invokestatic  #71                 // Method io/dekorate/utils/Generators.populateArrays:(Ljava/lang/Class;Ljava/util/Map;)V
     166: aload         7
     168: aload         9
     170: aload         5
     172: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     177: pop
     178: aload         6
     180: aload         7
     182: invokestatic  #73                 // Method io/dekorate/utils/Maps.kebabToCamelCase:(Ljava/util/Map;)Ljava/util/Map;
     185: invokeinterface #74,  2           // InterfaceMethod io/dekorate/Generator.add:(Ljava/util/Map;)V
     190: goto          12
     193: return

  private java.util.Map<java.lang.String, java.lang.Object> filter(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #18                 // class java/util/HashMap
       3: dup
       4: invokespecial #19                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #48,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #49,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          118
      29: aload_3
      30: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #52                 // class java/util/Map$Entry
      38: astore        4
      40: aload         4
      42: invokeinterface #53,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: checkcast     #54                 // class java/lang/String
      50: astore        5
      52: aload         4
      54: invokeinterface #55,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: astore        6
      61: aload_0
      62: getfield      #21                 // Field annotations:Ljava/util/Map;
      65: aload         5
      67: invokeinterface #75,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      72: ifeq          104
      75: aload_2
      76: aload_0
      77: getfield      #21                 // Field annotations:Ljava/util/Map;
      80: aload         5
      82: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      87: checkcast     #69                 // class java/lang/Class
      90: invokevirtual #70                 // Method java/lang/Class.getName:()Ljava/lang/String;
      93: aload         6
      95: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     100: pop
     101: goto          115
     104: aload_2
     105: aload         5
     107: aload         6
     109: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     114: pop
     115: goto          20
     118: aload_2
     119: areturn

  public static void clearSession();
    Code:
       0: aconst_null
       1: putstatic     #3                  // Field INSTANCE:Lio/dekorate/Session;
       4: return

  public io.dekorate.Configurators configurators();
    Code:
       0: aload_0
       1: getfield      #24                 // Field configurators:Lio/dekorate/Configurators;
       4: areturn

  public io.dekorate.Resources resources();
    Code:
       0: aload_0
       1: getfield      #27                 // Field resources:Lio/dekorate/Resources;
       4: areturn

  public java.util.Set<io.dekorate.Handler> handlers();
    Code:
       0: aload_0
       1: getfield      #17                 // Field handlers:Ljava/util/Set;
       4: areturn

  public java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.KubernetesList> getGeneratedResources();
    Code:
       0: aload_0
       1: getfield      #28                 // Field generatedResources:Ljava/util/Map;
       4: areturn

  public boolean hasReader();
    Code:
       0: aload_0
       1: getfield      #31                 // Field reader:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void setReader(io.dekorate.SessionReader);
    Code:
       0: aload_0
       1: getfield      #31                 // Field reader:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
       8: return

  public void setWriter(io.dekorate.SessionWriter);
    Code:
       0: aload_0
       1: getfield      #32                 // Field writer:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
       8: return

  public boolean hasWriter();
    Code:
       0: aload_0
       1: getfield      #32                 // Field writer:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void addListener(io.dekorate.SessionListener);
    Code:
       0: aload_0
       1: getfield      #33                 // Field listeners:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #78                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: aload_1
       9: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  public java.util.Map<java.lang.String, java.lang.String> close();
    Code:
       0: aload_0
       1: getfield      #11                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #79                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          87
      12: aload_0
      13: invokespecial #80                 // Method generate:()Ljava/util/Map;
      16: pop
      17: aload_0
      18: getfield      #32                 // Field writer:Ljava/util/concurrent/atomic/AtomicReference;
      21: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      24: checkcast     #81                 // class io/dekorate/SessionWriter
      27: astore_1
      28: aload_1
      29: ifnonnull     42
      32: new           #82                 // class java/lang/IllegalStateException
      35: dup
      36: ldc           #83                 // String No writer has been specified!
      38: invokespecial #84                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_1
      43: aload_0
      44: invokeinterface #85,  2           // InterfaceMethod io/dekorate/SessionWriter.write:(Lio/dekorate/Session;)Ljava/util/Map;
      49: astore_2
      50: aload_0
      51: getfield      #33                 // Field listeners:Ljava/util/Map;
      54: invokeinterface #86,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      59: invokeinterface #87,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      64: invokedynamic #88,  0             // InvokeDynamic #6:accept:()Ljava/util/function/Consumer;
      69: invokeinterface #41,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      74: aload_0
      75: getfield      #35                 // Field LOGGER:Lio/dekorate/Logger;
      78: ldc           #89                 // String Closing dekorate session.
      80: invokeinterface #37,  2           // InterfaceMethod io/dekorate/Logger.info:(Ljava/lang/String;)V
      85: aload_2
      86: areturn
      87: new           #18                 // class java/util/HashMap
      90: dup
      91: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      94: areturn

  private java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.KubernetesList> generate();
    Code:
       0: aload_0
       1: getfield      #12                 // Field generated:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #79                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          70
      12: aload_0
      13: getfield      #35                 // Field LOGGER:Lio/dekorate/Logger;
      16: ldc           #90                 // String Generating manifests.
      18: invokeinterface #37,  2           // InterfaceMethod io/dekorate/Logger.info:(Ljava/lang/String;)V
      23: aload_0
      24: getfield      #11                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      27: iconst_1
      28: invokevirtual #91                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      31: aload_0
      32: invokespecial #92                 // Method readExistingResources:()V
      35: aload_0
      36: invokespecial #93                 // Method populateFallbackConfig:()V
      39: aload_0
      40: getfield      #17                 // Field handlers:Ljava/util/Set;
      43: aload_0
      44: invokedynamic #94,  0             // InvokeDynamic #7:accept:(Lio/dekorate/Session;)Ljava/util/function/Consumer;
      49: invokeinterface #95,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      54: aload_0
      55: getfield      #28                 // Field generatedResources:Ljava/util/Map;
      58: aload_0
      59: getfield      #27                 // Field resources:Lio/dekorate/Resources;
      62: invokevirtual #96                 // Method io/dekorate/Resources.generate:()Ljava/util/Map;
      65: invokeinterface #97,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      70: aload_0
      71: getfield      #28                 // Field generatedResources:Ljava/util/Map;
      74: invokestatic  #98                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      77: areturn

  private void readExistingResources();
    Code:
       0: aload_0
       1: getfield      #31                 // Field reader:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: invokestatic  #99                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      10: aload_0
      11: invokedynamic #100,  0            // InvokeDynamic #8:accept:(Lio/dekorate/Session;)Ljava/util/function/Consumer;
      16: invokevirtual #101                // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      19: return

  private void populateFallbackConfig();
    Code:
       0: aload_0
       1: getfield      #24                 // Field configurators:Lio/dekorate/Configurators;
       4: invokestatic  #102                // Method hasApplicationConfiguration:(Lio/dekorate/Configurators;)Z
       7: ifne          30
      10: aload_0
      11: getfield      #17                 // Field handlers:Ljava/util/Set;
      14: invokeinterface #39,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      19: aload_0
      20: invokedynamic #103,  0            // InvokeDynamic #9:accept:(Lio/dekorate/Session;)Ljava/util/function/Consumer;
      25: invokeinterface #41,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      30: return

  private static void handle(io.dekorate.Handler, io.dekorate.Configurators);
    Code:
       0: aload_1
       1: invokevirtual #104                // Method io/dekorate/Configurators.stream:()Ljava/util/stream/Stream;
       4: aload_0
       5: invokedynamic #105,  0            // InvokeDynamic #10:accept:(Lio/dekorate/Handler;)Ljava/util/function/Consumer;
      10: invokeinterface #41,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      15: return

  private static boolean hasApplicationConfiguration(io.dekorate.Configurators);
    Code:
       0: aload_0
       1: invokevirtual #104                // Method io/dekorate/Configurators.stream:()Ljava/util/stream/Stream;
       4: invokedynamic #106,  0            // InvokeDynamic #11:test:()Ljava/util/function/Predicate;
       9: invokeinterface #107,  2          // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      14: ireturn

  private static boolean hasMatchingConfiguration(io.dekorate.Handler, io.dekorate.Configurators);
    Code:
       0: aload_1
       1: invokevirtual #104                // Method io/dekorate/Configurators.stream:()Ljava/util/stream/Stream;
       4: aload_0
       5: invokedynamic #108,  0            // InvokeDynamic #12:test:(Lio/dekorate/Handler;)Ljava/util/function/Predicate;
      10: invokeinterface #107,  2          // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      15: ireturn

  private static boolean lambda$hasMatchingConfiguration$10(io.dekorate.Handler, io.dekorate.kubernetes.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #78                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokeinterface #109,  2          // InterfaceMethod io/dekorate/Handler.canHandle:(Ljava/lang/Class;)Z
      10: ireturn

  private static boolean lambda$hasApplicationConfiguration$9(io.dekorate.kubernetes.config.Configuration);
    Code:
       0: ldc           #110                // class io/dekorate/kubernetes/config/ApplicationConfiguration
       2: aload_0
       3: invokevirtual #78                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: invokevirtual #111                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ireturn

  private static void lambda$handle$8(io.dekorate.Handler, io.dekorate.kubernetes.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #78                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokeinterface #109,  2          // InterfaceMethod io/dekorate/Handler.canHandle:(Ljava/lang/Class;)Z
      10: ifeq          20
      13: aload_0
      14: aload_1
      15: invokeinterface #112,  2          // InterfaceMethod io/dekorate/Handler.handle:(Lio/dekorate/kubernetes/config/Configuration;)V
      20: return

  private void lambda$populateFallbackConfig$7(io.dekorate.Handler);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #24                 // Field configurators:Lio/dekorate/Configurators;
       5: invokestatic  #113                // Method hasMatchingConfiguration:(Lio/dekorate/Handler;Lio/dekorate/Configurators;)Z
       8: ifne          33
      11: aload_1
      12: invokeinterface #114,  1          // InterfaceMethod io/dekorate/Handler.getFallbackConfig:()Lio/dekorate/config/ConfigurationSupplier;
      17: astore_2
      18: aload_2
      19: invokevirtual #115                // Method io/dekorate/config/ConfigurationSupplier.hasConfiguration:()Z
      22: ifeq          33
      25: aload_0
      26: getfield      #24                 // Field configurators:Lio/dekorate/Configurators;
      29: aload_2
      30: invokevirtual #116                // Method io/dekorate/Configurators.add:(Lio/dekorate/config/ConfigurationSupplier;)V
      33: return

  private void lambda$readExistingResources$6(io.dekorate.SessionReader);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #117,  2          // InterfaceMethod io/dekorate/SessionReader.read:(Lio/dekorate/Session;)V
       7: return

  private void lambda$generate$5(io.dekorate.Handler);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #24                 // Field configurators:Lio/dekorate/Configurators;
       5: invokestatic  #118                // Method handle:(Lio/dekorate/Handler;Lio/dekorate/Configurators;)V
       8: return

  private void lambda$loadGenerators$4(io.dekorate.Generator);
    Code:
       0: aload_0
       1: getfield      #21                 // Field annotations:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #119,  1          // InterfaceMethod io/dekorate/Generator.getKey:()Ljava/lang/String;
      10: aload_1
      11: invokeinterface #120,  1          // InterfaceMethod io/dekorate/Generator.getAnnotation:()Ljava/lang/Class;
      16: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #69                 // class java/lang/Class
      24: pop
      25: return

  private static boolean lambda$loadGenerators$3(io.dekorate.Generator);
    Code:
       0: aload_0
       1: invokeinterface #119,  1          // InterfaceMethod io/dekorate/Generator.getKey:()Ljava/lang/String;
       6: ifnull        22
       9: aload_0
      10: invokeinterface #120,  1          // InterfaceMethod io/dekorate/Generator.getAnnotation:()Ljava/lang/Class;
      15: ifnull        22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private void lambda$loadGenerators$2(io.dekorate.Generator);
    Code:
       0: aload_0
       1: getfield      #20                 // Field generators:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #119,  1          // InterfaceMethod io/dekorate/Generator.getKey:()Ljava/lang/String;
      10: aload_1
      11: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #57                 // class io/dekorate/Generator
      19: pop
      20: return

  private static boolean lambda$loadGenerators$1(io.dekorate.Generator);
    Code:
       0: aload_0
       1: invokeinterface #119,  1          // InterfaceMethod io/dekorate/Generator.getKey:()Ljava/lang/String;
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private void lambda$loadHandlers$0(io.dekorate.HandlerFactory);
    Code:
       0: aload_0
       1: getfield      #17                 // Field handlers:Ljava/util/Set;
       4: aload_1
       5: aload_0
       6: getfield      #27                 // Field resources:Lio/dekorate/Resources;
       9: aload_0
      10: getfield      #24                 // Field configurators:Lio/dekorate/Configurators;
      13: invokeinterface #121,  3          // InterfaceMethod io/dekorate/HandlerFactory.create:(Lio/dekorate/Resources;Lio/dekorate/Configurators;)Lio/dekorate/Handler;
      18: invokeinterface #122,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      23: pop
      24: return
}
