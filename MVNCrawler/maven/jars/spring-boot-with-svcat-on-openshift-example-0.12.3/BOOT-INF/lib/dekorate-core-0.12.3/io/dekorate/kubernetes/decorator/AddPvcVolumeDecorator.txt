Compiled from "AddPvcVolumeDecorator.java"
public class io.dekorate.kubernetes.decorator.AddPvcVolumeDecorator extends io.dekorate.kubernetes.decorator.Decorator<io.dekorate.deps.kubernetes.api.model.PodSpecBuilder> {
  private final io.dekorate.kubernetes.config.PersistentVolumeClaimVolume volume;

  public io.dekorate.kubernetes.decorator.AddPvcVolumeDecorator(io.dekorate.kubernetes.config.PersistentVolumeClaimVolume);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/dekorate/kubernetes/decorator/Decorator."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field volume:Lio/dekorate/kubernetes/config/PersistentVolumeClaimVolume;
       9: return

  public void visit(io.dekorate.deps.kubernetes.api.model.PodSpecBuilder);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method io/dekorate/deps/kubernetes/api/model/PodSpecBuilder.addNewVolume:()Lio/dekorate/deps/kubernetes/api/model/PodSpecFluent$VolumesNested;
       4: aload_0
       5: getfield      #2                  // Field volume:Lio/dekorate/kubernetes/config/PersistentVolumeClaimVolume;
       8: invokevirtual #4                  // Method io/dekorate/kubernetes/config/PersistentVolumeClaimVolume.getVolumeName:()Ljava/lang/String;
      11: invokeinterface #5,  2            // InterfaceMethod io/dekorate/deps/kubernetes/api/model/PodSpecFluent$VolumesNested.withName:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/VolumeFluent;
      16: checkcast     #6                  // class io/dekorate/deps/kubernetes/api/model/PodSpecFluent$VolumesNested
      19: invokeinterface #7,  1            // InterfaceMethod io/dekorate/deps/kubernetes/api/model/PodSpecFluent$VolumesNested.withNewPersistentVolumeClaim:()Lio/dekorate/deps/kubernetes/api/model/VolumeFluent$PersistentVolumeClaimNested;
      24: aload_0
      25: getfield      #2                  // Field volume:Lio/dekorate/kubernetes/config/PersistentVolumeClaimVolume;
      28: invokevirtual #8                  // Method io/dekorate/kubernetes/config/PersistentVolumeClaimVolume.getClaimName:()Ljava/lang/String;
      31: invokeinterface #9,  2            // InterfaceMethod io/dekorate/deps/kubernetes/api/model/VolumeFluent$PersistentVolumeClaimNested.withClaimName:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimVolumeSourceFluent;
      36: checkcast     #10                 // class io/dekorate/deps/kubernetes/api/model/VolumeFluent$PersistentVolumeClaimNested
      39: aload_0
      40: getfield      #2                  // Field volume:Lio/dekorate/kubernetes/config/PersistentVolumeClaimVolume;
      43: invokevirtual #11                 // Method io/dekorate/kubernetes/config/PersistentVolumeClaimVolume.isReadOnly:()Z
      46: invokeinterface #12,  2           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/VolumeFluent$PersistentVolumeClaimNested.withNewReadOnly:(Z)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimVolumeSourceFluent;
      51: checkcast     #10                 // class io/dekorate/deps/kubernetes/api/model/VolumeFluent$PersistentVolumeClaimNested
      54: invokeinterface #13,  1           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/VolumeFluent$PersistentVolumeClaimNested.endPersistentVolumeClaim:()Ljava/lang/Object;
      59: checkcast     #6                  // class io/dekorate/deps/kubernetes/api/model/PodSpecFluent$VolumesNested
      62: invokeinterface #14,  1           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/PodSpecFluent$VolumesNested.endVolume:()Ljava/lang/Object;
      67: pop
      68: return

  public void visit(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #15                 // class io/dekorate/deps/kubernetes/api/model/PodSpecBuilder
       5: invokevirtual #16                 // Method visit:(Lio/dekorate/deps/kubernetes/api/model/PodSpecBuilder;)V
       8: return
}
