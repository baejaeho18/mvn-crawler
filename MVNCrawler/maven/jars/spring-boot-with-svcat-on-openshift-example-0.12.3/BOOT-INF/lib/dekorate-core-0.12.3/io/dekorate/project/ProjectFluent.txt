Compiled from "ProjectFluent.java"
public interface io.dekorate.project.ProjectFluent<A extends io.dekorate.project.ProjectFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.nio.file.Path getRoot();

  public abstract A withRoot(java.nio.file.Path);

  public abstract java.lang.Boolean hasRoot();

  public abstract java.lang.String getDekorateInputDir();

  public abstract A withDekorateInputDir(java.lang.String);

  public abstract java.lang.Boolean hasDekorateInputDir();

  public abstract A withNewDekorateInputDir(java.lang.String);

  public abstract A withNewDekorateInputDir(java.lang.StringBuilder);

  public abstract A withNewDekorateInputDir(java.lang.StringBuffer);

  public abstract java.lang.String getDekorateOutputDir();

  public abstract A withDekorateOutputDir(java.lang.String);

  public abstract java.lang.Boolean hasDekorateOutputDir();

  public abstract A withNewDekorateOutputDir(java.lang.String);

  public abstract A withNewDekorateOutputDir(java.lang.StringBuilder);

  public abstract A withNewDekorateOutputDir(java.lang.StringBuffer);

  public abstract java.lang.String getDekorateMetaDir();

  public abstract A withDekorateMetaDir(java.lang.String);

  public abstract java.lang.Boolean hasDekorateMetaDir();

  public abstract A withNewDekorateMetaDir(java.lang.String);

  public abstract A withNewDekorateMetaDir(java.lang.StringBuilder);

  public abstract A withNewDekorateMetaDir(java.lang.StringBuffer);

  public abstract io.dekorate.project.BuildInfo getBuildInfo();

  public abstract io.dekorate.project.BuildInfo buildBuildInfo();

  public abstract A withBuildInfo(io.dekorate.project.BuildInfo);

  public abstract java.lang.Boolean hasBuildInfo();

  public abstract io.dekorate.project.ProjectFluent$BuildInfoNested<A> withNewBuildInfo();

  public abstract io.dekorate.project.ProjectFluent$BuildInfoNested<A> withNewBuildInfoLike(io.dekorate.project.BuildInfo);

  public abstract io.dekorate.project.ProjectFluent$BuildInfoNested<A> editBuildInfo();

  public abstract io.dekorate.project.ProjectFluent$BuildInfoNested<A> editOrNewBuildInfo();

  public abstract io.dekorate.project.ProjectFluent$BuildInfoNested<A> editOrNewBuildInfoLike(io.dekorate.project.BuildInfo);

  public abstract io.dekorate.project.ScmInfo getScmInfo();

  public abstract io.dekorate.project.ScmInfo buildScmInfo();

  public abstract A withScmInfo(io.dekorate.project.ScmInfo);

  public abstract java.lang.Boolean hasScmInfo();

  public abstract io.dekorate.project.ProjectFluent$ScmInfoNested<A> withNewScmInfo();

  public abstract io.dekorate.project.ProjectFluent$ScmInfoNested<A> withNewScmInfoLike(io.dekorate.project.ScmInfo);

  public abstract io.dekorate.project.ProjectFluent$ScmInfoNested<A> editScmInfo();

  public abstract io.dekorate.project.ProjectFluent$ScmInfoNested<A> editOrNewScmInfo();

  public abstract io.dekorate.project.ProjectFluent$ScmInfoNested<A> editOrNewScmInfoLike(io.dekorate.project.ScmInfo);
}
