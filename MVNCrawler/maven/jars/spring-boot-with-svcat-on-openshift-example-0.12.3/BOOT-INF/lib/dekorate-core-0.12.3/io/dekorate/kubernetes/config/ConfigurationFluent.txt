Compiled from "ConfigurationFluent.java"
public interface io.dekorate.kubernetes.config.ConfigurationFluent<A extends io.dekorate.kubernetes.config.ConfigurationFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.project.Project getProject();

  public abstract io.dekorate.project.Project buildProject();

  public abstract A withProject(io.dekorate.project.Project);

  public abstract java.lang.Boolean hasProject();

  public abstract io.dekorate.kubernetes.config.ConfigurationFluent$ProjectNested<A> withNewProject();

  public abstract io.dekorate.kubernetes.config.ConfigurationFluent$ProjectNested<A> withNewProjectLike(io.dekorate.project.Project);

  public abstract io.dekorate.kubernetes.config.ConfigurationFluent$ProjectNested<A> editProject();

  public abstract io.dekorate.kubernetes.config.ConfigurationFluent$ProjectNested<A> editOrNewProject();

  public abstract io.dekorate.kubernetes.config.ConfigurationFluent$ProjectNested<A> editOrNewProjectLike(io.dekorate.project.Project);

  public abstract A addToAttributes(io.dekorate.kubernetes.config.ConfigKey, java.lang.Object);

  public abstract A addToAttributes(java.util.Map<io.dekorate.kubernetes.config.ConfigKey, java.lang.Object>);

  public abstract A removeFromAttributes(io.dekorate.kubernetes.config.ConfigKey);

  public abstract A removeFromAttributes(java.util.Map<io.dekorate.kubernetes.config.ConfigKey, java.lang.Object>);

  public abstract java.util.Map<io.dekorate.kubernetes.config.ConfigKey, java.lang.Object> getAttributes();

  public abstract A withAttributes(java.util.Map<io.dekorate.kubernetes.config.ConfigKey, java.lang.Object>);

  public abstract java.lang.Boolean hasAttributes();
}
