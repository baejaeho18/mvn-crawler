Compiled from "ConfigMapVolumeFluentImpl.java"
public class io.dekorate.kubernetes.config.ConfigMapVolumeFluentImpl<A extends io.dekorate.kubernetes.config.ConfigMapVolumeFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.BaseFluent<A> implements io.dekorate.kubernetes.config.ConfigMapVolumeFluent<A> {
  private java.lang.String volumeName;

  private java.lang.String configMapName;

  private int defaultMode;

  private boolean optional;

  public io.dekorate.kubernetes.config.ConfigMapVolumeFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/dekorate/deps/kubernetes/api/builder/BaseFluent."<init>":()V
       4: aload_0
       5: sipush        384
       8: putfield      #2                  // Field defaultMode:I
      11: aload_0
      12: iconst_0
      13: putfield      #3                  // Field optional:Z
      16: return

  public io.dekorate.kubernetes.config.ConfigMapVolumeFluentImpl(io.dekorate.kubernetes.config.ConfigMapVolume);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/dekorate/deps/kubernetes/api/builder/BaseFluent."<init>":()V
       4: aload_0
       5: sipush        384
       8: putfield      #2                  // Field defaultMode:I
      11: aload_0
      12: iconst_0
      13: putfield      #3                  // Field optional:Z
      16: aload_0
      17: aload_1
      18: invokevirtual #4                  // Method io/dekorate/kubernetes/config/ConfigMapVolume.getVolumeName:()Ljava/lang/String;
      21: invokevirtual #5                  // Method withVolumeName:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/ConfigMapVolumeFluent;
      24: pop
      25: aload_0
      26: aload_1
      27: invokevirtual #6                  // Method io/dekorate/kubernetes/config/ConfigMapVolume.getConfigMapName:()Ljava/lang/String;
      30: invokevirtual #7                  // Method withConfigMapName:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/ConfigMapVolumeFluent;
      33: pop
      34: aload_0
      35: aload_1
      36: invokevirtual #8                  // Method io/dekorate/kubernetes/config/ConfigMapVolume.getDefaultMode:()I
      39: invokevirtual #9                  // Method withDefaultMode:(I)Lio/dekorate/kubernetes/config/ConfigMapVolumeFluent;
      42: pop
      43: aload_0
      44: aload_1
      45: invokevirtual #10                 // Method io/dekorate/kubernetes/config/ConfigMapVolume.isOptional:()Z
      48: invokevirtual #11                 // Method withOptional:(Z)Lio/dekorate/kubernetes/config/ConfigMapVolumeFluent;
      51: pop
      52: return

  public java.lang.String getVolumeName();
    Code:
       0: aload_0
       1: getfield      #12                 // Field volumeName:Ljava/lang/String;
       4: areturn

  public A withVolumeName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field volumeName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasVolumeName();
    Code:
       0: aload_0
       1: getfield      #12                 // Field volumeName:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #13                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewVolumeName(java.lang.String);
    Code:
       0: aload_0
       1: new           #14                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #15                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #5                  // Method withVolumeName:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/ConfigMapVolumeFluent;
      12: areturn

  public A withNewVolumeName(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #14                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #16                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #5                  // Method withVolumeName:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/ConfigMapVolumeFluent;
      12: areturn

  public A withNewVolumeName(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #14                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #17                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #5                  // Method withVolumeName:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/ConfigMapVolumeFluent;
      12: areturn

  public java.lang.String getConfigMapName();
    Code:
       0: aload_0
       1: getfield      #18                 // Field configMapName:Ljava/lang/String;
       4: areturn

  public A withConfigMapName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field configMapName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasConfigMapName();
    Code:
       0: aload_0
       1: getfield      #18                 // Field configMapName:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #13                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewConfigMapName(java.lang.String);
    Code:
       0: aload_0
       1: new           #14                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #15                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #7                  // Method withConfigMapName:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/ConfigMapVolumeFluent;
      12: areturn

  public A withNewConfigMapName(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #14                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #16                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #7                  // Method withConfigMapName:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/ConfigMapVolumeFluent;
      12: areturn

  public A withNewConfigMapName(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #14                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #17                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #7                  // Method withConfigMapName:(Ljava/lang/String;)Lio/dekorate/kubernetes/config/ConfigMapVolumeFluent;
      12: areturn

  public int getDefaultMode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field defaultMode:I
       4: ireturn

  public A withDefaultMode(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field defaultMode:I
       5: aload_0
       6: areturn

  public java.lang.Boolean hasDefaultMode();
    Code:
       0: iconst_1
       1: invokestatic  #13                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       4: areturn

  public boolean isOptional();
    Code:
       0: aload_0
       1: getfield      #3                  // Field optional:Z
       4: ireturn

  public A withOptional(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field optional:Z
       5: aload_0
       6: areturn

  public java.lang.Boolean hasOptional();
    Code:
       0: iconst_1
       1: invokestatic  #13                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #20                 // class io/dekorate/kubernetes/config/ConfigMapVolumeFluentImpl
      28: astore_2
      29: aload_0
      30: getfield      #12                 // Field volumeName:Ljava/lang/String;
      33: ifnull        53
      36: aload_0
      37: getfield      #12                 // Field volumeName:Ljava/lang/String;
      40: aload_2
      41: getfield      #12                 // Field volumeName:Ljava/lang/String;
      44: invokevirtual #21                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifne          62
      50: goto          60
      53: aload_2
      54: getfield      #12                 // Field volumeName:Ljava/lang/String;
      57: ifnull        62
      60: iconst_0
      61: ireturn
      62: aload_0
      63: getfield      #18                 // Field configMapName:Ljava/lang/String;
      66: ifnull        86
      69: aload_0
      70: getfield      #18                 // Field configMapName:Ljava/lang/String;
      73: aload_2
      74: getfield      #18                 // Field configMapName:Ljava/lang/String;
      77: invokevirtual #21                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      80: ifne          95
      83: goto          93
      86: aload_2
      87: getfield      #18                 // Field configMapName:Ljava/lang/String;
      90: ifnull        95
      93: iconst_0
      94: ireturn
      95: aload_0
      96: getfield      #2                  // Field defaultMode:I
      99: aload_2
     100: getfield      #2                  // Field defaultMode:I
     103: if_icmpeq     108
     106: iconst_0
     107: ireturn
     108: aload_0
     109: getfield      #3                  // Field optional:Z
     112: aload_2
     113: getfield      #3                  // Field optional:Z
     116: if_icmpeq     121
     119: iconst_0
     120: ireturn
     121: iconst_1
     122: ireturn
}
