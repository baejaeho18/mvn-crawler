Compiled from "SoftValueHashMap.java"
class javassist.scopedpool.SoftValueHashMap$SoftValueRef<K, V> extends java.lang.ref.SoftReference<V> {
  public K key;

  private javassist.scopedpool.SoftValueHashMap$SoftValueRef(K, V, java.lang.ref.ReferenceQueue<V>);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokespecial #2                  // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
       6: aload_0
       7: aload_1
       8: putfield      #3                  // Field key:Ljava/lang/Object;
      11: return

  private static <K, V> javassist.scopedpool.SoftValueHashMap$SoftValueRef<K, V> create(K, V, java.lang.ref.ReferenceQueue<V>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #4                  // class javassist/scopedpool/SoftValueHashMap$SoftValueRef
       9: dup
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokespecial #5                  // Method "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      16: areturn

  static javassist.scopedpool.SoftValueHashMap$SoftValueRef access$000(java.lang.Object, java.lang.Object, java.lang.ref.ReferenceQueue);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1                  // Method create:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)Ljavassist/scopedpool/SoftValueHashMap$SoftValueRef;
       6: areturn
}
