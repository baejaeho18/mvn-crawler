Compiled from "SoftValueHashMap.java"
public class javassist.scopedpool.SoftValueHashMap<K, V> implements java.util.Map<K, V> {
  private java.util.Map<K, javassist.scopedpool.SoftValueHashMap$SoftValueRef<K, V>> hash;

  private java.lang.ref.ReferenceQueue<V> queue;

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method processQueue:()V
       4: new           #2                  // class java/util/HashSet
       7: dup
       8: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      11: astore_1
      12: aload_0
      13: getfield      #4                  // Field hash:Ljava/util/Map;
      16: invokeinterface #5,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      21: invokeinterface #6,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          81
      36: aload_2
      37: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #9                  // class java/util/Map$Entry
      45: astore_3
      46: aload_1
      47: new           #10                 // class java/util/AbstractMap$SimpleImmutableEntry
      50: dup
      51: aload_3
      52: invokeinterface #11,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      57: aload_3
      58: invokeinterface #12,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      63: checkcast     #13                 // class javassist/scopedpool/SoftValueHashMap$SoftValueRef
      66: invokevirtual #14                 // Method javassist/scopedpool/SoftValueHashMap$SoftValueRef.get:()Ljava/lang/Object;
      69: invokespecial #15                 // Method java/util/AbstractMap$SimpleImmutableEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      72: invokeinterface #16,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      77: pop
      78: goto          27
      81: aload_1
      82: areturn

  private void processQueue();
    Code:
       0: aload_0
       1: getfield      #4                  // Field hash:Ljava/util/Map;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifne          70
      12: aload_0
      13: getfield      #18                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      16: invokevirtual #19                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      19: dup
      20: astore_1
      21: ifnull        70
      24: aload_1
      25: instanceof    #13                 // class javassist/scopedpool/SoftValueHashMap$SoftValueRef
      28: ifeq          12
      31: aload_1
      32: checkcast     #13                 // class javassist/scopedpool/SoftValueHashMap$SoftValueRef
      35: astore_2
      36: aload_1
      37: aload_0
      38: getfield      #4                  // Field hash:Ljava/util/Map;
      41: aload_2
      42: getfield      #20                 // Field javassist/scopedpool/SoftValueHashMap$SoftValueRef.key:Ljava/lang/Object;
      45: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      50: if_acmpne     67
      53: aload_0
      54: getfield      #4                  // Field hash:Ljava/util/Map;
      57: aload_2
      58: getfield      #20                 // Field javassist/scopedpool/SoftValueHashMap$SoftValueRef.key:Ljava/lang/Object;
      61: invokeinterface #22,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      66: pop
      67: goto          12
      70: return

  public javassist.scopedpool.SoftValueHashMap(int, float);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #24                 // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #25                 // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #18                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: new           #26                 // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: iload_1
      21: fload_2
      22: invokespecial #27                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(IF)V
      25: putfield      #4                  // Field hash:Ljava/util/Map;
      28: return

  public javassist.scopedpool.SoftValueHashMap(int);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #24                 // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #25                 // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #18                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: new           #26                 // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: iload_1
      21: invokespecial #28                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      24: putfield      #4                  // Field hash:Ljava/util/Map;
      27: return

  public javassist.scopedpool.SoftValueHashMap();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #24                 // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #25                 // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #18                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: new           #26                 // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #29                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #4                  // Field hash:Ljava/util/Map;
      26: return

  public javassist.scopedpool.SoftValueHashMap(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: iconst_2
       2: aload_1
       3: invokeinterface #30,  1           // InterfaceMethod java/util/Map.size:()I
       8: imul
       9: bipush        11
      11: invokestatic  #31                 // Method java/lang/Math.max:(II)I
      14: ldc           #32                 // float 0.75f
      16: invokespecial #33                 // Method "<init>":(IF)V
      19: aload_0
      20: aload_1
      21: invokevirtual #34                 // Method putAll:(Ljava/util/Map;)V
      24: return

  public int size();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method processQueue:()V
       4: aload_0
       5: getfield      #4                  // Field hash:Ljava/util/Map;
       8: invokeinterface #30,  1           // InterfaceMethod java/util/Map.size:()I
      13: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method processQueue:()V
       4: aload_0
       5: getfield      #4                  // Field hash:Ljava/util/Map;
       8: invokeinterface #17,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      13: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method processQueue:()V
       4: aload_0
       5: getfield      #4                  // Field hash:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #35,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      14: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method processQueue:()V
       4: aload_0
       5: aload_0
       6: getfield      #4                  // Field hash:Ljava/util/Map;
       9: aload_1
      10: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #13                 // class javassist/scopedpool/SoftValueHashMap$SoftValueRef
      18: invokespecial #36                 // Method valueOrNull:(Ljavassist/scopedpool/SoftValueHashMap$SoftValueRef;)Ljava/lang/Object;
      21: areturn

  public V put(K, V);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method processQueue:()V
       4: aload_0
       5: aload_0
       6: getfield      #4                  // Field hash:Ljava/util/Map;
       9: aload_1
      10: aload_1
      11: aload_2
      12: aload_0
      13: getfield      #18                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      16: invokestatic  #37                 // Method javassist/scopedpool/SoftValueHashMap$SoftValueRef.access$000:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)Ljavassist/scopedpool/SoftValueHashMap$SoftValueRef;
      19: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #13                 // class javassist/scopedpool/SoftValueHashMap$SoftValueRef
      27: invokespecial #36                 // Method valueOrNull:(Ljavassist/scopedpool/SoftValueHashMap$SoftValueRef;)Ljava/lang/Object;
      30: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method processQueue:()V
       4: aload_0
       5: aload_0
       6: getfield      #4                  // Field hash:Ljava/util/Map;
       9: aload_1
      10: invokeinterface #22,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #13                 // class javassist/scopedpool/SoftValueHashMap$SoftValueRef
      18: invokespecial #36                 // Method valueOrNull:(Ljavassist/scopedpool/SoftValueHashMap$SoftValueRef;)Ljava/lang/Object;
      21: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method processQueue:()V
       4: aload_0
       5: getfield      #4                  // Field hash:Ljava/util/Map;
       8: invokeinterface #39,  1           // InterfaceMethod java/util/Map.clear:()V
      13: return

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method processQueue:()V
       4: aconst_null
       5: aload_1
       6: if_acmpne     11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: getfield      #4                  // Field hash:Ljava/util/Map;
      15: invokeinterface #40,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      20: invokeinterface #41,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      25: astore_2
      26: aload_2
      27: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          66
      35: aload_2
      36: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #13                 // class javassist/scopedpool/SoftValueHashMap$SoftValueRef
      44: astore_3
      45: aconst_null
      46: aload_3
      47: if_acmpeq     63
      50: aload_1
      51: aload_3
      52: invokevirtual #14                 // Method javassist/scopedpool/SoftValueHashMap$SoftValueRef.get:()Ljava/lang/Object;
      55: invokevirtual #42                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      58: ifeq          63
      61: iconst_1
      62: ireturn
      63: goto          26
      66: iconst_0
      67: ireturn

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method processQueue:()V
       4: aload_0
       5: getfield      #4                  // Field hash:Ljava/util/Map;
       8: invokeinterface #43,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      13: areturn

  public void putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method processQueue:()V
       4: aload_1
       5: invokeinterface #43,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      10: invokeinterface #6,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          48
      25: aload_2
      26: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: astore_3
      32: aload_0
      33: aload_3
      34: aload_1
      35: aload_3
      36: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: invokevirtual #44                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      44: pop
      45: goto          16
      48: return

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method processQueue:()V
       4: new           #45                 // class java/util/ArrayList
       7: dup
       8: invokespecial #46                 // Method java/util/ArrayList."<init>":()V
      11: astore_1
      12: aload_0
      13: getfield      #4                  // Field hash:Ljava/util/Map;
      16: invokeinterface #40,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      21: invokeinterface #41,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          60
      36: aload_2
      37: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #13                 // class javassist/scopedpool/SoftValueHashMap$SoftValueRef
      45: astore_3
      46: aload_1
      47: aload_3
      48: invokevirtual #14                 // Method javassist/scopedpool/SoftValueHashMap$SoftValueRef.get:()Ljava/lang/Object;
      51: invokeinterface #47,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      56: pop
      57: goto          27
      60: aload_1
      61: areturn

  private V valueOrNull(javassist.scopedpool.SoftValueHashMap$SoftValueRef<K, V>);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     7
       5: aconst_null
       6: areturn
       7: aload_1
       8: invokevirtual #14                 // Method javassist/scopedpool/SoftValueHashMap$SoftValueRef.get:()Ljava/lang/Object;
      11: areturn
}
