Compiled from "Subroutine.java"
public class javassist.bytecode.analysis.Subroutine {
  private java.util.List<java.lang.Integer> callers;

  private java.util.Set<java.lang.Integer> access;

  private int start;

  public javassist.bytecode.analysis.Subroutine(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field callers:Ljava/util/List;
      15: aload_0
      16: new           #5                  // class java/util/HashSet
      19: dup
      20: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      23: putfield      #7                  // Field access:Ljava/util/Set;
      26: aload_0
      27: iload_1
      28: putfield      #8                  // Field start:I
      31: aload_0
      32: getfield      #4                  // Field callers:Ljava/util/List;
      35: iload_2
      36: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      44: pop
      45: return

  public void addCaller(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field callers:Ljava/util/List;
       4: iload_1
       5: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      13: pop
      14: return

  public int start();
    Code:
       0: aload_0
       1: getfield      #8                  // Field start:I
       4: ireturn

  public void access(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field access:Ljava/util/Set;
       4: iload_1
       5: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #11,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      13: pop
      14: return

  public boolean isAccessed(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field access:Ljava/util/Set;
       4: iload_1
       5: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #12,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      13: ireturn

  public java.util.Collection<java.lang.Integer> accessed();
    Code:
       0: aload_0
       1: getfield      #7                  // Field access:Ljava/util/Set;
       4: areturn

  public java.util.Collection<java.lang.Integer> callers();
    Code:
       0: aload_0
       1: getfield      #4                  // Field callers:Ljava/util/List;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #15                 // String start =
       9: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #8                  // Field start:I
      16: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #18                 // String  callers =
      21: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #4                  // Field callers:Ljava/util/List;
      28: invokevirtual #19                 // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn
}
