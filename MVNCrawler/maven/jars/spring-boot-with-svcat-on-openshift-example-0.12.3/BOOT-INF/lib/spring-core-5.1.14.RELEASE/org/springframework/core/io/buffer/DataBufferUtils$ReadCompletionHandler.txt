Compiled from "DataBufferUtils.java"
class org.springframework.core.io.buffer.DataBufferUtils$ReadCompletionHandler implements java.nio.channels.CompletionHandler<java.lang.Integer, org.springframework.core.io.buffer.DataBuffer> {
  private final java.nio.channels.AsynchronousFileChannel channel;

  private final reactor.core.publisher.FluxSink<org.springframework.core.io.buffer.DataBuffer> sink;

  private final org.springframework.core.io.buffer.DataBufferFactory dataBufferFactory;

  private final int bufferSize;

  private final java.util.concurrent.atomic.AtomicLong position;

  private final java.util.concurrent.atomic.AtomicBoolean reading;

  private final java.util.concurrent.atomic.AtomicBoolean disposed;

  public org.springframework.core.io.buffer.DataBufferUtils$ReadCompletionHandler(java.nio.channels.AsynchronousFileChannel, reactor.core.publisher.FluxSink<org.springframework.core.io.buffer.DataBuffer>, long, org.springframework.core.io.buffer.DataBufferFactory, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #4                  // Field reading:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      23: putfield      #5                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      26: aload_0
      27: aload_1
      28: putfield      #6                  // Field channel:Ljava/nio/channels/AsynchronousFileChannel;
      31: aload_0
      32: aload_2
      33: putfield      #7                  // Field sink:Lreactor/core/publisher/FluxSink;
      36: aload_0
      37: new           #8                  // class java/util/concurrent/atomic/AtomicLong
      40: dup
      41: lload_3
      42: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      45: putfield      #10                 // Field position:Ljava/util/concurrent/atomic/AtomicLong;
      48: aload_0
      49: aload         5
      51: putfield      #11                 // Field dataBufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      54: aload_0
      55: iload         6
      57: putfield      #12                 // Field bufferSize:I
      60: return

  public void read();
    Code:
       0: aload_0
       1: getfield      #7                  // Field sink:Lreactor/core/publisher/FluxSink;
       4: invokeinterface #13,  1           // InterfaceMethod reactor/core/publisher/FluxSink.requestedFromDownstream:()J
       9: lconst_0
      10: lcmp
      11: ifle          76
      14: aload_0
      15: invokespecial #14                 // Method isNotDisposed:()Z
      18: ifeq          76
      21: aload_0
      22: getfield      #4                  // Field reading:Ljava/util/concurrent/atomic/AtomicBoolean;
      25: iconst_0
      26: iconst_1
      27: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      30: ifeq          76
      33: aload_0
      34: getfield      #11                 // Field dataBufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      37: aload_0
      38: getfield      #12                 // Field bufferSize:I
      41: invokeinterface #16,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:(I)Lorg/springframework/core/io/buffer/DataBuffer;
      46: astore_1
      47: aload_1
      48: iconst_0
      49: aload_0
      50: getfield      #12                 // Field bufferSize:I
      53: invokeinterface #17,  3           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.asByteBuffer:(II)Ljava/nio/ByteBuffer;
      58: astore_2
      59: aload_0
      60: getfield      #6                  // Field channel:Ljava/nio/channels/AsynchronousFileChannel;
      63: aload_2
      64: aload_0
      65: getfield      #10                 // Field position:Ljava/util/concurrent/atomic/AtomicLong;
      68: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      71: aload_1
      72: aload_0
      73: invokevirtual #19                 // Method java/nio/channels/AsynchronousFileChannel.read:(Ljava/nio/ByteBuffer;JLjava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
      76: return

  public void completed(java.lang.Integer, org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method isNotDisposed:()Z
       4: ifeq          109
       7: aload_1
       8: invokevirtual #20                 // Method java/lang/Integer.intValue:()I
      11: iconst_m1
      12: if_icmpeq     65
      15: aload_0
      16: getfield      #10                 // Field position:Ljava/util/concurrent/atomic/AtomicLong;
      19: aload_1
      20: invokevirtual #20                 // Method java/lang/Integer.intValue:()I
      23: i2l
      24: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      27: pop2
      28: aload_2
      29: aload_1
      30: invokevirtual #20                 // Method java/lang/Integer.intValue:()I
      33: invokeinterface #22,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.writePosition:(I)Lorg/springframework/core/io/buffer/DataBuffer;
      38: pop
      39: aload_0
      40: getfield      #7                  // Field sink:Lreactor/core/publisher/FluxSink;
      43: aload_2
      44: invokeinterface #23,  2           // InterfaceMethod reactor/core/publisher/FluxSink.next:(Ljava/lang/Object;)Lreactor/core/publisher/FluxSink;
      49: pop
      50: aload_0
      51: getfield      #4                  // Field reading:Ljava/util/concurrent/atomic/AtomicBoolean;
      54: iconst_0
      55: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      58: aload_0
      59: invokevirtual #25                 // Method read:()V
      62: goto          129
      65: aload_2
      66: invokestatic  #26                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      69: pop
      70: aload_0
      71: getfield      #6                  // Field channel:Ljava/nio/channels/AsynchronousFileChannel;
      74: invokestatic  #27                 // Method org/springframework/core/io/buffer/DataBufferUtils.closeChannel:(Ljava/nio/channels/Channel;)V
      77: aload_0
      78: getfield      #5                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      81: iconst_0
      82: iconst_1
      83: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      86: ifeq          98
      89: aload_0
      90: getfield      #7                  // Field sink:Lreactor/core/publisher/FluxSink;
      93: invokeinterface #28,  1           // InterfaceMethod reactor/core/publisher/FluxSink.complete:()V
      98: aload_0
      99: getfield      #4                  // Field reading:Ljava/util/concurrent/atomic/AtomicBoolean;
     102: iconst_0
     103: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     106: goto          129
     109: aload_2
     110: invokestatic  #26                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
     113: pop
     114: aload_0
     115: getfield      #6                  // Field channel:Ljava/nio/channels/AsynchronousFileChannel;
     118: invokestatic  #27                 // Method org/springframework/core/io/buffer/DataBufferUtils.closeChannel:(Ljava/nio/channels/Channel;)V
     121: aload_0
     122: getfield      #4                  // Field reading:Ljava/util/concurrent/atomic/AtomicBoolean;
     125: iconst_0
     126: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     129: return

  public void failed(java.lang.Throwable, org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: aload_2
       1: invokestatic  #26                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
       4: pop
       5: aload_0
       6: getfield      #6                  // Field channel:Ljava/nio/channels/AsynchronousFileChannel;
       9: invokestatic  #27                 // Method org/springframework/core/io/buffer/DataBufferUtils.closeChannel:(Ljava/nio/channels/Channel;)V
      12: aload_0
      13: getfield      #5                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: iconst_0
      17: iconst_1
      18: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      21: ifeq          34
      24: aload_0
      25: getfield      #7                  // Field sink:Lreactor/core/publisher/FluxSink;
      28: aload_1
      29: invokeinterface #29,  2           // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
      34: aload_0
      35: getfield      #4                  // Field reading:Ljava/util/concurrent/atomic/AtomicBoolean;
      38: iconst_0
      39: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      42: return

  public void request(long);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method read:()V
       4: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          29
      12: aload_0
      13: getfield      #4                  // Field reading:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      19: ifne          29
      22: aload_0
      23: getfield      #6                  // Field channel:Ljava/nio/channels/AsynchronousFileChannel;
      26: invokestatic  #27                 // Method org/springframework/core/io/buffer/DataBufferUtils.closeChannel:(Ljava/nio/channels/Channel;)V
      29: return

  private boolean isNotDisposed();
    Code:
       0: aload_0
       1: getfield      #5                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void failed(java.lang.Throwable, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #31                 // class org/springframework/core/io/buffer/DataBuffer
       6: invokevirtual #32                 // Method failed:(Ljava/lang/Throwable;Lorg/springframework/core/io/buffer/DataBuffer;)V
       9: return

  public void completed(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class java/lang/Integer
       5: aload_2
       6: checkcast     #31                 // class org/springframework/core/io/buffer/DataBuffer
       9: invokevirtual #34                 // Method completed:(Ljava/lang/Integer;Lorg/springframework/core/io/buffer/DataBuffer;)V
      12: return
}
