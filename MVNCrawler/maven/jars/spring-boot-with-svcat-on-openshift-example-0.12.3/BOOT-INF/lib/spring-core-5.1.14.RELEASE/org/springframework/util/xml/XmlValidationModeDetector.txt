Compiled from "XmlValidationModeDetector.java"
public class org.springframework.util.xml.XmlValidationModeDetector {
  public static final int VALIDATION_NONE;

  public static final int VALIDATION_AUTO;

  public static final int VALIDATION_DTD;

  public static final int VALIDATION_XSD;

  private static final java.lang.String DOCTYPE;

  private static final java.lang.String START_COMMENT;

  private static final java.lang.String END_COMMENT;

  private boolean inComment;

  public org.springframework.util.xml.XmlValidationModeDetector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public int detectValidationMode(java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #2                  // class java/io/BufferedReader
       3: dup
       4: new           #3                  // class java/io/InputStreamReader
       7: dup
       8: aload_1
       9: invokespecial #4                  // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
      12: invokespecial #5                  // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      15: astore_2
      16: iconst_0
      17: istore_3
      18: aload_2
      19: invokevirtual #6                  // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      22: dup
      23: astore        4
      25: ifnull        80
      28: aload_0
      29: aload         4
      31: invokespecial #7                  // Method consumeCommentTokens:(Ljava/lang/String;)Ljava/lang/String;
      34: astore        4
      36: aload_0
      37: getfield      #8                  // Field inComment:Z
      40: ifne          18
      43: aload         4
      45: invokestatic  #9                  // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      48: ifne          54
      51: goto          18
      54: aload_0
      55: aload         4
      57: invokespecial #10                 // Method hasDoctype:(Ljava/lang/String;)Z
      60: ifeq          68
      63: iconst_1
      64: istore_3
      65: goto          80
      68: aload_0
      69: aload         4
      71: invokespecial #11                 // Method hasOpeningTag:(Ljava/lang/String;)Z
      74: ifeq          18
      77: goto          80
      80: iload_3
      81: ifeq          88
      84: iconst_2
      85: goto          89
      88: iconst_3
      89: istore        5
      91: aload_2
      92: invokevirtual #13                 // Method java/io/BufferedReader.close:()V
      95: iload         5
      97: ireturn
      98: astore_3
      99: iconst_1
     100: istore        4
     102: aload_2
     103: invokevirtual #13                 // Method java/io/BufferedReader.close:()V
     106: iload         4
     108: ireturn
     109: astore        6
     111: aload_2
     112: invokevirtual #13                 // Method java/io/BufferedReader.close:()V
     115: aload         6
     117: athrow
    Exception table:
       from    to  target type
          16    91    98   Class java/io/CharConversionException
          16    91   109   any
          98   102   109   any
         109   111   109   any

  private boolean hasDoctype(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #15                 // String DOCTYPE
       3: invokevirtual #16                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       6: ireturn

  private boolean hasOpeningTag(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field inComment:Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: bipush        60
      12: invokevirtual #17                 // Method java/lang/String.indexOf:(I)I
      15: istore_2
      16: iload_2
      17: iconst_m1
      18: if_icmple     48
      21: aload_1
      22: invokevirtual #18                 // Method java/lang/String.length:()I
      25: iload_2
      26: iconst_1
      27: iadd
      28: if_icmple     48
      31: aload_1
      32: iload_2
      33: iconst_1
      34: iadd
      35: invokevirtual #19                 // Method java/lang/String.charAt:(I)C
      38: invokestatic  #20                 // Method java/lang/Character.isLetter:(C)Z
      41: ifeq          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn

  private java.lang.String consumeCommentTokens(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #21                 // String <!--
       3: invokevirtual #22                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
       6: istore_2
       7: iload_2
       8: iconst_m1
       9: if_icmpne     23
      12: aload_1
      13: ldc           #23                 // String -->
      15: invokevirtual #16                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      18: ifne          23
      21: aload_1
      22: areturn
      23: ldc           #24                 // String
      25: astore_3
      26: aload_1
      27: astore        4
      29: iload_2
      30: iflt          47
      33: aload_1
      34: iconst_0
      35: iload_2
      36: invokevirtual #25                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      39: astore_3
      40: aload_1
      41: iload_2
      42: invokevirtual #26                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      45: astore        4
      47: aload_0
      48: aload         4
      50: invokespecial #27                 // Method consume:(Ljava/lang/String;)Ljava/lang/String;
      53: dup
      54: astore        4
      56: ifnull        99
      59: aload_0
      60: getfield      #8                  // Field inComment:Z
      63: ifne          47
      66: aload         4
      68: invokevirtual #28                 // Method java/lang/String.trim:()Ljava/lang/String;
      71: ldc           #21                 // String <!--
      73: invokevirtual #29                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      76: ifne          47
      79: new           #30                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      86: aload_3
      87: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload         4
      92: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: areturn
      99: aconst_null
     100: areturn

  private java.lang.String consume(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field inComment:Z
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: invokespecial #34                 // Method endComment:(Ljava/lang/String;)I
      12: goto          20
      15: aload_0
      16: aload_1
      17: invokespecial #35                 // Method startComment:(Ljava/lang/String;)I
      20: istore_2
      21: iload_2
      22: iconst_m1
      23: if_icmpne     30
      26: aconst_null
      27: goto          35
      30: aload_1
      31: iload_2
      32: invokevirtual #26                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      35: areturn

  private int startComment(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #21                 // String <!--
       4: iconst_1
       5: invokespecial #36                 // Method commentToken:(Ljava/lang/String;Ljava/lang/String;Z)I
       8: ireturn

  private int endComment(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #23                 // String -->
       4: iconst_0
       5: invokespecial #36                 // Method commentToken:(Ljava/lang/String;Ljava/lang/String;Z)I
       8: ireturn

  private int commentToken(java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #22                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
       5: istore        4
       7: iload         4
       9: iconst_m1
      10: if_icmple     18
      13: aload_0
      14: iload_3
      15: putfield      #8                  // Field inComment:Z
      18: iload         4
      20: iconst_m1
      21: if_icmpne     29
      24: iload         4
      26: goto          36
      29: iload         4
      31: aload_2
      32: invokevirtual #18                 // Method java/lang/String.length:()I
      35: iadd
      36: ireturn
}
