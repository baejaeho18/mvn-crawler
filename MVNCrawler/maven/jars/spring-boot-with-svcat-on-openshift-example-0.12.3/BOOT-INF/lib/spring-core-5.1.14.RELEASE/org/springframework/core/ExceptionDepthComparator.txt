Compiled from "ExceptionDepthComparator.java"
public class org.springframework.core.ExceptionDepthComparator implements java.util.Comparator<java.lang.Class<? extends java.lang.Throwable>> {
  private final java.lang.Class<? extends java.lang.Throwable> targetException;

  public org.springframework.core.ExceptionDepthComparator(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Target exception must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: putfield      #5                  // Field targetException:Ljava/lang/Class;
      18: return

  public org.springframework.core.ExceptionDepthComparator(java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #6                  // String Target exception type must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #5                  // Field targetException:Ljava/lang/Class;
      15: return

  public int compare(java.lang.Class<? extends java.lang.Throwable>, java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #5                  // Field targetException:Ljava/lang/Class;
       6: iconst_0
       7: invokespecial #7                  // Method getDepth:(Ljava/lang/Class;Ljava/lang/Class;I)I
      10: istore_3
      11: aload_0
      12: aload_2
      13: aload_0
      14: getfield      #5                  // Field targetException:Ljava/lang/Class;
      17: iconst_0
      18: invokespecial #7                  // Method getDepth:(Ljava/lang/Class;Ljava/lang/Class;I)I
      21: istore        4
      23: iload_3
      24: iload         4
      26: isub
      27: ireturn

  private int getDepth(java.lang.Class<?>, java.lang.Class<?>, int);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #8                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       5: ifeq          10
       8: iload_3
       9: ireturn
      10: aload_2
      11: ldc           #9                  // class java/lang/Throwable
      13: if_acmpne     19
      16: ldc           #11                 // int 2147483647
      18: ireturn
      19: aload_0
      20: aload_1
      21: aload_2
      22: invokevirtual #12                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      25: iload_3
      26: iconst_1
      27: iadd
      28: invokespecial #7                  // Method getDepth:(Ljava/lang/Class;Ljava/lang/Class;I)I
      31: ireturn

  public static java.lang.Class<? extends java.lang.Throwable> findClosestMatch(java.util.Collection<java.lang.Class<? extends java.lang.Throwable>>, java.lang.Throwable);
    Code:
       0: aload_0
       1: ldc           #13                 // String Exception types must not be empty
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
       6: aload_0
       7: invokeinterface #15,  1           // InterfaceMethod java/util/Collection.size:()I
      12: iconst_1
      13: if_icmpne     31
      16: aload_0
      17: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #18                 // class java/lang/Class
      30: areturn
      31: new           #19                 // class java/util/ArrayList
      34: dup
      35: aload_0
      36: invokespecial #20                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      39: astore_2
      40: aload_2
      41: new           #21                 // class org/springframework/core/ExceptionDepthComparator
      44: dup
      45: aload_1
      46: invokespecial #22                 // Method "<init>":(Ljava/lang/Throwable;)V
      49: invokeinterface #23,  2           // InterfaceMethod java/util/List.sort:(Ljava/util/Comparator;)V
      54: aload_2
      55: iconst_0
      56: invokeinterface #24,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      61: checkcast     #18                 // class java/lang/Class
      64: areturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #18                 // class java/lang/Class
       5: aload_2
       6: checkcast     #18                 // class java/lang/Class
       9: invokevirtual #25                 // Method compare:(Ljava/lang/Class;Ljava/lang/Class;)I
      12: ireturn
}
