Compiled from "ResourceDecoder.java"
public class org.springframework.core.codec.ResourceDecoder extends org.springframework.core.codec.AbstractDataBufferDecoder<org.springframework.core.io.Resource> {
  public org.springframework.core.codec.ResourceDecoder();
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #1                  // class org/springframework/util/MimeType
       5: dup
       6: iconst_0
       7: getstatic     #2                  // Field org/springframework/util/MimeTypeUtils.ALL:Lorg/springframework/util/MimeType;
      10: aastore
      11: invokespecial #3                  // Method org/springframework/core/codec/AbstractDataBufferDecoder."<init>":([Lorg/springframework/util/MimeType;)V
      14: return

  public boolean canDecode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: ldc           #4                  // class org/springframework/core/io/Resource
       2: aload_1
       3: invokevirtual #5                  // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
       6: invokevirtual #6                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ifeq          25
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokespecial #7                  // Method org/springframework/core/codec/AbstractDataBufferDecoder.canDecode:(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public reactor.core.publisher.Flux<org.springframework.core.io.Resource> decode(org.reactivestreams.Publisher<org.springframework.core.io.buffer.DataBuffer>, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #8                  // Method decodeToMono:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
       9: invokestatic  #9                  // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      12: areturn

  protected org.springframework.core.io.Resource decodeDataBuffer(org.springframework.core.io.buffer.DataBuffer, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: invokeinterface #10,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readableByteCount:()I
       6: newarray       byte
       8: astore        5
      10: aload_1
      11: aload         5
      13: invokeinterface #11,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.read:([B)Lorg/springframework/core/io/buffer/DataBuffer;
      18: pop
      19: aload_1
      20: invokestatic  #12                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      23: pop
      24: aload_0
      25: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
      28: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      33: ifeq          79
      36: aload_0
      37: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
      40: new           #15                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      47: aload         4
      49: invokestatic  #17                 // Method org/springframework/core/codec/Hints.getLogPrefix:(Ljava/util/Map;)Ljava/lang/String;
      52: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #19                 // String Read
      57: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload         5
      62: arraylength
      63: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      66: ldc           #21                 // String  bytes
      68: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokeinterface #23,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      79: aload_2
      80: invokevirtual #5                  // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
      83: astore        6
      85: aload         6
      87: ldc           #24                 // class org/springframework/core/io/InputStreamResource
      89: if_acmpne     109
      92: new           #24                 // class org/springframework/core/io/InputStreamResource
      95: dup
      96: new           #25                 // class java/io/ByteArrayInputStream
      99: dup
     100: aload         5
     102: invokespecial #26                 // Method java/io/ByteArrayInputStream."<init>":([B)V
     105: invokespecial #27                 // Method org/springframework/core/io/InputStreamResource."<init>":(Ljava/io/InputStream;)V
     108: areturn
     109: ldc           #4                  // class org/springframework/core/io/Resource
     111: aload         6
     113: invokevirtual #6                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     116: ifeq          129
     119: new           #28                 // class org/springframework/core/io/ByteArrayResource
     122: dup
     123: aload         5
     125: invokespecial #29                 // Method org/springframework/core/io/ByteArrayResource."<init>":([B)V
     128: areturn
     129: new           #30                 // class java/lang/IllegalStateException
     132: dup
     133: new           #15                 // class java/lang/StringBuilder
     136: dup
     137: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     140: ldc           #31                 // String Unsupported resource class:
     142: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: aload         6
     147: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     150: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     153: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     156: athrow

  protected java.lang.Object decodeDataBuffer(org.springframework.core.io.buffer.DataBuffer, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #34                 // Method decodeDataBuffer:(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/Resource;
       9: areturn
}
