Compiled from "StringDecoder.java"
public final class org.springframework.core.codec.StringDecoder extends org.springframework.core.codec.AbstractDataBufferDecoder<java.lang.String> {
  private static final org.springframework.core.io.buffer.DataBuffer END_FRAME;

  public static final java.nio.charset.Charset DEFAULT_CHARSET;

  public static final java.util.List<java.lang.String> DEFAULT_DELIMITERS;

  private final java.util.List<java.lang.String> delimiters;

  private final boolean stripDelimiter;

  private final java.util.concurrent.ConcurrentMap<java.nio.charset.Charset, java.util.List<byte[]>> delimitersCache;

  private org.springframework.core.codec.StringDecoder(java.util.List<java.lang.String>, boolean, org.springframework.util.MimeType...);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #1                  // Method org/springframework/core/codec/AbstractDataBufferDecoder."<init>":([Lorg/springframework/util/MimeType;)V
       5: aload_0
       6: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       9: dup
      10: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      13: putfield      #4                  // Field delimitersCache:Ljava/util/concurrent/ConcurrentMap;
      16: aload_1
      17: ldc           #5                  // String \'delimiters\' must not be empty
      19: invokestatic  #6                  // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
      22: aload_0
      23: new           #7                  // class java/util/ArrayList
      26: dup
      27: aload_1
      28: invokespecial #8                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      31: putfield      #9                  // Field delimiters:Ljava/util/List;
      34: aload_0
      35: iload_2
      36: putfield      #10                 // Field stripDelimiter:Z
      39: return

  public boolean canDecode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
       4: ldc           #12                 // class java/lang/String
       6: if_acmpne     22
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokespecial #13                 // Method org/springframework/core/codec/AbstractDataBufferDecoder.canDecode:(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public reactor.core.publisher.Flux<java.lang.String> decode(org.reactivestreams.Publisher<org.springframework.core.io.buffer.DataBuffer>, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #14                 // Method getDelimiterBytes:(Lorg/springframework/util/MimeType;)Ljava/util/List;
       5: astore        5
       7: aload_0
       8: aload_1
       9: aload         5
      11: invokedynamic #15,  0             // InvokeDynamic #0:get:(Lorg/springframework/core/codec/StringDecoder;Lorg/reactivestreams/Publisher;Ljava/util/List;)Ljava/util/function/Supplier;
      16: invokestatic  #16                 // Method reactor/core/publisher/Flux.defer:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      19: astore        6
      21: aload_0
      22: aload         6
      24: aload_2
      25: aload_3
      26: aload         4
      28: invokespecial #17                 // Method org/springframework/core/codec/AbstractDataBufferDecoder.decode:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
      31: areturn

  private java.util.List<byte[]> getDelimiterBytes(org.springframework.util.MimeType);
    Code:
       0: aload_0
       1: getfield      #4                  // Field delimitersCache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokestatic  #18                 // Method getCharset:(Lorg/springframework/util/MimeType;)Ljava/nio/charset/Charset;
       8: aload_0
       9: invokedynamic #19,  0             // InvokeDynamic #1:apply:(Lorg/springframework/core/codec/StringDecoder;)Ljava/util/function/Function;
      14: invokeinterface #20,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      19: checkcast     #21                 // class java/util/List
      22: areturn

  private java.util.List<org.springframework.core.io.buffer.DataBuffer> splitOnDelimiter(org.springframework.core.io.buffer.DataBuffer, java.util.List<byte[]>, org.springframework.core.io.buffer.LimitedDataBufferList);
    Code:
       0: new           #7                  // class java/util/ArrayList
       3: dup
       4: invokespecial #22                 // Method java/util/ArrayList."<init>":()V
       7: astore        4
       9: ldc           #24                 // int 2147483647
      11: istore        5
      13: aconst_null
      14: astore        6
      16: aload_2
      17: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: astore        7
      24: aload         7
      26: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          77
      34: aload         7
      36: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #28                 // class "[B"
      44: astore        8
      46: aload_1
      47: aload         8
      49: invokestatic  #29                 // Method indexOf:(Lorg/springframework/core/io/buffer/DataBuffer;[B)I
      52: istore        9
      54: iload         9
      56: iflt          74
      59: iload         9
      61: iload         5
      63: if_icmpge     74
      66: iload         9
      68: istore        5
      70: aload         8
      72: astore        6
      74: goto          24
      77: aload_1
      78: invokeinterface #30,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readPosition:()I
      83: istore        8
      85: aload         6
      87: ifnull        184
      90: aload_0
      91: getfield      #10                 // Field stripDelimiter:Z
      94: ifeq          110
      97: aload_1
      98: iload         8
     100: iload         5
     102: invokeinterface #31,  3           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.slice:(II)Lorg/springframework/core/io/buffer/DataBuffer;
     107: goto          124
     110: aload_1
     111: iload         8
     113: iload         5
     115: aload         6
     117: arraylength
     118: iadd
     119: invokeinterface #31,  3           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.slice:(II)Lorg/springframework/core/io/buffer/DataBuffer;
     124: astore        7
     126: aload_1
     127: iload         8
     129: iload         5
     131: iadd
     132: aload         6
     134: arraylength
     135: iadd
     136: invokeinterface #32,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readPosition:(I)Lorg/springframework/core/io/buffer/DataBuffer;
     141: pop
     142: aload         4
     144: aload         7
     146: invokestatic  #33                 // Method org/springframework/core/io/buffer/DataBufferUtils.retain:(Lorg/springframework/core/io/buffer/DataBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
     149: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     154: pop
     155: aload         4
     157: getstatic     #35                 // Field END_FRAME:Lorg/springframework/core/io/buffer/DataBuffer;
     160: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     165: pop
     166: aload_3
     167: ifnull        240
     170: aload_3
     171: aload         7
     173: invokevirtual #36                 // Method org/springframework/core/io/buffer/LimitedDataBufferList.add:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
     176: pop
     177: aload_3
     178: invokevirtual #37                 // Method org/springframework/core/io/buffer/LimitedDataBufferList.clear:()V
     181: goto          240
     184: aload_1
     185: iload         8
     187: aload_1
     188: invokeinterface #38,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readableByteCount:()I
     193: invokeinterface #31,  3           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.slice:(II)Lorg/springframework/core/io/buffer/DataBuffer;
     198: astore        7
     200: aload_1
     201: iload         8
     203: aload_1
     204: invokeinterface #38,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readableByteCount:()I
     209: iadd
     210: invokeinterface #32,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readPosition:(I)Lorg/springframework/core/io/buffer/DataBuffer;
     215: pop
     216: aload         4
     218: aload         7
     220: invokestatic  #33                 // Method org/springframework/core/io/buffer/DataBufferUtils.retain:(Lorg/springframework/core/io/buffer/DataBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
     223: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     228: pop
     229: aload_3
     230: ifnull        240
     233: aload_3
     234: aload         7
     236: invokevirtual #36                 // Method org/springframework/core/io/buffer/LimitedDataBufferList.add:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
     239: pop
     240: aload_1
     241: invokeinterface #38,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readableByteCount:()I
     246: ifgt          9
     249: aload_1
     250: invokestatic  #39                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
     253: pop
     254: goto          325
     257: astore        5
     259: aload_3
     260: ifnull        267
     263: aload_3
     264: invokevirtual #41                 // Method org/springframework/core/io/buffer/LimitedDataBufferList.releaseAndClear:()V
     267: aload         5
     269: athrow
     270: astore        5
     272: aload         4
     274: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     279: astore        6
     281: aload         6
     283: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     288: ifeq          312
     291: aload         6
     293: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     298: checkcast     #43                 // class org/springframework/core/io/buffer/DataBuffer
     301: astore        7
     303: aload         7
     305: invokestatic  #39                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
     308: pop
     309: goto          281
     312: aload         5
     314: athrow
     315: astore        10
     317: aload_1
     318: invokestatic  #39                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
     321: pop
     322: aload         10
     324: athrow
     325: aload         4
     327: areturn
    Exception table:
       from    to  target type
           9   249   257   Class org/springframework/core/io/buffer/DataBufferLimitException
           9   249   270   Class java/lang/Throwable
           9   249   315   any
         257   317   315   any

  private static int indexOf(org.springframework.core.io.buffer.DataBuffer, byte[]);
    Code:
       0: aload_0
       1: invokeinterface #30,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readPosition:()I
       6: istore_2
       7: iload_2
       8: aload_0
       9: invokeinterface #44,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.writePosition:()I
      14: if_icmpge     122
      17: iload_2
      18: istore_3
      19: iconst_0
      20: istore        4
      22: iload         4
      24: aload_1
      25: arraylength
      26: if_icmpge     100
      29: aload_0
      30: iload_3
      31: invokeinterface #45,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.getByte:(I)B
      36: aload_1
      37: iload         4
      39: baload
      40: if_icmpeq     46
      43: goto          100
      46: iinc          3, 1
      49: iload_3
      50: aload_0
      51: invokeinterface #44,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.writePosition:()I
      56: if_icmpne     63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: istore        5
      66: iload         4
      68: aload_1
      69: arraylength
      70: iconst_1
      71: isub
      72: if_icmpne     79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: istore        6
      82: iload         5
      84: ifeq          94
      87: iload         6
      89: ifne          94
      92: iconst_m1
      93: ireturn
      94: iinc          4, 1
      97: goto          22
     100: iload         4
     102: aload_1
     103: arraylength
     104: if_icmpne     116
     107: iload_2
     108: aload_0
     109: invokeinterface #30,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readPosition:()I
     114: isub
     115: ireturn
     116: iinc          2, 1
     119: goto          7
     122: iconst_m1
     123: ireturn

  private static org.springframework.core.io.buffer.DataBuffer joinUntilEndFrame(java.util.List<org.springframework.core.io.buffer.DataBuffer>);
    Code:
       0: aload_0
       1: invokeinterface #46,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       6: ifne          39
       9: aload_0
      10: invokeinterface #47,  1           // InterfaceMethod java/util/List.size:()I
      15: iconst_1
      16: isub
      17: istore_1
      18: aload_0
      19: iload_1
      20: invokeinterface #48,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: getstatic     #35                 // Field END_FRAME:Lorg/springframework/core/io/buffer/DataBuffer;
      28: if_acmpne     39
      31: aload_0
      32: iload_1
      33: invokeinterface #49,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      38: pop
      39: aload_0
      40: iconst_0
      41: invokeinterface #48,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      46: checkcast     #43                 // class org/springframework/core/io/buffer/DataBuffer
      49: invokeinterface #50,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.factory:()Lorg/springframework/core/io/buffer/DataBufferFactory;
      54: aload_0
      55: invokeinterface #51,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.join:(Ljava/util/List;)Lorg/springframework/core/io/buffer/DataBuffer;
      60: areturn

  protected java.lang.String decodeDataBuffer(org.springframework.core.io.buffer.DataBuffer, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_3
       1: invokestatic  #18                 // Method getCharset:(Lorg/springframework/util/MimeType;)Ljava/nio/charset/Charset;
       4: astore        5
       6: aload         5
       8: aload_1
       9: invokeinterface #52,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.asByteBuffer:()Ljava/nio/ByteBuffer;
      14: invokevirtual #53                 // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
      17: astore        6
      19: aload_1
      20: invokestatic  #39                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      23: pop
      24: aload         6
      26: invokevirtual #54                 // Method java/nio/CharBuffer.toString:()Ljava/lang/String;
      29: astore        7
      31: aload_0
      32: getfield      #55                 // Field logger:Lorg/apache/commons/logging/Log;
      35: aload         7
      37: aload         4
      39: invokedynamic #56,  0             // InvokeDynamic #2:apply:(Ljava/lang/String;Ljava/util/Map;)Ljava/util/function/Function;
      44: invokestatic  #57                 // Method org/springframework/core/log/LogFormatUtils.traceDebug:(Lorg/apache/commons/logging/Log;Ljava/util/function/Function;)V
      47: aload         7
      49: areturn

  private static java.nio.charset.Charset getCharset(org.springframework.util.MimeType);
    Code:
       0: aload_0
       1: ifnull        16
       4: aload_0
       5: invokevirtual #58                 // Method org/springframework/util/MimeType.getCharset:()Ljava/nio/charset/Charset;
       8: ifnull        16
      11: aload_0
      12: invokevirtual #58                 // Method org/springframework/util/MimeType.getCharset:()Ljava/nio/charset/Charset;
      15: areturn
      16: getstatic     #59                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      19: areturn

  public static org.springframework.core.codec.StringDecoder textPlainOnly(boolean);
    Code:
       0: invokestatic  #60                 // Method textPlainOnly:()Lorg/springframework/core/codec/StringDecoder;
       3: areturn

  public static org.springframework.core.codec.StringDecoder textPlainOnly();
    Code:
       0: getstatic     #61                 // Field DEFAULT_DELIMITERS:Ljava/util/List;
       3: iconst_1
       4: invokestatic  #62                 // Method textPlainOnly:(Ljava/util/List;Z)Lorg/springframework/core/codec/StringDecoder;
       7: areturn

  public static org.springframework.core.codec.StringDecoder textPlainOnly(java.util.List<java.lang.String>, boolean);
    Code:
       0: new           #63                 // class org/springframework/core/codec/StringDecoder
       3: dup
       4: aload_0
       5: iload_1
       6: iconst_1
       7: anewarray     #64                 // class org/springframework/util/MimeType
      10: dup
      11: iconst_0
      12: new           #64                 // class org/springframework/util/MimeType
      15: dup
      16: ldc           #65                 // String text
      18: ldc           #66                 // String plain
      20: getstatic     #59                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      23: invokespecial #67                 // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
      26: aastore
      27: invokespecial #68                 // Method "<init>":(Ljava/util/List;Z[Lorg/springframework/util/MimeType;)V
      30: areturn

  public static org.springframework.core.codec.StringDecoder allMimeTypes(boolean);
    Code:
       0: invokestatic  #69                 // Method allMimeTypes:()Lorg/springframework/core/codec/StringDecoder;
       3: areturn

  public static org.springframework.core.codec.StringDecoder allMimeTypes();
    Code:
       0: getstatic     #61                 // Field DEFAULT_DELIMITERS:Ljava/util/List;
       3: iconst_1
       4: invokestatic  #70                 // Method allMimeTypes:(Ljava/util/List;Z)Lorg/springframework/core/codec/StringDecoder;
       7: areturn

  public static org.springframework.core.codec.StringDecoder allMimeTypes(java.util.List<java.lang.String>, boolean);
    Code:
       0: new           #63                 // class org/springframework/core/codec/StringDecoder
       3: dup
       4: aload_0
       5: iload_1
       6: iconst_2
       7: anewarray     #64                 // class org/springframework/util/MimeType
      10: dup
      11: iconst_0
      12: new           #64                 // class org/springframework/util/MimeType
      15: dup
      16: ldc           #65                 // String text
      18: ldc           #66                 // String plain
      20: getstatic     #59                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      23: invokespecial #67                 // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
      26: aastore
      27: dup
      28: iconst_1
      29: getstatic     #71                 // Field org/springframework/util/MimeTypeUtils.ALL:Lorg/springframework/util/MimeType;
      32: aastore
      33: invokespecial #68                 // Method "<init>":(Ljava/util/List;Z[Lorg/springframework/util/MimeType;)V
      36: areturn

  protected java.lang.Object decodeDataBuffer(org.springframework.core.io.buffer.DataBuffer, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #72                 // Method decodeDataBuffer:(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/lang/String;
       9: areturn

  private static java.lang.String lambda$decodeDataBuffer$6(java.lang.String, java.util.Map, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #73                 // Method java/lang/Boolean.booleanValue:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: invokestatic  #74                 // Method org/springframework/core/log/LogFormatUtils.formatValue:(Ljava/lang/Object;Z)Ljava/lang/String;
      16: astore_3
      17: new           #75                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
      24: aload_1
      25: invokestatic  #77                 // Method org/springframework/core/codec/Hints.getLogPrefix:(Ljava/util/Map;)Ljava/lang/String;
      28: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #79                 // String Decoded
      33: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_3
      37: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: areturn

  private java.util.List lambda$getDelimiterBytes$5(java.nio.charset.Charset);
    Code:
       0: new           #7                  // class java/util/ArrayList
       3: dup
       4: invokespecial #22                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #9                  // Field delimiters:Ljava/util/List;
      12: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          58
      27: aload_3
      28: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #12                 // class java/lang/String
      36: astore        4
      38: aload         4
      40: aload_1
      41: invokevirtual #81                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      44: astore        5
      46: aload_2
      47: aload         5
      49: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: goto          18
      58: aload_2
      59: areturn

  private org.reactivestreams.Publisher lambda$decode$4(org.reactivestreams.Publisher, java.util.List);
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method getMaxInMemorySize:()I
       4: iconst_m1
       5: if_icmpeq     62
       8: new           #83                 // class org/springframework/core/io/buffer/LimitedDataBufferList
      11: dup
      12: aload_0
      13: invokevirtual #82                 // Method getMaxInMemorySize:()I
      16: invokespecial #84                 // Method org/springframework/core/io/buffer/LimitedDataBufferList."<init>":(I)V
      19: astore_3
      20: aload_1
      21: invokestatic  #85                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      24: aload_0
      25: aload_2
      26: aload_3
      27: invokedynamic #86,  0             // InvokeDynamic #3:apply:(Lorg/springframework/core/codec/StringDecoder;Ljava/util/List;Lorg/springframework/core/io/buffer/LimitedDataBufferList;)Ljava/util/function/Function;
      32: invokevirtual #87                 // Method reactor/core/publisher/Flux.concatMapIterable:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      35: invokedynamic #88,  0             // InvokeDynamic #4:test:()Ljava/util/function/Predicate;
      40: invokevirtual #89                 // Method reactor/core/publisher/Flux.bufferUntil:(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
      43: invokedynamic #90,  0             // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      48: invokevirtual #91                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      51: ldc           #92                 // class org/springframework/core/io/buffer/PooledDataBuffer
      53: invokedynamic #93,  0             // InvokeDynamic #6:accept:()Ljava/util/function/Consumer;
      58: invokevirtual #94                 // Method reactor/core/publisher/Flux.doOnDiscard:(Ljava/lang/Class;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
      61: areturn
      62: new           #95                 // class org/springframework/core/codec/StringDecoder$ConcatMapIterableDiscardWorkaroundCache
      65: dup
      66: aload_0
      67: aconst_null
      68: invokespecial #96                 // Method org/springframework/core/codec/StringDecoder$ConcatMapIterableDiscardWorkaroundCache."<init>":(Lorg/springframework/core/codec/StringDecoder;Lorg/springframework/core/codec/StringDecoder$1;)V
      71: astore_3
      72: aload_1
      73: invokestatic  #85                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      76: aload_0
      77: aload_3
      78: aload_2
      79: invokedynamic #97,  0             // InvokeDynamic #7:apply:(Lorg/springframework/core/codec/StringDecoder;Lorg/springframework/core/codec/StringDecoder$ConcatMapIterableDiscardWorkaroundCache;Ljava/util/List;)Ljava/util/function/Function;
      84: invokevirtual #87                 // Method reactor/core/publisher/Flux.concatMapIterable:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      87: aload_3
      88: invokevirtual #98                 // Method reactor/core/publisher/Flux.doOnNext:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
      91: aload_3
      92: invokevirtual #99                 // Method reactor/core/publisher/Flux.doOnCancel:(Ljava/lang/Runnable;)Lreactor/core/publisher/Flux;
      95: invokedynamic #100,  0            // InvokeDynamic #8:test:()Ljava/util/function/Predicate;
     100: invokevirtual #89                 // Method reactor/core/publisher/Flux.bufferUntil:(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
     103: invokedynamic #90,  0             // InvokeDynamic #5:apply:()Ljava/util/function/Function;
     108: invokevirtual #91                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     111: ldc           #92                 // class org/springframework/core/io/buffer/PooledDataBuffer
     113: invokedynamic #93,  0             // InvokeDynamic #6:accept:()Ljava/util/function/Consumer;
     118: invokevirtual #94                 // Method reactor/core/publisher/Flux.doOnDiscard:(Ljava/lang/Class;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
     121: areturn

  private static boolean lambda$null$3(org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: aload_0
       1: getstatic     #35                 // Field END_FRAME:Lorg/springframework/core/io/buffer/DataBuffer;
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private java.lang.Iterable lambda$null$2(org.springframework.core.codec.StringDecoder$ConcatMapIterableDiscardWorkaroundCache, java.util.List, org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: aload_1
       1: aload_0
       2: aload_3
       3: aload_2
       4: aconst_null
       5: invokespecial #101                // Method splitOnDelimiter:(Lorg/springframework/core/io/buffer/DataBuffer;Ljava/util/List;Lorg/springframework/core/io/buffer/LimitedDataBufferList;)Ljava/util/List;
       8: invokevirtual #102                // Method org/springframework/core/codec/StringDecoder$ConcatMapIterableDiscardWorkaroundCache.addAll:(Ljava/util/List;)Ljava/util/List;
      11: areturn

  private static boolean lambda$null$1(org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: aload_0
       1: getstatic     #35                 // Field END_FRAME:Lorg/springframework/core/io/buffer/DataBuffer;
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private java.lang.Iterable lambda$null$0(java.util.List, org.springframework.core.io.buffer.LimitedDataBufferList, org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: aload_2
       4: invokespecial #101                // Method splitOnDelimiter:(Lorg/springframework/core/io/buffer/DataBuffer;Ljava/util/List;Lorg/springframework/core/io/buffer/LimitedDataBufferList;)Ljava/util/List;
       7: areturn

  static {};
    Code:
       0: new           #103                // class org/springframework/core/io/buffer/DefaultDataBufferFactory
       3: dup
       4: invokespecial #104                // Method org/springframework/core/io/buffer/DefaultDataBufferFactory."<init>":()V
       7: iconst_0
       8: newarray       byte
      10: invokevirtual #105                // Method org/springframework/core/io/buffer/DefaultDataBufferFactory.wrap:([B)Lorg/springframework/core/io/buffer/DefaultDataBuffer;
      13: putstatic     #35                 // Field END_FRAME:Lorg/springframework/core/io/buffer/DataBuffer;
      16: getstatic     #106                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      19: putstatic     #59                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      22: iconst_2
      23: anewarray     #12                 // class java/lang/String
      26: dup
      27: iconst_0
      28: ldc           #107                // String \r\n
      30: aastore
      31: dup
      32: iconst_1
      33: ldc           #108                // String \n
      35: aastore
      36: invokestatic  #109                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      39: putstatic     #61                 // Field DEFAULT_DELIMITERS:Ljava/util/List;
      42: return
}
