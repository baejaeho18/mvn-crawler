Compiled from "SettableListenableFuture.java"
public class org.springframework.util.concurrent.SettableListenableFuture<T> implements org.springframework.util.concurrent.ListenableFuture<T> {
  private static final java.util.concurrent.Callable<java.lang.Object> DUMMY_CALLABLE;

  private final org.springframework.util.concurrent.SettableListenableFuture$SettableTask<T> settableTask;

  public org.springframework.util.concurrent.SettableListenableFuture();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class org/springframework/util/concurrent/SettableListenableFuture$SettableTask
       8: dup
       9: invokespecial #4                  // Method org/springframework/util/concurrent/SettableListenableFuture$SettableTask."<init>":()V
      12: putfield      #5                  // Field settableTask:Lorg/springframework/util/concurrent/SettableListenableFuture$SettableTask;
      15: return

  public boolean set(T);
    Code:
       0: aload_0
       1: getfield      #5                  // Field settableTask:Lorg/springframework/util/concurrent/SettableListenableFuture$SettableTask;
       4: aload_1
       5: invokevirtual #6                  // Method org/springframework/util/concurrent/SettableListenableFuture$SettableTask.setResultValue:(Ljava/lang/Object;)Z
       8: ireturn

  public boolean setException(java.lang.Throwable);
    Code:
       0: aload_1
       1: ldc           #7                  // String Exception must not be null
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #5                  // Field settableTask:Lorg/springframework/util/concurrent/SettableListenableFuture$SettableTask;
      10: aload_1
      11: invokevirtual #9                  // Method org/springframework/util/concurrent/SettableListenableFuture$SettableTask.setExceptionResult:(Ljava/lang/Throwable;)Z
      14: ireturn

  public void addCallback(org.springframework.util.concurrent.ListenableFutureCallback<? super T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field settableTask:Lorg/springframework/util/concurrent/SettableListenableFuture$SettableTask;
       4: aload_1
       5: invokevirtual #10                 // Method org/springframework/util/concurrent/SettableListenableFuture$SettableTask.addCallback:(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V
       8: return

  public void addCallback(org.springframework.util.concurrent.SuccessCallback<? super T>, org.springframework.util.concurrent.FailureCallback);
    Code:
       0: aload_0
       1: getfield      #5                  // Field settableTask:Lorg/springframework/util/concurrent/SettableListenableFuture$SettableTask;
       4: aload_1
       5: aload_2
       6: invokevirtual #11                 // Method org/springframework/util/concurrent/SettableListenableFuture$SettableTask.addCallback:(Lorg/springframework/util/concurrent/SuccessCallback;Lorg/springframework/util/concurrent/FailureCallback;)V
       9: return

  public java.util.concurrent.CompletableFuture<T> completable();
    Code:
       0: aload_0
       1: getfield      #5                  // Field settableTask:Lorg/springframework/util/concurrent/SettableListenableFuture$SettableTask;
       4: invokevirtual #12                 // Method org/springframework/util/concurrent/SettableListenableFuture$SettableTask.completable:()Ljava/util/concurrent/CompletableFuture;
       7: areturn

  public boolean cancel(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field settableTask:Lorg/springframework/util/concurrent/SettableListenableFuture$SettableTask;
       4: iload_1
       5: invokevirtual #13                 // Method org/springframework/util/concurrent/SettableListenableFuture$SettableTask.cancel:(Z)Z
       8: istore_2
       9: iload_2
      10: ifeq          21
      13: iload_1
      14: ifeq          21
      17: aload_0
      18: invokevirtual #14                 // Method interruptTask:()V
      21: iload_2
      22: ireturn

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #5                  // Field settableTask:Lorg/springframework/util/concurrent/SettableListenableFuture$SettableTask;
       4: invokevirtual #15                 // Method org/springframework/util/concurrent/SettableListenableFuture$SettableTask.isCancelled:()Z
       7: ireturn

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #5                  // Field settableTask:Lorg/springframework/util/concurrent/SettableListenableFuture$SettableTask;
       4: invokevirtual #16                 // Method org/springframework/util/concurrent/SettableListenableFuture$SettableTask.isDone:()Z
       7: ireturn

  public T get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field settableTask:Lorg/springframework/util/concurrent/SettableListenableFuture$SettableTask;
       4: invokevirtual #17                 // Method org/springframework/util/concurrent/SettableListenableFuture$SettableTask.get:()Ljava/lang/Object;
       7: areturn

  public T get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field settableTask:Lorg/springframework/util/concurrent/SettableListenableFuture$SettableTask;
       4: lload_1
       5: aload_3
       6: invokevirtual #18                 // Method org/springframework/util/concurrent/SettableListenableFuture$SettableTask.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
       9: areturn

  protected void interruptTask();
    Code:
       0: return

  private static java.lang.Object lambda$static$0() throws java.lang.Exception;
    Code:
       0: new           #19                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #20                 // String Should never be called
       6: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  static java.util.concurrent.Callable access$000();
    Code:
       0: getstatic     #1                  // Field DUMMY_CALLABLE:Ljava/util/concurrent/Callable;
       3: areturn

  static {};
    Code:
       0: invokedynamic #22,  0             // InvokeDynamic #0:call:()Ljava/util/concurrent/Callable;
       5: putstatic     #1                  // Field DUMMY_CALLABLE:Ljava/util/concurrent/Callable;
       8: return
}
