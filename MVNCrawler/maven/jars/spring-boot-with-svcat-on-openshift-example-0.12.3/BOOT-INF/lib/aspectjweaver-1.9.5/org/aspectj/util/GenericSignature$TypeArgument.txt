Compiled from "GenericSignature.java"
public class org.aspectj.util.GenericSignature$TypeArgument {
  public boolean isWildcard;

  public boolean isPlus;

  public boolean isMinus;

  public org.aspectj.util.GenericSignature$FieldTypeSignature signature;

  public org.aspectj.util.GenericSignature$TypeArgument();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field isWildcard:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field isPlus:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field isMinus:Z
      19: aload_0
      20: iconst_1
      21: putfield      #2                  // Field isWildcard:Z
      24: return

  public org.aspectj.util.GenericSignature$TypeArgument(boolean, boolean, org.aspectj.util.GenericSignature$FieldTypeSignature);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field isWildcard:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field isPlus:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field isMinus:Z
      19: aload_0
      20: iload_1
      21: putfield      #3                  // Field isPlus:Z
      24: aload_0
      25: iload_2
      26: putfield      #4                  // Field isMinus:Z
      29: aload_0
      30: aload_3
      31: putfield      #5                  // Field signature:Lorg/aspectj/util/GenericSignature$FieldTypeSignature;
      34: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isWildcard:Z
       4: ifeq          10
       7: ldc           #6                  // String *
       9: areturn
      10: new           #7                  // class java/lang/StringBuffer
      13: dup
      14: invokespecial #8                  // Method java/lang/StringBuffer."<init>":()V
      17: astore_1
      18: aload_0
      19: getfield      #3                  // Field isPlus:Z
      22: ifeq          32
      25: aload_1
      26: ldc           #9                  // String +
      28: invokevirtual #10                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      31: pop
      32: aload_0
      33: getfield      #4                  // Field isMinus:Z
      36: ifeq          46
      39: aload_1
      40: ldc           #11                 // String -
      42: invokevirtual #10                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      45: pop
      46: aload_1
      47: aload_0
      48: getfield      #5                  // Field signature:Lorg/aspectj/util/GenericSignature$FieldTypeSignature;
      51: invokevirtual #12                 // Method java/lang/Object.toString:()Ljava/lang/String;
      54: invokevirtual #10                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      57: pop
      58: aload_1
      59: invokevirtual #13                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      62: areturn
}
