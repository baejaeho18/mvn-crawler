Compiled from "WeaverStateInfo.java"
public class org.aspectj.weaver.WeaverStateInfo {
  private java.util.List<org.aspectj.weaver.WeaverStateInfo$Entry> typeMungers;

  private boolean oldStyle;

  private boolean reweavable;

  private boolean reweavableCompressedMode;

  private boolean reweavableDiffMode;

  private java.util.Set<java.lang.String> aspectsAffectingType;

  private byte[] unwovenClassFile;

  private static boolean reweavableDefault;

  private static boolean reweavableCompressedModeDefault;

  private static boolean reweavableDiffModeDefault;

  private static byte[] key;

  private boolean unwovenClassFileIsADiff;

  int compressionEnabled;

  private static final int UNTOUCHED;

  private static final int WOVEN;

  private static final int EXTENDED;

  private static final byte REWEAVABLE_BIT;

  private static final byte REWEAVABLE_COMPRESSION_BIT;

  private static final byte REWEAVABLE_DIFF_BIT;

  private static final byte[] NO_BYTES;

  private void checkCompressionEnabled();
    Code:
       0: aload_0
       1: getfield      #1                  // Field compressionEnabled:I
       4: ifne          46
       7: aload_0
       8: iconst_1
       9: putfield      #1                  // Field compressionEnabled:I
      12: ldc           #2                  // String aspectj.compression.weaverstateinfo
      14: ldc           #3                  // String false
      16: invokestatic  #4                  // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      19: astore_1
      20: aload_1
      21: ldc           #5                  // String true
      23: invokevirtual #6                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      26: ifeq          42
      29: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
      32: ldc           #8                  // String ASPECTJ: aspectj.compression.weaverstateinfo=true: compressing weaverstateinfo
      34: invokevirtual #9                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      37: aload_0
      38: iconst_2
      39: putfield      #1                  // Field compressionEnabled:I
      42: goto          46
      45: astore_1
      46: return
    Exception table:
       from    to  target type
          12    42    45   Class java/lang/Throwable

  private org.aspectj.weaver.WeaverStateInfo();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #12                 // Field unwovenClassFileIsADiff:Z
       9: aload_0
      10: iconst_0
      11: putfield      #1                  // Field compressionEnabled:I
      14: return

  public org.aspectj.weaver.WeaverStateInfo(boolean);
    Code:
       0: aload_0
       1: new           #13                 // class java/util/ArrayList
       4: dup
       5: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
       8: iconst_0
       9: iload_1
      10: getstatic     #15                 // Field reweavableCompressedModeDefault:Z
      13: getstatic     #16                 // Field reweavableDiffModeDefault:Z
      16: invokespecial #17                 // Method "<init>":(Ljava/util/List;ZZZZ)V
      19: return

  private org.aspectj.weaver.WeaverStateInfo(java.util.List<org.aspectj.weaver.WeaverStateInfo$Entry>, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #12                 // Field unwovenClassFileIsADiff:Z
       9: aload_0
      10: iconst_0
      11: putfield      #1                  // Field compressionEnabled:I
      14: aload_0
      15: aload_1
      16: putfield      #18                 // Field typeMungers:Ljava/util/List;
      19: aload_0
      20: iload_2
      21: putfield      #19                 // Field oldStyle:Z
      24: aload_0
      25: iload_3
      26: putfield      #20                 // Field reweavable:Z
      29: aload_0
      30: iload         4
      32: putfield      #21                 // Field reweavableCompressedMode:Z
      35: aload_0
      36: iload_3
      37: ifeq          45
      40: iload         5
      42: goto          46
      45: iconst_0
      46: putfield      #22                 // Field reweavableDiffMode:Z
      49: aload_0
      50: new           #23                 // class java/util/HashSet
      53: dup
      54: invokespecial #24                 // Method java/util/HashSet."<init>":()V
      57: putfield      #25                 // Field aspectsAffectingType:Ljava/util/Set;
      60: aload_0
      61: aconst_null
      62: putfield      #26                 // Field unwovenClassFile:[B
      65: return

  public static void setReweavableModeDefaults(boolean, boolean, boolean);
    Code:
       0: iload_0
       1: putstatic     #27                 // Field reweavableDefault:Z
       4: iload_1
       5: putstatic     #15                 // Field reweavableCompressedModeDefault:Z
       8: iload_2
       9: putstatic     #16                 // Field reweavableDiffModeDefault:Z
      12: return

  public static final org.aspectj.weaver.WeaverStateInfo read(org.aspectj.weaver.VersionedDataInputStream, org.aspectj.weaver.ISourceContext) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method org/aspectj/weaver/VersionedDataInputStream.readByte:()B
       4: istore_2
       5: iload_2
       6: bipush        16
       8: iand
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: istore_3
      18: iload_3
      19: ifeq          28
      22: iload_2
      23: bipush        16
      25: isub
      26: i2b
      27: istore_2
      28: iload_2
      29: bipush        32
      31: iand
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: istore        4
      42: iload         4
      44: ifeq          53
      47: iload_2
      48: bipush        32
      50: isub
      51: i2b
      52: istore_2
      53: iload_2
      54: bipush        64
      56: iand
      57: ifeq          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: istore        5
      67: iload         5
      69: ifeq          78
      72: iload_2
      73: bipush        64
      75: isub
      76: i2b
      77: istore_2
      78: iload_2
      79: tableswitch   { // 0 to 3
                     0: 108
                     1: 293
                     2: 118
                     3: 135
               default: 293
          }
     108: new           #30                 // class java/lang/RuntimeException
     111: dup
     112: ldc           #31                 // String unexpected UNWOVEN
     114: invokespecial #32                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     117: athrow
     118: new           #29                 // class org/aspectj/weaver/WeaverStateInfo
     121: dup
     122: invokestatic  #33                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     125: iconst_1
     126: iload_3
     127: iload         4
     129: iload         5
     131: invokespecial #17                 // Method "<init>":(Ljava/util/List;ZZZZ)V
     134: areturn
     135: iconst_0
     136: istore        6
     138: aload_0
     139: invokevirtual #34                 // Method org/aspectj/weaver/VersionedDataInputStream.isAtLeast169:()Z
     142: ifeq          151
     145: aload_0
     146: invokevirtual #35                 // Method org/aspectj/weaver/VersionedDataInputStream.readBoolean:()Z
     149: istore        6
     151: aload_0
     152: invokevirtual #36                 // Method org/aspectj/weaver/VersionedDataInputStream.readShort:()S
     155: istore        7
     157: new           #13                 // class java/util/ArrayList
     160: dup
     161: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
     164: astore        8
     166: iconst_0
     167: istore        9
     169: iload         9
     171: iload         7
     173: if_icmpge     265
     176: aconst_null
     177: astore        10
     179: iload         6
     181: ifeq          227
     184: aload_0
     185: invokevirtual #36                 // Method org/aspectj/weaver/VersionedDataInputStream.readShort:()S
     188: istore        11
     190: aload_0
     191: iload         11
     193: invokevirtual #37                 // Method org/aspectj/weaver/VersionedDataInputStream.readUtf8:(I)Ljava/lang/String;
     196: astore        12
     198: aload         12
     200: iconst_0
     201: invokevirtual #38                 // Method java/lang/String.charAt:(I)C
     204: bipush        64
     206: if_icmpne     217
     209: getstatic     #39                 // Field org/aspectj/weaver/ResolvedType.MISSING:Lorg/aspectj/weaver/ResolvedType$Missing;
     212: astore        10
     214: goto          224
     217: aload         12
     219: invokestatic  #40                 // Method org/aspectj/weaver/UnresolvedType.forSignature:(Ljava/lang/String;)Lorg/aspectj/weaver/UnresolvedType;
     222: astore        10
     224: goto          233
     227: aload_0
     228: invokestatic  #41                 // Method org/aspectj/weaver/UnresolvedType.read:(Ljava/io/DataInputStream;)Lorg/aspectj/weaver/UnresolvedType;
     231: astore        10
     233: aload_0
     234: aload_1
     235: invokestatic  #42                 // Method org/aspectj/weaver/ResolvedTypeMunger.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/ResolvedTypeMunger;
     238: astore        11
     240: aload         8
     242: new           #43                 // class org/aspectj/weaver/WeaverStateInfo$Entry
     245: dup
     246: aload         10
     248: aload         11
     250: invokespecial #44                 // Method org/aspectj/weaver/WeaverStateInfo$Entry."<init>":(Lorg/aspectj/weaver/UnresolvedType;Lorg/aspectj/weaver/ResolvedTypeMunger;)V
     253: invokeinterface #45,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     258: pop
     259: iinc          9, 1
     262: goto          169
     265: new           #29                 // class org/aspectj/weaver/WeaverStateInfo
     268: dup
     269: aload         8
     271: iconst_0
     272: iload_3
     273: iload         4
     275: iload         5
     277: invokespecial #17                 // Method "<init>":(Ljava/util/List;ZZZZ)V
     280: astore        9
     282: aload         9
     284: aload_0
     285: iload         6
     287: invokestatic  #46                 // Method readAnyReweavableData:(Lorg/aspectj/weaver/WeaverStateInfo;Lorg/aspectj/weaver/VersionedDataInputStream;Z)V
     290: aload         9
     292: areturn
     293: new           #30                 // class java/lang/RuntimeException
     296: dup
     297: new           #47                 // class java/lang/StringBuilder
     300: dup
     301: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
     304: ldc           #49                 // String bad WeaverState.Kind:
     306: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     309: iload_2
     310: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     313: ldc           #52                 // String .  File was :
     315: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     318: aload_1
     319: ifnonnull     327
     322: ldc           #53                 // String unknown
     324: goto          338
     327: aload_1
     328: iconst_0
     329: iconst_0
     330: invokeinterface #54,  3           // InterfaceMethod org/aspectj/weaver/ISourceContext.makeSourceLocation:(II)Lorg/aspectj/bridge/ISourceLocation;
     335: invokevirtual #55                 // Method java/lang/Object.toString:()Ljava/lang/String;
     338: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     341: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     344: invokespecial #32                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     347: athrow

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #57                 // Method checkCompressionEnabled:()V
       4: aload_0
       5: getfield      #19                 // Field oldStyle:Z
       8: ifne          18
      11: aload_0
      12: getfield      #21                 // Field reweavableCompressedMode:Z
      15: ifeq          28
      18: new           #30                 // class java/lang/RuntimeException
      21: dup
      22: ldc           #58                 // String shouldn\'t be writing this
      24: invokespecial #32                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: iconst_3
      29: istore_2
      30: aload_0
      31: getfield      #20                 // Field reweavable:Z
      34: ifeq          43
      37: iload_2
      38: bipush        16
      40: ior
      41: i2b
      42: istore_2
      43: aload_0
      44: getfield      #22                 // Field reweavableDiffMode:Z
      47: ifeq          63
      50: aload_1
      51: getstatic     #59                 // Field key:[B
      54: invokevirtual #60                 // Method org/aspectj/weaver/CompressingDataOutputStream.write:([B)V
      57: iload_2
      58: bipush        64
      60: ior
      61: i2b
      62: istore_2
      63: aload_1
      64: iload_2
      65: invokevirtual #61                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeByte:(I)V
      68: aload_1
      69: aload_0
      70: getfield      #1                  // Field compressionEnabled:I
      73: iconst_2
      74: if_icmpne     81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: putfield      #62                 // Field org/aspectj/weaver/CompressingDataOutputStream.compressionEnabled:Z
      85: aload_1
      86: aload_1
      87: invokevirtual #63                 // Method org/aspectj/weaver/CompressingDataOutputStream.canCompress:()Z
      90: invokevirtual #64                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeBoolean:(Z)V
      93: aload_0
      94: getfield      #18                 // Field typeMungers:Ljava/util/List;
      97: invokeinterface #65,  1           // InterfaceMethod java/util/List.size:()I
     102: istore_3
     103: aload_1
     104: iload_3
     105: invokevirtual #66                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeShort:(I)V
     108: aload_0
     109: getfield      #18                 // Field typeMungers:Ljava/util/List;
     112: invokeinterface #67,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     117: astore        4
     119: aload         4
     121: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     126: ifeq          184
     129: aload         4
     131: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     136: checkcast     #43                 // class org/aspectj/weaver/WeaverStateInfo$Entry
     139: astore        5
     141: aload_1
     142: invokevirtual #63                 // Method org/aspectj/weaver/CompressingDataOutputStream.canCompress:()Z
     145: ifeq          163
     148: aload_1
     149: aload         5
     151: getfield      #70                 // Field org/aspectj/weaver/WeaverStateInfo$Entry.aspectType:Lorg/aspectj/weaver/UnresolvedType;
     154: invokevirtual #71                 // Method org/aspectj/weaver/UnresolvedType.getSignature:()Ljava/lang/String;
     157: invokevirtual #72                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeCompressedSignature:(Ljava/lang/String;)V
     160: goto          172
     163: aload         5
     165: getfield      #70                 // Field org/aspectj/weaver/WeaverStateInfo$Entry.aspectType:Lorg/aspectj/weaver/UnresolvedType;
     168: aload_1
     169: invokevirtual #73                 // Method org/aspectj/weaver/UnresolvedType.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
     172: aload         5
     174: getfield      #74                 // Field org/aspectj/weaver/WeaverStateInfo$Entry.typeMunger:Lorg/aspectj/weaver/ResolvedTypeMunger;
     177: aload_1
     178: invokevirtual #75                 // Method org/aspectj/weaver/ResolvedTypeMunger.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
     181: goto          119
     184: aload_0
     185: aload_1
     186: aload_1
     187: invokevirtual #63                 // Method org/aspectj/weaver/CompressingDataOutputStream.canCompress:()Z
     190: invokestatic  #76                 // Method writeAnyReweavableData:(Lorg/aspectj/weaver/WeaverStateInfo;Lorg/aspectj/weaver/CompressingDataOutputStream;Z)V
     193: aload_1
     194: iconst_1
     195: putfield      #62                 // Field org/aspectj/weaver/CompressingDataOutputStream.compressionEnabled:Z
     198: goto          211
     201: astore        6
     203: aload_1
     204: iconst_1
     205: putfield      #62                 // Field org/aspectj/weaver/CompressingDataOutputStream.compressionEnabled:Z
     208: aload         6
     210: athrow
     211: return
    Exception table:
       from    to  target type
          68   193   201   any
         201   203   201   any

  public void markOverweavingInUse();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #22                 // Field reweavableDiffMode:Z
       5: aload_0
       6: getstatic     #77                 // Field NO_BYTES:[B
       9: putfield      #26                 // Field unwovenClassFile:[B
      12: return

  public void addConcreteMunger(org.aspectj.weaver.ConcreteTypeMunger);
    Code:
       0: aload_0
       1: getfield      #18                 // Field typeMungers:Ljava/util/List;
       4: new           #43                 // class org/aspectj/weaver/WeaverStateInfo$Entry
       7: dup
       8: aload_1
       9: invokevirtual #78                 // Method org/aspectj/weaver/ConcreteTypeMunger.getAspectType:()Lorg/aspectj/weaver/ResolvedType;
      12: aload_1
      13: invokevirtual #79                 // Method org/aspectj/weaver/ConcreteTypeMunger.getMunger:()Lorg/aspectj/weaver/ResolvedTypeMunger;
      16: invokespecial #44                 // Method org/aspectj/weaver/WeaverStateInfo$Entry."<init>":(Lorg/aspectj/weaver/UnresolvedType;Lorg/aspectj/weaver/ResolvedTypeMunger;)V
      19: invokeinterface #45,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      24: pop
      25: return

  public java.lang.String toString();
    Code:
       0: new           #47                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #80                 // String WeaverStateInfo(aspectsAffectingType=
       9: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #25                 // Field aspectsAffectingType:Ljava/util/Set;
      16: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #82                 // String ,
      21: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #18                 // Field typeMungers:Ljava/util/List;
      28: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #83                 // String ,
      33: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #19                 // Field oldStyle:Z
      40: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      43: ldc           #85                 // String )
      45: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public java.util.List<org.aspectj.weaver.ConcreteTypeMunger> getTypeMungers(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_1
       1: invokevirtual #86                 // Method org/aspectj/weaver/ResolvedType.getWorld:()Lorg/aspectj/weaver/World;
       4: astore_2
       5: new           #13                 // class java/util/ArrayList
       8: dup
       9: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
      12: astore_3
      13: aload_0
      14: getfield      #18                 // Field typeMungers:Ljava/util/List;
      17: invokeinterface #67,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: astore        4
      24: aload         4
      26: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          116
      34: aload         4
      36: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #43                 // class org/aspectj/weaver/WeaverStateInfo$Entry
      44: astore        5
      46: aload_2
      47: aload         5
      49: getfield      #70                 // Field org/aspectj/weaver/WeaverStateInfo$Entry.aspectType:Lorg/aspectj/weaver/UnresolvedType;
      52: iconst_1
      53: invokevirtual #87                 // Method org/aspectj/weaver/World.resolve:(Lorg/aspectj/weaver/UnresolvedType;Z)Lorg/aspectj/weaver/ResolvedType;
      56: astore        6
      58: aload         6
      60: invokevirtual #88                 // Method org/aspectj/weaver/ResolvedType.isMissing:()Z
      63: ifeq          92
      66: aload_2
      67: getstatic     #89                 // Field org/aspectj/bridge/IMessage.ERROR:Lorg/aspectj/bridge/IMessage$Kind;
      70: ldc           #91                 // String aspectNeeded
      72: aload         5
      74: getfield      #70                 // Field org/aspectj/weaver/WeaverStateInfo$Entry.aspectType:Lorg/aspectj/weaver/UnresolvedType;
      77: aload_1
      78: invokestatic  #92                 // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
      81: aload_1
      82: invokevirtual #93                 // Method org/aspectj/weaver/ResolvedType.getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
      85: aconst_null
      86: invokevirtual #94                 // Method org/aspectj/weaver/World.showMessage:(Lorg/aspectj/bridge/IMessage$Kind;Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;Lorg/aspectj/bridge/ISourceLocation;)V
      89: goto          24
      92: aload_3
      93: new           #95                 // class org/aspectj/weaver/TemporaryTypeMunger
      96: dup
      97: aload         5
      99: getfield      #74                 // Field org/aspectj/weaver/WeaverStateInfo$Entry.typeMunger:Lorg/aspectj/weaver/ResolvedTypeMunger;
     102: aload         6
     104: invokespecial #96                 // Method org/aspectj/weaver/TemporaryTypeMunger."<init>":(Lorg/aspectj/weaver/ResolvedTypeMunger;Lorg/aspectj/weaver/ResolvedType;)V
     107: invokeinterface #45,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     112: pop
     113: goto          24
     116: aload_3
     117: areturn

  public boolean isOldStyle();
    Code:
       0: aload_0
       1: getfield      #19                 // Field oldStyle:Z
       4: ireturn

  public byte[] getUnwovenClassFileData();
    Code:
       0: aload_0
       1: getfield      #26                 // Field unwovenClassFile:[B
       4: areturn

  public byte[] getUnwovenClassFileData(byte[]);
    Code:
       0: aload_0
       1: getfield      #12                 // Field unwovenClassFileIsADiff:Z
       4: ifeq          25
       7: aload_0
       8: aload_0
       9: aload_1
      10: aload_0
      11: getfield      #26                 // Field unwovenClassFile:[B
      14: invokevirtual #97                 // Method applyDiff:([B[B)[B
      17: putfield      #26                 // Field unwovenClassFile:[B
      20: aload_0
      21: iconst_0
      22: putfield      #12                 // Field unwovenClassFileIsADiff:Z
      25: aload_0
      26: getfield      #26                 // Field unwovenClassFile:[B
      29: areturn

  public void setUnwovenClassFileData(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field unwovenClassFile:[B
       5: return

  public boolean isReweavable();
    Code:
       0: aload_0
       1: getfield      #20                 // Field reweavable:Z
       4: ireturn

  public void setReweavable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field reweavable:Z
       5: return

  public void addAspectsAffectingType(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #25                 // Field aspectsAffectingType:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #98,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      10: pop
      11: return

  public void addAspectAffectingType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #25                 // Field aspectsAffectingType:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #99,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public java.util.Set<java.lang.String> getAspectsAffectingType();
    Code:
       0: aload_0
       1: getfield      #25                 // Field aspectsAffectingType:Ljava/util/Set;
       4: areturn

  private static void readAnyReweavableData(org.aspectj.weaver.WeaverStateInfo, org.aspectj.weaver.VersionedDataInputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #100                // Method isReweavable:()Z
       4: ifeq          315
       7: aload_1
       8: invokevirtual #36                 // Method org/aspectj/weaver/VersionedDataInputStream.readShort:()S
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: iload_3
      18: if_icmpge     105
      21: aconst_null
      22: astore        5
      24: iload_2
      25: ifeq          37
      28: aload_1
      29: invokevirtual #101                // Method org/aspectj/weaver/VersionedDataInputStream.readSignature:()Ljava/lang/String;
      32: astore        5
      34: goto          93
      37: aload_1
      38: invokevirtual #102                // Method org/aspectj/weaver/VersionedDataInputStream.readUTF:()Ljava/lang/String;
      41: astore        5
      43: aload_1
      44: invokevirtual #103                // Method org/aspectj/weaver/VersionedDataInputStream.getMajorVersion:()I
      47: bipush        7
      49: if_icmpge     93
      52: new           #47                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
      59: astore        6
      61: aload         6
      63: ldc           #105                // String L
      65: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload         5
      70: bipush        46
      72: bipush        47
      74: invokevirtual #106                // Method java/lang/String.replace:(CC)Ljava/lang/String;
      77: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: ldc           #107                // String ;
      82: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: pop
      86: aload         6
      88: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: astore        5
      93: aload_0
      94: aload         5
      96: invokevirtual #108                // Method addAspectAffectingType:(Ljava/lang/String;)V
      99: iinc          4, 1
     102: goto          15
     105: aload_1
     106: invokevirtual #109                // Method org/aspectj/weaver/VersionedDataInputStream.readInt:()I
     109: istore        4
     111: aconst_null
     112: astore        5
     114: aload_0
     115: getfield      #21                 // Field reweavableCompressedMode:Z
     118: ifeq          237
     121: iload         4
     123: newarray       byte
     125: astore        5
     127: new           #110                // class java/util/zip/ZipInputStream
     130: dup
     131: aload_1
     132: invokespecial #111                // Method java/util/zip/ZipInputStream."<init>":(Ljava/io/InputStream;)V
     135: astore        6
     137: aload         6
     139: invokevirtual #112                // Method java/util/zip/ZipInputStream.getNextEntry:()Ljava/util/zip/ZipEntry;
     142: astore        7
     144: iconst_0
     145: istore        8
     147: iload         4
     149: istore        9
     151: iload         9
     153: ifle          186
     156: aload         6
     158: aload         5
     160: iload         8
     162: iload         9
     164: invokevirtual #113                // Method java/util/zip/ZipInputStream.read:([BII)I
     167: istore        10
     169: iload         8
     171: iload         10
     173: iadd
     174: istore        8
     176: iload         9
     178: iload         10
     180: isub
     181: istore        9
     183: goto          151
     186: aload         6
     188: invokevirtual #114                // Method java/util/zip/ZipInputStream.closeEntry:()V
     191: iload         9
     193: ifeq          234
     196: new           #115                // class java/io/IOException
     199: dup
     200: new           #47                 // class java/lang/StringBuilder
     203: dup
     204: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
     207: ldc           #116                // String ERROR whilst reading compressed reweavable data, expected
     209: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: iload         4
     214: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     217: ldc           #117                // String  bytes, only found
     219: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     222: iload         8
     224: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     227: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     230: invokespecial #118                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     233: athrow
     234: goto          301
     237: iload         4
     239: newarray       byte
     241: astore        5
     243: iload         4
     245: ifeq          301
     248: aload_1
     249: aload         5
     251: invokevirtual #119                // Method org/aspectj/weaver/VersionedDataInputStream.read:([B)I
     254: istore        6
     256: iload         6
     258: iload         4
     260: if_icmpeq     301
     263: new           #115                // class java/io/IOException
     266: dup
     267: new           #47                 // class java/lang/StringBuilder
     270: dup
     271: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
     274: ldc           #120                // String ERROR whilst reading reweavable data, expected
     276: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     279: iload         4
     281: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     284: ldc           #117                // String  bytes, only found
     286: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     289: iload         6
     291: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     294: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     297: invokespecial #118                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     300: athrow
     301: aload_0
     302: aload_0
     303: getfield      #22                 // Field reweavableDiffMode:Z
     306: putfield      #12                 // Field unwovenClassFileIsADiff:Z
     309: aload_0
     310: aload         5
     312: invokevirtual #121                // Method setUnwovenClassFileData:([B)V
     315: return

  public byte[] replaceKeyWithDiff(byte[]);
    Code:
       0: aload_0
       1: getfield      #22                 // Field reweavableDiffMode:Z
       4: ifeq          192
       7: new           #122                // class java/io/ByteArrayOutputStream
      10: dup
      11: invokespecial #123                // Method java/io/ByteArrayOutputStream."<init>":()V
      14: astore_2
      15: new           #124                // class java/io/DataOutputStream
      18: dup
      19: aload_2
      20: invokespecial #125                // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      23: astore_3
      24: aload_1
      25: invokestatic  #126                // Method findEndOfKey:([B)I
      28: istore        4
      30: iload         4
      32: getstatic     #59                 // Field key:[B
      35: arraylength
      36: isub
      37: istore        5
      39: iload         5
      41: iconst_4
      42: isub
      43: istore        6
      45: aload_1
      46: iload         6
      48: invokestatic  #127                // Method readInt:([BI)I
      51: istore        7
      53: aload_1
      54: iload         5
      56: iload         4
      58: invokestatic  #128                // Method deleteInArray:([BII)[B
      61: astore_1
      62: iload         6
      64: newarray       byte
      66: astore        8
      68: aload_1
      69: iconst_0
      70: aload         8
      72: iconst_0
      73: iload         6
      75: invokestatic  #129                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      78: aload_0
      79: aload         8
      81: aload_0
      82: getfield      #26                 // Field unwovenClassFile:[B
      85: invokevirtual #130                // Method generateDiff:([B[B)[B
      88: astore        9
      90: aload_3
      91: aload         9
      93: arraylength
      94: invokevirtual #131                // Method java/io/DataOutputStream.writeInt:(I)V
      97: aload_3
      98: aload         9
     100: invokevirtual #132                // Method java/io/DataOutputStream.write:([B)V
     103: goto          108
     106: astore        10
     108: aload_2
     109: invokevirtual #133                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     112: astore        9
     114: iload         7
     116: getstatic     #59                 // Field key:[B
     119: arraylength
     120: isub
     121: aload         9
     123: arraylength
     124: iadd
     125: istore        10
     127: aload_0
     128: iload         10
     130: invokespecial #134                // Method serializeInt:(I)[B
     133: astore        11
     135: aload_1
     136: iload         6
     138: aload         11
     140: iconst_0
     141: baload
     142: bastore
     143: aload_1
     144: iload         6
     146: iconst_1
     147: iadd
     148: aload         11
     150: iconst_1
     151: baload
     152: bastore
     153: aload_1
     154: iload         6
     156: iconst_2
     157: iadd
     158: aload         11
     160: iconst_2
     161: baload
     162: bastore
     163: aload_1
     164: iload         6
     166: iconst_3
     167: iadd
     168: aload         11
     170: iconst_3
     171: baload
     172: bastore
     173: aload         9
     175: aload_1
     176: iload         6
     178: iconst_4
     179: iadd
     180: iload         7
     182: iadd
     183: getstatic     #59                 // Field key:[B
     186: arraylength
     187: isub
     188: invokestatic  #135                // Method insertArray:([B[BI)[B
     191: astore_1
     192: aload_1
     193: areturn
    Exception table:
       from    to  target type
          90   103   106   Class java/io/IOException

  private static final int findEndOfKey(byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: isub
       4: istore_1
       5: iload_1
       6: ifle          27
       9: aload_0
      10: iload_1
      11: invokestatic  #136                // Method endOfKeyHere:([BI)Z
      14: ifeq          21
      17: iload_1
      18: iconst_1
      19: iadd
      20: ireturn
      21: iinc          1, -1
      24: goto          5
      27: new           #30                 // class java/lang/RuntimeException
      30: dup
      31: ldc           #137                // String key not found in wovenClassFile
      33: invokespecial #32                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      36: athrow

  private static final boolean endOfKeyHere(byte[], int);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: getstatic     #59                 // Field key:[B
       6: arraylength
       7: if_icmpge     38
      10: getstatic     #59                 // Field key:[B
      13: getstatic     #59                 // Field key:[B
      16: arraylength
      17: iconst_1
      18: isub
      19: iload_2
      20: isub
      21: baload
      22: aload_0
      23: iload_1
      24: iload_2
      25: isub
      26: baload
      27: if_icmpeq     32
      30: iconst_0
      31: ireturn
      32: iinc          2, 1
      35: goto          2
      38: iconst_1
      39: ireturn

  private static final byte[] insertArray(byte[], byte[], int);
    Code:
       0: aload_1
       1: arraylength
       2: aload_0
       3: arraylength
       4: iadd
       5: newarray       byte
       7: astore_3
       8: aload_1
       9: iconst_0
      10: aload_3
      11: iconst_0
      12: iload_2
      13: invokestatic  #129                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      16: aload_0
      17: iconst_0
      18: aload_3
      19: iload_2
      20: aload_0
      21: arraylength
      22: invokestatic  #129                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      25: aload_1
      26: iload_2
      27: aload_3
      28: iload_2
      29: aload_0
      30: arraylength
      31: iadd
      32: aload_1
      33: arraylength
      34: iload_2
      35: isub
      36: invokestatic  #129                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      39: aload_3
      40: areturn

  private static final int readInt(byte[], int);
    Code:
       0: new           #138                // class java/io/ByteArrayInputStream
       3: dup
       4: aload_0
       5: iload_1
       6: iconst_4
       7: invokespecial #139                // Method java/io/ByteArrayInputStream."<init>":([BII)V
      10: astore_2
      11: new           #140                // class java/io/DataInputStream
      14: dup
      15: aload_2
      16: invokespecial #141                // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      19: astore_3
      20: iconst_m1
      21: istore        4
      23: aload_3
      24: invokevirtual #142                // Method java/io/DataInputStream.readInt:()I
      27: istore        4
      29: goto          44
      32: astore        5
      34: new           #30                 // class java/lang/RuntimeException
      37: dup
      38: ldc           #143                // String readInt called with a bad array or offset
      40: invokespecial #32                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: iload         4
      46: ireturn
    Exception table:
       from    to  target type
          23    29    32   Class java/io/IOException

  private static final byte[] deleteInArray(byte[], int, int);
    Code:
       0: iload_2
       1: iload_1
       2: isub
       3: istore_3
       4: aload_0
       5: arraylength
       6: iload_3
       7: isub
       8: newarray       byte
      10: astore        4
      12: aload_0
      13: iconst_0
      14: aload         4
      16: iconst_0
      17: iload_1
      18: invokestatic  #129                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      21: aload_0
      22: iload_2
      23: aload         4
      25: iload_1
      26: aload_0
      27: arraylength
      28: iload_2
      29: isub
      30: invokestatic  #129                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      33: aload         4
      35: areturn

  byte[] generateDiff(byte[], byte[]);
    Code:
       0: bipush        10
       2: istore_3
       3: aload_1
       4: arraylength
       5: aload_2
       6: arraylength
       7: if_icmpge     15
      10: aload_1
      11: arraylength
      12: goto          17
      15: aload_2
      16: arraylength
      17: istore        4
      19: iload_3
      20: iload         4
      22: if_icmpge     40
      25: aload_1
      26: iload_3
      27: baload
      28: aload_2
      29: iload_3
      30: baload
      31: if_icmpne     40
      34: iinc          3, 1
      37: goto          19
      40: iload_3
      41: bipush        10
      43: isub
      44: istore        5
      46: aload_2
      47: arraylength
      48: iconst_4
      49: isub
      50: iload         5
      52: isub
      53: newarray       byte
      55: astore        6
      57: aload         6
      59: iconst_0
      60: aload_2
      61: bipush        8
      63: baload
      64: bastore
      65: aload         6
      67: iconst_1
      68: aload_2
      69: bipush        9
      71: baload
      72: bastore
      73: aload_0
      74: iload         5
      76: invokespecial #134                // Method serializeInt:(I)[B
      79: astore        7
      81: aload         6
      83: iconst_2
      84: aload         7
      86: iconst_0
      87: baload
      88: bastore
      89: aload         6
      91: iconst_3
      92: aload         7
      94: iconst_1
      95: baload
      96: bastore
      97: aload         6
      99: iconst_4
     100: aload         7
     102: iconst_2
     103: baload
     104: bastore
     105: aload         6
     107: iconst_5
     108: aload         7
     110: iconst_3
     111: baload
     112: bastore
     113: aload_2
     114: bipush        10
     116: iload         5
     118: iadd
     119: aload         6
     121: bipush        6
     123: aload         6
     125: arraylength
     126: bipush        6
     128: isub
     129: invokestatic  #129                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     132: aload         6
     134: areturn

  byte[] applyDiff(byte[], byte[]);
    Code:
       0: aload_2
       1: iconst_2
       2: invokestatic  #127                // Method readInt:([BI)I
       5: istore_3
       6: iconst_4
       7: aload_2
       8: arraylength
       9: iadd
      10: iload_3
      11: iadd
      12: newarray       byte
      14: astore        4
      16: aload_1
      17: iconst_0
      18: aload         4
      20: iconst_0
      21: bipush        8
      23: invokestatic  #129                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      26: aload         4
      28: bipush        8
      30: aload_2
      31: iconst_0
      32: baload
      33: bastore
      34: aload         4
      36: bipush        9
      38: aload_2
      39: iconst_1
      40: baload
      41: bastore
      42: aload_1
      43: bipush        10
      45: aload         4
      47: bipush        10
      49: iload_3
      50: invokestatic  #129                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      53: aload_2
      54: bipush        6
      56: aload         4
      58: bipush        10
      60: iload_3
      61: iadd
      62: aload_2
      63: arraylength
      64: bipush        6
      66: isub
      67: invokestatic  #129                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      70: aload         4
      72: areturn

  private byte[] serializeInt(int);
    Code:
       0: new           #122                // class java/io/ByteArrayOutputStream
       3: dup
       4: iconst_4
       5: invokespecial #144                // Method java/io/ByteArrayOutputStream."<init>":(I)V
       8: astore_2
       9: new           #124                // class java/io/DataOutputStream
      12: dup
      13: aload_2
      14: invokespecial #125                // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      17: astore_3
      18: aload_3
      19: iload_1
      20: invokevirtual #131                // Method java/io/DataOutputStream.writeInt:(I)V
      23: goto          28
      26: astore        4
      28: aload_2
      29: invokevirtual #133                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      32: areturn
    Exception table:
       from    to  target type
          18    23    26   Class java/io/IOException

  private static void writeAnyReweavableData(org.aspectj.weaver.WeaverStateInfo, org.aspectj.weaver.CompressingDataOutputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #100                // Method isReweavable:()Z
       4: ifeq          98
       7: aload_1
       8: aload_0
       9: getfield      #25                 // Field aspectsAffectingType:Ljava/util/Set;
      12: invokeinterface #145,  1          // InterfaceMethod java/util/Set.size:()I
      17: invokevirtual #66                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeShort:(I)V
      20: aload_0
      21: getfield      #25                 // Field aspectsAffectingType:Ljava/util/Set;
      24: invokeinterface #146,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_3
      30: aload_3
      31: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          72
      39: aload_3
      40: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #147                // class java/lang/String
      48: astore        4
      50: iload_2
      51: ifeq          63
      54: aload_1
      55: aload         4
      57: invokevirtual #72                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeCompressedSignature:(Ljava/lang/String;)V
      60: goto          69
      63: aload_1
      64: aload         4
      66: invokevirtual #148                // Method org/aspectj/weaver/CompressingDataOutputStream.writeUTF:(Ljava/lang/String;)V
      69: goto          30
      72: aload_0
      73: getfield      #26                 // Field unwovenClassFile:[B
      76: astore_3
      77: aload_0
      78: getfield      #22                 // Field reweavableDiffMode:Z
      81: ifne          98
      84: aload_1
      85: aload_3
      86: arraylength
      87: invokevirtual #149                // Method org/aspectj/weaver/CompressingDataOutputStream.writeInt:(I)V
      90: aload_1
      91: aload_0
      92: getfield      #26                 // Field unwovenClassFile:[B
      95: invokevirtual #60                 // Method org/aspectj/weaver/CompressingDataOutputStream.write:([B)V
      98: return

  public boolean isAspectAlreadyApplied(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_1
       1: invokevirtual #150                // Method org/aspectj/weaver/ResolvedType.getSignature:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #25                 // Field aspectsAffectingType:Ljava/util/Set;
       9: invokeinterface #146,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          49
      24: aload_3
      25: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #147                // class java/lang/String
      33: astore        4
      35: aload         4
      37: aload_2
      38: invokevirtual #151                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      41: ifeq          46
      44: iconst_1
      45: ireturn
      46: goto          15
      49: iconst_0
      50: ireturn

  static {};
    Code:
       0: iconst_1
       1: putstatic     #27                 // Field reweavableDefault:Z
       4: iconst_0
       5: putstatic     #15                 // Field reweavableCompressedModeDefault:Z
       8: iconst_1
       9: putstatic     #16                 // Field reweavableDiffModeDefault:Z
      12: bipush        16
      14: newarray       byte
      16: dup
      17: iconst_0
      18: bipush        -51
      20: bastore
      21: dup
      22: iconst_1
      23: bipush        34
      25: bastore
      26: dup
      27: iconst_2
      28: bipush        105
      30: bastore
      31: dup
      32: iconst_3
      33: bipush        56
      35: bastore
      36: dup
      37: iconst_4
      38: bipush        -34
      40: bastore
      41: dup
      42: iconst_5
      43: bipush        65
      45: bastore
      46: dup
      47: bipush        6
      49: bipush        45
      51: bastore
      52: dup
      53: bipush        7
      55: bipush        78
      57: bastore
      58: dup
      59: bipush        8
      61: bipush        -26
      63: bastore
      64: dup
      65: bipush        9
      67: bipush        125
      69: bastore
      70: dup
      71: bipush        10
      73: bipush        114
      75: bastore
      76: dup
      77: bipush        11
      79: bipush        97
      81: bastore
      82: dup
      83: bipush        12
      85: bipush        98
      87: bastore
      88: dup
      89: bipush        13
      91: iconst_1
      92: bastore
      93: dup
      94: bipush        14
      96: iconst_m1
      97: bastore
      98: dup
      99: bipush        15
     101: bipush        -42
     103: bastore
     104: putstatic     #59                 // Field key:[B
     107: iconst_0
     108: newarray       byte
     110: putstatic     #77                 // Field NO_BYTES:[B
     113: return
}
