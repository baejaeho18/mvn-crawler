Compiled from "AbortException.java"
public class org.aspectj.bridge.AbortException extends java.lang.RuntimeException {
  private static final long serialVersionUID;

  private boolean isSilent;

  public static final java.lang.String NO_MESSAGE_TEXT;

  private static final java.util.ArrayList<org.aspectj.bridge.AbortException> porters;

  protected org.aspectj.bridge.IMessage message;

  protected boolean isPorter;

  public static org.aspectj.bridge.AbortException borrowPorter(org.aspectj.bridge.IMessage);
    Code:
       0: getstatic     #1                  // Field porters:Ljava/util/ArrayList;
       3: dup
       4: astore_2
       5: monitorenter
       6: getstatic     #1                  // Field porters:Ljava/util/ArrayList;
       9: invokevirtual #2                  // Method java/util/ArrayList.size:()I
      12: ifle          29
      15: getstatic     #1                  // Field porters:Ljava/util/ArrayList;
      18: iconst_0
      19: invokevirtual #3                  // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      22: checkcast     #4                  // class org/aspectj/bridge/AbortException
      25: astore_1
      26: goto          42
      29: new           #4                  // class org/aspectj/bridge/AbortException
      32: dup
      33: invokespecial #5                  // Method "<init>":()V
      36: astore_1
      37: aload_1
      38: iconst_0
      39: invokevirtual #6                  // Method setIsSilent:(Z)V
      42: aload_2
      43: monitorexit
      44: goto          52
      47: astore_3
      48: aload_2
      49: monitorexit
      50: aload_3
      51: athrow
      52: aload_1
      53: aload_0
      54: invokespecial #7                  // Method setIMessage:(Lorg/aspectj/bridge/IMessage;)V
      57: aload_1
      58: iconst_1
      59: putfield      #8                  // Field isPorter:Z
      62: aload_1
      63: areturn
    Exception table:
       from    to  target type
           6    44    47   any
          47    50    47   any

  public static void returnPorter(org.aspectj.bridge.AbortException);
    Code:
       0: getstatic     #1                  // Field porters:Ljava/util/ArrayList;
       3: dup
       4: astore_1
       5: monitorenter
       6: getstatic     #1                  // Field porters:Ljava/util/ArrayList;
       9: aload_0
      10: invokevirtual #9                  // Method java/util/ArrayList.contains:(Ljava/lang/Object;)Z
      13: ifeq          43
      16: new           #10                 // class java/lang/IllegalStateException
      19: dup
      20: new           #11                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #13                 // String already have
      29: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: getstatic     #1                  // Field porters:Ljava/util/ArrayList;
      46: aload_0
      47: invokevirtual #18                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      50: pop
      51: aload_1
      52: monitorexit
      53: goto          61
      56: astore_2
      57: aload_1
      58: monitorexit
      59: aload_2
      60: athrow
      61: return
    Exception table:
       from    to  target type
           6    53    56   any
          56    59    56   any

  private static java.lang.String extractMessage(org.aspectj.bridge.IMessage);
    Code:
       0: aconst_null
       1: aload_0
       2: if_acmpne     8
       5: ldc           #19                 // String AbortException (no message)
       7: areturn
       8: aload_0
       9: invokeinterface #20,  1           // InterfaceMethod org/aspectj/bridge/IMessage.getMessage:()Ljava/lang/String;
      14: astore_1
      15: aconst_null
      16: aload_1
      17: if_acmpne     23
      20: ldc           #19                 // String AbortException (no message)
      22: areturn
      23: aload_1
      24: areturn

  public org.aspectj.bridge.AbortException();
    Code:
       0: aload_0
       1: ldc           #21                 // String ABORT
       3: invokespecial #22                 // Method "<init>":(Ljava/lang/String;)V
       6: aload_0
       7: iconst_1
       8: putfield      #23                 // Field isSilent:Z
      11: return

  public org.aspectj.bridge.AbortException(java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: if_acmpeq     10
       6: aload_1
       7: goto          12
      10: ldc           #19                 // String AbortException (no message)
      12: invokespecial #24                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      15: aload_0
      16: iconst_0
      17: putfield      #23                 // Field isSilent:Z
      20: aload_0
      21: aconst_null
      22: putfield      #25                 // Field message:Lorg/aspectj/bridge/IMessage;
      25: return

  public org.aspectj.bridge.AbortException(org.aspectj.bridge.IMessage);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #26                 // Method extractMessage:(Lorg/aspectj/bridge/IMessage;)Ljava/lang/String;
       5: invokespecial #24                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       8: aload_0
       9: iconst_0
      10: putfield      #23                 // Field isSilent:Z
      13: aload_0
      14: aload_1
      15: putfield      #25                 // Field message:Lorg/aspectj/bridge/IMessage;
      18: return

  public org.aspectj.bridge.IMessage getIMessage();
    Code:
       0: aload_0
       1: getfield      #25                 // Field message:Lorg/aspectj/bridge/IMessage;
       4: areturn

  public boolean isPorter();
    Code:
       0: aload_0
       1: getfield      #8                  // Field isPorter:Z
       4: ireturn

  public java.lang.Throwable getThrown();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #27                 // Method getIMessage:()Lorg/aspectj/bridge/IMessage;
       6: astore_2
       7: aconst_null
       8: aload_2
       9: if_acmpeq     34
      12: aload_2
      13: invokeinterface #28,  1           // InterfaceMethod org/aspectj/bridge/IMessage.getThrown:()Ljava/lang/Throwable;
      18: astore_1
      19: aload_1
      20: instanceof    #4                  // class org/aspectj/bridge/AbortException
      23: ifeq          34
      26: aload_1
      27: checkcast     #4                  // class org/aspectj/bridge/AbortException
      30: invokevirtual #29                 // Method getThrown:()Ljava/lang/Throwable;
      33: areturn
      34: aload_1
      35: areturn

  private void setIMessage(org.aspectj.bridge.IMessage);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field message:Lorg/aspectj/bridge/IMessage;
       5: return

  public java.lang.String getMessage();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/lang/RuntimeException.getMessage:()Ljava/lang/String;
       4: astore_1
       5: aconst_null
       6: aload_1
       7: if_acmpeq     16
      10: ldc           #19                 // String AbortException (no message)
      12: aload_1
      13: if_acmpne     63
      16: aload_0
      17: invokevirtual #27                 // Method getIMessage:()Lorg/aspectj/bridge/IMessage;
      20: astore_2
      21: aconst_null
      22: aload_2
      23: if_acmpeq     55
      26: aload_2
      27: invokeinterface #20,  1           // InterfaceMethod org/aspectj/bridge/IMessage.getMessage:()Ljava/lang/String;
      32: astore_1
      33: aconst_null
      34: aload_1
      35: if_acmpne     55
      38: aload_2
      39: invokeinterface #28,  1           // InterfaceMethod org/aspectj/bridge/IMessage.getThrown:()Ljava/lang/Throwable;
      44: astore_3
      45: aconst_null
      46: aload_3
      47: if_acmpeq     55
      50: aload_3
      51: invokevirtual #31                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      54: astore_1
      55: aconst_null
      56: aload_1
      57: if_acmpne     63
      60: ldc           #19                 // String AbortException (no message)
      62: astore_1
      63: aload_1
      64: areturn

  public void printStackTrace();
    Code:
       0: aload_0
       1: getstatic     #32                 // Field java/lang/System.out:Ljava/io/PrintStream;
       4: invokevirtual #33                 // Method printStackTrace:(Ljava/io/PrintStream;)V
       7: return

  public void printStackTrace(java.io.PrintStream);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method getIMessage:()Lorg/aspectj/bridge/IMessage;
       4: astore_2
       5: aconst_null
       6: aload_2
       7: if_acmpne     14
      10: aconst_null
      11: goto          20
      14: aload_2
      15: invokeinterface #28,  1           // InterfaceMethod org/aspectj/bridge/IMessage.getThrown:()Ljava/lang/Throwable;
      20: astore_3
      21: aload_0
      22: invokevirtual #34                 // Method isPorter:()Z
      25: ifeq          33
      28: aconst_null
      29: aload_3
      30: if_acmpne     64
      33: aload_1
      34: new           #11                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #35                 // String Message:
      43: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_2
      47: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokevirtual #36                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      56: aload_0
      57: aload_1
      58: invokespecial #37                 // Method java/lang/RuntimeException.printStackTrace:(Ljava/io/PrintStream;)V
      61: goto          69
      64: aload_3
      65: aload_1
      66: invokevirtual #38                 // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintStream;)V
      69: return

  public void printStackTrace(java.io.PrintWriter);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method getIMessage:()Lorg/aspectj/bridge/IMessage;
       4: astore_2
       5: aconst_null
       6: aload_2
       7: if_acmpne     14
      10: aconst_null
      11: goto          20
      14: aload_2
      15: invokeinterface #28,  1           // InterfaceMethod org/aspectj/bridge/IMessage.getThrown:()Ljava/lang/Throwable;
      20: astore_3
      21: aconst_null
      22: aload_3
      23: if_acmpne     70
      26: aload_0
      27: invokevirtual #34                 // Method isPorter:()Z
      30: ifeq          39
      33: aload_1
      34: ldc           #39                 // String (Warning porter AbortException without thrown)
      36: invokevirtual #40                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      39: aload_1
      40: new           #11                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #35                 // String Message:
      49: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_2
      53: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      56: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokevirtual #40                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      62: aload_0
      63: aload_1
      64: invokespecial #41                 // Method java/lang/RuntimeException.printStackTrace:(Ljava/io/PrintWriter;)V
      67: goto          75
      70: aload_3
      71: aload_1
      72: invokevirtual #42                 // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V
      75: return

  public boolean isSilent();
    Code:
       0: aload_0
       1: getfield      #23                 // Field isSilent:Z
       4: ireturn

  public void setIsSilent(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field isSilent:Z
       5: return

  static {};
    Code:
       0: new           #43                 // class java/util/ArrayList
       3: dup
       4: invokespecial #44                 // Method java/util/ArrayList."<init>":()V
       7: putstatic     #1                  // Field porters:Ljava/util/ArrayList;
      10: return
}
