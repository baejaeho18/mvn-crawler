Compiled from "MethodDelegateTypeMunger.java"
public class org.aspectj.weaver.MethodDelegateTypeMunger$FieldHostTypeMunger extends org.aspectj.weaver.ResolvedTypeMunger {
  private final org.aspectj.weaver.UnresolvedType aspect;

  private final org.aspectj.weaver.patterns.TypePattern typePattern;

  public org.aspectj.weaver.MethodDelegateTypeMunger$FieldHostTypeMunger(org.aspectj.weaver.ResolvedMember, org.aspectj.weaver.UnresolvedType, org.aspectj.weaver.patterns.TypePattern);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field FieldHost:Lorg/aspectj/weaver/ResolvedTypeMunger$Kind;
       4: aload_1
       5: invokespecial #2                  // Method org/aspectj/weaver/ResolvedTypeMunger."<init>":(Lorg/aspectj/weaver/ResolvedTypeMunger$Kind;Lorg/aspectj/weaver/ResolvedMember;)V
       8: aload_0
       9: aload_2
      10: putfield      #3                  // Field aspect:Lorg/aspectj/weaver/UnresolvedType;
      13: aload_0
      14: aload_3
      15: putfield      #4                  // Field typePattern:Lorg/aspectj/weaver/patterns/TypePattern;
      18: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #5                  // class org/aspectj/weaver/MethodDelegateTypeMunger$FieldHostTypeMunger
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #5                  // class org/aspectj/weaver/MethodDelegateTypeMunger$FieldHostTypeMunger
      13: astore_2
      14: aload_2
      15: getfield      #3                  // Field aspect:Lorg/aspectj/weaver/UnresolvedType;
      18: ifnonnull     31
      21: aload_0
      22: getfield      #3                  // Field aspect:Lorg/aspectj/weaver/UnresolvedType;
      25: ifnonnull     80
      28: goto          45
      31: aload_0
      32: getfield      #3                  // Field aspect:Lorg/aspectj/weaver/UnresolvedType;
      35: aload_2
      36: getfield      #3                  // Field aspect:Lorg/aspectj/weaver/UnresolvedType;
      39: invokevirtual #6                  // Method org/aspectj/weaver/UnresolvedType.equals:(Ljava/lang/Object;)Z
      42: ifeq          80
      45: aload_2
      46: getfield      #4                  // Field typePattern:Lorg/aspectj/weaver/patterns/TypePattern;
      49: ifnonnull     62
      52: aload_0
      53: getfield      #4                  // Field typePattern:Lorg/aspectj/weaver/patterns/TypePattern;
      56: ifnonnull     80
      59: goto          76
      62: aload_0
      63: getfield      #4                  // Field typePattern:Lorg/aspectj/weaver/patterns/TypePattern;
      66: aload_2
      67: getfield      #4                  // Field typePattern:Lorg/aspectj/weaver/patterns/TypePattern;
      70: invokevirtual #7                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      73: ifeq          80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: bipush        37
       5: iload_1
       6: imul
       7: aload_0
       8: getfield      #3                  // Field aspect:Lorg/aspectj/weaver/UnresolvedType;
      11: ifnonnull     18
      14: iconst_0
      15: goto          25
      18: aload_0
      19: getfield      #3                  // Field aspect:Lorg/aspectj/weaver/UnresolvedType;
      22: invokevirtual #8                  // Method org/aspectj/weaver/UnresolvedType.hashCode:()I
      25: iadd
      26: istore_1
      27: bipush        37
      29: iload_1
      30: imul
      31: aload_0
      32: getfield      #4                  // Field typePattern:Lorg/aspectj/weaver/patterns/TypePattern;
      35: ifnonnull     42
      38: iconst_0
      39: goto          49
      42: aload_0
      43: getfield      #4                  // Field typePattern:Lorg/aspectj/weaver/patterns/TypePattern;
      46: invokevirtual #9                  // Method java/lang/Object.hashCode:()I
      49: iadd
      50: istore_1
      51: iload_1
      52: ireturn

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field kind:Lorg/aspectj/weaver/ResolvedTypeMunger$Kind;
       4: aload_1
       5: invokevirtual #11                 // Method org/aspectj/weaver/ResolvedTypeMunger$Kind.write:(Ljava/io/DataOutputStream;)V
       8: aload_0
       9: getfield      #12                 // Field signature:Lorg/aspectj/weaver/ResolvedMember;
      12: aload_1
      13: invokeinterface #13,  2           // InterfaceMethod org/aspectj/weaver/ResolvedMember.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      18: aload_0
      19: getfield      #3                  // Field aspect:Lorg/aspectj/weaver/UnresolvedType;
      22: aload_1
      23: invokevirtual #14                 // Method org/aspectj/weaver/UnresolvedType.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      26: aload_0
      27: getfield      #4                  // Field typePattern:Lorg/aspectj/weaver/patterns/TypePattern;
      30: aload_1
      31: invokevirtual #15                 // Method org/aspectj/weaver/patterns/TypePattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      34: return

  public static org.aspectj.weaver.ResolvedTypeMunger readFieldHost(org.aspectj.weaver.VersionedDataInputStream, org.aspectj.weaver.ISourceContext) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #16                 // Method org/aspectj/weaver/ResolvedMemberImpl.readResolvedMember:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/ResolvedMemberImpl;
       5: astore_2
       6: aload_0
       7: invokestatic  #17                 // Method org/aspectj/weaver/UnresolvedType.read:(Ljava/io/DataInputStream;)Lorg/aspectj/weaver/UnresolvedType;
      10: astore_3
      11: aload_0
      12: aload_1
      13: invokestatic  #18                 // Method org/aspectj/weaver/patterns/TypePattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/TypePattern;
      16: astore        4
      18: new           #5                  // class org/aspectj/weaver/MethodDelegateTypeMunger$FieldHostTypeMunger
      21: dup
      22: aload_2
      23: aload_3
      24: aload         4
      26: invokespecial #19                 // Method "<init>":(Lorg/aspectj/weaver/ResolvedMember;Lorg/aspectj/weaver/UnresolvedType;Lorg/aspectj/weaver/patterns/TypePattern;)V
      29: areturn

  public boolean matches(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method org/aspectj/weaver/ResolvedType.isEnum:()Z
       4: ifne          21
       7: aload_1
       8: invokevirtual #21                 // Method org/aspectj/weaver/ResolvedType.isInterface:()Z
      11: ifne          21
      14: aload_1
      15: invokevirtual #22                 // Method org/aspectj/weaver/ResolvedType.isAnnotation:()Z
      18: ifeq          23
      21: iconst_0
      22: ireturn
      23: aload_0
      24: getfield      #4                  // Field typePattern:Lorg/aspectj/weaver/patterns/TypePattern;
      27: aload_1
      28: invokevirtual #23                 // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
      31: ireturn

  public boolean changesPublicSignature();
    Code:
       0: iconst_0
       1: ireturn

  public boolean existsToSupportShadowMunging();
    Code:
       0: iconst_1
       1: ireturn
}
