Compiled from "PoliceExtensionUse.java"
public class org.aspectj.weaver.PoliceExtensionUse extends org.aspectj.weaver.patterns.AbstractPatternNodeVisitor {
  private boolean synchronizationDesignatorEncountered;

  private org.aspectj.weaver.World world;

  private org.aspectj.weaver.patterns.Pointcut p;

  public org.aspectj.weaver.PoliceExtensionUse(org.aspectj.weaver.World, org.aspectj.weaver.patterns.Pointcut);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/AbstractPatternNodeVisitor."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field world:Lorg/aspectj/weaver/World;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field p:Lorg/aspectj/weaver/patterns/Pointcut;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field synchronizationDesignatorEncountered:Z
      19: return

  public boolean synchronizationDesignatorEncountered();
    Code:
       0: aload_0
       1: getfield      #4                  // Field synchronizationDesignatorEncountered:Z
       4: ireturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.KindedPointcut, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field world:Lorg/aspectj/weaver/World;
       4: ifnonnull     14
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #5                  // Method org/aspectj/weaver/patterns/AbstractPatternNodeVisitor.visit:(Lorg/aspectj/weaver/patterns/KindedPointcut;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn
      14: aload_1
      15: invokevirtual #6                  // Method org/aspectj/weaver/patterns/KindedPointcut.getKind:()Lorg/aspectj/weaver/Shadow$Kind;
      18: getstatic     #7                  // Field org/aspectj/weaver/Shadow.SynchronizationLock:Lorg/aspectj/weaver/Shadow$Kind;
      21: if_acmpeq     34
      24: aload_1
      25: invokevirtual #6                  // Method org/aspectj/weaver/patterns/KindedPointcut.getKind:()Lorg/aspectj/weaver/Shadow$Kind;
      28: getstatic     #8                  // Field org/aspectj/weaver/Shadow.SynchronizationUnlock:Lorg/aspectj/weaver/Shadow$Kind;
      31: if_acmpne     39
      34: aload_0
      35: iconst_1
      36: putfield      #4                  // Field synchronizationDesignatorEncountered:Z
      39: aload_0
      40: getfield      #2                  // Field world:Lorg/aspectj/weaver/World;
      43: invokevirtual #9                  // Method org/aspectj/weaver/World.isJoinpointSynchronizationEnabled:()Z
      46: ifne          126
      49: aload_1
      50: invokevirtual #6                  // Method org/aspectj/weaver/patterns/KindedPointcut.getKind:()Lorg/aspectj/weaver/Shadow$Kind;
      53: getstatic     #7                  // Field org/aspectj/weaver/Shadow.SynchronizationLock:Lorg/aspectj/weaver/Shadow$Kind;
      56: if_acmpne     89
      59: ldc           #10                 // String lock() pointcut designator cannot be used without the option -Xjoinpoints:synchronization
      61: aload_0
      62: getfield      #3                  // Field p:Lorg/aspectj/weaver/patterns/Pointcut;
      65: invokevirtual #11                 // Method org/aspectj/weaver/patterns/Pointcut.getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
      68: invokestatic  #12                 // Method org/aspectj/bridge/MessageUtil.warn:(Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;)Lorg/aspectj/bridge/IMessage;
      71: astore_3
      72: aload_0
      73: getfield      #2                  // Field world:Lorg/aspectj/weaver/World;
      76: invokevirtual #13                 // Method org/aspectj/weaver/World.getMessageHandler:()Lorg/aspectj/bridge/IMessageHandler;
      79: aload_3
      80: invokeinterface #14,  2           // InterfaceMethod org/aspectj/bridge/IMessageHandler.handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
      85: pop
      86: goto          126
      89: aload_1
      90: invokevirtual #6                  // Method org/aspectj/weaver/patterns/KindedPointcut.getKind:()Lorg/aspectj/weaver/Shadow$Kind;
      93: getstatic     #8                  // Field org/aspectj/weaver/Shadow.SynchronizationUnlock:Lorg/aspectj/weaver/Shadow$Kind;
      96: if_acmpne     126
      99: ldc           #15                 // String unlock() pointcut designator cannot be used without the option -Xjoinpoints:synchronization
     101: aload_0
     102: getfield      #3                  // Field p:Lorg/aspectj/weaver/patterns/Pointcut;
     105: invokevirtual #11                 // Method org/aspectj/weaver/patterns/Pointcut.getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
     108: invokestatic  #12                 // Method org/aspectj/bridge/MessageUtil.warn:(Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;)Lorg/aspectj/bridge/IMessage;
     111: astore_3
     112: aload_0
     113: getfield      #2                  // Field world:Lorg/aspectj/weaver/World;
     116: invokevirtual #13                 // Method org/aspectj/weaver/World.getMessageHandler:()Lorg/aspectj/bridge/IMessageHandler;
     119: aload_3
     120: invokeinterface #14,  2           // InterfaceMethod org/aspectj/bridge/IMessageHandler.handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
     125: pop
     126: aload_0
     127: aload_1
     128: aload_2
     129: invokespecial #5                  // Method org/aspectj/weaver/patterns/AbstractPatternNodeVisitor.visit:(Lorg/aspectj/weaver/patterns/KindedPointcut;Ljava/lang/Object;)Ljava/lang/Object;
     132: areturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.AndPointcut, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method org/aspectj/weaver/patterns/AndPointcut.getLeft:()Lorg/aspectj/weaver/patterns/Pointcut;
       4: aload_0
       5: aload_2
       6: invokevirtual #17                 // Method org/aspectj/weaver/patterns/Pointcut.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: invokevirtual #18                 // Method org/aspectj/weaver/patterns/AndPointcut.getRight:()Lorg/aspectj/weaver/patterns/Pointcut;
      14: aload_0
      15: aload_2
      16: invokevirtual #17                 // Method org/aspectj/weaver/patterns/Pointcut.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_1
      21: areturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.NotPointcut, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method org/aspectj/weaver/patterns/NotPointcut.getNegatedPointcut:()Lorg/aspectj/weaver/patterns/Pointcut;
       4: aload_0
       5: aload_2
       6: invokevirtual #17                 // Method org/aspectj/weaver/patterns/Pointcut.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: areturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.OrPointcut, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method org/aspectj/weaver/patterns/OrPointcut.getLeft:()Lorg/aspectj/weaver/patterns/Pointcut;
       4: aload_0
       5: aload_2
       6: invokevirtual #17                 // Method org/aspectj/weaver/patterns/Pointcut.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: invokevirtual #21                 // Method org/aspectj/weaver/patterns/OrPointcut.getRight:()Lorg/aspectj/weaver/patterns/Pointcut;
      14: aload_0
      15: aload_2
      16: invokevirtual #17                 // Method org/aspectj/weaver/patterns/Pointcut.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_1
      21: areturn
}
