Compiled from "BcelShadow.java"
class org.aspectj.weaver.bcel.BcelShadow$UsesTargetVisitor extends org.aspectj.weaver.patterns.AbstractPatternNodeVisitor {
  boolean usesTarget;

  private org.aspectj.weaver.bcel.BcelShadow$UsesTargetVisitor();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/aspectj/weaver/patterns/AbstractPatternNodeVisitor."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field usesTarget:Z
       9: return

  public java.lang.Object visit(org.aspectj.weaver.patterns.ThisOrTargetPointcut, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method org/aspectj/weaver/patterns/ThisOrTargetPointcut.isThis:()Z
       4: ifne          19
       7: aload_1
       8: invokevirtual #5                  // Method org/aspectj/weaver/patterns/ThisOrTargetPointcut.isBinding:()Z
      11: ifeq          19
      14: aload_0
      15: iconst_1
      16: putfield      #3                  // Field usesTarget:Z
      19: aload_1
      20: areturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.AndPointcut, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field usesTarget:Z
       4: ifne          17
       7: aload_1
       8: invokevirtual #6                  // Method org/aspectj/weaver/patterns/AndPointcut.getLeft:()Lorg/aspectj/weaver/patterns/Pointcut;
      11: aload_0
      12: aload_2
      13: invokevirtual #7                  // Method org/aspectj/weaver/patterns/Pointcut.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_0
      18: getfield      #3                  // Field usesTarget:Z
      21: ifne          34
      24: aload_1
      25: invokevirtual #8                  // Method org/aspectj/weaver/patterns/AndPointcut.getRight:()Lorg/aspectj/weaver/patterns/Pointcut;
      28: aload_0
      29: aload_2
      30: invokevirtual #7                  // Method org/aspectj/weaver/patterns/Pointcut.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload_1
      35: areturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.NotPointcut, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field usesTarget:Z
       4: ifne          17
       7: aload_1
       8: invokevirtual #9                  // Method org/aspectj/weaver/patterns/NotPointcut.getNegatedPointcut:()Lorg/aspectj/weaver/patterns/Pointcut;
      11: aload_0
      12: aload_2
      13: invokevirtual #7                  // Method org/aspectj/weaver/patterns/Pointcut.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_1
      18: areturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.OrPointcut, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field usesTarget:Z
       4: ifne          17
       7: aload_1
       8: invokevirtual #10                 // Method org/aspectj/weaver/patterns/OrPointcut.getLeft:()Lorg/aspectj/weaver/patterns/Pointcut;
      11: aload_0
      12: aload_2
      13: invokevirtual #7                  // Method org/aspectj/weaver/patterns/Pointcut.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_0
      18: getfield      #3                  // Field usesTarget:Z
      21: ifne          34
      24: aload_1
      25: invokevirtual #11                 // Method org/aspectj/weaver/patterns/OrPointcut.getRight:()Lorg/aspectj/weaver/patterns/Pointcut;
      28: aload_0
      29: aload_2
      30: invokevirtual #7                  // Method org/aspectj/weaver/patterns/Pointcut.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload_1
      35: areturn

  org.aspectj.weaver.bcel.BcelShadow$UsesTargetVisitor(org.aspectj.weaver.bcel.BcelShadow$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
