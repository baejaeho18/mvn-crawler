Compiled from "CFlowStack.java"
public class org.aspectj.runtime.internal.CFlowStack {
  private static org.aspectj.runtime.internal.cflowstack.ThreadStackFactory tsFactory;

  private org.aspectj.runtime.internal.cflowstack.ThreadStack stackProxy;

  public org.aspectj.runtime.internal.CFlowStack();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field tsFactory:Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactory;
       8: invokeinterface #3,  1            // InterfaceMethod org/aspectj/runtime/internal/cflowstack/ThreadStackFactory.getNewThreadStack:()Lorg/aspectj/runtime/internal/cflowstack/ThreadStack;
      13: putfield      #4                  // Field stackProxy:Lorg/aspectj/runtime/internal/cflowstack/ThreadStack;
      16: return

  private java.util.Stack getThreadStack();
    Code:
       0: aload_0
       1: getfield      #4                  // Field stackProxy:Lorg/aspectj/runtime/internal/cflowstack/ThreadStack;
       4: invokeinterface #5,  1            // InterfaceMethod org/aspectj/runtime/internal/cflowstack/ThreadStack.getThreadStack:()Ljava/util/Stack;
       9: areturn

  public void push(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method getThreadStack:()Ljava/util/Stack;
       4: aload_1
       5: invokevirtual #7                  // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: return

  public void pushInstance(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method getThreadStack:()Ljava/util/Stack;
       4: new           #8                  // class org/aspectj/runtime/CFlow
       7: dup
       8: aload_1
       9: invokespecial #9                  // Method org/aspectj/runtime/CFlow."<init>":(Ljava/lang/Object;)V
      12: invokevirtual #7                  // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return

  public void push(java.lang.Object[]);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method getThreadStack:()Ljava/util/Stack;
       4: new           #10                 // class org/aspectj/runtime/internal/CFlowPlusState
       7: dup
       8: aload_1
       9: invokespecial #11                 // Method org/aspectj/runtime/internal/CFlowPlusState."<init>":([Ljava/lang/Object;)V
      12: invokevirtual #7                  // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return

  public void pop();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method getThreadStack:()Ljava/util/Stack;
       4: astore_1
       5: aload_1
       6: invokevirtual #12                 // Method java/util/Stack.pop:()Ljava/lang/Object;
       9: pop
      10: aload_1
      11: invokevirtual #13                 // Method java/util/Stack.isEmpty:()Z
      14: ifeq          26
      17: aload_0
      18: getfield      #4                  // Field stackProxy:Lorg/aspectj/runtime/internal/cflowstack/ThreadStack;
      21: invokeinterface #14,  1           // InterfaceMethod org/aspectj/runtime/internal/cflowstack/ThreadStack.removeThreadStack:()V
      26: return

  public java.lang.Object peek();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method getThreadStack:()Ljava/util/Stack;
       4: astore_1
       5: aload_1
       6: invokevirtual #13                 // Method java/util/Stack.isEmpty:()Z
       9: ifeq          20
      12: new           #15                 // class org/aspectj/lang/NoAspectBoundException
      15: dup
      16: invokespecial #16                 // Method org/aspectj/lang/NoAspectBoundException."<init>":()V
      19: athrow
      20: aload_1
      21: invokevirtual #17                 // Method java/util/Stack.peek:()Ljava/lang/Object;
      24: areturn

  public java.lang.Object get(int);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method peekCFlow:()Lorg/aspectj/runtime/CFlow;
       4: astore_2
       5: aconst_null
       6: aload_2
       7: if_acmpne     14
      10: aconst_null
      11: goto          19
      14: aload_2
      15: iload_1
      16: invokevirtual #19                 // Method org/aspectj/runtime/CFlow.get:(I)Ljava/lang/Object;
      19: areturn

  public java.lang.Object peekInstance();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method peekCFlow:()Lorg/aspectj/runtime/CFlow;
       4: astore_1
       5: aload_1
       6: ifnull        14
       9: aload_1
      10: invokevirtual #20                 // Method org/aspectj/runtime/CFlow.getAspect:()Ljava/lang/Object;
      13: areturn
      14: new           #15                 // class org/aspectj/lang/NoAspectBoundException
      17: dup
      18: invokespecial #16                 // Method org/aspectj/lang/NoAspectBoundException."<init>":()V
      21: athrow

  public org.aspectj.runtime.CFlow peekCFlow();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method getThreadStack:()Ljava/util/Stack;
       4: astore_1
       5: aload_1
       6: invokevirtual #13                 // Method java/util/Stack.isEmpty:()Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_1
      15: invokevirtual #17                 // Method java/util/Stack.peek:()Ljava/lang/Object;
      18: checkcast     #8                  // class org/aspectj/runtime/CFlow
      21: areturn

  public org.aspectj.runtime.CFlow peekTopCFlow();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method getThreadStack:()Ljava/util/Stack;
       4: astore_1
       5: aload_1
       6: invokevirtual #13                 // Method java/util/Stack.isEmpty:()Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_1
      15: iconst_0
      16: invokevirtual #21                 // Method java/util/Stack.elementAt:(I)Ljava/lang/Object;
      19: checkcast     #8                  // class org/aspectj/runtime/CFlow
      22: areturn

  public boolean isValid();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method getThreadStack:()Ljava/util/Stack;
       4: invokevirtual #13                 // Method java/util/Stack.isEmpty:()Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private static org.aspectj.runtime.internal.cflowstack.ThreadStackFactory getThreadLocalStackFactory();
    Code:
       0: new           #22                 // class org/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl
       3: dup
       4: invokespecial #23                 // Method org/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl."<init>":()V
       7: areturn

  private static org.aspectj.runtime.internal.cflowstack.ThreadStackFactory getThreadLocalStackFactoryFor11();
    Code:
       0: new           #24                 // class org/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl11
       3: dup
       4: invokespecial #25                 // Method org/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl11."<init>":()V
       7: areturn

  private static void selectFactoryForVMVersion();
    Code:
       0: ldc           #26                 // String aspectj.runtime.cflowstack.usethreadlocal
       2: ldc           #27                 // String unspecified
       4: invokestatic  #28                 // Method getSystemPropertyWithoutSecurityException:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: astore_0
       8: iconst_0
       9: istore_1
      10: aload_0
      11: ldc           #27                 // String unspecified
      13: invokevirtual #29                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifeq          45
      19: ldc           #30                 // String java.class.version
      21: ldc           #31                 // String 0.0
      23: invokestatic  #32                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      26: astore_2
      27: aload_2
      28: ldc           #33                 // String 46.0
      30: invokevirtual #34                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      33: iflt          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: istore_1
      42: goto          69
      45: aload_0
      46: ldc           #35                 // String yes
      48: invokevirtual #29                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      51: ifne          63
      54: aload_0
      55: ldc           #36                 // String true
      57: invokevirtual #29                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: istore_1
      69: iload_1
      70: ifeq          82
      73: invokestatic  #37                 // Method getThreadLocalStackFactory:()Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactory;
      76: putstatic     #2                  // Field tsFactory:Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactory;
      79: goto          88
      82: invokestatic  #38                 // Method getThreadLocalStackFactoryFor11:()Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactory;
      85: putstatic     #2                  // Field tsFactory:Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactory;
      88: return

  private static java.lang.String getSystemPropertyWithoutSecurityException(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #32                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       5: areturn
       6: astore_2
       7: aload_1
       8: areturn
    Exception table:
       from    to  target type
           0     5     6   Class java/lang/SecurityException

  public static java.lang.String getThreadStackFactoryClassName();
    Code:
       0: getstatic     #2                  // Field tsFactory:Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactory;
       3: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;
       9: areturn

  static {};
    Code:
       0: invokestatic  #42                 // Method selectFactoryForVMVersion:()V
       3: return
}
