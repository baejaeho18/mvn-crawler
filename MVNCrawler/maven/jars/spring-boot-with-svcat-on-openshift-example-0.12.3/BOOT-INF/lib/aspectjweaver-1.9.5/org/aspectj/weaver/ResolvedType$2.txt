Compiled from "ResolvedType.java"
class org.aspectj.weaver.ResolvedType$2 implements org.aspectj.weaver.Iterators$Getter<org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedType> {
  java.util.List<java.lang.String> alreadySeen;

  final boolean val$wantDeclaredParents;

  final boolean val$wantGenerics;

  final org.aspectj.weaver.ResolvedType this$0;

  org.aspectj.weaver.ResolvedType$2(org.aspectj.weaver.ResolvedType, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/aspectj/weaver/ResolvedType;
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field val$wantDeclaredParents:Z
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field val$wantGenerics:Z
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: aload_0
      20: new           #5                  // class java/util/ArrayList
      23: dup
      24: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      27: putfield      #7                  // Field alreadySeen:Ljava/util/List;
      30: return

  public java.util.Iterator<org.aspectj.weaver.ResolvedType> get(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method org/aspectj/weaver/ResolvedType.getDeclaredInterfaces:()[Lorg/aspectj/weaver/ResolvedType;
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field val$wantDeclaredParents:Z
       9: ifne          264
      12: aload_1
      13: invokestatic  #9                  // Method org/aspectj/weaver/ResolvedType.access$400:(Lorg/aspectj/weaver/ResolvedType;)Z
      16: ifeq          264
      19: new           #5                  // class java/util/ArrayList
      22: dup
      23: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      26: astore_3
      27: aload_1
      28: getfield      #10                 // Field org/aspectj/weaver/ResolvedType.interTypeMungers:Ljava/util/List;
      31: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      36: astore        4
      38: aload         4
      40: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          193
      48: aload         4
      50: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #14                 // class org/aspectj/weaver/ConcreteTypeMunger
      58: astore        5
      60: aload         5
      62: invokevirtual #15                 // Method org/aspectj/weaver/ConcreteTypeMunger.getMunger:()Lorg/aspectj/weaver/ResolvedTypeMunger;
      65: ifnull        190
      68: aload         5
      70: invokevirtual #15                 // Method org/aspectj/weaver/ConcreteTypeMunger.getMunger:()Lorg/aspectj/weaver/ResolvedTypeMunger;
      73: astore        6
      75: aload         6
      77: invokevirtual #16                 // Method org/aspectj/weaver/ResolvedTypeMunger.getKind:()Lorg/aspectj/weaver/ResolvedTypeMunger$Kind;
      80: getstatic     #17                 // Field org/aspectj/weaver/ResolvedTypeMunger.Parent:Lorg/aspectj/weaver/ResolvedTypeMunger$Kind;
      83: if_acmpne     190
      86: aload         6
      88: checkcast     #18                 // class org/aspectj/weaver/NewParentTypeMunger
      91: invokevirtual #19                 // Method org/aspectj/weaver/NewParentTypeMunger.getNewParent:()Lorg/aspectj/weaver/ResolvedType;
      94: astore        7
      96: aload_0
      97: getfield      #3                  // Field val$wantGenerics:Z
     100: ifne          118
     103: aload         7
     105: invokevirtual #20                 // Method org/aspectj/weaver/ResolvedType.isParameterizedOrGenericType:()Z
     108: ifeq          118
     111: aload         7
     113: invokevirtual #21                 // Method org/aspectj/weaver/ResolvedType.getRawType:()Lorg/aspectj/weaver/ResolvedType;
     116: astore        7
     118: iconst_0
     119: istore        8
     121: iload         8
     123: aload_2
     124: arraylength
     125: if_icmpge     190
     128: aload_2
     129: iload         8
     131: aaload
     132: astore        9
     134: aload_0
     135: getfield      #3                  // Field val$wantGenerics:Z
     138: ifne          156
     141: aload         9
     143: invokevirtual #20                 // Method org/aspectj/weaver/ResolvedType.isParameterizedOrGenericType:()Z
     146: ifeq          156
     149: aload         9
     151: invokevirtual #21                 // Method org/aspectj/weaver/ResolvedType.getRawType:()Lorg/aspectj/weaver/ResolvedType;
     154: astore        9
     156: aload         7
     158: invokevirtual #22                 // Method org/aspectj/weaver/ResolvedType.getSignature:()Ljava/lang/String;
     161: aload         9
     163: invokevirtual #22                 // Method org/aspectj/weaver/ResolvedType.getSignature:()Ljava/lang/String;
     166: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     169: ifeq          184
     172: aload_3
     173: iload         8
     175: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     178: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     183: pop
     184: iinc          8, 1
     187: goto          121
     190: goto          38
     193: aload_3
     194: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I
     199: ifle          264
     202: aload_2
     203: arraylength
     204: aload_3
     205: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I
     210: isub
     211: anewarray     #27                 // class org/aspectj/weaver/ResolvedType
     214: astore        4
     216: iconst_0
     217: istore        5
     219: iconst_0
     220: istore        6
     222: iload         6
     224: aload_2
     225: arraylength
     226: if_icmpge     261
     229: aload_3
     230: iload         6
     232: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     235: invokeinterface #28,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     240: ifne          255
     243: aload         4
     245: iload         5
     247: iinc          5, 1
     250: aload_2
     251: iload         6
     253: aaload
     254: aastore
     255: iinc          6, 1
     258: goto          222
     261: aload         4
     263: astore_2
     264: new           #29                 // class org/aspectj/weaver/Iterators$ResolvedTypeArrayIterator
     267: dup
     268: aload_2
     269: aload_0
     270: getfield      #7                  // Field alreadySeen:Ljava/util/List;
     273: aload_0
     274: getfield      #3                  // Field val$wantGenerics:Z
     277: invokespecial #30                 // Method org/aspectj/weaver/Iterators$ResolvedTypeArrayIterator."<init>":([Lorg/aspectj/weaver/ResolvedType;Ljava/util/List;Z)V
     280: areturn

  public java.util.Iterator get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class org/aspectj/weaver/ResolvedType
       5: invokevirtual #31                 // Method get:(Lorg/aspectj/weaver/ResolvedType;)Ljava/util/Iterator;
       8: areturn
}
