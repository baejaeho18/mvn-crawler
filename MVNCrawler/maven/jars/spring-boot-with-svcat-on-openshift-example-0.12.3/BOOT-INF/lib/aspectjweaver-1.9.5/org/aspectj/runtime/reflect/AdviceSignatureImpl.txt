Compiled from "AdviceSignatureImpl.java"
class org.aspectj.runtime.reflect.AdviceSignatureImpl extends org.aspectj.runtime.reflect.CodeSignatureImpl implements org.aspectj.lang.reflect.AdviceSignature {
  java.lang.Class returnType;

  private java.lang.reflect.Method adviceMethod;

  org.aspectj.runtime.reflect.AdviceSignatureImpl(int, java.lang.String, java.lang.Class, java.lang.Class[], java.lang.String[], java.lang.Class[], java.lang.Class);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokespecial #1                  // Method org/aspectj/runtime/reflect/CodeSignatureImpl."<init>":(ILjava/lang/String;Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;)V
      13: aload_0
      14: aconst_null
      15: putfield      #2                  // Field adviceMethod:Ljava/lang/reflect/Method;
      18: aload_0
      19: aload         7
      21: putfield      #3                  // Field returnType:Ljava/lang/Class;
      24: return

  org.aspectj.runtime.reflect.AdviceSignatureImpl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/aspectj/runtime/reflect/CodeSignatureImpl."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: aconst_null
       7: putfield      #2                  // Field adviceMethod:Ljava/lang/reflect/Method;
      10: return

  public java.lang.Class getReturnType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field returnType:Ljava/lang/Class;
       4: ifnonnull     17
       7: aload_0
       8: aload_0
       9: bipush        6
      11: invokevirtual #5                  // Method extractType:(I)Ljava/lang/Class;
      14: putfield      #3                  // Field returnType:Ljava/lang/Class;
      17: aload_0
      18: getfield      #3                  // Field returnType:Ljava/lang/Class;
      21: areturn

  protected java.lang.String createToString(org.aspectj.runtime.reflect.StringMaker);
    Code:
       0: new           #6                  // class java/lang/StringBuffer
       3: dup
       4: invokespecial #7                  // Method java/lang/StringBuffer."<init>":()V
       7: astore_2
       8: aload_1
       9: getfield      #8                  // Field org/aspectj/runtime/reflect/StringMaker.includeArgs:Z
      12: ifeq          28
      15: aload_2
      16: aload_1
      17: aload_0
      18: invokevirtual #9                  // Method getReturnType:()Ljava/lang/Class;
      21: invokevirtual #10                 // Method org/aspectj/runtime/reflect/StringMaker.makeTypeName:(Ljava/lang/Class;)Ljava/lang/String;
      24: invokevirtual #11                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      27: pop
      28: aload_1
      29: getfield      #8                  // Field org/aspectj/runtime/reflect/StringMaker.includeArgs:Z
      32: ifeq          42
      35: aload_2
      36: ldc           #12                 // String
      38: invokevirtual #11                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      41: pop
      42: aload_2
      43: aload_1
      44: aload_0
      45: invokevirtual #13                 // Method getDeclaringType:()Ljava/lang/Class;
      48: aload_0
      49: invokevirtual #14                 // Method getDeclaringTypeName:()Ljava/lang/String;
      52: invokevirtual #15                 // Method org/aspectj/runtime/reflect/StringMaker.makePrimaryTypeName:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;
      55: invokevirtual #11                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      58: pop
      59: aload_2
      60: ldc           #16                 // String .
      62: invokevirtual #11                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      65: pop
      66: aload_2
      67: aload_0
      68: aload_0
      69: invokevirtual #17                 // Method getName:()Ljava/lang/String;
      72: invokespecial #18                 // Method toAdviceName:(Ljava/lang/String;)Ljava/lang/String;
      75: invokevirtual #11                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      78: pop
      79: aload_1
      80: aload_2
      81: aload_0
      82: invokevirtual #19                 // Method getParameterTypes:()[Ljava/lang/Class;
      85: invokevirtual #20                 // Method org/aspectj/runtime/reflect/StringMaker.addSignature:(Ljava/lang/StringBuffer;[Ljava/lang/Class;)V
      88: aload_1
      89: aload_2
      90: aload_0
      91: invokevirtual #21                 // Method getExceptionTypes:()[Ljava/lang/Class;
      94: invokevirtual #22                 // Method org/aspectj/runtime/reflect/StringMaker.addThrows:(Ljava/lang/StringBuffer;[Ljava/lang/Class;)V
      97: aload_2
      98: invokevirtual #23                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     101: areturn

  private java.lang.String toAdviceName(java.lang.String);
    Code:
       0: aload_1
       1: bipush        36
       3: invokevirtual #24                 // Method java/lang/String.indexOf:(I)I
       6: iconst_m1
       7: if_icmpne     12
      10: aload_1
      11: areturn
      12: new           #25                 // class java/util/StringTokenizer
      15: dup
      16: aload_1
      17: ldc           #26                 // String $
      19: invokespecial #27                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #28                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      27: ifeq          67
      30: aload_2
      31: invokevirtual #29                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      34: astore_3
      35: aload_3
      36: ldc           #30                 // String before
      38: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      41: ifne          62
      44: aload_3
      45: ldc           #32                 // String after
      47: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      50: ifne          62
      53: aload_3
      54: ldc           #33                 // String around
      56: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      59: ifeq          64
      62: aload_3
      63: areturn
      64: goto          23
      67: aload_1
      68: areturn

  public java.lang.reflect.Method getAdvice();
    Code:
       0: aload_0
       1: getfield      #2                  // Field adviceMethod:Ljava/lang/reflect/Method;
       4: ifnonnull     30
       7: aload_0
       8: aload_0
       9: invokevirtual #13                 // Method getDeclaringType:()Ljava/lang/Class;
      12: aload_0
      13: invokevirtual #17                 // Method getName:()Ljava/lang/String;
      16: aload_0
      17: invokevirtual #19                 // Method getParameterTypes:()[Ljava/lang/Class;
      20: invokevirtual #34                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      23: putfield      #2                  // Field adviceMethod:Ljava/lang/reflect/Method;
      26: goto          30
      29: astore_1
      30: aload_0
      31: getfield      #2                  // Field adviceMethod:Ljava/lang/reflect/Method;
      34: areturn
    Exception table:
       from    to  target type
           7    26    29   Class java/lang/Exception
}
