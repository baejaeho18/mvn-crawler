Compiled from "Module.java"
public class org.aspectj.apache.bcel.classfile.Module$Require {
  private final int moduleIndex;

  private final int flags;

  private final int versionIndex;

  final org.aspectj.apache.bcel.classfile.Module this$0;

  public org.aspectj.apache.bcel.classfile.Module$Require(org.aspectj.apache.bcel.classfile.Module, int, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field this$0:Lorg/aspectj/apache/bcel/classfile/Module;
       5: aload_0
       6: invokespecial #5                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field moduleIndex:I
      14: aload_0
      15: iload_3
      16: putfield      #2                  // Field flags:I
      19: aload_0
      20: iload         4
      22: putfield      #1                  // Field versionIndex:I
      25: return

  public java.lang.String getModuleName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field this$0:Lorg/aspectj/apache/bcel/classfile/Module;
       4: getfield      #6                  // Field org/aspectj/apache/bcel/classfile/Module.cpool:Lorg/aspectj/apache/bcel/classfile/ConstantPool;
       7: aload_0
       8: getfield      #3                  // Field moduleIndex:I
      11: invokevirtual #7                  // Method org/aspectj/apache/bcel/classfile/ConstantPool.getModuleName:(I)Ljava/lang/String;
      14: areturn

  public int getFlags();
    Code:
       0: aload_0
       1: getfield      #2                  // Field flags:I
       4: ireturn

  public int getVersionIndex();
    Code:
       0: aload_0
       1: getfield      #1                  // Field versionIndex:I
       4: ireturn

  public java.lang.String getVersionString();
    Code:
       0: aload_0
       1: getfield      #1                  // Field versionIndex:I
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #4                  // Field this$0:Lorg/aspectj/apache/bcel/classfile/Module;
      13: getfield      #6                  // Field org/aspectj/apache/bcel/classfile/Module.cpool:Lorg/aspectj/apache/bcel/classfile/ConstantPool;
      16: aload_0
      17: getfield      #1                  // Field versionIndex:I
      20: invokevirtual #8                  // Method org/aspectj/apache/bcel/classfile/ConstantPool.getConstantUtf8:(I)Lorg/aspectj/apache/bcel/classfile/ConstantUtf8;
      23: invokevirtual #9                  // Method org/aspectj/apache/bcel/classfile/ConstantUtf8.getValue:()Ljava/lang/String;
      26: areturn

  public java.lang.String getFlagsAsString();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #2                  // Field flags:I
      12: bipush        32
      14: iand
      15: ifeq          25
      18: aload_1
      19: ldc           #13                 // String  transitive
      21: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: pop
      25: aload_0
      26: getfield      #2                  // Field flags:I
      29: bipush        64
      31: iand
      32: ifeq          42
      35: aload_1
      36: ldc           #15                 // String  static
      38: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: pop
      42: aload_0
      43: getfield      #2                  // Field flags:I
      46: sipush        4096
      49: iand
      50: ifeq          60
      53: aload_1
      54: ldc           #16                 // String  synthetic
      56: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: aload_0
      61: getfield      #2                  // Field flags:I
      64: ldc           #17                 // int 32768
      66: iand
      67: ifeq          77
      70: aload_1
      71: ldc           #18                 // String  mandated
      73: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: pop
      77: aload_1
      78: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: areturn

  public java.lang.String toString();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #20                 // String requires
       9: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #21                 // Method getFlagsAsString:()Ljava/lang/String;
      16: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #22                 // String
      21: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #23                 // Method getModuleName:()Ljava/lang/String;
      28: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #1                  // Field versionIndex:I
      35: ifne          43
      38: ldc           #24                 // String
      40: goto          65
      43: new           #10                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #22                 // String
      52: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_0
      56: invokevirtual #25                 // Method getVersionString:()Ljava/lang/String;
      59: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: areturn

  static int access$100(org.aspectj.apache.bcel.classfile.Module$Require);
    Code:
       0: aload_0
       1: getfield      #3                  // Field moduleIndex:I
       4: ireturn

  static int access$200(org.aspectj.apache.bcel.classfile.Module$Require);
    Code:
       0: aload_0
       1: getfield      #2                  // Field flags:I
       4: ireturn

  static int access$300(org.aspectj.apache.bcel.classfile.Module$Require);
    Code:
       0: aload_0
       1: getfield      #1                  // Field versionIndex:I
       4: ireturn
}
