Compiled from "WildChildFinder.java"
public class org.aspectj.weaver.patterns.WildChildFinder extends org.aspectj.weaver.patterns.AbstractPatternNodeVisitor {
  private boolean wildChild;

  public org.aspectj.weaver.patterns.WildChildFinder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/AbstractPatternNodeVisitor."<init>":()V
       4: return

  public boolean containedWildChild();
    Code:
       0: aload_0
       1: getfield      #2                  // Field wildChild:Z
       4: ireturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.WildAnnotationTypePattern, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method org/aspectj/weaver/patterns/WildAnnotationTypePattern.getTypePattern:()Lorg/aspectj/weaver/patterns/TypePattern;
       4: aload_0
       5: aload_2
       6: invokevirtual #4                  // Method org/aspectj/weaver/patterns/TypePattern.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: areturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.WildTypePattern, java.lang.Object);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field wildChild:Z
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #5                  // Method org/aspectj/weaver/patterns/AbstractPatternNodeVisitor.visit:(Lorg/aspectj/weaver/patterns/WildTypePattern;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.AndTypePattern, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method org/aspectj/weaver/patterns/AndTypePattern.getLeft:()Lorg/aspectj/weaver/patterns/TypePattern;
       4: aload_0
       5: aload_2
       6: invokevirtual #4                  // Method org/aspectj/weaver/patterns/TypePattern.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #2                  // Field wildChild:Z
      14: ifne          27
      17: aload_1
      18: invokevirtual #7                  // Method org/aspectj/weaver/patterns/AndTypePattern.getRight:()Lorg/aspectj/weaver/patterns/TypePattern;
      21: aload_0
      22: aload_2
      23: invokevirtual #4                  // Method org/aspectj/weaver/patterns/TypePattern.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: aload_1
      28: areturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.OrTypePattern, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method org/aspectj/weaver/patterns/OrTypePattern.getLeft:()Lorg/aspectj/weaver/patterns/TypePattern;
       4: aload_0
       5: aload_2
       6: invokevirtual #4                  // Method org/aspectj/weaver/patterns/TypePattern.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #2                  // Field wildChild:Z
      14: ifne          27
      17: aload_1
      18: invokevirtual #9                  // Method org/aspectj/weaver/patterns/OrTypePattern.getRight:()Lorg/aspectj/weaver/patterns/TypePattern;
      21: aload_0
      22: aload_2
      23: invokevirtual #4                  // Method org/aspectj/weaver/patterns/TypePattern.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: aload_1
      28: areturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.NotTypePattern, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method org/aspectj/weaver/patterns/NotTypePattern.getNegatedPattern:()Lorg/aspectj/weaver/patterns/TypePattern;
       4: aload_0
       5: aload_2
       6: invokevirtual #4                  // Method org/aspectj/weaver/patterns/TypePattern.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: areturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method org/aspectj/weaver/patterns/AnyWithAnnotationTypePattern.getAnnotationPattern:()Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       4: aload_0
       5: aload_2
       6: invokevirtual #12                 // Method org/aspectj/weaver/patterns/AnnotationTypePattern.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: areturn
}
