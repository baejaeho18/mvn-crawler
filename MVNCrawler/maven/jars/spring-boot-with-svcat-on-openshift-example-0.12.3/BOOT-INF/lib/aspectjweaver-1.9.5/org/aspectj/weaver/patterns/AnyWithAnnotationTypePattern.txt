Compiled from "AnyWithAnnotationTypePattern.java"
public class org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern extends org.aspectj.weaver.patterns.TypePattern {
  public org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern(org.aspectj.weaver.patterns.AnnotationTypePattern);
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_0
       3: invokespecial #1                  // Method org/aspectj/weaver/patterns/TypePattern."<init>":(ZZ)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      11: return

  public java.lang.Object accept(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #3,  3            // InterfaceMethod org/aspectj/weaver/patterns/PatternNodeVisitor.visit:(Lorg/aspectj/weaver/patterns/AnyWithAnnotationTypePattern;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  protected boolean couldEverMatchSameTypesAs(org.aspectj.weaver.patterns.TypePattern);
    Code:
       0: iconst_1
       1: ireturn

  protected boolean matchesExactly(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       4: aload_1
       5: invokevirtual #4                  // Method org/aspectj/weaver/ResolvedType.getWorld:()Lorg/aspectj/weaver/World;
       8: invokevirtual #5                  // Method org/aspectj/weaver/patterns/AnnotationTypePattern.resolve:(Lorg/aspectj/weaver/World;)V
      11: iconst_0
      12: istore_2
      13: aload_1
      14: getfield      #6                  // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
      17: ifnull        39
      20: aload_0
      21: getfield      #2                  // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      24: aload_1
      25: aload_1
      26: getfield      #6                  // Field org/aspectj/weaver/ResolvedType.temporaryAnnotationTypes:[Lorg/aspectj/weaver/ResolvedType;
      29: invokevirtual #7                  // Method org/aspectj/weaver/patterns/AnnotationTypePattern.matches:(Lorg/aspectj/weaver/AnnotatedElement;[Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/util/FuzzyBoolean;
      32: invokevirtual #8                  // Method org/aspectj/util/FuzzyBoolean.alwaysTrue:()Z
      35: istore_2
      36: goto          51
      39: aload_0
      40: getfield      #2                  // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      43: aload_1
      44: invokevirtual #9                  // Method org/aspectj/weaver/patterns/AnnotationTypePattern.matches:(Lorg/aspectj/weaver/AnnotatedElement;)Lorg/aspectj/util/FuzzyBoolean;
      47: invokevirtual #8                  // Method org/aspectj/util/FuzzyBoolean.alwaysTrue:()Z
      50: istore_2
      51: iload_2
      52: ireturn

  public org.aspectj.weaver.patterns.TypePattern resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings, boolean, boolean);
    Code:
       0: iload         4
       2: ifeq          36
       5: aload_1
       6: invokeinterface #10,  1           // InterfaceMethod org/aspectj/weaver/patterns/IScope.getWorld:()Lorg/aspectj/weaver/World;
      11: invokevirtual #11                 // Method org/aspectj/weaver/World.getMessageHandler:()Lorg/aspectj/bridge/IMessageHandler;
      14: ldc           #13                 // String wildcardTypePatternNotAllowed
      16: invokestatic  #14                 // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;)Ljava/lang/String;
      19: aload_0
      20: invokevirtual #15                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
      23: invokestatic  #16                 // Method org/aspectj/bridge/MessageUtil.error:(Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;)Lorg/aspectj/bridge/IMessage;
      26: invokeinterface #17,  2           // InterfaceMethod org/aspectj/bridge/IMessageHandler.handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
      31: pop
      32: getstatic     #18                 // Field NO:Lorg/aspectj/weaver/patterns/TypePattern;
      35: areturn
      36: aload_0
      37: aload_1
      38: aload_2
      39: iload_3
      40: iload         4
      42: invokespecial #19                 // Method org/aspectj/weaver/patterns/TypePattern.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;ZZ)Lorg/aspectj/weaver/patterns/TypePattern;
      45: areturn

  protected boolean matchesExactly(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       4: aload_1
       5: invokevirtual #4                  // Method org/aspectj/weaver/ResolvedType.getWorld:()Lorg/aspectj/weaver/World;
       8: invokevirtual #5                  // Method org/aspectj/weaver/patterns/AnnotationTypePattern.resolve:(Lorg/aspectj/weaver/World;)V
      11: aload_0
      12: getfield      #2                  // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      15: aload_2
      16: invokevirtual #9                  // Method org/aspectj/weaver/patterns/AnnotationTypePattern.matches:(Lorg/aspectj/weaver/AnnotatedElement;)Lorg/aspectj/util/FuzzyBoolean;
      19: invokevirtual #8                  // Method org/aspectj/util/FuzzyBoolean.alwaysTrue:()Z
      22: ireturn

  public org.aspectj.util.FuzzyBoolean matchesInstanceof(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method org/aspectj/weaver/ResolvedType.getModifiers:()I
       4: invokestatic  #21                 // Method java/lang/reflect/Modifier.isFinal:(I)Z
       7: ifeq          19
      10: aload_0
      11: aload_1
      12: invokevirtual #22                 // Method matchesExactly:(Lorg/aspectj/weaver/ResolvedType;)Z
      15: invokestatic  #23                 // Method org/aspectj/util/FuzzyBoolean.fromBoolean:(Z)Lorg/aspectj/util/FuzzyBoolean;
      18: areturn
      19: getstatic     #24                 // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
      22: areturn

  public org.aspectj.weaver.patterns.TypePattern parameterizeWith(java.util.Map<java.lang.String, org.aspectj.weaver.UnresolvedType>, org.aspectj.weaver.World);
    Code:
       0: new           #25                 // class org/aspectj/weaver/patterns/AnyWithAnnotationTypePattern
       3: dup
       4: aload_0
       5: getfield      #2                  // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       8: aload_1
       9: aload_2
      10: invokevirtual #26                 // Method org/aspectj/weaver/patterns/AnnotationTypePattern.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      13: invokespecial #27                 // Method "<init>":(Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)V
      16: astore_3
      17: aload_3
      18: aload_0
      19: invokevirtual #28                 // Method copyLocationFrom:(Lorg/aspectj/weaver/patterns/PatternNode;)V
      22: aload_3
      23: areturn

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: bipush        10
       3: invokevirtual #30                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeByte:(I)V
       6: aload_0
       7: getfield      #2                  // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      10: aload_1
      11: invokevirtual #31                 // Method org/aspectj/weaver/patterns/AnnotationTypePattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      14: aload_0
      15: aload_1
      16: invokevirtual #32                 // Method writeLocation:(Ljava/io/DataOutputStream;)V
      19: return

  public static org.aspectj.weaver.patterns.TypePattern read(org.aspectj.weaver.VersionedDataInputStream, org.aspectj.weaver.ISourceContext) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #33                 // Method org/aspectj/weaver/patterns/AnnotationTypePattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       5: astore_2
       6: new           #25                 // class org/aspectj/weaver/patterns/AnyWithAnnotationTypePattern
       9: dup
      10: aload_2
      11: invokespecial #27                 // Method "<init>":(Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)V
      14: astore_3
      15: aload_3
      16: aload_1
      17: aload_0
      18: invokevirtual #34                 // Method readLocation:(Lorg/aspectj/weaver/ISourceContext;Ljava/io/DataInputStream;)V
      21: aload_3
      22: areturn

  protected boolean matchesSubtypes(org.aspectj.weaver.ResolvedType);
    Code:
       0: iconst_1
       1: ireturn

  public boolean isStar();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String toString();
    Code:
       0: new           #35                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #37                 // String (
       9: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      16: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #40                 // String  *)
      21: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public org.aspectj.weaver.patterns.AnnotationTypePattern getAnnotationTypePattern();
    Code:
       0: aload_0
       1: getfield      #2                  // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #25                 // class org/aspectj/weaver/patterns/AnyWithAnnotationTypePattern
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #25                 // class org/aspectj/weaver/patterns/AnyWithAnnotationTypePattern
      13: astore_2
      14: aload_0
      15: getfield      #2                  // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      18: aload_2
      19: getfield      #2                  // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      22: invokevirtual #42                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      25: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       4: invokevirtual #43                 // Method java/lang/Object.hashCode:()I
       7: ireturn
}
