Compiled from "ExceptionRange.java"
public final class org.aspectj.weaver.bcel.ExceptionRange extends org.aspectj.weaver.bcel.Range {
  private org.aspectj.apache.bcel.generic.InstructionHandle handler;

  private final org.aspectj.weaver.UnresolvedType exceptionType;

  private final int priority;

  private volatile int hashCode;

  public org.aspectj.weaver.bcel.ExceptionRange(org.aspectj.apache.bcel.generic.InstructionList, org.aspectj.weaver.UnresolvedType, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/aspectj/weaver/bcel/Range."<init>":(Lorg/aspectj/apache/bcel/generic/InstructionList;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field hashCode:I
      10: aload_0
      11: aload_2
      12: putfield      #3                  // Field exceptionType:Lorg/aspectj/weaver/UnresolvedType;
      15: aload_0
      16: iload_3
      17: putfield      #4                  // Field priority:I
      20: return

  public org.aspectj.weaver.bcel.ExceptionRange(org.aspectj.apache.bcel.generic.InstructionList, org.aspectj.weaver.UnresolvedType, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: ifeq          12
       7: ldc           #6                  // int 2147483647
       9: goto          13
      12: iconst_m1
      13: invokespecial #7                  // Method "<init>":(Lorg/aspectj/apache/bcel/generic/InstructionList;Lorg/aspectj/weaver/UnresolvedType;I)V
      16: return

  public void associateWithTargets(org.aspectj.apache.bcel.generic.InstructionHandle, org.aspectj.apache.bcel.generic.InstructionHandle, org.aspectj.apache.bcel.generic.InstructionHandle);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field start:Lorg/aspectj/apache/bcel/generic/InstructionHandle;
       5: aload_0
       6: aload_2
       7: putfield      #9                  // Field end:Lorg/aspectj/apache/bcel/generic/InstructionHandle;
      10: aload_0
      11: aload_3
      12: putfield      #10                 // Field handler:Lorg/aspectj/apache/bcel/generic/InstructionHandle;
      15: aload_1
      16: aload_0
      17: invokevirtual #11                 // Method org/aspectj/apache/bcel/generic/InstructionHandle.addTargeter:(Lorg/aspectj/apache/bcel/generic/InstructionTargeter;)V
      20: aload_2
      21: aload_0
      22: invokevirtual #11                 // Method org/aspectj/apache/bcel/generic/InstructionHandle.addTargeter:(Lorg/aspectj/apache/bcel/generic/InstructionTargeter;)V
      25: aload_3
      26: aload_0
      27: invokevirtual #11                 // Method org/aspectj/apache/bcel/generic/InstructionHandle.addTargeter:(Lorg/aspectj/apache/bcel/generic/InstructionTargeter;)V
      30: return

  public org.aspectj.apache.bcel.generic.InstructionHandle getHandler();
    Code:
       0: aload_0
       1: getfield      #10                 // Field handler:Lorg/aspectj/apache/bcel/generic/InstructionHandle;
       4: areturn

  public org.aspectj.weaver.UnresolvedType getCatchType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field exceptionType:Lorg/aspectj/weaver/UnresolvedType;
       4: areturn

  public int getPriority();
    Code:
       0: aload_0
       1: getfield      #4                  // Field priority:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #3                  // Field exceptionType:Lorg/aspectj/weaver/UnresolvedType;
       4: ifnonnull     13
       7: ldc           #12                 // String finally
       9: astore_1
      10: goto          36
      13: new           #13                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #15                 // String catch
      22: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: getfield      #3                  // Field exceptionType:Lorg/aspectj/weaver/UnresolvedType;
      29: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: astore_1
      36: aload_1
      37: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #19                 // class org/aspectj/weaver/bcel/ExceptionRange
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #19                 // class org/aspectj/weaver/bcel/ExceptionRange
      13: astore_2
      14: aload_2
      15: invokevirtual #20                 // Method getStart:()Lorg/aspectj/apache/bcel/generic/InstructionHandle;
      18: aload_0
      19: invokevirtual #20                 // Method getStart:()Lorg/aspectj/apache/bcel/generic/InstructionHandle;
      22: if_acmpne     93
      25: aload_2
      26: invokevirtual #21                 // Method getEnd:()Lorg/aspectj/apache/bcel/generic/InstructionHandle;
      29: aload_0
      30: invokevirtual #21                 // Method getEnd:()Lorg/aspectj/apache/bcel/generic/InstructionHandle;
      33: if_acmpne     93
      36: aload_2
      37: getfield      #10                 // Field handler:Lorg/aspectj/apache/bcel/generic/InstructionHandle;
      40: aload_0
      41: getfield      #10                 // Field handler:Lorg/aspectj/apache/bcel/generic/InstructionHandle;
      44: if_acmpne     93
      47: aload_2
      48: getfield      #3                  // Field exceptionType:Lorg/aspectj/weaver/UnresolvedType;
      51: ifnonnull     64
      54: aload_0
      55: getfield      #3                  // Field exceptionType:Lorg/aspectj/weaver/UnresolvedType;
      58: ifnonnull     93
      61: goto          78
      64: aload_2
      65: getfield      #3                  // Field exceptionType:Lorg/aspectj/weaver/UnresolvedType;
      68: aload_0
      69: getfield      #3                  // Field exceptionType:Lorg/aspectj/weaver/UnresolvedType;
      72: invokevirtual #22                 // Method org/aspectj/weaver/UnresolvedType.equals:(Ljava/lang/Object;)Z
      75: ifeq          93
      78: aload_2
      79: getfield      #4                  // Field priority:I
      82: aload_0
      83: getfield      #4                  // Field priority:I
      86: if_icmpne     93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hashCode:I
       4: ifne          88
       7: bipush        17
       9: istore_1
      10: bipush        37
      12: iload_1
      13: imul
      14: aload_0
      15: invokevirtual #20                 // Method getStart:()Lorg/aspectj/apache/bcel/generic/InstructionHandle;
      18: invokevirtual #23                 // Method java/lang/Object.hashCode:()I
      21: iadd
      22: istore_1
      23: bipush        37
      25: iload_1
      26: imul
      27: aload_0
      28: invokevirtual #21                 // Method getEnd:()Lorg/aspectj/apache/bcel/generic/InstructionHandle;
      31: invokevirtual #23                 // Method java/lang/Object.hashCode:()I
      34: iadd
      35: istore_1
      36: bipush        37
      38: iload_1
      39: imul
      40: aload_0
      41: getfield      #10                 // Field handler:Lorg/aspectj/apache/bcel/generic/InstructionHandle;
      44: invokevirtual #23                 // Method java/lang/Object.hashCode:()I
      47: iadd
      48: istore_1
      49: bipush        37
      51: iload_1
      52: imul
      53: aload_0
      54: getfield      #3                  // Field exceptionType:Lorg/aspectj/weaver/UnresolvedType;
      57: ifnonnull     64
      60: iconst_0
      61: goto          71
      64: aload_0
      65: getfield      #3                  // Field exceptionType:Lorg/aspectj/weaver/UnresolvedType;
      68: invokevirtual #24                 // Method org/aspectj/weaver/UnresolvedType.hashCode:()I
      71: iadd
      72: istore_1
      73: bipush        37
      75: iload_1
      76: imul
      77: aload_0
      78: getfield      #4                  // Field priority:I
      81: iadd
      82: istore_1
      83: aload_0
      84: iload_1
      85: putfield      #2                  // Field hashCode:I
      88: aload_0
      89: getfield      #2                  // Field hashCode:I
      92: ireturn

  public void updateTarget(org.aspectj.apache.bcel.generic.InstructionHandle, org.aspectj.apache.bcel.generic.InstructionHandle, org.aspectj.apache.bcel.generic.InstructionList);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #25                 // Method org/aspectj/weaver/bcel/Range.updateTarget:(Lorg/aspectj/apache/bcel/generic/InstructionHandle;Lorg/aspectj/apache/bcel/generic/InstructionHandle;Lorg/aspectj/apache/bcel/generic/InstructionList;)V
       7: aload_1
       8: aload_0
       9: getfield      #10                 // Field handler:Lorg/aspectj/apache/bcel/generic/InstructionHandle;
      12: if_acmpne     20
      15: aload_0
      16: aload_2
      17: putfield      #10                 // Field handler:Lorg/aspectj/apache/bcel/generic/InstructionHandle;
      20: return

  public static boolean isExceptionStart(org.aspectj.apache.bcel.generic.InstructionHandle);
    Code:
       0: aload_0
       1: invokestatic  #26                 // Method isRangeHandle:(Lorg/aspectj/apache/bcel/generic/InstructionHandle;)Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokestatic  #27                 // Method getRange:(Lorg/aspectj/apache/bcel/generic/InstructionHandle;)Lorg/aspectj/weaver/bcel/Range;
      13: astore_1
      14: aload_1
      15: instanceof    #19                 // class org/aspectj/weaver/bcel/ExceptionRange
      18: ifne          23
      21: iconst_0
      22: ireturn
      23: aload_1
      24: checkcast     #19                 // class org/aspectj/weaver/bcel/ExceptionRange
      27: astore_2
      28: aload_2
      29: invokevirtual #20                 // Method getStart:()Lorg/aspectj/apache/bcel/generic/InstructionHandle;
      32: aload_0
      33: if_acmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public static boolean isExceptionEnd(org.aspectj.apache.bcel.generic.InstructionHandle);
    Code:
       0: aload_0
       1: invokestatic  #26                 // Method isRangeHandle:(Lorg/aspectj/apache/bcel/generic/InstructionHandle;)Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokestatic  #27                 // Method getRange:(Lorg/aspectj/apache/bcel/generic/InstructionHandle;)Lorg/aspectj/weaver/bcel/Range;
      13: astore_1
      14: aload_1
      15: instanceof    #19                 // class org/aspectj/weaver/bcel/ExceptionRange
      18: ifne          23
      21: iconst_0
      22: ireturn
      23: aload_1
      24: checkcast     #19                 // class org/aspectj/weaver/bcel/ExceptionRange
      27: astore_2
      28: aload_2
      29: invokevirtual #21                 // Method getEnd:()Lorg/aspectj/apache/bcel/generic/InstructionHandle;
      32: aload_0
      33: if_acmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public boolean containsTarget(org.aspectj.apache.bcel.generic.InstructionHandle);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method org/aspectj/weaver/bcel/Range.containsTarget:(Lorg/aspectj/apache/bcel/generic/InstructionHandle;)Z
       5: ireturn
}
