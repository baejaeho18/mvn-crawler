Compiled from "OrSignaturePattern.java"
public class org.aspectj.weaver.patterns.OrSignaturePattern extends org.aspectj.weaver.patterns.AbstractSignaturePattern {
  private org.aspectj.weaver.patterns.ISignaturePattern leftSp;

  private org.aspectj.weaver.patterns.ISignaturePattern rightSp;

  private java.util.List<org.aspectj.weaver.patterns.ExactTypePattern> exactDeclaringTypes;

  public org.aspectj.weaver.patterns.OrSignaturePattern(org.aspectj.weaver.patterns.ISignaturePattern, org.aspectj.weaver.patterns.ISignaturePattern);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/AbstractSignaturePattern."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field leftSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field rightSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
      14: return

  public boolean couldEverMatch(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field leftSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.couldEverMatch:(Lorg/aspectj/weaver/ResolvedType;)Z
      10: ifne          26
      13: aload_0
      14: getfield      #3                  // Field rightSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
      17: aload_1
      18: invokeinterface #4,  2            // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.couldEverMatch:(Lorg/aspectj/weaver/ResolvedType;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public java.util.List<org.aspectj.weaver.patterns.ExactTypePattern> getExactDeclaringTypes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field exactDeclaringTypes:Ljava/util/List;
       4: ifnonnull     56
       7: aload_0
       8: new           #6                  // class java/util/ArrayList
      11: dup
      12: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      15: putfield      #5                  // Field exactDeclaringTypes:Ljava/util/List;
      18: aload_0
      19: getfield      #5                  // Field exactDeclaringTypes:Ljava/util/List;
      22: aload_0
      23: getfield      #2                  // Field leftSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
      26: invokeinterface #8,  1            // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.getExactDeclaringTypes:()Ljava/util/List;
      31: invokeinterface #9,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      36: pop
      37: aload_0
      38: getfield      #5                  // Field exactDeclaringTypes:Ljava/util/List;
      41: aload_0
      42: getfield      #3                  // Field rightSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
      45: invokeinterface #8,  1            // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.getExactDeclaringTypes:()Ljava/util/List;
      50: invokeinterface #9,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      55: pop
      56: aload_0
      57: getfield      #5                  // Field exactDeclaringTypes:Ljava/util/List;
      60: areturn

  public boolean isMatchOnAnyName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field leftSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       4: invokeinterface #10,  1           // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.isMatchOnAnyName:()Z
       9: ifne          24
      12: aload_0
      13: getfield      #3                  // Field rightSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
      16: invokeinterface #10,  1           // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.isMatchOnAnyName:()Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public boolean isStarAnnotation();
    Code:
       0: aload_0
       1: getfield      #2                  // Field leftSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       4: invokeinterface #11,  1           // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.isStarAnnotation:()Z
       9: ifne          24
      12: aload_0
      13: getfield      #3                  // Field rightSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
      16: invokeinterface #11,  1           // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.isStarAnnotation:()Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public boolean matches(org.aspectj.weaver.Member, org.aspectj.weaver.World, boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field leftSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokeinterface #12,  4           // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.matches:(Lorg/aspectj/weaver/Member;Lorg/aspectj/weaver/World;Z)Z
      12: ifne          30
      15: aload_0
      16: getfield      #3                  // Field rightSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
      19: aload_1
      20: aload_2
      21: iload_3
      22: invokeinterface #12,  4           // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.matches:(Lorg/aspectj/weaver/Member;Lorg/aspectj/weaver/World;Z)Z
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public org.aspectj.weaver.patterns.ISignaturePattern parameterizeWith(java.util.Map<java.lang.String, org.aspectj.weaver.UnresolvedType>, org.aspectj.weaver.World);
    Code:
       0: new           #13                 // class org/aspectj/weaver/patterns/OrSignaturePattern
       3: dup
       4: aload_0
       5: getfield      #2                  // Field leftSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       8: aload_1
       9: aload_2
      10: invokeinterface #14,  3           // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/ISignaturePattern;
      15: aload_0
      16: getfield      #3                  // Field rightSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
      19: aload_1
      20: aload_2
      21: invokeinterface #14,  3           // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/ISignaturePattern;
      26: invokespecial #15                 // Method "<init>":(Lorg/aspectj/weaver/patterns/ISignaturePattern;Lorg/aspectj/weaver/patterns/ISignaturePattern;)V
      29: areturn

  public org.aspectj.weaver.patterns.ISignaturePattern resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings);
    Code:
       0: aload_0
       1: getfield      #2                  // Field leftSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       4: aload_1
       5: aload_2
       6: invokeinterface #16,  3           // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;)Lorg/aspectj/weaver/patterns/ISignaturePattern;
      11: pop
      12: aload_0
      13: getfield      #3                  // Field rightSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
      16: aload_1
      17: aload_2
      18: invokeinterface #16,  3           // InterfaceMethod org/aspectj/weaver/patterns/ISignaturePattern.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;)Lorg/aspectj/weaver/patterns/ISignaturePattern;
      23: pop
      24: aload_0
      25: areturn

  public static org.aspectj.weaver.patterns.ISignaturePattern readOrSignaturePattern(org.aspectj.weaver.VersionedDataInputStream, org.aspectj.weaver.ISourceContext) throws java.io.IOException;
    Code:
       0: new           #13                 // class org/aspectj/weaver/patterns/OrSignaturePattern
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #17                 // Method readCompoundSignaturePattern:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/ISignaturePattern;
       9: aload_0
      10: aload_1
      11: invokestatic  #17                 // Method readCompoundSignaturePattern:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/ISignaturePattern;
      14: invokespecial #15                 // Method "<init>":(Lorg/aspectj/weaver/patterns/ISignaturePattern;Lorg/aspectj/weaver/patterns/ISignaturePattern;)V
      17: astore_2
      18: aload_0
      19: invokevirtual #18                 // Method org/aspectj/weaver/VersionedDataInputStream.readInt:()I
      22: pop
      23: aload_0
      24: invokevirtual #18                 // Method org/aspectj/weaver/VersionedDataInputStream.readInt:()I
      27: pop
      28: aload_2
      29: areturn

  public org.aspectj.weaver.patterns.ISignaturePattern getLeft();
    Code:
       0: aload_0
       1: getfield      #2                  // Field leftSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       4: areturn

  public org.aspectj.weaver.patterns.ISignaturePattern getRight();
    Code:
       0: aload_0
       1: getfield      #3                  // Field rightSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field leftSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
      13: invokevirtual #21                 // Method java/lang/Object.toString:()Ljava/lang/String;
      16: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #23                 // String  ||
      21: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #3                  // Field rightSp:Lorg/aspectj/weaver/patterns/ISignaturePattern;
      28: invokevirtual #21                 // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: pop
      35: aload_1
      36: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn
}
