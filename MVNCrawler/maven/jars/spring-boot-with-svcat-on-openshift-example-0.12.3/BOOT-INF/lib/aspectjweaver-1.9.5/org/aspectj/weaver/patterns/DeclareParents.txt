Compiled from "DeclareParents.java"
public class org.aspectj.weaver.patterns.DeclareParents extends org.aspectj.weaver.patterns.Declare {
  protected org.aspectj.weaver.patterns.TypePattern child;

  protected org.aspectj.weaver.patterns.TypePatternList parents;

  private boolean isWildChild;

  protected boolean isExtends;

  public org.aspectj.weaver.patterns.DeclareParents(org.aspectj.weaver.patterns.TypePattern, java.util.List<org.aspectj.weaver.patterns.TypePattern>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class org/aspectj/weaver/patterns/TypePatternList
       5: dup
       6: aload_2
       7: invokespecial #2                  // Method org/aspectj/weaver/patterns/TypePatternList."<init>":(Ljava/util/List;)V
      10: iload_3
      11: invokespecial #3                  // Method "<init>":(Lorg/aspectj/weaver/patterns/TypePattern;Lorg/aspectj/weaver/patterns/TypePatternList;Z)V
      14: return

  protected org.aspectj.weaver.patterns.DeclareParents(org.aspectj.weaver.patterns.TypePattern, org.aspectj.weaver.patterns.TypePatternList, boolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/aspectj/weaver/patterns/Declare."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #5                  // Field isWildChild:Z
       9: aload_0
      10: iconst_1
      11: putfield      #6                  // Field isExtends:Z
      14: aload_0
      15: aload_1
      16: putfield      #7                  // Field child:Lorg/aspectj/weaver/patterns/TypePattern;
      19: aload_0
      20: aload_2
      21: putfield      #8                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      24: aload_0
      25: iload_3
      26: putfield      #6                  // Field isExtends:Z
      29: new           #9                  // class org/aspectj/weaver/patterns/WildChildFinder
      32: dup
      33: invokespecial #10                 // Method org/aspectj/weaver/patterns/WildChildFinder."<init>":()V
      36: astore        4
      38: aload_1
      39: aload         4
      41: aconst_null
      42: invokevirtual #11                 // Method org/aspectj/weaver/patterns/TypePattern.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_0
      47: aload         4
      49: invokevirtual #12                 // Method org/aspectj/weaver/patterns/WildChildFinder.containedWildChild:()Z
      52: putfield      #5                  // Field isWildChild:Z
      55: return

  public boolean match(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: getfield      #7                  // Field child:Lorg/aspectj/weaver/patterns/TypePattern;
       4: aload_1
       5: invokevirtual #13                 // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: invokevirtual #14                 // Method org/aspectj/weaver/ResolvedType.getWorld:()Lorg/aspectj/weaver/World;
      17: invokevirtual #15                 // Method org/aspectj/weaver/World.getLint:()Lorg/aspectj/weaver/Lint;
      20: getfield      #16                 // Field org/aspectj/weaver/Lint.typeNotExposedToWeaver:Lorg/aspectj/weaver/Lint$Kind;
      23: invokevirtual #17                 // Method org/aspectj/weaver/Lint$Kind.isEnabled:()Z
      26: ifeq          57
      29: aload_1
      30: invokevirtual #18                 // Method org/aspectj/weaver/ResolvedType.isExposedToWeaver:()Z
      33: ifne          57
      36: aload_1
      37: invokevirtual #14                 // Method org/aspectj/weaver/ResolvedType.getWorld:()Lorg/aspectj/weaver/World;
      40: invokevirtual #15                 // Method org/aspectj/weaver/World.getLint:()Lorg/aspectj/weaver/Lint;
      43: getfield      #16                 // Field org/aspectj/weaver/Lint.typeNotExposedToWeaver:Lorg/aspectj/weaver/Lint$Kind;
      46: aload_1
      47: invokevirtual #19                 // Method org/aspectj/weaver/ResolvedType.getName:()Ljava/lang/String;
      50: aload_0
      51: invokevirtual #20                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
      54: invokevirtual #21                 // Method org/aspectj/weaver/Lint$Kind.signal:(Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;)V
      57: iconst_1
      58: ireturn

  public java.lang.Object accept(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #22,  3           // InterfaceMethod org/aspectj/weaver/patterns/PatternNodeVisitor.visit:(Lorg/aspectj/weaver/patterns/DeclareParents;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public org.aspectj.weaver.patterns.Declare parameterizeWith(java.util.Map<java.lang.String, org.aspectj.weaver.UnresolvedType>, org.aspectj.weaver.World);
    Code:
       0: new           #23                 // class org/aspectj/weaver/patterns/DeclareParents
       3: dup
       4: aload_0
       5: getfield      #7                  // Field child:Lorg/aspectj/weaver/patterns/TypePattern;
       8: aload_1
       9: aload_2
      10: invokevirtual #24                 // Method org/aspectj/weaver/patterns/TypePattern.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/TypePattern;
      13: aload_0
      14: getfield      #8                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      17: aload_1
      18: aload_2
      19: invokevirtual #25                 // Method org/aspectj/weaver/patterns/TypePatternList.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/TypePatternList;
      22: aload_0
      23: getfield      #6                  // Field isExtends:Z
      26: invokespecial #3                  // Method "<init>":(Lorg/aspectj/weaver/patterns/TypePattern;Lorg/aspectj/weaver/patterns/TypePatternList;Z)V
      29: astore_3
      30: aload_3
      31: aload_0
      32: invokevirtual #26                 // Method copyLocationFrom:(Lorg/aspectj/weaver/patterns/PatternNode;)V
      35: aload_3
      36: areturn

  public java.lang.String toString();
    Code:
       0: new           #27                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #28                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #29                 // String declare parents:
      11: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #7                  // Field child:Lorg/aspectj/weaver/patterns/TypePattern;
      20: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #6                  // Field isExtends:Z
      29: ifeq          37
      32: ldc           #32                 // String  extends
      34: goto          39
      37: ldc           #33                 // String  implements
      39: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      42: pop
      43: aload_1
      44: aload_0
      45: getfield      #8                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      48: invokevirtual #31                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      51: pop
      52: aload_1
      53: ldc           #34                 // String ;
      55: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      58: pop
      59: aload_1
      60: invokevirtual #35                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      63: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #23                 // class org/aspectj/weaver/patterns/DeclareParents
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #23                 // class org/aspectj/weaver/patterns/DeclareParents
      13: astore_2
      14: aload_2
      15: getfield      #7                  // Field child:Lorg/aspectj/weaver/patterns/TypePattern;
      18: aload_0
      19: getfield      #7                  // Field child:Lorg/aspectj/weaver/patterns/TypePattern;
      22: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      25: ifeq          46
      28: aload_2
      29: getfield      #8                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      32: aload_0
      33: getfield      #8                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      36: invokevirtual #37                 // Method org/aspectj/weaver/patterns/TypePatternList.equals:(Ljava/lang/Object;)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  public int hashCode();
    Code:
       0: bipush        23
       2: istore_1
       3: bipush        37
       5: iload_1
       6: imul
       7: aload_0
       8: getfield      #7                  // Field child:Lorg/aspectj/weaver/patterns/TypePattern;
      11: invokevirtual #38                 // Method java/lang/Object.hashCode:()I
      14: iadd
      15: istore_1
      16: bipush        37
      18: iload_1
      19: imul
      20: aload_0
      21: getfield      #8                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      24: invokevirtual #39                 // Method org/aspectj/weaver/patterns/TypePatternList.hashCode:()I
      27: iadd
      28: istore_1
      29: iload_1
      30: ireturn

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_2
       2: invokevirtual #41                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeByte:(I)V
       5: aload_0
       6: getfield      #7                  // Field child:Lorg/aspectj/weaver/patterns/TypePattern;
       9: aload_1
      10: invokevirtual #42                 // Method org/aspectj/weaver/patterns/TypePattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      13: aload_0
      14: getfield      #8                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      17: aload_1
      18: invokevirtual #43                 // Method org/aspectj/weaver/patterns/TypePatternList.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      21: aload_0
      22: aload_1
      23: invokevirtual #44                 // Method writeLocation:(Ljava/io/DataOutputStream;)V
      26: return

  public static org.aspectj.weaver.patterns.Declare read(org.aspectj.weaver.VersionedDataInputStream, org.aspectj.weaver.ISourceContext) throws java.io.IOException;
    Code:
       0: new           #23                 // class org/aspectj/weaver/patterns/DeclareParents
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #45                 // Method org/aspectj/weaver/patterns/TypePattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/TypePattern;
       9: aload_0
      10: aload_1
      11: invokestatic  #46                 // Method org/aspectj/weaver/patterns/TypePatternList.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/TypePatternList;
      14: iconst_1
      15: invokespecial #3                  // Method "<init>":(Lorg/aspectj/weaver/patterns/TypePattern;Lorg/aspectj/weaver/patterns/TypePatternList;Z)V
      18: astore_2
      19: aload_2
      20: aload_1
      21: aload_0
      22: invokevirtual #47                 // Method readLocation:(Lorg/aspectj/weaver/ISourceContext;Ljava/io/DataInputStream;)V
      25: aload_2
      26: areturn

  public boolean parentsIncludeInterface(org.aspectj.weaver.World);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #8                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
       7: invokevirtual #48                 // Method org/aspectj/weaver/patterns/TypePatternList.size:()I
      10: if_icmpge     42
      13: aload_0
      14: getfield      #8                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      17: iload_2
      18: invokevirtual #49                 // Method org/aspectj/weaver/patterns/TypePatternList.get:(I)Lorg/aspectj/weaver/patterns/TypePattern;
      21: invokevirtual #50                 // Method org/aspectj/weaver/patterns/TypePattern.getExactType:()Lorg/aspectj/weaver/UnresolvedType;
      24: aload_1
      25: invokevirtual #51                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      28: invokevirtual #52                 // Method org/aspectj/weaver/ResolvedType.isInterface:()Z
      31: ifeq          36
      34: iconst_1
      35: ireturn
      36: iinc          2, 1
      39: goto          2
      42: iconst_0
      43: ireturn

  public boolean parentsIncludeClass(org.aspectj.weaver.World);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #8                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
       7: invokevirtual #48                 // Method org/aspectj/weaver/patterns/TypePatternList.size:()I
      10: if_icmpge     42
      13: aload_0
      14: getfield      #8                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      17: iload_2
      18: invokevirtual #49                 // Method org/aspectj/weaver/patterns/TypePatternList.get:(I)Lorg/aspectj/weaver/patterns/TypePattern;
      21: invokevirtual #50                 // Method org/aspectj/weaver/patterns/TypePattern.getExactType:()Lorg/aspectj/weaver/UnresolvedType;
      24: aload_1
      25: invokevirtual #51                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      28: invokevirtual #53                 // Method org/aspectj/weaver/ResolvedType.isClass:()Z
      31: ifeq          36
      34: iconst_1
      35: ireturn
      36: iinc          2, 1
      39: goto          2
      42: iconst_0
      43: ireturn

  public void resolve(org.aspectj.weaver.patterns.IScope);
    Code:
       0: aload_0
       1: getfield      #7                  // Field child:Lorg/aspectj/weaver/patterns/TypePattern;
       4: aload_1
       5: getstatic     #54                 // Field org/aspectj/weaver/patterns/Bindings.NONE:Lorg/aspectj/weaver/patterns/Bindings;
       8: iconst_0
       9: iconst_0
      10: invokevirtual #55                 // Method org/aspectj/weaver/patterns/TypePattern.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;ZZ)Lorg/aspectj/weaver/patterns/TypePattern;
      13: astore_2
      14: aload_2
      15: aload_0
      16: getfield      #7                  // Field child:Lorg/aspectj/weaver/patterns/TypePattern;
      19: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      22: ifne          53
      25: new           #9                  // class org/aspectj/weaver/patterns/WildChildFinder
      28: dup
      29: invokespecial #10                 // Method org/aspectj/weaver/patterns/WildChildFinder."<init>":()V
      32: astore_3
      33: aload_2
      34: aload_3
      35: aconst_null
      36: invokevirtual #11                 // Method org/aspectj/weaver/patterns/TypePattern.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_0
      41: aload_3
      42: invokevirtual #12                 // Method org/aspectj/weaver/patterns/WildChildFinder.containedWildChild:()Z
      45: putfield      #5                  // Field isWildChild:Z
      48: aload_0
      49: aload_2
      50: putfield      #7                  // Field child:Lorg/aspectj/weaver/patterns/TypePattern;
      53: aload_0
      54: aload_0
      55: getfield      #8                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      58: aload_1
      59: getstatic     #54                 // Field org/aspectj/weaver/patterns/Bindings.NONE:Lorg/aspectj/weaver/patterns/Bindings;
      62: iconst_0
      63: iconst_1
      64: invokevirtual #56                 // Method org/aspectj/weaver/patterns/TypePatternList.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;ZZ)Lorg/aspectj/weaver/patterns/TypePatternList;
      67: putfield      #8                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      70: return

  public org.aspectj.weaver.patterns.TypePatternList getParents();
    Code:
       0: aload_0
       1: getfield      #8                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
       4: areturn

  public org.aspectj.weaver.patterns.TypePattern getChild();
    Code:
       0: aload_0
       1: getfield      #7                  // Field child:Lorg/aspectj/weaver/patterns/TypePattern;
       4: areturn

  public boolean isExtends();
    Code:
       0: aload_0
       1: getfield      #6                  // Field isExtends:Z
       4: ireturn

  public boolean isAdviceLike();
    Code:
       0: iconst_0
       1: ireturn

  private org.aspectj.weaver.ResolvedType maybeGetNewParent(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.patterns.TypePattern, org.aspectj.weaver.World, boolean);
    Code:
       0: aload_2
       1: getstatic     #57                 // Field org/aspectj/weaver/patterns/TypePattern.NO:Lorg/aspectj/weaver/patterns/TypePattern;
       4: if_acmpne     9
       7: aconst_null
       8: areturn
       9: aload_2
      10: invokevirtual #50                 // Method org/aspectj/weaver/patterns/TypePattern.getExactType:()Lorg/aspectj/weaver/UnresolvedType;
      13: astore        5
      15: aload         5
      17: aload_3
      18: invokevirtual #51                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      21: astore        6
      23: aload_1
      24: aload_3
      25: getstatic     #58                 // Field org/aspectj/weaver/UnresolvedType.OBJECT:Lorg/aspectj/weaver/UnresolvedType;
      28: invokevirtual #59                 // Method org/aspectj/weaver/World.getCoreType:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
      31: invokevirtual #60                 // Method org/aspectj/weaver/ResolvedType.equals:(Ljava/lang/Object;)Z
      34: ifeq          56
      37: aload_3
      38: getstatic     #61                 // Field org/aspectj/bridge/IMessage.ERROR:Lorg/aspectj/bridge/IMessage$Kind;
      41: ldc           #63                 // String decpObject
      43: invokestatic  #64                 // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;)Ljava/lang/String;
      46: aload_0
      47: invokevirtual #20                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
      50: aconst_null
      51: invokevirtual #65                 // Method org/aspectj/weaver/World.showMessage:(Lorg/aspectj/bridge/IMessage$Kind;Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;Lorg/aspectj/bridge/ISourceLocation;)V
      54: aconst_null
      55: areturn
      56: aload         6
      58: invokevirtual #66                 // Method org/aspectj/weaver/ResolvedType.isParameterizedType:()Z
      61: ifne          72
      64: aload         6
      66: invokevirtual #67                 // Method org/aspectj/weaver/ResolvedType.isRawType:()Z
      69: ifeq          89
      72: aload_0
      73: aload_1
      74: aload         6
      76: aload_3
      77: invokespecial #68                 // Method verifyNoInheritedAlternateParameterization:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/World;)Z
      80: istore        7
      82: iload         7
      84: ifne          89
      87: aconst_null
      88: areturn
      89: aload         6
      91: aload_1
      92: invokevirtual #69                 // Method org/aspectj/weaver/ResolvedType.isAssignableFrom:(Lorg/aspectj/weaver/ResolvedType;)Z
      95: ifeq          100
      98: aconst_null
      99: areturn
     100: iload         4
     102: ifeq          137
     105: aload_0
     106: getfield      #5                  // Field isWildChild:Z
     109: ifeq          137
     112: aload_1
     113: invokevirtual #70                 // Method org/aspectj/weaver/ResolvedType.isEnum:()Z
     116: ifeq          137
     119: aload_3
     120: invokevirtual #15                 // Method org/aspectj/weaver/World.getLint:()Lorg/aspectj/weaver/Lint;
     123: getfield      #71                 // Field org/aspectj/weaver/Lint.enumAsTargetForDecpIgnored:Lorg/aspectj/weaver/Lint$Kind;
     126: aload_1
     127: invokevirtual #72                 // Method org/aspectj/weaver/ResolvedType.toString:()Ljava/lang/String;
     130: aload_0
     131: invokevirtual #20                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
     134: invokevirtual #21                 // Method org/aspectj/weaver/Lint$Kind.signal:(Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;)V
     137: iload         4
     139: ifeq          174
     142: aload_0
     143: getfield      #5                  // Field isWildChild:Z
     146: ifeq          174
     149: aload_1
     150: invokevirtual #73                 // Method org/aspectj/weaver/ResolvedType.isAnnotation:()Z
     153: ifeq          174
     156: aload_3
     157: invokevirtual #15                 // Method org/aspectj/weaver/World.getLint:()Lorg/aspectj/weaver/Lint;
     160: getfield      #74                 // Field org/aspectj/weaver/Lint.annotationAsTargetForDecpIgnored:Lorg/aspectj/weaver/Lint$Kind;
     163: aload_1
     164: invokevirtual #72                 // Method org/aspectj/weaver/ResolvedType.toString:()Ljava/lang/String;
     167: aload_0
     168: invokevirtual #20                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
     171: invokevirtual #21                 // Method org/aspectj/weaver/Lint$Kind.signal:(Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;)V
     174: aload_1
     175: invokevirtual #70                 // Method org/aspectj/weaver/ResolvedType.isEnum:()Z
     178: ifeq          221
     181: aload         6
     183: invokevirtual #52                 // Method org/aspectj/weaver/ResolvedType.isInterface:()Z
     186: ifeq          221
     189: iload         4
     191: ifeq          219
     194: aload_0
     195: getfield      #5                  // Field isWildChild:Z
     198: ifne          219
     201: aload_3
     202: getstatic     #61                 // Field org/aspectj/bridge/IMessage.ERROR:Lorg/aspectj/bridge/IMessage$Kind;
     205: ldc           #75                 // String cantDecpOnEnumToImplInterface
     207: aload_1
     208: invokestatic  #76                 // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     211: aload_0
     212: invokevirtual #20                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
     215: aconst_null
     216: invokevirtual #65                 // Method org/aspectj/weaver/World.showMessage:(Lorg/aspectj/bridge/IMessage$Kind;Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;Lorg/aspectj/bridge/ISourceLocation;)V
     219: aconst_null
     220: areturn
     221: aload_1
     222: invokevirtual #73                 // Method org/aspectj/weaver/ResolvedType.isAnnotation:()Z
     225: ifeq          268
     228: aload         6
     230: invokevirtual #52                 // Method org/aspectj/weaver/ResolvedType.isInterface:()Z
     233: ifeq          268
     236: iload         4
     238: ifeq          266
     241: aload_0
     242: getfield      #5                  // Field isWildChild:Z
     245: ifne          266
     248: aload_3
     249: getstatic     #61                 // Field org/aspectj/bridge/IMessage.ERROR:Lorg/aspectj/bridge/IMessage$Kind;
     252: ldc           #77                 // String cantDecpOnAnnotationToImplInterface
     254: aload_1
     255: invokestatic  #76                 // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     258: aload_0
     259: invokevirtual #20                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
     262: aconst_null
     263: invokevirtual #65                 // Method org/aspectj/weaver/World.showMessage:(Lorg/aspectj/bridge/IMessage$Kind;Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;Lorg/aspectj/bridge/ISourceLocation;)V
     266: aconst_null
     267: areturn
     268: aload_1
     269: invokevirtual #70                 // Method org/aspectj/weaver/ResolvedType.isEnum:()Z
     272: ifeq          315
     275: aload         6
     277: invokevirtual #53                 // Method org/aspectj/weaver/ResolvedType.isClass:()Z
     280: ifeq          315
     283: iload         4
     285: ifeq          313
     288: aload_0
     289: getfield      #5                  // Field isWildChild:Z
     292: ifne          313
     295: aload_3
     296: getstatic     #61                 // Field org/aspectj/bridge/IMessage.ERROR:Lorg/aspectj/bridge/IMessage$Kind;
     299: ldc           #78                 // String cantDecpOnEnumToExtendClass
     301: aload_1
     302: invokestatic  #76                 // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     305: aload_0
     306: invokevirtual #20                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
     309: aconst_null
     310: invokevirtual #65                 // Method org/aspectj/weaver/World.showMessage:(Lorg/aspectj/bridge/IMessage$Kind;Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;Lorg/aspectj/bridge/ISourceLocation;)V
     313: aconst_null
     314: areturn
     315: aload_1
     316: invokevirtual #73                 // Method org/aspectj/weaver/ResolvedType.isAnnotation:()Z
     319: ifeq          362
     322: aload         6
     324: invokevirtual #53                 // Method org/aspectj/weaver/ResolvedType.isClass:()Z
     327: ifeq          362
     330: iload         4
     332: ifeq          360
     335: aload_0
     336: getfield      #5                  // Field isWildChild:Z
     339: ifne          360
     342: aload_3
     343: getstatic     #61                 // Field org/aspectj/bridge/IMessage.ERROR:Lorg/aspectj/bridge/IMessage$Kind;
     346: ldc           #79                 // String cantDecpOnAnnotationToExtendClass
     348: aload_1
     349: invokestatic  #76                 // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     352: aload_0
     353: invokevirtual #20                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
     356: aconst_null
     357: invokevirtual #65                 // Method org/aspectj/weaver/World.showMessage:(Lorg/aspectj/bridge/IMessage$Kind;Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;Lorg/aspectj/bridge/ISourceLocation;)V
     360: aconst_null
     361: areturn
     362: aload         6
     364: invokevirtual #80                 // Method org/aspectj/weaver/ResolvedType.getSignature:()Ljava/lang/String;
     367: getstatic     #81                 // Field org/aspectj/weaver/UnresolvedType.ENUM:Lorg/aspectj/weaver/UnresolvedType;
     370: invokevirtual #82                 // Method org/aspectj/weaver/UnresolvedType.getSignature:()Ljava/lang/String;
     373: invokevirtual #83                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     376: ifeq          411
     379: iload         4
     381: ifeq          409
     384: aload_0
     385: getfield      #5                  // Field isWildChild:Z
     388: ifne          409
     391: aload_3
     392: getstatic     #61                 // Field org/aspectj/bridge/IMessage.ERROR:Lorg/aspectj/bridge/IMessage$Kind;
     395: ldc           #84                 // String cantDecpToMakeEnumSupertype
     397: aload_1
     398: invokestatic  #76                 // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     401: aload_0
     402: invokevirtual #20                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
     405: aconst_null
     406: invokevirtual #65                 // Method org/aspectj/weaver/World.showMessage:(Lorg/aspectj/bridge/IMessage$Kind;Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;Lorg/aspectj/bridge/ISourceLocation;)V
     409: aconst_null
     410: areturn
     411: aload         6
     413: invokevirtual #80                 // Method org/aspectj/weaver/ResolvedType.getSignature:()Ljava/lang/String;
     416: getstatic     #85                 // Field org/aspectj/weaver/UnresolvedType.ANNOTATION:Lorg/aspectj/weaver/UnresolvedType;
     419: invokevirtual #82                 // Method org/aspectj/weaver/UnresolvedType.getSignature:()Ljava/lang/String;
     422: invokevirtual #83                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     425: ifeq          460
     428: iload         4
     430: ifeq          458
     433: aload_0
     434: getfield      #5                  // Field isWildChild:Z
     437: ifne          458
     440: aload_3
     441: getstatic     #61                 // Field org/aspectj/bridge/IMessage.ERROR:Lorg/aspectj/bridge/IMessage$Kind;
     444: ldc           #86                 // String cantDecpToMakeAnnotationSupertype
     446: aload_1
     447: invokestatic  #76                 // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     450: aload_0
     451: invokevirtual #20                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
     454: aconst_null
     455: invokevirtual #65                 // Method org/aspectj/weaver/World.showMessage:(Lorg/aspectj/bridge/IMessage$Kind;Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;Lorg/aspectj/bridge/ISourceLocation;)V
     458: aconst_null
     459: areturn
     460: aload         6
     462: aload_1
     463: invokevirtual #69                 // Method org/aspectj/weaver/ResolvedType.isAssignableFrom:(Lorg/aspectj/weaver/ResolvedType;)Z
     466: ifeq          471
     469: aconst_null
     470: areturn
     471: aload_1
     472: aload         6
     474: invokevirtual #69                 // Method org/aspectj/weaver/ResolvedType.isAssignableFrom:(Lorg/aspectj/weaver/ResolvedType;)Z
     477: ifeq          503
     480: aload_3
     481: getstatic     #61                 // Field org/aspectj/bridge/IMessage.ERROR:Lorg/aspectj/bridge/IMessage$Kind;
     484: ldc           #87                 // String cantExtendSelf
     486: aload_1
     487: invokevirtual #19                 // Method org/aspectj/weaver/ResolvedType.getName:()Ljava/lang/String;
     490: invokestatic  #76                 // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     493: aload_0
     494: invokevirtual #20                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
     497: aconst_null
     498: invokevirtual #65                 // Method org/aspectj/weaver/World.showMessage:(Lorg/aspectj/bridge/IMessage$Kind;Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;Lorg/aspectj/bridge/ISourceLocation;)V
     501: aconst_null
     502: areturn
     503: aload         6
     505: invokevirtual #53                 // Method org/aspectj/weaver/ResolvedType.isClass:()Z
     508: ifeq          583
     511: aload_1
     512: invokevirtual #52                 // Method org/aspectj/weaver/ResolvedType.isInterface:()Z
     515: ifeq          537
     518: aload_3
     519: getstatic     #61                 // Field org/aspectj/bridge/IMessage.ERROR:Lorg/aspectj/bridge/IMessage$Kind;
     522: ldc           #88                 // String interfaceExtendClass
     524: invokestatic  #64                 // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;)Ljava/lang/String;
     527: aload_0
     528: invokevirtual #20                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
     531: aconst_null
     532: invokevirtual #65                 // Method org/aspectj/weaver/World.showMessage:(Lorg/aspectj/bridge/IMessage$Kind;Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;Lorg/aspectj/bridge/ISourceLocation;)V
     535: aconst_null
     536: areturn
     537: aload_1
     538: invokevirtual #89                 // Method org/aspectj/weaver/ResolvedType.getSuperclass:()Lorg/aspectj/weaver/ResolvedType;
     541: aload         6
     543: invokevirtual #69                 // Method org/aspectj/weaver/ResolvedType.isAssignableFrom:(Lorg/aspectj/weaver/ResolvedType;)Z
     546: ifne          580
     549: aload_3
     550: getstatic     #61                 // Field org/aspectj/bridge/IMessage.ERROR:Lorg/aspectj/bridge/IMessage$Kind;
     553: ldc           #90                 // String decpHierarchy
     555: aload         5
     557: invokevirtual #91                 // Method org/aspectj/weaver/UnresolvedType.getName:()Ljava/lang/String;
     560: aload_1
     561: invokevirtual #89                 // Method org/aspectj/weaver/ResolvedType.getSuperclass:()Lorg/aspectj/weaver/ResolvedType;
     564: invokevirtual #19                 // Method org/aspectj/weaver/ResolvedType.getName:()Ljava/lang/String;
     567: invokestatic  #92                 // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
     570: aload_0
     571: invokevirtual #20                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
     574: aconst_null
     575: invokevirtual #65                 // Method org/aspectj/weaver/World.showMessage:(Lorg/aspectj/bridge/IMessage$Kind;Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;Lorg/aspectj/bridge/ISourceLocation;)V
     578: aconst_null
     579: areturn
     580: aload         6
     582: areturn
     583: aload         6
     585: areturn

  private boolean verifyNoInheritedAlternateParameterization(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedType, org.aspectj.weaver.World);
    Code:
       0: aload_1
       1: getstatic     #93                 // Field org/aspectj/weaver/ResolvedType.OBJECT:Lorg/aspectj/weaver/UnresolvedType;
       4: invokevirtual #60                 // Method org/aspectj/weaver/ResolvedType.equals:(Ljava/lang/Object;)Z
       7: ifeq          12
      10: iconst_1
      11: ireturn
      12: aload_2
      13: invokevirtual #94                 // Method org/aspectj/weaver/ResolvedType.getGenericType:()Lorg/aspectj/weaver/ReferenceType;
      16: astore        4
      18: aload_1
      19: invokevirtual #95                 // Method org/aspectj/weaver/ResolvedType.getDirectSupertypes:()Ljava/util/Iterator;
      22: astore        5
      24: aload         5
      26: invokeinterface #96,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          245
      34: aload         5
      36: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #98                 // class org/aspectj/weaver/ResolvedType
      44: astore        6
      46: aload         6
      48: invokevirtual #67                 // Method org/aspectj/weaver/ResolvedType.isRawType:()Z
      51: ifeq          61
      54: aload_2
      55: invokevirtual #66                 // Method org/aspectj/weaver/ResolvedType.isParameterizedType:()Z
      58: ifne          76
      61: aload         6
      63: invokevirtual #66                 // Method org/aspectj/weaver/ResolvedType.isParameterizedType:()Z
      66: ifeq          142
      69: aload_2
      70: invokevirtual #67                 // Method org/aspectj/weaver/ResolvedType.isRawType:()Z
      73: ifeq          142
      76: aload         4
      78: aload         6
      80: invokevirtual #94                 // Method org/aspectj/weaver/ResolvedType.getGenericType:()Lorg/aspectj/weaver/ReferenceType;
      83: invokevirtual #60                 // Method org/aspectj/weaver/ResolvedType.equals:(Ljava/lang/Object;)Z
      86: ifeq          142
      89: aload_3
      90: invokevirtual #99                 // Method org/aspectj/weaver/World.getMessageHandler:()Lorg/aspectj/bridge/IMessageHandler;
      93: new           #100                // class org/aspectj/bridge/Message
      96: dup
      97: ldc           #101                // String cantDecpMultipleParameterizations
      99: aload_2
     100: invokevirtual #19                 // Method org/aspectj/weaver/ResolvedType.getName:()Ljava/lang/String;
     103: aload_1
     104: invokevirtual #19                 // Method org/aspectj/weaver/ResolvedType.getName:()Ljava/lang/String;
     107: aload         6
     109: invokevirtual #19                 // Method org/aspectj/weaver/ResolvedType.getName:()Ljava/lang/String;
     112: invokestatic  #102                // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
     115: aload_0
     116: invokevirtual #20                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
     119: iconst_1
     120: iconst_1
     121: anewarray     #103                // class org/aspectj/bridge/ISourceLocation
     124: dup
     125: iconst_0
     126: aload_1
     127: invokevirtual #104                // Method org/aspectj/weaver/ResolvedType.getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
     130: aastore
     131: invokespecial #105                // Method org/aspectj/bridge/Message."<init>":(Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;Z[Lorg/aspectj/bridge/ISourceLocation;)V
     134: invokeinterface #106,  2          // InterfaceMethod org/aspectj/bridge/IMessageHandler.handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
     139: pop
     140: iconst_0
     141: ireturn
     142: aload         6
     144: invokevirtual #66                 // Method org/aspectj/weaver/ResolvedType.isParameterizedType:()Z
     147: ifeq          229
     150: aload         6
     152: invokevirtual #94                 // Method org/aspectj/weaver/ResolvedType.getGenericType:()Lorg/aspectj/weaver/ReferenceType;
     155: astore        7
     157: aload         7
     159: aload         4
     161: invokevirtual #69                 // Method org/aspectj/weaver/ResolvedType.isAssignableFrom:(Lorg/aspectj/weaver/ResolvedType;)Z
     164: ifeq          229
     167: aload         6
     169: aload_2
     170: invokevirtual #69                 // Method org/aspectj/weaver/ResolvedType.isAssignableFrom:(Lorg/aspectj/weaver/ResolvedType;)Z
     173: ifne          229
     176: aload_3
     177: invokevirtual #99                 // Method org/aspectj/weaver/World.getMessageHandler:()Lorg/aspectj/bridge/IMessageHandler;
     180: new           #100                // class org/aspectj/bridge/Message
     183: dup
     184: ldc           #101                // String cantDecpMultipleParameterizations
     186: aload_2
     187: invokevirtual #19                 // Method org/aspectj/weaver/ResolvedType.getName:()Ljava/lang/String;
     190: aload_1
     191: invokevirtual #19                 // Method org/aspectj/weaver/ResolvedType.getName:()Ljava/lang/String;
     194: aload         6
     196: invokevirtual #19                 // Method org/aspectj/weaver/ResolvedType.getName:()Ljava/lang/String;
     199: invokestatic  #102                // Method org/aspectj/weaver/WeaverMessages.format:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
     202: aload_0
     203: invokevirtual #20                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
     206: iconst_1
     207: iconst_1
     208: anewarray     #103                // class org/aspectj/bridge/ISourceLocation
     211: dup
     212: iconst_0
     213: aload_1
     214: invokevirtual #104                // Method org/aspectj/weaver/ResolvedType.getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
     217: aastore
     218: invokespecial #105                // Method org/aspectj/bridge/Message."<init>":(Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;Z[Lorg/aspectj/bridge/ISourceLocation;)V
     221: invokeinterface #106,  2          // InterfaceMethod org/aspectj/bridge/IMessageHandler.handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
     226: pop
     227: iconst_0
     228: ireturn
     229: aload_0
     230: aload         6
     232: aload_2
     233: aload_3
     234: invokespecial #68                 // Method verifyNoInheritedAlternateParameterization:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/World;)Z
     237: ifne          242
     240: iconst_0
     241: ireturn
     242: goto          24
     245: iconst_1
     246: ireturn

  public java.util.List<org.aspectj.weaver.ResolvedType> findMatchingNewParents(org.aspectj.weaver.ResolvedType, boolean);
    Code:
       0: aload_1
       1: invokevirtual #67                 // Method org/aspectj/weaver/ResolvedType.isRawType:()Z
       4: ifeq          12
       7: aload_1
       8: invokevirtual #94                 // Method org/aspectj/weaver/ResolvedType.getGenericType:()Lorg/aspectj/weaver/ReferenceType;
      11: astore_1
      12: aload_0
      13: aload_1
      14: invokevirtual #107                // Method match:(Lorg/aspectj/weaver/ResolvedType;)Z
      17: ifne          24
      20: invokestatic  #108                // Method java/util/Collections.emptyList:()Ljava/util/List;
      23: areturn
      24: new           #109                // class java/util/ArrayList
      27: dup
      28: invokespecial #110                // Method java/util/ArrayList."<init>":()V
      31: astore_3
      32: iconst_0
      33: istore        4
      35: iload         4
      37: aload_0
      38: getfield      #8                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      41: invokevirtual #48                 // Method org/aspectj/weaver/patterns/TypePatternList.size:()I
      44: if_icmpge     88
      47: aload_0
      48: aload_1
      49: aload_0
      50: getfield      #8                  // Field parents:Lorg/aspectj/weaver/patterns/TypePatternList;
      53: iload         4
      55: invokevirtual #49                 // Method org/aspectj/weaver/patterns/TypePatternList.get:(I)Lorg/aspectj/weaver/patterns/TypePattern;
      58: aload_1
      59: invokevirtual #14                 // Method org/aspectj/weaver/ResolvedType.getWorld:()Lorg/aspectj/weaver/World;
      62: iload_2
      63: invokespecial #111                // Method maybeGetNewParent:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/patterns/TypePattern;Lorg/aspectj/weaver/World;Z)Lorg/aspectj/weaver/ResolvedType;
      66: astore        5
      68: aload         5
      70: ifnull        82
      73: aload_3
      74: aload         5
      76: invokeinterface #112,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      81: pop
      82: iinc          4, 1
      85: goto          35
      88: aload_3
      89: areturn

  public java.lang.String getNameSuffix();
    Code:
       0: ldc           #113                // String parents
       2: areturn

  public boolean isMixin();
    Code:
       0: iconst_0
       1: ireturn
}
