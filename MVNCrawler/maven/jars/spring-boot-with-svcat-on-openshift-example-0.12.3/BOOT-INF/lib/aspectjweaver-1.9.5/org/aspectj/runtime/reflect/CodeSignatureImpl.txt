Compiled from "CodeSignatureImpl.java"
abstract class org.aspectj.runtime.reflect.CodeSignatureImpl extends org.aspectj.runtime.reflect.MemberSignatureImpl implements org.aspectj.lang.reflect.CodeSignature {
  java.lang.Class[] parameterTypes;

  java.lang.String[] parameterNames;

  java.lang.Class[] exceptionTypes;

  org.aspectj.runtime.reflect.CodeSignatureImpl(int, java.lang.String, java.lang.Class, java.lang.Class[], java.lang.String[], java.lang.Class[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/aspectj/runtime/reflect/MemberSignatureImpl."<init>":(ILjava/lang/String;Ljava/lang/Class;)V
       7: aload_0
       8: aload         4
      10: putfield      #2                  // Field parameterTypes:[Ljava/lang/Class;
      13: aload_0
      14: aload         5
      16: putfield      #3                  // Field parameterNames:[Ljava/lang/String;
      19: aload_0
      20: aload         6
      22: putfield      #4                  // Field exceptionTypes:[Ljava/lang/Class;
      25: return

  org.aspectj.runtime.reflect.CodeSignatureImpl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/aspectj/runtime/reflect/MemberSignatureImpl."<init>":(Ljava/lang/String;)V
       5: return

  public java.lang.Class[] getParameterTypes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parameterTypes:[Ljava/lang/Class;
       4: ifnonnull     16
       7: aload_0
       8: aload_0
       9: iconst_3
      10: invokevirtual #6                  // Method extractTypes:(I)[Ljava/lang/Class;
      13: putfield      #2                  // Field parameterTypes:[Ljava/lang/Class;
      16: aload_0
      17: getfield      #2                  // Field parameterTypes:[Ljava/lang/Class;
      20: areturn

  public java.lang.String[] getParameterNames();
    Code:
       0: aload_0
       1: getfield      #3                  // Field parameterNames:[Ljava/lang/String;
       4: ifnonnull     16
       7: aload_0
       8: aload_0
       9: iconst_4
      10: invokevirtual #7                  // Method extractStrings:(I)[Ljava/lang/String;
      13: putfield      #3                  // Field parameterNames:[Ljava/lang/String;
      16: aload_0
      17: getfield      #3                  // Field parameterNames:[Ljava/lang/String;
      20: areturn

  public java.lang.Class[] getExceptionTypes();
    Code:
       0: aload_0
       1: getfield      #4                  // Field exceptionTypes:[Ljava/lang/Class;
       4: ifnonnull     16
       7: aload_0
       8: aload_0
       9: iconst_5
      10: invokevirtual #6                  // Method extractTypes:(I)[Ljava/lang/Class;
      13: putfield      #4                  // Field exceptionTypes:[Ljava/lang/Class;
      16: aload_0
      17: getfield      #4                  // Field exceptionTypes:[Ljava/lang/Class;
      20: areturn
}
