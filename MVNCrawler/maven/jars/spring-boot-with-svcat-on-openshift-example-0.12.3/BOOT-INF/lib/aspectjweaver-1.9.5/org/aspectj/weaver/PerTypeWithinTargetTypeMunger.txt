Compiled from "PerTypeWithinTargetTypeMunger.java"
public class org.aspectj.weaver.PerTypeWithinTargetTypeMunger extends org.aspectj.weaver.ResolvedTypeMunger {
  private org.aspectj.weaver.UnresolvedType aspectType;

  private org.aspectj.weaver.patterns.PerTypeWithin testPointcut;

  private volatile int hashCode;

  public org.aspectj.weaver.PerTypeWithinTargetTypeMunger(org.aspectj.weaver.UnresolvedType, org.aspectj.weaver.patterns.PerTypeWithin);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field PerTypeWithinInterface:Lorg/aspectj/weaver/ResolvedTypeMunger$Kind;
       4: aconst_null
       5: invokespecial #2                  // Method org/aspectj/weaver/ResolvedTypeMunger."<init>":(Lorg/aspectj/weaver/ResolvedTypeMunger$Kind;Lorg/aspectj/weaver/ResolvedMember;)V
       8: aload_0
       9: iconst_0
      10: putfield      #3                  // Field hashCode:I
      13: aload_0
      14: aload_1
      15: putfield      #4                  // Field aspectType:Lorg/aspectj/weaver/UnresolvedType;
      18: aload_0
      19: aload_2
      20: putfield      #5                  // Field testPointcut:Lorg/aspectj/weaver/patterns/PerTypeWithin;
      23: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #6                  // class org/aspectj/weaver/PerTypeWithinTargetTypeMunger
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #6                  // class org/aspectj/weaver/PerTypeWithinTargetTypeMunger
      13: astore_2
      14: aload_2
      15: getfield      #5                  // Field testPointcut:Lorg/aspectj/weaver/patterns/PerTypeWithin;
      18: ifnonnull     31
      21: aload_0
      22: getfield      #5                  // Field testPointcut:Lorg/aspectj/weaver/patterns/PerTypeWithin;
      25: ifnonnull     80
      28: goto          45
      31: aload_0
      32: getfield      #5                  // Field testPointcut:Lorg/aspectj/weaver/patterns/PerTypeWithin;
      35: aload_2
      36: getfield      #5                  // Field testPointcut:Lorg/aspectj/weaver/patterns/PerTypeWithin;
      39: invokevirtual #7                  // Method org/aspectj/weaver/patterns/PerTypeWithin.equals:(Ljava/lang/Object;)Z
      42: ifeq          80
      45: aload_2
      46: getfield      #4                  // Field aspectType:Lorg/aspectj/weaver/UnresolvedType;
      49: ifnonnull     62
      52: aload_0
      53: getfield      #4                  // Field aspectType:Lorg/aspectj/weaver/UnresolvedType;
      56: ifnonnull     80
      59: goto          76
      62: aload_0
      63: getfield      #4                  // Field aspectType:Lorg/aspectj/weaver/UnresolvedType;
      66: aload_2
      67: getfield      #4                  // Field aspectType:Lorg/aspectj/weaver/UnresolvedType;
      70: invokevirtual #8                  // Method org/aspectj/weaver/UnresolvedType.equals:(Ljava/lang/Object;)Z
      73: ifeq          80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field hashCode:I
       4: ifne          63
       7: bipush        17
       9: istore_1
      10: bipush        37
      12: iload_1
      13: imul
      14: aload_0
      15: getfield      #5                  // Field testPointcut:Lorg/aspectj/weaver/patterns/PerTypeWithin;
      18: ifnonnull     25
      21: iconst_0
      22: goto          32
      25: aload_0
      26: getfield      #5                  // Field testPointcut:Lorg/aspectj/weaver/patterns/PerTypeWithin;
      29: invokevirtual #9                  // Method org/aspectj/weaver/patterns/PerTypeWithin.hashCode:()I
      32: iadd
      33: istore_1
      34: bipush        37
      36: iload_1
      37: imul
      38: aload_0
      39: getfield      #4                  // Field aspectType:Lorg/aspectj/weaver/UnresolvedType;
      42: ifnonnull     49
      45: iconst_0
      46: goto          56
      49: aload_0
      50: getfield      #4                  // Field aspectType:Lorg/aspectj/weaver/UnresolvedType;
      53: invokevirtual #10                 // Method org/aspectj/weaver/UnresolvedType.hashCode:()I
      56: iadd
      57: istore_1
      58: aload_0
      59: iload_1
      60: putfield      #3                  // Field hashCode:I
      63: aload_0
      64: getfield      #3                  // Field hashCode:I
      67: ireturn

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: new           #11                 // class java/lang/RuntimeException
       3: dup
       4: ldc           #12                 // String shouldn\'t be serialized
       6: invokespecial #13                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.aspectj.weaver.UnresolvedType getAspectType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field aspectType:Lorg/aspectj/weaver/UnresolvedType;
       4: areturn

  public org.aspectj.weaver.patterns.Pointcut getTestPointcut();
    Code:
       0: aload_0
       1: getfield      #5                  // Field testPointcut:Lorg/aspectj/weaver/patterns/PerTypeWithin;
       4: areturn

  public boolean matches(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method isWithinType:(Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/util/FuzzyBoolean;
       5: invokevirtual #15                 // Method org/aspectj/util/FuzzyBoolean.alwaysTrue:()Z
       8: ifeq          37
      11: aload_1
      12: invokevirtual #16                 // Method org/aspectj/weaver/ResolvedType.isInterface:()Z
      15: ifne          37
      18: aload_1
      19: aload_2
      20: invokevirtual #17                 // Method org/aspectj/weaver/ResolvedType.canBeSeenBy:(Lorg/aspectj/weaver/ResolvedType;)Z
      23: ifne          33
      26: aload_2
      27: invokevirtual #18                 // Method org/aspectj/weaver/ResolvedType.isPrivilegedAspect:()Z
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  private org.aspectj.util.FuzzyBoolean isWithinType(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_1
       1: ifnull        30
       4: aload_0
       5: getfield      #5                  // Field testPointcut:Lorg/aspectj/weaver/patterns/PerTypeWithin;
       8: invokevirtual #19                 // Method org/aspectj/weaver/patterns/PerTypeWithin.getTypePattern:()Lorg/aspectj/weaver/patterns/TypePattern;
      11: aload_1
      12: invokevirtual #20                 // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
      15: ifeq          22
      18: getstatic     #21                 // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
      21: areturn
      22: aload_1
      23: invokevirtual #22                 // Method org/aspectj/weaver/ResolvedType.getDeclaringType:()Lorg/aspectj/weaver/ResolvedType;
      26: astore_1
      27: goto          0
      30: getstatic     #23                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      33: areturn
}
