Compiled from "Test.java"
public abstract class org.aspectj.weaver.ast.Test extends org.aspectj.weaver.ast.ASTNode {
  public org.aspectj.weaver.ast.Test();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/ast/ASTNode."<init>":()V
       4: return

  public abstract void accept(org.aspectj.weaver.ast.ITestVisitor);

  public static org.aspectj.weaver.ast.Test makeAnd(org.aspectj.weaver.ast.Test, org.aspectj.weaver.ast.Test);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/aspectj/weaver/ast/Literal.TRUE:Lorg/aspectj/weaver/ast/Literal;
       4: if_acmpne     18
       7: aload_1
       8: getstatic     #2                  // Field org/aspectj/weaver/ast/Literal.TRUE:Lorg/aspectj/weaver/ast/Literal;
      11: if_acmpne     16
      14: aload_0
      15: areturn
      16: aload_1
      17: areturn
      18: aload_1
      19: getstatic     #2                  // Field org/aspectj/weaver/ast/Literal.TRUE:Lorg/aspectj/weaver/ast/Literal;
      22: if_acmpne     27
      25: aload_0
      26: areturn
      27: aload_0
      28: getstatic     #3                  // Field org/aspectj/weaver/ast/Literal.FALSE:Lorg/aspectj/weaver/ast/Literal;
      31: if_acmpeq     41
      34: aload_1
      35: getstatic     #3                  // Field org/aspectj/weaver/ast/Literal.FALSE:Lorg/aspectj/weaver/ast/Literal;
      38: if_acmpne     45
      41: getstatic     #3                  // Field org/aspectj/weaver/ast/Literal.FALSE:Lorg/aspectj/weaver/ast/Literal;
      44: areturn
      45: new           #4                  // class org/aspectj/weaver/ast/And
      48: dup
      49: aload_0
      50: aload_1
      51: invokespecial #5                  // Method org/aspectj/weaver/ast/And."<init>":(Lorg/aspectj/weaver/ast/Test;Lorg/aspectj/weaver/ast/Test;)V
      54: areturn

  public static org.aspectj.weaver.ast.Test makeOr(org.aspectj.weaver.ast.Test, org.aspectj.weaver.ast.Test);
    Code:
       0: aload_0
       1: getstatic     #3                  // Field org/aspectj/weaver/ast/Literal.FALSE:Lorg/aspectj/weaver/ast/Literal;
       4: if_acmpne     9
       7: aload_1
       8: areturn
       9: aload_1
      10: getstatic     #3                  // Field org/aspectj/weaver/ast/Literal.FALSE:Lorg/aspectj/weaver/ast/Literal;
      13: if_acmpne     18
      16: aload_0
      17: areturn
      18: aload_0
      19: getstatic     #2                  // Field org/aspectj/weaver/ast/Literal.TRUE:Lorg/aspectj/weaver/ast/Literal;
      22: if_acmpeq     32
      25: aload_1
      26: getstatic     #2                  // Field org/aspectj/weaver/ast/Literal.TRUE:Lorg/aspectj/weaver/ast/Literal;
      29: if_acmpne     36
      32: getstatic     #2                  // Field org/aspectj/weaver/ast/Literal.TRUE:Lorg/aspectj/weaver/ast/Literal;
      35: areturn
      36: new           #6                  // class org/aspectj/weaver/ast/Or
      39: dup
      40: aload_0
      41: aload_1
      42: invokespecial #7                  // Method org/aspectj/weaver/ast/Or."<init>":(Lorg/aspectj/weaver/ast/Test;Lorg/aspectj/weaver/ast/Test;)V
      45: areturn

  public static org.aspectj.weaver.ast.Test makeNot(org.aspectj.weaver.ast.Test);
    Code:
       0: aload_0
       1: instanceof    #8                  // class org/aspectj/weaver/ast/Not
       4: ifeq          15
       7: aload_0
       8: checkcast     #8                  // class org/aspectj/weaver/ast/Not
      11: invokevirtual #9                  // Method org/aspectj/weaver/ast/Not.getBody:()Lorg/aspectj/weaver/ast/Test;
      14: areturn
      15: aload_0
      16: getstatic     #2                  // Field org/aspectj/weaver/ast/Literal.TRUE:Lorg/aspectj/weaver/ast/Literal;
      19: if_acmpne     26
      22: getstatic     #3                  // Field org/aspectj/weaver/ast/Literal.FALSE:Lorg/aspectj/weaver/ast/Literal;
      25: areturn
      26: aload_0
      27: getstatic     #3                  // Field org/aspectj/weaver/ast/Literal.FALSE:Lorg/aspectj/weaver/ast/Literal;
      30: if_acmpne     37
      33: getstatic     #2                  // Field org/aspectj/weaver/ast/Literal.TRUE:Lorg/aspectj/weaver/ast/Literal;
      36: areturn
      37: new           #8                  // class org/aspectj/weaver/ast/Not
      40: dup
      41: aload_0
      42: invokespecial #10                 // Method org/aspectj/weaver/ast/Not."<init>":(Lorg/aspectj/weaver/ast/Test;)V
      45: areturn

  public static org.aspectj.weaver.ast.Test makeInstanceof(org.aspectj.weaver.ast.Var, org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_1
       1: getstatic     #11                 // Field org/aspectj/weaver/ResolvedType.OBJECT:Lorg/aspectj/weaver/UnresolvedType;
       4: invokevirtual #12                 // Method org/aspectj/weaver/ResolvedType.equals:(Ljava/lang/Object;)Z
       7: ifeq          14
      10: getstatic     #2                  // Field org/aspectj/weaver/ast/Literal.TRUE:Lorg/aspectj/weaver/ast/Literal;
      13: areturn
      14: aload_1
      15: aload_0
      16: invokevirtual #13                 // Method org/aspectj/weaver/ast/Var.getType:()Lorg/aspectj/weaver/ResolvedType;
      19: invokevirtual #14                 // Method org/aspectj/weaver/ResolvedType.isAssignableFrom:(Lorg/aspectj/weaver/ResolvedType;)Z
      22: ifeq          32
      25: getstatic     #2                  // Field org/aspectj/weaver/ast/Literal.TRUE:Lorg/aspectj/weaver/ast/Literal;
      28: astore_2
      29: goto          60
      32: aload_1
      33: aload_0
      34: invokevirtual #13                 // Method org/aspectj/weaver/ast/Var.getType:()Lorg/aspectj/weaver/ResolvedType;
      37: invokevirtual #15                 // Method org/aspectj/weaver/ResolvedType.isCoerceableFrom:(Lorg/aspectj/weaver/ResolvedType;)Z
      40: ifne          50
      43: getstatic     #3                  // Field org/aspectj/weaver/ast/Literal.FALSE:Lorg/aspectj/weaver/ast/Literal;
      46: astore_2
      47: goto          60
      50: new           #16                 // class org/aspectj/weaver/ast/Instanceof
      53: dup
      54: aload_0
      55: aload_1
      56: invokespecial #17                 // Method org/aspectj/weaver/ast/Instanceof."<init>":(Lorg/aspectj/weaver/ast/Var;Lorg/aspectj/weaver/UnresolvedType;)V
      59: astore_2
      60: aload_2
      61: areturn

  public static org.aspectj.weaver.ast.Test makeHasAnnotation(org.aspectj.weaver.ast.Var, org.aspectj.weaver.ResolvedType);
    Code:
       0: new           #18                 // class org/aspectj/weaver/ast/HasAnnotation
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #19                 // Method org/aspectj/weaver/ast/HasAnnotation."<init>":(Lorg/aspectj/weaver/ast/Var;Lorg/aspectj/weaver/ResolvedType;)V
       9: areturn

  public static org.aspectj.weaver.ast.Test makeCall(org.aspectj.weaver.Member, org.aspectj.weaver.ast.Expr[]);
    Code:
       0: new           #20                 // class org/aspectj/weaver/ast/Call
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #21                 // Method org/aspectj/weaver/ast/Call."<init>":(Lorg/aspectj/weaver/Member;[Lorg/aspectj/weaver/ast/Expr;)V
       9: areturn

  public static org.aspectj.weaver.ast.Test makeFieldGetCall(org.aspectj.weaver.Member, org.aspectj.weaver.Member, org.aspectj.weaver.ast.Expr[]);
    Code:
       0: new           #22                 // class org/aspectj/weaver/ast/FieldGetCall
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #23                 // Method org/aspectj/weaver/ast/FieldGetCall."<init>":(Lorg/aspectj/weaver/Member;Lorg/aspectj/weaver/Member;[Lorg/aspectj/weaver/ast/Expr;)V
      10: areturn
}
