Compiled from "AnyTypePattern.java"
public class org.aspectj.weaver.patterns.AnyTypePattern extends org.aspectj.weaver.patterns.TypePattern {
  public org.aspectj.weaver.patterns.AnyTypePattern();
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_0
       3: new           #1                  // class org/aspectj/weaver/patterns/TypePatternList
       6: dup
       7: invokespecial #2                  // Method org/aspectj/weaver/patterns/TypePatternList."<init>":()V
      10: invokespecial #3                  // Method org/aspectj/weaver/patterns/TypePattern."<init>":(ZZLorg/aspectj/weaver/patterns/TypePatternList;)V
      13: return

  protected boolean couldEverMatchSameTypesAs(org.aspectj.weaver.patterns.TypePattern);
    Code:
       0: iconst_1
       1: ireturn

  protected boolean matchesExactly(org.aspectj.weaver.ResolvedType);
    Code:
       0: iconst_1
       1: ireturn

  protected boolean matchesExactly(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedType);
    Code:
       0: iconst_1
       1: ireturn

  public org.aspectj.util.FuzzyBoolean matchesInstanceof(org.aspectj.weaver.ResolvedType);
    Code:
       0: getstatic     #4                  // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
       3: areturn

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_5
       2: invokevirtual #6                  // Method org/aspectj/weaver/CompressingDataOutputStream.writeByte:(I)V
       5: return

  protected boolean matchesSubtypes(org.aspectj.weaver.ResolvedType);
    Code:
       0: iconst_1
       1: ireturn

  public boolean isStar();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #7                  // String *
       2: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #8                  // class org/aspectj/weaver/patterns/AnyTypePattern
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        37
       2: ireturn

  public java.lang.Object accept(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #9,  3            // InterfaceMethod org/aspectj/weaver/patterns/PatternNodeVisitor.visit:(Lorg/aspectj/weaver/patterns/AnyTypePattern;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public org.aspectj.weaver.patterns.TypePattern parameterizeWith(java.util.Map<java.lang.String, org.aspectj.weaver.UnresolvedType>, org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: areturn
}
