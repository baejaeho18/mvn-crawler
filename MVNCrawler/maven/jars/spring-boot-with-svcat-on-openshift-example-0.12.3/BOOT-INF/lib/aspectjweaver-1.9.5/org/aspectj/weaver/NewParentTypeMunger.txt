Compiled from "NewParentTypeMunger.java"
public class org.aspectj.weaver.NewParentTypeMunger extends org.aspectj.weaver.ResolvedTypeMunger {
  org.aspectj.weaver.ResolvedType newParent;

  org.aspectj.weaver.ResolvedType declaringType;

  private boolean isMixin;

  private volatile int hashCode;

  public org.aspectj.weaver.NewParentTypeMunger(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field Parent:Lorg/aspectj/weaver/ResolvedTypeMunger$Kind;
       4: aconst_null
       5: invokespecial #2                  // Method org/aspectj/weaver/ResolvedTypeMunger."<init>":(Lorg/aspectj/weaver/ResolvedTypeMunger$Kind;Lorg/aspectj/weaver/ResolvedMember;)V
       8: aload_0
       9: iconst_0
      10: putfield      #3                  // Field hashCode:I
      13: aload_0
      14: aload_1
      15: putfield      #4                  // Field newParent:Lorg/aspectj/weaver/ResolvedType;
      18: aload_0
      19: aload_2
      20: putfield      #5                  // Field declaringType:Lorg/aspectj/weaver/ResolvedType;
      23: aload_0
      24: iconst_0
      25: putfield      #6                  // Field isMixin:Z
      28: return

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: new           #7                  // class java/lang/RuntimeException
       3: dup
       4: ldc           #8                  // String unimplemented
       6: invokespecial #9                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.aspectj.weaver.ResolvedType getNewParent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field newParent:Lorg/aspectj/weaver/ResolvedType;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #10                 // class org/aspectj/weaver/NewParentTypeMunger
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #10                 // class org/aspectj/weaver/NewParentTypeMunger
      13: astore_2
      14: aload_0
      15: getfield      #4                  // Field newParent:Lorg/aspectj/weaver/ResolvedType;
      18: aload_2
      19: getfield      #4                  // Field newParent:Lorg/aspectj/weaver/ResolvedType;
      22: invokevirtual #11                 // Method org/aspectj/weaver/ResolvedType.equals:(Ljava/lang/Object;)Z
      25: ifeq          43
      28: aload_0
      29: getfield      #6                  // Field isMixin:Z
      32: aload_2
      33: getfield      #6                  // Field isMixin:Z
      36: if_icmpne     43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field hashCode:I
       4: ifne          46
       7: bipush        17
       9: istore_1
      10: bipush        37
      12: iload_1
      13: imul
      14: aload_0
      15: getfield      #4                  // Field newParent:Lorg/aspectj/weaver/ResolvedType;
      18: invokevirtual #12                 // Method org/aspectj/weaver/ResolvedType.hashCode:()I
      21: iadd
      22: istore_1
      23: bipush        37
      25: iload_1
      26: imul
      27: aload_0
      28: getfield      #6                  // Field isMixin:Z
      31: ifeq          38
      34: iconst_0
      35: goto          39
      38: iconst_1
      39: iadd
      40: istore_1
      41: aload_0
      42: iload_1
      43: putfield      #3                  // Field hashCode:I
      46: aload_0
      47: getfield      #3                  // Field hashCode:I
      50: ireturn

  public org.aspectj.weaver.ResolvedType getDeclaringType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field declaringType:Lorg/aspectj/weaver/ResolvedType;
       4: areturn

  public void setIsMixin(boolean);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #6                  // Field isMixin:Z
       5: return

  public boolean isMixin();
    Code:
       0: aload_0
       1: getfield      #6                  // Field isMixin:Z
       4: ireturn

  public org.aspectj.weaver.UnresolvedType getDeclaringType();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getDeclaringType:()Lorg/aspectj/weaver/ResolvedType;
       4: areturn
}
