Compiled from "ReflectionBasedReferenceTypeDelegate.java"
public class org.aspectj.weaver.reflect.ReflectionBasedReferenceTypeDelegate implements org.aspectj.weaver.ReferenceTypeDelegate {
  private static final java.lang.ClassLoader bootClassLoader;

  protected java.lang.Class myClass;

  protected org.aspectj.weaver.WeakClassLoaderReference classLoaderReference;

  protected org.aspectj.weaver.World world;

  private org.aspectj.weaver.ReferenceType resolvedType;

  private org.aspectj.weaver.ResolvedMember[] fields;

  private org.aspectj.weaver.ResolvedMember[] methods;

  private org.aspectj.weaver.ResolvedType[] interfaces;

  public org.aspectj.weaver.reflect.ReflectionBasedReferenceTypeDelegate(java.lang.Class, java.lang.ClassLoader, org.aspectj.weaver.World, org.aspectj.weaver.ReferenceType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field myClass:Ljava/lang/Class;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field classLoaderReference:Lorg/aspectj/weaver/WeakClassLoaderReference;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field fields:[Lorg/aspectj/weaver/ResolvedMember;
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field methods:[Lorg/aspectj/weaver/ResolvedMember;
      24: aload_0
      25: aconst_null
      26: putfield      #6                  // Field interfaces:[Lorg/aspectj/weaver/ResolvedType;
      29: aload_0
      30: aload         4
      32: aload_1
      33: aload_2
      34: aload_3
      35: invokevirtual #7                  // Method initialize:(Lorg/aspectj/weaver/ReferenceType;Ljava/lang/Class;Ljava/lang/ClassLoader;Lorg/aspectj/weaver/World;)V
      38: return

  public org.aspectj.weaver.reflect.ReflectionBasedReferenceTypeDelegate();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field myClass:Ljava/lang/Class;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field classLoaderReference:Lorg/aspectj/weaver/WeakClassLoaderReference;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field fields:[Lorg/aspectj/weaver/ResolvedMember;
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field methods:[Lorg/aspectj/weaver/ResolvedMember;
      24: aload_0
      25: aconst_null
      26: putfield      #6                  // Field interfaces:[Lorg/aspectj/weaver/ResolvedType;
      29: return

  public void initialize(org.aspectj.weaver.ReferenceType, java.lang.Class<?>, java.lang.ClassLoader, org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #2                  // Field myClass:Ljava/lang/Class;
       5: aload_0
       6: aload_1
       7: putfield      #8                  // Field resolvedType:Lorg/aspectj/weaver/ReferenceType;
      10: aload_0
      11: aload         4
      13: putfield      #9                  // Field world:Lorg/aspectj/weaver/World;
      16: aload_0
      17: new           #10                 // class org/aspectj/weaver/WeakClassLoaderReference
      20: dup
      21: aload_3
      22: ifnull        29
      25: aload_3
      26: goto          32
      29: getstatic     #11                 // Field bootClassLoader:Ljava/lang/ClassLoader;
      32: invokespecial #12                 // Method org/aspectj/weaver/WeakClassLoaderReference."<init>":(Ljava/lang/ClassLoader;)V
      35: putfield      #3                  // Field classLoaderReference:Lorg/aspectj/weaver/WeakClassLoaderReference;
      38: return

  public java.lang.Class<?> getClazz();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myClass:Ljava/lang/Class;
       4: areturn

  protected java.lang.Class getBaseClass();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myClass:Ljava/lang/Class;
       4: areturn

  protected org.aspectj.weaver.World getWorld();
    Code:
       0: aload_0
       1: getfield      #9                  // Field world:Lorg/aspectj/weaver/World;
       4: areturn

  public org.aspectj.weaver.ReferenceType buildGenericType();
    Code:
       0: new           #13                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #14                 // String Shouldn\'t be asking for generic type at 1.4 source level or lower
       6: invokespecial #15                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean isAspect();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAnnotationStyleAspect();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isInterface();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myClass:Ljava/lang/Class;
       4: invokevirtual #16                 // Method java/lang/Class.isInterface:()Z
       7: ireturn

  public boolean isEnum();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAnnotationWithRuntimeRetention();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAnnotation();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getRetentionPolicy();
    Code:
       0: aconst_null
       1: areturn

  public boolean canAnnotationTargetType();
    Code:
       0: iconst_0
       1: ireturn

  public org.aspectj.weaver.AnnotationTargetKind[] getAnnotationTargetKinds();
    Code:
       0: aconst_null
       1: areturn

  public boolean isClass();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myClass:Ljava/lang/Class;
       4: invokevirtual #16                 // Method java/lang/Class.isInterface:()Z
       7: ifne          34
      10: aload_0
      11: getfield      #2                  // Field myClass:Ljava/lang/Class;
      14: invokevirtual #17                 // Method java/lang/Class.isPrimitive:()Z
      17: ifne          34
      20: aload_0
      21: getfield      #2                  // Field myClass:Ljava/lang/Class;
      24: invokevirtual #18                 // Method java/lang/Class.isArray:()Z
      27: ifne          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public boolean isGeneric();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAnonymous();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myClass:Ljava/lang/Class;
       4: invokevirtual #19                 // Method java/lang/Class.isAnonymousClass:()Z
       7: ireturn

  public boolean isNested();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myClass:Ljava/lang/Class;
       4: invokevirtual #20                 // Method java/lang/Class.isMemberClass:()Z
       7: ireturn

  public org.aspectj.weaver.ResolvedType getOuterClass();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myClass:Ljava/lang/Class;
       4: invokevirtual #21                 // Method java/lang/Class.getEnclosingClass:()Ljava/lang/Class;
       7: aload_0
       8: getfield      #9                  // Field world:Lorg/aspectj/weaver/World;
      11: invokestatic  #22                 // Method org/aspectj/weaver/reflect/ReflectionBasedReferenceTypeDelegateFactory.resolveTypeInWorld:(Ljava/lang/Class;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      14: areturn

  public boolean isExposedToWeaver();
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasAnnotation(org.aspectj.weaver.UnresolvedType);
    Code:
       0: iconst_0
       1: ireturn

  public org.aspectj.weaver.AnnotationAJ[] getAnnotations();
    Code:
       0: getstatic     #23                 // Field org/aspectj/weaver/AnnotationAJ.EMPTY_ARRAY:[Lorg/aspectj/weaver/AnnotationAJ;
       3: areturn

  public boolean hasAnnotations();
    Code:
       0: iconst_0
       1: ireturn

  public org.aspectj.weaver.ResolvedType[] getAnnotationTypes();
    Code:
       0: iconst_0
       1: anewarray     #24                 // class org/aspectj/weaver/ResolvedType
       4: areturn

  public org.aspectj.weaver.ResolvedMember[] getDeclaredFields();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fields:[Lorg/aspectj/weaver/ResolvedMember;
       4: ifnonnull     53
       7: aload_0
       8: getfield      #2                  // Field myClass:Ljava/lang/Class;
      11: invokevirtual #25                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      14: astore_1
      15: aload_1
      16: arraylength
      17: anewarray     #26                 // class org/aspectj/weaver/ResolvedMember
      20: astore_2
      21: iconst_0
      22: istore_3
      23: iload_3
      24: aload_1
      25: arraylength
      26: if_icmpge     48
      29: aload_2
      30: iload_3
      31: aload_1
      32: iload_3
      33: aaload
      34: aload_0
      35: getfield      #9                  // Field world:Lorg/aspectj/weaver/World;
      38: invokestatic  #27                 // Method org/aspectj/weaver/reflect/ReflectionBasedReferenceTypeDelegateFactory.createResolvedMember:(Ljava/lang/reflect/Member;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedMember;
      41: aastore
      42: iinc          3, 1
      45: goto          23
      48: aload_0
      49: aload_2
      50: putfield      #4                  // Field fields:[Lorg/aspectj/weaver/ResolvedMember;
      53: aload_0
      54: getfield      #4                  // Field fields:[Lorg/aspectj/weaver/ResolvedMember;
      57: areturn

  public org.aspectj.weaver.ResolvedType[] getDeclaredInterfaces();
    Code:
       0: aload_0
       1: getfield      #6                  // Field interfaces:[Lorg/aspectj/weaver/ResolvedType;
       4: ifnonnull     53
       7: aload_0
       8: getfield      #2                  // Field myClass:Ljava/lang/Class;
      11: invokevirtual #28                 // Method java/lang/Class.getInterfaces:()[Ljava/lang/Class;
      14: astore_1
      15: aload_1
      16: arraylength
      17: anewarray     #24                 // class org/aspectj/weaver/ResolvedType
      20: astore_2
      21: iconst_0
      22: istore_3
      23: iload_3
      24: aload_1
      25: arraylength
      26: if_icmpge     48
      29: aload_2
      30: iload_3
      31: aload_1
      32: iload_3
      33: aaload
      34: aload_0
      35: getfield      #9                  // Field world:Lorg/aspectj/weaver/World;
      38: invokestatic  #22                 // Method org/aspectj/weaver/reflect/ReflectionBasedReferenceTypeDelegateFactory.resolveTypeInWorld:(Ljava/lang/Class;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      41: aastore
      42: iinc          3, 1
      45: goto          23
      48: aload_0
      49: aload_2
      50: putfield      #6                  // Field interfaces:[Lorg/aspectj/weaver/ResolvedType;
      53: aload_0
      54: getfield      #6                  // Field interfaces:[Lorg/aspectj/weaver/ResolvedType;
      57: areturn

  public boolean isCacheable();
    Code:
       0: iconst_1
       1: ireturn

  public org.aspectj.weaver.ResolvedMember[] getDeclaredMethods();
    Code:
       0: aload_0
       1: getfield      #5                  // Field methods:[Lorg/aspectj/weaver/ResolvedMember;
       4: ifnonnull     102
       7: aload_0
       8: getfield      #2                  // Field myClass:Ljava/lang/Class;
      11: invokevirtual #29                 // Method java/lang/Class.getDeclaredMethods:()[Ljava/lang/reflect/Method;
      14: astore_1
      15: aload_0
      16: getfield      #2                  // Field myClass:Ljava/lang/Class;
      19: invokevirtual #30                 // Method java/lang/Class.getDeclaredConstructors:()[Ljava/lang/reflect/Constructor;
      22: astore_2
      23: aload_1
      24: arraylength
      25: aload_2
      26: arraylength
      27: iadd
      28: anewarray     #26                 // class org/aspectj/weaver/ResolvedMember
      31: astore_3
      32: iconst_0
      33: istore        4
      35: iload         4
      37: aload_1
      38: arraylength
      39: if_icmpge     63
      42: aload_3
      43: iload         4
      45: aload_1
      46: iload         4
      48: aaload
      49: aload_0
      50: getfield      #9                  // Field world:Lorg/aspectj/weaver/World;
      53: invokestatic  #27                 // Method org/aspectj/weaver/reflect/ReflectionBasedReferenceTypeDelegateFactory.createResolvedMember:(Ljava/lang/reflect/Member;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedMember;
      56: aastore
      57: iinc          4, 1
      60: goto          35
      63: iconst_0
      64: istore        4
      66: iload         4
      68: aload_2
      69: arraylength
      70: if_icmpge     97
      73: aload_3
      74: iload         4
      76: aload_1
      77: arraylength
      78: iadd
      79: aload_2
      80: iload         4
      82: aaload
      83: aload_0
      84: getfield      #9                  // Field world:Lorg/aspectj/weaver/World;
      87: invokestatic  #27                 // Method org/aspectj/weaver/reflect/ReflectionBasedReferenceTypeDelegateFactory.createResolvedMember:(Ljava/lang/reflect/Member;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedMember;
      90: aastore
      91: iinc          4, 1
      94: goto          66
      97: aload_0
      98: aload_3
      99: putfield      #5                  // Field methods:[Lorg/aspectj/weaver/ResolvedMember;
     102: aload_0
     103: getfield      #5                  // Field methods:[Lorg/aspectj/weaver/ResolvedMember;
     106: areturn

  public org.aspectj.weaver.ResolvedMember[] getDeclaredPointcuts();
    Code:
       0: iconst_0
       1: anewarray     #26                 // class org/aspectj/weaver/ResolvedMember
       4: areturn

  public org.aspectj.weaver.TypeVariable[] getTypeVariables();
    Code:
       0: iconst_0
       1: anewarray     #31                 // class org/aspectj/weaver/TypeVariable
       4: areturn

  public org.aspectj.weaver.patterns.PerClause getPerClause();
    Code:
       0: aconst_null
       1: areturn

  public java.util.Collection<org.aspectj.weaver.patterns.Declare> getDeclares();
    Code:
       0: invokestatic  #32                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: areturn

  public java.util.Collection<org.aspectj.weaver.ConcreteTypeMunger> getTypeMungers();
    Code:
       0: invokestatic  #32                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: areturn

  public java.util.Collection getPrivilegedAccesses();
    Code:
       0: getstatic     #33                 // Field java/util/Collections.EMPTY_SET:Ljava/util/Set;
       3: areturn

  public int getModifiers();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myClass:Ljava/lang/Class;
       4: invokevirtual #34                 // Method java/lang/Class.getModifiers:()I
       7: ireturn

  public org.aspectj.weaver.ResolvedType getSuperclass();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myClass:Ljava/lang/Class;
       4: invokevirtual #35                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
       7: ifnonnull     32
      10: aload_0
      11: getfield      #2                  // Field myClass:Ljava/lang/Class;
      14: ldc           #36                 // class java/lang/Object
      16: if_acmpne     21
      19: aconst_null
      20: areturn
      21: aload_0
      22: getfield      #9                  // Field world:Lorg/aspectj/weaver/World;
      25: getstatic     #37                 // Field org/aspectj/weaver/UnresolvedType.OBJECT:Lorg/aspectj/weaver/UnresolvedType;
      28: invokevirtual #38                 // Method org/aspectj/weaver/World.resolve:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
      31: areturn
      32: aload_0
      33: getfield      #2                  // Field myClass:Ljava/lang/Class;
      36: invokevirtual #35                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      39: aload_0
      40: getfield      #9                  // Field world:Lorg/aspectj/weaver/World;
      43: invokestatic  #22                 // Method org/aspectj/weaver/reflect/ReflectionBasedReferenceTypeDelegateFactory.resolveTypeInWorld:(Ljava/lang/Class;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      46: areturn

  public org.aspectj.weaver.WeaverStateInfo getWeaverState();
    Code:
       0: aconst_null
       1: areturn

  public org.aspectj.weaver.ReferenceType getResolvedTypeX();
    Code:
       0: aload_0
       1: getfield      #8                  // Field resolvedType:Lorg/aspectj/weaver/ReferenceType;
       4: areturn

  public boolean doesNotExposeShadowMungers();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getDeclaredGenericSignature();
    Code:
       0: aconst_null
       1: areturn

  public org.aspectj.weaver.reflect.ReflectionBasedResolvedMemberImpl createResolvedMemberFor(java.lang.reflect.Member);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getSourcefilename();
    Code:
       0: new           #39                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #8                  // Field resolvedType:Lorg/aspectj/weaver/ReferenceType;
      11: invokevirtual #41                 // Method org/aspectj/weaver/ReferenceType.getName:()Ljava/lang/String;
      14: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #43                 // String .class
      19: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn

  public org.aspectj.weaver.ISourceContext getSourceContext();
    Code:
       0: getstatic     #45                 // Field org/aspectj/weaver/SourceContextImpl.UNKNOWN_SOURCE_CONTEXT:Lorg/aspectj/weaver/ISourceContext;
       3: areturn

  public boolean copySourceContext();
    Code:
       0: iconst_1
       1: ireturn

  public int getCompilerVersion();
    Code:
       0: invokestatic  #46                 // Method org/aspectj/weaver/AjAttribute$WeaverVersionInfo.getCurrentWeaverMajorVersion:()S
       3: ireturn

  public void ensureConsistent();
    Code:
       0: return

  public boolean isWeavable();
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasBeenWoven();
    Code:
       0: iconst_0
       1: ireturn

  static {};
    Code:
       0: new           #47                 // class java/net/URLClassLoader
       3: dup
       4: iconst_0
       5: anewarray     #48                 // class java/net/URL
       8: invokespecial #49                 // Method java/net/URLClassLoader."<init>":([Ljava/net/URL;)V
      11: putstatic     #11                 // Field bootClassLoader:Ljava/lang/ClassLoader;
      14: return
}
