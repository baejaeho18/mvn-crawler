Compiled from "ExceptionTable.java"
public final class org.aspectj.apache.bcel.classfile.ExceptionTable extends org.aspectj.apache.bcel.classfile.Attribute {
  private int number_of_exceptions;

  private int[] exception_index_table;

  public org.aspectj.apache.bcel.classfile.ExceptionTable(org.aspectj.apache.bcel.classfile.ExceptionTable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method getNameIndex:()I
       5: aload_1
       6: invokevirtual #2                  // Method getLength:()I
       9: aload_1
      10: invokevirtual #3                  // Method getExceptionIndexTable:()[I
      13: aload_1
      14: invokevirtual #4                  // Method getConstantPool:()Lorg/aspectj/apache/bcel/classfile/ConstantPool;
      17: invokespecial #5                  // Method "<init>":(II[ILorg/aspectj/apache/bcel/classfile/ConstantPool;)V
      20: return

  public org.aspectj.apache.bcel.classfile.ExceptionTable(int, int, int[], org.aspectj.apache.bcel.classfile.ConstantPool);
    Code:
       0: aload_0
       1: iconst_3
       2: iload_1
       3: iload_2
       4: aload         4
       6: invokespecial #7                  // Method org/aspectj/apache/bcel/classfile/Attribute."<init>":(BIILorg/aspectj/apache/bcel/classfile/ConstantPool;)V
       9: aload_0
      10: aload_3
      11: invokevirtual #8                  // Method setExceptionIndexTable:([I)V
      14: return

  org.aspectj.apache.bcel.classfile.ExceptionTable(int, int, java.io.DataInputStream, org.aspectj.apache.bcel.classfile.ConstantPool) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aconst_null
       4: checkcast     #9                  // class "[I"
       7: aload         4
       9: invokespecial #5                  // Method "<init>":(II[ILorg/aspectj/apache/bcel/classfile/ConstantPool;)V
      12: aload_0
      13: aload_3
      14: invokevirtual #10                 // Method java/io/DataInputStream.readUnsignedShort:()I
      17: putfield      #11                 // Field number_of_exceptions:I
      20: aload_0
      21: aload_0
      22: getfield      #11                 // Field number_of_exceptions:I
      25: newarray       int
      27: putfield      #12                 // Field exception_index_table:[I
      30: iconst_0
      31: istore        5
      33: iload         5
      35: aload_0
      36: getfield      #11                 // Field number_of_exceptions:I
      39: if_icmpge     59
      42: aload_0
      43: getfield      #12                 // Field exception_index_table:[I
      46: iload         5
      48: aload_3
      49: invokevirtual #10                 // Method java/io/DataInputStream.readUnsignedShort:()I
      52: iastore
      53: iinc          5, 1
      56: goto          33
      59: return

  public void accept(org.aspectj.apache.bcel.classfile.ClassVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #13,  2           // InterfaceMethod org/aspectj/apache/bcel/classfile/ClassVisitor.visitExceptionTable:(Lorg/aspectj/apache/bcel/classfile/ExceptionTable;)V
       7: return

  public final void dump(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method org/aspectj/apache/bcel/classfile/Attribute.dump:(Ljava/io/DataOutputStream;)V
       5: aload_1
       6: aload_0
       7: getfield      #11                 // Field number_of_exceptions:I
      10: invokevirtual #15                 // Method java/io/DataOutputStream.writeShort:(I)V
      13: iconst_0
      14: istore_2
      15: iload_2
      16: aload_0
      17: getfield      #11                 // Field number_of_exceptions:I
      20: if_icmpge     39
      23: aload_1
      24: aload_0
      25: getfield      #12                 // Field exception_index_table:[I
      28: iload_2
      29: iaload
      30: invokevirtual #15                 // Method java/io/DataOutputStream.writeShort:(I)V
      33: iinc          2, 1
      36: goto          15
      39: return

  public final int[] getExceptionIndexTable();
    Code:
       0: aload_0
       1: getfield      #12                 // Field exception_index_table:[I
       4: areturn

  public final int getNumberOfExceptions();
    Code:
       0: aload_0
       1: getfield      #11                 // Field number_of_exceptions:I
       4: ireturn

  public final java.lang.String[] getExceptionNames();
    Code:
       0: aload_0
       1: getfield      #11                 // Field number_of_exceptions:I
       4: anewarray     #16                 // class java/lang/String
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: getfield      #11                 // Field number_of_exceptions:I
      15: if_icmpge     49
      18: aload_1
      19: iload_2
      20: aload_0
      21: getfield      #17                 // Field cpool:Lorg/aspectj/apache/bcel/classfile/ConstantPool;
      24: aload_0
      25: getfield      #12                 // Field exception_index_table:[I
      28: iload_2
      29: iaload
      30: bipush        7
      32: invokevirtual #18                 // Method org/aspectj/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;
      35: bipush        47
      37: bipush        46
      39: invokevirtual #19                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      42: aastore
      43: iinc          2, 1
      46: goto          10
      49: aload_1
      50: areturn

  public final void setExceptionIndexTable(int[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field exception_index_table:[I
       5: aload_0
       6: aload_1
       7: ifnonnull     14
      10: iconst_0
      11: goto          16
      14: aload_1
      15: arraylength
      16: putfield      #11                 // Field number_of_exceptions:I
      19: return

  public final java.lang.String toString();
    Code:
       0: new           #20                 // class java/lang/StringBuffer
       3: dup
       4: ldc           #21                 // String
       6: invokespecial #22                 // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: iconst_0
      11: istore_3
      12: iload_3
      13: aload_0
      14: getfield      #11                 // Field number_of_exceptions:I
      17: if_icmpge     69
      20: aload_0
      21: getfield      #17                 // Field cpool:Lorg/aspectj/apache/bcel/classfile/ConstantPool;
      24: aload_0
      25: getfield      #12                 // Field exception_index_table:[I
      28: iload_3
      29: iaload
      30: bipush        7
      32: invokevirtual #18                 // Method org/aspectj/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;
      35: astore_2
      36: aload_1
      37: aload_2
      38: iconst_0
      39: invokestatic  #23                 // Method org/aspectj/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;
      42: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      45: pop
      46: iload_3
      47: aload_0
      48: getfield      #11                 // Field number_of_exceptions:I
      51: iconst_1
      52: isub
      53: if_icmpge     63
      56: aload_1
      57: ldc           #25                 // String ,
      59: invokevirtual #24                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      62: pop
      63: iinc          3, 1
      66: goto          12
      69: aload_1
      70: invokevirtual #26                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      73: areturn
}
