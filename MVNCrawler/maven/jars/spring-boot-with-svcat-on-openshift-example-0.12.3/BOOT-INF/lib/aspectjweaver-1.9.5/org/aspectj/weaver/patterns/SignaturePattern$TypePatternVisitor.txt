Compiled from "SignaturePattern.java"
class org.aspectj.weaver.patterns.SignaturePattern$TypePatternVisitor extends org.aspectj.weaver.patterns.AbstractPatternNodeVisitor {
  private org.aspectj.weaver.patterns.IScope scope;

  private java.util.Map<org.aspectj.weaver.patterns.ExactAnnotationTypePattern, org.aspectj.weaver.AnnotationTargetKind[]> incorrectTargetKinds;

  private boolean targetsOtherThanTypeAllowed;

  private boolean parameterTargettingAnnotationsAllowed;

  final org.aspectj.weaver.patterns.SignaturePattern this$0;

  public org.aspectj.weaver.patterns.SignaturePattern$TypePatternVisitor(org.aspectj.weaver.patterns.SignaturePattern, org.aspectj.weaver.patterns.IScope, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/aspectj/weaver/patterns/SignaturePattern;
       5: aload_0
       6: invokespecial #2                  // Method org/aspectj/weaver/patterns/AbstractPatternNodeVisitor."<init>":()V
       9: aload_0
      10: new           #3                  // class java/util/HashMap
      13: dup
      14: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      17: putfield      #5                  // Field incorrectTargetKinds:Ljava/util/Map;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field scope:Lorg/aspectj/weaver/patterns/IScope;
      25: aload_0
      26: iload_3
      27: putfield      #7                  // Field targetsOtherThanTypeAllowed:Z
      30: aload_0
      31: iload         4
      33: putfield      #8                  // Field parameterTargettingAnnotationsAllowed:Z
      36: return

  public java.lang.Object visit(org.aspectj.weaver.patterns.WildAnnotationTypePattern, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method org/aspectj/weaver/patterns/WildAnnotationTypePattern.getTypePattern:()Lorg/aspectj/weaver/patterns/TypePattern;
       4: aload_0
       5: aload_2
       6: invokevirtual #10                 // Method org/aspectj/weaver/patterns/TypePattern.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: areturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.ExactAnnotationTypePattern, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method org/aspectj/weaver/patterns/ExactAnnotationTypePattern.getAnnotationType:()Lorg/aspectj/weaver/UnresolvedType;
       4: aload_0
       5: getfield      #6                  // Field scope:Lorg/aspectj/weaver/patterns/IScope;
       8: invokeinterface #12,  1           // InterfaceMethod org/aspectj/weaver/patterns/IScope.getWorld:()Lorg/aspectj/weaver/World;
      13: invokevirtual #13                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      16: astore_3
      17: aload_0
      18: getfield      #7                  // Field targetsOtherThanTypeAllowed:Z
      21: ifeq          172
      24: aload_3
      25: invokevirtual #14                 // Method org/aspectj/weaver/ResolvedType.getAnnotationTargetKinds:()[Lorg/aspectj/weaver/AnnotationTargetKind;
      28: astore        4
      30: aload         4
      32: ifnonnull     37
      35: aload_2
      36: areturn
      37: new           #15                 // class java/util/ArrayList
      40: dup
      41: invokespecial #16                 // Method java/util/ArrayList."<init>":()V
      44: astore        5
      46: iconst_0
      47: istore        6
      49: iload         6
      51: aload         4
      53: arraylength
      54: if_icmpge     125
      57: aload         4
      59: iload         6
      61: aaload
      62: invokevirtual #17                 // Method org/aspectj/weaver/AnnotationTargetKind.getName:()Ljava/lang/String;
      65: aload_0
      66: getfield      #1                  // Field this$0:Lorg/aspectj/weaver/patterns/SignaturePattern;
      69: invokestatic  #18                 // Method org/aspectj/weaver/patterns/SignaturePattern.access$000:(Lorg/aspectj/weaver/patterns/SignaturePattern;)Lorg/aspectj/weaver/MemberKind;
      72: invokevirtual #19                 // Method org/aspectj/weaver/MemberKind.getName:()Ljava/lang/String;
      75: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      78: ifne          104
      81: aload         4
      83: iload         6
      85: aaload
      86: invokevirtual #17                 // Method org/aspectj/weaver/AnnotationTargetKind.getName:()Ljava/lang/String;
      89: ldc           #21                 // String PARAMETER
      91: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      94: ifeq          106
      97: aload_1
      98: invokevirtual #22                 // Method org/aspectj/weaver/patterns/ExactAnnotationTypePattern.isForParameterAnnotationMatch:()Z
     101: ifeq          106
     104: aload_2
     105: areturn
     106: aload         5
     108: aload         4
     110: iload         6
     112: aaload
     113: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     118: pop
     119: iinc          6, 1
     122: goto          49
     125: aload         5
     127: invokeinterface #24,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     132: ifeq          137
     135: aload_2
     136: areturn
     137: aload         5
     139: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
     144: anewarray     #26                 // class org/aspectj/weaver/AnnotationTargetKind
     147: astore        6
     149: aload_0
     150: getfield      #5                  // Field incorrectTargetKinds:Ljava/util/Map;
     153: aload_1
     154: aload         5
     156: aload         6
     158: invokeinterface #27,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     163: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     168: pop
     169: goto          265
     172: aload_0
     173: getfield      #7                  // Field targetsOtherThanTypeAllowed:Z
     176: ifne          265
     179: aload_3
     180: invokevirtual #29                 // Method org/aspectj/weaver/ResolvedType.canAnnotationTargetType:()Z
     183: ifne          265
     186: aload_3
     187: invokevirtual #14                 // Method org/aspectj/weaver/ResolvedType.getAnnotationTargetKinds:()[Lorg/aspectj/weaver/AnnotationTargetKind;
     190: astore        4
     192: aload         4
     194: ifnonnull     199
     197: aload_2
     198: areturn
     199: aload_0
     200: getfield      #8                  // Field parameterTargettingAnnotationsAllowed:Z
     203: ifeq          252
     206: iconst_0
     207: istore        5
     209: iload         5
     211: aload         4
     213: arraylength
     214: if_icmpge     252
     217: aload         4
     219: iload         5
     221: aaload
     222: astore        6
     224: aload         6
     226: invokevirtual #17                 // Method org/aspectj/weaver/AnnotationTargetKind.getName:()Ljava/lang/String;
     229: ldc           #21                 // String PARAMETER
     231: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     234: ifeq          246
     237: aload_1
     238: invokevirtual #22                 // Method org/aspectj/weaver/patterns/ExactAnnotationTypePattern.isForParameterAnnotationMatch:()Z
     241: ifeq          246
     244: aload_2
     245: areturn
     246: iinc          5, 1
     249: goto          209
     252: aload_0
     253: getfield      #5                  // Field incorrectTargetKinds:Ljava/util/Map;
     256: aload_1
     257: aload         4
     259: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     264: pop
     265: aload_2
     266: areturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.ExactTypePattern, java.lang.Object);
    Code:
       0: new           #30                 // class org/aspectj/weaver/patterns/ExactAnnotationTypePattern
       3: dup
       4: aload_1
       5: invokevirtual #31                 // Method org/aspectj/weaver/patterns/ExactTypePattern.getExactType:()Lorg/aspectj/weaver/UnresolvedType;
       8: aload_0
       9: getfield      #6                  // Field scope:Lorg/aspectj/weaver/patterns/IScope;
      12: invokeinterface #12,  1           // InterfaceMethod org/aspectj/weaver/patterns/IScope.getWorld:()Lorg/aspectj/weaver/World;
      17: invokevirtual #13                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      20: aconst_null
      21: invokespecial #32                 // Method org/aspectj/weaver/patterns/ExactAnnotationTypePattern."<init>":(Lorg/aspectj/weaver/UnresolvedType;Ljava/util/Map;)V
      24: astore_3
      25: aload_3
      26: aload_0
      27: aload_2
      28: invokevirtual #33                 // Method org/aspectj/weaver/patterns/ExactAnnotationTypePattern.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: aload_2
      33: areturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.AndTypePattern, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #34                 // Method org/aspectj/weaver/patterns/AndTypePattern.getLeft:()Lorg/aspectj/weaver/patterns/TypePattern;
       4: aload_0
       5: aload_2
       6: invokevirtual #10                 // Method org/aspectj/weaver/patterns/TypePattern.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: invokevirtual #35                 // Method org/aspectj/weaver/patterns/AndTypePattern.getRight:()Lorg/aspectj/weaver/patterns/TypePattern;
      14: aload_0
      15: aload_2
      16: invokevirtual #10                 // Method org/aspectj/weaver/patterns/TypePattern.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_1
      21: areturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.OrTypePattern, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method org/aspectj/weaver/patterns/OrTypePattern.getLeft:()Lorg/aspectj/weaver/patterns/TypePattern;
       4: aload_0
       5: aload_2
       6: invokevirtual #10                 // Method org/aspectj/weaver/patterns/TypePattern.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: invokevirtual #37                 // Method org/aspectj/weaver/patterns/OrTypePattern.getRight:()Lorg/aspectj/weaver/patterns/TypePattern;
      14: aload_0
      15: aload_2
      16: invokevirtual #10                 // Method org/aspectj/weaver/patterns/TypePattern.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_1
      21: areturn

  public java.lang.Object visit(org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #38                 // Method org/aspectj/weaver/patterns/AnyWithAnnotationTypePattern.getAnnotationPattern:()Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       4: aload_0
       5: aload_2
       6: invokevirtual #39                 // Method org/aspectj/weaver/patterns/AnnotationTypePattern.accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: areturn

  public boolean containedIncorrectTargetKind();
    Code:
       0: aload_0
       1: getfield      #5                  // Field incorrectTargetKinds:Ljava/util/Map;
       4: invokeinterface #40,  1           // InterfaceMethod java/util/Map.size:()I
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.util.Map<org.aspectj.weaver.patterns.ExactAnnotationTypePattern, org.aspectj.weaver.AnnotationTargetKind[]> getIncorrectTargetKinds();
    Code:
       0: aload_0
       1: getfield      #5                  // Field incorrectTargetKinds:Ljava/util/Map;
       4: areturn
}
