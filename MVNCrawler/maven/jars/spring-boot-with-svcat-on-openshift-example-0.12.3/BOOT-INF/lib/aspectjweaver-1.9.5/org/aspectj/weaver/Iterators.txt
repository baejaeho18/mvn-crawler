Compiled from "Iterators.java"
public final class org.aspectj.weaver.Iterators {
  private org.aspectj.weaver.Iterators();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> org.aspectj.weaver.Iterators$Filter<T> dupFilter();
    Code:
       0: new           #2                  // class org/aspectj/weaver/Iterators$1
       3: dup
       4: invokespecial #3                  // Method org/aspectj/weaver/Iterators$1."<init>":()V
       7: areturn

  public static <T> java.util.Iterator<T> array(T[]);
    Code:
       0: new           #4                  // class org/aspectj/weaver/Iterators$2
       3: dup
       4: aload_0
       5: invokespecial #5                  // Method org/aspectj/weaver/Iterators$2."<init>":([Ljava/lang/Object;)V
       8: areturn

  public static java.util.Iterator<org.aspectj.weaver.ResolvedType> array(org.aspectj.weaver.ResolvedType[], boolean);
    Code:
       0: new           #6                  // class org/aspectj/weaver/Iterators$3
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #7                  // Method org/aspectj/weaver/Iterators$3."<init>":([Lorg/aspectj/weaver/ResolvedType;Z)V
       9: areturn

  public static <A, B> java.util.Iterator<B> mapOver(java.util.Iterator<A>, org.aspectj.weaver.Iterators$Getter<A, B>);
    Code:
       0: new           #8                  // class org/aspectj/weaver/Iterators$4
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #9                  // Method org/aspectj/weaver/Iterators$4."<init>":(Ljava/util/Iterator;Lorg/aspectj/weaver/Iterators$Getter;)V
       9: areturn

  public static <A> java.util.Iterator<A> recur(A, org.aspectj.weaver.Iterators$Getter<A, A>);
    Code:
       0: new           #10                 // class org/aspectj/weaver/Iterators$5
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #11                 // Method org/aspectj/weaver/Iterators$5."<init>":(Ljava/lang/Object;Lorg/aspectj/weaver/Iterators$Getter;)V
       9: areturn

  public static <T> java.util.Iterator<T> append(java.util.Iterator<T>, java.util.Iterator<T>);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       6: ifne          11
       9: aload_0
      10: areturn
      11: aload_0
      12: aload_1
      13: invokestatic  #13                 // Method append1:(Ljava/util/Iterator;Ljava/util/Iterator;)Ljava/util/Iterator;
      16: areturn

  public static <T> java.util.Iterator<T> append1(java.util.Iterator<T>, java.util.Iterator<T>);
    Code:
       0: aload_0
       1: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       6: ifne          11
       9: aload_1
      10: areturn
      11: new           #14                 // class org/aspectj/weaver/Iterators$6
      14: dup
      15: aload_0
      16: aload_1
      17: invokespecial #15                 // Method org/aspectj/weaver/Iterators$6."<init>":(Ljava/util/Iterator;Ljava/util/Iterator;)V
      20: areturn

  public static <T> java.util.Iterator<T> snoc(java.util.Iterator<T>, T);
    Code:
       0: new           #16                 // class org/aspectj/weaver/Iterators$7
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #17                 // Method org/aspectj/weaver/Iterators$7."<init>":(Ljava/lang/Object;Ljava/util/Iterator;)V
       9: areturn

  public static <T> java.util.Iterator<T> one(T);
    Code:
       0: new           #18                 // class org/aspectj/weaver/Iterators$8
       3: dup
       4: aload_0
       5: invokespecial #19                 // Method org/aspectj/weaver/Iterators$8."<init>":(Ljava/lang/Object;)V
       8: areturn
}
