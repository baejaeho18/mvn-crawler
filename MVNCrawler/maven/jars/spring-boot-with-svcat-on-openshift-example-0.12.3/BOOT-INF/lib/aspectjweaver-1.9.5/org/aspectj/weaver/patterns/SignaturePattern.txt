Compiled from "SignaturePattern.java"
public class org.aspectj.weaver.patterns.SignaturePattern extends org.aspectj.weaver.patterns.PatternNode implements org.aspectj.weaver.patterns.ISignaturePattern {
  private org.aspectj.weaver.MemberKind kind;

  private org.aspectj.weaver.patterns.ModifiersPattern modifiers;

  private org.aspectj.weaver.patterns.TypePattern returnType;

  private org.aspectj.weaver.patterns.TypePattern declaringType;

  private org.aspectj.weaver.patterns.NamePattern name;

  private org.aspectj.weaver.patterns.TypePatternList parameterTypes;

  private int bits;

  private static final int PARAMETER_ANNOTATION_MATCHING;

  private static final int CHECKED_FOR_PARAMETER_ANNOTATION_MATCHING;

  private org.aspectj.weaver.patterns.ThrowsPattern throwsPattern;

  private org.aspectj.weaver.patterns.AnnotationTypePattern annotationPattern;

  private transient int hashcode;

  private transient boolean isExactDeclaringTypePattern;

  public org.aspectj.weaver.patterns.SignaturePattern(org.aspectj.weaver.MemberKind, org.aspectj.weaver.patterns.ModifiersPattern, org.aspectj.weaver.patterns.TypePattern, org.aspectj.weaver.patterns.TypePattern, org.aspectj.weaver.patterns.NamePattern, org.aspectj.weaver.patterns.TypePatternList, org.aspectj.weaver.patterns.ThrowsPattern, org.aspectj.weaver.patterns.AnnotationTypePattern);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/aspectj/weaver/patterns/PatternNode."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field bits:I
       9: aload_0
      10: iconst_m1
      11: putfield      #4                  // Field hashcode:I
      14: aload_0
      15: iconst_0
      16: putfield      #5                  // Field isExactDeclaringTypePattern:Z
      19: aload_0
      20: aload_1
      21: putfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
      24: aload_0
      25: aload_2
      26: putfield      #6                  // Field modifiers:Lorg/aspectj/weaver/patterns/ModifiersPattern;
      29: aload_0
      30: aload_3
      31: putfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
      34: aload_0
      35: aload         5
      37: putfield      #8                  // Field name:Lorg/aspectj/weaver/patterns/NamePattern;
      40: aload_0
      41: aload         4
      43: putfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      46: aload_0
      47: aload         6
      49: putfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      52: aload_0
      53: aload         7
      55: putfield      #11                 // Field throwsPattern:Lorg/aspectj/weaver/patterns/ThrowsPattern;
      58: aload_0
      59: aload         8
      61: putfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      64: aload_0
      65: aload         4
      67: instanceof    #13                 // class org/aspectj/weaver/patterns/ExactTypePattern
      70: putfield      #5                  // Field isExactDeclaringTypePattern:Z
      73: return

  public org.aspectj.weaver.patterns.SignaturePattern resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings);
    Code:
       0: aload_0
       1: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
       4: ifnull        32
       7: aload_0
       8: aload_0
       9: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
      12: aload_1
      13: aload_2
      14: iconst_0
      15: iconst_0
      16: invokevirtual #14                 // Method org/aspectj/weaver/patterns/TypePattern.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;ZZ)Lorg/aspectj/weaver/patterns/TypePattern;
      19: putfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
      22: aload_0
      23: aload_0
      24: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
      27: aload_1
      28: iconst_0
      29: invokespecial #15                 // Method checkForIncorrectTargetKind:(Lorg/aspectj/weaver/patterns/PatternNode;Lorg/aspectj/weaver/patterns/IScope;Z)V
      32: aload_0
      33: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      36: ifnull        75
      39: aload_0
      40: aload_0
      41: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      44: aload_1
      45: aload_2
      46: iconst_0
      47: iconst_0
      48: invokevirtual #14                 // Method org/aspectj/weaver/patterns/TypePattern.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;ZZ)Lorg/aspectj/weaver/patterns/TypePattern;
      51: putfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      54: aload_0
      55: aload_0
      56: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      59: aload_1
      60: iconst_0
      61: invokespecial #15                 // Method checkForIncorrectTargetKind:(Lorg/aspectj/weaver/patterns/PatternNode;Lorg/aspectj/weaver/patterns/IScope;Z)V
      64: aload_0
      65: aload_0
      66: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      69: instanceof    #13                 // class org/aspectj/weaver/patterns/ExactTypePattern
      72: putfield      #5                  // Field isExactDeclaringTypePattern:Z
      75: aload_0
      76: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      79: ifnull        108
      82: aload_0
      83: aload_0
      84: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      87: aload_1
      88: aload_2
      89: iconst_0
      90: iconst_0
      91: invokevirtual #16                 // Method org/aspectj/weaver/patterns/TypePatternList.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;ZZ)Lorg/aspectj/weaver/patterns/TypePatternList;
      94: putfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      97: aload_0
      98: aload_0
      99: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
     102: aload_1
     103: iconst_0
     104: iconst_1
     105: invokespecial #17                 // Method checkForIncorrectTargetKind:(Lorg/aspectj/weaver/patterns/PatternNode;Lorg/aspectj/weaver/patterns/IScope;ZZ)V
     108: aload_0
     109: getfield      #11                 // Field throwsPattern:Lorg/aspectj/weaver/patterns/ThrowsPattern;
     112: ifnull        166
     115: aload_0
     116: aload_0
     117: getfield      #11                 // Field throwsPattern:Lorg/aspectj/weaver/patterns/ThrowsPattern;
     120: aload_1
     121: aload_2
     122: invokevirtual #18                 // Method org/aspectj/weaver/patterns/ThrowsPattern.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;)Lorg/aspectj/weaver/patterns/ThrowsPattern;
     125: putfield      #11                 // Field throwsPattern:Lorg/aspectj/weaver/patterns/ThrowsPattern;
     128: aload_0
     129: getfield      #11                 // Field throwsPattern:Lorg/aspectj/weaver/patterns/ThrowsPattern;
     132: invokevirtual #19                 // Method org/aspectj/weaver/patterns/ThrowsPattern.getForbidden:()Lorg/aspectj/weaver/patterns/TypePatternList;
     135: invokevirtual #20                 // Method org/aspectj/weaver/patterns/TypePatternList.getTypePatterns:()[Lorg/aspectj/weaver/patterns/TypePattern;
     138: arraylength
     139: ifgt          156
     142: aload_0
     143: getfield      #11                 // Field throwsPattern:Lorg/aspectj/weaver/patterns/ThrowsPattern;
     146: invokevirtual #21                 // Method org/aspectj/weaver/patterns/ThrowsPattern.getRequired:()Lorg/aspectj/weaver/patterns/TypePatternList;
     149: invokevirtual #20                 // Method org/aspectj/weaver/patterns/TypePatternList.getTypePatterns:()[Lorg/aspectj/weaver/patterns/TypePattern;
     152: arraylength
     153: ifle          166
     156: aload_0
     157: aload_0
     158: getfield      #11                 // Field throwsPattern:Lorg/aspectj/weaver/patterns/ThrowsPattern;
     161: aload_1
     162: iconst_0
     163: invokespecial #15                 // Method checkForIncorrectTargetKind:(Lorg/aspectj/weaver/patterns/PatternNode;Lorg/aspectj/weaver/patterns/IScope;Z)V
     166: aload_0
     167: getfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
     170: ifnull        197
     173: aload_0
     174: aload_0
     175: getfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
     178: aload_1
     179: aload_2
     180: iconst_0
     181: invokevirtual #22                 // Method org/aspectj/weaver/patterns/AnnotationTypePattern.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;Z)Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
     184: putfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
     187: aload_0
     188: aload_0
     189: getfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
     192: aload_1
     193: iconst_1
     194: invokespecial #15                 // Method checkForIncorrectTargetKind:(Lorg/aspectj/weaver/patterns/PatternNode;Lorg/aspectj/weaver/patterns/IScope;Z)V
     197: aload_0
     198: iconst_m1
     199: putfield      #4                  // Field hashcode:I
     202: aload_0
     203: areturn

  private void checkForIncorrectTargetKind(org.aspectj.weaver.patterns.PatternNode, org.aspectj.weaver.patterns.IScope, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iconst_0
       5: invokespecial #17                 // Method checkForIncorrectTargetKind:(Lorg/aspectj/weaver/patterns/PatternNode;Lorg/aspectj/weaver/patterns/IScope;ZZ)V
       8: return

  private void checkForIncorrectTargetKind(org.aspectj.weaver.patterns.PatternNode, org.aspectj.weaver.patterns.IScope, boolean, boolean);
    Code:
       0: aload_2
       1: invokeinterface #23,  1           // InterfaceMethod org/aspectj/weaver/patterns/IScope.getWorld:()Lorg/aspectj/weaver/World;
       6: invokevirtual #24                 // Method org/aspectj/weaver/World.isInJava5Mode:()Z
       9: ifeq          34
      12: aload_2
      13: invokeinterface #23,  1           // InterfaceMethod org/aspectj/weaver/patterns/IScope.getWorld:()Lorg/aspectj/weaver/World;
      18: invokevirtual #25                 // Method org/aspectj/weaver/World.getLint:()Lorg/aspectj/weaver/Lint;
      21: getfield      #26                 // Field org/aspectj/weaver/Lint.unmatchedTargetKind:Lorg/aspectj/weaver/Lint$Kind;
      24: ifnull        34
      27: aload_1
      28: instanceof    #27                 // class org/aspectj/weaver/patterns/AnyTypePattern
      31: ifeq          35
      34: return
      35: aload_1
      36: instanceof    #28                 // class org/aspectj/weaver/patterns/ExactAnnotationTypePattern
      39: ifeq          126
      42: aload_1
      43: checkcast     #28                 // class org/aspectj/weaver/patterns/ExactAnnotationTypePattern
      46: invokevirtual #29                 // Method org/aspectj/weaver/patterns/ExactAnnotationTypePattern.getAnnotationType:()Lorg/aspectj/weaver/UnresolvedType;
      49: aload_2
      50: invokeinterface #23,  1           // InterfaceMethod org/aspectj/weaver/patterns/IScope.getWorld:()Lorg/aspectj/weaver/World;
      55: invokevirtual #30                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      58: astore        5
      60: iload_3
      61: ifeq          89
      64: aload         5
      66: invokevirtual #31                 // Method org/aspectj/weaver/ResolvedType.getAnnotationTargetKinds:()[Lorg/aspectj/weaver/AnnotationTargetKind;
      69: astore        6
      71: aload         6
      73: ifnonnull     77
      76: return
      77: aload_0
      78: aload         6
      80: aload_1
      81: aload_2
      82: iconst_1
      83: invokespecial #32                 // Method reportUnmatchedTargetKindMessage:([Lorg/aspectj/weaver/AnnotationTargetKind;Lorg/aspectj/weaver/patterns/PatternNode;Lorg/aspectj/weaver/patterns/IScope;Z)V
      86: goto          123
      89: iload_3
      90: ifne          123
      93: aload         5
      95: invokevirtual #33                 // Method org/aspectj/weaver/ResolvedType.canAnnotationTargetType:()Z
      98: ifne          123
     101: aload         5
     103: invokevirtual #31                 // Method org/aspectj/weaver/ResolvedType.getAnnotationTargetKinds:()[Lorg/aspectj/weaver/AnnotationTargetKind;
     106: astore        6
     108: aload         6
     110: ifnonnull     114
     113: return
     114: aload_0
     115: aload         6
     117: aload_1
     118: aload_2
     119: iconst_0
     120: invokespecial #32                 // Method reportUnmatchedTargetKindMessage:([Lorg/aspectj/weaver/AnnotationTargetKind;Lorg/aspectj/weaver/patterns/PatternNode;Lorg/aspectj/weaver/patterns/IScope;Z)V
     123: goto          229
     126: new           #34                 // class org/aspectj/weaver/patterns/SignaturePattern$TypePatternVisitor
     129: dup
     130: aload_0
     131: aload_2
     132: iload_3
     133: iload         4
     135: invokespecial #35                 // Method org/aspectj/weaver/patterns/SignaturePattern$TypePatternVisitor."<init>":(Lorg/aspectj/weaver/patterns/SignaturePattern;Lorg/aspectj/weaver/patterns/IScope;ZZ)V
     138: astore        5
     140: aload_1
     141: aload         5
     143: aconst_null
     144: invokevirtual #36                 // Method org/aspectj/weaver/patterns/PatternNode.traverse:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
     147: pop
     148: aload         5
     150: invokevirtual #37                 // Method org/aspectj/weaver/patterns/SignaturePattern$TypePatternVisitor.containedIncorrectTargetKind:()Z
     153: ifeq          229
     156: aload         5
     158: invokevirtual #38                 // Method org/aspectj/weaver/patterns/SignaturePattern$TypePatternVisitor.getIncorrectTargetKinds:()Ljava/util/Map;
     161: invokeinterface #39,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     166: astore        6
     168: aload         6
     170: invokeinterface #40,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     175: astore        7
     177: aload         7
     179: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     184: ifeq          229
     187: aload         7
     189: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     194: checkcast     #43                 // class org/aspectj/weaver/patterns/PatternNode
     197: astore        8
     199: aload         5
     201: invokevirtual #38                 // Method org/aspectj/weaver/patterns/SignaturePattern$TypePatternVisitor.getIncorrectTargetKinds:()Ljava/util/Map;
     204: aload         8
     206: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     211: checkcast     #45                 // class "[Lorg/aspectj/weaver/AnnotationTargetKind;"
     214: astore        9
     216: aload_0
     217: aload         9
     219: aload         8
     221: aload_2
     222: iconst_0
     223: invokespecial #32                 // Method reportUnmatchedTargetKindMessage:([Lorg/aspectj/weaver/AnnotationTargetKind;Lorg/aspectj/weaver/patterns/PatternNode;Lorg/aspectj/weaver/patterns/IScope;Z)V
     226: goto          177
     229: return

  private void reportUnmatchedTargetKindMessage(org.aspectj.weaver.AnnotationTargetKind[], org.aspectj.weaver.patterns.PatternNode, org.aspectj.weaver.patterns.IScope, boolean);
    Code:
       0: new           #46                 // class java/lang/StringBuffer
       3: dup
       4: ldc           #47                 // String {
       6: invokespecial #48                 // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
       9: astore        5
      11: iconst_0
      12: istore        6
      14: iload         6
      16: aload_1
      17: arraylength
      18: if_icmpge     137
      21: aload_1
      22: iload         6
      24: aaload
      25: astore        7
      27: iload         4
      29: ifeq          51
      32: aload_0
      33: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
      36: invokevirtual #49                 // Method org/aspectj/weaver/MemberKind.getName:()Ljava/lang/String;
      39: aload         7
      41: invokevirtual #50                 // Method org/aspectj/weaver/AnnotationTargetKind.getName:()Ljava/lang/String;
      44: invokevirtual #51                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifeq          51
      50: return
      51: iload         6
      53: aload_1
      54: arraylength
      55: iconst_1
      56: isub
      57: if_icmpge     97
      60: aload         5
      62: new           #52                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #54                 // String ElementType.
      71: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload         7
      76: invokevirtual #50                 // Method org/aspectj/weaver/AnnotationTargetKind.getName:()Ljava/lang/String;
      79: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: ldc           #56                 // String ,
      84: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      93: pop
      94: goto          131
      97: aload         5
      99: new           #52                 // class java/lang/StringBuilder
     102: dup
     103: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
     106: ldc           #54                 // String ElementType.
     108: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload         7
     113: invokevirtual #50                 // Method org/aspectj/weaver/AnnotationTargetKind.getName:()Ljava/lang/String;
     116: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: ldc           #59                 // String }
     121: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     130: pop
     131: iinc          6, 1
     134: goto          14
     137: aload_3
     138: invokeinterface #23,  1           // InterfaceMethod org/aspectj/weaver/patterns/IScope.getWorld:()Lorg/aspectj/weaver/World;
     143: invokevirtual #25                 // Method org/aspectj/weaver/World.getLint:()Lorg/aspectj/weaver/Lint;
     146: getfield      #26                 // Field org/aspectj/weaver/Lint.unmatchedTargetKind:Lorg/aspectj/weaver/Lint$Kind;
     149: iconst_2
     150: anewarray     #60                 // class java/lang/String
     153: dup
     154: iconst_0
     155: aload_2
     156: invokevirtual #61                 // Method java/lang/Object.toString:()Ljava/lang/String;
     159: aastore
     160: dup
     161: iconst_1
     162: aload         5
     164: invokevirtual #62                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     167: aastore
     168: aload_0
     169: invokevirtual #63                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
     172: iconst_0
     173: anewarray     #64                 // class org/aspectj/bridge/ISourceLocation
     176: invokevirtual #65                 // Method org/aspectj/weaver/Lint$Kind.signal:([Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;[Lorg/aspectj/bridge/ISourceLocation;)V
     179: return

  public void postRead(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
       4: ifnull        15
       7: aload_0
       8: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
      11: aload_1
      12: invokevirtual #66                 // Method org/aspectj/weaver/patterns/TypePattern.postRead:(Lorg/aspectj/weaver/ResolvedType;)V
      15: aload_0
      16: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      19: ifnull        30
      22: aload_0
      23: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      26: aload_1
      27: invokevirtual #66                 // Method org/aspectj/weaver/patterns/TypePattern.postRead:(Lorg/aspectj/weaver/ResolvedType;)V
      30: aload_0
      31: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      34: ifnull        45
      37: aload_0
      38: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      41: aload_1
      42: invokevirtual #67                 // Method org/aspectj/weaver/patterns/TypePatternList.postRead:(Lorg/aspectj/weaver/ResolvedType;)V
      45: return

  public org.aspectj.weaver.patterns.SignaturePattern parameterizeWith(java.util.Map<java.lang.String, org.aspectj.weaver.UnresolvedType>, org.aspectj.weaver.World);
    Code:
       0: new           #68                 // class org/aspectj/weaver/patterns/SignaturePattern
       3: dup
       4: aload_0
       5: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
       8: aload_0
       9: getfield      #6                  // Field modifiers:Lorg/aspectj/weaver/patterns/ModifiersPattern;
      12: aload_0
      13: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
      16: aload_1
      17: aload_2
      18: invokevirtual #69                 // Method org/aspectj/weaver/patterns/TypePattern.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/TypePattern;
      21: aload_0
      22: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      25: aload_1
      26: aload_2
      27: invokevirtual #69                 // Method org/aspectj/weaver/patterns/TypePattern.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/TypePattern;
      30: aload_0
      31: getfield      #8                  // Field name:Lorg/aspectj/weaver/patterns/NamePattern;
      34: aload_0
      35: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      38: aload_1
      39: aload_2
      40: invokevirtual #70                 // Method org/aspectj/weaver/patterns/TypePatternList.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/TypePatternList;
      43: aload_0
      44: getfield      #11                 // Field throwsPattern:Lorg/aspectj/weaver/patterns/ThrowsPattern;
      47: aload_1
      48: aload_2
      49: invokevirtual #71                 // Method org/aspectj/weaver/patterns/ThrowsPattern.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/ThrowsPattern;
      52: aload_0
      53: getfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      56: aload_1
      57: aload_2
      58: invokevirtual #72                 // Method org/aspectj/weaver/patterns/AnnotationTypePattern.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      61: invokespecial #73                 // Method "<init>":(Lorg/aspectj/weaver/MemberKind;Lorg/aspectj/weaver/patterns/ModifiersPattern;Lorg/aspectj/weaver/patterns/TypePattern;Lorg/aspectj/weaver/patterns/TypePattern;Lorg/aspectj/weaver/patterns/NamePattern;Lorg/aspectj/weaver/patterns/TypePatternList;Lorg/aspectj/weaver/patterns/ThrowsPattern;Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)V
      64: astore_3
      65: aload_3
      66: aload_0
      67: invokevirtual #74                 // Method copyLocationFrom:(Lorg/aspectj/weaver/patterns/PatternNode;)V
      70: aload_3
      71: areturn

  public boolean matches(org.aspectj.weaver.Member, org.aspectj.weaver.World, boolean);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
      10: aload_1
      11: invokeinterface #75,  1           // InterfaceMethod org/aspectj/weaver/Member.getKind:()Lorg/aspectj/weaver/MemberKind;
      16: if_acmpeq     21
      19: iconst_0
      20: ireturn
      21: aload_0
      22: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
      25: getstatic     #76                 // Field org/aspectj/weaver/Member.ADVICE:Lorg/aspectj/weaver/MemberKind;
      28: if_acmpne     33
      31: iconst_1
      32: ireturn
      33: iconst_1
      34: istore        4
      36: aload_0
      37: invokespecial #77                 // Method wantToMatchAnnotationPattern:()Z
      40: istore        5
      42: aload_1
      43: aload_2
      44: invokeinterface #78,  2           // InterfaceMethod org/aspectj/weaver/Member.getJoinPointSignatures:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/JoinPointSignatureIterator;
      49: astore        6
      51: aload         6
      53: invokevirtual #79                 // Method org/aspectj/weaver/JoinPointSignatureIterator.hasNext:()Z
      56: ifeq          111
      59: aload         6
      61: invokevirtual #80                 // Method org/aspectj/weaver/JoinPointSignatureIterator.next:()Lorg/aspectj/weaver/JoinPointSignature;
      64: astore        7
      66: aload_0
      67: aload         7
      69: aload_2
      70: iload_3
      71: iload         4
      73: invokespecial #81                 // Method matchesExactly:(Lorg/aspectj/weaver/JoinPointSignature;Lorg/aspectj/weaver/World;ZZ)Lorg/aspectj/util/FuzzyBoolean;
      76: astore        8
      78: aload         8
      80: invokevirtual #82                 // Method org/aspectj/util/FuzzyBoolean.alwaysTrue:()Z
      83: ifeq          88
      86: iconst_1
      87: ireturn
      88: aload         8
      90: invokevirtual #83                 // Method org/aspectj/util/FuzzyBoolean.alwaysFalse:()Z
      93: ifeq          98
      96: iconst_0
      97: ireturn
      98: iconst_0
      99: istore        4
     101: iload         5
     103: ifeq          108
     106: iconst_0
     107: ireturn
     108: goto          51
     111: iconst_0
     112: ireturn

  private org.aspectj.util.FuzzyBoolean matchesExactly(org.aspectj.weaver.JoinPointSignature, org.aspectj.weaver.World, boolean, boolean);
    Code:
       0: aload_1
       1: invokevirtual #84                 // Method org/aspectj/weaver/JoinPointSignature.isBridgeMethod:()Z
       4: ifeq          15
       7: iload_3
       8: ifne          15
      11: getstatic     #85                 // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
      14: areturn
      15: iload         4
      17: ifeq          38
      20: aload_0
      21: getfield      #6                  // Field modifiers:Lorg/aspectj/weaver/patterns/ModifiersPattern;
      24: aload_1
      25: invokevirtual #86                 // Method org/aspectj/weaver/JoinPointSignature.getModifiers:()I
      28: invokevirtual #87                 // Method org/aspectj/weaver/patterns/ModifiersPattern.matches:(I)Z
      31: ifne          38
      34: getstatic     #88                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      37: areturn
      38: getstatic     #89                 // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
      41: astore        5
      43: aload_0
      44: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
      47: getstatic     #90                 // Field org/aspectj/weaver/Member.STATIC_INITIALIZATION:Lorg/aspectj/weaver/MemberKind;
      50: if_acmpne     64
      53: aload_0
      54: aload_1
      55: aload_2
      56: invokespecial #91                 // Method matchesExactlyStaticInitialization:(Lorg/aspectj/weaver/JoinPointSignature;Lorg/aspectj/weaver/World;)Lorg/aspectj/util/FuzzyBoolean;
      59: astore        5
      61: goto          126
      64: aload_0
      65: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
      68: getstatic     #92                 // Field org/aspectj/weaver/Member.FIELD:Lorg/aspectj/weaver/MemberKind;
      71: if_acmpne     85
      74: aload_0
      75: aload_1
      76: aload_2
      77: invokespecial #93                 // Method matchesExactlyField:(Lorg/aspectj/weaver/JoinPointSignature;Lorg/aspectj/weaver/World;)Lorg/aspectj/util/FuzzyBoolean;
      80: astore        5
      82: goto          126
      85: aload_0
      86: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
      89: getstatic     #94                 // Field org/aspectj/weaver/Member.METHOD:Lorg/aspectj/weaver/MemberKind;
      92: if_acmpne     108
      95: aload_0
      96: aload_1
      97: aload_2
      98: iload         4
     100: invokespecial #95                 // Method matchesExactlyMethod:(Lorg/aspectj/weaver/JoinPointSignature;Lorg/aspectj/weaver/World;Z)Lorg/aspectj/util/FuzzyBoolean;
     103: astore        5
     105: goto          126
     108: aload_0
     109: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
     112: getstatic     #96                 // Field org/aspectj/weaver/Member.CONSTRUCTOR:Lorg/aspectj/weaver/MemberKind;
     115: if_acmpne     126
     118: aload_0
     119: aload_1
     120: aload_2
     121: invokespecial #97                 // Method matchesExactlyConstructor:(Lorg/aspectj/weaver/JoinPointSignature;Lorg/aspectj/weaver/World;)Lorg/aspectj/util/FuzzyBoolean;
     124: astore        5
     126: aload         5
     128: invokevirtual #83                 // Method org/aspectj/util/FuzzyBoolean.alwaysFalse:()Z
     131: ifeq          138
     134: getstatic     #88                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
     137: areturn
     138: iload         4
     140: ifeq          162
     143: aload_0
     144: aload_1
     145: aload_2
     146: invokespecial #98                 // Method matchesAnnotations:(Lorg/aspectj/weaver/ResolvedMember;Lorg/aspectj/weaver/World;)Lorg/aspectj/util/FuzzyBoolean;
     149: invokevirtual #82                 // Method org/aspectj/util/FuzzyBoolean.alwaysTrue:()Z
     152: ifne          159
     155: getstatic     #88                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
     158: areturn
     159: aload         5
     161: areturn
     162: aload_0
     163: getfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
     166: instanceof    #99                 // class org/aspectj/weaver/patterns/AnyAnnotationTypePattern
     169: ifeq          175
     172: aload         5
     174: areturn
     175: getstatic     #88                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
     178: areturn

  private boolean wantToMatchAnnotationPattern();
    Code:
       0: aload_0
       1: getfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       4: instanceof    #99                 // class org/aspectj/weaver/patterns/AnyAnnotationTypePattern
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private org.aspectj.util.FuzzyBoolean matchesExactlyStaticInitialization(org.aspectj.weaver.JoinPointSignature, org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
       4: aload_1
       5: invokevirtual #100                // Method org/aspectj/weaver/JoinPointSignature.getDeclaringType:()Lorg/aspectj/weaver/UnresolvedType;
       8: aload_2
       9: invokevirtual #30                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      12: invokevirtual #101                // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
      15: invokestatic  #102                // Method org/aspectj/util/FuzzyBoolean.fromBoolean:(Z)Lorg/aspectj/util/FuzzyBoolean;
      18: areturn

  private org.aspectj.util.FuzzyBoolean matchesExactlyField(org.aspectj.weaver.JoinPointSignature, org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: getfield      #8                  // Field name:Lorg/aspectj/weaver/patterns/NamePattern;
       4: aload_1
       5: invokevirtual #103                // Method org/aspectj/weaver/JoinPointSignature.getName:()Ljava/lang/String;
       8: invokevirtual #104                // Method org/aspectj/weaver/patterns/NamePattern.matches:(Ljava/lang/String;)Z
      11: ifne          18
      14: getstatic     #88                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      17: areturn
      18: aload_1
      19: invokevirtual #100                // Method org/aspectj/weaver/JoinPointSignature.getDeclaringType:()Lorg/aspectj/weaver/UnresolvedType;
      22: aload_2
      23: invokevirtual #30                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      26: astore_3
      27: aload_0
      28: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      31: aload_3
      32: invokevirtual #101                // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
      35: ifne          42
      38: getstatic     #85                 // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
      41: areturn
      42: aload_0
      43: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
      46: aload_1
      47: invokevirtual #105                // Method org/aspectj/weaver/JoinPointSignature.getReturnType:()Lorg/aspectj/weaver/UnresolvedType;
      50: aload_2
      51: invokevirtual #30                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      54: invokevirtual #101                // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
      57: ifne          82
      60: aload_0
      61: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
      64: aload_1
      65: invokevirtual #106                // Method org/aspectj/weaver/JoinPointSignature.getGenericReturnType:()Lorg/aspectj/weaver/UnresolvedType;
      68: aload_2
      69: invokevirtual #30                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      72: invokevirtual #101                // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
      75: ifne          82
      78: getstatic     #85                 // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
      81: areturn
      82: getstatic     #89                 // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
      85: areturn

  private boolean parametersCannotMatch(org.aspectj.weaver.JoinPointSignature);
    Code:
       0: aload_1
       1: invokevirtual #107                // Method org/aspectj/weaver/JoinPointSignature.isVarargsMethod:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      13: invokevirtual #108                // Method org/aspectj/weaver/patterns/TypePatternList.size:()I
      16: istore_2
      17: iload_2
      18: ifeq          31
      21: aload_0
      22: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      25: getfield      #109                // Field org/aspectj/weaver/patterns/TypePatternList.ellipsisCount:I
      28: ifne          94
      31: iload_2
      32: aload_1
      33: invokevirtual #110                // Method org/aspectj/weaver/JoinPointSignature.getParameterTypes:()[Lorg/aspectj/weaver/UnresolvedType;
      36: arraylength
      37: if_icmpne     44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: istore_3
      46: iload_2
      47: ifne          56
      50: iload_3
      51: ifne          56
      54: iconst_1
      55: ireturn
      56: aload_0
      57: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      60: getfield      #109                // Field org/aspectj/weaver/patterns/TypePatternList.ellipsisCount:I
      63: ifne          94
      66: iload_3
      67: ifne          94
      70: iload_2
      71: ifle          92
      74: aload_0
      75: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      78: iload_2
      79: iconst_1
      80: isub
      81: invokevirtual #111                // Method org/aspectj/weaver/patterns/TypePatternList.get:(I)Lorg/aspectj/weaver/patterns/TypePattern;
      84: invokevirtual #112                // Method org/aspectj/weaver/patterns/TypePattern.isVarArgs:()Z
      87: ifeq          92
      90: iconst_0
      91: ireturn
      92: iconst_1
      93: ireturn
      94: iconst_0
      95: ireturn

  private org.aspectj.util.FuzzyBoolean matchesExactlyMethod(org.aspectj.weaver.JoinPointSignature, org.aspectj.weaver.World, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #113                // Method parametersCannotMatch:(Lorg/aspectj/weaver/JoinPointSignature;)Z
       5: ifeq          12
       8: getstatic     #88                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      11: areturn
      12: aload_0
      13: getfield      #8                  // Field name:Lorg/aspectj/weaver/patterns/NamePattern;
      16: aload_1
      17: invokevirtual #103                // Method org/aspectj/weaver/JoinPointSignature.getName:()Ljava/lang/String;
      20: invokevirtual #104                // Method org/aspectj/weaver/patterns/NamePattern.matches:(Ljava/lang/String;)Z
      23: ifne          30
      26: getstatic     #88                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      29: areturn
      30: iload_3
      31: ifeq          53
      34: aload_0
      35: getfield      #11                 // Field throwsPattern:Lorg/aspectj/weaver/patterns/ThrowsPattern;
      38: aload_1
      39: invokevirtual #114                // Method org/aspectj/weaver/JoinPointSignature.getExceptions:()[Lorg/aspectj/weaver/UnresolvedType;
      42: aload_2
      43: invokevirtual #115                // Method org/aspectj/weaver/patterns/ThrowsPattern.matches:([Lorg/aspectj/weaver/UnresolvedType;Lorg/aspectj/weaver/World;)Z
      46: ifne          53
      49: getstatic     #88                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      52: areturn
      53: aload_0
      54: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      57: invokevirtual #116                // Method org/aspectj/weaver/patterns/TypePattern.isStar:()Z
      60: ifne          85
      63: aload_0
      64: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      67: aload_1
      68: invokevirtual #100                // Method org/aspectj/weaver/JoinPointSignature.getDeclaringType:()Lorg/aspectj/weaver/UnresolvedType;
      71: aload_2
      72: invokevirtual #30                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      75: invokevirtual #101                // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
      78: ifne          85
      81: getstatic     #85                 // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
      84: areturn
      85: aload_0
      86: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
      89: invokevirtual #116                // Method org/aspectj/weaver/patterns/TypePattern.isStar:()Z
      92: ifne          231
      95: aload_0
      96: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
      99: invokevirtual #117                // Method org/aspectj/weaver/patterns/TypePattern.isBangVoid:()Z
     102: istore        4
     104: iload         4
     106: ifeq          145
     109: aload_1
     110: invokevirtual #105                // Method org/aspectj/weaver/JoinPointSignature.getReturnType:()Lorg/aspectj/weaver/UnresolvedType;
     113: invokevirtual #118                // Method org/aspectj/weaver/UnresolvedType.getSignature:()Ljava/lang/String;
     116: astore        5
     118: aload         5
     120: invokevirtual #119                // Method java/lang/String.length:()I
     123: iconst_1
     124: if_icmpne     142
     127: aload         5
     129: iconst_0
     130: invokevirtual #120                // Method java/lang/String.charAt:(I)C
     133: bipush        86
     135: if_icmpne     142
     138: getstatic     #88                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
     141: areturn
     142: goto          231
     145: aload_0
     146: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
     149: invokevirtual #121                // Method org/aspectj/weaver/patterns/TypePattern.isVoid:()Z
     152: ifeq          191
     155: aload_1
     156: invokevirtual #105                // Method org/aspectj/weaver/JoinPointSignature.getReturnType:()Lorg/aspectj/weaver/UnresolvedType;
     159: invokevirtual #118                // Method org/aspectj/weaver/UnresolvedType.getSignature:()Ljava/lang/String;
     162: astore        5
     164: aload         5
     166: invokevirtual #119                // Method java/lang/String.length:()I
     169: iconst_1
     170: if_icmpne     184
     173: aload         5
     175: iconst_0
     176: invokevirtual #120                // Method java/lang/String.charAt:(I)C
     179: bipush        86
     181: if_icmpeq     188
     184: getstatic     #88                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
     187: areturn
     188: goto          231
     191: aload_0
     192: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
     195: aload_1
     196: invokevirtual #105                // Method org/aspectj/weaver/JoinPointSignature.getReturnType:()Lorg/aspectj/weaver/UnresolvedType;
     199: aload_2
     200: invokevirtual #30                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
     203: invokevirtual #101                // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
     206: ifne          231
     209: aload_0
     210: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
     213: aload_1
     214: invokevirtual #106                // Method org/aspectj/weaver/JoinPointSignature.getGenericReturnType:()Lorg/aspectj/weaver/UnresolvedType;
     217: aload_2
     218: invokevirtual #30                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
     221: invokevirtual #101                // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
     224: ifne          231
     227: getstatic     #85                 // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
     230: areturn
     231: aload_0
     232: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
     235: invokevirtual #108                // Method org/aspectj/weaver/patterns/TypePatternList.size:()I
     238: iconst_1
     239: if_icmpne     260
     242: aload_0
     243: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
     246: iconst_0
     247: invokevirtual #111                // Method org/aspectj/weaver/patterns/TypePatternList.get:(I)Lorg/aspectj/weaver/patterns/TypePattern;
     250: invokevirtual #122                // Method org/aspectj/weaver/patterns/TypePattern.isEllipsis:()Z
     253: ifeq          260
     256: getstatic     #89                 // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
     259: areturn
     260: aload_0
     261: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
     264: aload_1
     265: invokevirtual #110                // Method org/aspectj/weaver/JoinPointSignature.getParameterTypes:()[Lorg/aspectj/weaver/UnresolvedType;
     268: arraylength
     269: invokevirtual #123                // Method org/aspectj/weaver/patterns/TypePatternList.canMatchSignatureWithNParameters:(I)Z
     272: ifne          279
     275: getstatic     #88                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
     278: areturn
     279: new           #124                // class org/aspectj/weaver/ResolvableTypeList
     282: dup
     283: aload_2
     284: aload_1
     285: invokevirtual #110                // Method org/aspectj/weaver/JoinPointSignature.getParameterTypes:()[Lorg/aspectj/weaver/UnresolvedType;
     288: invokespecial #125                // Method org/aspectj/weaver/ResolvableTypeList."<init>":(Lorg/aspectj/weaver/World;[Lorg/aspectj/weaver/UnresolvedType;)V
     291: astore        4
     293: aconst_null
     294: checkcast     #126                // class "[[Lorg/aspectj/weaver/ResolvedType;"
     297: astore        5
     299: aload_0
     300: invokespecial #127                // Method isMatchingParameterAnnotations:()Z
     303: ifeq          329
     306: aload_1
     307: invokevirtual #128                // Method org/aspectj/weaver/JoinPointSignature.getParameterAnnotationTypes:()[[Lorg/aspectj/weaver/ResolvedType;
     310: astore        5
     312: aload         5
     314: ifnull        329
     317: aload         5
     319: arraylength
     320: ifne          329
     323: aconst_null
     324: checkcast     #126                // class "[[Lorg/aspectj/weaver/ResolvedType;"
     327: astore        5
     329: aload_0
     330: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
     333: aload         4
     335: getstatic     #129                // Field org/aspectj/weaver/patterns/TypePattern.STATIC:Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;
     338: aload         5
     340: invokevirtual #130                // Method org/aspectj/weaver/patterns/TypePatternList.matches:(Lorg/aspectj/weaver/ResolvableTypeList;Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;[[Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/util/FuzzyBoolean;
     343: invokevirtual #82                 // Method org/aspectj/util/FuzzyBoolean.alwaysTrue:()Z
     346: ifne          383
     349: aload_0
     350: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
     353: new           #124                // class org/aspectj/weaver/ResolvableTypeList
     356: dup
     357: aload_2
     358: aload_1
     359: invokevirtual #131                // Method org/aspectj/weaver/JoinPointSignature.getGenericParameterTypes:()[Lorg/aspectj/weaver/UnresolvedType;
     362: invokespecial #125                // Method org/aspectj/weaver/ResolvableTypeList."<init>":(Lorg/aspectj/weaver/World;[Lorg/aspectj/weaver/UnresolvedType;)V
     365: getstatic     #129                // Field org/aspectj/weaver/patterns/TypePattern.STATIC:Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;
     368: aload         5
     370: invokevirtual #130                // Method org/aspectj/weaver/patterns/TypePatternList.matches:(Lorg/aspectj/weaver/ResolvableTypeList;Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;[[Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/util/FuzzyBoolean;
     373: invokevirtual #82                 // Method org/aspectj/util/FuzzyBoolean.alwaysTrue:()Z
     376: ifne          383
     379: getstatic     #85                 // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
     382: areturn
     383: aload_0
     384: aload_1
     385: aload_2
     386: invokespecial #132                // Method matchesVarArgs:(Lorg/aspectj/weaver/JoinPointSignature;Lorg/aspectj/weaver/World;)Z
     389: ifne          396
     392: getstatic     #85                 // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
     395: areturn
     396: getstatic     #89                 // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
     399: areturn

  private boolean isMatchingParameterAnnotations();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bits:I
       4: iconst_2
       5: iand
       6: ifne          67
       9: aload_0
      10: dup
      11: getfield      #3                  // Field bits:I
      14: iconst_2
      15: ior
      16: putfield      #3                  // Field bits:I
      19: iconst_0
      20: istore_1
      21: aload_0
      22: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      25: invokevirtual #108                // Method org/aspectj/weaver/patterns/TypePatternList.size:()I
      28: istore_2
      29: iload_1
      30: iload_2
      31: if_icmpge     67
      34: aload_0
      35: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      38: iload_1
      39: invokevirtual #111                // Method org/aspectj/weaver/patterns/TypePatternList.get:(I)Lorg/aspectj/weaver/patterns/TypePattern;
      42: astore_3
      43: aload_0
      44: aload_3
      45: invokespecial #133                // Method isParameterAnnotationMatching:(Lorg/aspectj/weaver/patterns/TypePattern;)Z
      48: ifeq          61
      51: aload_0
      52: dup
      53: getfield      #3                  // Field bits:I
      56: iconst_1
      57: ior
      58: putfield      #3                  // Field bits:I
      61: iinc          1, 1
      64: goto          29
      67: aload_0
      68: getfield      #3                  // Field bits:I
      71: iconst_1
      72: iand
      73: ifeq          80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: ireturn

  private boolean isParameterAnnotationMatching(org.aspectj.weaver.patterns.TypePattern);
    Code:
       0: aload_1
       1: instanceof    #134                // class org/aspectj/weaver/patterns/OrTypePattern
       4: ifeq          40
       7: aload_1
       8: checkcast     #134                // class org/aspectj/weaver/patterns/OrTypePattern
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokevirtual #135                // Method org/aspectj/weaver/patterns/OrTypePattern.getLeft:()Lorg/aspectj/weaver/patterns/TypePattern;
      17: invokespecial #133                // Method isParameterAnnotationMatching:(Lorg/aspectj/weaver/patterns/TypePattern;)Z
      20: ifne          34
      23: aload_0
      24: aload_2
      25: invokevirtual #136                // Method org/aspectj/weaver/patterns/OrTypePattern.getRight:()Lorg/aspectj/weaver/patterns/TypePattern;
      28: invokespecial #133                // Method isParameterAnnotationMatching:(Lorg/aspectj/weaver/patterns/TypePattern;)Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn
      40: aload_1
      41: instanceof    #137                // class org/aspectj/weaver/patterns/AndTypePattern
      44: ifeq          80
      47: aload_1
      48: checkcast     #137                // class org/aspectj/weaver/patterns/AndTypePattern
      51: astore_2
      52: aload_0
      53: aload_2
      54: invokevirtual #138                // Method org/aspectj/weaver/patterns/AndTypePattern.getLeft:()Lorg/aspectj/weaver/patterns/TypePattern;
      57: invokespecial #133                // Method isParameterAnnotationMatching:(Lorg/aspectj/weaver/patterns/TypePattern;)Z
      60: ifne          74
      63: aload_0
      64: aload_2
      65: invokevirtual #139                // Method org/aspectj/weaver/patterns/AndTypePattern.getRight:()Lorg/aspectj/weaver/patterns/TypePattern;
      68: invokespecial #133                // Method isParameterAnnotationMatching:(Lorg/aspectj/weaver/patterns/TypePattern;)Z
      71: ifeq          78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: ireturn
      80: aload_1
      81: instanceof    #140                // class org/aspectj/weaver/patterns/NotTypePattern
      84: ifeq          101
      87: aload_1
      88: checkcast     #140                // class org/aspectj/weaver/patterns/NotTypePattern
      91: astore_2
      92: aload_0
      93: aload_2
      94: invokevirtual #141                // Method org/aspectj/weaver/patterns/NotTypePattern.getNegatedPattern:()Lorg/aspectj/weaver/patterns/TypePattern;
      97: invokespecial #133                // Method isParameterAnnotationMatching:(Lorg/aspectj/weaver/patterns/TypePattern;)Z
     100: ireturn
     101: aload_1
     102: invokevirtual #142                // Method org/aspectj/weaver/patterns/TypePattern.getAnnotationPattern:()Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
     105: astore_2
     106: aload_0
     107: aload_2
     108: invokespecial #143                // Method isParameterAnnotationMatching:(Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)Z
     111: ireturn

  private boolean isParameterAnnotationMatching(org.aspectj.weaver.patterns.AnnotationTypePattern);
    Code:
       0: aload_1
       1: instanceof    #144                // class org/aspectj/weaver/patterns/OrAnnotationTypePattern
       4: ifeq          40
       7: aload_1
       8: checkcast     #144                // class org/aspectj/weaver/patterns/OrAnnotationTypePattern
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokevirtual #145                // Method org/aspectj/weaver/patterns/OrAnnotationTypePattern.getLeft:()Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      17: invokespecial #143                // Method isParameterAnnotationMatching:(Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)Z
      20: ifne          34
      23: aload_0
      24: aload_2
      25: invokevirtual #146                // Method org/aspectj/weaver/patterns/OrAnnotationTypePattern.getRight:()Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      28: invokespecial #143                // Method isParameterAnnotationMatching:(Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn
      40: aload_1
      41: instanceof    #147                // class org/aspectj/weaver/patterns/AndAnnotationTypePattern
      44: ifeq          80
      47: aload_1
      48: checkcast     #147                // class org/aspectj/weaver/patterns/AndAnnotationTypePattern
      51: astore_2
      52: aload_0
      53: aload_2
      54: invokevirtual #148                // Method org/aspectj/weaver/patterns/AndAnnotationTypePattern.getLeft:()Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      57: invokespecial #143                // Method isParameterAnnotationMatching:(Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)Z
      60: ifne          74
      63: aload_0
      64: aload_2
      65: invokevirtual #149                // Method org/aspectj/weaver/patterns/AndAnnotationTypePattern.getRight:()Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      68: invokespecial #143                // Method isParameterAnnotationMatching:(Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)Z
      71: ifeq          78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: ireturn
      80: aload_1
      81: instanceof    #150                // class org/aspectj/weaver/patterns/NotAnnotationTypePattern
      84: ifeq          101
      87: aload_1
      88: checkcast     #150                // class org/aspectj/weaver/patterns/NotAnnotationTypePattern
      91: astore_2
      92: aload_0
      93: aload_2
      94: getfield      #151                // Field org/aspectj/weaver/patterns/NotAnnotationTypePattern.negatedPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      97: invokespecial #143                // Method isParameterAnnotationMatching:(Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)Z
     100: ireturn
     101: aload_1
     102: invokevirtual #152                // Method org/aspectj/weaver/patterns/AnnotationTypePattern.isForParameterAnnotationMatch:()Z
     105: ireturn

  private org.aspectj.util.FuzzyBoolean matchesExactlyConstructor(org.aspectj.weaver.JoinPointSignature, org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
       4: aload_1
       5: invokevirtual #100                // Method org/aspectj/weaver/JoinPointSignature.getDeclaringType:()Lorg/aspectj/weaver/UnresolvedType;
       8: aload_2
       9: invokevirtual #30                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      12: invokevirtual #101                // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
      15: ifne          22
      18: getstatic     #88                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      21: areturn
      22: aload_0
      23: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      26: aload_1
      27: invokevirtual #110                // Method org/aspectj/weaver/JoinPointSignature.getParameterTypes:()[Lorg/aspectj/weaver/UnresolvedType;
      30: arraylength
      31: invokevirtual #123                // Method org/aspectj/weaver/patterns/TypePatternList.canMatchSignatureWithNParameters:(I)Z
      34: ifne          41
      37: getstatic     #88                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
      40: areturn
      41: aload_2
      42: aload_1
      43: invokevirtual #110                // Method org/aspectj/weaver/JoinPointSignature.getParameterTypes:()[Lorg/aspectj/weaver/UnresolvedType;
      46: invokevirtual #153                // Method org/aspectj/weaver/World.resolve:([Lorg/aspectj/weaver/UnresolvedType;)[Lorg/aspectj/weaver/ResolvedType;
      49: astore_3
      50: aload_1
      51: invokevirtual #128                // Method org/aspectj/weaver/JoinPointSignature.getParameterAnnotationTypes:()[[Lorg/aspectj/weaver/ResolvedType;
      54: astore        4
      56: aload         4
      58: ifnull        67
      61: aload         4
      63: arraylength
      64: ifne          73
      67: aconst_null
      68: checkcast     #126                // class "[[Lorg/aspectj/weaver/ResolvedType;"
      71: astore        4
      73: aload_0
      74: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      77: aload_3
      78: getstatic     #129                // Field org/aspectj/weaver/patterns/TypePattern.STATIC:Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;
      81: aload         4
      83: invokevirtual #154                // Method org/aspectj/weaver/patterns/TypePatternList.matches:([Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;[[Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/util/FuzzyBoolean;
      86: invokevirtual #82                 // Method org/aspectj/util/FuzzyBoolean.alwaysTrue:()Z
      89: ifne          122
      92: aload_0
      93: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      96: aload_2
      97: aload_1
      98: invokevirtual #131                // Method org/aspectj/weaver/JoinPointSignature.getGenericParameterTypes:()[Lorg/aspectj/weaver/UnresolvedType;
     101: invokevirtual #153                // Method org/aspectj/weaver/World.resolve:([Lorg/aspectj/weaver/UnresolvedType;)[Lorg/aspectj/weaver/ResolvedType;
     104: getstatic     #129                // Field org/aspectj/weaver/patterns/TypePattern.STATIC:Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;
     107: aload         4
     109: invokevirtual #154                // Method org/aspectj/weaver/patterns/TypePatternList.matches:([Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;[[Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/util/FuzzyBoolean;
     112: invokevirtual #82                 // Method org/aspectj/util/FuzzyBoolean.alwaysTrue:()Z
     115: ifne          122
     118: getstatic     #85                 // Field org/aspectj/util/FuzzyBoolean.MAYBE:Lorg/aspectj/util/FuzzyBoolean;
     121: areturn
     122: aload_0
     123: aload_1
     124: aload_2
     125: invokespecial #132                // Method matchesVarArgs:(Lorg/aspectj/weaver/JoinPointSignature;Lorg/aspectj/weaver/World;)Z
     128: ifne          135
     131: getstatic     #88                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
     134: areturn
     135: aload_0
     136: getfield      #11                 // Field throwsPattern:Lorg/aspectj/weaver/patterns/ThrowsPattern;
     139: aload_1
     140: invokevirtual #114                // Method org/aspectj/weaver/JoinPointSignature.getExceptions:()[Lorg/aspectj/weaver/UnresolvedType;
     143: aload_2
     144: invokevirtual #115                // Method org/aspectj/weaver/patterns/ThrowsPattern.matches:([Lorg/aspectj/weaver/UnresolvedType;Lorg/aspectj/weaver/World;)Z
     147: ifne          154
     150: getstatic     #88                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
     153: areturn
     154: getstatic     #89                 // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
     157: areturn

  private boolean matchesVarArgs(org.aspectj.weaver.JoinPointSignature, org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
       4: invokevirtual #108                // Method org/aspectj/weaver/patterns/TypePatternList.size:()I
       7: ifne          12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      16: aload_0
      17: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      20: invokevirtual #108                // Method org/aspectj/weaver/patterns/TypePatternList.size:()I
      23: iconst_1
      24: isub
      25: invokevirtual #111                // Method org/aspectj/weaver/patterns/TypePatternList.get:(I)Lorg/aspectj/weaver/patterns/TypePattern;
      28: astore_3
      29: aload_3
      30: invokevirtual #116                // Method org/aspectj/weaver/patterns/TypePattern.isStar:()Z
      33: ifne          50
      36: aload_3
      37: invokevirtual #112                // Method org/aspectj/weaver/patterns/TypePattern.isVarArgs:()Z
      40: ifne          50
      43: aload_3
      44: getstatic     #155                // Field org/aspectj/weaver/patterns/TypePattern.ELLIPSIS:Lorg/aspectj/weaver/patterns/TypePattern;
      47: if_acmpne     54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: istore        4
      57: aload_1
      58: invokevirtual #107                // Method org/aspectj/weaver/JoinPointSignature.isVarargsMethod:()Z
      61: ifeq          89
      64: iload         4
      66: ifne          98
      69: aload_2
      70: invokevirtual #25                 // Method org/aspectj/weaver/World.getLint:()Lorg/aspectj/weaver/Lint;
      73: getfield      #156                // Field org/aspectj/weaver/Lint.cantMatchArrayTypeOnVarargs:Lorg/aspectj/weaver/Lint$Kind;
      76: aload_1
      77: invokevirtual #157                // Method org/aspectj/weaver/JoinPointSignature.toString:()Ljava/lang/String;
      80: aload_0
      81: invokevirtual #63                 // Method getSourceLocation:()Lorg/aspectj/bridge/ISourceLocation;
      84: invokevirtual #158                // Method org/aspectj/weaver/Lint$Kind.signal:(Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;)V
      87: iconst_0
      88: ireturn
      89: aload_3
      90: invokevirtual #112                // Method org/aspectj/weaver/patterns/TypePattern.isVarArgs:()Z
      93: ifeq          98
      96: iconst_0
      97: ireturn
      98: iconst_1
      99: ireturn

  private org.aspectj.util.FuzzyBoolean matchesAnnotations(org.aspectj.weaver.ResolvedMember, org.aspectj.weaver.World);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #88                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
       7: areturn
       8: aload_0
       9: getfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      12: aload_2
      13: invokevirtual #159                // Method org/aspectj/weaver/patterns/AnnotationTypePattern.resolve:(Lorg/aspectj/weaver/World;)V
      16: aload_0
      17: getfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      20: instanceof    #99                 // class org/aspectj/weaver/patterns/AnyAnnotationTypePattern
      23: ifeq          30
      26: getstatic     #89                 // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
      29: areturn
      30: aload_1
      31: invokeinterface #160,  1          // InterfaceMethod org/aspectj/weaver/ResolvedMember.isAnnotatedElsewhere:()Z
      36: ifeq          153
      39: aload_1
      40: invokeinterface #161,  1          // InterfaceMethod org/aspectj/weaver/ResolvedMember.getKind:()Lorg/aspectj/weaver/MemberKind;
      45: getstatic     #92                 // Field org/aspectj/weaver/Member.FIELD:Lorg/aspectj/weaver/MemberKind;
      48: if_acmpne     153
      51: aload_1
      52: invokeinterface #162,  1          // InterfaceMethod org/aspectj/weaver/ResolvedMember.getDeclaringType:()Lorg/aspectj/weaver/UnresolvedType;
      57: aload_2
      58: invokevirtual #30                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      61: invokevirtual #163                // Method org/aspectj/weaver/ResolvedType.getInterTypeMungers:()Ljava/util/List;
      64: astore_3
      65: aload_3
      66: invokeinterface #164,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      71: astore        4
      73: aload         4
      75: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      80: ifeq          153
      83: aload         4
      85: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      90: checkcast     #165                // class org/aspectj/weaver/ConcreteTypeMunger
      93: astore        5
      95: aload         5
      97: invokevirtual #166                // Method org/aspectj/weaver/ConcreteTypeMunger.getMunger:()Lorg/aspectj/weaver/ResolvedTypeMunger;
     100: instanceof    #167                // class org/aspectj/weaver/NewFieldTypeMunger
     103: ifeq          150
     106: aload         5
     108: invokevirtual #168                // Method org/aspectj/weaver/ConcreteTypeMunger.getSignature:()Lorg/aspectj/weaver/ResolvedMember;
     111: astore        6
     113: aload         6
     115: aload         5
     117: invokevirtual #169                // Method org/aspectj/weaver/ConcreteTypeMunger.getAspectType:()Lorg/aspectj/weaver/ResolvedType;
     120: invokestatic  #170                // Method org/aspectj/weaver/AjcMemberMaker.interFieldInitializer:(Lorg/aspectj/weaver/ResolvedMember;Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedMember;
     123: astore        7
     125: aload_0
     126: aload         5
     128: invokevirtual #169                // Method org/aspectj/weaver/ConcreteTypeMunger.getAspectType:()Lorg/aspectj/weaver/ResolvedType;
     131: aload         7
     133: invokespecial #171                // Method findMethod:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/ResolvedMember;)Lorg/aspectj/weaver/ResolvedMember;
     136: astore        8
     138: aload         6
     140: aload_1
     141: invokevirtual #172                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     144: ifeq          150
     147: aload         8
     149: astore_1
     150: goto          73
     153: aload_0
     154: getfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
     157: aload_1
     158: invokevirtual #173                // Method org/aspectj/weaver/patterns/AnnotationTypePattern.matches:(Lorg/aspectj/weaver/AnnotatedElement;)Lorg/aspectj/util/FuzzyBoolean;
     161: invokevirtual #82                 // Method org/aspectj/util/FuzzyBoolean.alwaysTrue:()Z
     164: ifeq          171
     167: getstatic     #89                 // Field org/aspectj/util/FuzzyBoolean.YES:Lorg/aspectj/util/FuzzyBoolean;
     170: areturn
     171: getstatic     #88                 // Field org/aspectj/util/FuzzyBoolean.NO:Lorg/aspectj/util/FuzzyBoolean;
     174: areturn

  private org.aspectj.weaver.ResolvedMember findMethod(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedMember);
    Code:
       0: aload_1
       1: invokevirtual #174                // Method org/aspectj/weaver/ResolvedType.getDeclaredMethods:()[Lorg/aspectj/weaver/ResolvedMember;
       4: astore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: aload_3
      11: arraylength
      12: if_icmpge     39
      15: aload_3
      16: iload         4
      18: aaload
      19: astore        5
      21: aload         5
      23: aload_2
      24: invokevirtual #172                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      27: ifeq          33
      30: aload         5
      32: areturn
      33: iinc          4, 1
      36: goto          8
      39: aconst_null
      40: areturn

  public boolean declaringTypeMatchAllowingForCovariance(org.aspectj.weaver.Member, org.aspectj.weaver.UnresolvedType, org.aspectj.weaver.World, org.aspectj.weaver.patterns.TypePattern, org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_2
       1: aload_3
       2: invokevirtual #30                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
       5: astore        6
       7: aload_0
       8: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      11: aload         6
      13: invokevirtual #101                // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
      16: ifeq          31
      19: aload         4
      21: aload         5
      23: invokevirtual #101                // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
      26: ifeq          31
      29: iconst_1
      30: ireturn
      31: aload_1
      32: aload_3
      33: invokeinterface #175,  2          // InterfaceMethod org/aspectj/weaver/Member.getDeclaringTypes:(Lorg/aspectj/weaver/World;)Ljava/util/Collection;
      38: astore        7
      40: iconst_1
      41: istore        8
      43: aload         7
      45: invokeinterface #176,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      50: astore        9
      52: aload         9
      54: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          154
      62: aload         9
      64: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #177                // class org/aspectj/weaver/ResolvedType
      72: astore        10
      74: aload_0
      75: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      78: aload         10
      80: invokevirtual #101                // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
      83: ifeq          151
      86: iload         8
      88: ifne          93
      91: iconst_1
      92: ireturn
      93: aload         10
      95: aload_1
      96: invokevirtual #178                // Method org/aspectj/weaver/ResolvedType.lookupMethod:(Lorg/aspectj/weaver/Member;)Lorg/aspectj/weaver/ResolvedMember;
      99: astore        11
     101: aload         11
     103: ifnonnull     114
     106: aload         10
     108: aload_1
     109: invokevirtual #179                // Method org/aspectj/weaver/ResolvedType.lookupMethodInITDs:(Lorg/aspectj/weaver/Member;)Lorg/aspectj/weaver/ResolvedMember;
     112: astore        11
     114: aload         11
     116: ifnonnull     122
     119: goto          52
     122: aload         11
     124: invokeinterface #180,  1          // InterfaceMethod org/aspectj/weaver/ResolvedMember.getReturnType:()Lorg/aspectj/weaver/UnresolvedType;
     129: astore        12
     131: aload         12
     133: aload_3
     134: invokevirtual #30                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
     137: astore        13
     139: aload         4
     141: aload         13
     143: invokevirtual #101                // Method org/aspectj/weaver/patterns/TypePattern.matchesStatically:(Lorg/aspectj/weaver/ResolvedType;)Z
     146: ifeq          151
     149: iconst_1
     150: ireturn
     151: goto          52
     154: iconst_0
     155: ireturn

  public org.aspectj.weaver.patterns.NamePattern getName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field name:Lorg/aspectj/weaver/patterns/NamePattern;
       4: areturn

  public org.aspectj.weaver.patterns.TypePattern getDeclaringType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
       4: areturn

  public org.aspectj.weaver.MemberKind getKind();
    Code:
       0: aload_0
       1: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #46                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #181                // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      12: getstatic     #182                // Field org/aspectj/weaver/patterns/AnnotationTypePattern.ANY:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      15: if_acmpeq     37
      18: aload_1
      19: aload_0
      20: getfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      23: invokevirtual #61                 // Method java/lang/Object.toString:()Ljava/lang/String;
      26: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: pop
      30: aload_1
      31: bipush        32
      33: invokevirtual #183                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      36: pop
      37: aload_0
      38: getfield      #6                  // Field modifiers:Lorg/aspectj/weaver/patterns/ModifiersPattern;
      41: getstatic     #184                // Field org/aspectj/weaver/patterns/ModifiersPattern.ANY:Lorg/aspectj/weaver/patterns/ModifiersPattern;
      44: if_acmpeq     66
      47: aload_1
      48: aload_0
      49: getfield      #6                  // Field modifiers:Lorg/aspectj/weaver/patterns/ModifiersPattern;
      52: invokevirtual #185                // Method org/aspectj/weaver/patterns/ModifiersPattern.toString:()Ljava/lang/String;
      55: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      58: pop
      59: aload_1
      60: bipush        32
      62: invokevirtual #183                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      65: pop
      66: aload_0
      67: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
      70: getstatic     #90                 // Field org/aspectj/weaver/Member.STATIC_INITIALIZATION:Lorg/aspectj/weaver/MemberKind;
      73: if_acmpne     98
      76: aload_1
      77: aload_0
      78: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      81: invokevirtual #61                 // Method java/lang/Object.toString:()Ljava/lang/String;
      84: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      87: pop
      88: aload_1
      89: ldc           #186                // String .<clinit>()
      91: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      94: pop
      95: goto          260
      98: aload_0
      99: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
     102: getstatic     #187                // Field org/aspectj/weaver/Member.HANDLER:Lorg/aspectj/weaver/MemberKind;
     105: if_acmpne     138
     108: aload_1
     109: ldc           #188                // String handler(
     111: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     114: pop
     115: aload_1
     116: aload_0
     117: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
     120: iconst_0
     121: invokevirtual #111                // Method org/aspectj/weaver/patterns/TypePatternList.get:(I)Lorg/aspectj/weaver/patterns/TypePattern;
     124: invokevirtual #189                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     127: pop
     128: aload_1
     129: ldc           #190                // String )
     131: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     134: pop
     135: goto          260
     138: aload_0
     139: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
     142: getstatic     #96                 // Field org/aspectj/weaver/Member.CONSTRUCTOR:Lorg/aspectj/weaver/MemberKind;
     145: if_acmpeq     167
     148: aload_1
     149: aload_0
     150: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
     153: invokevirtual #61                 // Method java/lang/Object.toString:()Ljava/lang/String;
     156: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     159: pop
     160: aload_1
     161: bipush        32
     163: invokevirtual #183                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     166: pop
     167: aload_0
     168: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
     171: getstatic     #191                // Field org/aspectj/weaver/patterns/TypePattern.ANY:Lorg/aspectj/weaver/patterns/TypePattern;
     174: if_acmpeq     196
     177: aload_1
     178: aload_0
     179: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
     182: invokevirtual #61                 // Method java/lang/Object.toString:()Ljava/lang/String;
     185: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     188: pop
     189: aload_1
     190: bipush        46
     192: invokevirtual #183                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     195: pop
     196: aload_0
     197: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
     200: getstatic     #96                 // Field org/aspectj/weaver/Member.CONSTRUCTOR:Lorg/aspectj/weaver/MemberKind;
     203: if_acmpne     216
     206: aload_1
     207: ldc           #192                // String new
     209: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     212: pop
     213: goto          228
     216: aload_1
     217: aload_0
     218: getfield      #8                  // Field name:Lorg/aspectj/weaver/patterns/NamePattern;
     221: invokevirtual #193                // Method org/aspectj/weaver/patterns/NamePattern.toString:()Ljava/lang/String;
     224: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     227: pop
     228: aload_0
     229: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
     232: getstatic     #94                 // Field org/aspectj/weaver/Member.METHOD:Lorg/aspectj/weaver/MemberKind;
     235: if_acmpeq     248
     238: aload_0
     239: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
     242: getstatic     #96                 // Field org/aspectj/weaver/Member.CONSTRUCTOR:Lorg/aspectj/weaver/MemberKind;
     245: if_acmpne     260
     248: aload_1
     249: aload_0
     250: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
     253: invokevirtual #194                // Method org/aspectj/weaver/patterns/TypePatternList.toString:()Ljava/lang/String;
     256: invokevirtual #58                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     259: pop
     260: aload_1
     261: invokevirtual #62                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     264: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #68                 // class org/aspectj/weaver/patterns/SignaturePattern
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #68                 // class org/aspectj/weaver/patterns/SignaturePattern
      13: astore_2
      14: aload_2
      15: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
      18: aload_0
      19: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
      22: invokevirtual #195                // Method org/aspectj/weaver/MemberKind.equals:(Ljava/lang/Object;)Z
      25: ifeq          130
      28: aload_2
      29: getfield      #6                  // Field modifiers:Lorg/aspectj/weaver/patterns/ModifiersPattern;
      32: aload_0
      33: getfield      #6                  // Field modifiers:Lorg/aspectj/weaver/patterns/ModifiersPattern;
      36: invokevirtual #196                // Method org/aspectj/weaver/patterns/ModifiersPattern.equals:(Ljava/lang/Object;)Z
      39: ifeq          130
      42: aload_2
      43: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
      46: aload_0
      47: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
      50: invokevirtual #172                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      53: ifeq          130
      56: aload_2
      57: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      60: aload_0
      61: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      64: invokevirtual #172                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      67: ifeq          130
      70: aload_2
      71: getfield      #8                  // Field name:Lorg/aspectj/weaver/patterns/NamePattern;
      74: aload_0
      75: getfield      #8                  // Field name:Lorg/aspectj/weaver/patterns/NamePattern;
      78: invokevirtual #197                // Method org/aspectj/weaver/patterns/NamePattern.equals:(Ljava/lang/Object;)Z
      81: ifeq          130
      84: aload_2
      85: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      88: aload_0
      89: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      92: invokevirtual #198                // Method org/aspectj/weaver/patterns/TypePatternList.equals:(Ljava/lang/Object;)Z
      95: ifeq          130
      98: aload_2
      99: getfield      #11                 // Field throwsPattern:Lorg/aspectj/weaver/patterns/ThrowsPattern;
     102: aload_0
     103: getfield      #11                 // Field throwsPattern:Lorg/aspectj/weaver/patterns/ThrowsPattern;
     106: invokevirtual #199                // Method org/aspectj/weaver/patterns/ThrowsPattern.equals:(Ljava/lang/Object;)Z
     109: ifeq          130
     112: aload_2
     113: getfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
     116: aload_0
     117: getfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
     120: invokevirtual #172                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     123: ifeq          130
     126: iconst_1
     127: goto          131
     130: iconst_0
     131: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field hashcode:I
       4: iconst_m1
       5: if_icmpne     166
       8: aload_0
       9: bipush        17
      11: putfield      #4                  // Field hashcode:I
      14: aload_0
      15: bipush        37
      17: aload_0
      18: getfield      #4                  // Field hashcode:I
      21: imul
      22: aload_0
      23: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
      26: invokevirtual #200                // Method org/aspectj/weaver/MemberKind.hashCode:()I
      29: iadd
      30: putfield      #4                  // Field hashcode:I
      33: aload_0
      34: bipush        37
      36: aload_0
      37: getfield      #4                  // Field hashcode:I
      40: imul
      41: aload_0
      42: getfield      #6                  // Field modifiers:Lorg/aspectj/weaver/patterns/ModifiersPattern;
      45: invokevirtual #201                // Method org/aspectj/weaver/patterns/ModifiersPattern.hashCode:()I
      48: iadd
      49: putfield      #4                  // Field hashcode:I
      52: aload_0
      53: bipush        37
      55: aload_0
      56: getfield      #4                  // Field hashcode:I
      59: imul
      60: aload_0
      61: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
      64: invokevirtual #202                // Method java/lang/Object.hashCode:()I
      67: iadd
      68: putfield      #4                  // Field hashcode:I
      71: aload_0
      72: bipush        37
      74: aload_0
      75: getfield      #4                  // Field hashcode:I
      78: imul
      79: aload_0
      80: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      83: invokevirtual #202                // Method java/lang/Object.hashCode:()I
      86: iadd
      87: putfield      #4                  // Field hashcode:I
      90: aload_0
      91: bipush        37
      93: aload_0
      94: getfield      #4                  // Field hashcode:I
      97: imul
      98: aload_0
      99: getfield      #8                  // Field name:Lorg/aspectj/weaver/patterns/NamePattern;
     102: invokevirtual #203                // Method org/aspectj/weaver/patterns/NamePattern.hashCode:()I
     105: iadd
     106: putfield      #4                  // Field hashcode:I
     109: aload_0
     110: bipush        37
     112: aload_0
     113: getfield      #4                  // Field hashcode:I
     116: imul
     117: aload_0
     118: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
     121: invokevirtual #204                // Method org/aspectj/weaver/patterns/TypePatternList.hashCode:()I
     124: iadd
     125: putfield      #4                  // Field hashcode:I
     128: aload_0
     129: bipush        37
     131: aload_0
     132: getfield      #4                  // Field hashcode:I
     135: imul
     136: aload_0
     137: getfield      #11                 // Field throwsPattern:Lorg/aspectj/weaver/patterns/ThrowsPattern;
     140: invokevirtual #205                // Method org/aspectj/weaver/patterns/ThrowsPattern.hashCode:()I
     143: iadd
     144: putfield      #4                  // Field hashcode:I
     147: aload_0
     148: bipush        37
     150: aload_0
     151: getfield      #4                  // Field hashcode:I
     154: imul
     155: aload_0
     156: getfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
     159: invokevirtual #202                // Method java/lang/Object.hashCode:()I
     162: iadd
     163: putfield      #4                  // Field hashcode:I
     166: aload_0
     167: getfield      #4                  // Field hashcode:I
     170: ireturn

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
       4: aload_1
       5: invokevirtual #206                // Method org/aspectj/weaver/MemberKind.write:(Ljava/io/DataOutputStream;)V
       8: aload_0
       9: getfield      #6                  // Field modifiers:Lorg/aspectj/weaver/patterns/ModifiersPattern;
      12: aload_1
      13: invokevirtual #207                // Method org/aspectj/weaver/patterns/ModifiersPattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      16: aload_0
      17: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
      20: aload_1
      21: invokevirtual #208                // Method org/aspectj/weaver/patterns/TypePattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      24: aload_0
      25: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      28: aload_1
      29: invokevirtual #208                // Method org/aspectj/weaver/patterns/TypePattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      32: aload_0
      33: getfield      #8                  // Field name:Lorg/aspectj/weaver/patterns/NamePattern;
      36: aload_1
      37: invokevirtual #209                // Method org/aspectj/weaver/patterns/NamePattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      40: aload_0
      41: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
      44: aload_1
      45: invokevirtual #210                // Method org/aspectj/weaver/patterns/TypePatternList.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      48: aload_0
      49: getfield      #11                 // Field throwsPattern:Lorg/aspectj/weaver/patterns/ThrowsPattern;
      52: aload_1
      53: invokevirtual #211                // Method org/aspectj/weaver/patterns/ThrowsPattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      56: aload_0
      57: getfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      60: aload_1
      61: invokevirtual #212                // Method org/aspectj/weaver/patterns/AnnotationTypePattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      64: aload_0
      65: aload_1
      66: invokevirtual #213                // Method writeLocation:(Ljava/io/DataOutputStream;)V
      69: return

  public static org.aspectj.weaver.patterns.SignaturePattern read(org.aspectj.weaver.VersionedDataInputStream, org.aspectj.weaver.ISourceContext) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #214                // Method org/aspectj/weaver/MemberKind.read:(Ljava/io/DataInputStream;)Lorg/aspectj/weaver/MemberKind;
       4: astore_2
       5: aload_0
       6: invokestatic  #215                // Method org/aspectj/weaver/patterns/ModifiersPattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;)Lorg/aspectj/weaver/patterns/ModifiersPattern;
       9: astore_3
      10: aload_0
      11: aload_1
      12: invokestatic  #216                // Method org/aspectj/weaver/patterns/TypePattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/TypePattern;
      15: astore        4
      17: aload_0
      18: aload_1
      19: invokestatic  #216                // Method org/aspectj/weaver/patterns/TypePattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/TypePattern;
      22: astore        5
      24: aload_0
      25: invokestatic  #217                // Method org/aspectj/weaver/patterns/NamePattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;)Lorg/aspectj/weaver/patterns/NamePattern;
      28: astore        6
      30: aload_0
      31: aload_1
      32: invokestatic  #218                // Method org/aspectj/weaver/patterns/TypePatternList.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/TypePatternList;
      35: astore        7
      37: aload_0
      38: aload_1
      39: invokestatic  #219                // Method org/aspectj/weaver/patterns/ThrowsPattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/ThrowsPattern;
      42: astore        8
      44: getstatic     #182                // Field org/aspectj/weaver/patterns/AnnotationTypePattern.ANY:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      47: astore        9
      49: aload_0
      50: invokevirtual #220                // Method org/aspectj/weaver/VersionedDataInputStream.getMajorVersion:()I
      53: iconst_2
      54: if_icmplt     64
      57: aload_0
      58: aload_1
      59: invokestatic  #222                // Method org/aspectj/weaver/patterns/AnnotationTypePattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      62: astore        9
      64: new           #68                 // class org/aspectj/weaver/patterns/SignaturePattern
      67: dup
      68: aload_2
      69: aload_3
      70: aload         4
      72: aload         5
      74: aload         6
      76: aload         7
      78: aload         8
      80: aload         9
      82: invokespecial #73                 // Method "<init>":(Lorg/aspectj/weaver/MemberKind;Lorg/aspectj/weaver/patterns/ModifiersPattern;Lorg/aspectj/weaver/patterns/TypePattern;Lorg/aspectj/weaver/patterns/TypePattern;Lorg/aspectj/weaver/patterns/NamePattern;Lorg/aspectj/weaver/patterns/TypePatternList;Lorg/aspectj/weaver/patterns/ThrowsPattern;Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)V
      85: astore        10
      87: aload         10
      89: aload_1
      90: aload_0
      91: invokevirtual #223                // Method readLocation:(Lorg/aspectj/weaver/ISourceContext;Ljava/io/DataInputStream;)V
      94: aload         10
      96: areturn

  public org.aspectj.weaver.patterns.ModifiersPattern getModifiers();
    Code:
       0: aload_0
       1: getfield      #6                  // Field modifiers:Lorg/aspectj/weaver/patterns/ModifiersPattern;
       4: areturn

  public org.aspectj.weaver.patterns.TypePatternList getParameterTypes();
    Code:
       0: aload_0
       1: getfield      #10                 // Field parameterTypes:Lorg/aspectj/weaver/patterns/TypePatternList;
       4: areturn

  public org.aspectj.weaver.patterns.TypePattern getReturnType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field returnType:Lorg/aspectj/weaver/patterns/TypePattern;
       4: areturn

  public org.aspectj.weaver.patterns.ThrowsPattern getThrowsPattern();
    Code:
       0: aload_0
       1: getfield      #11                 // Field throwsPattern:Lorg/aspectj/weaver/patterns/ThrowsPattern;
       4: areturn

  public org.aspectj.weaver.patterns.AnnotationTypePattern getAnnotationPattern();
    Code:
       0: aload_0
       1: getfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       4: areturn

  public boolean isStarAnnotation();
    Code:
       0: aload_0
       1: getfield      #12                 // Field annotationPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       4: getstatic     #182                // Field org/aspectj/weaver/patterns/AnnotationTypePattern.ANY:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public java.lang.Object accept(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #224,  3          // InterfaceMethod org/aspectj/weaver/patterns/PatternNodeVisitor.visit:(Lorg/aspectj/weaver/patterns/SignaturePattern;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public boolean isExactDeclaringTypePattern();
    Code:
       0: aload_0
       1: getfield      #5                  // Field isExactDeclaringTypePattern:Z
       4: ireturn

  public boolean isMatchOnAnyName();
    Code:
       0: aload_0
       1: invokevirtual #225                // Method getName:()Lorg/aspectj/weaver/patterns/NamePattern;
       4: invokevirtual #226                // Method org/aspectj/weaver/patterns/NamePattern.isAny:()Z
       7: ireturn

  public java.util.List<org.aspectj.weaver.patterns.ExactTypePattern> getExactDeclaringTypes();
    Code:
       0: aload_0
       1: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
       4: instanceof    #13                 // class org/aspectj/weaver/patterns/ExactTypePattern
       7: ifeq          34
      10: new           #227                // class java/util/ArrayList
      13: dup
      14: invokespecial #228                // Method java/util/ArrayList."<init>":()V
      17: astore_1
      18: aload_1
      19: aload_0
      20: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
      23: checkcast     #13                 // class org/aspectj/weaver/patterns/ExactTypePattern
      26: invokeinterface #229,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      31: pop
      32: aload_1
      33: areturn
      34: invokestatic  #230                // Method java/util/Collections.emptyList:()Ljava/util/List;
      37: areturn

  public boolean couldEverMatch(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: getfield      #9                  // Field declaringType:Lorg/aspectj/weaver/patterns/TypePattern;
       4: aload_1
       5: getstatic     #129                // Field org/aspectj/weaver/patterns/TypePattern.STATIC:Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;
       8: invokevirtual #231                // Method org/aspectj/weaver/patterns/TypePattern.matches:(Lorg/aspectj/weaver/ResolvedType;Lorg/aspectj/weaver/patterns/TypePattern$MatchKind;)Lorg/aspectj/util/FuzzyBoolean;
      11: invokevirtual #232                // Method org/aspectj/util/FuzzyBoolean.maybeTrue:()Z
      14: ireturn

  public org.aspectj.weaver.patterns.ISignaturePattern resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #233                // Method resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;)Lorg/aspectj/weaver/patterns/SignaturePattern;
       6: areturn

  public org.aspectj.weaver.patterns.ISignaturePattern parameterizeWith(java.util.Map, org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #234                // Method parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/SignaturePattern;
       6: areturn

  static org.aspectj.weaver.MemberKind access$000(org.aspectj.weaver.patterns.SignaturePattern);
    Code:
       0: aload_0
       1: getfield      #1                  // Field kind:Lorg/aspectj/weaver/MemberKind;
       4: areturn
}
