Compiled from "Definition.java"
public class org.aspectj.weaver.loadtime.definition.Definition {
  private final java.lang.StringBuffer weaverOptions;

  private final java.util.List<java.lang.String> dumpPatterns;

  private boolean dumpBefore;

  private boolean perClassloaderDumpDir;

  private final java.util.List<java.lang.String> includePatterns;

  private final java.util.List<java.lang.String> excludePatterns;

  private final java.util.List<java.lang.String> aspectClassNames;

  private final java.util.List<java.lang.String> aspectExcludePatterns;

  private final java.util.List<java.lang.String> aspectIncludePatterns;

  private final java.util.List<org.aspectj.weaver.loadtime.definition.Definition$ConcreteAspect> concreteAspects;

  private final java.util.Map<java.lang.String, java.lang.String> scopedAspects;

  private final java.util.Map<java.lang.String, java.lang.String> requiredTypesForAspects;

  public org.aspectj.weaver.loadtime.definition.Definition();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/StringBuffer
       8: dup
       9: invokespecial #3                  // Method java/lang/StringBuffer."<init>":()V
      12: putfield      #4                  // Field weaverOptions:Ljava/lang/StringBuffer;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field dumpBefore:Z
      20: aload_0
      21: iconst_0
      22: putfield      #6                  // Field perClassloaderDumpDir:Z
      25: aload_0
      26: new           #7                  // class java/util/ArrayList
      29: dup
      30: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      33: putfield      #9                  // Field dumpPatterns:Ljava/util/List;
      36: aload_0
      37: new           #7                  // class java/util/ArrayList
      40: dup
      41: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      44: putfield      #10                 // Field includePatterns:Ljava/util/List;
      47: aload_0
      48: new           #7                  // class java/util/ArrayList
      51: dup
      52: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      55: putfield      #11                 // Field excludePatterns:Ljava/util/List;
      58: aload_0
      59: new           #7                  // class java/util/ArrayList
      62: dup
      63: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      66: putfield      #12                 // Field aspectClassNames:Ljava/util/List;
      69: aload_0
      70: new           #7                  // class java/util/ArrayList
      73: dup
      74: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      77: putfield      #13                 // Field aspectExcludePatterns:Ljava/util/List;
      80: aload_0
      81: new           #7                  // class java/util/ArrayList
      84: dup
      85: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      88: putfield      #14                 // Field aspectIncludePatterns:Ljava/util/List;
      91: aload_0
      92: new           #7                  // class java/util/ArrayList
      95: dup
      96: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      99: putfield      #15                 // Field concreteAspects:Ljava/util/List;
     102: aload_0
     103: new           #16                 // class java/util/HashMap
     106: dup
     107: invokespecial #17                 // Method java/util/HashMap."<init>":()V
     110: putfield      #18                 // Field scopedAspects:Ljava/util/Map;
     113: aload_0
     114: new           #16                 // class java/util/HashMap
     117: dup
     118: invokespecial #17                 // Method java/util/HashMap."<init>":()V
     121: putfield      #19                 // Field requiredTypesForAspects:Ljava/util/Map;
     124: return

  public java.lang.String getWeaverOptions();
    Code:
       0: aload_0
       1: getfield      #4                  // Field weaverOptions:Ljava/lang/StringBuffer;
       4: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
       7: areturn

  public java.util.List<java.lang.String> getDumpPatterns();
    Code:
       0: aload_0
       1: getfield      #9                  // Field dumpPatterns:Ljava/util/List;
       4: areturn

  public void setDumpBefore(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field dumpBefore:Z
       5: return

  public boolean shouldDumpBefore();
    Code:
       0: aload_0
       1: getfield      #5                  // Field dumpBefore:Z
       4: ireturn

  public void setCreateDumpDirPerClassloader(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field perClassloaderDumpDir:Z
       5: return

  public boolean createDumpDirPerClassloader();
    Code:
       0: aload_0
       1: getfield      #6                  // Field perClassloaderDumpDir:Z
       4: ireturn

  public java.util.List<java.lang.String> getIncludePatterns();
    Code:
       0: aload_0
       1: getfield      #10                 // Field includePatterns:Ljava/util/List;
       4: areturn

  public java.util.List<java.lang.String> getExcludePatterns();
    Code:
       0: aload_0
       1: getfield      #11                 // Field excludePatterns:Ljava/util/List;
       4: areturn

  public java.util.List<java.lang.String> getAspectClassNames();
    Code:
       0: aload_0
       1: getfield      #12                 // Field aspectClassNames:Ljava/util/List;
       4: areturn

  public java.util.List<java.lang.String> getAspectExcludePatterns();
    Code:
       0: aload_0
       1: getfield      #13                 // Field aspectExcludePatterns:Ljava/util/List;
       4: areturn

  public java.util.List<java.lang.String> getAspectIncludePatterns();
    Code:
       0: aload_0
       1: getfield      #14                 // Field aspectIncludePatterns:Ljava/util/List;
       4: areturn

  public java.util.List<org.aspectj.weaver.loadtime.definition.Definition$ConcreteAspect> getConcreteAspects();
    Code:
       0: aload_0
       1: getfield      #15                 // Field concreteAspects:Ljava/util/List;
       4: areturn

  public void appendWeaverOptions(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field weaverOptions:Ljava/lang/StringBuffer;
       4: aload_1
       5: invokevirtual #21                 // Method java/lang/String.trim:()Ljava/lang/String;
       8: invokevirtual #22                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      11: bipush        32
      13: invokevirtual #23                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      16: pop
      17: return

  public void addScopedAspect(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #18                 // Field scopedAspects:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.lang.String getScopeForAspect(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #18                 // Field scopedAspects:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #26                 // class java/lang/String
      13: areturn

  public void setAspectRequires(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field requiredTypesForAspects:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.lang.String getAspectRequires(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field requiredTypesForAspects:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #26                 // class java/lang/String
      13: areturn
}
