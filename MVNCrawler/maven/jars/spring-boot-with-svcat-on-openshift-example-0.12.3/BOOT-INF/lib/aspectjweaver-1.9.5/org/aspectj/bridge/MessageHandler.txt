Compiled from "MessageHandler.java"
public class org.aspectj.bridge.MessageHandler implements org.aspectj.bridge.IMessageHolder {
  protected final java.util.ArrayList<org.aspectj.bridge.IMessage> messages;

  protected final java.util.ArrayList<org.aspectj.bridge.IMessage$Kind> ignoring;

  protected boolean handleMessageResult;

  protected org.aspectj.bridge.IMessageHandler interceptor;

  public org.aspectj.bridge.MessageHandler();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  public org.aspectj.bridge.MessageHandler(boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/ArrayList
       8: dup
       9: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #5                  // Field messages:Ljava/util/ArrayList;
      15: aload_0
      16: new           #3                  // class java/util/ArrayList
      19: dup
      20: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #6                  // Field ignoring:Ljava/util/ArrayList;
      26: aload_0
      27: iload_1
      28: invokevirtual #7                  // Method init:(Z)V
      31: aload_0
      32: getstatic     #8                  // Field org/aspectj/bridge/IMessage.WEAVEINFO:Lorg/aspectj/bridge/IMessage$Kind;
      35: invokevirtual #9                  // Method ignore:(Lorg/aspectj/bridge/IMessage$Kind;)V
      38: return

  public void init();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #7                  // Method init:(Z)V
       5: return

  public void init(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field handleMessageResult:Z
       5: iconst_0
       6: aload_0
       7: getfield      #5                  // Field messages:Ljava/util/ArrayList;
      10: invokevirtual #11                 // Method java/util/ArrayList.size:()I
      13: if_icmpge     23
      16: aload_0
      17: getfield      #5                  // Field messages:Ljava/util/ArrayList;
      20: invokevirtual #12                 // Method java/util/ArrayList.clear:()V
      23: iconst_0
      24: aload_0
      25: getfield      #6                  // Field ignoring:Ljava/util/ArrayList;
      28: invokevirtual #11                 // Method java/util/ArrayList.size:()I
      31: if_icmpge     60
      34: aload_0
      35: getstatic     #8                  // Field org/aspectj/bridge/IMessage.WEAVEINFO:Lorg/aspectj/bridge/IMessage$Kind;
      38: invokevirtual #13                 // Method isIgnoring:(Lorg/aspectj/bridge/IMessage$Kind;)Z
      41: istore_2
      42: aload_0
      43: getfield      #6                  // Field ignoring:Ljava/util/ArrayList;
      46: invokevirtual #12                 // Method java/util/ArrayList.clear:()V
      49: iload_2
      50: ifeq          60
      53: aload_0
      54: getstatic     #8                  // Field org/aspectj/bridge/IMessage.WEAVEINFO:Lorg/aspectj/bridge/IMessage$Kind;
      57: invokevirtual #9                  // Method ignore:(Lorg/aspectj/bridge/IMessage$Kind;)V
      60: aconst_null
      61: aload_0
      62: getfield      #14                 // Field interceptor:Lorg/aspectj/bridge/IMessageHandler;
      65: if_acmpeq     73
      68: aload_0
      69: aconst_null
      70: putfield      #14                 // Field interceptor:Lorg/aspectj/bridge/IMessageHandler;
      73: return

  public void clearMessages();
    Code:
       0: iconst_0
       1: aload_0
       2: getfield      #5                  // Field messages:Ljava/util/ArrayList;
       5: invokevirtual #11                 // Method java/util/ArrayList.size:()I
       8: if_icmpge     18
      11: aload_0
      12: getfield      #5                  // Field messages:Ljava/util/ArrayList;
      15: invokevirtual #12                 // Method java/util/ArrayList.clear:()V
      18: return

  public boolean handleMessage(org.aspectj.bridge.IMessage);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #14                 // Field interceptor:Lorg/aspectj/bridge/IMessageHandler;
       5: if_acmpeq     23
       8: aload_0
       9: getfield      #14                 // Field interceptor:Lorg/aspectj/bridge/IMessageHandler;
      12: aload_1
      13: invokeinterface #15,  2           // InterfaceMethod org/aspectj/bridge/IMessageHandler.handleMessage:(Lorg/aspectj/bridge/IMessage;)Z
      18: ifeq          23
      21: iconst_1
      22: ireturn
      23: aconst_null
      24: aload_1
      25: if_acmpne     38
      28: new           #16                 // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #17                 // String null message
      34: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: getfield      #6                  // Field ignoring:Ljava/util/ArrayList;
      42: aload_1
      43: invokeinterface #19,  1           // InterfaceMethod org/aspectj/bridge/IMessage.getKind:()Lorg/aspectj/bridge/IMessage$Kind;
      48: invokevirtual #20                 // Method java/util/ArrayList.contains:(Ljava/lang/Object;)Z
      51: ifne          63
      54: aload_0
      55: getfield      #5                  // Field messages:Ljava/util/ArrayList;
      58: aload_1
      59: invokevirtual #21                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      62: pop
      63: aload_0
      64: getfield      #10                 // Field handleMessageResult:Z
      67: ireturn

  public boolean isIgnoring(org.aspectj.bridge.IMessage$Kind);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpeq     20
       5: aload_0
       6: getfield      #6                  // Field ignoring:Ljava/util/ArrayList;
       9: aload_1
      10: invokevirtual #20                 // Method java/util/ArrayList.contains:(Ljava/lang/Object;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public void ignore(org.aspectj.bridge.IMessage$Kind);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpeq     25
       5: aload_0
       6: getfield      #6                  // Field ignoring:Ljava/util/ArrayList;
       9: aload_1
      10: invokevirtual #20                 // Method java/util/ArrayList.contains:(Ljava/lang/Object;)Z
      13: ifne          25
      16: aload_0
      17: getfield      #6                  // Field ignoring:Ljava/util/ArrayList;
      20: aload_1
      21: invokevirtual #21                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      24: pop
      25: return

  public void dontIgnore(org.aspectj.bridge.IMessage$Kind);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpeq     14
       5: aload_0
       6: getfield      #6                  // Field ignoring:Ljava/util/ArrayList;
       9: aload_1
      10: invokevirtual #22                 // Method java/util/ArrayList.remove:(Ljava/lang/Object;)Z
      13: pop
      14: return

  public boolean hasAnyMessage(org.aspectj.bridge.IMessage$Kind, boolean);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     22
       5: iconst_0
       6: aload_0
       7: getfield      #5                  // Field messages:Ljava/util/ArrayList;
      10: invokevirtual #11                 // Method java/util/ArrayList.size:()I
      13: if_icmpge     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn
      22: iload_2
      23: ifne          73
      26: aload_0
      27: getfield      #5                  // Field messages:Ljava/util/ArrayList;
      30: invokevirtual #23                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      33: astore_3
      34: aload_3
      35: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          70
      43: aload_3
      44: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #26                 // class org/aspectj/bridge/IMessage
      52: astore        4
      54: aload_1
      55: aload         4
      57: invokeinterface #19,  1           // InterfaceMethod org/aspectj/bridge/IMessage.getKind:()Lorg/aspectj/bridge/IMessage$Kind;
      62: if_acmpne     67
      65: iconst_1
      66: ireturn
      67: goto          34
      70: goto          120
      73: aload_0
      74: getfield      #5                  // Field messages:Ljava/util/ArrayList;
      77: invokevirtual #23                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      80: astore_3
      81: aload_3
      82: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      87: ifeq          120
      90: aload_3
      91: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      96: checkcast     #26                 // class org/aspectj/bridge/IMessage
      99: astore        4
     101: aload_1
     102: aload         4
     104: invokeinterface #19,  1           // InterfaceMethod org/aspectj/bridge/IMessage.getKind:()Lorg/aspectj/bridge/IMessage$Kind;
     109: invokevirtual #27                 // Method org/aspectj/bridge/IMessage$Kind.isSameOrLessThan:(Lorg/aspectj/bridge/IMessage$Kind;)Z
     112: ifeq          117
     115: iconst_1
     116: ireturn
     117: goto          81
     120: iconst_0
     121: ireturn

  public int numMessages(org.aspectj.bridge.IMessage$Kind, boolean);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     13
       5: aload_0
       6: getfield      #5                  // Field messages:Ljava/util/ArrayList;
       9: invokevirtual #11                 // Method java/util/ArrayList.size:()I
      12: ireturn
      13: iconst_0
      14: istore_3
      15: iload_2
      16: ifne          70
      19: aload_0
      20: getfield      #5                  // Field messages:Ljava/util/ArrayList;
      23: invokevirtual #23                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      26: astore        4
      28: aload         4
      30: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          67
      38: aload         4
      40: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #26                 // class org/aspectj/bridge/IMessage
      48: astore        5
      50: aload_1
      51: aload         5
      53: invokeinterface #19,  1           // InterfaceMethod org/aspectj/bridge/IMessage.getKind:()Lorg/aspectj/bridge/IMessage$Kind;
      58: if_acmpne     64
      61: iinc          3, 1
      64: goto          28
      67: goto          121
      70: aload_0
      71: getfield      #5                  // Field messages:Ljava/util/ArrayList;
      74: invokevirtual #23                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      77: astore        4
      79: aload         4
      81: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      86: ifeq          121
      89: aload         4
      91: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      96: checkcast     #26                 // class org/aspectj/bridge/IMessage
      99: astore        5
     101: aload_1
     102: aload         5
     104: invokeinterface #19,  1           // InterfaceMethod org/aspectj/bridge/IMessage.getKind:()Lorg/aspectj/bridge/IMessage$Kind;
     109: invokevirtual #27                 // Method org/aspectj/bridge/IMessage$Kind.isSameOrLessThan:(Lorg/aspectj/bridge/IMessage$Kind;)Z
     112: ifeq          118
     115: iinc          3, 1
     118: goto          79
     121: iload_3
     122: ireturn

  public java.util.List<org.aspectj.bridge.IMessage> getUnmodifiableListView();
    Code:
       0: aload_0
       1: getfield      #5                  // Field messages:Ljava/util/ArrayList;
       4: invokestatic  #28                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public org.aspectj.bridge.IMessage[] getMessages(org.aspectj.bridge.IMessage$Kind, boolean);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     19
       5: aload_0
       6: getfield      #5                  // Field messages:Ljava/util/ArrayList;
       9: getstatic     #29                 // Field org/aspectj/bridge/IMessage.RA_IMessage:[Lorg/aspectj/bridge/IMessage;
      12: invokevirtual #30                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      15: checkcast     #31                 // class "[Lorg/aspectj/bridge/IMessage;"
      18: areturn
      19: new           #3                  // class java/util/ArrayList
      22: dup
      23: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      26: astore_3
      27: iload_2
      28: ifne          86
      31: aload_0
      32: getfield      #5                  // Field messages:Ljava/util/ArrayList;
      35: invokevirtual #23                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      38: astore        4
      40: aload         4
      42: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          83
      50: aload         4
      52: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #26                 // class org/aspectj/bridge/IMessage
      60: astore        5
      62: aload_1
      63: aload         5
      65: invokeinterface #19,  1           // InterfaceMethod org/aspectj/bridge/IMessage.getKind:()Lorg/aspectj/bridge/IMessage$Kind;
      70: if_acmpne     80
      73: aload_3
      74: aload         5
      76: invokevirtual #21                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      79: pop
      80: goto          40
      83: goto          141
      86: aload_0
      87: getfield      #5                  // Field messages:Ljava/util/ArrayList;
      90: invokevirtual #23                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      93: astore        4
      95: aload         4
      97: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     102: ifeq          141
     105: aload         4
     107: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     112: checkcast     #26                 // class org/aspectj/bridge/IMessage
     115: astore        5
     117: aload_1
     118: aload         5
     120: invokeinterface #19,  1           // InterfaceMethod org/aspectj/bridge/IMessage.getKind:()Lorg/aspectj/bridge/IMessage$Kind;
     125: invokevirtual #27                 // Method org/aspectj/bridge/IMessage$Kind.isSameOrLessThan:(Lorg/aspectj/bridge/IMessage$Kind;)Z
     128: ifeq          138
     131: aload_3
     132: aload         5
     134: invokevirtual #21                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     137: pop
     138: goto          95
     141: iconst_0
     142: aload_3
     143: invokevirtual #11                 // Method java/util/ArrayList.size:()I
     146: if_icmpne     153
     149: getstatic     #29                 // Field org/aspectj/bridge/IMessage.RA_IMessage:[Lorg/aspectj/bridge/IMessage;
     152: areturn
     153: aload_3
     154: getstatic     #29                 // Field org/aspectj/bridge/IMessage.RA_IMessage:[Lorg/aspectj/bridge/IMessage;
     157: invokevirtual #30                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     160: checkcast     #31                 // class "[Lorg/aspectj/bridge/IMessage;"
     163: areturn

  public org.aspectj.bridge.IMessage[] getErrors();
    Code:
       0: aload_0
       1: getstatic     #32                 // Field org/aspectj/bridge/IMessage.ERROR:Lorg/aspectj/bridge/IMessage$Kind;
       4: iconst_0
       5: invokevirtual #33                 // Method getMessages:(Lorg/aspectj/bridge/IMessage$Kind;Z)[Lorg/aspectj/bridge/IMessage;
       8: areturn

  public org.aspectj.bridge.IMessage[] getWarnings();
    Code:
       0: aload_0
       1: getstatic     #34                 // Field org/aspectj/bridge/IMessage.WARNING:Lorg/aspectj/bridge/IMessage$Kind;
       4: iconst_0
       5: invokevirtual #33                 // Method getMessages:(Lorg/aspectj/bridge/IMessage$Kind;Z)[Lorg/aspectj/bridge/IMessage;
       8: areturn

  public void setInterceptor(org.aspectj.bridge.IMessageHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field interceptor:Lorg/aspectj/bridge/IMessageHandler;
       5: return

  public java.lang.String toString();
    Code:
       0: iconst_0
       1: aload_0
       2: getfield      #5                  // Field messages:Ljava/util/ArrayList;
       5: invokevirtual #11                 // Method java/util/ArrayList.size:()I
       8: if_icmpne     14
      11: ldc           #35                 // String MessageHandler: no messages
      13: areturn
      14: new           #36                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #38                 // String MessageHandler:
      23: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #5                  // Field messages:Ljava/util/ArrayList;
      30: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: areturn
}
