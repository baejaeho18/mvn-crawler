Compiled from "NotAnnotationTypePattern.java"
public class org.aspectj.weaver.patterns.NotAnnotationTypePattern extends org.aspectj.weaver.patterns.AnnotationTypePattern {
  org.aspectj.weaver.patterns.AnnotationTypePattern negatedPattern;

  public org.aspectj.weaver.patterns.NotAnnotationTypePattern(org.aspectj.weaver.patterns.AnnotationTypePattern);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/aspectj/weaver/patterns/AnnotationTypePattern."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field negatedPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method org/aspectj/weaver/patterns/AnnotationTypePattern.getSourceContext:()Lorg/aspectj/weaver/ISourceContext;
      14: aload_1
      15: invokevirtual #4                  // Method org/aspectj/weaver/patterns/AnnotationTypePattern.getStart:()I
      18: aload_1
      19: invokevirtual #5                  // Method org/aspectj/weaver/patterns/AnnotationTypePattern.getEnd:()I
      22: invokevirtual #6                  // Method setLocation:(Lorg/aspectj/weaver/ISourceContext;II)V
      25: return

  public org.aspectj.util.FuzzyBoolean matches(org.aspectj.weaver.AnnotatedElement);
    Code:
       0: aload_0
       1: getfield      #2                  // Field negatedPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       4: aload_1
       5: invokevirtual #7                  // Method org/aspectj/weaver/patterns/AnnotationTypePattern.matches:(Lorg/aspectj/weaver/AnnotatedElement;)Lorg/aspectj/util/FuzzyBoolean;
       8: invokevirtual #8                  // Method org/aspectj/util/FuzzyBoolean.not:()Lorg/aspectj/util/FuzzyBoolean;
      11: areturn

  public org.aspectj.util.FuzzyBoolean matches(org.aspectj.weaver.AnnotatedElement, org.aspectj.weaver.ResolvedType[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field negatedPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       4: aload_1
       5: aload_2
       6: invokevirtual #9                  // Method org/aspectj/weaver/patterns/AnnotationTypePattern.matches:(Lorg/aspectj/weaver/AnnotatedElement;[Lorg/aspectj/weaver/ResolvedType;)Lorg/aspectj/util/FuzzyBoolean;
       9: invokevirtual #8                  // Method org/aspectj/util/FuzzyBoolean.not:()Lorg/aspectj/util/FuzzyBoolean;
      12: areturn

  public void resolve(org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: getfield      #2                  // Field negatedPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       4: aload_1
       5: invokevirtual #10                 // Method org/aspectj/weaver/patterns/AnnotationTypePattern.resolve:(Lorg/aspectj/weaver/World;)V
       8: return

  public org.aspectj.weaver.patterns.AnnotationTypePattern resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings, boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field negatedPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       5: aload_1
       6: aload_2
       7: iload_3
       8: invokevirtual #11                 // Method org/aspectj/weaver/patterns/AnnotationTypePattern.resolveBindings:(Lorg/aspectj/weaver/patterns/IScope;Lorg/aspectj/weaver/patterns/Bindings;Z)Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      11: putfield      #2                  // Field negatedPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      14: aload_0
      15: areturn

  public org.aspectj.weaver.patterns.AnnotationTypePattern parameterizeWith(java.util.Map<java.lang.String, org.aspectj.weaver.UnresolvedType>, org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: getfield      #2                  // Field negatedPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       4: aload_1
       5: aload_2
       6: invokevirtual #12                 // Method org/aspectj/weaver/patterns/AnnotationTypePattern.parameterizeWith:(Ljava/util/Map;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       9: astore_3
      10: new           #13                 // class org/aspectj/weaver/patterns/NotAnnotationTypePattern
      13: dup
      14: aload_3
      15: invokespecial #14                 // Method "<init>":(Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)V
      18: astore        4
      20: aload         4
      22: aload_0
      23: invokevirtual #15                 // Method copyLocationFrom:(Lorg/aspectj/weaver/patterns/PatternNode;)V
      26: aload_0
      27: invokevirtual #16                 // Method isForParameterAnnotationMatch:()Z
      30: ifeq          38
      33: aload         4
      35: invokevirtual #17                 // Method setForParameterAnnotationMatch:()V
      38: aload         4
      40: areturn

  public void write(org.aspectj.weaver.CompressingDataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_3
       2: invokevirtual #19                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeByte:(I)V
       5: aload_0
       6: getfield      #2                  // Field negatedPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       9: aload_1
      10: invokevirtual #20                 // Method org/aspectj/weaver/patterns/AnnotationTypePattern.write:(Lorg/aspectj/weaver/CompressingDataOutputStream;)V
      13: aload_0
      14: aload_1
      15: invokevirtual #21                 // Method writeLocation:(Ljava/io/DataOutputStream;)V
      18: aload_1
      19: aload_0
      20: invokevirtual #16                 // Method isForParameterAnnotationMatch:()Z
      23: invokevirtual #22                 // Method org/aspectj/weaver/CompressingDataOutputStream.writeBoolean:(Z)V
      26: return

  public static org.aspectj.weaver.patterns.AnnotationTypePattern read(org.aspectj.weaver.VersionedDataInputStream, org.aspectj.weaver.ISourceContext) throws java.io.IOException;
    Code:
       0: new           #13                 // class org/aspectj/weaver/patterns/NotAnnotationTypePattern
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #23                 // Method org/aspectj/weaver/patterns/AnnotationTypePattern.read:(Lorg/aspectj/weaver/VersionedDataInputStream;Lorg/aspectj/weaver/ISourceContext;)Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       9: invokespecial #14                 // Method "<init>":(Lorg/aspectj/weaver/patterns/AnnotationTypePattern;)V
      12: astore_2
      13: aload_2
      14: aload_1
      15: aload_0
      16: invokevirtual #24                 // Method org/aspectj/weaver/patterns/AnnotationTypePattern.readLocation:(Lorg/aspectj/weaver/ISourceContext;Ljava/io/DataInputStream;)V
      19: aload_0
      20: invokevirtual #25                 // Method org/aspectj/weaver/VersionedDataInputStream.getMajorVersion:()I
      23: iconst_4
      24: if_icmplt     38
      27: aload_0
      28: invokevirtual #27                 // Method org/aspectj/weaver/VersionedDataInputStream.readBoolean:()Z
      31: ifeq          38
      34: aload_2
      35: invokevirtual #28                 // Method org/aspectj/weaver/patterns/AnnotationTypePattern.setForParameterAnnotationMatch:()V
      38: aload_2
      39: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #13                 // class org/aspectj/weaver/patterns/NotAnnotationTypePattern
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #13                 // class org/aspectj/weaver/patterns/NotAnnotationTypePattern
      13: astore_2
      14: aload_2
      15: getfield      #2                  // Field negatedPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      18: aload_0
      19: getfield      #2                  // Field negatedPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      22: invokevirtual #29                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      25: ifeq          43
      28: aload_2
      29: invokevirtual #16                 // Method isForParameterAnnotationMatch:()Z
      32: aload_0
      33: invokevirtual #16                 // Method isForParameterAnnotationMatch:()Z
      36: if_icmpne     43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: bipush        37
       4: aload_0
       5: getfield      #2                  // Field negatedPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       8: invokevirtual #30                 // Method java/lang/Object.hashCode:()I
      11: imul
      12: iadd
      13: istore_1
      14: bipush        37
      16: iload_1
      17: imul
      18: aload_0
      19: invokevirtual #16                 // Method isForParameterAnnotationMatch:()Z
      22: ifeq          29
      25: iconst_0
      26: goto          30
      29: iconst_1
      30: iadd
      31: istore_1
      32: iload_1
      33: ireturn

  public java.lang.String toString();
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #33                 // String !
       9: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field negatedPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      16: invokevirtual #35                 // Method java/lang/Object.toString:()Ljava/lang/String;
      19: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn

  public org.aspectj.weaver.patterns.AnnotationTypePattern getNegatedPattern();
    Code:
       0: aload_0
       1: getfield      #2                  // Field negatedPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       4: areturn

  public java.lang.Object accept(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #37,  3           // InterfaceMethod org/aspectj/weaver/patterns/PatternNodeVisitor.visit:(Lorg/aspectj/weaver/patterns/NotAnnotationTypePattern;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object traverse(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #38                 // Method accept:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
       6: astore_3
       7: aload_0
       8: getfield      #2                  // Field negatedPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
      11: aload_1
      12: aload_3
      13: invokevirtual #39                 // Method org/aspectj/weaver/patterns/AnnotationTypePattern.traverse:(Lorg/aspectj/weaver/patterns/PatternNodeVisitor;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_3
      18: areturn

  public void setForParameterAnnotationMatch();
    Code:
       0: aload_0
       1: getfield      #2                  // Field negatedPattern:Lorg/aspectj/weaver/patterns/AnnotationTypePattern;
       4: invokevirtual #28                 // Method org/aspectj/weaver/patterns/AnnotationTypePattern.setForParameterAnnotationMatch:()V
       7: return
}
