Compiled from "CompilationAndWeavingContext.java"
public class org.aspectj.bridge.context.CompilationAndWeavingContext {
  private static int nextTokenId;

  public static final int BATCH_BUILD;

  public static final int INCREMENTAL_BUILD;

  public static final int PROCESSING_COMPILATION_UNIT;

  public static final int RESOLVING_COMPILATION_UNIT;

  public static final int ANALYSING_COMPILATION_UNIT;

  public static final int GENERATING_UNWOVEN_CODE_FOR_COMPILATION_UNIT;

  public static final int COMPLETING_TYPE_BINDINGS;

  public static final int PROCESSING_DECLARE_PARENTS;

  public static final int CHECK_AND_SET_IMPORTS;

  public static final int CONNECTING_TYPE_HIERARCHY;

  public static final int BUILDING_FIELDS_AND_METHODS;

  public static final int COLLECTING_ITDS_AND_DECLARES;

  public static final int PROCESSING_DECLARE_ANNOTATIONS;

  public static final int WEAVING_INTERTYPE_DECLARATIONS;

  public static final int RESOLVING_POINTCUT_DECLARATIONS;

  public static final int ADDING_DECLARE_WARNINGS_AND_ERRORS;

  public static final int VALIDATING_AT_ASPECTJ_ANNOTATIONS;

  public static final int ACCESS_FOR_INLINE;

  public static final int ADDING_AT_ASPECTJ_ANNOTATIONS;

  public static final int FIXING_SUPER_CALLS_IN_ITDS;

  public static final int FIXING_SUPER_CALLS;

  public static final int OPTIMIZING_THIS_JOIN_POINT_CALLS;

  public static final int WEAVING;

  public static final int PROCESSING_REWEAVABLE_STATE;

  public static final int PROCESSING_TYPE_MUNGERS;

  public static final int WEAVING_ASPECTS;

  public static final int WEAVING_CLASSES;

  public static final int WEAVING_TYPE;

  public static final int MATCHING_SHADOW;

  public static final int IMPLEMENTING_ON_SHADOW;

  public static final int MATCHING_POINTCUT;

  public static final int MUNGING_WITH;

  public static final int PROCESSING_ATASPECTJTYPE_MUNGERS_ONLY;

  public static final java.lang.String[] PHASE_NAMES;

  private static java.lang.ThreadLocal<java.util.Stack<org.aspectj.bridge.context.CompilationAndWeavingContext$ContextStackEntry>> contextMap;

  private static java.util.Stack<org.aspectj.bridge.context.CompilationAndWeavingContext$ContextStackEntry> contextStack;

  private static java.util.Map<java.lang.Integer, org.aspectj.bridge.context.ContextFormatter> formatterMap;

  private static org.aspectj.bridge.context.ContextFormatter defaultFormatter;

  private static boolean multiThreaded;

  private org.aspectj.bridge.context.CompilationAndWeavingContext();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static void reset();
    Code:
       0: getstatic     #3                  // Field multiThreaded:Z
       3: ifne          33
       6: getstatic     #4                  // Field contextMap:Ljava/lang/ThreadLocal;
       9: invokevirtual #5                  // Method java/lang/ThreadLocal.remove:()V
      12: getstatic     #6                  // Field contextStack:Ljava/util/Stack;
      15: invokevirtual #7                  // Method java/util/Stack.clear:()V
      18: getstatic     #8                  // Field formatterMap:Ljava/util/Map;
      21: invokeinterface #9,  1            // InterfaceMethod java/util/Map.clear:()V
      26: iconst_1
      27: putstatic     #10                 // Field nextTokenId:I
      30: goto          39
      33: getstatic     #4                  // Field contextMap:Ljava/lang/ThreadLocal;
      36: invokevirtual #5                  // Method java/lang/ThreadLocal.remove:()V
      39: return

  public static void setMultiThreaded(boolean);
    Code:
       0: iload_0
       1: putstatic     #3                  // Field multiThreaded:Z
       4: return

  public static void registerFormatter(int, org.aspectj.bridge.context.ContextFormatter);
    Code:
       0: getstatic     #8                  // Field formatterMap:Ljava/util/Map;
       3: new           #11                 // class java/lang/Integer
       6: dup
       7: iload_0
       8: invokespecial #12                 // Method java/lang/Integer."<init>":(I)V
      11: aload_1
      12: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  public static java.lang.String getCurrentContext();
    Code:
       0: invokestatic  #14                 // Method getContextStack:()Ljava/util/Stack;
       3: astore_0
       4: new           #15                 // class java/util/Stack
       7: dup
       8: invokespecial #16                 // Method java/util/Stack."<init>":()V
      11: astore_1
      12: aload_0
      13: invokevirtual #17                 // Method java/util/Stack.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          70
      26: aload_2
      27: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #20                 // class org/aspectj/bridge/context/CompilationAndWeavingContext$ContextStackEntry
      35: astore_3
      36: aload_3
      37: invokevirtual #21                 // Method org/aspectj/bridge/context/CompilationAndWeavingContext$ContextStackEntry.getData:()Ljava/lang/Object;
      40: astore        4
      42: aload         4
      44: ifnull        67
      47: aload_1
      48: aload_3
      49: invokestatic  #1                  // Method getFormatter:(Lorg/aspectj/bridge/context/CompilationAndWeavingContext$ContextStackEntry;)Lorg/aspectj/bridge/context/ContextFormatter;
      52: aload_3
      53: getfield      #22                 // Field org/aspectj/bridge/context/CompilationAndWeavingContext$ContextStackEntry.phaseId:I
      56: aload         4
      58: invokeinterface #23,  3           // InterfaceMethod org/aspectj/bridge/context/ContextFormatter.formatEntry:(ILjava/lang/Object;)Ljava/lang/String;
      63: invokevirtual #24                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      66: pop
      67: goto          17
      70: new           #25                 // class java/lang/StringBuffer
      73: dup
      74: invokespecial #26                 // Method java/lang/StringBuffer."<init>":()V
      77: astore_2
      78: aload_1
      79: invokevirtual #27                 // Method java/util/Stack.isEmpty:()Z
      82: ifne          117
      85: aload_2
      86: ldc           #28                 // String when
      88: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      91: pop
      92: aload_2
      93: aload_1
      94: invokevirtual #30                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      97: checkcast     #31                 // class java/lang/String
     100: invokevirtual #32                 // Method java/lang/String.toString:()Ljava/lang/String;
     103: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     106: pop
     107: aload_2
     108: ldc           #33                 // String \n
     110: invokevirtual #29                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     113: pop
     114: goto          78
     117: aload_2
     118: invokevirtual #34                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     121: areturn

  public static org.aspectj.bridge.context.ContextToken enteringPhase(int, java.lang.Object);
    Code:
       0: invokestatic  #14                 // Method getContextStack:()Ljava/util/Stack;
       3: astore_2
       4: invokestatic  #35                 // Method nextToken:()Lorg/aspectj/bridge/context/CompilationAndWeavingContext$ContextTokenImpl;
       7: astore_3
       8: aload_2
       9: new           #20                 // class org/aspectj/bridge/context/CompilationAndWeavingContext$ContextStackEntry
      12: dup
      13: aload_3
      14: iload_0
      15: new           #36                 // class java/lang/ref/WeakReference
      18: dup
      19: aload_1
      20: invokespecial #37                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      23: invokespecial #38                 // Method org/aspectj/bridge/context/CompilationAndWeavingContext$ContextStackEntry."<init>":(Lorg/aspectj/bridge/context/CompilationAndWeavingContext$ContextTokenImpl;ILjava/lang/ref/WeakReference;)V
      26: invokevirtual #24                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_3
      31: areturn

  public static void leavingPhase(org.aspectj.bridge.context.ContextToken);
    Code:
       0: invokestatic  #14                 // Method getContextStack:()Ljava/util/Stack;
       3: astore_1
       4: aload_1
       5: invokevirtual #27                 // Method java/util/Stack.isEmpty:()Z
       8: ifne          33
      11: aload_1
      12: invokevirtual #30                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      15: checkcast     #20                 // class org/aspectj/bridge/context/CompilationAndWeavingContext$ContextStackEntry
      18: astore_2
      19: aload_2
      20: getfield      #39                 // Field org/aspectj/bridge/context/CompilationAndWeavingContext$ContextStackEntry.contextToken:Lorg/aspectj/bridge/context/CompilationAndWeavingContext$ContextTokenImpl;
      23: aload_0
      24: if_acmpne     30
      27: goto          33
      30: goto          4
      33: return

  public static void resetForThread();
    Code:
       0: getstatic     #3                  // Field multiThreaded:Z
       3: ifne          7
       6: return
       7: getstatic     #4                  // Field contextMap:Ljava/lang/ThreadLocal;
      10: invokevirtual #5                  // Method java/lang/ThreadLocal.remove:()V
      13: return

  private static java.util.Stack<org.aspectj.bridge.context.CompilationAndWeavingContext$ContextStackEntry> getContextStack();
    Code:
       0: getstatic     #3                  // Field multiThreaded:Z
       3: ifne          10
       6: getstatic     #6                  // Field contextStack:Ljava/util/Stack;
       9: areturn
      10: getstatic     #4                  // Field contextMap:Ljava/lang/ThreadLocal;
      13: invokevirtual #40                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      16: checkcast     #15                 // class java/util/Stack
      19: astore_0
      20: aload_0
      21: ifnonnull     39
      24: new           #15                 // class java/util/Stack
      27: dup
      28: invokespecial #16                 // Method java/util/Stack."<init>":()V
      31: astore_0
      32: getstatic     #4                  // Field contextMap:Ljava/lang/ThreadLocal;
      35: aload_0
      36: invokevirtual #41                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      39: aload_0
      40: areturn

  private static org.aspectj.bridge.context.CompilationAndWeavingContext$ContextTokenImpl nextToken();
    Code:
       0: new           #42                 // class org/aspectj/bridge/context/CompilationAndWeavingContext$ContextTokenImpl
       3: dup
       4: getstatic     #10                 // Field nextTokenId:I
       7: dup
       8: iconst_1
       9: iadd
      10: putstatic     #10                 // Field nextTokenId:I
      13: invokespecial #43                 // Method org/aspectj/bridge/context/CompilationAndWeavingContext$ContextTokenImpl."<init>":(I)V
      16: areturn

  private static org.aspectj.bridge.context.ContextFormatter getFormatter(org.aspectj.bridge.context.CompilationAndWeavingContext$ContextStackEntry);
    Code:
       0: new           #11                 // class java/lang/Integer
       3: dup
       4: aload_0
       5: getfield      #22                 // Field org/aspectj/bridge/context/CompilationAndWeavingContext$ContextStackEntry.phaseId:I
       8: invokespecial #12                 // Method java/lang/Integer."<init>":(I)V
      11: astore_1
      12: getstatic     #8                  // Field formatterMap:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #44,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      21: ifeq          37
      24: getstatic     #8                  // Field formatterMap:Ljava/util/Map;
      27: aload_1
      28: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #46                 // class org/aspectj/bridge/context/ContextFormatter
      36: areturn
      37: getstatic     #47                 // Field defaultFormatter:Lorg/aspectj/bridge/context/ContextFormatter;
      40: areturn

  static org.aspectj.bridge.context.ContextFormatter access$100(org.aspectj.bridge.context.CompilationAndWeavingContext$ContextStackEntry);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method getFormatter:(Lorg/aspectj/bridge/context/CompilationAndWeavingContext$ContextStackEntry;)Lorg/aspectj/bridge/context/ContextFormatter;
       4: areturn

  static {};
    Code:
       0: iconst_1
       1: putstatic     #10                 // Field nextTokenId:I
       4: bipush        33
       6: anewarray     #31                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #48                 // String batch building
      13: aastore
      14: dup
      15: iconst_1
      16: ldc           #49                 // String incrementally building
      18: aastore
      19: dup
      20: iconst_2
      21: ldc           #50                 // String processing compilation unit
      23: aastore
      24: dup
      25: iconst_3
      26: ldc           #51                 // String resolving types defined in compilation unit
      28: aastore
      29: dup
      30: iconst_4
      31: ldc           #52                 // String analysing types defined in compilation unit
      33: aastore
      34: dup
      35: iconst_5
      36: ldc           #53                 // String generating unwoven code for type defined in compilation unit
      38: aastore
      39: dup
      40: bipush        6
      42: ldc           #54                 // String completing type bindings
      44: aastore
      45: dup
      46: bipush        7
      48: ldc           #55                 // String processing declare parents
      50: aastore
      51: dup
      52: bipush        8
      54: ldc           #56                 // String checking and setting imports
      56: aastore
      57: dup
      58: bipush        9
      60: ldc           #57                 // String connecting type hierarchy
      62: aastore
      63: dup
      64: bipush        10
      66: ldc           #58                 // String building fields and methods
      68: aastore
      69: dup
      70: bipush        11
      72: ldc           #59                 // String collecting itds and declares
      74: aastore
      75: dup
      76: bipush        12
      78: ldc           #60                 // String processing declare annotations
      80: aastore
      81: dup
      82: bipush        13
      84: ldc           #61                 // String weaving intertype declarations
      86: aastore
      87: dup
      88: bipush        14
      90: ldc           #62                 // String resolving pointcut declarations
      92: aastore
      93: dup
      94: bipush        15
      96: ldc           #63                 // String adding declare warning and errors
      98: aastore
      99: dup
     100: bipush        16
     102: ldc           #64                 // String validating @AspectJ annotations
     104: aastore
     105: dup
     106: bipush        17
     108: ldc           #65                 // String creating accessors for inlining
     110: aastore
     111: dup
     112: bipush        18
     114: ldc           #66                 // String adding @AspectJ annotations
     116: aastore
     117: dup
     118: bipush        19
     120: ldc           #67                 // String fixing super calls in ITDs in interface context
     122: aastore
     123: dup
     124: bipush        20
     126: ldc           #68                 // String fixing super calls in ITDs
     128: aastore
     129: dup
     130: bipush        21
     132: ldc           #69                 // String optimizing thisJoinPoint calls
     134: aastore
     135: dup
     136: bipush        22
     138: ldc           #70                 // String weaving
     140: aastore
     141: dup
     142: bipush        23
     144: ldc           #71                 // String processing reweavable state
     146: aastore
     147: dup
     148: bipush        24
     150: ldc           #72                 // String processing type mungers
     152: aastore
     153: dup
     154: bipush        25
     156: ldc           #73                 // String weaving aspects
     158: aastore
     159: dup
     160: bipush        26
     162: ldc           #74                 // String weaving classes
     164: aastore
     165: dup
     166: bipush        27
     168: ldc           #75                 // String weaving type
     170: aastore
     171: dup
     172: bipush        28
     174: ldc           #76                 // String matching shadow
     176: aastore
     177: dup
     178: bipush        29
     180: ldc           #77                 // String implementing on shadow
     182: aastore
     183: dup
     184: bipush        30
     186: ldc           #78                 // String matching pointcut
     188: aastore
     189: dup
     190: bipush        31
     192: ldc           #79                 // String type munging with
     194: aastore
     195: dup
     196: bipush        32
     198: ldc           #80                 // String type munging for @AspectJ aspectOf
     200: aastore
     201: putstatic     #81                 // Field PHASE_NAMES:[Ljava/lang/String;
     204: new           #82                 // class java/lang/ThreadLocal
     207: dup
     208: invokespecial #83                 // Method java/lang/ThreadLocal."<init>":()V
     211: putstatic     #4                  // Field contextMap:Ljava/lang/ThreadLocal;
     214: new           #15                 // class java/util/Stack
     217: dup
     218: invokespecial #16                 // Method java/util/Stack."<init>":()V
     221: putstatic     #6                  // Field contextStack:Ljava/util/Stack;
     224: new           #84                 // class java/util/HashMap
     227: dup
     228: invokespecial #85                 // Method java/util/HashMap."<init>":()V
     231: putstatic     #8                  // Field formatterMap:Ljava/util/Map;
     234: new           #86                 // class org/aspectj/bridge/context/CompilationAndWeavingContext$DefaultFormatter
     237: dup
     238: aconst_null
     239: invokespecial #87                 // Method org/aspectj/bridge/context/CompilationAndWeavingContext$DefaultFormatter."<init>":(Lorg/aspectj/bridge/context/CompilationAndWeavingContext$1;)V
     242: putstatic     #47                 // Field defaultFormatter:Lorg/aspectj/bridge/context/ContextFormatter;
     245: iconst_1
     246: putstatic     #3                  // Field multiThreaded:Z
     249: return
}
