Compiled from "BcelGenericSignatureToTypeXConverter.java"
public class org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter {
  private static org.aspectj.weaver.tools.Trace trace;

  public org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.aspectj.weaver.ResolvedType classTypeSignature2TypeX(org.aspectj.util.GenericSignature$ClassTypeSignature, org.aspectj.util.GenericSignature$FormalTypeParameter[], org.aspectj.weaver.World) throws org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter$GenericSignatureFormatException;
    Code:
       0: new           #2                  // class java/util/HashMap
       3: dup
       4: invokespecial #3                  // Method java/util/HashMap."<init>":()V
       7: astore_3
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokestatic  #4                  // Method classTypeSignature2TypeX:(Lorg/aspectj/util/GenericSignature$ClassTypeSignature;[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;Lorg/aspectj/weaver/World;Ljava/util/Map;)Lorg/aspectj/weaver/ResolvedType;
      15: astore        4
      17: aload         4
      19: aload_3
      20: invokestatic  #5                  // Method fixUpCircularDependencies:(Lorg/aspectj/weaver/ResolvedType;Ljava/util/Map;)V
      23: aload         4
      25: areturn

  private static org.aspectj.weaver.ResolvedType classTypeSignature2TypeX(org.aspectj.util.GenericSignature$ClassTypeSignature, org.aspectj.util.GenericSignature$FormalTypeParameter[], org.aspectj.weaver.World, java.util.Map<org.aspectj.util.GenericSignature$FormalTypeParameter, org.aspectj.weaver.ReferenceType>) throws org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter$GenericSignatureFormatException;
    Code:
       0: new           #6                  // class java/lang/StringBuffer
       3: dup
       4: invokespecial #7                  // Method java/lang/StringBuffer."<init>":()V
       7: astore        4
       9: aload         4
      11: aload_0
      12: getfield      #8                  // Field org/aspectj/util/GenericSignature$ClassTypeSignature.outerType:Lorg/aspectj/util/GenericSignature$SimpleClassTypeSignature;
      15: getfield      #9                  // Field org/aspectj/util/GenericSignature$SimpleClassTypeSignature.identifier:Ljava/lang/String;
      18: bipush        59
      20: bipush        32
      22: invokevirtual #10                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      25: invokevirtual #11                 // Method java/lang/String.trim:()Ljava/lang/String;
      28: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      31: pop
      32: iconst_0
      33: istore        5
      35: iload         5
      37: aload_0
      38: getfield      #13                 // Field org/aspectj/util/GenericSignature$ClassTypeSignature.nestedTypes:[Lorg/aspectj/util/GenericSignature$SimpleClassTypeSignature;
      41: arraylength
      42: if_icmpge     85
      45: aload         4
      47: ldc           #14                 // String $
      49: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      52: pop
      53: aload         4
      55: aload_0
      56: getfield      #13                 // Field org/aspectj/util/GenericSignature$ClassTypeSignature.nestedTypes:[Lorg/aspectj/util/GenericSignature$SimpleClassTypeSignature;
      59: iload         5
      61: aaload
      62: getfield      #9                  // Field org/aspectj/util/GenericSignature$SimpleClassTypeSignature.identifier:Ljava/lang/String;
      65: bipush        59
      67: bipush        32
      69: invokevirtual #10                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      72: invokevirtual #11                 // Method java/lang/String.trim:()Ljava/lang/String;
      75: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      78: pop
      79: iinc          5, 1
      82: goto          35
      85: aload         4
      87: ldc           #15                 // String ;
      89: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      92: pop
      93: aload_0
      94: getfield      #8                  // Field org/aspectj/util/GenericSignature$ClassTypeSignature.outerType:Lorg/aspectj/util/GenericSignature$SimpleClassTypeSignature;
      97: astore        5
      99: aload_0
     100: getfield      #13                 // Field org/aspectj/util/GenericSignature$ClassTypeSignature.nestedTypes:[Lorg/aspectj/util/GenericSignature$SimpleClassTypeSignature;
     103: arraylength
     104: ifle          121
     107: aload_0
     108: getfield      #13                 // Field org/aspectj/util/GenericSignature$ClassTypeSignature.nestedTypes:[Lorg/aspectj/util/GenericSignature$SimpleClassTypeSignature;
     111: aload_0
     112: getfield      #13                 // Field org/aspectj/util/GenericSignature$ClassTypeSignature.nestedTypes:[Lorg/aspectj/util/GenericSignature$SimpleClassTypeSignature;
     115: arraylength
     116: iconst_1
     117: isub
     118: aaload
     119: astore        5
     121: aload         5
     123: getfield      #16                 // Field org/aspectj/util/GenericSignature$SimpleClassTypeSignature.typeArguments:[Lorg/aspectj/util/GenericSignature$TypeArgument;
     126: arraylength
     127: ifle          250
     130: aload         4
     132: invokevirtual #17                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     135: invokestatic  #18                 // Method org/aspectj/weaver/UnresolvedType.forSignature:(Ljava/lang/String;)Lorg/aspectj/weaver/UnresolvedType;
     138: aload_2
     139: invokevirtual #19                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
     142: astore        6
     144: aload         6
     146: invokevirtual #20                 // Method org/aspectj/weaver/ResolvedType.isGenericType:()Z
     149: ifne          194
     152: aload         6
     154: invokevirtual #21                 // Method org/aspectj/weaver/ResolvedType.isRawType:()Z
     157: ifne          194
     160: getstatic     #22                 // Field trace:Lorg/aspectj/weaver/tools/Trace;
     163: invokeinterface #23,  1           // InterfaceMethod org/aspectj/weaver/tools/Trace.isTraceEnabled:()Z
     168: ifeq          191
     171: getstatic     #22                 // Field trace:Lorg/aspectj/weaver/tools/Trace;
     174: ldc           #24                 // String classTypeSignature2TypeX: this type is not a generic type:
     176: aconst_null
     177: iconst_1
     178: anewarray     #25                 // class java/lang/Object
     181: dup
     182: iconst_0
     183: aload         6
     185: aastore
     186: invokeinterface #26,  4           // InterfaceMethod org/aspectj/weaver/tools/Trace.event:(Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)V
     191: aload         6
     193: areturn
     194: aload         5
     196: getfield      #16                 // Field org/aspectj/util/GenericSignature$SimpleClassTypeSignature.typeArguments:[Lorg/aspectj/util/GenericSignature$TypeArgument;
     199: arraylength
     200: anewarray     #27                 // class org/aspectj/weaver/ResolvedType
     203: astore        7
     205: iconst_0
     206: istore        8
     208: iload         8
     210: aload         7
     212: arraylength
     213: if_icmpge     241
     216: aload         7
     218: iload         8
     220: aload         5
     222: getfield      #16                 // Field org/aspectj/util/GenericSignature$SimpleClassTypeSignature.typeArguments:[Lorg/aspectj/util/GenericSignature$TypeArgument;
     225: iload         8
     227: aaload
     228: aload_1
     229: aload_2
     230: aload_3
     231: invokestatic  #28                 // Method typeArgument2TypeX:(Lorg/aspectj/util/GenericSignature$TypeArgument;[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;Lorg/aspectj/weaver/World;Ljava/util/Map;)Lorg/aspectj/weaver/ResolvedType;
     234: aastore
     235: iinc          8, 1
     238: goto          208
     241: aload         6
     243: aload         7
     245: aload_2
     246: invokestatic  #29                 // Method org/aspectj/weaver/TypeFactory.createParameterizedType:(Lorg/aspectj/weaver/ResolvedType;[Lorg/aspectj/weaver/UnresolvedType;Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ReferenceType;
     249: areturn
     250: aload_2
     251: aload         4
     253: invokevirtual #17                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     256: invokestatic  #18                 // Method org/aspectj/weaver/UnresolvedType.forSignature:(Ljava/lang/String;)Lorg/aspectj/weaver/UnresolvedType;
     259: invokevirtual #30                 // Method org/aspectj/weaver/World.resolve:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
     262: areturn

  public static org.aspectj.weaver.ResolvedType fieldTypeSignature2TypeX(org.aspectj.util.GenericSignature$FieldTypeSignature, org.aspectj.util.GenericSignature$FormalTypeParameter[], org.aspectj.weaver.World) throws org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter$GenericSignatureFormatException;
    Code:
       0: new           #2                  // class java/util/HashMap
       3: dup
       4: invokespecial #3                  // Method java/util/HashMap."<init>":()V
       7: astore_3
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokestatic  #31                 // Method fieldTypeSignature2TypeX:(Lorg/aspectj/util/GenericSignature$FieldTypeSignature;[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;Lorg/aspectj/weaver/World;Ljava/util/Map;)Lorg/aspectj/weaver/ResolvedType;
      15: astore        4
      17: aload         4
      19: aload_3
      20: invokestatic  #5                  // Method fixUpCircularDependencies:(Lorg/aspectj/weaver/ResolvedType;Ljava/util/Map;)V
      23: aload         4
      25: areturn

  private static org.aspectj.weaver.ResolvedType fieldTypeSignature2TypeX(org.aspectj.util.GenericSignature$FieldTypeSignature, org.aspectj.util.GenericSignature$FormalTypeParameter[], org.aspectj.weaver.World, java.util.Map<org.aspectj.util.GenericSignature$FormalTypeParameter, org.aspectj.weaver.ReferenceType>) throws org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter$GenericSignatureFormatException;
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method org/aspectj/util/GenericSignature$FieldTypeSignature.isClassTypeSignature:()Z
       4: ifeq          18
       7: aload_0
       8: checkcast     #33                 // class org/aspectj/util/GenericSignature$ClassTypeSignature
      11: aload_1
      12: aload_2
      13: aload_3
      14: invokestatic  #4                  // Method classTypeSignature2TypeX:(Lorg/aspectj/util/GenericSignature$ClassTypeSignature;[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;Lorg/aspectj/weaver/World;Ljava/util/Map;)Lorg/aspectj/weaver/ResolvedType;
      17: areturn
      18: aload_0
      19: invokevirtual #34                 // Method org/aspectj/util/GenericSignature$FieldTypeSignature.isArrayTypeSignature:()Z
      22: ifeq          73
      25: iconst_0
      26: istore        4
      28: aload_0
      29: astore        5
      31: aload         5
      33: instanceof    #35                 // class org/aspectj/util/GenericSignature$ArrayTypeSignature
      36: ifeq          55
      39: iinc          4, 1
      42: aload         5
      44: checkcast     #35                 // class org/aspectj/util/GenericSignature$ArrayTypeSignature
      47: getfield      #36                 // Field org/aspectj/util/GenericSignature$ArrayTypeSignature.typeSig:Lorg/aspectj/util/GenericSignature$TypeSignature;
      50: astore        5
      52: goto          31
      55: aload_2
      56: aload         5
      58: aload_1
      59: aload_2
      60: aload_3
      61: invokestatic  #37                 // Method typeSignature2TypeX:(Lorg/aspectj/util/GenericSignature$TypeSignature;[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;Lorg/aspectj/weaver/World;Ljava/util/Map;)Lorg/aspectj/weaver/ResolvedType;
      64: iload         4
      66: invokestatic  #38                 // Method org/aspectj/weaver/UnresolvedType.makeArray:(Lorg/aspectj/weaver/UnresolvedType;I)Lorg/aspectj/weaver/UnresolvedType;
      69: invokevirtual #30                 // Method org/aspectj/weaver/World.resolve:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
      72: areturn
      73: aload_0
      74: invokevirtual #39                 // Method org/aspectj/util/GenericSignature$FieldTypeSignature.isTypeVariableSignature:()Z
      77: ifeq          95
      80: aload_0
      81: checkcast     #40                 // class org/aspectj/util/GenericSignature$TypeVariableSignature
      84: aload_1
      85: aload_2
      86: aload_3
      87: invokestatic  #41                 // Method typeVariableSignature2TypeX:(Lorg/aspectj/util/GenericSignature$TypeVariableSignature;[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;Lorg/aspectj/weaver/World;Ljava/util/Map;)Lorg/aspectj/weaver/ResolvedType;
      90: astore        4
      92: aload         4
      94: areturn
      95: new           #42                 // class org/aspectj/weaver/bcel/BcelGenericSignatureToTypeXConverter$GenericSignatureFormatException
      98: dup
      99: new           #43                 // class java/lang/StringBuilder
     102: dup
     103: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     106: ldc           #45                 // String Cant understand field type signature:
     108: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_0
     112: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     115: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: invokespecial #49                 // Method org/aspectj/weaver/bcel/BcelGenericSignatureToTypeXConverter$GenericSignatureFormatException."<init>":(Ljava/lang/String;)V
     121: athrow

  public static org.aspectj.weaver.TypeVariable formalTypeParameter2TypeVariable(org.aspectj.util.GenericSignature$FormalTypeParameter, org.aspectj.util.GenericSignature$FormalTypeParameter[], org.aspectj.weaver.World) throws org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter$GenericSignatureFormatException;
    Code:
       0: new           #2                  // class java/util/HashMap
       3: dup
       4: invokespecial #3                  // Method java/util/HashMap."<init>":()V
       7: astore_3
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokestatic  #50                 // Method formalTypeParameter2TypeVariable:(Lorg/aspectj/util/GenericSignature$FormalTypeParameter;[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;Lorg/aspectj/weaver/World;Ljava/util/Map;)Lorg/aspectj/weaver/TypeVariable;
      15: areturn

  private static org.aspectj.weaver.TypeVariable formalTypeParameter2TypeVariable(org.aspectj.util.GenericSignature$FormalTypeParameter, org.aspectj.util.GenericSignature$FormalTypeParameter[], org.aspectj.weaver.World, java.util.Map<org.aspectj.util.GenericSignature$FormalTypeParameter, org.aspectj.weaver.ReferenceType>) throws org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter$GenericSignatureFormatException;
    Code:
       0: aload_0
       1: getfield      #51                 // Field org/aspectj/util/GenericSignature$FormalTypeParameter.classBound:Lorg/aspectj/util/GenericSignature$FieldTypeSignature;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokestatic  #31                 // Method fieldTypeSignature2TypeX:(Lorg/aspectj/util/GenericSignature$FieldTypeSignature;[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;Lorg/aspectj/weaver/World;Ljava/util/Map;)Lorg/aspectj/weaver/ResolvedType;
      10: astore        4
      12: aload_0
      13: getfield      #52                 // Field org/aspectj/util/GenericSignature$FormalTypeParameter.interfaceBounds:[Lorg/aspectj/util/GenericSignature$FieldTypeSignature;
      16: arraylength
      17: anewarray     #53                 // class org/aspectj/weaver/UnresolvedType
      20: astore        5
      22: iconst_0
      23: istore        6
      25: iload         6
      27: aload         5
      29: arraylength
      30: if_icmpge     57
      33: aload         5
      35: iload         6
      37: aload_0
      38: getfield      #52                 // Field org/aspectj/util/GenericSignature$FormalTypeParameter.interfaceBounds:[Lorg/aspectj/util/GenericSignature$FieldTypeSignature;
      41: iload         6
      43: aaload
      44: aload_1
      45: aload_2
      46: aload_3
      47: invokestatic  #31                 // Method fieldTypeSignature2TypeX:(Lorg/aspectj/util/GenericSignature$FieldTypeSignature;[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;Lorg/aspectj/weaver/World;Ljava/util/Map;)Lorg/aspectj/weaver/ResolvedType;
      50: aastore
      51: iinc          6, 1
      54: goto          25
      57: new           #54                 // class org/aspectj/weaver/TypeVariable
      60: dup
      61: aload_0
      62: getfield      #55                 // Field org/aspectj/util/GenericSignature$FormalTypeParameter.identifier:Ljava/lang/String;
      65: aload         4
      67: aload         5
      69: invokespecial #56                 // Method org/aspectj/weaver/TypeVariable."<init>":(Ljava/lang/String;Lorg/aspectj/weaver/UnresolvedType;[Lorg/aspectj/weaver/UnresolvedType;)V
      72: areturn

  private static org.aspectj.weaver.ResolvedType typeArgument2TypeX(org.aspectj.util.GenericSignature$TypeArgument, org.aspectj.util.GenericSignature$FormalTypeParameter[], org.aspectj.weaver.World, java.util.Map<org.aspectj.util.GenericSignature$FormalTypeParameter, org.aspectj.weaver.ReferenceType>) throws org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter$GenericSignatureFormatException;
    Code:
       0: aload_0
       1: getfield      #57                 // Field org/aspectj/util/GenericSignature$TypeArgument.isWildcard:Z
       4: ifeq          15
       7: getstatic     #58                 // Field org/aspectj/weaver/UnresolvedType.SOMETHING:Lorg/aspectj/weaver/UnresolvedType;
      10: aload_2
      11: invokevirtual #19                 // Method org/aspectj/weaver/UnresolvedType.resolve:(Lorg/aspectj/weaver/World;)Lorg/aspectj/weaver/ResolvedType;
      14: areturn
      15: aload_0
      16: getfield      #59                 // Field org/aspectj/util/GenericSignature$TypeArgument.isMinus:Z
      19: ifeq          112
      22: aload_0
      23: getfield      #60                 // Field org/aspectj/util/GenericSignature$TypeArgument.signature:Lorg/aspectj/util/GenericSignature$FieldTypeSignature;
      26: aload_1
      27: aload_2
      28: aload_3
      29: invokestatic  #31                 // Method fieldTypeSignature2TypeX:(Lorg/aspectj/util/GenericSignature$FieldTypeSignature;[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;Lorg/aspectj/weaver/World;Ljava/util/Map;)Lorg/aspectj/weaver/ResolvedType;
      32: astore        4
      34: aload_2
      35: aload         4
      37: invokevirtual #30                 // Method org/aspectj/weaver/World.resolve:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
      40: astore        5
      42: aload         5
      44: invokevirtual #61                 // Method org/aspectj/weaver/ResolvedType.isMissing:()Z
      47: ifeq          93
      50: aload_2
      51: invokevirtual #62                 // Method org/aspectj/weaver/World.getLint:()Lorg/aspectj/weaver/Lint;
      54: getfield      #63                 // Field org/aspectj/weaver/Lint.cantFindType:Lorg/aspectj/weaver/Lint$Kind;
      57: new           #43                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #64                 // String Unable to find type (for bound):
      66: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload         5
      71: invokevirtual #65                 // Method org/aspectj/weaver/ResolvedType.getName:()Ljava/lang/String;
      74: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: aconst_null
      81: invokevirtual #66                 // Method org/aspectj/weaver/Lint$Kind.signal:(Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;)V
      84: aload_2
      85: getstatic     #67                 // Field org/aspectj/weaver/UnresolvedType.OBJECT:Lorg/aspectj/weaver/UnresolvedType;
      88: invokevirtual #30                 // Method org/aspectj/weaver/World.resolve:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
      91: astore        5
      93: aload         5
      95: checkcast     #68                 // class org/aspectj/weaver/ReferenceType
      98: astore        6
     100: new           #69                 // class org/aspectj/weaver/BoundedReferenceType
     103: dup
     104: aload         6
     106: iconst_0
     107: aload_2
     108: invokespecial #70                 // Method org/aspectj/weaver/BoundedReferenceType."<init>":(Lorg/aspectj/weaver/ReferenceType;ZLorg/aspectj/weaver/World;)V
     111: areturn
     112: aload_0
     113: getfield      #71                 // Field org/aspectj/util/GenericSignature$TypeArgument.isPlus:Z
     116: ifeq          209
     119: aload_0
     120: getfield      #60                 // Field org/aspectj/util/GenericSignature$TypeArgument.signature:Lorg/aspectj/util/GenericSignature$FieldTypeSignature;
     123: aload_1
     124: aload_2
     125: aload_3
     126: invokestatic  #31                 // Method fieldTypeSignature2TypeX:(Lorg/aspectj/util/GenericSignature$FieldTypeSignature;[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;Lorg/aspectj/weaver/World;Ljava/util/Map;)Lorg/aspectj/weaver/ResolvedType;
     129: astore        4
     131: aload_2
     132: aload         4
     134: invokevirtual #30                 // Method org/aspectj/weaver/World.resolve:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
     137: astore        5
     139: aload         5
     141: invokevirtual #61                 // Method org/aspectj/weaver/ResolvedType.isMissing:()Z
     144: ifeq          190
     147: aload_2
     148: invokevirtual #62                 // Method org/aspectj/weaver/World.getLint:()Lorg/aspectj/weaver/Lint;
     151: getfield      #63                 // Field org/aspectj/weaver/Lint.cantFindType:Lorg/aspectj/weaver/Lint$Kind;
     154: new           #43                 // class java/lang/StringBuilder
     157: dup
     158: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     161: ldc           #64                 // String Unable to find type (for bound):
     163: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: aload         5
     168: invokevirtual #65                 // Method org/aspectj/weaver/ResolvedType.getName:()Ljava/lang/String;
     171: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     177: aconst_null
     178: invokevirtual #66                 // Method org/aspectj/weaver/Lint$Kind.signal:(Ljava/lang/String;Lorg/aspectj/bridge/ISourceLocation;)V
     181: aload_2
     182: getstatic     #67                 // Field org/aspectj/weaver/UnresolvedType.OBJECT:Lorg/aspectj/weaver/UnresolvedType;
     185: invokevirtual #30                 // Method org/aspectj/weaver/World.resolve:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
     188: astore        5
     190: aload         5
     192: checkcast     #68                 // class org/aspectj/weaver/ReferenceType
     195: astore        6
     197: new           #69                 // class org/aspectj/weaver/BoundedReferenceType
     200: dup
     201: aload         6
     203: iconst_1
     204: aload_2
     205: invokespecial #70                 // Method org/aspectj/weaver/BoundedReferenceType."<init>":(Lorg/aspectj/weaver/ReferenceType;ZLorg/aspectj/weaver/World;)V
     208: areturn
     209: aload_0
     210: getfield      #60                 // Field org/aspectj/util/GenericSignature$TypeArgument.signature:Lorg/aspectj/util/GenericSignature$FieldTypeSignature;
     213: aload_1
     214: aload_2
     215: aload_3
     216: invokestatic  #31                 // Method fieldTypeSignature2TypeX:(Lorg/aspectj/util/GenericSignature$FieldTypeSignature;[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;Lorg/aspectj/weaver/World;Ljava/util/Map;)Lorg/aspectj/weaver/ResolvedType;
     219: areturn

  public static org.aspectj.weaver.ResolvedType typeSignature2TypeX(org.aspectj.util.GenericSignature$TypeSignature, org.aspectj.util.GenericSignature$FormalTypeParameter[], org.aspectj.weaver.World) throws org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter$GenericSignatureFormatException;
    Code:
       0: new           #2                  // class java/util/HashMap
       3: dup
       4: invokespecial #3                  // Method java/util/HashMap."<init>":()V
       7: astore_3
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokestatic  #37                 // Method typeSignature2TypeX:(Lorg/aspectj/util/GenericSignature$TypeSignature;[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;Lorg/aspectj/weaver/World;Ljava/util/Map;)Lorg/aspectj/weaver/ResolvedType;
      15: astore        4
      17: aload         4
      19: aload_3
      20: invokestatic  #5                  // Method fixUpCircularDependencies:(Lorg/aspectj/weaver/ResolvedType;Ljava/util/Map;)V
      23: aload         4
      25: areturn

  private static org.aspectj.weaver.ResolvedType typeSignature2TypeX(org.aspectj.util.GenericSignature$TypeSignature, org.aspectj.util.GenericSignature$FormalTypeParameter[], org.aspectj.weaver.World, java.util.Map<org.aspectj.util.GenericSignature$FormalTypeParameter, org.aspectj.weaver.ReferenceType>) throws org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter$GenericSignatureFormatException;
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method org/aspectj/util/GenericSignature$TypeSignature.isBaseType:()Z
       4: ifeq          22
       7: aload_2
       8: aload_0
       9: checkcast     #73                 // class org/aspectj/util/GenericSignature$BaseTypeSignature
      12: invokevirtual #74                 // Method org/aspectj/util/GenericSignature$BaseTypeSignature.toString:()Ljava/lang/String;
      15: invokestatic  #18                 // Method org/aspectj/weaver/UnresolvedType.forSignature:(Ljava/lang/String;)Lorg/aspectj/weaver/UnresolvedType;
      18: invokevirtual #30                 // Method org/aspectj/weaver/World.resolve:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
      21: areturn
      22: aload_0
      23: checkcast     #75                 // class org/aspectj/util/GenericSignature$FieldTypeSignature
      26: aload_1
      27: aload_2
      28: aload_3
      29: invokestatic  #31                 // Method fieldTypeSignature2TypeX:(Lorg/aspectj/util/GenericSignature$FieldTypeSignature;[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;Lorg/aspectj/weaver/World;Ljava/util/Map;)Lorg/aspectj/weaver/ResolvedType;
      32: areturn

  private static org.aspectj.weaver.ResolvedType typeVariableSignature2TypeX(org.aspectj.util.GenericSignature$TypeVariableSignature, org.aspectj.util.GenericSignature$FormalTypeParameter[], org.aspectj.weaver.World, java.util.Map<org.aspectj.util.GenericSignature$FormalTypeParameter, org.aspectj.weaver.ReferenceType>) throws org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter$GenericSignatureFormatException;
    Code:
       0: aconst_null
       1: astore        4
       3: iconst_0
       4: istore        5
       6: iload         5
       8: aload_1
       9: arraylength
      10: if_icmpge     45
      13: aload_1
      14: iload         5
      16: aaload
      17: getfield      #55                 // Field org/aspectj/util/GenericSignature$FormalTypeParameter.identifier:Ljava/lang/String;
      20: aload_0
      21: getfield      #76                 // Field org/aspectj/util/GenericSignature$TypeVariableSignature.typeVariableName:Ljava/lang/String;
      24: invokevirtual #77                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifeq          39
      30: aload_1
      31: iload         5
      33: aaload
      34: astore        4
      36: goto          45
      39: iinc          5, 1
      42: goto          6
      45: aload         4
      47: ifnonnull     70
      50: new           #78                 // class org/aspectj/weaver/TypeVariableReferenceType
      53: dup
      54: new           #54                 // class org/aspectj/weaver/TypeVariable
      57: dup
      58: aload_0
      59: getfield      #76                 // Field org/aspectj/util/GenericSignature$TypeVariableSignature.typeVariableName:Ljava/lang/String;
      62: invokespecial #79                 // Method org/aspectj/weaver/TypeVariable."<init>":(Ljava/lang/String;)V
      65: aload_2
      66: invokespecial #80                 // Method org/aspectj/weaver/TypeVariableReferenceType."<init>":(Lorg/aspectj/weaver/TypeVariable;Lorg/aspectj/weaver/World;)V
      69: areturn
      70: aload_3
      71: aload         4
      73: invokeinterface #81,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      78: ifeq          93
      81: aload_3
      82: aload         4
      84: invokeinterface #82,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      89: checkcast     #27                 // class org/aspectj/weaver/ResolvedType
      92: areturn
      93: aload_3
      94: aload         4
      96: new           #83                 // class org/aspectj/weaver/bcel/BcelGenericSignatureToTypeXConverter$FTPHolder
      99: dup
     100: aload         4
     102: aload_2
     103: invokespecial #84                 // Method org/aspectj/weaver/bcel/BcelGenericSignatureToTypeXConverter$FTPHolder."<init>":(Lorg/aspectj/util/GenericSignature$FormalTypeParameter;Lorg/aspectj/weaver/World;)V
     106: invokeinterface #85,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     111: pop
     112: new           #78                 // class org/aspectj/weaver/TypeVariableReferenceType
     115: dup
     116: aload         4
     118: aload_1
     119: aload_2
     120: aload_3
     121: invokestatic  #50                 // Method formalTypeParameter2TypeVariable:(Lorg/aspectj/util/GenericSignature$FormalTypeParameter;[Lorg/aspectj/util/GenericSignature$FormalTypeParameter;Lorg/aspectj/weaver/World;Ljava/util/Map;)Lorg/aspectj/weaver/TypeVariable;
     124: aload_2
     125: invokespecial #80                 // Method org/aspectj/weaver/TypeVariableReferenceType."<init>":(Lorg/aspectj/weaver/TypeVariable;Lorg/aspectj/weaver/World;)V
     128: astore        5
     130: aload_3
     131: aload         4
     133: aload         5
     135: invokeinterface #85,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     140: pop
     141: aload         5
     143: areturn

  private static void fixUpCircularDependencies(org.aspectj.weaver.ResolvedType, java.util.Map<org.aspectj.util.GenericSignature$FormalTypeParameter, org.aspectj.weaver.ReferenceType>);
    Code:
       0: aload_0
       1: instanceof    #68                 // class org/aspectj/weaver/ReferenceType
       4: ifne          8
       7: return
       8: aload_0
       9: checkcast     #68                 // class org/aspectj/weaver/ReferenceType
      12: astore_2
      13: aload_2
      14: invokevirtual #86                 // Method org/aspectj/weaver/ReferenceType.getTypeVariables:()[Lorg/aspectj/weaver/TypeVariable;
      17: astore_3
      18: aload_3
      19: ifnull        84
      22: iconst_0
      23: istore        4
      25: iload         4
      27: aload_3
      28: arraylength
      29: if_icmpge     84
      32: aload_3
      33: iload         4
      35: aaload
      36: invokevirtual #87                 // Method org/aspectj/weaver/TypeVariable.getUpperBound:()Lorg/aspectj/weaver/UnresolvedType;
      39: instanceof    #83                 // class org/aspectj/weaver/bcel/BcelGenericSignatureToTypeXConverter$FTPHolder
      42: ifeq          78
      45: aload_3
      46: iload         4
      48: aaload
      49: invokevirtual #87                 // Method org/aspectj/weaver/TypeVariable.getUpperBound:()Lorg/aspectj/weaver/UnresolvedType;
      52: checkcast     #83                 // class org/aspectj/weaver/bcel/BcelGenericSignatureToTypeXConverter$FTPHolder
      55: getfield      #88                 // Field org/aspectj/weaver/bcel/BcelGenericSignatureToTypeXConverter$FTPHolder.ftpToBeSubstituted:Lorg/aspectj/util/GenericSignature$FormalTypeParameter;
      58: astore        5
      60: aload_3
      61: iload         4
      63: aaload
      64: aload_1
      65: aload         5
      67: invokeinterface #82,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #53                 // class org/aspectj/weaver/UnresolvedType
      75: invokevirtual #89                 // Method org/aspectj/weaver/TypeVariable.setUpperBound:(Lorg/aspectj/weaver/UnresolvedType;)V
      78: iinc          4, 1
      81: goto          25
      84: return

  static {};
    Code:
       0: invokestatic  #90                 // Method org/aspectj/weaver/tools/TraceFactory.getTraceFactory:()Lorg/aspectj/weaver/tools/TraceFactory;
       3: ldc           #91                 // class org/aspectj/weaver/bcel/BcelGenericSignatureToTypeXConverter
       5: invokevirtual #92                 // Method org/aspectj/weaver/tools/TraceFactory.getTrace:(Ljava/lang/Class;)Lorg/aspectj/weaver/tools/Trace;
       8: putstatic     #22                 // Field trace:Lorg/aspectj/weaver/tools/Trace;
      11: return
}
