Compiled from "BoundedReferenceType.java"
public class org.aspectj.weaver.BoundedReferenceType extends org.aspectj.weaver.ReferenceType {
  public static final int UNBOUND;

  public static final int EXTENDS;

  public static final int SUPER;

  public int kind;

  private org.aspectj.weaver.ResolvedType lowerBound;

  private org.aspectj.weaver.ResolvedType upperBound;

  protected org.aspectj.weaver.ReferenceType[] additionalInterfaceBounds;

  public org.aspectj.weaver.BoundedReferenceType(org.aspectj.weaver.ReferenceType, boolean, org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: new           #1                  // class java/lang/StringBuilder
       4: dup
       5: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
       8: iload_2
       9: ifeq          17
      12: ldc           #3                  // String +
      14: goto          19
      17: ldc           #4                  // String -
      19: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_1
      23: getfield      #6                  // Field org/aspectj/weaver/ReferenceType.signature:Ljava/lang/String;
      26: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: aload_1
      33: getfield      #8                  // Field org/aspectj/weaver/ReferenceType.signatureErasure:Ljava/lang/String;
      36: aload_3
      37: invokespecial #9                  // Method org/aspectj/weaver/ReferenceType."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/aspectj/weaver/World;)V
      40: aload_0
      41: getstatic     #10                 // Field org/aspectj/weaver/ReferenceType.EMPTY_ARRAY:[Lorg/aspectj/weaver/ReferenceType;
      44: putfield      #11                 // Field additionalInterfaceBounds:[Lorg/aspectj/weaver/ReferenceType;
      47: iload_2
      48: ifeq          59
      51: aload_0
      52: iconst_1
      53: putfield      #13                 // Field kind:I
      56: goto          64
      59: aload_0
      60: iconst_2
      61: putfield      #13                 // Field kind:I
      64: iload_2
      65: ifeq          76
      68: aload_0
      69: aload_1
      70: putfield      #14                 // Field upperBound:Lorg/aspectj/weaver/ResolvedType;
      73: goto          92
      76: aload_0
      77: aload_1
      78: putfield      #15                 // Field lowerBound:Lorg/aspectj/weaver/ResolvedType;
      81: aload_0
      82: aload_3
      83: getstatic     #16                 // Field org/aspectj/weaver/UnresolvedType.OBJECT:Lorg/aspectj/weaver/UnresolvedType;
      86: invokevirtual #17                 // Method org/aspectj/weaver/World.resolve:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
      89: putfield      #14                 // Field upperBound:Lorg/aspectj/weaver/ResolvedType;
      92: aload_0
      93: new           #18                 // class org/aspectj/weaver/BoundedReferenceTypeDelegate
      96: dup
      97: aload_0
      98: invokevirtual #19                 // Method getUpperBound:()Lorg/aspectj/weaver/UnresolvedType;
     101: checkcast     #20                 // class org/aspectj/weaver/ReferenceType
     104: invokespecial #21                 // Method org/aspectj/weaver/BoundedReferenceTypeDelegate."<init>":(Lorg/aspectj/weaver/ReferenceType;)V
     107: invokevirtual #22                 // Method setDelegate:(Lorg/aspectj/weaver/ReferenceTypeDelegate;)V
     110: return

  public org.aspectj.weaver.BoundedReferenceType(org.aspectj.weaver.ReferenceType, boolean, org.aspectj.weaver.World, org.aspectj.weaver.ReferenceType[]);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokespecial #23                 // Method "<init>":(Lorg/aspectj/weaver/ReferenceType;ZLorg/aspectj/weaver/World;)V
       7: aload_0
       8: aload         4
      10: putfield      #11                 // Field additionalInterfaceBounds:[Lorg/aspectj/weaver/ReferenceType;
      13: return

  protected org.aspectj.weaver.BoundedReferenceType(java.lang.String, java.lang.String, org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #9                  // Method org/aspectj/weaver/ReferenceType."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/aspectj/weaver/World;)V
       7: aload_0
       8: getstatic     #10                 // Field org/aspectj/weaver/ReferenceType.EMPTY_ARRAY:[Lorg/aspectj/weaver/ReferenceType;
      11: putfield      #11                 // Field additionalInterfaceBounds:[Lorg/aspectj/weaver/ReferenceType;
      14: aload_1
      15: ldc           #24                 // String *
      17: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          42
      23: aload_0
      24: iconst_0
      25: putfield      #13                 // Field kind:I
      28: aload_0
      29: aload_3
      30: getstatic     #16                 // Field org/aspectj/weaver/UnresolvedType.OBJECT:Lorg/aspectj/weaver/UnresolvedType;
      33: invokevirtual #17                 // Method org/aspectj/weaver/World.resolve:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
      36: putfield      #14                 // Field upperBound:Lorg/aspectj/weaver/ResolvedType;
      39: goto          54
      42: aload_0
      43: aload_3
      44: aload_2
      45: invokestatic  #26                 // Method forSignature:(Ljava/lang/String;)Lorg/aspectj/weaver/UnresolvedType;
      48: invokevirtual #17                 // Method org/aspectj/weaver/World.resolve:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
      51: putfield      #14                 // Field upperBound:Lorg/aspectj/weaver/ResolvedType;
      54: aload_0
      55: new           #18                 // class org/aspectj/weaver/BoundedReferenceTypeDelegate
      58: dup
      59: aload_0
      60: getfield      #14                 // Field upperBound:Lorg/aspectj/weaver/ResolvedType;
      63: checkcast     #20                 // class org/aspectj/weaver/ReferenceType
      66: invokespecial #21                 // Method org/aspectj/weaver/BoundedReferenceTypeDelegate."<init>":(Lorg/aspectj/weaver/ReferenceType;)V
      69: invokevirtual #22                 // Method setDelegate:(Lorg/aspectj/weaver/ReferenceTypeDelegate;)V
      72: return

  public org.aspectj.weaver.BoundedReferenceType(org.aspectj.weaver.World);
    Code:
       0: aload_0
       1: ldc           #24                 // String *
       3: ldc           #27                 // String Ljava/lang/Object;
       5: aload_1
       6: invokespecial #9                  // Method org/aspectj/weaver/ReferenceType."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/aspectj/weaver/World;)V
       9: aload_0
      10: getstatic     #10                 // Field org/aspectj/weaver/ReferenceType.EMPTY_ARRAY:[Lorg/aspectj/weaver/ReferenceType;
      13: putfield      #11                 // Field additionalInterfaceBounds:[Lorg/aspectj/weaver/ReferenceType;
      16: aload_0
      17: iconst_0
      18: putfield      #13                 // Field kind:I
      21: aload_0
      22: aload_1
      23: getstatic     #16                 // Field org/aspectj/weaver/UnresolvedType.OBJECT:Lorg/aspectj/weaver/UnresolvedType;
      26: invokevirtual #17                 // Method org/aspectj/weaver/World.resolve:(Lorg/aspectj/weaver/UnresolvedType;)Lorg/aspectj/weaver/ResolvedType;
      29: putfield      #14                 // Field upperBound:Lorg/aspectj/weaver/ResolvedType;
      32: aload_0
      33: new           #18                 // class org/aspectj/weaver/BoundedReferenceTypeDelegate
      36: dup
      37: aload_0
      38: getfield      #14                 // Field upperBound:Lorg/aspectj/weaver/ResolvedType;
      41: checkcast     #20                 // class org/aspectj/weaver/ReferenceType
      44: invokespecial #21                 // Method org/aspectj/weaver/BoundedReferenceTypeDelegate."<init>":(Lorg/aspectj/weaver/ReferenceType;)V
      47: invokevirtual #22                 // Method setDelegate:(Lorg/aspectj/weaver/ReferenceTypeDelegate;)V
      50: return

  public org.aspectj.weaver.UnresolvedType getUpperBound();
    Code:
       0: aload_0
       1: getfield      #14                 // Field upperBound:Lorg/aspectj/weaver/ResolvedType;
       4: areturn

  public org.aspectj.weaver.UnresolvedType getLowerBound();
    Code:
       0: aload_0
       1: getfield      #15                 // Field lowerBound:Lorg/aspectj/weaver/ResolvedType;
       4: areturn

  public org.aspectj.weaver.ReferenceType[] getAdditionalBounds();
    Code:
       0: aload_0
       1: getfield      #11                 // Field additionalInterfaceBounds:[Lorg/aspectj/weaver/ReferenceType;
       4: areturn

  public org.aspectj.weaver.UnresolvedType parameterize(java.util.Map<java.lang.String, org.aspectj.weaver.UnresolvedType>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field kind:I
       4: ifne          9
       7: aload_0
       8: areturn
       9: aload_0
      10: getfield      #11                 // Field additionalInterfaceBounds:[Lorg/aspectj/weaver/ReferenceType;
      13: ifnonnull     20
      16: iconst_0
      17: goto          25
      20: aload_0
      21: getfield      #11                 // Field additionalInterfaceBounds:[Lorg/aspectj/weaver/ReferenceType;
      24: arraylength
      25: anewarray     #20                 // class org/aspectj/weaver/ReferenceType
      28: astore_2
      29: iconst_0
      30: istore_3
      31: iload_3
      32: aload_2
      33: arraylength
      34: if_icmpge     59
      37: aload_2
      38: iload_3
      39: aload_0
      40: getfield      #11                 // Field additionalInterfaceBounds:[Lorg/aspectj/weaver/ReferenceType;
      43: iload_3
      44: aaload
      45: aload_1
      46: invokevirtual #28                 // Method org/aspectj/weaver/ReferenceType.parameterize:(Ljava/util/Map;)Lorg/aspectj/weaver/UnresolvedType;
      49: checkcast     #20                 // class org/aspectj/weaver/ReferenceType
      52: aastore
      53: iinc          3, 1
      56: goto          31
      59: aload_0
      60: getfield      #13                 // Field kind:I
      63: iconst_1
      64: if_icmpne     191
      67: aload_0
      68: invokevirtual #19                 // Method getUpperBound:()Lorg/aspectj/weaver/UnresolvedType;
      71: aload_1
      72: invokevirtual #29                 // Method org/aspectj/weaver/UnresolvedType.parameterize:(Ljava/util/Map;)Lorg/aspectj/weaver/UnresolvedType;
      75: astore_3
      76: aload_3
      77: instanceof    #20                 // class org/aspectj/weaver/ReferenceType
      80: ifne          173
      83: new           #30                 // class java/lang/IllegalStateException
      86: dup
      87: new           #1                  // class java/lang/StringBuilder
      90: dup
      91: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #31                 // String DEBUG551732: Unexpected problem processing bounds. Parameterizing
      96: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_0
     100: invokevirtual #19                 // Method getUpperBound:()Lorg/aspectj/weaver/UnresolvedType;
     103: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     106: ldc           #33                 // String  produced
     108: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_3
     112: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     115: ldc           #34                 // String  (Type:
     117: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_3
     121: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     124: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: ifnonnull     135
     130: ldc           #35                 // String null
     132: goto          169
     135: new           #1                  // class java/lang/StringBuilder
     138: dup
     139: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
     142: aload_3
     143: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     146: invokevirtual #37                 // Method java/lang/Class.getName:()Ljava/lang/String;
     149: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: ldc           #38                 // String ) (typeBindings=
     154: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: aload_1
     158: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     161: ldc           #39                 // String )
     163: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     169: invokespecial #40                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     172: athrow
     173: new           #12                 // class org/aspectj/weaver/BoundedReferenceType
     176: dup
     177: aload_3
     178: checkcast     #20                 // class org/aspectj/weaver/ReferenceType
     181: iconst_1
     182: aload_0
     183: getfield      #41                 // Field world:Lorg/aspectj/weaver/World;
     186: aload_2
     187: invokespecial #42                 // Method "<init>":(Lorg/aspectj/weaver/ReferenceType;ZLorg/aspectj/weaver/World;[Lorg/aspectj/weaver/ReferenceType;)V
     190: areturn
     191: aload_0
     192: invokevirtual #43                 // Method getLowerBound:()Lorg/aspectj/weaver/UnresolvedType;
     195: aload_1
     196: invokevirtual #29                 // Method org/aspectj/weaver/UnresolvedType.parameterize:(Ljava/util/Map;)Lorg/aspectj/weaver/UnresolvedType;
     199: astore_3
     200: aload_3
     201: instanceof    #20                 // class org/aspectj/weaver/ReferenceType
     204: ifne          252
     207: new           #30                 // class java/lang/IllegalStateException
     210: dup
     211: new           #1                  // class java/lang/StringBuilder
     214: dup
     215: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
     218: ldc           #44                 // String PR543023: Unexpectedly found a non reference type:
     220: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     223: aload_3
     224: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     227: invokevirtual #37                 // Method java/lang/Class.getName:()Ljava/lang/String;
     230: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     233: ldc           #45                 // String  with signature
     235: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: aload_3
     239: invokevirtual #46                 // Method org/aspectj/weaver/UnresolvedType.getSignature:()Ljava/lang/String;
     242: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     245: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     248: invokespecial #40                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     251: athrow
     252: new           #12                 // class org/aspectj/weaver/BoundedReferenceType
     255: dup
     256: aload_3
     257: checkcast     #20                 // class org/aspectj/weaver/ReferenceType
     260: iconst_0
     261: aload_0
     262: getfield      #41                 // Field world:Lorg/aspectj/weaver/World;
     265: aload_2
     266: invokespecial #42                 // Method "<init>":(Lorg/aspectj/weaver/ReferenceType;ZLorg/aspectj/weaver/World;[Lorg/aspectj/weaver/ReferenceType;)V
     269: areturn

  public java.lang.String getSignatureForAttribute();
    Code:
       0: new           #1                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #13                 // Field kind:I
      12: iconst_2
      13: if_icmpne     69
      16: aload_1
      17: ldc           #4                  // String -
      19: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: pop
      23: aload_1
      24: aload_0
      25: getfield      #15                 // Field lowerBound:Lorg/aspectj/weaver/ResolvedType;
      28: invokevirtual #47                 // Method org/aspectj/weaver/ResolvedType.getSignatureForAttribute:()Ljava/lang/String;
      31: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: pop
      35: iconst_0
      36: istore_2
      37: iload_2
      38: aload_0
      39: getfield      #11                 // Field additionalInterfaceBounds:[Lorg/aspectj/weaver/ReferenceType;
      42: arraylength
      43: if_icmpge     66
      46: aload_1
      47: aload_0
      48: getfield      #11                 // Field additionalInterfaceBounds:[Lorg/aspectj/weaver/ReferenceType;
      51: iload_2
      52: aaload
      53: invokevirtual #48                 // Method org/aspectj/weaver/ReferenceType.getSignatureForAttribute:()Ljava/lang/String;
      56: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: iinc          2, 1
      63: goto          37
      66: goto          144
      69: aload_0
      70: getfield      #13                 // Field kind:I
      73: iconst_1
      74: if_icmpne     130
      77: aload_1
      78: ldc           #3                  // String +
      80: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: pop
      84: aload_1
      85: aload_0
      86: getfield      #14                 // Field upperBound:Lorg/aspectj/weaver/ResolvedType;
      89: invokevirtual #47                 // Method org/aspectj/weaver/ResolvedType.getSignatureForAttribute:()Ljava/lang/String;
      92: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: pop
      96: iconst_0
      97: istore_2
      98: iload_2
      99: aload_0
     100: getfield      #11                 // Field additionalInterfaceBounds:[Lorg/aspectj/weaver/ReferenceType;
     103: arraylength
     104: if_icmpge     127
     107: aload_1
     108: aload_0
     109: getfield      #11                 // Field additionalInterfaceBounds:[Lorg/aspectj/weaver/ReferenceType;
     112: iload_2
     113: aaload
     114: invokevirtual #48                 // Method org/aspectj/weaver/ReferenceType.getSignatureForAttribute:()Ljava/lang/String;
     117: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: pop
     121: iinc          2, 1
     124: goto          98
     127: goto          144
     130: aload_0
     131: getfield      #13                 // Field kind:I
     134: ifne          144
     137: aload_1
     138: ldc           #24                 // String *
     140: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: pop
     144: aload_1
     145: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: areturn

  public boolean hasLowerBound();
    Code:
       0: aload_0
       1: getfield      #15                 // Field lowerBound:Lorg/aspectj/weaver/ResolvedType;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isExtends();
    Code:
       0: aload_0
       1: getfield      #13                 // Field kind:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isSuper();
    Code:
       0: aload_0
       1: getfield      #13                 // Field kind:I
       4: iconst_2
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isUnbound();
    Code:
       0: aload_0
       1: getfield      #13                 // Field kind:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean alwaysMatches(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method isExtends:()Z
       4: ifeq          19
       7: aload_0
       8: invokevirtual #19                 // Method getUpperBound:()Lorg/aspectj/weaver/UnresolvedType;
      11: checkcast     #20                 // class org/aspectj/weaver/ReferenceType
      14: aload_1
      15: invokevirtual #50                 // Method org/aspectj/weaver/ReferenceType.isAssignableFrom:(Lorg/aspectj/weaver/ResolvedType;)Z
      18: ireturn
      19: aload_0
      20: invokevirtual #51                 // Method isSuper:()Z
      23: ifeq          38
      26: aload_1
      27: aload_0
      28: invokevirtual #43                 // Method getLowerBound:()Lorg/aspectj/weaver/UnresolvedType;
      31: checkcast     #20                 // class org/aspectj/weaver/ReferenceType
      34: invokevirtual #52                 // Method org/aspectj/weaver/ResolvedType.isAssignableFrom:(Lorg/aspectj/weaver/ResolvedType;)Z
      37: ireturn
      38: iconst_1
      39: ireturn

  public boolean canBeCoercedTo(org.aspectj.weaver.ResolvedType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method alwaysMatches:(Lorg/aspectj/weaver/ResolvedType;)Z
       5: ifeq          10
       8: iconst_1
       9: ireturn
      10: aload_1
      11: invokevirtual #54                 // Method org/aspectj/weaver/ResolvedType.isGenericWildcard:()Z
      14: ifeq          141
      17: aload_1
      18: checkcast     #12                 // class org/aspectj/weaver/BoundedReferenceType
      21: astore_2
      22: aload_0
      23: invokevirtual #19                 // Method getUpperBound:()Lorg/aspectj/weaver/UnresolvedType;
      26: checkcast     #55                 // class org/aspectj/weaver/ResolvedType
      29: astore_3
      30: aload_0
      31: invokevirtual #43                 // Method getLowerBound:()Lorg/aspectj/weaver/UnresolvedType;
      34: checkcast     #55                 // class org/aspectj/weaver/ResolvedType
      37: astore        4
      39: aload_0
      40: invokevirtual #49                 // Method isExtends:()Z
      43: ifeq          88
      46: aload_2
      47: invokevirtual #49                 // Method isExtends:()Z
      50: ifeq          65
      53: aload_3
      54: aload_2
      55: invokevirtual #19                 // Method getUpperBound:()Lorg/aspectj/weaver/UnresolvedType;
      58: checkcast     #55                 // class org/aspectj/weaver/ResolvedType
      61: invokevirtual #52                 // Method org/aspectj/weaver/ResolvedType.isAssignableFrom:(Lorg/aspectj/weaver/ResolvedType;)Z
      64: ireturn
      65: aload_2
      66: invokevirtual #51                 // Method isSuper:()Z
      69: ifeq          86
      72: aload_3
      73: aload_2
      74: invokevirtual #43                 // Method getLowerBound:()Lorg/aspectj/weaver/UnresolvedType;
      77: if_acmpne     84
      80: iconst_1
      81: goto          85
      84: iconst_0
      85: ireturn
      86: iconst_1
      87: ireturn
      88: aload_0
      89: invokevirtual #51                 // Method isSuper:()Z
      92: ifeq          139
      95: aload_2
      96: invokevirtual #51                 // Method isSuper:()Z
      99: ifeq          115
     102: aload_2
     103: invokevirtual #43                 // Method getLowerBound:()Lorg/aspectj/weaver/UnresolvedType;
     106: checkcast     #55                 // class org/aspectj/weaver/ResolvedType
     109: aload         4
     111: invokevirtual #52                 // Method org/aspectj/weaver/ResolvedType.isAssignableFrom:(Lorg/aspectj/weaver/ResolvedType;)Z
     114: ireturn
     115: aload_2
     116: invokevirtual #49                 // Method isExtends:()Z
     119: ifeq          137
     122: aload         4
     124: aload_2
     125: invokevirtual #19                 // Method getUpperBound:()Lorg/aspectj/weaver/UnresolvedType;
     128: if_acmpne     135
     131: iconst_1
     132: goto          136
     135: iconst_0
     136: ireturn
     137: iconst_1
     138: ireturn
     139: iconst_1
     140: ireturn
     141: iconst_0
     142: ireturn

  public java.lang.String getSimpleName();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method isExtends:()Z
       4: ifne          17
       7: aload_0
       8: invokevirtual #51                 // Method isSuper:()Z
      11: ifne          17
      14: ldc           #56                 // String ?
      16: areturn
      17: aload_0
      18: invokevirtual #49                 // Method isExtends:()Z
      21: ifeq          50
      24: new           #1                  // class java/lang/StringBuilder
      27: dup
      28: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #57                 // String ? extends
      33: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #19                 // Method getUpperBound:()Lorg/aspectj/weaver/UnresolvedType;
      40: invokevirtual #58                 // Method org/aspectj/weaver/UnresolvedType.getSimpleName:()Ljava/lang/String;
      43: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: areturn
      50: new           #1                  // class java/lang/StringBuilder
      53: dup
      54: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #59                 // String ? super
      59: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: invokevirtual #43                 // Method getLowerBound:()Lorg/aspectj/weaver/UnresolvedType;
      66: invokevirtual #58                 // Method org/aspectj/weaver/UnresolvedType.getSimpleName:()Ljava/lang/String;
      69: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  public org.aspectj.weaver.ResolvedType[] getDeclaredInterfaces();
    Code:
       0: aload_0
       1: invokespecial #60                 // Method org/aspectj/weaver/ReferenceType.getDeclaredInterfaces:()[Lorg/aspectj/weaver/ResolvedType;
       4: astore_1
       5: aload_0
       6: getfield      #11                 // Field additionalInterfaceBounds:[Lorg/aspectj/weaver/ReferenceType;
       9: arraylength
      10: ifle          52
      13: aload_1
      14: arraylength
      15: aload_0
      16: getfield      #11                 // Field additionalInterfaceBounds:[Lorg/aspectj/weaver/ReferenceType;
      19: arraylength
      20: iadd
      21: anewarray     #55                 // class org/aspectj/weaver/ResolvedType
      24: astore_2
      25: aload_1
      26: iconst_0
      27: aload_2
      28: iconst_0
      29: aload_1
      30: arraylength
      31: invokestatic  #61                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      34: aload_0
      35: getfield      #11                 // Field additionalInterfaceBounds:[Lorg/aspectj/weaver/ReferenceType;
      38: iconst_0
      39: aload_2
      40: aload_1
      41: arraylength
      42: aload_0
      43: getfield      #11                 // Field additionalInterfaceBounds:[Lorg/aspectj/weaver/ReferenceType;
      46: arraylength
      47: invokestatic  #61                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      50: aload_2
      51: areturn
      52: aload_1
      53: areturn

  public boolean isGenericWildcard();
    Code:
       0: iconst_1
       1: ireturn
}
