Compiled from "ServiceCatalogInstanceFluent.java"
public interface io.dekorate.servicecatalog.config.ServiceCatalogInstanceFluent<A extends io.dekorate.servicecatalog.config.ServiceCatalogInstanceFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getName();

  public abstract A withName(java.lang.String);

  public abstract java.lang.Boolean hasName();

  public abstract A withNewName(java.lang.String);

  public abstract A withNewName(java.lang.StringBuilder);

  public abstract A withNewName(java.lang.StringBuffer);

  public abstract java.lang.String getServiceClass();

  public abstract A withServiceClass(java.lang.String);

  public abstract java.lang.Boolean hasServiceClass();

  public abstract A withNewServiceClass(java.lang.String);

  public abstract A withNewServiceClass(java.lang.StringBuilder);

  public abstract A withNewServiceClass(java.lang.StringBuffer);

  public abstract java.lang.String getServicePlan();

  public abstract A withServicePlan(java.lang.String);

  public abstract java.lang.Boolean hasServicePlan();

  public abstract A withNewServicePlan(java.lang.String);

  public abstract A withNewServicePlan(java.lang.StringBuilder);

  public abstract A withNewServicePlan(java.lang.StringBuffer);

  public abstract A withParameters(io.dekorate.servicecatalog.config.Parameter...);

  public abstract io.dekorate.servicecatalog.config.Parameter[] getParameters();

  public abstract io.dekorate.servicecatalog.config.Parameter[] buildParameters();

  public abstract io.dekorate.servicecatalog.config.Parameter buildParameter(int);

  public abstract io.dekorate.servicecatalog.config.Parameter buildFirstParameter();

  public abstract io.dekorate.servicecatalog.config.Parameter buildLastParameter();

  public abstract io.dekorate.servicecatalog.config.Parameter buildMatchingParameter(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.servicecatalog.config.ParameterBuilder>);

  public abstract java.lang.Boolean hasMatchingParameter(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.servicecatalog.config.ParameterBuilder>);

  public abstract A addToParameters(int, io.dekorate.servicecatalog.config.Parameter);

  public abstract A setToParameters(int, io.dekorate.servicecatalog.config.Parameter);

  public abstract A addToParameters(io.dekorate.servicecatalog.config.Parameter...);

  public abstract A addAllToParameters(java.util.Collection<io.dekorate.servicecatalog.config.Parameter>);

  public abstract A removeFromParameters(io.dekorate.servicecatalog.config.Parameter...);

  public abstract A removeAllFromParameters(java.util.Collection<io.dekorate.servicecatalog.config.Parameter>);

  public abstract A removeMatchingFromParameters(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.servicecatalog.config.ParameterBuilder>);

  public abstract java.lang.Boolean hasParameters();

  public abstract A addNewParameter(java.lang.String, java.lang.String);

  public abstract io.dekorate.servicecatalog.config.ServiceCatalogInstanceFluent$ParametersNested<A> addNewParameter();

  public abstract io.dekorate.servicecatalog.config.ServiceCatalogInstanceFluent$ParametersNested<A> addNewParameterLike(io.dekorate.servicecatalog.config.Parameter);

  public abstract io.dekorate.servicecatalog.config.ServiceCatalogInstanceFluent$ParametersNested<A> setNewParameterLike(int, io.dekorate.servicecatalog.config.Parameter);

  public abstract io.dekorate.servicecatalog.config.ServiceCatalogInstanceFluent$ParametersNested<A> editParameter(int);

  public abstract io.dekorate.servicecatalog.config.ServiceCatalogInstanceFluent$ParametersNested<A> editFirstParameter();

  public abstract io.dekorate.servicecatalog.config.ServiceCatalogInstanceFluent$ParametersNested<A> editLastParameter();

  public abstract io.dekorate.servicecatalog.config.ServiceCatalogInstanceFluent$ParametersNested<A> editMatchingParameter(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.servicecatalog.config.ParameterBuilder>);

  public abstract java.lang.String getBindingSecret();

  public abstract A withBindingSecret(java.lang.String);

  public abstract java.lang.Boolean hasBindingSecret();

  public abstract A withNewBindingSecret(java.lang.String);

  public abstract A withNewBindingSecret(java.lang.StringBuilder);

  public abstract A withNewBindingSecret(java.lang.StringBuffer);
}
