Compiled from "ReflectionManager.java"
public interface org.hibernate.annotations.common.reflection.ReflectionManager {
  public abstract void injectClassLoaderDelegate(org.hibernate.annotations.common.reflection.ClassLoaderDelegate);

  public abstract org.hibernate.annotations.common.reflection.ClassLoaderDelegate getClassLoaderDelegate();

  public abstract <T> org.hibernate.annotations.common.reflection.XClass toXClass(java.lang.Class<T>);

  public abstract java.lang.Class toClass(org.hibernate.annotations.common.reflection.XClass);

  public abstract java.lang.reflect.Method toMethod(org.hibernate.annotations.common.reflection.XMethod);

  public abstract <T> org.hibernate.annotations.common.reflection.XClass classForName(java.lang.String, java.lang.Class<T>) throws java.lang.ClassNotFoundException;

  public abstract org.hibernate.annotations.common.reflection.XClass classForName(java.lang.String) throws org.hibernate.annotations.common.reflection.ClassLoadingException;

  public abstract org.hibernate.annotations.common.reflection.XPackage packageForName(java.lang.String) throws java.lang.ClassNotFoundException;

  public abstract <T> boolean equals(org.hibernate.annotations.common.reflection.XClass, java.lang.Class<T>);

  public abstract org.hibernate.annotations.common.reflection.AnnotationReader buildAnnotationReader(java.lang.reflect.AnnotatedElement);

  public abstract java.util.Map getDefaults();
}
