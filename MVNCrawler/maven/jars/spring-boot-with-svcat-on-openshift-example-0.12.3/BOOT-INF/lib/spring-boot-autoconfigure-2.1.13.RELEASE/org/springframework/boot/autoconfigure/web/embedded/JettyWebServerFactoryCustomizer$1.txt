Compiled from "JettyWebServerFactoryCustomizer.java"
class org.springframework.boot.autoconfigure.web.embedded.JettyWebServerFactoryCustomizer$1 implements org.springframework.boot.web.embedded.jetty.JettyServerCustomizer {
  final int val$maxHttpFormPostSize;

  final org.springframework.boot.autoconfigure.web.embedded.JettyWebServerFactoryCustomizer this$0;

  org.springframework.boot.autoconfigure.web.embedded.JettyWebServerFactoryCustomizer$1(org.springframework.boot.autoconfigure.web.embedded.JettyWebServerFactoryCustomizer, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer;
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field val$maxHttpFormPostSize:I
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void customize(org.eclipse.jetty.server.Server);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field val$maxHttpFormPostSize:I
       5: aload_1
       6: invokevirtual #4                  // Method org/eclipse/jetty/server/Server.getHandlers:()[Lorg/eclipse/jetty/server/Handler;
       9: invokespecial #5                  // Method setHandlerMaxHttpFormPostSize:(I[Lorg/eclipse/jetty/server/Handler;)V
      12: return

  private void setHandlerMaxHttpFormPostSize(int, org.eclipse.jetty.server.Handler...);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: arraylength
       4: istore        4
       6: iconst_0
       7: istore        5
       9: iload         5
      11: iload         4
      13: if_icmpge     109
      16: aload_3
      17: iload         5
      19: aaload
      20: astore        6
      22: aload         6
      24: instanceof    #6                  // class org/eclipse/jetty/server/handler/ContextHandler
      27: ifeq          45
      30: aload         6
      32: checkcast     #6                  // class org/eclipse/jetty/server/handler/ContextHandler
      35: aload_0
      36: getfield      #2                  // Field val$maxHttpFormPostSize:I
      39: invokevirtual #7                  // Method org/eclipse/jetty/server/handler/ContextHandler.setMaxFormContentSize:(I)V
      42: goto          103
      45: aload         6
      47: instanceof    #8                  // class org/eclipse/jetty/server/handler/HandlerWrapper
      50: ifeq          79
      53: aload_0
      54: aload_0
      55: getfield      #2                  // Field val$maxHttpFormPostSize:I
      58: iconst_1
      59: anewarray     #9                  // class org/eclipse/jetty/server/Handler
      62: dup
      63: iconst_0
      64: aload         6
      66: checkcast     #8                  // class org/eclipse/jetty/server/handler/HandlerWrapper
      69: invokevirtual #10                 // Method org/eclipse/jetty/server/handler/HandlerWrapper.getHandler:()Lorg/eclipse/jetty/server/Handler;
      72: aastore
      73: invokespecial #5                  // Method setHandlerMaxHttpFormPostSize:(I[Lorg/eclipse/jetty/server/Handler;)V
      76: goto          103
      79: aload         6
      81: instanceof    #11                 // class org/eclipse/jetty/server/handler/HandlerCollection
      84: ifeq          103
      87: aload_0
      88: aload_0
      89: getfield      #2                  // Field val$maxHttpFormPostSize:I
      92: aload         6
      94: checkcast     #11                 // class org/eclipse/jetty/server/handler/HandlerCollection
      97: invokevirtual #12                 // Method org/eclipse/jetty/server/handler/HandlerCollection.getHandlers:()[Lorg/eclipse/jetty/server/Handler;
     100: invokespecial #5                  // Method setHandlerMaxHttpFormPostSize:(I[Lorg/eclipse/jetty/server/Handler;)V
     103: iinc          5, 1
     106: goto          9
     109: return
}
