Compiled from "JettyWebServerFactoryCustomizer.java"
class org.springframework.boot.autoconfigure.web.embedded.JettyWebServerFactoryCustomizer$MaxHttpHeaderSizeCustomizer implements org.springframework.boot.web.embedded.jetty.JettyServerCustomizer {
  private final int maxHttpHeaderSize;

  org.springframework.boot.autoconfigure.web.embedded.JettyWebServerFactoryCustomizer$MaxHttpHeaderSizeCustomizer(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field maxHttpHeaderSize:I
       9: return

  public void customize(org.eclipse.jetty.server.Server);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method org/eclipse/jetty/server/Server.getConnectors:()[Lorg/eclipse/jetty/server/Connector;
       4: invokestatic  #4                  // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       7: aload_0
       8: invokedynamic #5,  0              // InvokeDynamic #0:accept:(Lorg/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer$MaxHttpHeaderSizeCustomizer;)Ljava/util/function/Consumer;
      13: invokeinterface #6,  2            // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      18: return

  private void customize(org.eclipse.jetty.server.Connector);
    Code:
       0: aload_1
       1: invokeinterface #7,  1            // InterfaceMethod org/eclipse/jetty/server/Connector.getConnectionFactories:()Ljava/util/Collection;
       6: aload_0
       7: invokedynamic #8,  0              // InvokeDynamic #1:accept:(Lorg/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer$MaxHttpHeaderSizeCustomizer;)Ljava/util/function/Consumer;
      12: invokeinterface #9,  2            // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      17: return

  private void customize(org.eclipse.jetty.server.ConnectionFactory);
    Code:
       0: aload_1
       1: instanceof    #10                 // class org/eclipse/jetty/server/HttpConfiguration$ConnectionFactory
       4: ifeq          23
       7: aload_1
       8: checkcast     #10                 // class org/eclipse/jetty/server/HttpConfiguration$ConnectionFactory
      11: invokeinterface #11,  1           // InterfaceMethod org/eclipse/jetty/server/HttpConfiguration$ConnectionFactory.getHttpConfiguration:()Lorg/eclipse/jetty/server/HttpConfiguration;
      16: aload_0
      17: getfield      #2                  // Field maxHttpHeaderSize:I
      20: invokevirtual #12                 // Method org/eclipse/jetty/server/HttpConfiguration.setRequestHeaderSize:(I)V
      23: return
}
