Compiled from "HibernateJpaConfiguration.java"
class org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration extends org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration {
  private static final org.apache.commons.logging.Log logger;

  private static final java.lang.String JTA_PLATFORM;

  private static final java.lang.String PROVIDER_DISABLES_AUTOCOMMIT;

  private static final java.lang.String[] NO_JTA_PLATFORM_CLASSES;

  private final org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties hibernateProperties;

  private final org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider defaultDdlAutoProvider;

  private org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider poolMetadataProvider;

  private final java.util.List<org.springframework.boot.autoconfigure.orm.jpa.HibernatePropertiesCustomizer> hibernatePropertiesCustomizers;

  org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration(javax.sql.DataSource, org.springframework.boot.autoconfigure.orm.jpa.JpaProperties, org.springframework.beans.factory.config.ConfigurableListableBeanFactory, org.springframework.beans.factory.ObjectProvider<org.springframework.transaction.jta.JtaTransactionManager>, org.springframework.beans.factory.ObjectProvider<org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers>, org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties, org.springframework.beans.factory.ObjectProvider<java.util.Collection<org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider>>, org.springframework.beans.factory.ObjectProvider<org.springframework.boot.jdbc.SchemaManagementProvider>, org.springframework.beans.factory.ObjectProvider<org.hibernate.boot.model.naming.PhysicalNamingStrategy>, org.springframework.beans.factory.ObjectProvider<org.hibernate.boot.model.naming.ImplicitNamingStrategy>, org.springframework.beans.factory.ObjectProvider<org.springframework.boot.autoconfigure.orm.jpa.HibernatePropertiesCustomizer>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         4
       5: aload         5
       7: invokespecial #1                  // Method org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration."<init>":(Ljavax/sql/DataSource;Lorg/springframework/boot/autoconfigure/orm/jpa/JpaProperties;Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
      10: aload_0
      11: aload         6
      13: putfield      #2                  // Field hibernateProperties:Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateProperties;
      16: aload_0
      17: new           #3                  // class org/springframework/boot/autoconfigure/orm/jpa/HibernateDefaultDdlAutoProvider
      20: dup
      21: aload         8
      23: invokespecial #4                  // Method org/springframework/boot/autoconfigure/orm/jpa/HibernateDefaultDdlAutoProvider."<init>":(Ljava/lang/Iterable;)V
      26: putfield      #5                  // Field defaultDdlAutoProvider:Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateDefaultDdlAutoProvider;
      29: aload_0
      30: new           #6                  // class org/springframework/boot/jdbc/metadata/CompositeDataSourcePoolMetadataProvider
      33: dup
      34: aload         7
      36: invokeinterface #7,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfAvailable:()Ljava/lang/Object;
      41: checkcast     #8                  // class java/util/Collection
      44: invokespecial #9                  // Method org/springframework/boot/jdbc/metadata/CompositeDataSourcePoolMetadataProvider."<init>":(Ljava/util/Collection;)V
      47: putfield      #10                 // Field poolMetadataProvider:Lorg/springframework/boot/jdbc/metadata/DataSourcePoolMetadataProvider;
      50: aload_0
      51: aload_0
      52: aload         9
      54: invokeinterface #7,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfAvailable:()Ljava/lang/Object;
      59: checkcast     #11                 // class org/hibernate/boot/model/naming/PhysicalNamingStrategy
      62: aload         10
      64: invokeinterface #7,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfAvailable:()Ljava/lang/Object;
      69: checkcast     #12                 // class org/hibernate/boot/model/naming/ImplicitNamingStrategy
      72: aload_3
      73: aload         11
      75: invokeinterface #13,  1           // InterfaceMethod org/springframework/beans/factory/ObjectProvider.orderedStream:()Ljava/util/stream/Stream;
      80: invokestatic  #14                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      83: invokeinterface #15,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      88: checkcast     #16                 // class java/util/List
      91: invokespecial #17                 // Method determineHibernatePropertiesCustomizers:(Lorg/hibernate/boot/model/naming/PhysicalNamingStrategy;Lorg/hibernate/boot/model/naming/ImplicitNamingStrategy;Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljava/util/List;)Ljava/util/List;
      94: putfield      #18                 // Field hibernatePropertiesCustomizers:Ljava/util/List;
      97: return

  private java.util.List<org.springframework.boot.autoconfigure.orm.jpa.HibernatePropertiesCustomizer> determineHibernatePropertiesCustomizers(org.hibernate.boot.model.naming.PhysicalNamingStrategy, org.hibernate.boot.model.naming.ImplicitNamingStrategy, org.springframework.beans.factory.config.ConfigurableListableBeanFactory, java.util.List<org.springframework.boot.autoconfigure.orm.jpa.HibernatePropertiesCustomizer>);
    Code:
       0: new           #19                 // class java/util/ArrayList
       3: dup
       4: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
       7: astore        5
       9: ldc           #21                 // String org.hibernate.resource.beans.container.spi.BeanContainer
      11: aload_0
      12: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #23                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      18: invokestatic  #24                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      21: ifeq          38
      24: aload         5
      26: aload_3
      27: invokedynamic #25,  0             // InvokeDynamic #0:customize:(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)Lorg/springframework/boot/autoconfigure/orm/jpa/HibernatePropertiesCustomizer;
      32: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      37: pop
      38: aload_1
      39: ifnonnull     46
      42: aload_2
      43: ifnull        63
      46: aload         5
      48: new           #27                 // class org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration$NamingStrategiesHibernatePropertiesCustomizer
      51: dup
      52: aload_1
      53: aload_2
      54: invokespecial #28                 // Method org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration$NamingStrategiesHibernatePropertiesCustomizer."<init>":(Lorg/hibernate/boot/model/naming/PhysicalNamingStrategy;Lorg/hibernate/boot/model/naming/ImplicitNamingStrategy;)V
      57: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      62: pop
      63: aload         5
      65: aload         4
      67: invokeinterface #29,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      72: pop
      73: aload         5
      75: areturn

  protected org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter createJpaVendorAdapter();
    Code:
       0: new           #30                 // class org/springframework/orm/jpa/vendor/HibernateJpaVendorAdapter
       3: dup
       4: invokespecial #31                 // Method org/springframework/orm/jpa/vendor/HibernateJpaVendorAdapter."<init>":()V
       7: areturn

  protected java.util.Map<java.lang.String, java.lang.Object> getVendorProperties();
    Code:
       0: aload_0
       1: invokedynamic #32,  0             // InvokeDynamic #1:get:(Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration;)Ljava/util/function/Supplier;
       6: astore_1
       7: new           #33                 // class java/util/LinkedHashMap
      10: dup
      11: aload_0
      12: getfield      #2                  // Field hibernateProperties:Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateProperties;
      15: aload_0
      16: invokevirtual #34                 // Method getProperties:()Lorg/springframework/boot/autoconfigure/orm/jpa/JpaProperties;
      19: invokevirtual #35                 // Method org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.getProperties:()Ljava/util/Map;
      22: new           #36                 // class org/springframework/boot/autoconfigure/orm/jpa/HibernateSettings
      25: dup
      26: invokespecial #37                 // Method org/springframework/boot/autoconfigure/orm/jpa/HibernateSettings."<init>":()V
      29: aload_1
      30: invokevirtual #38                 // Method org/springframework/boot/autoconfigure/orm/jpa/HibernateSettings.ddlAuto:(Ljava/util/function/Supplier;)Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateSettings;
      33: aload_0
      34: getfield      #18                 // Field hibernatePropertiesCustomizers:Ljava/util/List;
      37: invokevirtual #39                 // Method org/springframework/boot/autoconfigure/orm/jpa/HibernateSettings.hibernatePropertiesCustomizers:(Ljava/util/Collection;)Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateSettings;
      40: invokevirtual #40                 // Method org/springframework/boot/autoconfigure/orm/jpa/HibernateProperties.determineHibernateProperties:(Ljava/util/Map;Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateSettings;)Ljava/util/Map;
      43: invokespecial #41                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      46: areturn

  protected void customizeVendorProperties(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #42                 // Method org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.customizeVendorProperties:(Ljava/util/Map;)V
       5: aload_1
       6: ldc           #44                 // String hibernate.transaction.jta.platform
       8: invokeinterface #45,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      13: ifne          21
      16: aload_0
      17: aload_1
      18: invokespecial #46                 // Method configureJtaPlatform:(Ljava/util/Map;)V
      21: aload_1
      22: ldc           #47                 // String hibernate.connection.provider_disables_autocommit
      24: invokeinterface #45,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifne          37
      32: aload_0
      33: aload_1
      34: invokespecial #48                 // Method configureProviderDisablesAutocommit:(Ljava/util/Map;)V
      37: return

  private void configureJtaPlatform(java.util.Map<java.lang.String, java.lang.Object>) throws java.lang.LinkageError;
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method getJtaTransactionManager:()Lorg/springframework/transaction/jta/JtaTransactionManager;
       4: astore_2
       5: aload_2
       6: ifnonnull     25
       9: aload_1
      10: ldc           #44                 // String hibernate.transaction.jta.platform
      12: aload_0
      13: invokespecial #50                 // Method getNoJtaPlatformManager:()Ljava/lang/Object;
      16: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: goto          38
      25: aload_0
      26: invokespecial #52                 // Method runningOnWebSphere:()Z
      29: ifne          38
      32: aload_0
      33: aload_1
      34: aload_2
      35: invokespecial #53                 // Method configureSpringJtaPlatform:(Ljava/util/Map;Lorg/springframework/transaction/jta/JtaTransactionManager;)V
      38: return

  private void configureProviderDisablesAutocommit(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #54                 // Method isDataSourceAutoCommitDisabled:()Z
       4: ifeq          25
       7: aload_0
       8: invokevirtual #55                 // Method isJta:()Z
      11: ifne          25
      14: aload_1
      15: ldc           #47                 // String hibernate.connection.provider_disables_autocommit
      17: ldc           #56                 // String true
      19: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: return

  private boolean isDataSourceAutoCommitDisabled();
    Code:
       0: aload_0
       1: getfield      #10                 // Field poolMetadataProvider:Lorg/springframework/boot/jdbc/metadata/DataSourcePoolMetadataProvider;
       4: aload_0
       5: invokevirtual #57                 // Method getDataSource:()Ljavax/sql/DataSource;
       8: invokeinterface #58,  2           // InterfaceMethod org/springframework/boot/jdbc/metadata/DataSourcePoolMetadataProvider.getDataSourcePoolMetadata:(Ljavax/sql/DataSource;)Lorg/springframework/boot/jdbc/metadata/DataSourcePoolMetadata;
      13: astore_1
      14: aload_1
      15: ifnull        37
      18: getstatic     #59                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      21: aload_1
      22: invokeinterface #60,  1           // InterfaceMethod org/springframework/boot/jdbc/metadata/DataSourcePoolMetadata.getDefaultAutoCommit:()Ljava/lang/Boolean;
      27: invokevirtual #61                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  private boolean runningOnWebSphere();
    Code:
       0: ldc           #62                 // String com.ibm.websphere.jtaextensions.ExtendedJTATransaction
       2: aload_0
       3: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: invokevirtual #23                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       9: invokestatic  #24                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      12: ireturn

  private void configureSpringJtaPlatform(java.util.Map<java.lang.String, java.lang.Object>, org.springframework.transaction.jta.JtaTransactionManager);
    Code:
       0: aload_1
       1: ldc           #44                 // String hibernate.transaction.jta.platform
       3: new           #63                 // class org/springframework/boot/orm/jpa/hibernate/SpringJtaPlatform
       6: dup
       7: aload_2
       8: invokespecial #64                 // Method org/springframework/boot/orm/jpa/hibernate/SpringJtaPlatform."<init>":(Lorg/springframework/transaction/jta/JtaTransactionManager;)V
      11: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: goto          80
      20: astore_3
      21: aload_0
      22: invokespecial #66                 // Method isUsingJndi:()Z
      25: ifne          39
      28: new           #67                 // class java/lang/IllegalStateException
      31: dup
      32: ldc           #68                 // String Unable to set Hibernate JTA platform, are you using the correct version of Hibernate?
      34: aload_3
      35: invokespecial #69                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      38: athrow
      39: getstatic     #70                 // Field logger:Lorg/apache/commons/logging/Log;
      42: invokeinterface #71,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      47: ifeq          80
      50: getstatic     #70                 // Field logger:Lorg/apache/commons/logging/Log;
      53: new           #72                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #74                 // String Unable to set Hibernate JTA platform :
      62: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_3
      66: invokevirtual #76                 // Method java/lang/LinkageError.getMessage:()Ljava/lang/String;
      69: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #77                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokeinterface #78,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      80: return
    Exception table:
       from    to  target type
           0    17    20   Class java/lang/LinkageError

  private boolean isUsingJndi();
    Code:
       0: invokestatic  #79                 // Method org/springframework/jndi/JndiLocatorDelegate.isDefaultJndiEnvironmentAvailable:()Z
       3: ireturn
       4: astore_1
       5: iconst_0
       6: ireturn
    Exception table:
       from    to  target type
           0     3     4   Class java/lang/Error

  private java.lang.Object getNoJtaPlatformManager();
    Code:
       0: getstatic     #81                 // Field NO_JTA_PLATFORM_CLASSES:[Ljava/lang/String;
       3: astore_1
       4: aload_1
       5: arraylength
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     36
      14: aload_1
      15: iload_3
      16: aaload
      17: astore        4
      19: aload         4
      21: invokestatic  #82                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      24: invokevirtual #83                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      27: areturn
      28: astore        5
      30: iinc          3, 1
      33: goto          9
      36: new           #67                 // class java/lang/IllegalStateException
      39: dup
      40: new           #72                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #85                 // String No available JtaPlatform candidates amongst
      49: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: getstatic     #81                 // Field NO_JTA_PLATFORM_CLASSES:[Ljava/lang/String;
      55: invokestatic  #86                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      58: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #77                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #87                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      67: athrow
    Exception table:
       from    to  target type
          19    27    28   Class java/lang/Exception

  private java.lang.String lambda$getVendorProperties$1();
    Code:
       0: aload_0
       1: getfield      #5                  // Field defaultDdlAutoProvider:Lorg/springframework/boot/autoconfigure/orm/jpa/HibernateDefaultDdlAutoProvider;
       4: aload_0
       5: invokevirtual #57                 // Method getDataSource:()Ljavax/sql/DataSource;
       8: invokevirtual #88                 // Method org/springframework/boot/autoconfigure/orm/jpa/HibernateDefaultDdlAutoProvider.getDefaultDdlAuto:(Ljavax/sql/DataSource;)Ljava/lang/String;
      11: areturn

  private static void lambda$determineHibernatePropertiesCustomizers$0(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, java.util.Map);
    Code:
       0: aload_1
       1: ldc           #90                 // String hibernate.resource.beans.container
       3: new           #91                 // class org/springframework/orm/hibernate5/SpringBeanContainer
       6: dup
       7: aload_0
       8: invokespecial #92                 // Method org/springframework/orm/hibernate5/SpringBeanContainer."<init>":(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
      11: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  static {};
    Code:
       0: ldc           #43                 // class org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration
       2: invokestatic  #93                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #70                 // Field logger:Lorg/apache/commons/logging/Log;
       8: iconst_2
       9: anewarray     #94                 // class java/lang/String
      12: dup
      13: iconst_0
      14: ldc           #95                 // String org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform
      16: aastore
      17: dup
      18: iconst_1
      19: ldc           #96                 // String org.hibernate.service.jta.platform.internal.NoJtaPlatform
      21: aastore
      22: putstatic     #81                 // Field NO_JTA_PLATFORM_CLASSES:[Ljava/lang/String;
      25: return
}
