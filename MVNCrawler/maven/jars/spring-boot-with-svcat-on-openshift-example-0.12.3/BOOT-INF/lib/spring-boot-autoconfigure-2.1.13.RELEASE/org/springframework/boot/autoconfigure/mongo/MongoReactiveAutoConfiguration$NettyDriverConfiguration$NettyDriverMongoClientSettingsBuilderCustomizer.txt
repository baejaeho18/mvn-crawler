Compiled from "MongoReactiveAutoConfiguration.java"
final class org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration$NettyDriverConfiguration$NettyDriverMongoClientSettingsBuilderCustomizer implements org.springframework.boot.autoconfigure.mongo.MongoClientSettingsBuilderCustomizer,org.springframework.beans.factory.DisposableBean {
  private final org.springframework.beans.factory.ObjectProvider<com.mongodb.MongoClientSettings> settings;

  private volatile io.netty.channel.EventLoopGroup eventLoopGroup;

  private org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration$NettyDriverConfiguration$NettyDriverMongoClientSettingsBuilderCustomizer(org.springframework.beans.factory.ObjectProvider<com.mongodb.MongoClientSettings>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field settings:Lorg/springframework/beans/factory/ObjectProvider;
       9: return

  public void customize(com.mongodb.MongoClientSettings$Builder);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field settings:Lorg/springframework/beans/factory/ObjectProvider;
       5: invokeinterface #4,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfAvailable:()Ljava/lang/Object;
      10: checkcast     #5                  // class com/mongodb/MongoClientSettings
      13: invokespecial #6                  // Method isStreamFactoryFactoryDefined:(Lcom/mongodb/MongoClientSettings;)Z
      16: ifne          47
      19: new           #7                  // class io/netty/channel/nio/NioEventLoopGroup
      22: dup
      23: invokespecial #8                  // Method io/netty/channel/nio/NioEventLoopGroup."<init>":()V
      26: astore_2
      27: aload_0
      28: aload_2
      29: putfield      #9                  // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
      32: aload_1
      33: invokestatic  #10                 // Method com/mongodb/connection/netty/NettyStreamFactoryFactory.builder:()Lcom/mongodb/connection/netty/NettyStreamFactoryFactory$Builder;
      36: aload_2
      37: invokevirtual #11                 // Method com/mongodb/connection/netty/NettyStreamFactoryFactory$Builder.eventLoopGroup:(Lio/netty/channel/EventLoopGroup;)Lcom/mongodb/connection/netty/NettyStreamFactoryFactory$Builder;
      40: invokevirtual #12                 // Method com/mongodb/connection/netty/NettyStreamFactoryFactory$Builder.build:()Lcom/mongodb/connection/netty/NettyStreamFactoryFactory;
      43: invokevirtual #13                 // Method com/mongodb/MongoClientSettings$Builder.streamFactoryFactory:(Lcom/mongodb/connection/StreamFactoryFactory;)Lcom/mongodb/MongoClientSettings$Builder;
      46: pop
      47: return

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #9                  // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
       4: astore_1
       5: aload_1
       6: ifnull        26
       9: aload_1
      10: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/EventLoopGroup.shutdownGracefully:()Lio/netty/util/concurrent/Future;
      15: invokeinterface #15,  1           // InterfaceMethod io/netty/util/concurrent/Future.awaitUninterruptibly:()Lio/netty/util/concurrent/Future;
      20: pop
      21: aload_0
      22: aconst_null
      23: putfield      #9                  // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
      26: return

  private boolean isStreamFactoryFactoryDefined(com.mongodb.MongoClientSettings);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_1
       5: invokevirtual #16                 // Method com/mongodb/MongoClientSettings.getStreamFactoryFactory:()Lcom/mongodb/connection/StreamFactoryFactory;
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration$NettyDriverConfiguration$NettyDriverMongoClientSettingsBuilderCustomizer(org.springframework.beans.factory.ObjectProvider, org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/springframework/beans/factory/ObjectProvider;)V
       5: return
}
