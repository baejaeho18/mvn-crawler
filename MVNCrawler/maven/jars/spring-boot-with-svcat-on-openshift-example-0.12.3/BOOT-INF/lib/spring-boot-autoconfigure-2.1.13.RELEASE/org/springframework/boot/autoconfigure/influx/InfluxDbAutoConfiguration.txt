Compiled from "InfluxDbAutoConfiguration.java"
public class org.springframework.boot.autoconfigure.influx.InfluxDbAutoConfiguration {
  private static final org.apache.commons.logging.Log logger;

  private final org.springframework.boot.autoconfigure.influx.InfluxDbProperties properties;

  private final okhttp3.OkHttpClient$Builder builder;

  public org.springframework.boot.autoconfigure.influx.InfluxDbAutoConfiguration(org.springframework.boot.autoconfigure.influx.InfluxDbProperties, org.springframework.beans.factory.ObjectProvider<org.springframework.boot.autoconfigure.influx.InfluxDbOkHttpClientBuilderProvider>, org.springframework.beans.factory.ObjectProvider<okhttp3.OkHttpClient$Builder>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/influx/InfluxDbProperties;
       9: aload_0
      10: aload_2
      11: invokeinterface #3,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfAvailable:()Ljava/lang/Object;
      16: checkcast     #4                  // class org/springframework/boot/autoconfigure/influx/InfluxDbOkHttpClientBuilderProvider
      19: aload_3
      20: invokeinterface #3,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfAvailable:()Ljava/lang/Object;
      25: checkcast     #5                  // class okhttp3/OkHttpClient$Builder
      28: invokestatic  #6                  // Method determineBuilder:(Lorg/springframework/boot/autoconfigure/influx/InfluxDbOkHttpClientBuilderProvider;Lokhttp3/OkHttpClient$Builder;)Lokhttp3/OkHttpClient$Builder;
      31: putfield      #7                  // Field builder:Lokhttp3/OkHttpClient$Builder;
      34: return

  private static okhttp3.OkHttpClient$Builder determineBuilder(org.springframework.boot.autoconfigure.influx.InfluxDbOkHttpClientBuilderProvider, okhttp3.OkHttpClient$Builder);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: invokeinterface #8,  1            // InterfaceMethod org/springframework/boot/autoconfigure/influx/InfluxDbOkHttpClientBuilderProvider.get:()Ljava/lang/Object;
      10: checkcast     #5                  // class okhttp3/OkHttpClient$Builder
      13: areturn
      14: aload_1
      15: ifnull        56
      18: getstatic     #9                  // Field logger:Lorg/apache/commons/logging/Log;
      21: new           #10                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #12                 // String InfluxDB client customizations using a OkHttpClient.Builder is deprecated, register a
      30: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #4                  // class org/springframework/boot/autoconfigure/influx/InfluxDbOkHttpClientBuilderProvider
      35: invokevirtual #14                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      38: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #15                 // String  bean instead
      43: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokeinterface #17,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      54: aload_1
      55: areturn
      56: new           #5                  // class okhttp3/OkHttpClient$Builder
      59: dup
      60: invokespecial #18                 // Method okhttp3/OkHttpClient$Builder."<init>":()V
      63: areturn

  public org.influxdb.InfluxDB influxDb();
    Code:
       0: new           #19                 // class org/influxdb/impl/InfluxDBImpl
       3: dup
       4: aload_0
       5: getfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/influx/InfluxDbProperties;
       8: invokevirtual #20                 // Method org/springframework/boot/autoconfigure/influx/InfluxDbProperties.getUrl:()Ljava/lang/String;
      11: aload_0
      12: getfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/influx/InfluxDbProperties;
      15: invokevirtual #21                 // Method org/springframework/boot/autoconfigure/influx/InfluxDbProperties.getUser:()Ljava/lang/String;
      18: aload_0
      19: getfield      #2                  // Field properties:Lorg/springframework/boot/autoconfigure/influx/InfluxDbProperties;
      22: invokevirtual #22                 // Method org/springframework/boot/autoconfigure/influx/InfluxDbProperties.getPassword:()Ljava/lang/String;
      25: aload_0
      26: getfield      #7                  // Field builder:Lokhttp3/OkHttpClient$Builder;
      29: invokespecial #23                 // Method org/influxdb/impl/InfluxDBImpl."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lokhttp3/OkHttpClient$Builder;)V
      32: areturn

  static {};
    Code:
       0: ldc           #24                 // class org/springframework/boot/autoconfigure/influx/InfluxDbAutoConfiguration
       2: invokestatic  #25                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #9                  // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
