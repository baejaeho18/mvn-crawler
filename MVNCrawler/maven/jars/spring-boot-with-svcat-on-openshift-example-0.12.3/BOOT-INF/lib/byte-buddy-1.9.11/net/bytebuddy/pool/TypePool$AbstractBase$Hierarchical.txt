Compiled from "TypePool.java"
public abstract class net.bytebuddy.pool.TypePool$AbstractBase$Hierarchical extends net.bytebuddy.pool.TypePool$AbstractBase {
  private final net.bytebuddy.pool.TypePool parent;

  protected net.bytebuddy.pool.TypePool$AbstractBase$Hierarchical(net.bytebuddy.pool.TypePool$CacheProvider, net.bytebuddy.pool.TypePool);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method net/bytebuddy/pool/TypePool$AbstractBase."<init>":(Lnet/bytebuddy/pool/TypePool$CacheProvider;)V
       5: aload_0
       6: aload_2
       7: putfield      #30                 // Field parent:Lnet/bytebuddy/pool/TypePool;
      10: return

  public net.bytebuddy.pool.TypePool$Resolution describe(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #30                 // Field parent:Lnet/bytebuddy/pool/TypePool;
       4: aload_1
       5: invokeinterface #38,  2           // InterfaceMethod net/bytebuddy/pool/TypePool.describe:(Ljava/lang/String;)Lnet/bytebuddy/pool/TypePool$Resolution;
      10: astore_2
      11: aload_2
      12: invokeinterface #42,  1           // InterfaceMethod net/bytebuddy/pool/TypePool$Resolution.isResolved:()Z
      17: ifeq          24
      20: aload_2
      21: goto          29
      24: aload_0
      25: aload_1
      26: invokespecial #43                 // Method net/bytebuddy/pool/TypePool$AbstractBase.describe:(Ljava/lang/String;)Lnet/bytebuddy/pool/TypePool$Resolution;
      29: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #30                 // Field parent:Lnet/bytebuddy/pool/TypePool;
       4: invokeinterface #51,  1           // InterfaceMethod net/bytebuddy/pool/TypePool.clear:()V
       9: aload_0
      10: invokespecial #52                 // Method net/bytebuddy/pool/TypePool$AbstractBase.clear:()V
      13: goto          23
      16: astore_1
      17: aload_0
      18: invokespecial #52                 // Method net/bytebuddy/pool/TypePool$AbstractBase.clear:()V
      21: aload_1
      22: athrow
      23: return
    Exception table:
       from    to  target type
           0     9    16   any

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #56                 // Method net/bytebuddy/pool/TypePool$AbstractBase.equals:(Ljava/lang/Object;)Z
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: aload_1
      12: if_acmpne     17
      15: iconst_1
      16: ireturn
      17: aload_1
      18: ifnonnull     23
      21: iconst_0
      22: ireturn
      23: aload_0
      24: invokevirtual #62                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: aload_1
      28: invokevirtual #62                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      31: if_acmpeq     36
      34: iconst_0
      35: ireturn
      36: aload_0
      37: getfield      #30                 // Field parent:Lnet/bytebuddy/pool/TypePool;
      40: aload_1
      41: checkcast     #2                  // class net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical
      44: getfield      #30                 // Field parent:Lnet/bytebuddy/pool/TypePool;
      47: invokevirtual #63                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifne          55
      53: iconst_0
      54: ireturn
      55: iconst_1
      56: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #67                 // Method net/bytebuddy/pool/TypePool$AbstractBase.hashCode:()I
       4: bipush        31
       6: imul
       7: aload_0
       8: getfield      #30                 // Field parent:Lnet/bytebuddy/pool/TypePool;
      11: invokevirtual #68                 // Method java/lang/Object.hashCode:()I
      14: iadd
      15: ireturn
}
