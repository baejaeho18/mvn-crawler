Compiled from "Advice.java"
public abstract class net.bytebuddy.asm.Advice$OffsetMapping$Target$ForArray implements net.bytebuddy.asm.Advice$OffsetMapping$Target {
  protected final net.bytebuddy.description.type.TypeDescription$Generic target;

  protected final java.util.List<? extends net.bytebuddy.implementation.bytecode.StackManipulation> valueReads;

  protected net.bytebuddy.asm.Advice$OffsetMapping$Target$ForArray(net.bytebuddy.description.type.TypeDescription$Generic, java.util.List<? extends net.bytebuddy.implementation.bytecode.StackManipulation>);
    Code:
       0: aload_0
       1: invokespecial #42                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #44                 // Field target:Lnet/bytebuddy/description/type/TypeDescription$Generic;
       9: aload_0
      10: aload_2
      11: putfield      #46                 // Field valueReads:Ljava/util/List;
      14: return

  public net.bytebuddy.implementation.bytecode.StackManipulation resolveRead();
    Code:
       0: aload_0
       1: getfield      #44                 // Field target:Lnet/bytebuddy/description/type/TypeDescription$Generic;
       4: invokestatic  #56                 // Method net/bytebuddy/implementation/bytecode/collection/ArrayFactory.forType:(Lnet/bytebuddy/description/type/TypeDescription$Generic;)Lnet/bytebuddy/implementation/bytecode/collection/ArrayFactory;
       7: aload_0
       8: getfield      #46                 // Field valueReads:Ljava/util/List;
      11: invokevirtual #60                 // Method net/bytebuddy/implementation/bytecode/collection/ArrayFactory.withValues:(Ljava/util/List;)Lnet/bytebuddy/implementation/bytecode/StackManipulation;
      14: areturn

  public net.bytebuddy.implementation.bytecode.StackManipulation resolveIncrement(int);
    Code:
       0: new           #64                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #66                 // String Cannot increment read-only array value
       6: invokespecial #69                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #77                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #77                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #44                 // Field target:Lnet/bytebuddy/description/type/TypeDescription$Generic;
      30: aload_1
      31: checkcast     #2                  // class net/bytebuddy/asm/Advice$OffsetMapping$Target$ForArray
      34: getfield      #44                 // Field target:Lnet/bytebuddy/description/type/TypeDescription$Generic;
      37: invokevirtual #79                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: getfield      #46                 // Field valueReads:Ljava/util/List;
      49: aload_1
      50: checkcast     #2                  // class net/bytebuddy/asm/Advice$OffsetMapping$Target$ForArray
      53: getfield      #46                 // Field valueReads:Ljava/util/List;
      56: invokevirtual #79                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      59: ifne          64
      62: iconst_0
      63: ireturn
      64: iconst_1
      65: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: bipush        31
       4: imul
       5: aload_0
       6: getfield      #44                 // Field target:Lnet/bytebuddy/description/type/TypeDescription$Generic;
       9: invokevirtual #83                 // Method java/lang/Object.hashCode:()I
      12: iadd
      13: bipush        31
      15: imul
      16: aload_0
      17: getfield      #46                 // Field valueReads:Ljava/util/List;
      20: invokevirtual #83                 // Method java/lang/Object.hashCode:()I
      23: iadd
      24: ireturn
}
