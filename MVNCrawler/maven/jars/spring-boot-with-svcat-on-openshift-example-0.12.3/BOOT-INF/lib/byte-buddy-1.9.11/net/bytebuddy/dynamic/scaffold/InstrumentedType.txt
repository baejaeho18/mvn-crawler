Compiled from "InstrumentedType.java"
public interface net.bytebuddy.dynamic.scaffold.InstrumentedType extends net.bytebuddy.description.type.TypeDescription {
  public abstract net.bytebuddy.dynamic.scaffold.InstrumentedType withField(net.bytebuddy.description.field.FieldDescription$Token);

  public abstract net.bytebuddy.dynamic.scaffold.InstrumentedType withMethod(net.bytebuddy.description.method.MethodDescription$Token);

  public abstract net.bytebuddy.dynamic.scaffold.InstrumentedType withModifiers(int);

  public abstract net.bytebuddy.dynamic.scaffold.InstrumentedType withInterfaces(net.bytebuddy.description.type.TypeList$Generic);

  public abstract net.bytebuddy.dynamic.scaffold.InstrumentedType withTypeVariable(net.bytebuddy.description.type.TypeVariableToken);

  public abstract net.bytebuddy.dynamic.scaffold.InstrumentedType withAnnotations(java.util.List<? extends net.bytebuddy.description.annotation.AnnotationDescription>);

  public abstract net.bytebuddy.dynamic.scaffold.InstrumentedType withNestHost(net.bytebuddy.description.type.TypeDescription);

  public abstract net.bytebuddy.dynamic.scaffold.InstrumentedType withNestMembers(net.bytebuddy.description.type.TypeList);

  public abstract net.bytebuddy.dynamic.scaffold.InstrumentedType withEnclosingType(net.bytebuddy.description.type.TypeDescription);

  public abstract net.bytebuddy.dynamic.scaffold.InstrumentedType withEnclosingMethod(net.bytebuddy.description.method.MethodDescription$InDefinedShape);

  public abstract net.bytebuddy.dynamic.scaffold.InstrumentedType withDeclaringType(net.bytebuddy.description.type.TypeDescription);

  public abstract net.bytebuddy.dynamic.scaffold.InstrumentedType withDeclaredTypes(net.bytebuddy.description.type.TypeList);

  public abstract net.bytebuddy.dynamic.scaffold.InstrumentedType withLocalClass(boolean);

  public abstract net.bytebuddy.dynamic.scaffold.InstrumentedType withAnonymousClass(boolean);

  public abstract net.bytebuddy.dynamic.scaffold.InstrumentedType withInitializer(net.bytebuddy.implementation.LoadedTypeInitializer);

  public abstract net.bytebuddy.dynamic.scaffold.InstrumentedType withInitializer(net.bytebuddy.implementation.bytecode.ByteCodeAppender);

  public abstract net.bytebuddy.implementation.LoadedTypeInitializer getLoadedTypeInitializer();

  public abstract net.bytebuddy.dynamic.scaffold.TypeInitializer getTypeInitializer();

  public abstract net.bytebuddy.description.type.TypeDescription validated();
}
