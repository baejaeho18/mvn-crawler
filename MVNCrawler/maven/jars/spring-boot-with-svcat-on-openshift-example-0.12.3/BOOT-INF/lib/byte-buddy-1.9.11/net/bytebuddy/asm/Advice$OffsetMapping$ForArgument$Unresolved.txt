Compiled from "Advice.java"
public class net.bytebuddy.asm.Advice$OffsetMapping$ForArgument$Unresolved extends net.bytebuddy.asm.Advice$OffsetMapping$ForArgument {
  private final int index;

  private final boolean optional;

  protected net.bytebuddy.asm.Advice$OffsetMapping$ForArgument$Unresolved(net.bytebuddy.description.type.TypeDescription$Generic, net.bytebuddy.asm.Advice$Argument);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #62,  1           // InterfaceMethod net/bytebuddy/asm/Advice$Argument.readOnly:()Z
       8: aload_2
       9: invokeinterface #66,  1           // InterfaceMethod net/bytebuddy/asm/Advice$Argument.typing:()Lnet/bytebuddy/implementation/bytecode/assign/Assigner$Typing;
      14: aload_2
      15: invokeinterface #70,  1           // InterfaceMethod net/bytebuddy/asm/Advice$Argument.value:()I
      20: aload_2
      21: invokeinterface #72,  1           // InterfaceMethod net/bytebuddy/asm/Advice$Argument.optional:()Z
      26: invokespecial #75                 // Method "<init>":(Lnet/bytebuddy/description/type/TypeDescription$Generic;ZLnet/bytebuddy/implementation/bytecode/assign/Assigner$Typing;IZ)V
      29: return

  protected net.bytebuddy.asm.Advice$OffsetMapping$ForArgument$Unresolved(net.bytebuddy.description.method.ParameterDescription);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #88,  1           // InterfaceMethod net/bytebuddy/description/method/ParameterDescription.getType:()Lnet/bytebuddy/description/type/TypeDescription$Generic;
       7: iconst_1
       8: getstatic     #92                 // Field net/bytebuddy/implementation/bytecode/assign/Assigner$Typing.STATIC:Lnet/bytebuddy/implementation/bytecode/assign/Assigner$Typing;
      11: aload_1
      12: invokeinterface #95,  1           // InterfaceMethod net/bytebuddy/description/method/ParameterDescription.getIndex:()I
      17: invokespecial #98                 // Method "<init>":(Lnet/bytebuddy/description/type/TypeDescription$Generic;ZLnet/bytebuddy/implementation/bytecode/assign/Assigner$Typing;I)V
      20: return

  public net.bytebuddy.asm.Advice$OffsetMapping$ForArgument$Unresolved(net.bytebuddy.description.type.TypeDescription$Generic, boolean, net.bytebuddy.implementation.bytecode.assign.Assigner$Typing, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: iconst_0
       7: invokespecial #75                 // Method "<init>":(Lnet/bytebuddy/description/type/TypeDescription$Generic;ZLnet/bytebuddy/implementation/bytecode/assign/Assigner$Typing;IZ)V
      10: return

  public net.bytebuddy.asm.Advice$OffsetMapping$ForArgument$Unresolved(net.bytebuddy.description.type.TypeDescription$Generic, boolean, net.bytebuddy.implementation.bytecode.assign.Assigner$Typing, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokespecial #103                // Method net/bytebuddy/asm/Advice$OffsetMapping$ForArgument."<init>":(Lnet/bytebuddy/description/type/TypeDescription$Generic;ZLnet/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)V
       7: aload_0
       8: iload         4
      10: putfield      #105                // Field index:I
      13: aload_0
      14: iload         5
      16: putfield      #107                // Field optional:Z
      19: return

  protected net.bytebuddy.description.method.ParameterDescription resolve(net.bytebuddy.description.method.MethodDescription);
    Code:
       0: aload_1
       1: invokeinterface #115,  1          // InterfaceMethod net/bytebuddy/description/method/MethodDescription.getParameters:()Lnet/bytebuddy/description/method/ParameterList;
       6: astore_2
       7: aload_2
       8: invokeinterface #120,  1          // InterfaceMethod net/bytebuddy/description/method/ParameterList.size:()I
      13: aload_0
      14: getfield      #105                // Field index:I
      17: if_icmpgt     54
      20: new           #122                // class java/lang/IllegalStateException
      23: dup
      24: new           #124                // class java/lang/StringBuilder
      27: dup
      28: invokespecial #127                // Method java/lang/StringBuilder."<init>":()V
      31: aload_1
      32: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: ldc           #133                // String  does not define an index
      37: invokevirtual #136                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: getfield      #105                // Field index:I
      44: invokevirtual #139                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      47: invokevirtual #143                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #146                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_2
      55: aload_0
      56: getfield      #105                // Field index:I
      59: invokeinterface #150,  2          // InterfaceMethod net/bytebuddy/description/method/ParameterList.get:(I)Ljava/lang/Object;
      64: checkcast     #84                 // class net/bytebuddy/description/method/ParameterDescription
      67: areturn

  public net.bytebuddy.asm.Advice$OffsetMapping$Target resolve(net.bytebuddy.description.type.TypeDescription, net.bytebuddy.description.method.MethodDescription, net.bytebuddy.implementation.bytecode.assign.Assigner, net.bytebuddy.asm.Advice$ArgumentHandler, net.bytebuddy.asm.Advice$OffsetMapping$Sort);
    Code:
       0: aload_0
       1: getfield      #107                // Field optional:Z
       4: ifeq          58
       7: aload_2
       8: invokeinterface #115,  1          // InterfaceMethod net/bytebuddy/description/method/MethodDescription.getParameters:()Lnet/bytebuddy/description/method/ParameterList;
      13: invokeinterface #120,  1          // InterfaceMethod net/bytebuddy/description/method/ParameterList.size:()I
      18: aload_0
      19: getfield      #105                // Field index:I
      22: if_icmpgt     58
      25: aload_0
      26: getfield      #158                // Field readOnly:Z
      29: ifeq          46
      32: new           #47                 // class net/bytebuddy/asm/Advice$OffsetMapping$Target$ForDefaultValue$ReadOnly
      35: dup
      36: aload_0
      37: getfield      #160                // Field target:Lnet/bytebuddy/description/type/TypeDescription$Generic;
      40: invokespecial #163                // Method net/bytebuddy/asm/Advice$OffsetMapping$Target$ForDefaultValue$ReadOnly."<init>":(Lnet/bytebuddy/description/type/TypeDefinition;)V
      43: goto          57
      46: new           #50                 // class net/bytebuddy/asm/Advice$OffsetMapping$Target$ForDefaultValue$ReadWrite
      49: dup
      50: aload_0
      51: getfield      #160                // Field target:Lnet/bytebuddy/description/type/TypeDescription$Generic;
      54: invokespecial #164                // Method net/bytebuddy/asm/Advice$OffsetMapping$Target$ForDefaultValue$ReadWrite."<init>":(Lnet/bytebuddy/description/type/TypeDefinition;)V
      57: areturn
      58: aload_0
      59: aload_1
      60: aload_2
      61: aload_3
      62: aload         4
      64: aload         5
      66: invokespecial #166                // Method net/bytebuddy/asm/Advice$OffsetMapping$ForArgument.resolve:(Lnet/bytebuddy/description/type/TypeDescription;Lnet/bytebuddy/description/method/MethodDescription;Lnet/bytebuddy/implementation/bytecode/assign/Assigner;Lnet/bytebuddy/asm/Advice$ArgumentHandler;Lnet/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lnet/bytebuddy/asm/Advice$OffsetMapping$Target;
      69: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #178                // Method net/bytebuddy/asm/Advice$OffsetMapping$ForArgument.equals:(Ljava/lang/Object;)Z
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: aload_1
      12: if_acmpne     17
      15: iconst_1
      16: ireturn
      17: aload_1
      18: ifnonnull     23
      21: iconst_0
      22: ireturn
      23: aload_0
      24: invokevirtual #184                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: aload_1
      28: invokevirtual #184                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      31: if_acmpeq     36
      34: iconst_0
      35: ireturn
      36: aload_0
      37: getfield      #105                // Field index:I
      40: aload_1
      41: checkcast     #2                  // class net/bytebuddy/asm/Advice$OffsetMapping$ForArgument$Unresolved
      44: getfield      #105                // Field index:I
      47: if_icmpeq     52
      50: iconst_0
      51: ireturn
      52: aload_0
      53: getfield      #107                // Field optional:Z
      56: aload_1
      57: checkcast     #2                  // class net/bytebuddy/asm/Advice$OffsetMapping$ForArgument$Unresolved
      60: getfield      #107                // Field optional:Z
      63: if_icmpeq     68
      66: iconst_0
      67: ireturn
      68: iconst_1
      69: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #187                // Method net/bytebuddy/asm/Advice$OffsetMapping$ForArgument.hashCode:()I
       4: bipush        31
       6: imul
       7: aload_0
       8: getfield      #105                // Field index:I
      11: iadd
      12: bipush        31
      14: imul
      15: aload_0
      16: getfield      #107                // Field optional:Z
      19: iadd
      20: ireturn
}
