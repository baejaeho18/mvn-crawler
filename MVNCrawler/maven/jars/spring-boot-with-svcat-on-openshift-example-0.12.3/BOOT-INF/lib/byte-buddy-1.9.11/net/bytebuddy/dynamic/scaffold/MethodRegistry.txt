Compiled from "MethodRegistry.java"
public interface net.bytebuddy.dynamic.scaffold.MethodRegistry {
  public abstract net.bytebuddy.dynamic.scaffold.MethodRegistry prepend(net.bytebuddy.matcher.LatentMatcher<? super net.bytebuddy.description.method.MethodDescription>, net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler, net.bytebuddy.implementation.attribute.MethodAttributeAppender$Factory, net.bytebuddy.dynamic.Transformer<net.bytebuddy.description.method.MethodDescription>);

  public abstract net.bytebuddy.dynamic.scaffold.MethodRegistry append(net.bytebuddy.matcher.LatentMatcher<? super net.bytebuddy.description.method.MethodDescription>, net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler, net.bytebuddy.implementation.attribute.MethodAttributeAppender$Factory, net.bytebuddy.dynamic.Transformer<net.bytebuddy.description.method.MethodDescription>);

  public abstract net.bytebuddy.dynamic.scaffold.MethodRegistry$Prepared prepare(net.bytebuddy.dynamic.scaffold.InstrumentedType, net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler, net.bytebuddy.dynamic.scaffold.TypeValidation, net.bytebuddy.dynamic.VisibilityBridgeStrategy, net.bytebuddy.matcher.LatentMatcher<? super net.bytebuddy.description.method.MethodDescription>);
}
