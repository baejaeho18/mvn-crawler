Compiled from "Advice.java"
public class net.bytebuddy.asm.Advice$OffsetMapping$Target$ForArray$ReadWrite extends net.bytebuddy.asm.Advice$OffsetMapping$Target$ForArray {
  private final java.util.List<? extends net.bytebuddy.implementation.bytecode.StackManipulation> valueWrites;

  public net.bytebuddy.asm.Advice$OffsetMapping$Target$ForArray$ReadWrite(net.bytebuddy.description.type.TypeDescription$Generic, java.util.List<? extends net.bytebuddy.implementation.bytecode.StackManipulation>, java.util.List<? extends net.bytebuddy.implementation.bytecode.StackManipulation>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #35                 // Method net/bytebuddy/asm/Advice$OffsetMapping$Target$ForArray."<init>":(Lnet/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;)V
       6: aload_0
       7: aload_3
       8: putfield      #37                 // Field valueWrites:Ljava/util/List;
      11: return

  public net.bytebuddy.implementation.bytecode.StackManipulation resolveWrite();
    Code:
       0: aload_0
       1: getfield      #46                 // Field target:Lnet/bytebuddy/description/type/TypeDescription$Generic;
       4: invokestatic  #52                 // Method net/bytebuddy/implementation/bytecode/collection/ArrayAccess.of:(Lnet/bytebuddy/description/type/TypeDefinition;)Lnet/bytebuddy/implementation/bytecode/collection/ArrayAccess;
       7: aload_0
       8: getfield      #37                 // Field valueWrites:Ljava/util/List;
      11: invokevirtual #56                 // Method net/bytebuddy/implementation/bytecode/collection/ArrayAccess.forEach:(Ljava/util/List;)Lnet/bytebuddy/implementation/bytecode/StackManipulation;
      14: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #60                 // Method net/bytebuddy/asm/Advice$OffsetMapping$Target$ForArray.equals:(Ljava/lang/Object;)Z
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: aload_1
      12: if_acmpne     17
      15: iconst_1
      16: ireturn
      17: aload_1
      18: ifnonnull     23
      21: iconst_0
      22: ireturn
      23: aload_0
      24: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: aload_1
      28: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      31: if_acmpeq     36
      34: iconst_0
      35: ireturn
      36: aload_0
      37: getfield      #37                 // Field valueWrites:Ljava/util/List;
      40: aload_1
      41: checkcast     #2                  // class net/bytebuddy/asm/Advice$OffsetMapping$Target$ForArray$ReadWrite
      44: getfield      #37                 // Field valueWrites:Ljava/util/List;
      47: invokevirtual #67                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifne          55
      53: iconst_0
      54: ireturn
      55: iconst_1
      56: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #71                 // Method net/bytebuddy/asm/Advice$OffsetMapping$Target$ForArray.hashCode:()I
       4: bipush        31
       6: imul
       7: aload_0
       8: getfield      #37                 // Field valueWrites:Ljava/util/List;
      11: invokevirtual #72                 // Method java/lang/Object.hashCode:()I
      14: iadd
      15: ireturn
}
