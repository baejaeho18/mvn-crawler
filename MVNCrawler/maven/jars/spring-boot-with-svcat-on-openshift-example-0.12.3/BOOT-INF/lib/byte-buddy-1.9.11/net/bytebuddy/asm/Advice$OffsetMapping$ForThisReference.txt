Compiled from "Advice.java"
public class net.bytebuddy.asm.Advice$OffsetMapping$ForThisReference implements net.bytebuddy.asm.Advice$OffsetMapping {
  private final net.bytebuddy.description.type.TypeDescription$Generic target;

  private final boolean readOnly;

  private final net.bytebuddy.implementation.bytecode.assign.Assigner$Typing typing;

  private final boolean optional;

  protected net.bytebuddy.asm.Advice$OffsetMapping$ForThisReference(net.bytebuddy.description.type.TypeDescription$Generic, net.bytebuddy.asm.Advice$This);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #70,  1           // InterfaceMethod net/bytebuddy/asm/Advice$This.readOnly:()Z
       8: aload_2
       9: invokeinterface #73,  1           // InterfaceMethod net/bytebuddy/asm/Advice$This.typing:()Lnet/bytebuddy/implementation/bytecode/assign/Assigner$Typing;
      14: aload_2
      15: invokeinterface #75,  1           // InterfaceMethod net/bytebuddy/asm/Advice$This.optional:()Z
      20: invokespecial #78                 // Method "<init>":(Lnet/bytebuddy/description/type/TypeDescription$Generic;ZLnet/bytebuddy/implementation/bytecode/assign/Assigner$Typing;Z)V
      23: return

  public net.bytebuddy.asm.Advice$OffsetMapping$ForThisReference(net.bytebuddy.description.type.TypeDescription$Generic, boolean, net.bytebuddy.implementation.bytecode.assign.Assigner$Typing, boolean);
    Code:
       0: aload_0
       1: invokespecial #85                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #87                 // Field target:Lnet/bytebuddy/description/type/TypeDescription$Generic;
       9: aload_0
      10: iload_2
      11: putfield      #89                 // Field readOnly:Z
      14: aload_0
      15: aload_3
      16: putfield      #91                 // Field typing:Lnet/bytebuddy/implementation/bytecode/assign/Assigner$Typing;
      19: aload_0
      20: iload         4
      22: putfield      #93                 // Field optional:Z
      25: return

  public net.bytebuddy.asm.Advice$OffsetMapping$Target resolve(net.bytebuddy.description.type.TypeDescription, net.bytebuddy.description.method.MethodDescription, net.bytebuddy.implementation.bytecode.assign.Assigner, net.bytebuddy.asm.Advice$ArgumentHandler, net.bytebuddy.asm.Advice$OffsetMapping$Sort);
    Code:
       0: aload_2
       1: invokeinterface #100,  1          // InterfaceMethod net/bytebuddy/description/method/MethodDescription.isStatic:()Z
       6: ifne          18
       9: aload         5
      11: aload_2
      12: invokevirtual #104                // Method net/bytebuddy/asm/Advice$OffsetMapping$Sort.isPremature:(Lnet/bytebuddy/description/method/MethodDescription;)Z
      15: ifeq          79
      18: aload_0
      19: getfield      #93                 // Field optional:Z
      22: ifeq          52
      25: aload_0
      26: getfield      #89                 // Field readOnly:Z
      29: ifeq          43
      32: new           #46                 // class net/bytebuddy/asm/Advice$OffsetMapping$Target$ForDefaultValue$ReadOnly
      35: dup
      36: aload_1
      37: invokespecial #107                // Method net/bytebuddy/asm/Advice$OffsetMapping$Target$ForDefaultValue$ReadOnly."<init>":(Lnet/bytebuddy/description/type/TypeDefinition;)V
      40: goto          51
      43: new           #49                 // class net/bytebuddy/asm/Advice$OffsetMapping$Target$ForDefaultValue$ReadWrite
      46: dup
      47: aload_1
      48: invokespecial #108                // Method net/bytebuddy/asm/Advice$OffsetMapping$Target$ForDefaultValue$ReadWrite."<init>":(Lnet/bytebuddy/description/type/TypeDefinition;)V
      51: areturn
      52: new           #110                // class java/lang/IllegalStateException
      55: dup
      56: new           #112                // class java/lang/StringBuilder
      59: dup
      60: invokespecial #113                // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #115                // String Cannot map this reference for static method or constructor start:
      65: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_2
      69: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: invokevirtual #126                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #129                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload_3
      80: aload_1
      81: invokeinterface #133,  1          // InterfaceMethod net/bytebuddy/description/type/TypeDescription.asGenericType:()Lnet/bytebuddy/description/type/TypeDescription$Generic;
      86: aload_0
      87: getfield      #87                 // Field target:Lnet/bytebuddy/description/type/TypeDescription$Generic;
      90: aload_0
      91: getfield      #91                 // Field typing:Lnet/bytebuddy/implementation/bytecode/assign/Assigner$Typing;
      94: invokeinterface #137,  4          // InterfaceMethod net/bytebuddy/implementation/bytecode/assign/Assigner.assign:(Lnet/bytebuddy/description/type/TypeDescription$Generic;Lnet/bytebuddy/description/type/TypeDescription$Generic;Lnet/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lnet/bytebuddy/implementation/bytecode/StackManipulation;
      99: astore        6
     101: aload         6
     103: invokeinterface #142,  1          // InterfaceMethod net/bytebuddy/implementation/bytecode/StackManipulation.isValid:()Z
     108: ifne          150
     111: new           #110                // class java/lang/IllegalStateException
     114: dup
     115: new           #112                // class java/lang/StringBuilder
     118: dup
     119: invokespecial #113                // Method java/lang/StringBuilder."<init>":()V
     122: ldc           #144                // String Cannot assign
     124: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload_1
     128: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     131: ldc           #146                // String  to
     133: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload_0
     137: getfield      #87                 // Field target:Lnet/bytebuddy/description/type/TypeDescription$Generic;
     140: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     143: invokevirtual #126                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: invokespecial #129                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     149: athrow
     150: aload_0
     151: getfield      #89                 // Field readOnly:Z
     154: ifeq          181
     157: new           #55                 // class net/bytebuddy/asm/Advice$OffsetMapping$Target$ForVariable$ReadOnly
     160: dup
     161: aload_1
     162: invokeinterface #133,  1          // InterfaceMethod net/bytebuddy/description/type/TypeDescription.asGenericType:()Lnet/bytebuddy/description/type/TypeDescription$Generic;
     167: aload         4
     169: iconst_0
     170: invokeinterface #150,  2          // InterfaceMethod net/bytebuddy/asm/Advice$ArgumentHandler.argument:(I)I
     175: aload         6
     177: invokespecial #153                // Method net/bytebuddy/asm/Advice$OffsetMapping$Target$ForVariable$ReadOnly."<init>":(Lnet/bytebuddy/description/type/TypeDefinition;ILnet/bytebuddy/implementation/bytecode/StackManipulation;)V
     180: areturn
     181: aload_3
     182: aload_0
     183: getfield      #87                 // Field target:Lnet/bytebuddy/description/type/TypeDescription$Generic;
     186: aload_1
     187: invokeinterface #133,  1          // InterfaceMethod net/bytebuddy/description/type/TypeDescription.asGenericType:()Lnet/bytebuddy/description/type/TypeDescription$Generic;
     192: aload_0
     193: getfield      #91                 // Field typing:Lnet/bytebuddy/implementation/bytecode/assign/Assigner$Typing;
     196: invokeinterface #137,  4          // InterfaceMethod net/bytebuddy/implementation/bytecode/assign/Assigner.assign:(Lnet/bytebuddy/description/type/TypeDescription$Generic;Lnet/bytebuddy/description/type/TypeDescription$Generic;Lnet/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lnet/bytebuddy/implementation/bytecode/StackManipulation;
     201: astore        7
     203: aload         7
     205: invokeinterface #142,  1          // InterfaceMethod net/bytebuddy/implementation/bytecode/StackManipulation.isValid:()Z
     210: ifne          252
     213: new           #110                // class java/lang/IllegalStateException
     216: dup
     217: new           #112                // class java/lang/StringBuilder
     220: dup
     221: invokespecial #113                // Method java/lang/StringBuilder."<init>":()V
     224: ldc           #144                // String Cannot assign
     226: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     229: aload_0
     230: getfield      #87                 // Field target:Lnet/bytebuddy/description/type/TypeDescription$Generic;
     233: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     236: ldc           #146                // String  to
     238: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     241: aload_1
     242: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     245: invokevirtual #126                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     248: invokespecial #129                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     251: athrow
     252: new           #57                 // class net/bytebuddy/asm/Advice$OffsetMapping$Target$ForVariable$ReadWrite
     255: dup
     256: aload_1
     257: invokeinterface #133,  1          // InterfaceMethod net/bytebuddy/description/type/TypeDescription.asGenericType:()Lnet/bytebuddy/description/type/TypeDescription$Generic;
     262: aload         4
     264: iconst_0
     265: invokeinterface #150,  2          // InterfaceMethod net/bytebuddy/asm/Advice$ArgumentHandler.argument:(I)I
     270: aload         6
     272: aload         7
     274: invokespecial #156                // Method net/bytebuddy/asm/Advice$OffsetMapping$Target$ForVariable$ReadWrite."<init>":(Lnet/bytebuddy/description/type/TypeDefinition;ILnet/bytebuddy/implementation/bytecode/StackManipulation;Lnet/bytebuddy/implementation/bytecode/StackManipulation;)V
     277: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #175                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #175                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #89                 // Field readOnly:Z
      30: aload_1
      31: checkcast     #2                  // class net/bytebuddy/asm/Advice$OffsetMapping$ForThisReference
      34: getfield      #89                 // Field readOnly:Z
      37: if_icmpeq     42
      40: iconst_0
      41: ireturn
      42: aload_0
      43: getfield      #93                 // Field optional:Z
      46: aload_1
      47: checkcast     #2                  // class net/bytebuddy/asm/Advice$OffsetMapping$ForThisReference
      50: getfield      #93                 // Field optional:Z
      53: if_icmpeq     58
      56: iconst_0
      57: ireturn
      58: aload_0
      59: getfield      #91                 // Field typing:Lnet/bytebuddy/implementation/bytecode/assign/Assigner$Typing;
      62: aload_1
      63: checkcast     #2                  // class net/bytebuddy/asm/Advice$OffsetMapping$ForThisReference
      66: getfield      #91                 // Field typing:Lnet/bytebuddy/implementation/bytecode/assign/Assigner$Typing;
      69: invokevirtual #177                // Method net/bytebuddy/implementation/bytecode/assign/Assigner$Typing.equals:(Ljava/lang/Object;)Z
      72: ifne          77
      75: iconst_0
      76: ireturn
      77: aload_0
      78: getfield      #87                 // Field target:Lnet/bytebuddy/description/type/TypeDescription$Generic;
      81: aload_1
      82: checkcast     #2                  // class net/bytebuddy/asm/Advice$OffsetMapping$ForThisReference
      85: getfield      #87                 // Field target:Lnet/bytebuddy/description/type/TypeDescription$Generic;
      88: invokevirtual #178                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      91: ifne          96
      94: iconst_0
      95: ireturn
      96: iconst_1
      97: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: bipush        31
       4: imul
       5: aload_0
       6: getfield      #87                 // Field target:Lnet/bytebuddy/description/type/TypeDescription$Generic;
       9: invokevirtual #182                // Method java/lang/Object.hashCode:()I
      12: iadd
      13: bipush        31
      15: imul
      16: aload_0
      17: getfield      #89                 // Field readOnly:Z
      20: iadd
      21: bipush        31
      23: imul
      24: aload_0
      25: getfield      #91                 // Field typing:Lnet/bytebuddy/implementation/bytecode/assign/Assigner$Typing;
      28: invokevirtual #183                // Method net/bytebuddy/implementation/bytecode/assign/Assigner$Typing.hashCode:()I
      31: iadd
      32: bipush        31
      34: imul
      35: aload_0
      36: getfield      #93                 // Field optional:Z
      39: iadd
      40: ireturn
}
