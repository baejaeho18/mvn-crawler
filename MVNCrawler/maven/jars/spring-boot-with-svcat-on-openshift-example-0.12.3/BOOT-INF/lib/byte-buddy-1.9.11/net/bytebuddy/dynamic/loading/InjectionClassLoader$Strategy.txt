Compiled from "InjectionClassLoader.java"
public final class net.bytebuddy.dynamic.loading.InjectionClassLoader$Strategy extends java.lang.Enum<net.bytebuddy.dynamic.loading.InjectionClassLoader$Strategy> implements net.bytebuddy.dynamic.loading.ClassLoadingStrategy<net.bytebuddy.dynamic.loading.InjectionClassLoader> {
  public static final net.bytebuddy.dynamic.loading.InjectionClassLoader$Strategy INSTANCE;

  private static final net.bytebuddy.dynamic.loading.InjectionClassLoader$Strategy[] $VALUES;

  public static net.bytebuddy.dynamic.loading.InjectionClassLoader$Strategy[] values();
    Code:
       0: getstatic     #24                 // Field $VALUES:[Lnet/bytebuddy/dynamic/loading/InjectionClassLoader$Strategy;
       3: invokevirtual #29                 // Method "[Lnet/bytebuddy/dynamic/loading/InjectionClassLoader$Strategy;".clone:()Ljava/lang/Object;
       6: checkcast     #25                 // class "[Lnet/bytebuddy/dynamic/loading/InjectionClassLoader$Strategy;"
       9: areturn

  public static net.bytebuddy.dynamic.loading.InjectionClassLoader$Strategy valueOf(java.lang.String);
    Code:
       0: ldc           #2                  // class net/bytebuddy/dynamic/loading/InjectionClassLoader$Strategy
       2: aload_0
       3: invokestatic  #34                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #2                  // class net/bytebuddy/dynamic/loading/InjectionClassLoader$Strategy
       9: areturn

  private net.bytebuddy.dynamic.loading.InjectionClassLoader$Strategy();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #41                 // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public java.util.Map<net.bytebuddy.description.type.TypeDescription, java.lang.Class<?>> load(net.bytebuddy.dynamic.loading.InjectionClassLoader, java.util.Map<net.bytebuddy.description.type.TypeDescription, byte[]>);
    Code:
       0: aload_1
       1: ifnonnull     31
       4: new           #49                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #51                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #55                 // String Cannot add types to bootstrap class loader:
      17: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_2
      21: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      24: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #69                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: new           #71                 // class java/util/LinkedHashMap
      34: dup
      35: invokespecial #72                 // Method java/util/LinkedHashMap."<init>":()V
      38: astore_3
      39: new           #74                 // class java/util/HashMap
      42: dup
      43: invokespecial #75                 // Method java/util/HashMap."<init>":()V
      46: astore        4
      48: aload_2
      49: invokeinterface #79,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      54: invokeinterface #85,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      59: astore        5
      61: aload         5
      63: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifeq          145
      71: aload         5
      73: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      78: checkcast     #13                 // class java/util/Map$Entry
      81: astore        6
      83: aload_3
      84: aload         6
      86: invokeinterface #97,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      91: checkcast     #99                 // class net/bytebuddy/description/type/TypeDescription
      94: invokeinterface #102,  1          // InterfaceMethod net/bytebuddy/description/type/TypeDescription.getName:()Ljava/lang/String;
      99: aload         6
     101: invokeinterface #105,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     106: invokeinterface #109,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     111: pop
     112: aload         4
     114: aload         6
     116: invokeinterface #97,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     121: checkcast     #99                 // class net/bytebuddy/description/type/TypeDescription
     124: invokeinterface #102,  1          // InterfaceMethod net/bytebuddy/description/type/TypeDescription.getName:()Ljava/lang/String;
     129: aload         6
     131: invokeinterface #97,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     136: invokeinterface #109,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     141: pop
     142: goto          61
     145: new           #74                 // class java/util/HashMap
     148: dup
     149: invokespecial #75                 // Method java/util/HashMap."<init>":()V
     152: astore        5
     154: aload_1
     155: aload_3
     156: invokevirtual #113                // Method net/bytebuddy/dynamic/loading/InjectionClassLoader.defineClasses:(Ljava/util/Map;)Ljava/util/Map;
     159: invokeinterface #79,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     164: invokeinterface #85,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     169: astore        6
     171: aload         6
     173: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     178: ifeq          225
     181: aload         6
     183: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     188: checkcast     #13                 // class java/util/Map$Entry
     191: astore        7
     193: aload         5
     195: aload         4
     197: aload         7
     199: invokeinterface #97,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     204: invokeinterface #117,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     209: aload         7
     211: invokeinterface #105,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     216: invokeinterface #109,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     221: pop
     222: goto          171
     225: goto          259
     228: astore        6
     230: new           #119                // class java/lang/IllegalStateException
     233: dup
     234: new           #51                 // class java/lang/StringBuilder
     237: dup
     238: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
     241: ldc           #121                // String Cannot load classes:
     243: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     246: aload_2
     247: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     250: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     253: aload         6
     255: invokespecial #124                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     258: athrow
     259: aload         5
     261: areturn
    Exception table:
       from    to  target type
         154   225   228   Class java/lang/ClassNotFoundException

  public java.util.Map load(java.lang.ClassLoader, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #10                 // class net/bytebuddy/dynamic/loading/InjectionClassLoader
       5: aload_2
       6: invokevirtual #144                // Method load:(Lnet/bytebuddy/dynamic/loading/InjectionClassLoader;Ljava/util/Map;)Ljava/util/Map;
       9: areturn

  static {};
    Code:
       0: new           #2                  // class net/bytebuddy/dynamic/loading/InjectionClassLoader$Strategy
       3: dup
       4: ldc           #146                // String INSTANCE
       6: iconst_0
       7: invokespecial #147                // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #149                // Field INSTANCE:Lnet/bytebuddy/dynamic/loading/InjectionClassLoader$Strategy;
      13: iconst_1
      14: anewarray     #2                  // class net/bytebuddy/dynamic/loading/InjectionClassLoader$Strategy
      17: dup
      18: iconst_0
      19: getstatic     #149                // Field INSTANCE:Lnet/bytebuddy/dynamic/loading/InjectionClassLoader$Strategy;
      22: aastore
      23: putstatic     #24                 // Field $VALUES:[Lnet/bytebuddy/dynamic/loading/InjectionClassLoader$Strategy;
      26: return
}
