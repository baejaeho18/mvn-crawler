Compiled from "ClassFileVersion.java"
public class net.bytebuddy.ClassFileVersion$VersionLocator$ForJava9CapableVm implements net.bytebuddy.ClassFileVersion$VersionLocator {
  private static final java.lang.Object STATIC_METHOD;

  private final java.lang.reflect.Method current;

  private final java.lang.reflect.Method major;

  protected net.bytebuddy.ClassFileVersion$VersionLocator$ForJava9CapableVm(java.lang.reflect.Method, java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokespecial #27                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #29                 // Field current:Ljava/lang/reflect/Method;
       9: aload_0
      10: aload_2
      11: putfield      #31                 // Field major:Ljava/lang/reflect/Method;
      14: return

  public net.bytebuddy.ClassFileVersion locate();
    Code:
       0: aload_0
       1: getfield      #31                 // Field major:Ljava/lang/reflect/Method;
       4: aload_0
       5: getfield      #29                 // Field current:Ljava/lang/reflect/Method;
       8: getstatic     #41                 // Field STATIC_METHOD:Ljava/lang/Object;
      11: iconst_0
      12: anewarray     #4                  // class java/lang/Object
      15: invokevirtual #47                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      18: iconst_0
      19: anewarray     #4                  // class java/lang/Object
      22: invokevirtual #47                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #49                 // class java/lang/Integer
      28: invokevirtual #53                 // Method java/lang/Integer.intValue:()I
      31: invokestatic  #57                 // Method net/bytebuddy/ClassFileVersion.ofJavaVersion:(I)Lnet/bytebuddy/ClassFileVersion;
      34: areturn
      35: astore_1
      36: new           #59                 // class java/lang/IllegalStateException
      39: dup
      40: ldc           #61                 // String Could not access VM version lookup
      42: aload_1
      43: invokespecial #64                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      46: athrow
      47: astore_1
      48: new           #59                 // class java/lang/IllegalStateException
      51: dup
      52: ldc           #66                 // String Could not look up VM version
      54: aload_1
      55: invokevirtual #70                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
      58: invokespecial #64                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      61: athrow
    Exception table:
       from    to  target type
           0    34    35   Class java/lang/IllegalAccessException
           0    34    47   Class java/lang/reflect/InvocationTargetException

  static {};
    Code:
       0: goto          8
       3: aconst_null
       4: putstatic     #41                 // Field STATIC_METHOD:Ljava/lang/Object;
       7: return
       8: goto          3

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #80                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #80                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #29                 // Field current:Ljava/lang/reflect/Method;
      30: aload_1
      31: checkcast     #2                  // class net/bytebuddy/ClassFileVersion$VersionLocator$ForJava9CapableVm
      34: getfield      #29                 // Field current:Ljava/lang/reflect/Method;
      37: invokevirtual #82                 // Method java/lang/reflect/Method.equals:(Ljava/lang/Object;)Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: getfield      #31                 // Field major:Ljava/lang/reflect/Method;
      49: aload_1
      50: checkcast     #2                  // class net/bytebuddy/ClassFileVersion$VersionLocator$ForJava9CapableVm
      53: getfield      #31                 // Field major:Ljava/lang/reflect/Method;
      56: invokevirtual #82                 // Method java/lang/reflect/Method.equals:(Ljava/lang/Object;)Z
      59: ifne          64
      62: iconst_0
      63: ireturn
      64: iconst_1
      65: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: bipush        31
       4: imul
       5: aload_0
       6: getfield      #29                 // Field current:Ljava/lang/reflect/Method;
       9: invokevirtual #85                 // Method java/lang/reflect/Method.hashCode:()I
      12: iadd
      13: bipush        31
      15: imul
      16: aload_0
      17: getfield      #31                 // Field major:Ljava/lang/reflect/Method;
      20: invokevirtual #85                 // Method java/lang/reflect/Method.hashCode:()I
      23: iadd
      24: ireturn
}
