Compiled from "TypePool.java"
public abstract class net.bytebuddy.pool.TypePool$AbstractBase implements net.bytebuddy.pool.TypePool {
  protected static final java.util.Map<java.lang.String, net.bytebuddy.description.type.TypeDescription> PRIMITIVE_TYPES;

  protected static final java.util.Map<java.lang.String, java.lang.String> PRIMITIVE_DESCRIPTORS;

  private static final java.lang.String ARRAY_SYMBOL;

  protected final net.bytebuddy.pool.TypePool$CacheProvider cacheProvider;

  protected net.bytebuddy.pool.TypePool$AbstractBase(net.bytebuddy.pool.TypePool$CacheProvider);
    Code:
       0: aload_0
       1: invokespecial #62                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #64                 // Field cacheProvider:Lnet/bytebuddy/pool/TypePool$CacheProvider;
       9: return

  public net.bytebuddy.pool.TypePool$Resolution describe(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #70                 // String /
       3: invokevirtual #76                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       6: ifeq          36
       9: new           #78                 // class java/lang/IllegalArgumentException
      12: dup
      13: new           #80                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #81                 // Method java/lang/StringBuilder."<init>":()V
      20: aload_1
      21: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #87                 // String  contains the illegal character \'/\'
      26: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #94                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: iconst_0
      37: istore_2
      38: aload_1
      39: ldc           #55                 // String [
      41: invokevirtual #98                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      44: ifeq          59
      47: iinc          2, 1
      50: aload_1
      51: iconst_1
      52: invokevirtual #102                // Method java/lang/String.substring:(I)Ljava/lang/String;
      55: astore_1
      56: goto          38
      59: iload_2
      60: ifle          96
      63: getstatic     #104                // Field PRIMITIVE_DESCRIPTORS:Ljava/util/Map;
      66: aload_1
      67: invokeinterface #110,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #72                 // class java/lang/String
      75: astore_3
      76: aload_3
      77: ifnonnull     94
      80: aload_1
      81: iconst_1
      82: aload_1
      83: invokevirtual #114                // Method java/lang/String.length:()I
      86: iconst_1
      87: isub
      88: invokevirtual #117                // Method java/lang/String.substring:(II)Ljava/lang/String;
      91: goto          95
      94: aload_3
      95: astore_1
      96: getstatic     #119                // Field PRIMITIVE_TYPES:Ljava/util/Map;
      99: aload_1
     100: invokeinterface #110,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     105: checkcast     #44                 // class net/bytebuddy/description/type/TypeDescription
     108: astore_3
     109: aload_3
     110: ifnonnull     126
     113: aload_0
     114: getfield      #64                 // Field cacheProvider:Lnet/bytebuddy/pool/TypePool$CacheProvider;
     117: aload_1
     118: invokeinterface #122,  2          // InterfaceMethod net/bytebuddy/pool/TypePool$CacheProvider.find:(Ljava/lang/String;)Lnet/bytebuddy/pool/TypePool$Resolution;
     123: goto          134
     126: new           #39                 // class net/bytebuddy/pool/TypePool$Resolution$Simple
     129: dup
     130: aload_3
     131: invokespecial #125                // Method net/bytebuddy/pool/TypePool$Resolution$Simple."<init>":(Lnet/bytebuddy/description/type/TypeDescription;)V
     134: astore        4
     136: aload         4
     138: ifnonnull     153
     141: aload_0
     142: aload_1
     143: aload_0
     144: aload_1
     145: invokevirtual #128                // Method doDescribe:(Ljava/lang/String;)Lnet/bytebuddy/pool/TypePool$Resolution;
     148: invokevirtual #132                // Method doCache:(Ljava/lang/String;Lnet/bytebuddy/pool/TypePool$Resolution;)Lnet/bytebuddy/pool/TypePool$Resolution;
     151: astore        4
     153: aload         4
     155: iload_2
     156: invokestatic  #136                // Method net/bytebuddy/pool/TypePool$AbstractBase$ArrayTypeResolution.of:(Lnet/bytebuddy/pool/TypePool$Resolution;I)Lnet/bytebuddy/pool/TypePool$Resolution;
     159: areturn

  protected net.bytebuddy.pool.TypePool$Resolution doCache(java.lang.String, net.bytebuddy.pool.TypePool$Resolution);
    Code:
       0: aload_0
       1: getfield      #64                 // Field cacheProvider:Lnet/bytebuddy/pool/TypePool$CacheProvider;
       4: aload_1
       5: aload_2
       6: invokeinterface #147,  3          // InterfaceMethod net/bytebuddy/pool/TypePool$CacheProvider.register:(Ljava/lang/String;Lnet/bytebuddy/pool/TypePool$Resolution;)Lnet/bytebuddy/pool/TypePool$Resolution;
      11: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #64                 // Field cacheProvider:Lnet/bytebuddy/pool/TypePool$CacheProvider;
       4: invokeinterface #150,  1          // InterfaceMethod net/bytebuddy/pool/TypePool$CacheProvider.clear:()V
       9: return

  protected abstract net.bytebuddy.pool.TypePool$Resolution doDescribe(java.lang.String);

  static {};
    Code:
       0: goto          155
       3: new           #153                // class java/util/HashMap
       6: dup
       7: invokespecial #154                // Method java/util/HashMap."<init>":()V
      10: astore_0
      11: new           #153                // class java/util/HashMap
      14: dup
      15: invokespecial #154                // Method java/util/HashMap."<init>":()V
      18: astore_1
      19: bipush        9
      21: anewarray     #156                // class java/lang/Class
      24: dup
      25: iconst_0
      26: getstatic     #162                // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      29: aastore
      30: dup
      31: iconst_1
      32: getstatic     #165                // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      35: aastore
      36: dup
      37: iconst_2
      38: getstatic     #168                // Field java/lang/Short.TYPE:Ljava/lang/Class;
      41: aastore
      42: dup
      43: iconst_3
      44: getstatic     #171                // Field java/lang/Character.TYPE:Ljava/lang/Class;
      47: aastore
      48: dup
      49: iconst_4
      50: getstatic     #174                // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      53: aastore
      54: dup
      55: iconst_5
      56: getstatic     #177                // Field java/lang/Long.TYPE:Ljava/lang/Class;
      59: aastore
      60: dup
      61: bipush        6
      63: getstatic     #180                // Field java/lang/Float.TYPE:Ljava/lang/Class;
      66: aastore
      67: dup
      68: bipush        7
      70: getstatic     #183                // Field java/lang/Double.TYPE:Ljava/lang/Class;
      73: aastore
      74: dup
      75: bipush        8
      77: getstatic     #186                // Field java/lang/Void.TYPE:Ljava/lang/Class;
      80: aastore
      81: astore_2
      82: aload_2
      83: arraylength
      84: istore_3
      85: iconst_0
      86: istore        4
      88: iload         4
      90: iload_3
      91: if_icmpge     140
      94: aload_2
      95: iload         4
      97: aaload
      98: astore        5
     100: aload_0
     101: aload         5
     103: invokevirtual #189                // Method java/lang/Class.getName:()Ljava/lang/String;
     106: aload         5
     108: invokestatic  #192                // Method net/bytebuddy/description/type/TypeDescription$ForLoadedType.of:(Ljava/lang/Class;)Lnet/bytebuddy/description/type/TypeDescription;
     111: invokeinterface #196,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     116: pop
     117: aload_1
     118: aload         5
     120: invokestatic  #202                // Method net/bytebuddy/jar/asm/Type.getDescriptor:(Ljava/lang/Class;)Ljava/lang/String;
     123: aload         5
     125: invokevirtual #189                // Method java/lang/Class.getName:()Ljava/lang/String;
     128: invokeinterface #196,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     133: pop
     134: iinc          4, 1
     137: goto          88
     140: aload_0
     141: invokestatic  #208                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     144: putstatic     #119                // Field PRIMITIVE_TYPES:Ljava/util/Map;
     147: aload_1
     148: invokestatic  #208                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     151: putstatic     #104                // Field PRIMITIVE_DESCRIPTORS:Ljava/util/Map;
     154: return
     155: goto          3

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #218                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #218                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #64                 // Field cacheProvider:Lnet/bytebuddy/pool/TypePool$CacheProvider;
      30: aload_1
      31: checkcast     #2                  // class net/bytebuddy/pool/TypePool$AbstractBase
      34: getfield      #64                 // Field cacheProvider:Lnet/bytebuddy/pool/TypePool$CacheProvider;
      37: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: iconst_1
      46: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: bipush        31
       4: imul
       5: aload_0
       6: getfield      #64                 // Field cacheProvider:Lnet/bytebuddy/pool/TypePool$CacheProvider;
       9: invokevirtual #223                // Method java/lang/Object.hashCode:()I
      12: iadd
      13: ireturn
}
