Compiled from "TypePool.java"
public class net.bytebuddy.pool.TypePool$Explicit extends net.bytebuddy.pool.TypePool$AbstractBase$Hierarchical {
  private final java.util.Map<java.lang.String, net.bytebuddy.description.type.TypeDescription> types;

  public net.bytebuddy.pool.TypePool$Explicit(java.util.Map<java.lang.String, net.bytebuddy.description.type.TypeDescription>);
    Code:
       0: aload_0
       1: getstatic     #46                 // Field net/bytebuddy/pool/TypePool$Empty.INSTANCE:Lnet/bytebuddy/pool/TypePool$Empty;
       4: aload_1
       5: invokespecial #49                 // Method "<init>":(Lnet/bytebuddy/pool/TypePool;Ljava/util/Map;)V
       8: return

  public net.bytebuddy.pool.TypePool$Explicit(net.bytebuddy.pool.TypePool, java.util.Map<java.lang.String, net.bytebuddy.description.type.TypeDescription>);
    Code:
       0: aload_0
       1: getstatic     #55                 // Field net/bytebuddy/pool/TypePool$CacheProvider$NoOp.INSTANCE:Lnet/bytebuddy/pool/TypePool$CacheProvider$NoOp;
       4: aload_1
       5: invokespecial #58                 // Method net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical."<init>":(Lnet/bytebuddy/pool/TypePool$CacheProvider;Lnet/bytebuddy/pool/TypePool;)V
       8: aload_0
       9: aload_2
      10: putfield      #60                 // Field types:Ljava/util/Map;
      13: return

  protected net.bytebuddy.pool.TypePool$Resolution doDescribe(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #60                 // Field types:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #70,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #72                 // class net/bytebuddy/description/type/TypeDescription
      13: astore_2
      14: aload_2
      15: ifnonnull     29
      18: new           #18                 // class net/bytebuddy/pool/TypePool$Resolution$Illegal
      21: dup
      22: aload_1
      23: invokespecial #75                 // Method net/bytebuddy/pool/TypePool$Resolution$Illegal."<init>":(Ljava/lang/String;)V
      26: goto          37
      29: new           #21                 // class net/bytebuddy/pool/TypePool$Resolution$Simple
      32: dup
      33: aload_2
      34: invokespecial #78                 // Method net/bytebuddy/pool/TypePool$Resolution$Simple."<init>":(Lnet/bytebuddy/description/type/TypeDescription;)V
      37: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #86                 // Method net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.equals:(Ljava/lang/Object;)Z
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: aload_1
      12: if_acmpne     17
      15: iconst_1
      16: ireturn
      17: aload_1
      18: ifnonnull     23
      21: iconst_0
      22: ireturn
      23: aload_0
      24: invokevirtual #92                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: aload_1
      28: invokevirtual #92                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      31: if_acmpeq     36
      34: iconst_0
      35: ireturn
      36: aload_0
      37: getfield      #60                 // Field types:Ljava/util/Map;
      40: aload_1
      41: checkcast     #2                  // class net/bytebuddy/pool/TypePool$Explicit
      44: getfield      #60                 // Field types:Ljava/util/Map;
      47: invokevirtual #93                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifne          55
      53: iconst_0
      54: ireturn
      55: iconst_1
      56: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #97                 // Method net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.hashCode:()I
       4: bipush        31
       6: imul
       7: aload_0
       8: getfield      #60                 // Field types:Ljava/util/Map;
      11: invokevirtual #98                 // Method java/lang/Object.hashCode:()I
      14: iadd
      15: ireturn
}
