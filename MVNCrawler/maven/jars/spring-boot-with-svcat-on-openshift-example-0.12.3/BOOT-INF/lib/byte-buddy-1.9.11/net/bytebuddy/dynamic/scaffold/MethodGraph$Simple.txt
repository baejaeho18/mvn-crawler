Compiled from "MethodGraph.java"
public class net.bytebuddy.dynamic.scaffold.MethodGraph$Simple implements net.bytebuddy.dynamic.scaffold.MethodGraph {
  private final java.util.LinkedHashMap<net.bytebuddy.description.method.MethodDescription$SignatureToken, net.bytebuddy.dynamic.scaffold.MethodGraph$Node> nodes;

  public net.bytebuddy.dynamic.scaffold.MethodGraph$Simple(java.util.LinkedHashMap<net.bytebuddy.description.method.MethodDescription$SignatureToken, net.bytebuddy.dynamic.scaffold.MethodGraph$Node>);
    Code:
       0: aload_0
       1: invokespecial #39                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #41                 // Field nodes:Ljava/util/LinkedHashMap;
       9: return

  public static net.bytebuddy.dynamic.scaffold.MethodGraph of(java.util.List<? extends net.bytebuddy.description.method.MethodDescription>);
    Code:
       0: new           #48                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #49                 // Method java/util/LinkedHashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #55,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          56
      24: aload_2
      25: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #12                 // class net/bytebuddy/description/method/MethodDescription
      33: astore_3
      34: aload_1
      35: aload_3
      36: invokeinterface #69,  1           // InterfaceMethod net/bytebuddy/description/method/MethodDescription.asSignatureToken:()Lnet/bytebuddy/description/method/MethodDescription$SignatureToken;
      41: new           #26                 // class net/bytebuddy/dynamic/scaffold/MethodGraph$Node$Simple
      44: dup
      45: aload_3
      46: invokespecial #72                 // Method net/bytebuddy/dynamic/scaffold/MethodGraph$Node$Simple."<init>":(Lnet/bytebuddy/description/method/MethodDescription;)V
      49: invokevirtual #76                 // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: goto          15
      56: new           #2                  // class net/bytebuddy/dynamic/scaffold/MethodGraph$Simple
      59: dup
      60: aload_1
      61: invokespecial #78                 // Method "<init>":(Ljava/util/LinkedHashMap;)V
      64: areturn

  public net.bytebuddy.dynamic.scaffold.MethodGraph$Node locate(net.bytebuddy.description.method.MethodDescription$SignatureToken);
    Code:
       0: aload_0
       1: getfield      #41                 // Field nodes:Ljava/util/LinkedHashMap;
       4: aload_1
       5: invokevirtual #89                 // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #15                 // class net/bytebuddy/dynamic/scaffold/MethodGraph$Node
      11: astore_2
      12: aload_2
      13: ifnonnull     22
      16: getstatic     #93                 // Field net/bytebuddy/dynamic/scaffold/MethodGraph$Node$Unresolved.INSTANCE:Lnet/bytebuddy/dynamic/scaffold/MethodGraph$Node$Unresolved;
      19: goto          23
      22: aload_2
      23: areturn

  public net.bytebuddy.dynamic.scaffold.MethodGraph$NodeList listNodes();
    Code:
       0: new           #18                 // class net/bytebuddy/dynamic/scaffold/MethodGraph$NodeList
       3: dup
       4: new           #101                // class java/util/ArrayList
       7: dup
       8: aload_0
       9: getfield      #41                 // Field nodes:Ljava/util/LinkedHashMap;
      12: invokevirtual #105                // Method java/util/LinkedHashMap.values:()Ljava/util/Collection;
      15: invokespecial #108                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: invokespecial #111                // Method net/bytebuddy/dynamic/scaffold/MethodGraph$NodeList."<init>":(Ljava/util/List;)V
      21: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #117                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #117                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #41                 // Field nodes:Ljava/util/LinkedHashMap;
      30: aload_1
      31: checkcast     #2                  // class net/bytebuddy/dynamic/scaffold/MethodGraph$Simple
      34: getfield      #41                 // Field nodes:Ljava/util/LinkedHashMap;
      37: invokevirtual #119                // Method java/util/LinkedHashMap.equals:(Ljava/lang/Object;)Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: iconst_1
      46: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: bipush        31
       4: imul
       5: aload_0
       6: getfield      #41                 // Field nodes:Ljava/util/LinkedHashMap;
       9: invokevirtual #123                // Method java/util/LinkedHashMap.hashCode:()I
      12: iadd
      13: ireturn
}
