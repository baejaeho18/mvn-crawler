Compiled from "SynchronossPartHttpMessageReader.java"
class org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader$SynchronossFilePart extends org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader$SynchronossPart implements org.springframework.http.codec.multipart.FilePart {
  private static final java.nio.file.OpenOption[] FILE_CHANNEL_OPTIONS;

  private final java.lang.String filename;

  org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader$SynchronossFilePart(org.springframework.http.HttpHeaders, java.lang.String, org.synchronoss.cloud.nio.stream.storage.StreamStorage);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokespecial #1                  // Method org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$SynchronossPart."<init>":(Lorg/springframework/http/HttpHeaders;Lorg/synchronoss/cloud/nio/stream/storage/StreamStorage;)V
       6: aload_0
       7: aload_2
       8: putfield      #2                  // Field filename:Ljava/lang/String;
      11: return

  public java.lang.String filename();
    Code:
       0: aload_0
       1: getfield      #2                  // Field filename:Ljava/lang/String;
       4: areturn

  public reactor.core.publisher.Mono<java.lang.Void> transferTo(java.nio.file.Path);
    Code:
       0: aconst_null
       1: astore_2
       2: aconst_null
       3: astore_3
       4: aload_0
       5: invokevirtual #3                  // Method getStorage:()Lorg/synchronoss/cloud/nio/stream/storage/StreamStorage;
       8: invokevirtual #4                  // Method org/synchronoss/cloud/nio/stream/storage/StreamStorage.getInputStream:()Ljava/io/InputStream;
      11: invokestatic  #5                  // Method java/nio/channels/Channels.newChannel:(Ljava/io/InputStream;)Ljava/nio/channels/ReadableByteChannel;
      14: astore_2
      15: aload_1
      16: getstatic     #6                  // Field FILE_CHANNEL_OPTIONS:[Ljava/nio/file/OpenOption;
      19: invokestatic  #7                  // Method java/nio/channels/FileChannel.open:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/FileChannel;
      22: astore_3
      23: aload_2
      24: instanceof    #8                  // class java/nio/channels/FileChannel
      27: ifeq          40
      30: aload_2
      31: checkcast     #8                  // class java/nio/channels/FileChannel
      34: invokevirtual #9                  // Method java/nio/channels/FileChannel.size:()J
      37: goto          43
      40: ldc2_w        #11                 // long 9223372036854775807l
      43: lstore        4
      45: lconst_0
      46: lstore        6
      48: lload         6
      50: lload         4
      52: lcmp
      53: ifge          90
      56: aload_3
      57: aload_2
      58: lload         6
      60: lload         4
      62: lload         6
      64: lsub
      65: invokevirtual #13                 // Method java/nio/channels/FileChannel.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J
      68: lstore        8
      70: lload         8
      72: lconst_0
      73: lcmp
      74: ifgt          80
      77: goto          90
      80: lload         6
      82: lload         8
      84: ladd
      85: lstore        6
      87: goto          48
      90: aload_2
      91: ifnull        105
      94: aload_2
      95: invokeinterface #14,  1           // InterfaceMethod java/nio/channels/ReadableByteChannel.close:()V
     100: goto          105
     103: astore        4
     105: aload_3
     106: ifnull        194
     109: aload_3
     110: invokevirtual #16                 // Method java/nio/channels/FileChannel.close:()V
     113: goto          194
     116: astore        4
     118: goto          194
     121: astore        4
     123: aload         4
     125: invokestatic  #17                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
     128: astore        5
     130: aload_2
     131: ifnull        145
     134: aload_2
     135: invokeinterface #14,  1           // InterfaceMethod java/nio/channels/ReadableByteChannel.close:()V
     140: goto          145
     143: astore        6
     145: aload_3
     146: ifnull        158
     149: aload_3
     150: invokevirtual #16                 // Method java/nio/channels/FileChannel.close:()V
     153: goto          158
     156: astore        6
     158: aload         5
     160: areturn
     161: astore        10
     163: aload_2
     164: ifnull        178
     167: aload_2
     168: invokeinterface #14,  1           // InterfaceMethod java/nio/channels/ReadableByteChannel.close:()V
     173: goto          178
     176: astore        11
     178: aload_3
     179: ifnull        191
     182: aload_3
     183: invokevirtual #16                 // Method java/nio/channels/FileChannel.close:()V
     186: goto          191
     189: astore        11
     191: aload         10
     193: athrow
     194: invokestatic  #18                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
     197: areturn
    Exception table:
       from    to  target type
          94   100   103   Class java/io/IOException
         109   113   116   Class java/io/IOException
           4    90   121   Class java/io/IOException
         134   140   143   Class java/io/IOException
         149   153   156   Class java/io/IOException
           4    90   161   any
         121   130   161   any
         167   173   176   Class java/io/IOException
         182   186   189   Class java/io/IOException
         161   163   161   any

  public java.lang.String toString();
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #21                 // String Part \'
       9: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #23                 // Method name:()Ljava/lang/String;
      16: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #24                 // String \', filename=\'
      21: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #2                  // Field filename:Ljava/lang/String;
      28: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #25                 // String \'
      33: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  static {};
    Code:
       0: iconst_3
       1: anewarray     #27                 // class java/nio/file/OpenOption
       4: dup
       5: iconst_0
       6: getstatic     #28                 // Field java/nio/file/StandardOpenOption.CREATE:Ljava/nio/file/StandardOpenOption;
       9: aastore
      10: dup
      11: iconst_1
      12: getstatic     #29                 // Field java/nio/file/StandardOpenOption.TRUNCATE_EXISTING:Ljava/nio/file/StandardOpenOption;
      15: aastore
      16: dup
      17: iconst_2
      18: getstatic     #30                 // Field java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
      21: aastore
      22: putstatic     #6                  // Field FILE_CHANNEL_OPTIONS:[Ljava/nio/file/OpenOption;
      25: return
}
