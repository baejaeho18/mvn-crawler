Compiled from "MultipartHttpMessageWriter.java"
class org.springframework.http.codec.multipart.MultipartHttpMessageWriter$MultipartHttpOutputMessage implements org.springframework.http.ReactiveHttpOutputMessage {
  private final org.springframework.core.io.buffer.DataBufferFactory bufferFactory;

  private final java.nio.charset.Charset charset;

  private final org.springframework.http.HttpHeaders headers;

  private final java.util.concurrent.atomic.AtomicBoolean committed;

  private reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> body;

  public org.springframework.http.codec.multipart.MultipartHttpMessageWriter$MultipartHttpOutputMessage(org.springframework.core.io.buffer.DataBufferFactory, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/http/HttpHeaders
       8: dup
       9: invokespecial #3                  // Method org/springframework/http/HttpHeaders."<init>":()V
      12: putfield      #4                  // Field headers:Lorg/springframework/http/HttpHeaders;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      23: putfield      #7                  // Field committed:Ljava/util/concurrent/atomic/AtomicBoolean;
      26: aload_0
      27: aload_1
      28: putfield      #8                  // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      31: aload_0
      32: aload_2
      33: putfield      #9                  // Field charset:Ljava/nio/charset/Charset;
      36: return

  public org.springframework.http.HttpHeaders getHeaders();
    Code:
       0: aload_0
       1: getfield      #10                 // Field body:Lreactor/core/publisher/Flux;
       4: ifnull        17
       7: aload_0
       8: getfield      #4                  // Field headers:Lorg/springframework/http/HttpHeaders;
      11: invokestatic  #11                 // Method org/springframework/http/HttpHeaders.readOnlyHttpHeaders:(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpHeaders;
      14: goto          21
      17: aload_0
      18: getfield      #4                  // Field headers:Lorg/springframework/http/HttpHeaders;
      21: areturn

  public org.springframework.core.io.buffer.DataBufferFactory bufferFactory();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
       4: areturn

  public void beforeCommit(java.util.function.Supplier<? extends reactor.core.publisher.Mono<java.lang.Void>>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field committed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public boolean isCommitted();
    Code:
       0: aload_0
       1: getfield      #7                  // Field committed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public reactor.core.publisher.Mono<java.lang.Void> writeWith(org.reactivestreams.Publisher<? extends org.springframework.core.io.buffer.DataBuffer>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field body:Lreactor/core/publisher/Flux;
       4: ifnull        20
       7: new           #14                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #15                 // String Multiple calls to writeWith() not supported
      13: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: invokestatic  #17                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      19: areturn
      20: aload_0
      21: aload_0
      22: invokespecial #18                 // Method generateHeaders:()Lreactor/core/publisher/Mono;
      25: aload_1
      26: invokevirtual #19                 // Method reactor/core/publisher/Mono.concatWith:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      29: putfield      #10                 // Field body:Lreactor/core/publisher/Flux;
      32: invokestatic  #20                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      35: areturn

  private reactor.core.publisher.Mono<org.springframework.core.io.buffer.DataBuffer> generateHeaders();
    Code:
       0: aload_0
       1: invokedynamic #21,  0             // InvokeDynamic #0:call:(Lorg/springframework/http/codec/multipart/MultipartHttpMessageWriter$MultipartHttpOutputMessage;)Ljava/util/concurrent/Callable;
       6: invokestatic  #22                 // Method reactor/core/publisher/Mono.fromCallable:(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Mono;
       9: areturn

  public reactor.core.publisher.Mono<java.lang.Void> writeAndFlushWith(org.reactivestreams.Publisher<? extends org.reactivestreams.Publisher<? extends org.springframework.core.io.buffer.DataBuffer>>);
    Code:
       0: new           #23                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #24                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: invokestatic  #17                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      10: areturn

  public reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> getBody();
    Code:
       0: aload_0
       1: getfield      #10                 // Field body:Lreactor/core/publisher/Flux;
       4: ifnull        14
       7: aload_0
       8: getfield      #10                 // Field body:Lreactor/core/publisher/Flux;
      11: goto          26
      14: new           #14                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #25                 // String Body has not been written yet
      20: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: invokestatic  #26                 // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      26: areturn

  public reactor.core.publisher.Mono<java.lang.Void> setComplete();
    Code:
       0: new           #23                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #24                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: invokestatic  #17                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      10: areturn

  private org.springframework.core.io.buffer.DataBuffer lambda$generateHeaders$0() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
       4: invokeinterface #27,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:()Lorg/springframework/core/io/buffer/DataBuffer;
       9: astore_1
      10: aload_0
      11: getfield      #4                  // Field headers:Lorg/springframework/http/HttpHeaders;
      14: invokevirtual #28                 // Method org/springframework/http/HttpHeaders.entrySet:()Ljava/util/Set;
      17: invokeinterface #29,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          169
      32: aload_2
      33: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #32                 // class java/util/Map$Entry
      41: astore_3
      42: aload_3
      43: invokeinterface #33,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      48: checkcast     #34                 // class java/lang/String
      51: aload_0
      52: getfield      #9                  // Field charset:Ljava/nio/charset/Charset;
      55: invokevirtual #35                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      58: astore        4
      60: aload_3
      61: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      66: checkcast     #37                 // class java/util/List
      69: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      74: astore        5
      76: aload         5
      78: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      83: ifeq          166
      86: aload         5
      88: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      93: checkcast     #34                 // class java/lang/String
      96: astore        6
      98: aload         6
     100: aload_0
     101: getfield      #9                  // Field charset:Ljava/nio/charset/Charset;
     104: invokevirtual #35                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     107: astore        7
     109: aload_1
     110: aload         4
     112: invokeinterface #39,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:([B)Lorg/springframework/core/io/buffer/DataBuffer;
     117: pop
     118: aload_1
     119: bipush        58
     121: invokeinterface #40,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
     126: pop
     127: aload_1
     128: bipush        32
     130: invokeinterface #40,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
     135: pop
     136: aload_1
     137: aload         7
     139: invokeinterface #39,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:([B)Lorg/springframework/core/io/buffer/DataBuffer;
     144: pop
     145: aload_1
     146: bipush        13
     148: invokeinterface #40,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
     153: pop
     154: aload_1
     155: bipush        10
     157: invokeinterface #40,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
     162: pop
     163: goto          76
     166: goto          23
     169: aload_1
     170: bipush        13
     172: invokeinterface #40,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
     177: pop
     178: aload_1
     179: bipush        10
     181: invokeinterface #40,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
     186: pop
     187: aload_1
     188: areturn
}
