Compiled from "ServerSentEventHttpMessageReader.java"
public class org.springframework.http.codec.ServerSentEventHttpMessageReader implements org.springframework.http.codec.HttpMessageReader<java.lang.Object> {
  private static final org.springframework.core.io.buffer.DataBufferFactory bufferFactory;

  private static final org.springframework.core.codec.StringDecoder stringDecoder;

  private static final org.springframework.core.ResolvableType STRING_TYPE;

  private final org.springframework.core.codec.Decoder<?> decoder;

  public org.springframework.http.codec.ServerSentEventHttpMessageReader();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method "<init>":(Lorg/springframework/core/codec/Decoder;)V
       5: return

  public org.springframework.http.codec.ServerSentEventHttpMessageReader(org.springframework.core.codec.Decoder<?>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field decoder:Lorg/springframework/core/codec/Decoder;
       9: return

  public org.springframework.core.codec.Decoder<?> getDecoder();
    Code:
       0: aload_0
       1: getfield      #3                  // Field decoder:Lorg/springframework/core/codec/Decoder;
       4: areturn

  public java.util.List<org.springframework.http.MediaType> getReadableMediaTypes();
    Code:
       0: getstatic     #4                  // Field org/springframework/http/MediaType.TEXT_EVENT_STREAM:Lorg/springframework/http/MediaType;
       3: invokestatic  #5                  // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
       6: areturn

  public boolean canRead(org.springframework.core.ResolvableType, org.springframework.http.MediaType);
    Code:
       0: getstatic     #4                  // Field org/springframework/http/MediaType.TEXT_EVENT_STREAM:Lorg/springframework/http/MediaType;
       3: aload_2
       4: invokevirtual #6                  // Method org/springframework/http/MediaType.includes:(Lorg/springframework/http/MediaType;)Z
       7: ifne          18
      10: aload_0
      11: aload_1
      12: invokespecial #7                  // Method isServerSentEvent:(Lorg/springframework/core/ResolvableType;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private boolean isServerSentEvent(org.springframework.core.ResolvableType);
    Code:
       0: ldc           #8                  // class org/springframework/http/codec/ServerSentEvent
       2: aload_1
       3: invokevirtual #9                  // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
       6: invokevirtual #10                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ireturn

  public reactor.core.publisher.Flux<java.lang.Object> read(org.springframework.core.ResolvableType, org.springframework.http.ReactiveHttpInputMessage, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method isServerSentEvent:(Lorg/springframework/core/ResolvableType;)Z
       5: istore        4
       7: iload         4
       9: ifeq          22
      12: aload_1
      13: iconst_0
      14: newarray       int
      16: invokevirtual #11                 // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      19: goto          23
      22: aload_1
      23: astore        5
      25: getstatic     #12                 // Field stringDecoder:Lorg/springframework/core/codec/StringDecoder;
      28: aload_2
      29: invokeinterface #13,  1           // InterfaceMethod org/springframework/http/ReactiveHttpInputMessage.getBody:()Lreactor/core/publisher/Flux;
      34: getstatic     #14                 // Field STRING_TYPE:Lorg/springframework/core/ResolvableType;
      37: aconst_null
      38: aload_3
      39: invokevirtual #15                 // Method org/springframework/core/codec/StringDecoder.decode:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
      42: invokedynamic #16,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      47: invokevirtual #17                 // Method reactor/core/publisher/Flux.bufferUntil:(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
      50: aload_0
      51: aload         5
      53: iload         4
      55: aload_3
      56: invokedynamic #18,  0             // InvokeDynamic #1:apply:(Lorg/springframework/http/codec/ServerSentEventHttpMessageReader;Lorg/springframework/core/ResolvableType;ZLjava/util/Map;)Ljava/util/function/Function;
      61: invokevirtual #19                 // Method reactor/core/publisher/Flux.concatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      64: areturn

  private reactor.core.publisher.Mono<?> buildEvent(java.util.List<java.lang.String>, org.springframework.core.ResolvableType, boolean, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: iload_3
       1: ifeq          10
       4: invokestatic  #20                 // Method org/springframework/http/codec/ServerSentEvent.builder:()Lorg/springframework/http/codec/ServerSentEvent$Builder;
       7: goto          11
      10: aconst_null
      11: astore        5
      13: aconst_null
      14: astore        6
      16: aconst_null
      17: astore        7
      19: aload_1
      20: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: astore        8
      27: aload         8
      29: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          255
      37: aload         8
      39: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #24                 // class java/lang/String
      47: astore        9
      49: aload         9
      51: ldc           #25                 // String data:
      53: invokevirtual #26                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      56: ifeq          98
      59: aload         6
      61: ifnull        69
      64: aload         6
      66: goto          76
      69: new           #27                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      76: astore        6
      78: aload         6
      80: aload         9
      82: iconst_5
      83: invokevirtual #29                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      86: invokevirtual #30                 // Method java/lang/String.trim:()Ljava/lang/String;
      89: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #32                 // String \n
      94: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: pop
      98: iload_3
      99: ifeq          252
     102: aload         9
     104: ldc           #33                 // String id:
     106: invokevirtual #26                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     109: ifeq          132
     112: aload         5
     114: aload         9
     116: iconst_3
     117: invokevirtual #29                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     120: invokevirtual #30                 // Method java/lang/String.trim:()Ljava/lang/String;
     123: invokeinterface #34,  2           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.id:(Ljava/lang/String;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
     128: pop
     129: goto          252
     132: aload         9
     134: ldc           #35                 // String event:
     136: invokevirtual #26                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     139: ifeq          163
     142: aload         5
     144: aload         9
     146: bipush        6
     148: invokevirtual #29                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     151: invokevirtual #30                 // Method java/lang/String.trim:()Ljava/lang/String;
     154: invokeinterface #36,  2           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.event:(Ljava/lang/String;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
     159: pop
     160: goto          252
     163: aload         9
     165: ldc           #37                 // String retry:
     167: invokevirtual #26                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     170: ifeq          203
     173: aload         5
     175: aload         9
     177: bipush        6
     179: invokevirtual #29                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     182: invokevirtual #30                 // Method java/lang/String.trim:()Ljava/lang/String;
     185: invokestatic  #38                 // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
     188: invokevirtual #39                 // Method java/lang/Long.longValue:()J
     191: invokestatic  #40                 // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
     194: invokeinterface #41,  2           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.retry:(Ljava/time/Duration;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
     199: pop
     200: goto          252
     203: aload         9
     205: ldc           #42                 // String :
     207: invokevirtual #26                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     210: ifeq          252
     213: aload         7
     215: ifnull        223
     218: aload         7
     220: goto          230
     223: new           #27                 // class java/lang/StringBuilder
     226: dup
     227: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     230: astore        7
     232: aload         7
     234: aload         9
     236: iconst_1
     237: invokevirtual #29                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     240: invokevirtual #30                 // Method java/lang/String.trim:()Ljava/lang/String;
     243: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     246: ldc           #32                 // String \n
     248: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     251: pop
     252: goto          27
     255: aload         6
     257: ifnull        275
     260: aload_0
     261: aload         6
     263: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     266: aload_2
     267: aload         4
     269: invokespecial #44                 // Method decodeData:(Ljava/lang/String;Lorg/springframework/core/ResolvableType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
     272: goto          278
     275: invokestatic  #45                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
     278: astore        8
     280: iload_3
     281: ifeq          326
     284: aload         7
     286: ifnull        313
     289: aload         5
     291: aload         7
     293: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     296: iconst_0
     297: aload         7
     299: invokevirtual #46                 // Method java/lang/StringBuilder.length:()I
     302: iconst_1
     303: isub
     304: invokevirtual #47                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     307: invokeinterface #48,  2           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.comment:(Ljava/lang/String;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
     312: pop
     313: aload         8
     315: aload         5
     317: invokedynamic #49,  0             // InvokeDynamic #2:apply:(Lorg/springframework/http/codec/ServerSentEvent$Builder;)Ljava/util/function/Function;
     322: invokevirtual #50                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
     325: areturn
     326: aload         8
     328: areturn

  private reactor.core.publisher.Mono<?> decodeData(java.lang.String, org.springframework.core.ResolvableType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: ldc           #24                 // class java/lang/String
       2: aload_2
       3: invokevirtual #51                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
       6: if_acmpne     24
       9: aload_1
      10: iconst_0
      11: aload_1
      12: invokevirtual #52                 // Method java/lang/String.length:()I
      15: iconst_1
      16: isub
      17: invokevirtual #47                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      20: invokestatic  #53                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      23: areturn
      24: aload_0
      25: getfield      #3                  // Field decoder:Lorg/springframework/core/codec/Decoder;
      28: ifnonnull     44
      31: new           #54                 // class org/springframework/core/codec/CodecException
      34: dup
      35: ldc           #55                 // String No SSE decoder configured and the data is not String.
      37: invokespecial #56                 // Method org/springframework/core/codec/CodecException."<init>":(Ljava/lang/String;)V
      40: invokestatic  #57                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      43: areturn
      44: aload_1
      45: getstatic     #58                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      48: invokevirtual #59                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      51: astore        4
      53: getstatic     #60                 // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      56: aload         4
      58: invokeinterface #61,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.wrap:([B)Lorg/springframework/core/io/buffer/DataBuffer;
      63: astore        5
      65: aload_0
      66: getfield      #3                  // Field decoder:Lorg/springframework/core/codec/Decoder;
      69: aload         5
      71: invokestatic  #53                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      74: aload_2
      75: getstatic     #4                  // Field org/springframework/http/MediaType.TEXT_EVENT_STREAM:Lorg/springframework/http/MediaType;
      78: aload_3
      79: invokeinterface #62,  5           // InterfaceMethod org/springframework/core/codec/Decoder.decodeToMono:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
      84: areturn

  public reactor.core.publisher.Mono<java.lang.Object> readMono(org.springframework.core.ResolvableType, org.springframework.http.ReactiveHttpInputMessage, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: invokevirtual #51                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
       4: ldc           #24                 // class java/lang/String
       6: if_acmpne     34
       9: aload_2
      10: invokeinterface #13,  1           // InterfaceMethod org/springframework/http/ReactiveHttpInputMessage.getBody:()Lreactor/core/publisher/Flux;
      15: astore        4
      17: getstatic     #12                 // Field stringDecoder:Lorg/springframework/core/codec/StringDecoder;
      20: aload         4
      22: aload_1
      23: aconst_null
      24: aconst_null
      25: invokevirtual #63                 // Method org/springframework/core/codec/StringDecoder.decodeToMono:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
      28: ldc           #64                 // class java/lang/Object
      30: invokevirtual #65                 // Method reactor/core/publisher/Mono.cast:(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
      33: areturn
      34: new           #66                 // class java/lang/UnsupportedOperationException
      37: dup
      38: ldc           #67                 // String ServerSentEventHttpMessageReader only supports reading stream of events as a Flux
      40: invokespecial #68                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      43: invokestatic  #57                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      46: areturn

  private static org.springframework.http.codec.ServerSentEvent lambda$buildEvent$2(org.springframework.http.codec.ServerSentEvent$Builder, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #69,  2           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.data:(Ljava/lang/Object;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
       7: pop
       8: aload_0
       9: invokeinterface #70,  1           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.build:()Lorg/springframework/http/codec/ServerSentEvent;
      14: areturn

  private org.reactivestreams.Publisher lambda$read$1(org.springframework.core.ResolvableType, boolean, java.util.Map, java.util.List);
    Code:
       0: aload_0
       1: aload         4
       3: aload_1
       4: iload_2
       5: aload_3
       6: invokespecial #71                 // Method buildEvent:(Ljava/util/List;Lorg/springframework/core/ResolvableType;ZLjava/util/Map;)Lreactor/core/publisher/Mono;
       9: areturn

  private static boolean lambda$read$0(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #72                 // String
       3: invokevirtual #73                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ireturn

  static {};
    Code:
       0: new           #74                 // class org/springframework/core/io/buffer/DefaultDataBufferFactory
       3: dup
       4: invokespecial #75                 // Method org/springframework/core/io/buffer/DefaultDataBufferFactory."<init>":()V
       7: putstatic     #60                 // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      10: invokestatic  #76                 // Method org/springframework/core/codec/StringDecoder.textPlainOnly:()Lorg/springframework/core/codec/StringDecoder;
      13: putstatic     #12                 // Field stringDecoder:Lorg/springframework/core/codec/StringDecoder;
      16: ldc           #24                 // class java/lang/String
      18: invokestatic  #77                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      21: putstatic     #14                 // Field STRING_TYPE:Lorg/springframework/core/ResolvableType;
      24: return
}
