Compiled from "HttpComponentsHttpInvokerRequestExecutor.java"
public class org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor extends org.springframework.remoting.httpinvoker.AbstractHttpInvokerRequestExecutor {
  private static final int DEFAULT_MAX_TOTAL_CONNECTIONS;

  private static final int DEFAULT_MAX_CONNECTIONS_PER_ROUTE;

  private static final int DEFAULT_READ_TIMEOUT_MILLISECONDS;

  private org.apache.http.client.HttpClient httpClient;

  private org.apache.http.client.config.RequestConfig requestConfig;

  public org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method createDefaultHttpClient:()Lorg/apache/http/client/HttpClient;
       4: invokestatic  #2                  // Method org/apache/http/client/config/RequestConfig.custom:()Lorg/apache/http/client/config/RequestConfig$Builder;
       7: ldc           #4                  // int 60000
       9: invokevirtual #5                  // Method org/apache/http/client/config/RequestConfig$Builder.setSocketTimeout:(I)Lorg/apache/http/client/config/RequestConfig$Builder;
      12: invokevirtual #6                  // Method org/apache/http/client/config/RequestConfig$Builder.build:()Lorg/apache/http/client/config/RequestConfig;
      15: invokespecial #7                  // Method "<init>":(Lorg/apache/http/client/HttpClient;Lorg/apache/http/client/config/RequestConfig;)V
      18: return

  public org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor(org.apache.http.client.HttpClient);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #7                  // Method "<init>":(Lorg/apache/http/client/HttpClient;Lorg/apache/http/client/config/RequestConfig;)V
       6: return

  private org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor(org.apache.http.client.HttpClient, org.apache.http.client.config.RequestConfig);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #9                  // Field httpClient:Lorg/apache/http/client/HttpClient;
       9: aload_0
      10: aload_2
      11: putfield      #10                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
      14: return

  private static org.apache.http.client.HttpClient createDefaultHttpClient();
    Code:
       0: invokestatic  #11                 // Method org/apache/http/config/RegistryBuilder.create:()Lorg/apache/http/config/RegistryBuilder;
       3: ldc           #12                 // String http
       5: invokestatic  #13                 // Method org/apache/http/conn/socket/PlainConnectionSocketFactory.getSocketFactory:()Lorg/apache/http/conn/socket/PlainConnectionSocketFactory;
       8: invokevirtual #14                 // Method org/apache/http/config/RegistryBuilder.register:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/config/RegistryBuilder;
      11: ldc           #15                 // String https
      13: invokestatic  #16                 // Method org/apache/http/conn/ssl/SSLConnectionSocketFactory.getSocketFactory:()Lorg/apache/http/conn/ssl/SSLConnectionSocketFactory;
      16: invokevirtual #14                 // Method org/apache/http/config/RegistryBuilder.register:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/config/RegistryBuilder;
      19: invokevirtual #17                 // Method org/apache/http/config/RegistryBuilder.build:()Lorg/apache/http/config/Registry;
      22: astore_0
      23: new           #18                 // class org/apache/http/impl/conn/PoolingHttpClientConnectionManager
      26: dup
      27: aload_0
      28: invokespecial #19                 // Method org/apache/http/impl/conn/PoolingHttpClientConnectionManager."<init>":(Lorg/apache/http/config/Registry;)V
      31: astore_1
      32: aload_1
      33: bipush        100
      35: invokevirtual #20                 // Method org/apache/http/impl/conn/PoolingHttpClientConnectionManager.setMaxTotal:(I)V
      38: aload_1
      39: iconst_5
      40: invokevirtual #21                 // Method org/apache/http/impl/conn/PoolingHttpClientConnectionManager.setDefaultMaxPerRoute:(I)V
      43: invokestatic  #22                 // Method org/apache/http/impl/client/HttpClientBuilder.create:()Lorg/apache/http/impl/client/HttpClientBuilder;
      46: aload_1
      47: invokevirtual #23                 // Method org/apache/http/impl/client/HttpClientBuilder.setConnectionManager:(Lorg/apache/http/conn/HttpClientConnectionManager;)Lorg/apache/http/impl/client/HttpClientBuilder;
      50: invokevirtual #24                 // Method org/apache/http/impl/client/HttpClientBuilder.build:()Lorg/apache/http/impl/client/CloseableHttpClient;
      53: areturn

  public void setHttpClient(org.apache.http.client.HttpClient);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field httpClient:Lorg/apache/http/client/HttpClient;
       5: return

  public org.apache.http.client.HttpClient getHttpClient();
    Code:
       0: aload_0
       1: getfield      #9                  // Field httpClient:Lorg/apache/http/client/HttpClient;
       4: areturn

  public void setConnectTimeout(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #25                 // String Timeout must be a non-negative value
      11: invokestatic  #26                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      14: aload_0
      15: aload_0
      16: invokespecial #27                 // Method cloneRequestConfig:()Lorg/apache/http/client/config/RequestConfig$Builder;
      19: iload_1
      20: invokevirtual #28                 // Method org/apache/http/client/config/RequestConfig$Builder.setConnectTimeout:(I)Lorg/apache/http/client/config/RequestConfig$Builder;
      23: invokevirtual #6                  // Method org/apache/http/client/config/RequestConfig$Builder.build:()Lorg/apache/http/client/config/RequestConfig;
      26: putfield      #10                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
      29: return

  public void setConnectionRequestTimeout(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #27                 // Method cloneRequestConfig:()Lorg/apache/http/client/config/RequestConfig$Builder;
       5: iload_1
       6: invokevirtual #29                 // Method org/apache/http/client/config/RequestConfig$Builder.setConnectionRequestTimeout:(I)Lorg/apache/http/client/config/RequestConfig$Builder;
       9: invokevirtual #6                  // Method org/apache/http/client/config/RequestConfig$Builder.build:()Lorg/apache/http/client/config/RequestConfig;
      12: putfield      #10                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
      15: return

  public void setReadTimeout(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #25                 // String Timeout must be a non-negative value
      11: invokestatic  #26                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      14: aload_0
      15: aload_0
      16: invokespecial #27                 // Method cloneRequestConfig:()Lorg/apache/http/client/config/RequestConfig$Builder;
      19: iload_1
      20: invokevirtual #5                  // Method org/apache/http/client/config/RequestConfig$Builder.setSocketTimeout:(I)Lorg/apache/http/client/config/RequestConfig$Builder;
      23: invokevirtual #6                  // Method org/apache/http/client/config/RequestConfig$Builder.build:()Lorg/apache/http/client/config/RequestConfig;
      26: putfield      #10                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
      29: return

  private org.apache.http.client.config.RequestConfig$Builder cloneRequestConfig();
    Code:
       0: aload_0
       1: getfield      #10                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
       4: ifnull        17
       7: aload_0
       8: getfield      #10                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
      11: invokestatic  #30                 // Method org/apache/http/client/config/RequestConfig.copy:(Lorg/apache/http/client/config/RequestConfig;)Lorg/apache/http/client/config/RequestConfig$Builder;
      14: goto          20
      17: invokestatic  #2                  // Method org/apache/http/client/config/RequestConfig.custom:()Lorg/apache/http/client/config/RequestConfig$Builder;
      20: areturn

  protected org.springframework.remoting.support.RemoteInvocationResult doExecuteRequest(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, java.io.ByteArrayOutputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #31                 // Method createHttpPost:(Lorg/springframework/remoting/httpinvoker/HttpInvokerClientConfiguration;)Lorg/apache/http/client/methods/HttpPost;
       5: astore_3
       6: aload_0
       7: aload_1
       8: aload_3
       9: aload_2
      10: invokevirtual #32                 // Method setRequestBody:(Lorg/springframework/remoting/httpinvoker/HttpInvokerClientConfiguration;Lorg/apache/http/client/methods/HttpPost;Ljava/io/ByteArrayOutputStream;)V
      13: aload_0
      14: aload_1
      15: aload_0
      16: invokevirtual #33                 // Method getHttpClient:()Lorg/apache/http/client/HttpClient;
      19: aload_3
      20: invokevirtual #34                 // Method executeHttpPost:(Lorg/springframework/remoting/httpinvoker/HttpInvokerClientConfiguration;Lorg/apache/http/client/HttpClient;Lorg/apache/http/client/methods/HttpPost;)Lorg/apache/http/HttpResponse;
      23: astore        4
      25: aload_0
      26: aload_1
      27: aload         4
      29: invokevirtual #35                 // Method validateResponse:(Lorg/springframework/remoting/httpinvoker/HttpInvokerClientConfiguration;Lorg/apache/http/HttpResponse;)V
      32: aload_0
      33: aload_1
      34: aload         4
      36: invokevirtual #36                 // Method getResponseBody:(Lorg/springframework/remoting/httpinvoker/HttpInvokerClientConfiguration;Lorg/apache/http/HttpResponse;)Ljava/io/InputStream;
      39: astore        5
      41: aload_0
      42: aload         5
      44: aload_1
      45: invokeinterface #37,  1           // InterfaceMethod org/springframework/remoting/httpinvoker/HttpInvokerClientConfiguration.getCodebaseUrl:()Ljava/lang/String;
      50: invokevirtual #38                 // Method readRemoteInvocationResult:(Ljava/io/InputStream;Ljava/lang/String;)Lorg/springframework/remoting/support/RemoteInvocationResult;
      53: astore        6
      55: aload_3
      56: invokevirtual #39                 // Method org/apache/http/client/methods/HttpPost.releaseConnection:()V
      59: aload         6
      61: areturn
      62: astore        7
      64: aload_3
      65: invokevirtual #39                 // Method org/apache/http/client/methods/HttpPost.releaseConnection:()V
      68: aload         7
      70: athrow
    Exception table:
       from    to  target type
          13    55    62   any
          62    64    62   any

  protected org.apache.http.client.methods.HttpPost createHttpPost(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration) throws java.io.IOException;
    Code:
       0: new           #40                 // class org/apache/http/client/methods/HttpPost
       3: dup
       4: aload_1
       5: invokeinterface #41,  1           // InterfaceMethod org/springframework/remoting/httpinvoker/HttpInvokerClientConfiguration.getServiceUrl:()Ljava/lang/String;
      10: invokespecial #42                 // Method org/apache/http/client/methods/HttpPost."<init>":(Ljava/lang/String;)V
      13: astore_2
      14: aload_0
      15: aload_1
      16: invokevirtual #43                 // Method createRequestConfig:(Lorg/springframework/remoting/httpinvoker/HttpInvokerClientConfiguration;)Lorg/apache/http/client/config/RequestConfig;
      19: astore_3
      20: aload_3
      21: ifnull        29
      24: aload_2
      25: aload_3
      26: invokevirtual #44                 // Method org/apache/http/client/methods/HttpPost.setConfig:(Lorg/apache/http/client/config/RequestConfig;)V
      29: invokestatic  #45                 // Method org/springframework/context/i18n/LocaleContextHolder.getLocaleContext:()Lorg/springframework/context/i18n/LocaleContext;
      32: astore        4
      34: aload         4
      36: ifnull        64
      39: aload         4
      41: invokeinterface #46,  1           // InterfaceMethod org/springframework/context/i18n/LocaleContext.getLocale:()Ljava/util/Locale;
      46: astore        5
      48: aload         5
      50: ifnull        64
      53: aload_2
      54: ldc           #48                 // String Accept-Language
      56: aload         5
      58: invokevirtual #49                 // Method java/util/Locale.toLanguageTag:()Ljava/lang/String;
      61: invokevirtual #50                 // Method org/apache/http/client/methods/HttpPost.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      64: aload_0
      65: invokevirtual #51                 // Method isAcceptGzipEncoding:()Z
      68: ifeq          79
      71: aload_2
      72: ldc           #52                 // String Accept-Encoding
      74: ldc           #53                 // String gzip
      76: invokevirtual #50                 // Method org/apache/http/client/methods/HttpPost.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      79: aload_2
      80: areturn

  protected org.apache.http.client.config.RequestConfig createRequestConfig(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method getHttpClient:()Lorg/apache/http/client/HttpClient;
       4: astore_2
       5: aload_2
       6: instanceof    #54                 // class org/apache/http/client/methods/Configurable
       9: ifeq          28
      12: aload_2
      13: checkcast     #54                 // class org/apache/http/client/methods/Configurable
      16: invokeinterface #55,  1           // InterfaceMethod org/apache/http/client/methods/Configurable.getConfig:()Lorg/apache/http/client/config/RequestConfig;
      21: astore_3
      22: aload_0
      23: aload_3
      24: invokespecial #56                 // Method mergeRequestConfig:(Lorg/apache/http/client/config/RequestConfig;)Lorg/apache/http/client/config/RequestConfig;
      27: areturn
      28: aload_0
      29: getfield      #10                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
      32: areturn

  private org.apache.http.client.config.RequestConfig mergeRequestConfig(org.apache.http.client.config.RequestConfig);
    Code:
       0: aload_0
       1: getfield      #10                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
       4: ifnonnull     9
       7: aload_1
       8: areturn
       9: aload_1
      10: invokestatic  #30                 // Method org/apache/http/client/config/RequestConfig.copy:(Lorg/apache/http/client/config/RequestConfig;)Lorg/apache/http/client/config/RequestConfig$Builder;
      13: astore_2
      14: aload_0
      15: getfield      #10                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
      18: invokevirtual #57                 // Method org/apache/http/client/config/RequestConfig.getConnectTimeout:()I
      21: istore_3
      22: iload_3
      23: iflt          32
      26: aload_2
      27: iload_3
      28: invokevirtual #28                 // Method org/apache/http/client/config/RequestConfig$Builder.setConnectTimeout:(I)Lorg/apache/http/client/config/RequestConfig$Builder;
      31: pop
      32: aload_0
      33: getfield      #10                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
      36: invokevirtual #58                 // Method org/apache/http/client/config/RequestConfig.getConnectionRequestTimeout:()I
      39: istore        4
      41: iload         4
      43: iflt          53
      46: aload_2
      47: iload         4
      49: invokevirtual #29                 // Method org/apache/http/client/config/RequestConfig$Builder.setConnectionRequestTimeout:(I)Lorg/apache/http/client/config/RequestConfig$Builder;
      52: pop
      53: aload_0
      54: getfield      #10                 // Field requestConfig:Lorg/apache/http/client/config/RequestConfig;
      57: invokevirtual #59                 // Method org/apache/http/client/config/RequestConfig.getSocketTimeout:()I
      60: istore        5
      62: iload         5
      64: iflt          74
      67: aload_2
      68: iload         5
      70: invokevirtual #5                  // Method org/apache/http/client/config/RequestConfig$Builder.setSocketTimeout:(I)Lorg/apache/http/client/config/RequestConfig$Builder;
      73: pop
      74: aload_2
      75: invokevirtual #6                  // Method org/apache/http/client/config/RequestConfig$Builder.build:()Lorg/apache/http/client/config/RequestConfig;
      78: areturn

  protected void setRequestBody(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, org.apache.http.client.methods.HttpPost, java.io.ByteArrayOutputStream) throws java.io.IOException;
    Code:
       0: new           #60                 // class org/apache/http/entity/ByteArrayEntity
       3: dup
       4: aload_3
       5: invokevirtual #61                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
       8: invokespecial #62                 // Method org/apache/http/entity/ByteArrayEntity."<init>":([B)V
      11: astore        4
      13: aload         4
      15: aload_0
      16: invokevirtual #63                 // Method getContentType:()Ljava/lang/String;
      19: invokevirtual #64                 // Method org/apache/http/entity/ByteArrayEntity.setContentType:(Ljava/lang/String;)V
      22: aload_2
      23: aload         4
      25: invokevirtual #65                 // Method org/apache/http/client/methods/HttpPost.setEntity:(Lorg/apache/http/HttpEntity;)V
      28: return

  protected org.apache.http.HttpResponse executeHttpPost(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, org.apache.http.client.HttpClient, org.apache.http.client.methods.HttpPost) throws java.io.IOException;
    Code:
       0: aload_2
       1: aload_3
       2: invokeinterface #66,  2           // InterfaceMethod org/apache/http/client/HttpClient.execute:(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;
       7: areturn

  protected void validateResponse(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, org.apache.http.HttpResponse) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokeinterface #67,  1           // InterfaceMethod org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
       6: astore_3
       7: aload_3
       8: invokeinterface #68,  1           // InterfaceMethod org/apache/http/StatusLine.getStatusCode:()I
      13: sipush        300
      16: if_icmplt     70
      19: new           #69                 // class org/apache/http/NoHttpResponseException
      22: dup
      23: new           #70                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #72                 // String Did not receive successful HTTP response: status code =
      32: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_3
      36: invokeinterface #68,  1           // InterfaceMethod org/apache/http/StatusLine.getStatusCode:()I
      41: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: ldc           #75                 // String , status message = [
      46: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_3
      50: invokeinterface #76,  1           // InterfaceMethod org/apache/http/StatusLine.getReasonPhrase:()Ljava/lang/String;
      55: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #77                 // String ]
      60: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #79                 // Method org/apache/http/NoHttpResponseException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: return

  protected java.io.InputStream getResponseBody(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, org.apache.http.HttpResponse) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #80                 // Method isGzipResponse:(Lorg/apache/http/HttpResponse;)Z
       5: ifeq          27
       8: new           #81                 // class java/util/zip/GZIPInputStream
      11: dup
      12: aload_2
      13: invokeinterface #82,  1           // InterfaceMethod org/apache/http/HttpResponse.getEntity:()Lorg/apache/http/HttpEntity;
      18: invokeinterface #83,  1           // InterfaceMethod org/apache/http/HttpEntity.getContent:()Ljava/io/InputStream;
      23: invokespecial #84                 // Method java/util/zip/GZIPInputStream."<init>":(Ljava/io/InputStream;)V
      26: areturn
      27: aload_2
      28: invokeinterface #82,  1           // InterfaceMethod org/apache/http/HttpResponse.getEntity:()Lorg/apache/http/HttpEntity;
      33: invokeinterface #83,  1           // InterfaceMethod org/apache/http/HttpEntity.getContent:()Ljava/io/InputStream;
      38: areturn

  protected boolean isGzipResponse(org.apache.http.HttpResponse);
    Code:
       0: aload_1
       1: ldc           #85                 // String Content-Encoding
       3: invokeinterface #86,  2           // InterfaceMethod org/apache/http/HttpResponse.getFirstHeader:(Ljava/lang/String;)Lorg/apache/http/Header;
       8: astore_2
       9: aload_2
      10: ifnull        43
      13: aload_2
      14: invokeinterface #87,  1           // InterfaceMethod org/apache/http/Header.getValue:()Ljava/lang/String;
      19: ifnull        43
      22: aload_2
      23: invokeinterface #87,  1           // InterfaceMethod org/apache/http/Header.getValue:()Ljava/lang/String;
      28: invokevirtual #88                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      31: ldc           #53                 // String gzip
      33: invokevirtual #89                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn
}
