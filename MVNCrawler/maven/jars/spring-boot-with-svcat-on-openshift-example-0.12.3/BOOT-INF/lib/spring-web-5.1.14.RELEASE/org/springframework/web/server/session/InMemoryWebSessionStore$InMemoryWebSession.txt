Compiled from "InMemoryWebSessionStore.java"
class org.springframework.web.server.session.InMemoryWebSessionStore$InMemoryWebSession implements org.springframework.web.server.WebSession {
  private final java.util.concurrent.atomic.AtomicReference<java.lang.String> id;

  private final java.util.Map<java.lang.String, java.lang.Object> attributes;

  private final java.time.Instant creationTime;

  private volatile java.time.Instant lastAccessTime;

  private volatile java.time.Duration maxIdleTime;

  private final java.util.concurrent.atomic.AtomicReference<org.springframework.web.server.session.InMemoryWebSessionStore$State> state;

  final org.springframework.web.server.session.InMemoryWebSessionStore this$0;

  public org.springframework.web.server.session.InMemoryWebSessionStore$InMemoryWebSession(org.springframework.web.server.session.InMemoryWebSessionStore, java.time.Instant);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
       5: aload_0
       6: invokespecial #4                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #5                  // class java/util/concurrent/atomic/AtomicReference
      13: dup
      14: invokestatic  #6                  // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$300:()Lorg/springframework/util/IdGenerator;
      17: invokeinterface #7,  1            // InterfaceMethod org/springframework/util/IdGenerator.generateId:()Ljava/util/UUID;
      22: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      25: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      28: putfield      #10                 // Field id:Ljava/util/concurrent/atomic/AtomicReference;
      31: aload_0
      32: new           #11                 // class java/util/concurrent/ConcurrentHashMap
      35: dup
      36: invokespecial #12                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      39: putfield      #13                 // Field attributes:Ljava/util/Map;
      42: aload_0
      43: ldc2_w        #14                 // long 30l
      46: invokestatic  #16                 // Method java/time/Duration.ofMinutes:(J)Ljava/time/Duration;
      49: putfield      #17                 // Field maxIdleTime:Ljava/time/Duration;
      52: aload_0
      53: new           #5                  // class java/util/concurrent/atomic/AtomicReference
      56: dup
      57: getstatic     #18                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.NEW:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
      60: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      63: putfield      #19                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      66: aload_0
      67: aload_2
      68: putfield      #20                 // Field creationTime:Ljava/time/Instant;
      71: aload_0
      72: aload_0
      73: getfield      #20                 // Field creationTime:Ljava/time/Instant;
      76: putfield      #21                 // Field lastAccessTime:Ljava/time/Instant;
      79: return

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #10                 // Field id:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #23                 // class java/lang/String
      10: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getAttributes();
    Code:
       0: aload_0
       1: getfield      #13                 // Field attributes:Ljava/util/Map;
       4: areturn

  public java.time.Instant getCreationTime();
    Code:
       0: aload_0
       1: getfield      #20                 // Field creationTime:Ljava/time/Instant;
       4: areturn

  public java.time.Instant getLastAccessTime();
    Code:
       0: aload_0
       1: getfield      #21                 // Field lastAccessTime:Ljava/time/Instant;
       4: areturn

  public void setMaxIdleTime(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field maxIdleTime:Ljava/time/Duration;
       5: return

  public java.time.Duration getMaxIdleTime();
    Code:
       0: aload_0
       1: getfield      #17                 // Field maxIdleTime:Ljava/time/Duration;
       4: areturn

  public void start();
    Code:
       0: aload_0
       1: getfield      #19                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: getstatic     #18                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.NEW:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
       7: getstatic     #24                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.STARTED:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
      10: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: pop
      14: return

  public boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #19                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #26                 // class org/springframework/web/server/session/InMemoryWebSessionStore$State
      10: getstatic     #24                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.STARTED:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
      13: invokevirtual #27                 // Method org/springframework/web/server/session/InMemoryWebSessionStore$State.equals:(Ljava/lang/Object;)Z
      16: ifne          31
      19: aload_0
      20: invokevirtual #28                 // Method getAttributes:()Ljava/util/Map;
      23: invokeinterface #29,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      28: ifne          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public reactor.core.publisher.Mono<java.lang.Void> changeSessionId();
    Code:
       0: aload_0
       1: getfield      #10                 // Field id:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #23                 // class java/lang/String
      10: astore_1
      11: aload_0
      12: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
      15: invokestatic  #30                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$400:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)Ljava/util/Map;
      18: aload_1
      19: invokeinterface #31,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: invokestatic  #6                  // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$300:()Lorg/springframework/util/IdGenerator;
      28: invokeinterface #7,  1            // InterfaceMethod org/springframework/util/IdGenerator.generateId:()Ljava/util/UUID;
      33: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      36: astore_2
      37: aload_0
      38: getfield      #10                 // Field id:Ljava/util/concurrent/atomic/AtomicReference;
      41: aload_2
      42: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      45: aload_0
      46: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
      49: invokestatic  #30                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$400:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)Ljava/util/Map;
      52: aload_0
      53: invokevirtual #33                 // Method getId:()Ljava/lang/String;
      56: aload_0
      57: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: invokestatic  #35                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      66: areturn

  public reactor.core.publisher.Mono<java.lang.Void> invalidate();
    Code:
       0: aload_0
       1: getfield      #19                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: getstatic     #36                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.EXPIRED:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
       7: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #28                 // Method getAttributes:()Ljava/util/Map;
      14: invokeinterface #37,  1           // InterfaceMethod java/util/Map.clear:()V
      19: aload_0
      20: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
      23: invokestatic  #30                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$400:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)Ljava/util/Map;
      26: aload_0
      27: getfield      #10                 // Field id:Ljava/util/concurrent/atomic/AtomicReference;
      30: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      33: invokeinterface #31,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: invokestatic  #35                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      42: areturn

  public reactor.core.publisher.Mono<java.lang.Void> save();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkMaxSessionsLimit:()V
       4: aload_0
       5: invokevirtual #28                 // Method getAttributes:()Ljava/util/Map;
       8: invokeinterface #29,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      13: ifne          30
      16: aload_0
      17: getfield      #19                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      20: getstatic     #18                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.NEW:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
      23: getstatic     #24                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.STARTED:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
      26: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: invokevirtual #39                 // Method isStarted:()Z
      34: ifeq          104
      37: aload_0
      38: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
      41: invokestatic  #30                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$400:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)Ljava/util/Map;
      44: aload_0
      45: invokevirtual #33                 // Method getId:()Ljava/lang/String;
      48: aload_0
      49: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: aload_0
      56: getfield      #19                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      59: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      62: checkcast     #26                 // class org/springframework/web/server/session/InMemoryWebSessionStore$State
      65: getstatic     #36                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.EXPIRED:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
      68: invokevirtual #27                 // Method org/springframework/web/server/session/InMemoryWebSessionStore$State.equals:(Ljava/lang/Object;)Z
      71: ifeq          104
      74: aload_0
      75: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
      78: invokestatic  #30                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$400:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)Ljava/util/Map;
      81: aload_0
      82: invokevirtual #33                 // Method getId:()Ljava/lang/String;
      85: invokeinterface #31,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      90: pop
      91: new           #40                 // class java/lang/IllegalStateException
      94: dup
      95: ldc           #41                 // String Session was invalidated
      97: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     100: invokestatic  #43                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
     103: areturn
     104: invokestatic  #35                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
     107: areturn

  private void checkMaxSessionsLimit();
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
       4: invokestatic  #30                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$400:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)Ljava/util/Map;
       7: invokeinterface #44,  1           // InterfaceMethod java/util/Map.size:()I
      12: aload_0
      13: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
      16: invokestatic  #45                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$500:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)I
      19: if_icmplt     102
      22: aload_0
      23: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
      26: invokestatic  #46                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$700:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)Lorg/springframework/web/server/session/InMemoryWebSessionStore$ExpiredSessionChecker;
      29: aload_0
      30: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
      33: invokestatic  #47                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$600:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)Ljava/time/Clock;
      36: invokevirtual #48                 // Method java/time/Clock.instant:()Ljava/time/Instant;
      39: invokevirtual #49                 // Method org/springframework/web/server/session/InMemoryWebSessionStore$ExpiredSessionChecker.removeExpiredSessions:(Ljava/time/Instant;)V
      42: aload_0
      43: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
      46: invokestatic  #30                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$400:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)Ljava/util/Map;
      49: invokeinterface #44,  1           // InterfaceMethod java/util/Map.size:()I
      54: aload_0
      55: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
      58: invokestatic  #45                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$500:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)I
      61: if_icmplt     102
      64: new           #40                 // class java/lang/IllegalStateException
      67: dup
      68: new           #50                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #52                 // String Max sessions limit reached:
      77: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
      84: invokestatic  #30                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$400:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)Ljava/util/Map;
      87: invokeinterface #44,  1           // InterfaceMethod java/util/Map.size:()I
      92: invokevirtual #54                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      95: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: return

  public boolean isExpired();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field this$0:Lorg/springframework/web/server/session/InMemoryWebSessionStore;
       5: invokestatic  #47                 // Method org/springframework/web/server/session/InMemoryWebSessionStore.access$600:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)Ljava/time/Clock;
       8: invokevirtual #48                 // Method java/time/Clock.instant:()Ljava/time/Instant;
      11: invokespecial #2                  // Method isExpired:(Ljava/time/Instant;)Z
      14: ireturn

  private boolean isExpired(java.time.Instant);
    Code:
       0: aload_0
       1: getfield      #19                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #26                 // class org/springframework/web/server/session/InMemoryWebSessionStore$State
      10: getstatic     #36                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.EXPIRED:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
      13: invokevirtual #27                 // Method org/springframework/web/server/session/InMemoryWebSessionStore$State.equals:(Ljava/lang/Object;)Z
      16: ifeq          21
      19: iconst_1
      20: ireturn
      21: aload_0
      22: aload_1
      23: invokespecial #56                 // Method checkExpired:(Ljava/time/Instant;)Z
      26: ifeq          41
      29: aload_0
      30: getfield      #19                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      33: getstatic     #36                 // Field org/springframework/web/server/session/InMemoryWebSessionStore$State.EXPIRED:Lorg/springframework/web/server/session/InMemoryWebSessionStore$State;
      36: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      39: iconst_1
      40: ireturn
      41: iconst_0
      42: ireturn

  private boolean checkExpired(java.time.Instant);
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method isStarted:()Z
       4: ifeq          39
       7: aload_0
       8: getfield      #17                 // Field maxIdleTime:Ljava/time/Duration;
      11: invokevirtual #57                 // Method java/time/Duration.isNegative:()Z
      14: ifne          39
      17: aload_1
      18: aload_0
      19: getfield      #17                 // Field maxIdleTime:Ljava/time/Duration;
      22: invokevirtual #58                 // Method java/time/Instant.minus:(Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant;
      25: aload_0
      26: getfield      #21                 // Field lastAccessTime:Ljava/time/Instant;
      29: invokevirtual #59                 // Method java/time/Instant.isAfter:(Ljava/time/Instant;)Z
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  private void updateLastAccessTime(java.time.Instant);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field lastAccessTime:Ljava/time/Instant;
       5: return

  static boolean access$100(org.springframework.web.server.session.InMemoryWebSessionStore$InMemoryWebSession, java.time.Instant);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method isExpired:(Ljava/time/Instant;)Z
       5: ireturn

  static void access$200(org.springframework.web.server.session.InMemoryWebSessionStore$InMemoryWebSession, java.time.Instant);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method updateLastAccessTime:(Ljava/time/Instant;)V
       5: return
}
