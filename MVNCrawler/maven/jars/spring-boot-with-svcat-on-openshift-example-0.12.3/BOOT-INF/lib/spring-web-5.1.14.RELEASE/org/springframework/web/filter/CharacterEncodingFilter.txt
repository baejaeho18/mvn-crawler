Compiled from "CharacterEncodingFilter.java"
public class org.springframework.web.filter.CharacterEncodingFilter extends org.springframework.web.filter.OncePerRequestFilter {
  private java.lang.String encoding;

  private boolean forceRequestEncoding;

  private boolean forceResponseEncoding;

  public org.springframework.web.filter.CharacterEncodingFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/filter/OncePerRequestFilter."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field forceRequestEncoding:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field forceResponseEncoding:Z
      14: return

  public org.springframework.web.filter.CharacterEncodingFilter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #4                  // Method "<init>":(Ljava/lang/String;Z)V
       6: return

  public org.springframework.web.filter.CharacterEncodingFilter(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_2
       4: invokespecial #5                  // Method "<init>":(Ljava/lang/String;ZZ)V
       7: return

  public org.springframework.web.filter.CharacterEncodingFilter(java.lang.String, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/filter/OncePerRequestFilter."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field forceRequestEncoding:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field forceResponseEncoding:Z
      14: aload_1
      15: ldc           #6                  // String Encoding must not be empty
      17: invokestatic  #7                  // Method org/springframework/util/Assert.hasLength:(Ljava/lang/String;Ljava/lang/String;)V
      20: aload_0
      21: aload_1
      22: putfield      #8                  // Field encoding:Ljava/lang/String;
      25: aload_0
      26: iload_2
      27: putfield      #2                  // Field forceRequestEncoding:Z
      30: aload_0
      31: iload_3
      32: putfield      #3                  // Field forceResponseEncoding:Z
      35: return

  public void setEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field encoding:Ljava/lang/String;
       5: return

  public java.lang.String getEncoding();
    Code:
       0: aload_0
       1: getfield      #8                  // Field encoding:Ljava/lang/String;
       4: areturn

  public void setForceEncoding(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field forceRequestEncoding:Z
       5: aload_0
       6: iload_1
       7: putfield      #3                  // Field forceResponseEncoding:Z
      10: return

  public void setForceRequestEncoding(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field forceRequestEncoding:Z
       5: return

  public boolean isForceRequestEncoding();
    Code:
       0: aload_0
       1: getfield      #2                  // Field forceRequestEncoding:Z
       4: ireturn

  public void setForceResponseEncoding(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field forceResponseEncoding:Z
       5: return

  public boolean isForceResponseEncoding();
    Code:
       0: aload_0
       1: getfield      #3                  // Field forceResponseEncoding:Z
       4: ireturn

  protected void doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getEncoding:()Ljava/lang/String;
       4: astore        4
       6: aload         4
       8: ifnull        50
      11: aload_0
      12: invokevirtual #10                 // Method isForceRequestEncoding:()Z
      15: ifne          27
      18: aload_1
      19: invokeinterface #11,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCharacterEncoding:()Ljava/lang/String;
      24: ifnonnull     35
      27: aload_1
      28: aload         4
      30: invokeinterface #12,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.setCharacterEncoding:(Ljava/lang/String;)V
      35: aload_0
      36: invokevirtual #13                 // Method isForceResponseEncoding:()Z
      39: ifeq          50
      42: aload_2
      43: aload         4
      45: invokeinterface #14,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setCharacterEncoding:(Ljava/lang/String;)V
      50: aload_3
      51: aload_1
      52: aload_2
      53: invokeinterface #15,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
      58: return
}
