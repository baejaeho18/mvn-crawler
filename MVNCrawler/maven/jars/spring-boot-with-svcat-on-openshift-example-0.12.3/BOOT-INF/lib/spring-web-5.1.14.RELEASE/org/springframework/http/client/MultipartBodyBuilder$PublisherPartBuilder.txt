Compiled from "MultipartBodyBuilder.java"
class org.springframework.http.client.MultipartBodyBuilder$PublisherPartBuilder<S, P extends org.reactivestreams.Publisher<S>> extends org.springframework.http.client.MultipartBodyBuilder$DefaultPartBuilder {
  private final org.springframework.core.ResolvableType resolvableType;

  public org.springframework.http.client.MultipartBodyBuilder$PublisherPartBuilder(org.springframework.http.HttpHeaders, P, java.lang.Class<S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/springframework/http/client/MultipartBodyBuilder$DefaultPartBuilder."<init>":(Lorg/springframework/http/HttpHeaders;Ljava/lang/Object;)V
       6: aload_0
       7: aload_3
       8: invokestatic  #2                  // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      11: putfield      #3                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      14: return

  public org.springframework.http.client.MultipartBodyBuilder$PublisherPartBuilder(org.springframework.http.HttpHeaders, P, org.springframework.core.ParameterizedTypeReference<S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/springframework/http/client/MultipartBodyBuilder$DefaultPartBuilder."<init>":(Lorg/springframework/http/HttpHeaders;Ljava/lang/Object;)V
       6: aload_0
       7: aload_3
       8: invokestatic  #4                  // Method org/springframework/core/ResolvableType.forType:(Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/core/ResolvableType;
      11: putfield      #3                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      14: return

  public org.springframework.http.client.MultipartBodyBuilder$PublisherPartBuilder(org.springframework.http.client.MultipartBodyBuilder$PublisherEntity<S, P>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method org/springframework/http/client/MultipartBodyBuilder$PublisherEntity.getHeaders:()Lorg/springframework/http/HttpHeaders;
       5: aload_1
       6: invokevirtual #6                  // Method org/springframework/http/client/MultipartBodyBuilder$PublisherEntity.getBody:()Ljava/lang/Object;
       9: invokespecial #1                  // Method org/springframework/http/client/MultipartBodyBuilder$DefaultPartBuilder."<init>":(Lorg/springframework/http/HttpHeaders;Ljava/lang/Object;)V
      12: aload_0
      13: aload_1
      14: invokevirtual #7                  // Method org/springframework/http/client/MultipartBodyBuilder$PublisherEntity.getResolvableType:()Lorg/springframework/core/ResolvableType;
      17: putfield      #3                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      20: return

  public org.springframework.http.HttpEntity<?> build();
    Code:
       0: aload_0
       1: getfield      #8                  // Field body:Ljava/lang/Object;
       4: checkcast     #9                  // class org/reactivestreams/Publisher
       7: astore_1
       8: aload_1
       9: ifnull        16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc           #10                 // String Publisher must not be null
      19: invokestatic  #11                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      22: new           #12                 // class org/springframework/http/client/MultipartBodyBuilder$PublisherEntity
      25: dup
      26: aload_0
      27: getfield      #13                 // Field headers:Lorg/springframework/http/HttpHeaders;
      30: aload_1
      31: aload_0
      32: getfield      #3                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      35: invokespecial #14                 // Method org/springframework/http/client/MultipartBodyBuilder$PublisherEntity."<init>":(Lorg/springframework/util/MultiValueMap;Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;)V
      38: areturn
}
