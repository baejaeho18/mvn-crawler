Compiled from "MultipartHttpMessageWriter.java"
public class org.springframework.http.codec.multipart.MultipartHttpMessageWriter extends org.springframework.http.codec.LoggingCodecSupport implements org.springframework.http.codec.HttpMessageWriter<org.springframework.util.MultiValueMap<java.lang.String, ?>> {
  public static final java.nio.charset.Charset DEFAULT_CHARSET;

  private static final java.util.Map<java.lang.String, java.lang.Object> DEFAULT_HINTS;

  private final java.util.List<org.springframework.http.codec.HttpMessageWriter<?>> partWriters;

  private final org.springframework.http.codec.HttpMessageWriter<org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>> formWriter;

  private java.nio.charset.Charset charset;

  private final java.util.List<org.springframework.http.MediaType> supportedMediaTypes;

  public org.springframework.http.codec.multipart.MultipartHttpMessageWriter();
    Code:
       0: aload_0
       1: iconst_2
       2: anewarray     #1                  // class org/springframework/http/codec/HttpMessageWriter
       5: dup
       6: iconst_0
       7: new           #2                  // class org/springframework/http/codec/EncoderHttpMessageWriter
      10: dup
      11: invokestatic  #3                  // Method org/springframework/core/codec/CharSequenceEncoder.textPlainOnly:()Lorg/springframework/core/codec/CharSequenceEncoder;
      14: invokespecial #4                  // Method org/springframework/http/codec/EncoderHttpMessageWriter."<init>":(Lorg/springframework/core/codec/Encoder;)V
      17: aastore
      18: dup
      19: iconst_1
      20: new           #5                  // class org/springframework/http/codec/ResourceHttpMessageWriter
      23: dup
      24: invokespecial #6                  // Method org/springframework/http/codec/ResourceHttpMessageWriter."<init>":()V
      27: aastore
      28: invokestatic  #7                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      31: invokespecial #8                  // Method "<init>":(Ljava/util/List;)V
      34: return

  public org.springframework.http.codec.multipart.MultipartHttpMessageWriter(java.util.List<org.springframework.http.codec.HttpMessageWriter<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: new           #9                  // class org/springframework/http/codec/FormHttpMessageWriter
       5: dup
       6: invokespecial #10                 // Method org/springframework/http/codec/FormHttpMessageWriter."<init>":()V
       9: invokespecial #11                 // Method "<init>":(Ljava/util/List;Lorg/springframework/http/codec/HttpMessageWriter;)V
      12: return

  public org.springframework.http.codec.multipart.MultipartHttpMessageWriter(java.util.List<org.springframework.http.codec.HttpMessageWriter<?>>, org.springframework.http.codec.HttpMessageWriter<org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>>);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method org/springframework/http/codec/LoggingCodecSupport."<init>":()V
       4: aload_0
       5: getstatic     #13                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       8: putfield      #14                 // Field charset:Ljava/nio/charset/Charset;
      11: aload_0
      12: aload_1
      13: putfield      #15                 // Field partWriters:Ljava/util/List;
      16: aload_0
      17: aload_2
      18: putfield      #16                 // Field formWriter:Lorg/springframework/http/codec/HttpMessageWriter;
      21: aload_0
      22: aload_2
      23: invokestatic  #17                 // Method initMediaTypes:(Lorg/springframework/http/codec/HttpMessageWriter;)Ljava/util/List;
      26: putfield      #18                 // Field supportedMediaTypes:Ljava/util/List;
      29: return

  private static java.util.List<org.springframework.http.MediaType> initMediaTypes(org.springframework.http.codec.HttpMessageWriter<?>);
    Code:
       0: new           #19                 // class java/util/ArrayList
       3: dup
       4: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_1
       9: getstatic     #21                 // Field org/springframework/http/MediaType.MULTIPART_FORM_DATA:Lorg/springframework/http/MediaType;
      12: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      17: pop
      18: aload_0
      19: ifnull        35
      22: aload_1
      23: aload_0
      24: invokeinterface #23,  1           // InterfaceMethod org/springframework/http/codec/HttpMessageWriter.getWritableMediaTypes:()Ljava/util/List;
      29: invokeinterface #24,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      34: pop
      35: aload_1
      36: invokestatic  #25                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      39: areturn

  public java.util.List<org.springframework.http.codec.HttpMessageWriter<?>> getPartWriters();
    Code:
       0: aload_0
       1: getfield      #15                 // Field partWriters:Ljava/util/List;
       4: invokestatic  #25                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public org.springframework.http.codec.HttpMessageWriter<org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>> getFormWriter();
    Code:
       0: aload_0
       1: getfield      #16                 // Field formWriter:Lorg/springframework/http/codec/HttpMessageWriter;
       4: areturn

  public void setCharset(java.nio.charset.Charset);
    Code:
       0: aload_1
       1: ldc           #26                 // String Charset must not be null
       3: invokestatic  #27                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #14                 // Field charset:Ljava/nio/charset/Charset;
      11: return

  public java.nio.charset.Charset getCharset();
    Code:
       0: aload_0
       1: getfield      #14                 // Field charset:Ljava/nio/charset/Charset;
       4: areturn

  public java.util.List<org.springframework.http.MediaType> getWritableMediaTypes();
    Code:
       0: aload_0
       1: getfield      #18                 // Field supportedMediaTypes:Ljava/util/List;
       4: areturn

  public boolean canWrite(org.springframework.core.ResolvableType, org.springframework.http.MediaType);
    Code:
       0: ldc           #28                 // class org/springframework/util/MultiValueMap
       2: aload_1
       3: invokevirtual #29                 // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
       6: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ifeq          43
      12: aload_2
      13: ifnull        39
      16: aload_0
      17: getfield      #18                 // Field supportedMediaTypes:Ljava/util/List;
      20: invokeinterface #31,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      25: aload_2
      26: invokedynamic #32,  0             // InvokeDynamic #0:test:(Lorg/springframework/http/MediaType;)Ljava/util/function/Predicate;
      31: invokeinterface #33,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  public reactor.core.publisher.Mono<java.lang.Void> write(org.reactivestreams.Publisher<? extends org.springframework.util.MultiValueMap<java.lang.String, ?>>, org.springframework.core.ResolvableType, org.springframework.http.MediaType, org.springframework.http.ReactiveHttpOutputMessage, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: invokestatic  #34                 // Method reactor/core/publisher/Mono.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
       4: aload_0
       5: aload_3
       6: aload         4
       8: aload         5
      10: aload_2
      11: invokedynamic #35,  0             // InvokeDynamic #1:apply:(Lorg/springframework/http/codec/multipart/MultipartHttpMessageWriter;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;Lorg/springframework/core/ResolvableType;)Ljava/util/function/Function;
      16: invokevirtual #36                 // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      19: areturn

  private boolean isMultipart(org.springframework.util.MultiValueMap<java.lang.String, ?>, org.springframework.http.MediaType);
    Code:
       0: aload_2
       1: ifnull        12
       4: getstatic     #21                 // Field org/springframework/http/MediaType.MULTIPART_FORM_DATA:Lorg/springframework/http/MediaType;
       7: aload_2
       8: invokevirtual #37                 // Method org/springframework/http/MediaType.includes:(Lorg/springframework/http/MediaType;)Z
      11: ireturn
      12: aload_1
      13: invokeinterface #38,  1           // InterfaceMethod org/springframework/util/MultiValueMap.values:()Ljava/util/Collection;
      18: invokeinterface #39,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          93
      33: aload_3
      34: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #42                 // class java/util/List
      42: astore        4
      44: aload         4
      46: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore        5
      53: aload         5
      55: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          90
      63: aload         5
      65: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      70: astore        6
      72: aload         6
      74: ifnull        87
      77: aload         6
      79: instanceof    #44                 // class java/lang/String
      82: ifne          87
      85: iconst_1
      86: ireturn
      87: goto          53
      90: goto          24
      93: iconst_0
      94: ireturn

  private reactor.core.publisher.Mono<java.lang.Void> writeMultipart(org.springframework.util.MultiValueMap<java.lang.String, ?>, org.springframework.http.ReactiveHttpOutputMessage, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method generateMultipartBoundary:()[B
       4: astore        4
       6: new           #46                 // class java/util/HashMap
       9: dup
      10: iconst_2
      11: invokespecial #47                 // Method java/util/HashMap."<init>":(I)V
      14: astore        5
      16: aload         5
      18: ldc           #48                 // String boundary
      20: new           #44                 // class java/lang/String
      23: dup
      24: aload         4
      26: getstatic     #49                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      29: invokespecial #50                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      32: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload         5
      40: ldc           #52                 // String charset
      42: aload_0
      43: invokevirtual #53                 // Method getCharset:()Ljava/nio/charset/Charset;
      46: invokevirtual #54                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      49: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: aload_2
      56: invokeinterface #55,  1           // InterfaceMethod org/springframework/http/ReactiveHttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
      61: new           #56                 // class org/springframework/http/MediaType
      64: dup
      65: getstatic     #21                 // Field org/springframework/http/MediaType.MULTIPART_FORM_DATA:Lorg/springframework/http/MediaType;
      68: aload         5
      70: invokespecial #57                 // Method org/springframework/http/MediaType."<init>":(Lorg/springframework/http/MediaType;Ljava/util/Map;)V
      73: invokevirtual #58                 // Method org/springframework/http/HttpHeaders.setContentType:(Lorg/springframework/http/MediaType;)V
      76: aload_0
      77: getfield      #59                 // Field logger:Lorg/apache/commons/logging/Log;
      80: aload_0
      81: aload_3
      82: aload_1
      83: invokedynamic #60,  0             // InvokeDynamic #2:apply:(Lorg/springframework/http/codec/multipart/MultipartHttpMessageWriter;Ljava/util/Map;Lorg/springframework/util/MultiValueMap;)Ljava/util/function/Function;
      88: invokestatic  #61                 // Method org/springframework/core/log/LogFormatUtils.traceDebug:(Lorg/apache/commons/logging/Log;Ljava/util/function/Function;)V
      91: aload_2
      92: invokeinterface #62,  1           // InterfaceMethod org/springframework/http/ReactiveHttpOutputMessage.bufferFactory:()Lorg/springframework/core/io/buffer/DataBufferFactory;
      97: astore        6
      99: aload_1
     100: invokeinterface #63,  1           // InterfaceMethod org/springframework/util/MultiValueMap.entrySet:()Ljava/util/Set;
     105: invokestatic  #64                 // Method reactor/core/publisher/Flux.fromIterable:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
     108: aload_0
     109: aload         4
     111: aload         6
     113: invokedynamic #65,  0             // InvokeDynamic #3:apply:(Lorg/springframework/http/codec/multipart/MultipartHttpMessageWriter;[BLorg/springframework/core/io/buffer/DataBufferFactory;)Ljava/util/function/Function;
     118: invokevirtual #66                 // Method reactor/core/publisher/Flux.concatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     121: aload_0
     122: aload         4
     124: aload         6
     126: invokespecial #67                 // Method generateLastLine:([BLorg/springframework/core/io/buffer/DataBufferFactory;)Lreactor/core/publisher/Mono;
     129: invokevirtual #68                 // Method reactor/core/publisher/Flux.concatWith:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
     132: ldc           #69                 // class org/springframework/core/io/buffer/PooledDataBuffer
     134: invokedynamic #70,  0             // InvokeDynamic #4:accept:()Ljava/util/function/Consumer;
     139: invokevirtual #71                 // Method reactor/core/publisher/Flux.doOnDiscard:(Ljava/lang/Class;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
     142: astore        7
     144: aload_2
     145: aload         7
     147: invokeinterface #72,  2           // InterfaceMethod org/springframework/http/ReactiveHttpOutputMessage.writeWith:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
     152: areturn

  protected byte[] generateMultipartBoundary();
    Code:
       0: invokestatic  #73                 // Method org/springframework/util/MimeTypeUtils.generateMultipartBoundary:()[B
       3: areturn

  private reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> encodePartValues(byte[], java.lang.String, java.util.List<?>, org.springframework.core.io.buffer.DataBufferFactory);
    Code:
       0: aload_3
       1: invokestatic  #64                 // Method reactor/core/publisher/Flux.fromIterable:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload         4
       9: invokedynamic #74,  0             // InvokeDynamic #5:apply:(Lorg/springframework/http/codec/multipart/MultipartHttpMessageWriter;[BLjava/lang/String;Lorg/springframework/core/io/buffer/DataBufferFactory;)Ljava/util/function/Function;
      14: invokevirtual #66                 // Method reactor/core/publisher/Flux.concatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      17: areturn

  private <T> reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> encodePart(byte[], java.lang.String, T, org.springframework.core.io.buffer.DataBufferFactory);
    Code:
       0: new           #75                 // class org/springframework/http/codec/multipart/MultipartHttpMessageWriter$MultipartHttpOutputMessage
       3: dup
       4: aload         4
       6: aload_0
       7: invokevirtual #53                 // Method getCharset:()Ljava/nio/charset/Charset;
      10: invokespecial #76                 // Method org/springframework/http/codec/multipart/MultipartHttpMessageWriter$MultipartHttpOutputMessage."<init>":(Lorg/springframework/core/io/buffer/DataBufferFactory;Ljava/nio/charset/Charset;)V
      13: astore        5
      15: aload         5
      17: invokevirtual #77                 // Method org/springframework/http/codec/multipart/MultipartHttpMessageWriter$MultipartHttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
      20: astore        6
      22: aconst_null
      23: astore        8
      25: aload_3
      26: instanceof    #78                 // class org/springframework/http/HttpEntity
      29: ifeq          93
      32: aload_3
      33: checkcast     #78                 // class org/springframework/http/HttpEntity
      36: astore        9
      38: aload         6
      40: aload         9
      42: invokevirtual #79                 // Method org/springframework/http/HttpEntity.getHeaders:()Lorg/springframework/http/HttpHeaders;
      45: invokevirtual #80                 // Method org/springframework/http/HttpHeaders.putAll:(Ljava/util/Map;)V
      48: aload         9
      50: invokevirtual #81                 // Method org/springframework/http/HttpEntity.getBody:()Ljava/lang/Object;
      53: astore        7
      55: aload         7
      57: ifnull        64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ldc           #82                 // String MultipartHttpMessageWriter only supports HttpEntity with body
      67: invokestatic  #83                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      70: aload         9
      72: instanceof    #84                 // class org/springframework/core/ResolvableTypeProvider
      75: ifeq          90
      78: aload         9
      80: checkcast     #84                 // class org/springframework/core/ResolvableTypeProvider
      83: invokeinterface #85,  1           // InterfaceMethod org/springframework/core/ResolvableTypeProvider.getResolvableType:()Lorg/springframework/core/ResolvableType;
      88: astore        8
      90: goto          96
      93: aload_3
      94: astore        7
      96: aload         8
      98: ifnonnull     111
     101: aload         7
     103: invokevirtual #86                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     106: invokestatic  #87                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
     109: astore        8
     111: aload         6
     113: ldc           #89                 // String Content-Disposition
     115: invokevirtual #90                 // Method org/springframework/http/HttpHeaders.containsKey:(Ljava/lang/Object;)Z
     118: ifne          189
     121: aload         7
     123: instanceof    #91                 // class org/springframework/core/io/Resource
     126: ifeq          148
     129: aload         6
     131: aload_2
     132: aload         7
     134: checkcast     #91                 // class org/springframework/core/io/Resource
     137: invokeinterface #92,  1           // InterfaceMethod org/springframework/core/io/Resource.getFilename:()Ljava/lang/String;
     142: invokevirtual #93                 // Method org/springframework/http/HttpHeaders.setContentDispositionFormData:(Ljava/lang/String;Ljava/lang/String;)V
     145: goto          189
     148: aload         8
     150: invokevirtual #94                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
     153: ldc           #91                 // class org/springframework/core/io/Resource
     155: if_acmpne     182
     158: aload         7
     160: checkcast     #95                 // class org/reactivestreams/Publisher
     163: invokestatic  #34                 // Method reactor/core/publisher/Mono.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
     166: aload         6
     168: aload_2
     169: invokedynamic #96,  0             // InvokeDynamic #6:accept:(Lorg/springframework/http/HttpHeaders;Ljava/lang/String;)Ljava/util/function/Consumer;
     174: invokevirtual #97                 // Method reactor/core/publisher/Mono.doOnNext:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
     177: astore        7
     179: goto          189
     182: aload         6
     184: aload_2
     185: aconst_null
     186: invokevirtual #93                 // Method org/springframework/http/HttpHeaders.setContentDispositionFormData:(Ljava/lang/String;Ljava/lang/String;)V
     189: aload         6
     191: invokevirtual #98                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
     194: astore        9
     196: aload         8
     198: astore        10
     200: aload_0
     201: getfield      #15                 // Field partWriters:Ljava/util/List;
     204: invokeinterface #31,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     209: aload         10
     211: aload         9
     213: invokedynamic #99,  0             // InvokeDynamic #7:test:(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Ljava/util/function/Predicate;
     218: invokeinterface #100,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     223: invokeinterface #101,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
     228: astore        11
     230: aload         11
     232: invokevirtual #102                // Method java/util/Optional.isPresent:()Z
     235: ifne          268
     238: new           #103                // class org/springframework/core/codec/CodecException
     241: dup
     242: new           #104                // class java/lang/StringBuilder
     245: dup
     246: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     249: ldc           #106                // String No suitable writer found for part:
     251: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     254: aload_2
     255: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     258: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     261: invokespecial #109                // Method org/springframework/core/codec/CodecException."<init>":(Ljava/lang/String;)V
     264: invokestatic  #110                // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
     267: areturn
     268: aload         7
     270: instanceof    #95                 // class org/reactivestreams/Publisher
     273: ifeq          284
     276: aload         7
     278: checkcast     #95                 // class org/reactivestreams/Publisher
     281: goto          289
     284: aload         7
     286: invokestatic  #111                // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
     289: astore        12
     291: aload         11
     293: invokevirtual #112                // Method java/util/Optional.get:()Ljava/lang/Object;
     296: checkcast     #1                  // class org/springframework/http/codec/HttpMessageWriter
     299: aload         12
     301: aload         8
     303: aload         9
     305: aload         5
     307: getstatic     #113                // Field DEFAULT_HINTS:Ljava/util/Map;
     310: invokeinterface #114,  6          // InterfaceMethod org/springframework/http/codec/HttpMessageWriter.write:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
     315: astore        13
     317: aload         13
     319: aload         5
     321: dup
     322: invokevirtual #86                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     325: pop
     326: invokedynamic #115,  0            // InvokeDynamic #8:get:(Lorg/springframework/http/codec/multipart/MultipartHttpMessageWriter$MultipartHttpOutputMessage;)Ljava/util/function/Supplier;
     331: invokestatic  #116                // Method reactor/core/publisher/Flux.defer:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
     334: invokevirtual #117                // Method reactor/core/publisher/Mono.thenMany:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
     337: astore        14
     339: iconst_3
     340: anewarray     #95                 // class org/reactivestreams/Publisher
     343: dup
     344: iconst_0
     345: aload_0
     346: aload_1
     347: aload         4
     349: invokespecial #118                // Method generateBoundaryLine:([BLorg/springframework/core/io/buffer/DataBufferFactory;)Lreactor/core/publisher/Mono;
     352: aastore
     353: dup
     354: iconst_1
     355: aload         14
     357: aastore
     358: dup
     359: iconst_2
     360: aload_0
     361: aload         4
     363: invokespecial #119                // Method generateNewLine:(Lorg/springframework/core/io/buffer/DataBufferFactory;)Lreactor/core/publisher/Mono;
     366: aastore
     367: invokestatic  #120                // Method reactor/core/publisher/Flux.concat:([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
     370: areturn

  private reactor.core.publisher.Mono<org.springframework.core.io.buffer.DataBuffer> generateBoundaryLine(byte[], org.springframework.core.io.buffer.DataBufferFactory);
    Code:
       0: aload_2
       1: aload_1
       2: invokedynamic #121,  0            // InvokeDynamic #9:call:(Lorg/springframework/core/io/buffer/DataBufferFactory;[B)Ljava/util/concurrent/Callable;
       7: invokestatic  #122                // Method reactor/core/publisher/Mono.fromCallable:(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Mono;
      10: areturn

  private reactor.core.publisher.Mono<org.springframework.core.io.buffer.DataBuffer> generateNewLine(org.springframework.core.io.buffer.DataBufferFactory);
    Code:
       0: aload_1
       1: invokedynamic #123,  0            // InvokeDynamic #10:call:(Lorg/springframework/core/io/buffer/DataBufferFactory;)Ljava/util/concurrent/Callable;
       6: invokestatic  #122                // Method reactor/core/publisher/Mono.fromCallable:(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Mono;
       9: areturn

  private reactor.core.publisher.Mono<org.springframework.core.io.buffer.DataBuffer> generateLastLine(byte[], org.springframework.core.io.buffer.DataBufferFactory);
    Code:
       0: aload_2
       1: aload_1
       2: invokedynamic #124,  0            // InvokeDynamic #11:call:(Lorg/springframework/core/io/buffer/DataBufferFactory;[B)Ljava/util/concurrent/Callable;
       7: invokestatic  #122                // Method reactor/core/publisher/Mono.fromCallable:(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Mono;
      10: areturn

  private static org.springframework.core.io.buffer.DataBuffer lambda$generateLastLine$9(org.springframework.core.io.buffer.DataBufferFactory, byte[]) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: bipush        6
       5: iadd
       6: invokeinterface #125,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:(I)Lorg/springframework/core/io/buffer/DataBuffer;
      11: astore_2
      12: aload_2
      13: bipush        45
      15: invokeinterface #126,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
      20: pop
      21: aload_2
      22: bipush        45
      24: invokeinterface #126,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
      29: pop
      30: aload_2
      31: aload_1
      32: invokeinterface #127,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:([B)Lorg/springframework/core/io/buffer/DataBuffer;
      37: pop
      38: aload_2
      39: bipush        45
      41: invokeinterface #126,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
      46: pop
      47: aload_2
      48: bipush        45
      50: invokeinterface #126,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
      55: pop
      56: aload_2
      57: bipush        13
      59: invokeinterface #126,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
      64: pop
      65: aload_2
      66: bipush        10
      68: invokeinterface #126,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
      73: pop
      74: aload_2
      75: areturn

  private static org.springframework.core.io.buffer.DataBuffer lambda$generateNewLine$8(org.springframework.core.io.buffer.DataBufferFactory) throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_2
       2: invokeinterface #125,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:(I)Lorg/springframework/core/io/buffer/DataBuffer;
       7: astore_1
       8: aload_1
       9: bipush        13
      11: invokeinterface #126,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
      16: pop
      17: aload_1
      18: bipush        10
      20: invokeinterface #126,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
      25: pop
      26: aload_1
      27: areturn

  private static org.springframework.core.io.buffer.DataBuffer lambda$generateBoundaryLine$7(org.springframework.core.io.buffer.DataBufferFactory, byte[]) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: iconst_4
       4: iadd
       5: invokeinterface #125,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:(I)Lorg/springframework/core/io/buffer/DataBuffer;
      10: astore_2
      11: aload_2
      12: bipush        45
      14: invokeinterface #126,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
      19: pop
      20: aload_2
      21: bipush        45
      23: invokeinterface #126,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
      28: pop
      29: aload_2
      30: aload_1
      31: invokeinterface #127,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:([B)Lorg/springframework/core/io/buffer/DataBuffer;
      36: pop
      37: aload_2
      38: bipush        13
      40: invokeinterface #126,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
      45: pop
      46: aload_2
      47: bipush        10
      49: invokeinterface #126,  2          // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(B)Lorg/springframework/core/io/buffer/DataBuffer;
      54: pop
      55: aload_2
      56: areturn

  private static boolean lambda$encodePart$6(org.springframework.core.ResolvableType, org.springframework.http.MediaType, org.springframework.http.codec.HttpMessageWriter);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokeinterface #128,  3          // InterfaceMethod org/springframework/http/codec/HttpMessageWriter.canWrite:(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
       8: ireturn

  private static void lambda$encodePart$5(org.springframework.http.HttpHeaders, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #91                 // class org/springframework/core/io/Resource
       6: invokeinterface #92,  1           // InterfaceMethod org/springframework/core/io/Resource.getFilename:()Ljava/lang/String;
      11: invokevirtual #93                 // Method org/springframework/http/HttpHeaders.setContentDispositionFormData:(Ljava/lang/String;Ljava/lang/String;)V
      14: return

  private org.reactivestreams.Publisher lambda$encodePartValues$4(byte[], java.lang.String, org.springframework.core.io.buffer.DataBufferFactory, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         4
       5: aload_3
       6: invokespecial #129                // Method encodePart:([BLjava/lang/String;Ljava/lang/Object;Lorg/springframework/core/io/buffer/DataBufferFactory;)Lreactor/core/publisher/Flux;
       9: areturn

  private org.reactivestreams.Publisher lambda$writeMultipart$3(byte[], org.springframework.core.io.buffer.DataBufferFactory, java.util.Map$Entry);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokeinterface #130,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       8: checkcast     #44                 // class java/lang/String
      11: aload_3
      12: invokeinterface #131,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      17: checkcast     #42                 // class java/util/List
      20: aload_2
      21: invokespecial #132                // Method encodePartValues:([BLjava/lang/String;Ljava/util/List;Lorg/springframework/core/io/buffer/DataBufferFactory;)Lreactor/core/publisher/Flux;
      24: areturn

  private java.lang.String lambda$writeMultipart$2(java.util.Map, org.springframework.util.MultiValueMap, java.lang.Boolean);
    Code:
       0: new           #104                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokestatic  #133                // Method org/springframework/core/codec/Hints.getLogPrefix:(Ljava/util/Map;)Ljava/lang/String;
      11: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #134                // String Encoding
      16: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokevirtual #135                // Method isEnableLoggingRequestDetails:()Z
      23: ifeq          45
      26: aload_2
      27: aload_3
      28: invokevirtual #136                // Method java/lang/Boolean.booleanValue:()Z
      31: ifne          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: invokestatic  #137                // Method org/springframework/core/log/LogFormatUtils.formatValue:(Ljava/lang/Object;Z)Ljava/lang/String;
      42: goto          74
      45: new           #104                // class java/lang/StringBuilder
      48: dup
      49: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #138                // String parts
      54: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_2
      58: invokeinterface #139,  1          // InterfaceMethod org/springframework/util/MultiValueMap.keySet:()Ljava/util/Set;
      63: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: ldc           #141                // String  (content masked)
      68: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: areturn

  private reactor.core.publisher.Mono lambda$write$1(org.springframework.http.MediaType, org.springframework.http.ReactiveHttpOutputMessage, java.util.Map, org.springframework.core.ResolvableType, org.springframework.util.MultiValueMap);
    Code:
       0: aload_0
       1: getfield      #16                 // Field formWriter:Lorg/springframework/http/codec/HttpMessageWriter;
       4: ifnull        17
       7: aload_0
       8: aload         5
      10: aload_1
      11: invokespecial #142                // Method isMultipart:(Lorg/springframework/util/MultiValueMap;Lorg/springframework/http/MediaType;)Z
      14: ifeq          26
      17: aload_0
      18: aload         5
      20: aload_2
      21: aload_3
      22: invokespecial #143                // Method writeMultipart:(Lorg/springframework/util/MultiValueMap;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
      25: areturn
      26: aload         5
      28: invokestatic  #111                // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      31: astore        6
      33: aload_0
      34: getfield      #16                 // Field formWriter:Lorg/springframework/http/codec/HttpMessageWriter;
      37: aload         6
      39: aload         4
      41: aload_1
      42: aload_2
      43: aload_3
      44: invokeinterface #114,  6          // InterfaceMethod org/springframework/http/codec/HttpMessageWriter.write:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
      49: areturn

  private static boolean lambda$canWrite$0(org.springframework.http.MediaType, org.springframework.http.MediaType);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #144                // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
       5: ireturn

  static {};
    Code:
       0: getstatic     #145                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       3: putstatic     #13                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       6: getstatic     #146                // Field org/springframework/core/codec/Hints.SUPPRESS_LOGGING_HINT:Ljava/lang/String;
       9: iconst_1
      10: invokestatic  #147                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokestatic  #148                // Method org/springframework/core/codec/Hints.from:(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/Map;
      16: putstatic     #113                // Field DEFAULT_HINTS:Ljava/util/Map;
      19: return
}
