Compiled from "ProtobufDecoder.java"
public class org.springframework.http.codec.protobuf.ProtobufDecoder extends org.springframework.http.codec.protobuf.ProtobufCodecSupport implements org.springframework.core.codec.Decoder<com.google.protobuf.Message> {
  protected static final int DEFAULT_MESSAGE_MAX_SIZE;

  private static final java.util.concurrent.ConcurrentMap<java.lang.Class<?>, java.lang.reflect.Method> methodCache;

  private final com.google.protobuf.ExtensionRegistry extensionRegistry;

  private int maxMessageSize;

  public org.springframework.http.codec.protobuf.ProtobufDecoder();
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/protobuf/ExtensionRegistry.newInstance:()Lcom/google/protobuf/ExtensionRegistry;
       4: invokespecial #4                  // Method "<init>":(Lcom/google/protobuf/ExtensionRegistry;)V
       7: return

  public org.springframework.http.codec.protobuf.ProtobufDecoder(com.google.protobuf.ExtensionRegistry);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/springframework/http/codec/protobuf/ProtobufCodecSupport."<init>":()V
       4: aload_0
       5: ldc           #7                  // int 65536
       7: putfield      #8                  // Field maxMessageSize:I
      10: aload_1
      11: ldc           #9                  // String ExtensionRegistry must not be null
      13: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: putfield      #2                  // Field extensionRegistry:Lcom/google/protobuf/ExtensionRegistry;
      21: return

  public void setMaxMessageSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field maxMessageSize:I
       5: return

  public int getMaxMessageSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field maxMessageSize:I
       4: ireturn

  public boolean canDecode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: ldc           #11                 // class com/google/protobuf/Message
       2: aload_1
       3: invokevirtual #12                 // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
       6: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ifeq          24
      12: aload_0
      13: aload_2
      14: invokevirtual #14                 // Method supportsMimeType:(Lorg/springframework/util/MimeType;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public reactor.core.publisher.Flux<com.google.protobuf.Message> decode(org.reactivestreams.Publisher<org.springframework.core.io.buffer.DataBuffer>, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #15                 // class org/springframework/http/codec/protobuf/ProtobufDecoder$MessageDecoderFunction
       3: dup
       4: aload_0
       5: aload_2
       6: aload_0
       7: getfield      #8                  // Field maxMessageSize:I
      10: invokespecial #16                 // Method org/springframework/http/codec/protobuf/ProtobufDecoder$MessageDecoderFunction."<init>":(Lorg/springframework/http/codec/protobuf/ProtobufDecoder;Lorg/springframework/core/ResolvableType;I)V
      13: astore        5
      15: aload_1
      16: invokestatic  #17                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      19: aload         5
      21: invokevirtual #18                 // Method reactor/core/publisher/Flux.flatMapIterable:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      24: aload         5
      26: dup
      27: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      30: pop
      31: invokedynamic #20,  0             // InvokeDynamic #0:run:(Lorg/springframework/http/codec/protobuf/ProtobufDecoder$MessageDecoderFunction;)Ljava/lang/Runnable;
      36: invokevirtual #21                 // Method reactor/core/publisher/Flux.doOnTerminate:(Ljava/lang/Runnable;)Lreactor/core/publisher/Flux;
      39: areturn

  public reactor.core.publisher.Mono<com.google.protobuf.Message> decodeToMono(org.reactivestreams.Publisher<org.springframework.core.io.buffer.DataBuffer>, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #22                 // Method getMaxMessageSize:()I
       5: invokestatic  #23                 // Method org/springframework/core/io/buffer/DataBufferUtils.join:(Lorg/reactivestreams/Publisher;I)Lreactor/core/publisher/Mono;
       8: aload_0
       9: aload_2
      10: invokedynamic #24,  0             // InvokeDynamic #1:apply:(Lorg/springframework/http/codec/protobuf/ProtobufDecoder;Lorg/springframework/core/ResolvableType;)Ljava/util/function/Function;
      15: invokevirtual #25                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      18: areturn

  private static com.google.protobuf.Message$Builder getMessageBuilder(java.lang.Class<?>) throws java.lang.Exception;
    Code:
       0: getstatic     #26                 // Field methodCache:Ljava/util/concurrent/ConcurrentMap;
       3: aload_0
       4: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #28                 // class java/lang/reflect/Method
      12: astore_1
      13: aload_1
      14: ifnonnull     39
      17: aload_0
      18: ldc           #29                 // String newBuilder
      20: iconst_0
      21: anewarray     #30                 // class java/lang/Class
      24: invokevirtual #31                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      27: astore_1
      28: getstatic     #26                 // Field methodCache:Ljava/util/concurrent/ConcurrentMap;
      31: aload_0
      32: aload_1
      33: invokeinterface #32,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: aload_1
      40: aload_0
      41: iconst_0
      42: anewarray     #33                 // class java/lang/Object
      45: invokevirtual #34                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #35                 // class com/google/protobuf/Message$Builder
      51: areturn

  public java.util.List<org.springframework.util.MimeType> getDecodableMimeTypes();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method getMimeTypes:()Ljava/util/List;
       4: areturn

  private com.google.protobuf.Message lambda$decodeToMono$0(org.springframework.core.ResolvableType, org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
       4: invokestatic  #1                  // Method getMessageBuilder:(Ljava/lang/Class;)Lcom/google/protobuf/Message$Builder;
       7: astore_3
       8: aload_2
       9: invokeinterface #37,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.asByteBuffer:()Ljava/nio/ByteBuffer;
      14: astore        4
      16: aload_3
      17: aload         4
      19: invokestatic  #38                 // Method com/google/protobuf/CodedInputStream.newInstance:(Ljava/nio/ByteBuffer;)Lcom/google/protobuf/CodedInputStream;
      22: aload_0
      23: getfield      #2                  // Field extensionRegistry:Lcom/google/protobuf/ExtensionRegistry;
      26: invokeinterface #39,  3           // InterfaceMethod com/google/protobuf/Message$Builder.mergeFrom:(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
      31: pop
      32: aload_3
      33: invokeinterface #40,  1           // InterfaceMethod com/google/protobuf/Message$Builder.build:()Lcom/google/protobuf/Message;
      38: astore        5
      40: aload_2
      41: invokestatic  #41                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      44: pop
      45: aload         5
      47: areturn
      48: astore_3
      49: new           #43                 // class org/springframework/core/codec/DecodingException
      52: dup
      53: ldc           #44                 // String I/O error while parsing input stream
      55: aload_3
      56: invokespecial #45                 // Method org/springframework/core/codec/DecodingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      59: athrow
      60: astore_3
      61: new           #43                 // class org/springframework/core/codec/DecodingException
      64: dup
      65: new           #47                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #49                 // String Could not read Protobuf message:
      74: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_3
      78: invokevirtual #51                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      81: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: aload_3
      88: invokespecial #45                 // Method org/springframework/core/codec/DecodingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      91: athrow
      92: astore        6
      94: aload_2
      95: invokestatic  #41                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      98: pop
      99: aload         6
     101: athrow
    Exception table:
       from    to  target type
           0    40    48   Class java/io/IOException
           0    40    60   Class java/lang/Exception
           0    40    92   any
          48    94    92   any

  static com.google.protobuf.ExtensionRegistry access$000(org.springframework.http.codec.protobuf.ProtobufDecoder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field extensionRegistry:Lcom/google/protobuf/ExtensionRegistry;
       4: areturn

  static com.google.protobuf.Message$Builder access$100(java.lang.Class) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method getMessageBuilder:(Ljava/lang/Class;)Lcom/google/protobuf/Message$Builder;
       4: areturn

  static {};
    Code:
       0: new           #53                 // class org/springframework/util/ConcurrentReferenceHashMap
       3: dup
       4: invokespecial #54                 // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":()V
       7: putstatic     #26                 // Field methodCache:Ljava/util/concurrent/ConcurrentMap;
      10: return
}
