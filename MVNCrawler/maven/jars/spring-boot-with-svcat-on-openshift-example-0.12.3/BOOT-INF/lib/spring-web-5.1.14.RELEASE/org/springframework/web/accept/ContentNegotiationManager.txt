Compiled from "ContentNegotiationManager.java"
public class org.springframework.web.accept.ContentNegotiationManager implements org.springframework.web.accept.ContentNegotiationStrategy,org.springframework.web.accept.MediaTypeFileExtensionResolver {
  private final java.util.List<org.springframework.web.accept.ContentNegotiationStrategy> strategies;

  private final java.util.Set<org.springframework.web.accept.MediaTypeFileExtensionResolver> resolvers;

  public org.springframework.web.accept.ContentNegotiationManager(org.springframework.web.accept.ContentNegotiationStrategy...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokespecial #2                  // Method "<init>":(Ljava/util/Collection;)V
       8: return

  public org.springframework.web.accept.ContentNegotiationManager(java.util.Collection<org.springframework.web.accept.ContentNegotiationStrategy>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/ArrayList
       8: dup
       9: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #6                  // Field strategies:Ljava/util/List;
      15: aload_0
      16: new           #7                  // class java/util/LinkedHashSet
      19: dup
      20: invokespecial #8                  // Method java/util/LinkedHashSet."<init>":()V
      23: putfield      #9                  // Field resolvers:Ljava/util/Set;
      26: aload_1
      27: ldc           #10                 // String At least one ContentNegotiationStrategy is expected
      29: invokestatic  #11                 // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
      32: aload_0
      33: getfield      #6                  // Field strategies:Ljava/util/List;
      36: aload_1
      37: invokeinterface #12,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      42: pop
      43: aload_0
      44: getfield      #6                  // Field strategies:Ljava/util/List;
      47: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      52: astore_2
      53: aload_2
      54: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          96
      62: aload_2
      63: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #16                 // class org/springframework/web/accept/ContentNegotiationStrategy
      71: astore_3
      72: aload_3
      73: instanceof    #17                 // class org/springframework/web/accept/MediaTypeFileExtensionResolver
      76: ifeq          93
      79: aload_0
      80: getfield      #9                  // Field resolvers:Ljava/util/Set;
      83: aload_3
      84: checkcast     #17                 // class org/springframework/web/accept/MediaTypeFileExtensionResolver
      87: invokeinterface #18,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      92: pop
      93: goto          53
      96: return

  public org.springframework.web.accept.ContentNegotiationManager();
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #16                 // class org/springframework/web/accept/ContentNegotiationStrategy
       5: dup
       6: iconst_0
       7: new           #19                 // class org/springframework/web/accept/HeaderContentNegotiationStrategy
      10: dup
      11: invokespecial #20                 // Method org/springframework/web/accept/HeaderContentNegotiationStrategy."<init>":()V
      14: aastore
      15: invokespecial #21                 // Method "<init>":([Lorg/springframework/web/accept/ContentNegotiationStrategy;)V
      18: return

  public java.util.List<org.springframework.web.accept.ContentNegotiationStrategy> getStrategies();
    Code:
       0: aload_0
       1: getfield      #6                  // Field strategies:Ljava/util/List;
       4: areturn

  public <T extends org.springframework.web.accept.ContentNegotiationStrategy> T getStrategy(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getStrategies:()Ljava/util/List;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_2
      20: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #16                 // class org/springframework/web/accept/ContentNegotiationStrategy
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokevirtual #23                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      34: ifeq          39
      37: aload_3
      38: areturn
      39: goto          10
      42: aconst_null
      43: areturn

  public void addFileExtensionResolvers(org.springframework.web.accept.MediaTypeFileExtensionResolver...);
    Code:
       0: aload_0
       1: getfield      #9                  // Field resolvers:Ljava/util/Set;
       4: aload_1
       5: invokestatic  #24                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
       8: pop
       9: return

  public java.util.List<org.springframework.http.MediaType> resolveMediaTypes(org.springframework.web.context.request.NativeWebRequest) throws org.springframework.web.HttpMediaTypeNotAcceptableException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field strategies:Ljava/util/List;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          57
      19: aload_2
      20: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #16                 // class org/springframework/web/accept/ContentNegotiationStrategy
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #25,  2           // InterfaceMethod org/springframework/web/accept/ContentNegotiationStrategy.resolveMediaTypes:(Lorg/springframework/web/context/request/NativeWebRequest;)Ljava/util/List;
      36: astore        4
      38: aload         4
      40: getstatic     #26                 // Field MEDIA_TYPE_ALL_LIST:Ljava/util/List;
      43: invokeinterface #27,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      48: ifeq          54
      51: goto          10
      54: aload         4
      56: areturn
      57: getstatic     #26                 // Field MEDIA_TYPE_ALL_LIST:Ljava/util/List;
      60: areturn

  public java.util.List<java.lang.String> resolveFileExtensions(org.springframework.http.MediaType);
    Code:
       0: new           #7                  // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #8                  // Method java/util/LinkedHashSet."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #9                  // Field resolvers:Ljava/util/Set;
      12: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          56
      27: aload_3
      28: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #17                 // class org/springframework/web/accept/MediaTypeFileExtensionResolver
      36: astore        4
      38: aload_2
      39: aload         4
      41: aload_1
      42: invokeinterface #29,  2           // InterfaceMethod org/springframework/web/accept/MediaTypeFileExtensionResolver.resolveFileExtensions:(Lorg/springframework/http/MediaType;)Ljava/util/List;
      47: invokeinterface #30,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      52: pop
      53: goto          18
      56: new           #4                  // class java/util/ArrayList
      59: dup
      60: aload_2
      61: invokespecial #31                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      64: areturn

  public java.util.List<java.lang.String> getAllFileExtensions();
    Code:
       0: new           #7                  // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #8                  // Method java/util/LinkedHashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #9                  // Field resolvers:Ljava/util/Set;
      12: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          53
      27: aload_2
      28: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #17                 // class org/springframework/web/accept/MediaTypeFileExtensionResolver
      36: astore_3
      37: aload_1
      38: aload_3
      39: invokeinterface #32,  1           // InterfaceMethod org/springframework/web/accept/MediaTypeFileExtensionResolver.getAllFileExtensions:()Ljava/util/List;
      44: invokeinterface #30,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      49: pop
      50: goto          18
      53: new           #4                  // class java/util/ArrayList
      56: dup
      57: aload_1
      58: invokespecial #31                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      61: areturn
}
