Compiled from "MappingMediaTypeFileExtensionResolver.java"
public class org.springframework.web.accept.MappingMediaTypeFileExtensionResolver implements org.springframework.web.accept.MediaTypeFileExtensionResolver {
  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.springframework.http.MediaType> mediaTypes;

  private final java.util.concurrent.ConcurrentMap<org.springframework.http.MediaType, java.util.List<java.lang.String>> fileExtensions;

  private final java.util.List<java.lang.String> allFileExtensions;

  public org.springframework.web.accept.MappingMediaTypeFileExtensionResolver(java.util.Map<java.lang.String, org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: bipush        64
      11: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      14: putfield      #4                  // Field mediaTypes:Ljava/util/concurrent/ConcurrentMap;
      17: aload_0
      18: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      21: dup
      22: bipush        64
      24: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      27: putfield      #5                  // Field fileExtensions:Ljava/util/concurrent/ConcurrentMap;
      30: aload_0
      31: new           #6                  // class java/util/concurrent/CopyOnWriteArrayList
      34: dup
      35: invokespecial #7                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      38: putfield      #8                  // Field allFileExtensions:Ljava/util/List;
      41: aload_1
      42: ifnull        77
      45: new           #9                  // class java/util/ArrayList
      48: dup
      49: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      52: astore_2
      53: aload_1
      54: aload_0
      55: aload_2
      56: invokedynamic #11,  0             // InvokeDynamic #0:accept:(Lorg/springframework/web/accept/MappingMediaTypeFileExtensionResolver;Ljava/util/List;)Ljava/util/function/BiConsumer;
      61: invokeinterface #12,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      66: aload_0
      67: getfield      #8                  // Field allFileExtensions:Ljava/util/List;
      70: aload_2
      71: invokeinterface #13,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      76: pop
      77: return

  public java.util.Map<java.lang.String, org.springframework.http.MediaType> getMediaTypes();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mediaTypes:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  protected java.util.List<org.springframework.http.MediaType> getAllMediaTypes();
    Code:
       0: new           #9                  // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #4                  // Field mediaTypes:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      13: invokespecial #15                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      16: areturn

  protected void addMapping(java.lang.String, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #4                  // Field mediaTypes:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #16,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #17                 // class org/springframework/http/MediaType
      14: astore_3
      15: aload_3
      16: ifnonnull     36
      19: aload_0
      20: aload_2
      21: aload_1
      22: invokespecial #18                 // Method addFileExtension:(Lorg/springframework/http/MediaType;Ljava/lang/String;)V
      25: aload_0
      26: getfield      #8                  // Field allFileExtensions:Ljava/util/List;
      29: aload_1
      30: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      35: pop
      36: return

  private void addFileExtension(org.springframework.http.MediaType, java.lang.String);
    Code:
       0: new           #6                  // class java/util/concurrent/CopyOnWriteArrayList
       3: dup
       4: invokespecial #7                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
       7: astore_3
       8: aload_0
       9: getfield      #5                  // Field fileExtensions:Ljava/util/concurrent/ConcurrentMap;
      12: aload_1
      13: aload_3
      14: invokeinterface #16,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #20                 // class java/util/List
      22: astore        4
      24: aload         4
      26: ifnull        34
      29: aload         4
      31: goto          35
      34: aload_3
      35: aload_2
      36: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      41: pop
      42: return

  public java.util.List<java.lang.String> resolveFileExtensions(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #5                  // Field fileExtensions:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #20                 // class java/util/List
      13: astore_2
      14: aload_2
      15: ifnull        22
      18: aload_2
      19: goto          25
      22: invokestatic  #22                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      25: areturn

  public java.util.List<java.lang.String> getAllFileExtensions();
    Code:
       0: aload_0
       1: getfield      #8                  // Field allFileExtensions:Ljava/util/List;
       4: invokestatic  #23                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  protected org.springframework.http.MediaType lookupMediaType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field mediaTypes:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: getstatic     #24                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
       8: invokevirtual #25                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      11: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #17                 // class org/springframework/http/MediaType
      19: areturn

  private void lambda$new$0(java.util.List, java.lang.String, org.springframework.http.MediaType);
    Code:
       0: aload_2
       1: getstatic     #24                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
       4: invokevirtual #25                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
       7: astore        4
       9: aload_0
      10: getfield      #4                  // Field mediaTypes:Ljava/util/concurrent/ConcurrentMap;
      13: aload         4
      15: aload_3
      16: invokeinterface #26,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: aload_0
      23: aload_3
      24: aload         4
      26: invokespecial #18                 // Method addFileExtension:(Lorg/springframework/http/MediaType;Ljava/lang/String;)V
      29: aload_1
      30: aload         4
      32: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      37: pop
      38: return
}
