Compiled from "ProtobufHttpMessageWriter.java"
public class org.springframework.http.codec.protobuf.ProtobufHttpMessageWriter extends org.springframework.http.codec.EncoderHttpMessageWriter<com.google.protobuf.Message> {
  private static final java.lang.String X_PROTOBUF_SCHEMA_HEADER;

  private static final java.lang.String X_PROTOBUF_MESSAGE_HEADER;

  private static final java.util.concurrent.ConcurrentMap<java.lang.Class<?>, java.lang.reflect.Method> methodCache;

  public org.springframework.http.codec.protobuf.ProtobufHttpMessageWriter();
    Code:
       0: aload_0
       1: new           #1                  // class org/springframework/http/codec/protobuf/ProtobufEncoder
       4: dup
       5: invokespecial #2                  // Method org/springframework/http/codec/protobuf/ProtobufEncoder."<init>":()V
       8: invokespecial #3                  // Method org/springframework/http/codec/EncoderHttpMessageWriter."<init>":(Lorg/springframework/core/codec/Encoder;)V
      11: return

  public org.springframework.http.codec.protobuf.ProtobufHttpMessageWriter(org.springframework.core.codec.Encoder<com.google.protobuf.Message>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method org/springframework/http/codec/EncoderHttpMessageWriter."<init>":(Lorg/springframework/core/codec/Encoder;)V
       5: return

  public reactor.core.publisher.Mono<java.lang.Void> write(org.reactivestreams.Publisher<? extends com.google.protobuf.Message>, org.springframework.core.ResolvableType, org.springframework.http.MediaType, org.springframework.http.ReactiveHttpOutputMessage, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_2
       1: invokevirtual #4                  // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
       4: invokestatic  #5                  // Method getMessageBuilder:(Ljava/lang/Class;)Lcom/google/protobuf/Message$Builder;
       7: astore        6
       9: aload         6
      11: invokeinterface #6,  1            // InterfaceMethod com/google/protobuf/Message$Builder.getDescriptorForType:()Lcom/google/protobuf/Descriptors$Descriptor;
      16: astore        7
      18: aload         4
      20: invokeinterface #7,  1            // InterfaceMethod org/springframework/http/ReactiveHttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
      25: ldc           #9                  // String X-Protobuf-Schema
      27: aload         7
      29: invokevirtual #10                 // Method com/google/protobuf/Descriptors$Descriptor.getFile:()Lcom/google/protobuf/Descriptors$FileDescriptor;
      32: invokevirtual #11                 // Method com/google/protobuf/Descriptors$FileDescriptor.getName:()Ljava/lang/String;
      35: invokevirtual #12                 // Method org/springframework/http/HttpHeaders.add:(Ljava/lang/String;Ljava/lang/String;)V
      38: aload         4
      40: invokeinterface #7,  1            // InterfaceMethod org/springframework/http/ReactiveHttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
      45: ldc           #13                 // String X-Protobuf-Message
      47: aload         7
      49: invokevirtual #14                 // Method com/google/protobuf/Descriptors$Descriptor.getFullName:()Ljava/lang/String;
      52: invokevirtual #12                 // Method org/springframework/http/HttpHeaders.add:(Ljava/lang/String;Ljava/lang/String;)V
      55: aload_1
      56: instanceof    #15                 // class reactor/core/publisher/Flux
      59: ifeq          171
      62: aload_3
      63: ifnonnull     100
      66: aload         4
      68: invokeinterface #7,  1            // InterfaceMethod org/springframework/http/ReactiveHttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
      73: aload_0
      74: invokevirtual #16                 // Method getEncoder:()Lorg/springframework/core/codec/Encoder;
      77: checkcast     #17                 // class org/springframework/http/codec/HttpMessageEncoder
      80: invokeinterface #18,  1           // InterfaceMethod org/springframework/http/codec/HttpMessageEncoder.getStreamingMediaTypes:()Ljava/util/List;
      85: iconst_0
      86: invokeinterface #19,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      91: checkcast     #20                 // class org/springframework/http/MediaType
      94: invokevirtual #21                 // Method org/springframework/http/HttpHeaders.setContentType:(Lorg/springframework/http/MediaType;)V
      97: goto          171
     100: ldc           #22                 // String true
     102: aload_3
     103: invokevirtual #23                 // Method org/springframework/http/MediaType.getParameters:()Ljava/util/Map;
     106: ldc           #24                 // String delimited
     108: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     113: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     116: ifne          171
     119: new           #27                 // class java/util/HashMap
     122: dup
     123: aload_3
     124: invokevirtual #23                 // Method org/springframework/http/MediaType.getParameters:()Ljava/util/Map;
     127: invokespecial #28                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
     130: astore        8
     132: aload         8
     134: ldc           #24                 // String delimited
     136: ldc           #22                 // String true
     138: invokeinterface #29,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     143: pop
     144: aload         4
     146: invokeinterface #7,  1            // InterfaceMethod org/springframework/http/ReactiveHttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
     151: new           #20                 // class org/springframework/http/MediaType
     154: dup
     155: aload_3
     156: invokevirtual #30                 // Method org/springframework/http/MediaType.getType:()Ljava/lang/String;
     159: aload_3
     160: invokevirtual #31                 // Method org/springframework/http/MediaType.getSubtype:()Ljava/lang/String;
     163: aload         8
     165: invokespecial #32                 // Method org/springframework/http/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
     168: invokevirtual #21                 // Method org/springframework/http/HttpHeaders.setContentType:(Lorg/springframework/http/MediaType;)V
     171: aload_0
     172: aload_1
     173: aload_2
     174: aload_3
     175: aload         4
     177: aload         5
     179: invokespecial #33                 // Method org/springframework/http/codec/EncoderHttpMessageWriter.write:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
     182: areturn
     183: astore        6
     185: new           #35                 // class org/springframework/core/codec/DecodingException
     188: dup
     189: new           #36                 // class java/lang/StringBuilder
     192: dup
     193: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     196: ldc           #38                 // String Could not read Protobuf message:
     198: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: aload         6
     203: invokevirtual #40                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     206: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     212: aload         6
     214: invokespecial #42                 // Method org/springframework/core/codec/DecodingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     217: invokestatic  #43                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
     220: areturn
    Exception table:
       from    to  target type
           0   182   183   Class java/lang/Exception

  private static com.google.protobuf.Message$Builder getMessageBuilder(java.lang.Class<?>) throws java.lang.Exception;
    Code:
       0: getstatic     #44                 // Field methodCache:Ljava/util/concurrent/ConcurrentMap;
       3: aload_0
       4: invokeinterface #45,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #46                 // class java/lang/reflect/Method
      12: astore_1
      13: aload_1
      14: ifnonnull     39
      17: aload_0
      18: ldc           #47                 // String newBuilder
      20: iconst_0
      21: anewarray     #48                 // class java/lang/Class
      24: invokevirtual #49                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      27: astore_1
      28: getstatic     #44                 // Field methodCache:Ljava/util/concurrent/ConcurrentMap;
      31: aload_0
      32: aload_1
      33: invokeinterface #50,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: aload_1
      40: aload_0
      41: iconst_0
      42: anewarray     #51                 // class java/lang/Object
      45: invokevirtual #52                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #53                 // class com/google/protobuf/Message$Builder
      51: areturn

  static {};
    Code:
       0: new           #54                 // class org/springframework/util/ConcurrentReferenceHashMap
       3: dup
       4: invokespecial #55                 // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":()V
       7: putstatic     #44                 // Field methodCache:Ljava/util/concurrent/ConcurrentMap;
      10: return
}
