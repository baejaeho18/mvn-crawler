Compiled from "OkHttp3ClientHttpResponse.java"
class org.springframework.http.client.OkHttp3ClientHttpResponse extends org.springframework.http.client.AbstractClientHttpResponse {
  private final okhttp3.Response response;

  private volatile org.springframework.http.HttpHeaders headers;

  public org.springframework.http.client.OkHttp3ClientHttpResponse(okhttp3.Response);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/http/client/AbstractClientHttpResponse."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Response must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field response:Lokhttp3/Response;
      15: return

  public int getRawStatusCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field response:Lokhttp3/Response;
       4: invokevirtual #5                  // Method okhttp3/Response.code:()I
       7: ireturn

  public java.lang.String getStatusText();
    Code:
       0: aload_0
       1: getfield      #4                  // Field response:Lokhttp3/Response;
       4: invokevirtual #6                  // Method okhttp3/Response.message:()Ljava/lang/String;
       7: areturn

  public java.io.InputStream getBody() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field response:Lokhttp3/Response;
       4: invokevirtual #7                  // Method okhttp3/Response.body:()Lokhttp3/ResponseBody;
       7: astore_1
       8: aload_1
       9: ifnull        19
      12: aload_1
      13: invokevirtual #8                  // Method okhttp3/ResponseBody.byteStream:()Ljava/io/InputStream;
      16: goto          22
      19: invokestatic  #9                  // Method org/springframework/util/StreamUtils.emptyInput:()Ljava/io/InputStream;
      22: areturn

  public org.springframework.http.HttpHeaders getHeaders();
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Lorg/springframework/http/HttpHeaders;
       4: astore_1
       5: aload_1
       6: ifnonnull     107
       9: new           #11                 // class org/springframework/http/HttpHeaders
      12: dup
      13: invokespecial #12                 // Method org/springframework/http/HttpHeaders."<init>":()V
      16: astore_1
      17: aload_0
      18: getfield      #4                  // Field response:Lokhttp3/Response;
      21: invokevirtual #13                 // Method okhttp3/Response.headers:()Lokhttp3/Headers;
      24: invokevirtual #14                 // Method okhttp3/Headers.names:()Ljava/util/Set;
      27: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      32: astore_2
      33: aload_2
      34: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          102
      42: aload_2
      43: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #18                 // class java/lang/String
      51: astore_3
      52: aload_0
      53: getfield      #4                  // Field response:Lokhttp3/Response;
      56: aload_3
      57: invokevirtual #19                 // Method okhttp3/Response.headers:(Ljava/lang/String;)Ljava/util/List;
      60: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      65: astore        4
      67: aload         4
      69: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      74: ifeq          99
      77: aload         4
      79: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      84: checkcast     #18                 // class java/lang/String
      87: astore        5
      89: aload_1
      90: aload_3
      91: aload         5
      93: invokevirtual #21                 // Method org/springframework/http/HttpHeaders.add:(Ljava/lang/String;Ljava/lang/String;)V
      96: goto          67
      99: goto          33
     102: aload_0
     103: aload_1
     104: putfield      #10                 // Field headers:Lorg/springframework/http/HttpHeaders;
     107: aload_1
     108: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #4                  // Field response:Lokhttp3/Response;
       4: invokevirtual #7                  // Method okhttp3/Response.body:()Lokhttp3/ResponseBody;
       7: astore_1
       8: aload_1
       9: ifnull        16
      12: aload_1
      13: invokevirtual #22                 // Method okhttp3/ResponseBody.close:()V
      16: return
}
