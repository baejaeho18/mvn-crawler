Compiled from "ServletServerHttpResponse.java"
class org.springframework.http.server.reactive.ServletServerHttpResponse extends org.springframework.http.server.reactive.AbstractListenerServerHttpResponse {
  private final javax.servlet.http.HttpServletResponse response;

  private final javax.servlet.ServletOutputStream outputStream;

  private final int bufferSize;

  private volatile org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseBodyFlushProcessor bodyFlushProcessor;

  private volatile org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseBodyProcessor bodyProcessor;

  private volatile boolean flushOnNext;

  private final org.springframework.http.server.reactive.ServletServerHttpRequest request;

  public org.springframework.http.server.reactive.ServletServerHttpResponse(javax.servlet.http.HttpServletResponse, javax.servlet.AsyncContext, org.springframework.core.io.buffer.DataBufferFactory, int, org.springframework.http.server.reactive.ServletServerHttpRequest) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #7                  // class org/springframework/http/HttpHeaders
       4: dup
       5: invokespecial #8                  // Method org/springframework/http/HttpHeaders."<init>":()V
       8: aload_1
       9: aload_2
      10: aload_3
      11: iload         4
      13: aload         5
      15: invokespecial #9                  // Method "<init>":(Lorg/springframework/http/HttpHeaders;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/AsyncContext;Lorg/springframework/core/io/buffer/DataBufferFactory;ILorg/springframework/http/server/reactive/ServletServerHttpRequest;)V
      18: return

  public org.springframework.http.server.reactive.ServletServerHttpResponse(org.springframework.http.HttpHeaders, javax.servlet.http.HttpServletResponse, javax.servlet.AsyncContext, org.springframework.core.io.buffer.DataBufferFactory, int, org.springframework.http.server.reactive.ServletServerHttpRequest) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload         4
       3: aload_1
       4: invokespecial #10                 // Method org/springframework/http/server/reactive/AbstractListenerServerHttpResponse."<init>":(Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/http/HttpHeaders;)V
       7: aload_2
       8: ldc           #11                 // String HttpServletResponse must not be null
      10: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      13: aload         4
      15: ldc           #13                 // String DataBufferFactory must not be null
      17: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      20: iload         5
      22: ifle          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ldc           #14                 // String Buffer size must be greater than 0
      32: invokestatic  #15                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      35: aload_0
      36: aload_2
      37: putfield      #16                 // Field response:Ljavax/servlet/http/HttpServletResponse;
      40: aload_0
      41: aload_2
      42: invokeinterface #17,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getOutputStream:()Ljavax/servlet/ServletOutputStream;
      47: putfield      #18                 // Field outputStream:Ljavax/servlet/ServletOutputStream;
      50: aload_0
      51: iload         5
      53: putfield      #19                 // Field bufferSize:I
      56: aload_0
      57: aload         6
      59: putfield      #4                  // Field request:Lorg/springframework/http/server/reactive/ServletServerHttpRequest;
      62: aload_3
      63: new           #20                 // class org/springframework/http/server/reactive/ServletServerHttpResponse$ResponseAsyncListener
      66: dup
      67: aload_0
      68: aconst_null
      69: invokespecial #21                 // Method org/springframework/http/server/reactive/ServletServerHttpResponse$ResponseAsyncListener."<init>":(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;Lorg/springframework/http/server/reactive/ServletServerHttpResponse$1;)V
      72: invokeinterface #22,  2           // InterfaceMethod javax/servlet/AsyncContext.addListener:(Ljavax/servlet/AsyncListener;)V
      77: aload_2
      78: invokeinterface #17,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getOutputStream:()Ljavax/servlet/ServletOutputStream;
      83: new           #23                 // class org/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyWriteListener
      86: dup
      87: aload_0
      88: aconst_null
      89: invokespecial #24                 // Method org/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyWriteListener."<init>":(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;Lorg/springframework/http/server/reactive/ServletServerHttpResponse$1;)V
      92: invokevirtual #25                 // Method javax/servlet/ServletOutputStream.setWriteListener:(Ljavax/servlet/WriteListener;)V
      95: return

  public <T> T getNativeResponse();
    Code:
       0: aload_0
       1: getfield      #16                 // Field response:Ljavax/servlet/http/HttpServletResponse;
       4: areturn

  public org.springframework.http.HttpStatus getStatusCode();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method org/springframework/http/server/reactive/AbstractListenerServerHttpResponse.getStatusCode:()Lorg/springframework/http/HttpStatus;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: goto          25
      13: aload_0
      14: getfield      #16                 // Field response:Ljavax/servlet/http/HttpServletResponse;
      17: invokeinterface #27,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getStatus:()I
      22: invokestatic  #28                 // Method org/springframework/http/HttpStatus.resolve:(I)Lorg/springframework/http/HttpStatus;
      25: areturn

  protected void applyStatusCode();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getStatusCodeValue:()Ljava/lang/Integer;
       4: astore_1
       5: aload_1
       6: ifnull        22
       9: aload_0
      10: getfield      #16                 // Field response:Ljavax/servlet/http/HttpServletResponse;
      13: aload_1
      14: invokevirtual #30                 // Method java/lang/Integer.intValue:()I
      17: invokeinterface #31,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setStatus:(I)V
      22: return

  protected void applyHeaders();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method getHeaders:()Lorg/springframework/http/HttpHeaders;
       4: aload_0
       5: invokedynamic #33,  0             // InvokeDynamic #0:accept:(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;)Ljava/util/function/BiConsumer;
      10: invokevirtual #34                 // Method org/springframework/http/HttpHeaders.forEach:(Ljava/util/function/BiConsumer;)V
      13: aconst_null
      14: astore_1
      15: aload_0
      16: invokevirtual #32                 // Method getHeaders:()Lorg/springframework/http/HttpHeaders;
      19: invokevirtual #35                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      22: astore_1
      23: goto          47
      26: astore_2
      27: aload_0
      28: invokevirtual #32                 // Method getHeaders:()Lorg/springframework/http/HttpHeaders;
      31: ldc           #37                 // String Content-Type
      33: invokevirtual #38                 // Method org/springframework/http/HttpHeaders.getFirst:(Ljava/lang/String;)Ljava/lang/String;
      36: astore_3
      37: aload_0
      38: getfield      #16                 // Field response:Ljavax/servlet/http/HttpServletResponse;
      41: aload_3
      42: invokeinterface #39,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setContentType:(Ljava/lang/String;)V
      47: aload_0
      48: getfield      #16                 // Field response:Ljavax/servlet/http/HttpServletResponse;
      51: invokeinterface #40,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getContentType:()Ljava/lang/String;
      56: ifnonnull     76
      59: aload_1
      60: ifnull        76
      63: aload_0
      64: getfield      #16                 // Field response:Ljavax/servlet/http/HttpServletResponse;
      67: aload_1
      68: invokevirtual #41                 // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      71: invokeinterface #39,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setContentType:(Ljava/lang/String;)V
      76: aload_1
      77: ifnull        87
      80: aload_1
      81: invokevirtual #42                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
      84: goto          88
      87: aconst_null
      88: astore_2
      89: aload_0
      90: getfield      #16                 // Field response:Ljavax/servlet/http/HttpServletResponse;
      93: invokeinterface #43,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getCharacterEncoding:()Ljava/lang/String;
      98: ifnonnull     118
     101: aload_2
     102: ifnull        118
     105: aload_0
     106: getfield      #16                 // Field response:Ljavax/servlet/http/HttpServletResponse;
     109: aload_2
     110: invokevirtual #44                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
     113: invokeinterface #45,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setCharacterEncoding:(Ljava/lang/String;)V
     118: aload_0
     119: invokevirtual #32                 // Method getHeaders:()Lorg/springframework/http/HttpHeaders;
     122: invokevirtual #46                 // Method org/springframework/http/HttpHeaders.getContentLength:()J
     125: lstore_3
     126: lload_3
     127: ldc2_w        #47                 // long -1l
     130: lcmp
     131: ifeq          144
     134: aload_0
     135: getfield      #16                 // Field response:Ljavax/servlet/http/HttpServletResponse;
     138: lload_3
     139: invokeinterface #49,  3           // InterfaceMethod javax/servlet/http/HttpServletResponse.setContentLengthLong:(J)V
     144: return
    Exception table:
       from    to  target type
          15    23    26   Class java/lang/Exception

  protected void applyCookies();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getCookies:()Lorg/springframework/util/MultiValueMap;
       4: invokeinterface #51,  1           // InterfaceMethod org/springframework/util/MultiValueMap.values:()Ljava/util/Collection;
       9: invokeinterface #52,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          83
      24: aload_1
      25: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #55                 // class java/util/List
      33: astore_2
      34: aload_2
      35: invokeinterface #56,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      40: astore_3
      41: aload_3
      42: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          80
      50: aload_3
      51: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #57                 // class org/springframework/http/ResponseCookie
      59: astore        4
      61: aload_0
      62: getfield      #16                 // Field response:Ljavax/servlet/http/HttpServletResponse;
      65: ldc           #58                 // String Set-Cookie
      67: aload         4
      69: invokevirtual #59                 // Method org/springframework/http/ResponseCookie.toString:()Ljava/lang/String;
      72: invokeinterface #60,  3           // InterfaceMethod javax/servlet/http/HttpServletResponse.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      77: goto          41
      80: goto          15
      83: return

  protected org.reactivestreams.Processor<? super org.reactivestreams.Publisher<? extends org.springframework.core.io.buffer.DataBuffer>, java.lang.Void> createBodyFlushProcessor();
    Code:
       0: new           #61                 // class org/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyFlushProcessor
       3: dup
       4: aload_0
       5: invokespecial #62                 // Method org/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyFlushProcessor."<init>":(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;)V
       8: astore_1
       9: aload_0
      10: aload_1
      11: putfield      #6                  // Field bodyFlushProcessor:Lorg/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyFlushProcessor;
      14: aload_1
      15: areturn

  protected int writeToOutputStream(org.springframework.core.io.buffer.DataBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field outputStream:Ljavax/servlet/ServletOutputStream;
       4: astore_2
       5: aload_1
       6: invokeinterface #63,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.asInputStream:()Ljava/io/InputStream;
      11: astore_3
      12: iconst_0
      13: istore        4
      15: aload_0
      16: getfield      #19                 // Field bufferSize:I
      19: newarray       byte
      21: astore        5
      23: aload_2
      24: invokevirtual #64                 // Method javax/servlet/ServletOutputStream.isReady:()Z
      27: ifeq          62
      30: aload_3
      31: aload         5
      33: invokevirtual #65                 // Method java/io/InputStream.read:([B)I
      36: dup
      37: istore        6
      39: iconst_m1
      40: if_icmpeq     62
      43: aload_2
      44: aload         5
      46: iconst_0
      47: iload         6
      49: invokevirtual #66                 // Method javax/servlet/ServletOutputStream.write:([BII)V
      52: iload         4
      54: iload         6
      56: iadd
      57: istore        4
      59: goto          23
      62: iload         4
      64: ireturn

  private void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field outputStream:Ljavax/servlet/ServletOutputStream;
       4: astore_1
       5: aload_1
       6: invokevirtual #64                 // Method javax/servlet/ServletOutputStream.isReady:()Z
       9: ifeq          32
      12: aload_1
      13: invokevirtual #67                 // Method javax/servlet/ServletOutputStream.flush:()V
      16: aload_0
      17: iconst_0
      18: putfield      #1                  // Field flushOnNext:Z
      21: goto          37
      24: astore_2
      25: aload_0
      26: iconst_1
      27: putfield      #1                  // Field flushOnNext:Z
      30: aload_2
      31: athrow
      32: aload_0
      33: iconst_1
      34: putfield      #1                  // Field flushOnNext:Z
      37: return
    Exception table:
       from    to  target type
          12    21    24   Class java/io/IOException

  private boolean isWritePossible();
    Code:
       0: aload_0
       1: getfield      #18                 // Field outputStream:Ljavax/servlet/ServletOutputStream;
       4: invokevirtual #64                 // Method javax/servlet/ServletOutputStream.isReady:()Z
       7: ireturn

  private void lambda$applyHeaders$0(java.lang.String, java.util.List);
    Code:
       0: aload_2
       1: invokeinterface #56,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          42
      16: aload_3
      17: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #69                 // class java/lang/String
      25: astore        4
      27: aload_0
      28: getfield      #16                 // Field response:Ljavax/servlet/http/HttpServletResponse;
      31: aload_1
      32: aload         4
      34: invokeinterface #60,  3           // InterfaceMethod javax/servlet/http/HttpServletResponse.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      39: goto          7
      42: return

  static org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseBodyFlushProcessor access$200(org.springframework.http.server.reactive.ServletServerHttpResponse);
    Code:
       0: aload_0
       1: getfield      #6                  // Field bodyFlushProcessor:Lorg/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyFlushProcessor;
       4: areturn

  static org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseBodyProcessor access$300(org.springframework.http.server.reactive.ServletServerHttpResponse);
    Code:
       0: aload_0
       1: getfield      #5                  // Field bodyProcessor:Lorg/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyProcessor;
       4: areturn

  static org.springframework.http.server.reactive.ServletServerHttpRequest access$400(org.springframework.http.server.reactive.ServletServerHttpResponse);
    Code:
       0: aload_0
       1: getfield      #4                  // Field request:Lorg/springframework/http/server/reactive/ServletServerHttpRequest;
       4: areturn

  static org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseBodyProcessor access$302(org.springframework.http.server.reactive.ServletServerHttpResponse, org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseBodyProcessor);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field bodyProcessor:Lorg/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyProcessor;
       6: areturn

  static void access$500(org.springframework.http.server.reactive.ServletServerHttpResponse) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method flush:()V
       4: return

  static boolean access$600(org.springframework.http.server.reactive.ServletServerHttpResponse);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method isWritePossible:()Z
       4: ireturn

  static boolean access$700(org.springframework.http.server.reactive.ServletServerHttpResponse);
    Code:
       0: aload_0
       1: getfield      #1                  // Field flushOnNext:Z
       4: ireturn
}
