Compiled from "ReactorResourceFactory.java"
public class org.springframework.http.client.reactive.ReactorResourceFactory implements org.springframework.beans.factory.InitializingBean,org.springframework.beans.factory.DisposableBean {
  private boolean useGlobalResources;

  private java.util.function.Consumer<reactor.netty.http.HttpResources> globalResourcesConsumer;

  private java.util.function.Supplier<reactor.netty.resources.ConnectionProvider> connectionProviderSupplier;

  private java.util.function.Supplier<reactor.netty.resources.LoopResources> loopResourcesSupplier;

  private reactor.netty.resources.ConnectionProvider connectionProvider;

  private reactor.netty.resources.LoopResources loopResources;

  private boolean manageConnectionProvider;

  private boolean manageLoopResources;

  public org.springframework.http.client.reactive.ReactorResourceFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field useGlobalResources:Z
       9: aload_0
      10: invokedynamic #3,  0              // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      15: putfield      #4                  // Field connectionProviderSupplier:Ljava/util/function/Supplier;
      18: aload_0
      19: invokedynamic #5,  0              // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
      24: putfield      #6                  // Field loopResourcesSupplier:Ljava/util/function/Supplier;
      27: aload_0
      28: iconst_0
      29: putfield      #7                  // Field manageConnectionProvider:Z
      32: aload_0
      33: iconst_0
      34: putfield      #8                  // Field manageLoopResources:Z
      37: return

  public void setUseGlobalResources(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field useGlobalResources:Z
       5: return

  public boolean isUseGlobalResources();
    Code:
       0: aload_0
       1: getfield      #2                  // Field useGlobalResources:Z
       4: ireturn

  public void addGlobalResourcesConsumer(java.util.function.Consumer<reactor.netty.http.HttpResources>);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field useGlobalResources:Z
       5: aload_0
       6: aload_0
       7: getfield      #9                  // Field globalResourcesConsumer:Ljava/util/function/Consumer;
      10: ifnull        26
      13: aload_0
      14: getfield      #9                  // Field globalResourcesConsumer:Ljava/util/function/Consumer;
      17: aload_1
      18: invokeinterface #10,  2           // InterfaceMethod java/util/function/Consumer.andThen:(Ljava/util/function/Consumer;)Ljava/util/function/Consumer;
      23: goto          27
      26: aload_1
      27: putfield      #9                  // Field globalResourcesConsumer:Ljava/util/function/Consumer;
      30: return

  public void setConnectionProviderSupplier(java.util.function.Supplier<reactor.netty.resources.ConnectionProvider>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field connectionProviderSupplier:Ljava/util/function/Supplier;
       5: return

  public void setLoopResourcesSupplier(java.util.function.Supplier<reactor.netty.resources.LoopResources>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field loopResourcesSupplier:Ljava/util/function/Supplier;
       5: return

  public void setConnectionProvider(reactor.netty.resources.ConnectionProvider);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field connectionProvider:Lreactor/netty/resources/ConnectionProvider;
       5: return

  public reactor.netty.resources.ConnectionProvider getConnectionProvider();
    Code:
       0: aload_0
       1: getfield      #11                 // Field connectionProvider:Lreactor/netty/resources/ConnectionProvider;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #12                 // String ConnectionProvider not initialized yet
      14: invokestatic  #13                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #11                 // Field connectionProvider:Lreactor/netty/resources/ConnectionProvider;
      21: areturn

  public void setLoopResources(reactor.netty.resources.LoopResources);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field loopResources:Lreactor/netty/resources/LoopResources;
       5: return

  public reactor.netty.resources.LoopResources getLoopResources();
    Code:
       0: aload_0
       1: getfield      #14                 // Field loopResources:Lreactor/netty/resources/LoopResources;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #15                 // String LoopResources not initialized yet
      14: invokestatic  #13                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #14                 // Field loopResources:Lreactor/netty/resources/LoopResources;
      21: areturn

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: getfield      #2                  // Field useGlobalResources:Z
       4: ifeq          65
       7: aload_0
       8: getfield      #14                 // Field loopResources:Lreactor/netty/resources/LoopResources;
      11: ifnonnull     25
      14: aload_0
      15: getfield      #11                 // Field connectionProvider:Lreactor/netty/resources/ConnectionProvider;
      18: ifnonnull     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ldc           #16                 // String \'useGlobalResources\' is mutually exclusive with explicitly configured resources
      28: invokestatic  #17                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      31: invokestatic  #18                 // Method reactor/netty/http/HttpResources.get:()Lreactor/netty/http/HttpResources;
      34: astore_1
      35: aload_0
      36: getfield      #9                  // Field globalResourcesConsumer:Ljava/util/function/Consumer;
      39: ifnull        52
      42: aload_0
      43: getfield      #9                  // Field globalResourcesConsumer:Ljava/util/function/Consumer;
      46: aload_1
      47: invokeinterface #19,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      52: aload_0
      53: aload_1
      54: putfield      #11                 // Field connectionProvider:Lreactor/netty/resources/ConnectionProvider;
      57: aload_0
      58: aload_1
      59: putfield      #14                 // Field loopResources:Lreactor/netty/resources/LoopResources;
      62: goto          121
      65: aload_0
      66: getfield      #14                 // Field loopResources:Lreactor/netty/resources/LoopResources;
      69: ifnonnull     93
      72: aload_0
      73: iconst_1
      74: putfield      #8                  // Field manageLoopResources:Z
      77: aload_0
      78: aload_0
      79: getfield      #6                  // Field loopResourcesSupplier:Ljava/util/function/Supplier;
      82: invokeinterface #20,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      87: checkcast     #21                 // class reactor/netty/resources/LoopResources
      90: putfield      #14                 // Field loopResources:Lreactor/netty/resources/LoopResources;
      93: aload_0
      94: getfield      #11                 // Field connectionProvider:Lreactor/netty/resources/ConnectionProvider;
      97: ifnonnull     121
     100: aload_0
     101: iconst_1
     102: putfield      #7                  // Field manageConnectionProvider:Z
     105: aload_0
     106: aload_0
     107: getfield      #4                  // Field connectionProviderSupplier:Ljava/util/function/Supplier;
     110: invokeinterface #20,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
     115: checkcast     #22                 // class reactor/netty/resources/ConnectionProvider
     118: putfield      #11                 // Field connectionProvider:Lreactor/netty/resources/ConnectionProvider;
     121: return

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field useGlobalResources:Z
       4: ifeq          17
       7: invokestatic  #23                 // Method reactor/netty/http/HttpResources.disposeLoopsAndConnectionsLater:()Lreactor/core/publisher/Mono;
      10: invokevirtual #24                 // Method reactor/core/publisher/Mono.block:()Ljava/lang/Object;
      13: pop
      14: goto          77
      17: aload_0
      18: getfield      #11                 // Field connectionProvider:Lreactor/netty/resources/ConnectionProvider;
      21: astore_1
      22: aload_1
      23: ifnull        43
      26: aload_0
      27: getfield      #7                  // Field manageConnectionProvider:Z
      30: ifeq          43
      33: aload_1
      34: invokeinterface #25,  1           // InterfaceMethod reactor/netty/resources/ConnectionProvider.disposeLater:()Lreactor/core/publisher/Mono;
      39: invokevirtual #24                 // Method reactor/core/publisher/Mono.block:()Ljava/lang/Object;
      42: pop
      43: goto          47
      46: astore_1
      47: aload_0
      48: getfield      #14                 // Field loopResources:Lreactor/netty/resources/LoopResources;
      51: astore_1
      52: aload_1
      53: ifnull        73
      56: aload_0
      57: getfield      #8                  // Field manageLoopResources:Z
      60: ifeq          73
      63: aload_1
      64: invokeinterface #27,  1           // InterfaceMethod reactor/netty/resources/LoopResources.disposeLater:()Lreactor/core/publisher/Mono;
      69: invokevirtual #24                 // Method reactor/core/publisher/Mono.block:()Ljava/lang/Object;
      72: pop
      73: goto          77
      76: astore_1
      77: return
    Exception table:
       from    to  target type
          17    43    46   Class java/lang/Throwable
          47    73    76   Class java/lang/Throwable

  private static reactor.netty.resources.LoopResources lambda$new$1();
    Code:
       0: ldc           #28                 // String webflux-http
       2: invokestatic  #29                 // InterfaceMethod reactor/netty/resources/LoopResources.create:(Ljava/lang/String;)Lreactor/netty/resources/LoopResources;
       5: areturn

  private static reactor.netty.resources.ConnectionProvider lambda$new$0();
    Code:
       0: ldc           #30                 // String webflux
       2: invokestatic  #31                 // InterfaceMethod reactor/netty/resources/ConnectionProvider.elastic:(Ljava/lang/String;)Lreactor/netty/resources/ConnectionProvider;
       5: areturn
}
