Compiled from "HtmlCharacterEntityDecoder.java"
class org.springframework.web.util.HtmlCharacterEntityDecoder {
  private static final int MAX_REFERENCE_SIZE;

  private final org.springframework.web.util.HtmlCharacterEntityReferences characterEntityReferences;

  private final java.lang.String originalMessage;

  private final java.lang.StringBuilder decodedMessage;

  private int currentPosition;

  private int nextPotentialReferencePosition;

  private int nextSemicolonPosition;

  public org.springframework.web.util.HtmlCharacterEntityDecoder(org.springframework.web.util.HtmlCharacterEntityReferences, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field currentPosition:I
       9: aload_0
      10: iconst_m1
      11: putfield      #3                  // Field nextPotentialReferencePosition:I
      14: aload_0
      15: bipush        -2
      17: putfield      #4                  // Field nextSemicolonPosition:I
      20: aload_0
      21: aload_1
      22: putfield      #5                  // Field characterEntityReferences:Lorg/springframework/web/util/HtmlCharacterEntityReferences;
      25: aload_0
      26: aload_2
      27: putfield      #6                  // Field originalMessage:Ljava/lang/String;
      30: aload_0
      31: new           #7                  // class java/lang/StringBuilder
      34: dup
      35: aload_2
      36: invokevirtual #8                  // Method java/lang/String.length:()I
      39: invokespecial #9                  // Method java/lang/StringBuilder."<init>":(I)V
      42: putfield      #10                 // Field decodedMessage:Ljava/lang/StringBuilder;
      45: return

  public java.lang.String decode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field currentPosition:I
       4: aload_0
       5: getfield      #6                  // Field originalMessage:Ljava/lang/String;
       8: invokevirtual #8                  // Method java/lang/String.length:()I
      11: if_icmpge     33
      14: aload_0
      15: aload_0
      16: getfield      #2                  // Field currentPosition:I
      19: invokespecial #11                 // Method findNextPotentialReference:(I)V
      22: aload_0
      23: invokespecial #12                 // Method copyCharactersTillPotentialReference:()V
      26: aload_0
      27: invokespecial #13                 // Method processPossibleReference:()V
      30: goto          0
      33: aload_0
      34: getfield      #10                 // Field decodedMessage:Ljava/lang/StringBuilder;
      37: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: areturn

  private void findNextPotentialReference(int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: getfield      #4                  // Field nextSemicolonPosition:I
       6: bipush        10
       8: isub
       9: invokestatic  #16                 // Method java/lang/Math.max:(II)I
      12: putfield      #3                  // Field nextPotentialReferencePosition:I
      15: aload_0
      16: aload_0
      17: getfield      #6                  // Field originalMessage:Ljava/lang/String;
      20: bipush        38
      22: aload_0
      23: getfield      #3                  // Field nextPotentialReferencePosition:I
      26: invokevirtual #17                 // Method java/lang/String.indexOf:(II)I
      29: putfield      #3                  // Field nextPotentialReferencePosition:I
      32: aload_0
      33: getfield      #4                  // Field nextSemicolonPosition:I
      36: iconst_m1
      37: if_icmpeq     70
      40: aload_0
      41: getfield      #4                  // Field nextSemicolonPosition:I
      44: aload_0
      45: getfield      #3                  // Field nextPotentialReferencePosition:I
      48: if_icmpge     70
      51: aload_0
      52: aload_0
      53: getfield      #6                  // Field originalMessage:Ljava/lang/String;
      56: bipush        59
      58: aload_0
      59: getfield      #3                  // Field nextPotentialReferencePosition:I
      62: iconst_1
      63: iadd
      64: invokevirtual #17                 // Method java/lang/String.indexOf:(II)I
      67: putfield      #4                  // Field nextSemicolonPosition:I
      70: aload_0
      71: getfield      #3                  // Field nextPotentialReferencePosition:I
      74: iconst_m1
      75: if_icmpeq     104
      78: aload_0
      79: getfield      #4                  // Field nextSemicolonPosition:I
      82: iconst_m1
      83: if_icmpeq     104
      86: aload_0
      87: getfield      #3                  // Field nextPotentialReferencePosition:I
      90: aload_0
      91: getfield      #4                  // Field nextSemicolonPosition:I
      94: isub
      95: bipush        10
      97: if_icmpge     104
     100: iconst_1
     101: goto          105
     104: iconst_0
     105: istore_2
     106: iload_2
     107: ifeq          113
     110: goto          158
     113: aload_0
     114: getfield      #3                  // Field nextPotentialReferencePosition:I
     117: iconst_m1
     118: if_icmpne     124
     121: goto          158
     124: aload_0
     125: getfield      #4                  // Field nextSemicolonPosition:I
     128: iconst_m1
     129: if_icmpne     140
     132: aload_0
     133: iconst_m1
     134: putfield      #3                  // Field nextPotentialReferencePosition:I
     137: goto          158
     140: aload_0
     141: aload_0
     142: getfield      #3                  // Field nextPotentialReferencePosition:I
     145: iconst_1
     146: iadd
     147: putfield      #3                  // Field nextPotentialReferencePosition:I
     150: aload_0
     151: getfield      #3                  // Field nextPotentialReferencePosition:I
     154: iconst_m1
     155: if_icmpne     15
     158: return

  private void copyCharactersTillPotentialReference();
    Code:
       0: aload_0
       1: getfield      #3                  // Field nextPotentialReferencePosition:I
       4: aload_0
       5: getfield      #2                  // Field currentPosition:I
       8: if_icmpeq     106
      11: aload_0
      12: getfield      #3                  // Field nextPotentialReferencePosition:I
      15: iconst_m1
      16: if_icmpeq     26
      19: aload_0
      20: getfield      #3                  // Field nextPotentialReferencePosition:I
      23: goto          33
      26: aload_0
      27: getfield      #6                  // Field originalMessage:Ljava/lang/String;
      30: invokevirtual #8                  // Method java/lang/String.length:()I
      33: istore_1
      34: iload_1
      35: aload_0
      36: getfield      #2                  // Field currentPosition:I
      39: isub
      40: iconst_3
      41: if_icmple     69
      44: aload_0
      45: getfield      #10                 // Field decodedMessage:Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #6                  // Field originalMessage:Ljava/lang/String;
      52: aload_0
      53: getfield      #2                  // Field currentPosition:I
      56: iload_1
      57: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      60: pop
      61: aload_0
      62: iload_1
      63: putfield      #2                  // Field currentPosition:I
      66: goto          106
      69: aload_0
      70: getfield      #2                  // Field currentPosition:I
      73: iload_1
      74: if_icmpge     106
      77: aload_0
      78: getfield      #10                 // Field decodedMessage:Ljava/lang/StringBuilder;
      81: aload_0
      82: getfield      #6                  // Field originalMessage:Ljava/lang/String;
      85: aload_0
      86: dup
      87: getfield      #2                  // Field currentPosition:I
      90: dup_x1
      91: iconst_1
      92: iadd
      93: putfield      #2                  // Field currentPosition:I
      96: invokevirtual #19                 // Method java/lang/String.charAt:(I)C
      99: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     102: pop
     103: goto          69
     106: return

  private void processPossibleReference();
    Code:
       0: aload_0
       1: getfield      #3                  // Field nextPotentialReferencePosition:I
       4: iconst_m1
       5: if_icmpeq     96
       8: aload_0
       9: getfield      #6                  // Field originalMessage:Ljava/lang/String;
      12: aload_0
      13: getfield      #2                  // Field currentPosition:I
      16: iconst_1
      17: iadd
      18: invokevirtual #19                 // Method java/lang/String.charAt:(I)C
      21: bipush        35
      23: if_icmpne     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: istore_1
      32: iload_1
      33: ifeq          43
      36: aload_0
      37: invokespecial #21                 // Method processNumberedReference:()Z
      40: goto          47
      43: aload_0
      44: invokespecial #22                 // Method processNamedReference:()Z
      47: istore_2
      48: iload_2
      49: ifeq          65
      52: aload_0
      53: aload_0
      54: getfield      #4                  // Field nextSemicolonPosition:I
      57: iconst_1
      58: iadd
      59: putfield      #2                  // Field currentPosition:I
      62: goto          96
      65: aload_0
      66: getfield      #6                  // Field originalMessage:Ljava/lang/String;
      69: aload_0
      70: getfield      #2                  // Field currentPosition:I
      73: invokevirtual #19                 // Method java/lang/String.charAt:(I)C
      76: istore_3
      77: aload_0
      78: getfield      #10                 // Field decodedMessage:Ljava/lang/StringBuilder;
      81: iload_3
      82: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      85: pop
      86: aload_0
      87: dup
      88: getfield      #2                  // Field currentPosition:I
      91: iconst_1
      92: iadd
      93: putfield      #2                  // Field currentPosition:I
      96: return

  private boolean processNumberedReference();
    Code:
       0: aload_0
       1: getfield      #6                  // Field originalMessage:Ljava/lang/String;
       4: aload_0
       5: getfield      #3                  // Field nextPotentialReferencePosition:I
       8: iconst_2
       9: iadd
      10: invokevirtual #19                 // Method java/lang/String.charAt:(I)C
      13: istore_1
      14: iload_1
      15: bipush        120
      17: if_icmpeq     26
      20: iload_1
      21: bipush        88
      23: if_icmpne     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: istore_2
      32: iload_2
      33: ifne          47
      36: aload_0
      37: iconst_2
      38: invokespecial #23                 // Method getReferenceSubstring:(I)Ljava/lang/String;
      41: invokestatic  #24                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      44: goto          57
      47: aload_0
      48: iconst_3
      49: invokespecial #23                 // Method getReferenceSubstring:(I)Ljava/lang/String;
      52: bipush        16
      54: invokestatic  #25                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
      57: istore_3
      58: aload_0
      59: getfield      #10                 // Field decodedMessage:Ljava/lang/StringBuilder;
      62: iload_3
      63: i2c
      64: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      67: pop
      68: iconst_1
      69: ireturn
      70: astore_3
      71: iconst_0
      72: ireturn
    Exception table:
       from    to  target type
          32    69    70   Class java/lang/NumberFormatException

  private boolean processNamedReference();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #23                 // Method getReferenceSubstring:(I)Ljava/lang/String;
       5: astore_1
       6: aload_0
       7: getfield      #5                  // Field characterEntityReferences:Lorg/springframework/web/util/HtmlCharacterEntityReferences;
      10: aload_1
      11: invokevirtual #27                 // Method org/springframework/web/util/HtmlCharacterEntityReferences.convertToCharacter:(Ljava/lang/String;)C
      14: istore_2
      15: iload_2
      16: ldc           #29                 // int 65535
      18: if_icmpeq     32
      21: aload_0
      22: getfield      #10                 // Field decodedMessage:Ljava/lang/StringBuilder;
      25: iload_2
      26: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      29: pop
      30: iconst_1
      31: ireturn
      32: iconst_0
      33: ireturn

  private java.lang.String getReferenceSubstring(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field originalMessage:Ljava/lang/String;
       4: aload_0
       5: getfield      #3                  // Field nextPotentialReferencePosition:I
       8: iload_1
       9: iadd
      10: aload_0
      11: getfield      #4                  // Field nextSemicolonPosition:I
      14: invokevirtual #30                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      17: areturn
}
