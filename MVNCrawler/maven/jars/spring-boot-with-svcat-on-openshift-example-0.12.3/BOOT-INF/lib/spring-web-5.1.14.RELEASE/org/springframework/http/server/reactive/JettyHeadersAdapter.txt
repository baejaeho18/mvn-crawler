Compiled from "JettyHeadersAdapter.java"
class org.springframework.http.server.reactive.JettyHeadersAdapter implements org.springframework.util.MultiValueMap<java.lang.String, java.lang.String> {
  private final org.eclipse.jetty.http.HttpFields headers;

  org.springframework.http.server.reactive.JettyHeadersAdapter(org.eclipse.jetty.http.HttpFields);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
       9: return

  public java.lang.String getFirst(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
       4: aload_1
       5: invokevirtual #3                  // Method org/eclipse/jetty/http/HttpFields.get:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public void add(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
       4: aload_1
       5: aload_2
       6: invokevirtual #4                  // Method org/eclipse/jetty/http/HttpFields.add:(Ljava/lang/String;Ljava/lang/String;)V
       9: return

  public void addAll(java.lang.String, java.util.List<? extends java.lang.String>);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokedynamic #5,  0              // InvokeDynamic #0:accept:(Lorg/springframework/http/server/reactive/JettyHeadersAdapter;Ljava/lang/String;)Ljava/util/function/Consumer;
       8: invokeinterface #6,  2            // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      13: return

  public void addAll(org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #7,  0              // InvokeDynamic #1:accept:(Lorg/springframework/http/server/reactive/JettyHeadersAdapter;)Ljava/util/function/BiConsumer;
       7: invokeinterface #8,  2            // InterfaceMethod org/springframework/util/MultiValueMap.forEach:(Ljava/util/function/BiConsumer;)V
      12: return

  public void set(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
       4: aload_1
       5: aload_2
       6: invokevirtual #9                  // Method org/eclipse/jetty/http/HttpFields.put:(Ljava/lang/String;Ljava/lang/String;)V
       9: return

  public void setAll(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #10,  0             // InvokeDynamic #2:accept:(Lorg/springframework/http/server/reactive/JettyHeadersAdapter;)Ljava/util/function/BiConsumer;
       7: invokeinterface #11,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      12: return

  public java.util.Map<java.lang.String, java.lang.String> toSingleValueMap();
    Code:
       0: new           #12                 // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: getfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
       8: invokevirtual #13                 // Method org/eclipse/jetty/http/HttpFields.size:()I
      11: invokespecial #14                 // Method java/util/LinkedHashMap."<init>":(I)V
      14: astore_1
      15: aload_0
      16: getfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
      19: invokevirtual #15                 // Method org/eclipse/jetty/http/HttpFields.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: aload_1
      25: invokedynamic #16,  0             // InvokeDynamic #3:accept:(Ljava/util/Map;)Ljava/util/function/Consumer;
      30: invokeinterface #17,  2           // InterfaceMethod java/util/Iterator.forEachRemaining:(Ljava/util/function/Consumer;)V
      35: aload_1
      36: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
       4: invokevirtual #18                 // Method org/eclipse/jetty/http/HttpFields.getFieldNamesCollection:()Ljava/util/Set;
       7: invokeinterface #19,  1           // InterfaceMethod java/util/Set.size:()I
      12: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
       4: invokevirtual #13                 // Method org/eclipse/jetty/http/HttpFields.size:()I
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #20                 // class java/lang/String
       4: ifeq          25
       7: aload_0
       8: getfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
      11: aload_1
      12: checkcast     #20                 // class java/lang/String
      15: invokevirtual #21                 // Method org/eclipse/jetty/http/HttpFields.containsKey:(Ljava/lang/String;)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #20                 // class java/lang/String
       4: ifeq          32
       7: aload_0
       8: getfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
      11: invokevirtual #22                 // Method org/eclipse/jetty/http/HttpFields.stream:()Ljava/util/stream/Stream;
      14: aload_1
      15: invokedynamic #23,  0             // InvokeDynamic #4:test:(Ljava/lang/Object;)Ljava/util/function/Predicate;
      20: invokeinterface #24,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public java.util.List<java.lang.String> get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method containsKey:(Ljava/lang/Object;)Z
       5: ifeq          20
       8: aload_0
       9: getfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
      12: aload_1
      13: checkcast     #20                 // class java/lang/String
      16: invokevirtual #26                 // Method org/eclipse/jetty/http/HttpFields.getValuesList:(Ljava/lang/String;)Ljava/util/List;
      19: areturn
      20: aconst_null
      21: areturn

  public java.util.List<java.lang.String> put(java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_3
       6: aload_0
       7: getfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
      10: aload_1
      11: aload_2
      12: invokevirtual #28                 // Method org/eclipse/jetty/http/HttpFields.put:(Ljava/lang/String;Ljava/util/List;)V
      15: aload_3
      16: areturn

  public java.util.List<java.lang.String> remove(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #20                 // class java/lang/String
       4: ifeq          27
       7: aload_0
       8: aload_1
       9: invokevirtual #27                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
      12: astore_2
      13: aload_0
      14: getfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
      17: aload_1
      18: checkcast     #20                 // class java/lang/String
      21: invokevirtual #29                 // Method org/eclipse/jetty/http/HttpFields.remove:(Ljava/lang/String;)Lorg/eclipse/jetty/http/HttpField;
      24: pop
      25: aload_2
      26: areturn
      27: aconst_null
      28: areturn

  public void putAll(java.util.Map<? extends java.lang.String, ? extends java.util.List<java.lang.String>>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #30,  0             // InvokeDynamic #5:accept:(Lorg/springframework/http/server/reactive/JettyHeadersAdapter;)Ljava/util/function/BiConsumer;
       7: invokeinterface #11,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      12: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
       4: invokevirtual #31                 // Method org/eclipse/jetty/http/HttpFields.clear:()V
       7: return

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: aload_0
       1: getfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
       4: invokevirtual #18                 // Method org/eclipse/jetty/http/HttpFields.getFieldNamesCollection:()Ljava/util/Set;
       7: areturn

  public java.util.Collection<java.util.List<java.lang.String>> values();
    Code:
       0: aload_0
       1: getfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
       4: invokevirtual #18                 // Method org/eclipse/jetty/http/HttpFields.getFieldNamesCollection:()Ljava/util/Set;
       7: invokeinterface #32,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      12: aload_0
      13: getfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
      16: dup
      17: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: pop
      21: invokedynamic #34,  0             // InvokeDynamic #6:apply:(Lorg/eclipse/jetty/http/HttpFields;)Ljava/util/function/Function;
      26: invokeinterface #35,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      31: invokestatic  #36                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      34: invokeinterface #37,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      39: checkcast     #38                 // class java/util/Collection
      42: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.String, java.util.List<java.lang.String>>> entrySet();
    Code:
       0: new           #39                 // class org/springframework/http/server/reactive/JettyHeadersAdapter$1
       3: dup
       4: aload_0
       5: invokespecial #40                 // Method org/springframework/http/server/reactive/JettyHeadersAdapter$1."<init>":(Lorg/springframework/http/server/reactive/JettyHeadersAdapter;)V
       8: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #41                 // Method org/springframework/http/HttpHeaders.formatHeaders:(Lorg/springframework/util/MultiValueMap;)Ljava/lang/String;
       4: areturn

  public void set(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class java/lang/String
       5: aload_2
       6: checkcast     #20                 // class java/lang/String
       9: invokevirtual #42                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public void addAll(java.lang.Object, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class java/lang/String
       5: aload_2
       6: invokevirtual #43                 // Method addAll:(Ljava/lang/String;Ljava/util/List;)V
       9: return

  public void add(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class java/lang/String
       5: aload_2
       6: checkcast     #20                 // class java/lang/String
       9: invokevirtual #44                 // Method add:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public java.lang.Object getFirst(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class java/lang/String
       5: invokevirtual #45                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method remove:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class java/lang/String
       5: aload_2
       6: checkcast     #47                 // class java/util/List
       9: invokevirtual #48                 // Method put:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
      12: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn

  private static boolean lambda$containsValue$2(java.lang.Object, org.eclipse.jetty.http.HttpField);
    Code:
       0: aload_1
       1: aload_0
       2: checkcast     #20                 // class java/lang/String
       5: invokevirtual #49                 // Method org/eclipse/jetty/http/HttpField.contains:(Ljava/lang/String;)Z
       8: ireturn

  private static void lambda$toSingleValueMap$1(java.util.Map, org.eclipse.jetty.http.HttpField);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method org/eclipse/jetty/http/HttpField.getName:()Ljava/lang/String;
       5: invokeinterface #51,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifne          28
      13: aload_0
      14: aload_1
      15: invokevirtual #50                 // Method org/eclipse/jetty/http/HttpField.getName:()Ljava/lang/String;
      18: aload_1
      19: invokevirtual #52                 // Method org/eclipse/jetty/http/HttpField.getValue:()Ljava/lang/String;
      22: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: return

  private void lambda$addAll$0(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #44                 // Method add:(Ljava/lang/String;Ljava/lang/String;)V
       6: return

  static org.eclipse.jetty.http.HttpFields access$100(org.springframework.http.server.reactive.JettyHeadersAdapter);
    Code:
       0: aload_0
       1: getfield      #1                  // Field headers:Lorg/eclipse/jetty/http/HttpFields;
       4: areturn
}
