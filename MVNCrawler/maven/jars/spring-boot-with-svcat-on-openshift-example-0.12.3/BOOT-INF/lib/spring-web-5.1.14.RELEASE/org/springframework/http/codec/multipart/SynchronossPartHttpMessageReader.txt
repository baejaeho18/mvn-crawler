Compiled from "SynchronossPartHttpMessageReader.java"
public class org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader extends org.springframework.http.codec.LoggingCodecSupport implements org.springframework.http.codec.HttpMessageReader<org.springframework.http.codec.multipart.Part> {
  private static final org.springframework.core.io.buffer.DataBufferFactory bufferFactory;

  private int maxInMemorySize;

  private long maxDiskUsagePerPart;

  private int maxParts;

  public org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/springframework/http/codec/LoggingCodecSupport."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #4                  // Field maxInMemorySize:I
       9: aload_0
      10: ldc2_w        #6                  // long -1l
      13: putfield      #2                  // Field maxDiskUsagePerPart:J
      16: aload_0
      17: iconst_m1
      18: putfield      #3                  // Field maxParts:I
      21: return

  public void setMaxInMemorySize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field maxInMemorySize:I
       5: return

  public int getMaxInMemorySize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field maxInMemorySize:I
       4: ireturn

  public void setMaxDiskUsagePerPart(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #2                  // Field maxDiskUsagePerPart:J
       5: return

  public long getMaxDiskUsagePerPart();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxDiskUsagePerPart:J
       4: lreturn

  public void setMaxParts(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field maxParts:I
       5: return

  public int getMaxParts();
    Code:
       0: aload_0
       1: getfield      #3                  // Field maxParts:I
       4: ireturn

  public java.util.List<org.springframework.http.MediaType> getReadableMediaTypes();
    Code:
       0: getstatic     #8                  // Field org/springframework/http/MediaType.MULTIPART_FORM_DATA:Lorg/springframework/http/MediaType;
       3: invokestatic  #9                  // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
       6: areturn

  public boolean canRead(org.springframework.core.ResolvableType, org.springframework.http.MediaType);
    Code:
       0: ldc           #10                 // class org/springframework/http/codec/multipart/Part
       2: aload_1
       3: invokevirtual #11                 // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
       6: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       9: ifeq          30
      12: aload_2
      13: ifnull        26
      16: getstatic     #8                  // Field org/springframework/http/MediaType.MULTIPART_FORM_DATA:Lorg/springframework/http/MediaType;
      19: aload_2
      20: invokevirtual #13                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public reactor.core.publisher.Flux<org.springframework.http.codec.multipart.Part> read(org.springframework.core.ResolvableType, org.springframework.http.ReactiveHttpInputMessage, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #14                 // class org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$SynchronossPartGenerator
       3: dup
       4: aload_0
       5: aload_2
       6: invokespecial #15                 // Method org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$SynchronossPartGenerator."<init>":(Lorg/springframework/http/codec/multipart/SynchronossPartHttpMessageReader;Lorg/springframework/http/ReactiveHttpInputMessage;)V
       9: invokestatic  #16                 // Method reactor/core/publisher/Flux.create:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
      12: aload_0
      13: aload_3
      14: invokedynamic #17,  0             // InvokeDynamic #0:accept:(Lorg/springframework/http/codec/multipart/SynchronossPartHttpMessageReader;Ljava/util/Map;)Ljava/util/function/Consumer;
      19: invokevirtual #18                 // Method reactor/core/publisher/Flux.doOnNext:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
      22: areturn

  public reactor.core.publisher.Mono<org.springframework.http.codec.multipart.Part> readMono(org.springframework.core.ResolvableType, org.springframework.http.ReactiveHttpInputMessage, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #19                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #20                 // String Cannot read multipart request body into single Part
       6: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: invokestatic  #22                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      12: areturn

  private void lambda$read$1(java.util.Map, org.springframework.http.codec.multipart.Part);
    Code:
       0: aload_1
       1: invokestatic  #23                 // Method org/springframework/core/codec/Hints.isLoggingSuppressed:(Ljava/util/Map;)Z
       4: ifne          22
       7: aload_0
       8: getfield      #24                 // Field logger:Lorg/apache/commons/logging/Log;
      11: aload_0
      12: aload_1
      13: aload_2
      14: invokedynamic #25,  0             // InvokeDynamic #1:apply:(Lorg/springframework/http/codec/multipart/SynchronossPartHttpMessageReader;Ljava/util/Map;Lorg/springframework/http/codec/multipart/Part;)Ljava/util/function/Function;
      19: invokestatic  #26                 // Method org/springframework/core/log/LogFormatUtils.traceDebug:(Lorg/apache/commons/logging/Log;Ljava/util/function/Function;)V
      22: return

  private java.lang.String lambda$null$0(java.util.Map, org.springframework.http.codec.multipart.Part, java.lang.Boolean);
    Code:
       0: new           #27                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokestatic  #29                 // Method org/springframework/core/codec/Hints.getLogPrefix:(Ljava/util/Map;)Ljava/lang/String;
      11: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #31                 // String Parsed
      16: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokevirtual #32                 // Method isEnableLoggingRequestDetails:()Z
      23: ifeq          45
      26: aload_2
      27: aload_3
      28: invokevirtual #33                 // Method java/lang/Boolean.booleanValue:()Z
      31: ifne          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: invokestatic  #34                 // Method org/springframework/core/log/LogFormatUtils.formatValue:(Ljava/lang/Object;Z)Ljava/lang/String;
      42: goto          74
      45: new           #27                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #35                 // String parts \'
      54: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_2
      58: invokeinterface #36,  1           // InterfaceMethod org/springframework/http/codec/multipart/Part.name:()Ljava/lang/String;
      63: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: ldc           #37                 // String \' (content masked)
      68: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: areturn

  static int access$100(org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader);
    Code:
       0: aload_0
       1: getfield      #4                  // Field maxInMemorySize:I
       4: ireturn

  static int access$200(org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader);
    Code:
       0: aload_0
       1: getfield      #3                  // Field maxParts:I
       4: ireturn

  static long access$300(org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader);
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxDiskUsagePerPart:J
       4: lreturn

  static org.springframework.core.io.buffer.DataBufferFactory access$400();
    Code:
       0: getstatic     #1                  // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
       3: areturn

  static {};
    Code:
       0: new           #39                 // class org/springframework/core/io/buffer/DefaultDataBufferFactory
       3: dup
       4: invokespecial #40                 // Method org/springframework/core/io/buffer/DefaultDataBufferFactory."<init>":()V
       7: putstatic     #1                  // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      10: return
}
