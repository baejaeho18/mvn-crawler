Compiled from "Jackson2Tokenizer.java"
final class org.springframework.http.codec.json.Jackson2Tokenizer {
  private final com.fasterxml.jackson.core.JsonParser parser;

  private final com.fasterxml.jackson.databind.DeserializationContext deserializationContext;

  private final boolean tokenizeArrayElements;

  private final boolean forceUseOfBigDecimal;

  private final int maxInMemorySize;

  private int objectDepth;

  private int arrayDepth;

  private int byteCount;

  private com.fasterxml.jackson.databind.util.TokenBuffer tokenBuffer;

  private final com.fasterxml.jackson.core.async.ByteArrayFeeder inputFeeder;

  private org.springframework.http.codec.json.Jackson2Tokenizer(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, boolean, boolean, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field parser:Lcom/fasterxml/jackson/core/JsonParser;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field deserializationContext:Lcom/fasterxml/jackson/databind/DeserializationContext;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field tokenizeArrayElements:Z
      19: aload_0
      20: iload         4
      22: putfield      #5                  // Field forceUseOfBigDecimal:Z
      25: aload_0
      26: aload_0
      27: getfield      #2                  // Field parser:Lcom/fasterxml/jackson/core/JsonParser;
      30: invokevirtual #6                  // Method com/fasterxml/jackson/core/JsonParser.getNonBlockingInputFeeder:()Lcom/fasterxml/jackson/core/async/NonBlockingInputFeeder;
      33: checkcast     #7                  // class com/fasterxml/jackson/core/async/ByteArrayFeeder
      36: putfield      #8                  // Field inputFeeder:Lcom/fasterxml/jackson/core/async/ByteArrayFeeder;
      39: aload_0
      40: iload         5
      42: putfield      #9                  // Field maxInMemorySize:I
      45: aload_0
      46: aload_0
      47: invokespecial #10                 // Method createToken:()Lcom/fasterxml/jackson/databind/util/TokenBuffer;
      50: putfield      #11                 // Field tokenBuffer:Lcom/fasterxml/jackson/databind/util/TokenBuffer;
      53: return

  private reactor.core.publisher.Flux<com.fasterxml.jackson.databind.util.TokenBuffer> tokenize(org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readableByteCount:()I
       6: istore_2
       7: aload_1
       8: invokeinterface #12,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readableByteCount:()I
      13: newarray       byte
      15: astore_3
      16: aload_1
      17: aload_3
      18: invokeinterface #13,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.read:([B)Lorg/springframework/core/io/buffer/DataBuffer;
      23: pop
      24: aload_1
      25: invokestatic  #14                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      28: pop
      29: aload_0
      30: getfield      #8                  // Field inputFeeder:Lcom/fasterxml/jackson/core/async/ByteArrayFeeder;
      33: aload_3
      34: iconst_0
      35: aload_3
      36: arraylength
      37: invokeinterface #15,  4           // InterfaceMethod com/fasterxml/jackson/core/async/ByteArrayFeeder.feedInput:([BII)V
      42: aload_0
      43: invokespecial #16                 // Method parseTokenBufferFlux:()Ljava/util/List;
      46: astore        4
      48: aload_0
      49: iload_2
      50: aload         4
      52: invokespecial #17                 // Method assertInMemorySize:(ILjava/util/List;)V
      55: aload         4
      57: invokestatic  #18                 // Method reactor/core/publisher/Flux.fromIterable:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      60: areturn
      61: astore        4
      63: new           #20                 // class org/springframework/core/codec/DecodingException
      66: dup
      67: new           #21                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #23                 // String JSON decoding error:
      76: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload         4
      81: invokevirtual #25                 // Method com/fasterxml/jackson/core/JsonProcessingException.getOriginalMessage:()Ljava/lang/String;
      84: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: aload         4
      92: invokespecial #27                 // Method org/springframework/core/codec/DecodingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      95: invokestatic  #28                 // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      98: areturn
      99: astore        4
     101: aload         4
     103: invokestatic  #28                 // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
     106: areturn
    Exception table:
       from    to  target type
          29    60    61   Class com/fasterxml/jackson/core/JsonProcessingException
          29    60    99   Class java/io/IOException

  private reactor.core.publisher.Flux<com.fasterxml.jackson.databind.util.TokenBuffer> endOfInput();
    Code:
       0: aload_0
       1: getfield      #8                  // Field inputFeeder:Lcom/fasterxml/jackson/core/async/ByteArrayFeeder;
       4: invokeinterface #30,  1           // InterfaceMethod com/fasterxml/jackson/core/async/ByteArrayFeeder.endOfInput:()V
       9: aload_0
      10: invokespecial #16                 // Method parseTokenBufferFlux:()Ljava/util/List;
      13: astore_1
      14: aload_1
      15: invokestatic  #18                 // Method reactor/core/publisher/Flux.fromIterable:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      18: areturn
      19: astore_1
      20: new           #20                 // class org/springframework/core/codec/DecodingException
      23: dup
      24: new           #21                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #23                 // String JSON decoding error:
      33: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #25                 // Method com/fasterxml/jackson/core/JsonProcessingException.getOriginalMessage:()Ljava/lang/String;
      40: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: aload_1
      47: invokespecial #27                 // Method org/springframework/core/codec/DecodingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      50: invokestatic  #28                 // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      53: areturn
      54: astore_1
      55: aload_1
      56: invokestatic  #28                 // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      59: areturn
    Exception table:
       from    to  target type
           9    18    19   Class com/fasterxml/jackson/core/JsonProcessingException
           9    18    54   Class java/io/IOException

  private java.util.List<com.fasterxml.jackson.databind.util.TokenBuffer> parseTokenBufferFlux() throws java.io.IOException;
    Code:
       0: new           #31                 // class java/util/ArrayList
       3: dup
       4: invokespecial #32                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: aload_0
      11: getfield      #2                  // Field parser:Lcom/fasterxml/jackson/core/JsonParser;
      14: invokevirtual #33                 // Method com/fasterxml/jackson/core/JsonParser.isClosed:()Z
      17: ifne          87
      20: aload_0
      21: getfield      #2                  // Field parser:Lcom/fasterxml/jackson/core/JsonParser;
      24: invokevirtual #34                 // Method com/fasterxml/jackson/core/JsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;
      27: astore_3
      28: aload_3
      29: getstatic     #35                 // Field com/fasterxml/jackson/core/JsonToken.NOT_AVAILABLE:Lcom/fasterxml/jackson/core/JsonToken;
      32: if_acmpeq     87
      35: aload_3
      36: ifnonnull     46
      39: iload_2
      40: ifeq          46
      43: goto          87
      46: aload_3
      47: ifnonnull     55
      50: iconst_1
      51: istore_2
      52: goto          10
      55: iconst_0
      56: istore_2
      57: aload_0
      58: aload_3
      59: invokespecial #36                 // Method updateDepth:(Lcom/fasterxml/jackson/core/JsonToken;)V
      62: aload_0
      63: getfield      #4                  // Field tokenizeArrayElements:Z
      66: ifne          78
      69: aload_0
      70: aload_3
      71: aload_1
      72: invokespecial #37                 // Method processTokenNormal:(Lcom/fasterxml/jackson/core/JsonToken;Ljava/util/List;)V
      75: goto          84
      78: aload_0
      79: aload_3
      80: aload_1
      81: invokespecial #38                 // Method processTokenArray:(Lcom/fasterxml/jackson/core/JsonToken;Ljava/util/List;)V
      84: goto          10
      87: aload_1
      88: areturn

  private void updateDepth(com.fasterxml.jackson.core.JsonToken);
    Code:
       0: getstatic     #39                 // Field org/springframework/http/codec/json/Jackson2Tokenizer$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken:[I
       3: aload_1
       4: invokevirtual #40                 // Method com/fasterxml/jackson/core/JsonToken.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 4
                     1: 40
                     2: 53
                     3: 66
                     4: 79
               default: 89
          }
      40: aload_0
      41: dup
      42: getfield      #41                 // Field objectDepth:I
      45: iconst_1
      46: iadd
      47: putfield      #41                 // Field objectDepth:I
      50: goto          89
      53: aload_0
      54: dup
      55: getfield      #41                 // Field objectDepth:I
      58: iconst_1
      59: isub
      60: putfield      #41                 // Field objectDepth:I
      63: goto          89
      66: aload_0
      67: dup
      68: getfield      #42                 // Field arrayDepth:I
      71: iconst_1
      72: iadd
      73: putfield      #42                 // Field arrayDepth:I
      76: goto          89
      79: aload_0
      80: dup
      81: getfield      #42                 // Field arrayDepth:I
      84: iconst_1
      85: isub
      86: putfield      #42                 // Field arrayDepth:I
      89: return

  private void processTokenNormal(com.fasterxml.jackson.core.JsonToken, java.util.List<com.fasterxml.jackson.databind.util.TokenBuffer>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field tokenBuffer:Lcom/fasterxml/jackson/databind/util/TokenBuffer;
       4: aload_0
       5: getfield      #2                  // Field parser:Lcom/fasterxml/jackson/core/JsonParser;
       8: invokevirtual #43                 // Method com/fasterxml/jackson/databind/util/TokenBuffer.copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V
      11: aload_1
      12: invokevirtual #44                 // Method com/fasterxml/jackson/core/JsonToken.isStructEnd:()Z
      15: ifne          25
      18: aload_1
      19: invokevirtual #45                 // Method com/fasterxml/jackson/core/JsonToken.isScalarValue:()Z
      22: ifeq          58
      25: aload_0
      26: getfield      #41                 // Field objectDepth:I
      29: ifne          58
      32: aload_0
      33: getfield      #42                 // Field arrayDepth:I
      36: ifne          58
      39: aload_2
      40: aload_0
      41: getfield      #11                 // Field tokenBuffer:Lcom/fasterxml/jackson/databind/util/TokenBuffer;
      44: invokeinterface #46,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: aload_0
      51: aload_0
      52: invokespecial #10                 // Method createToken:()Lcom/fasterxml/jackson/databind/util/TokenBuffer;
      55: putfield      #11                 // Field tokenBuffer:Lcom/fasterxml/jackson/databind/util/TokenBuffer;
      58: return

  private void processTokenArray(com.fasterxml.jackson.core.JsonToken, java.util.List<com.fasterxml.jackson.databind.util.TokenBuffer>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #47                 // Method isTopLevelArrayToken:(Lcom/fasterxml/jackson/core/JsonToken;)Z
       5: ifne          19
       8: aload_0
       9: getfield      #11                 // Field tokenBuffer:Lcom/fasterxml/jackson/databind/util/TokenBuffer;
      12: aload_0
      13: getfield      #2                  // Field parser:Lcom/fasterxml/jackson/core/JsonParser;
      16: invokevirtual #43                 // Method com/fasterxml/jackson/databind/util/TokenBuffer.copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V
      19: aload_0
      20: getfield      #41                 // Field objectDepth:I
      23: ifne          74
      26: aload_0
      27: getfield      #42                 // Field arrayDepth:I
      30: ifeq          41
      33: aload_0
      34: getfield      #42                 // Field arrayDepth:I
      37: iconst_1
      38: if_icmpne     74
      41: aload_1
      42: getstatic     #48                 // Field com/fasterxml/jackson/core/JsonToken.END_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;
      45: if_acmpeq     55
      48: aload_1
      49: invokevirtual #45                 // Method com/fasterxml/jackson/core/JsonToken.isScalarValue:()Z
      52: ifeq          74
      55: aload_2
      56: aload_0
      57: getfield      #11                 // Field tokenBuffer:Lcom/fasterxml/jackson/databind/util/TokenBuffer;
      60: invokeinterface #46,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      65: pop
      66: aload_0
      67: aload_0
      68: invokespecial #10                 // Method createToken:()Lcom/fasterxml/jackson/databind/util/TokenBuffer;
      71: putfield      #11                 // Field tokenBuffer:Lcom/fasterxml/jackson/databind/util/TokenBuffer;
      74: return

  private com.fasterxml.jackson.databind.util.TokenBuffer createToken();
    Code:
       0: new           #49                 // class com/fasterxml/jackson/databind/util/TokenBuffer
       3: dup
       4: aload_0
       5: getfield      #2                  // Field parser:Lcom/fasterxml/jackson/core/JsonParser;
       8: aload_0
       9: getfield      #3                  // Field deserializationContext:Lcom/fasterxml/jackson/databind/DeserializationContext;
      12: invokespecial #50                 // Method com/fasterxml/jackson/databind/util/TokenBuffer."<init>":(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)V
      15: astore_1
      16: aload_1
      17: aload_0
      18: getfield      #5                  // Field forceUseOfBigDecimal:Z
      21: invokevirtual #51                 // Method com/fasterxml/jackson/databind/util/TokenBuffer.forceUseOfBigDecimal:(Z)Lcom/fasterxml/jackson/databind/util/TokenBuffer;
      24: pop
      25: aload_1
      26: areturn

  private boolean isTopLevelArrayToken(com.fasterxml.jackson.core.JsonToken);
    Code:
       0: aload_0
       1: getfield      #41                 // Field objectDepth:I
       4: ifne          40
       7: aload_1
       8: getstatic     #52                 // Field com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;
      11: if_acmpne     22
      14: aload_0
      15: getfield      #42                 // Field arrayDepth:I
      18: iconst_1
      19: if_icmpeq     36
      22: aload_1
      23: getstatic     #53                 // Field com/fasterxml/jackson/core/JsonToken.END_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;
      26: if_acmpne     40
      29: aload_0
      30: getfield      #42                 // Field arrayDepth:I
      33: ifne          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  private void assertInMemorySize(int, java.util.List<com.fasterxml.jackson.databind.util.TokenBuffer>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field maxInMemorySize:I
       4: iflt          67
       7: aload_2
       8: invokeinterface #54,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      13: ifne          24
      16: aload_0
      17: iconst_0
      18: putfield      #55                 // Field byteCount:I
      21: goto          67
      24: iload_1
      25: ldc           #57                 // int 2147483647
      27: aload_0
      28: getfield      #55                 // Field byteCount:I
      31: isub
      32: if_icmple     42
      35: aload_0
      36: invokespecial #58                 // Method raiseLimitException:()V
      39: goto          67
      42: aload_0
      43: dup
      44: getfield      #55                 // Field byteCount:I
      47: iload_1
      48: iadd
      49: putfield      #55                 // Field byteCount:I
      52: aload_0
      53: getfield      #55                 // Field byteCount:I
      56: aload_0
      57: getfield      #9                  // Field maxInMemorySize:I
      60: if_icmple     67
      63: aload_0
      64: invokespecial #58                 // Method raiseLimitException:()V
      67: return

  private void raiseLimitException();
    Code:
       0: new           #59                 // class org/springframework/core/io/buffer/DataBufferLimitException
       3: dup
       4: new           #21                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #60                 // String Exceeded limit on max bytes per JSON object:
      13: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: getfield      #9                  // Field maxInMemorySize:I
      20: invokevirtual #61                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      23: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokespecial #62                 // Method org/springframework/core/io/buffer/DataBufferLimitException."<init>":(Ljava/lang/String;)V
      29: athrow

  public static reactor.core.publisher.Flux<com.fasterxml.jackson.databind.util.TokenBuffer> tokenize(reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer>, com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.databind.ObjectMapper, boolean, boolean, int);
    Code:
       0: aload_1
       1: invokevirtual #63                 // Method com/fasterxml/jackson/core/JsonFactory.createNonBlockingByteArrayParser:()Lcom/fasterxml/jackson/core/JsonParser;
       4: astore        6
       6: aload_2
       7: invokevirtual #64                 // Method com/fasterxml/jackson/databind/ObjectMapper.getDeserializationContext:()Lcom/fasterxml/jackson/databind/DeserializationContext;
      10: astore        7
      12: aload         7
      14: instanceof    #65                 // class com/fasterxml/jackson/databind/deser/DefaultDeserializationContext
      17: ifeq          40
      20: aload         7
      22: checkcast     #65                 // class com/fasterxml/jackson/databind/deser/DefaultDeserializationContext
      25: aload_2
      26: invokevirtual #66                 // Method com/fasterxml/jackson/databind/ObjectMapper.getDeserializationConfig:()Lcom/fasterxml/jackson/databind/DeserializationConfig;
      29: aload         6
      31: aload_2
      32: invokevirtual #67                 // Method com/fasterxml/jackson/databind/ObjectMapper.getInjectableValues:()Lcom/fasterxml/jackson/databind/InjectableValues;
      35: invokevirtual #68                 // Method com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.createInstance:(Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/InjectableValues;)Lcom/fasterxml/jackson/databind/deser/DefaultDeserializationContext;
      38: astore        7
      40: new           #69                 // class org/springframework/http/codec/json/Jackson2Tokenizer
      43: dup
      44: aload         6
      46: aload         7
      48: iload_3
      49: iload         4
      51: iload         5
      53: invokespecial #70                 // Method "<init>":(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;ZZI)V
      56: astore        8
      58: aload_0
      59: aload         8
      61: dup
      62: invokevirtual #71                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      65: pop
      66: invokedynamic #72,  0             // InvokeDynamic #0:apply:(Lorg/springframework/http/codec/json/Jackson2Tokenizer;)Ljava/util/function/Function;
      71: invokedynamic #73,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      76: aload         8
      78: dup
      79: invokevirtual #71                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      82: pop
      83: invokedynamic #74,  0             // InvokeDynamic #2:get:(Lorg/springframework/http/codec/json/Jackson2Tokenizer;)Ljava/util/function/Supplier;
      88: invokevirtual #75                 // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      91: areturn
      92: astore        6
      94: aload         6
      96: invokestatic  #28                 // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      99: areturn
    Exception table:
       from    to  target type
           0    91    92   Class java/io/IOException
}
