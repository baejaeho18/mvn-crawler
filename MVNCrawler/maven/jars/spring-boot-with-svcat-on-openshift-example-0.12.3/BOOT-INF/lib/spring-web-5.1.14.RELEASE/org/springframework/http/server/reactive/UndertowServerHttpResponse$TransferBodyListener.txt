Compiled from "UndertowServerHttpResponse.java"
class org.springframework.http.server.reactive.UndertowServerHttpResponse$TransferBodyListener {
  private final java.nio.channels.FileChannel source;

  private final reactor.core.publisher.MonoSink<java.lang.Void> sink;

  private long position;

  private long count;

  public org.springframework.http.server.reactive.UndertowServerHttpResponse$TransferBodyListener(java.nio.channels.FileChannel, long, long, reactor.core.publisher.MonoSink<java.lang.Void>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Ljava/nio/channels/FileChannel;
       9: aload_0
      10: aload         6
      12: putfield      #3                  // Field sink:Lreactor/core/publisher/MonoSink;
      15: aload_0
      16: lload_2
      17: putfield      #4                  // Field position:J
      20: aload_0
      21: lload         4
      23: putfield      #5                  // Field count:J
      26: return

  public void transfer(org.xnio.channels.StreamSinkChannel);
    Code:
       0: aload_0
       1: getfield      #5                  // Field count:J
       4: lconst_0
       5: lcmp
       6: ifle          67
       9: aload_1
      10: aload_0
      11: getfield      #2                  // Field source:Ljava/nio/channels/FileChannel;
      14: aload_0
      15: getfield      #4                  // Field position:J
      18: aload_0
      19: getfield      #5                  // Field count:J
      22: invokeinterface #6,  6            // InterfaceMethod org/xnio/channels/StreamSinkChannel.transferFrom:(Ljava/nio/channels/FileChannel;JJ)J
      27: lstore_2
      28: lload_2
      29: lconst_0
      30: lcmp
      31: ifeq          57
      34: aload_0
      35: dup
      36: getfield      #4                  // Field position:J
      39: lload_2
      40: ladd
      41: putfield      #4                  // Field position:J
      44: aload_0
      45: dup
      46: getfield      #5                  // Field count:J
      49: lload_2
      50: lsub
      51: putfield      #5                  // Field count:J
      54: goto          64
      57: aload_1
      58: invokeinterface #7,  1            // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
      63: return
      64: goto          0
      67: aload_0
      68: getfield      #3                  // Field sink:Lreactor/core/publisher/MonoSink;
      71: invokeinterface #8,  1            // InterfaceMethod reactor/core/publisher/MonoSink.success:()V
      76: goto          90
      79: astore_2
      80: aload_0
      81: getfield      #3                  // Field sink:Lreactor/core/publisher/MonoSink;
      84: aload_2
      85: invokeinterface #10,  2           // InterfaceMethod reactor/core/publisher/MonoSink.error:(Ljava/lang/Throwable;)V
      90: return
    Exception table:
       from    to  target type
           0    63    79   Class java/io/IOException
          64    76    79   Class java/io/IOException

  public void closeSource();
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Ljava/nio/channels/FileChannel;
       4: invokevirtual #11                 // Method java/nio/channels/FileChannel.close:()V
       7: goto          11
      10: astore_1
      11: return
    Exception table:
       from    to  target type
           0     7    10   Class java/io/IOException
}
