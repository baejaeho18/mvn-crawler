Compiled from "ResourceHttpMessageWriter.java"
public class org.springframework.http.codec.ResourceHttpMessageWriter implements org.springframework.http.codec.HttpMessageWriter<org.springframework.core.io.Resource> {
  private static final org.springframework.core.ResolvableType REGION_TYPE;

  private static final org.apache.commons.logging.Log logger;

  private final org.springframework.core.codec.ResourceEncoder encoder;

  private final org.springframework.core.codec.ResourceRegionEncoder regionEncoder;

  private final java.util.List<org.springframework.http.MediaType> mediaTypes;

  public org.springframework.http.codec.ResourceHttpMessageWriter();
    Code:
       0: aload_0
       1: sipush        4096
       4: invokespecial #2                  // Method "<init>":(I)V
       7: return

  public org.springframework.http.codec.ResourceHttpMessageWriter(int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #1                  // class org/springframework/core/codec/ResourceEncoder
       8: dup
       9: iload_1
      10: invokespecial #4                  // Method org/springframework/core/codec/ResourceEncoder."<init>":(I)V
      13: putfield      #5                  // Field encoder:Lorg/springframework/core/codec/ResourceEncoder;
      16: aload_0
      17: new           #6                  // class org/springframework/core/codec/ResourceRegionEncoder
      20: dup
      21: iload_1
      22: invokespecial #7                  // Method org/springframework/core/codec/ResourceRegionEncoder."<init>":(I)V
      25: putfield      #8                  // Field regionEncoder:Lorg/springframework/core/codec/ResourceRegionEncoder;
      28: aload_0
      29: aload_0
      30: getfield      #5                  // Field encoder:Lorg/springframework/core/codec/ResourceEncoder;
      33: invokevirtual #9                  // Method org/springframework/core/codec/ResourceEncoder.getEncodableMimeTypes:()Ljava/util/List;
      36: invokestatic  #10                 // Method org/springframework/http/MediaType.asMediaTypes:(Ljava/util/List;)Ljava/util/List;
      39: putfield      #11                 // Field mediaTypes:Ljava/util/List;
      42: return

  public boolean canWrite(org.springframework.core.ResolvableType, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #5                  // Field encoder:Lorg/springframework/core/codec/ResourceEncoder;
       4: aload_1
       5: aload_2
       6: invokevirtual #12                 // Method org/springframework/core/codec/ResourceEncoder.canEncode:(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
       9: ireturn

  public java.util.List<org.springframework.http.MediaType> getWritableMediaTypes();
    Code:
       0: aload_0
       1: getfield      #11                 // Field mediaTypes:Ljava/util/List;
       4: areturn

  public reactor.core.publisher.Mono<java.lang.Void> write(org.reactivestreams.Publisher<? extends org.springframework.core.io.Resource>, org.springframework.core.ResolvableType, org.springframework.http.MediaType, org.springframework.http.ReactiveHttpOutputMessage, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method reactor/core/publisher/Mono.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
       4: aload_0
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokedynamic #14,  0             // InvokeDynamic #0:apply:(Lorg/springframework/http/codec/ResourceHttpMessageWriter;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Ljava/util/function/Function;
      16: invokevirtual #15                 // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      19: areturn

  private reactor.core.publisher.Mono<java.lang.Void> writeResource(org.springframework.core.io.Resource, org.springframework.core.ResolvableType, org.springframework.http.MediaType, org.springframework.http.ReactiveHttpOutputMessage, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload         4
       2: invokeinterface #16,  1           // InterfaceMethod org/springframework/http/ReactiveHttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
       7: astore        6
       9: aload_3
      10: aload_1
      11: aload         5
      13: invokestatic  #17                 // Method getResourceMediaType:(Lorg/springframework/http/MediaType;Lorg/springframework/core/io/Resource;Ljava/util/Map;)Lorg/springframework/http/MediaType;
      16: astore        7
      18: aload         6
      20: aload         7
      22: invokevirtual #18                 // Method org/springframework/http/HttpHeaders.setContentType:(Lorg/springframework/http/MediaType;)V
      25: aload         6
      27: invokevirtual #19                 // Method org/springframework/http/HttpHeaders.getContentLength:()J
      30: lconst_0
      31: lcmp
      32: ifge          57
      35: aload_1
      36: invokestatic  #20                 // Method lengthOf:(Lorg/springframework/core/io/Resource;)J
      39: lstore        8
      41: lload         8
      43: ldc2_w        #21                 // long -1l
      46: lcmp
      47: ifeq          57
      50: aload         6
      52: lload         8
      54: invokevirtual #23                 // Method org/springframework/http/HttpHeaders.setContentLength:(J)V
      57: aload_1
      58: aconst_null
      59: aload         4
      61: aload         5
      63: invokestatic  #24                 // Method zeroCopy:(Lorg/springframework/core/io/Resource;Lorg/springframework/core/io/support/ResourceRegion;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Ljava/util/Optional;
      66: aload_0
      67: aload_1
      68: aload         4
      70: aload_2
      71: aload         7
      73: aload         5
      75: invokedynamic #25,  0             // InvokeDynamic #1:get:(Lorg/springframework/http/codec/ResourceHttpMessageWriter;Lorg/springframework/core/io/Resource;Lorg/springframework/http/ReactiveHttpOutputMessage;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Ljava/util/Map;)Ljava/util/function/Supplier;
      80: invokevirtual #26                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      83: checkcast     #27                 // class reactor/core/publisher/Mono
      86: areturn

  private static org.springframework.http.MediaType getResourceMediaType(org.springframework.http.MediaType, org.springframework.core.io.Resource, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: ifnull        23
       4: aload_0
       5: invokevirtual #28                 // Method org/springframework/http/MediaType.isConcrete:()Z
       8: ifeq          23
      11: aload_0
      12: getstatic     #29                 // Field org/springframework/http/MediaType.APPLICATION_OCTET_STREAM:Lorg/springframework/http/MediaType;
      15: invokevirtual #30                 // Method org/springframework/http/MediaType.equals:(Ljava/lang/Object;)Z
      18: ifne          23
      21: aload_0
      22: areturn
      23: aload_1
      24: invokestatic  #31                 // Method org/springframework/http/MediaTypeFactory.getMediaType:(Lorg/springframework/core/io/Resource;)Ljava/util/Optional;
      27: getstatic     #29                 // Field org/springframework/http/MediaType.APPLICATION_OCTET_STREAM:Lorg/springframework/http/MediaType;
      30: invokevirtual #32                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #33                 // class org/springframework/http/MediaType
      36: astore_0
      37: getstatic     #34                 // Field logger:Lorg/apache/commons/logging/Log;
      40: invokeinterface #35,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      45: ifeq          94
      48: aload_2
      49: invokestatic  #36                 // Method org/springframework/core/codec/Hints.isLoggingSuppressed:(Ljava/util/Map;)Z
      52: ifne          94
      55: getstatic     #34                 // Field logger:Lorg/apache/commons/logging/Log;
      58: new           #37                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      65: aload_2
      66: invokestatic  #39                 // Method org/springframework/core/codec/Hints.getLogPrefix:(Ljava/util/Map;)Ljava/lang/String;
      69: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: ldc           #41                 // String Resource associated with \'
      74: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_0
      78: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: ldc           #43                 // String \'
      83: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      94: aload_0
      95: areturn

  private static long lengthOf(org.springframework.core.io.Resource);
    Code:
       0: ldc           #46                 // class org/springframework/core/io/InputStreamResource
       2: aload_0
       3: invokevirtual #47                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: if_acmpeq     17
       9: aload_0
      10: invokeinterface #48,  1           // InterfaceMethod org/springframework/core/io/Resource.contentLength:()J
      15: lreturn
      16: astore_1
      17: ldc2_w        #21                 // long -1l
      20: lreturn
    Exception table:
       from    to  target type
           9    15    16   Class java/io/IOException

  private static java.util.Optional<reactor.core.publisher.Mono<java.lang.Void>> zeroCopy(org.springframework.core.io.Resource, org.springframework.core.io.support.ResourceRegion, org.springframework.http.ReactiveHttpOutputMessage, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_2
       1: instanceof    #50                 // class org/springframework/http/ZeroCopyHttpOutputMessage
       4: ifeq          183
       7: aload_0
       8: invokeinterface #51,  1           // InterfaceMethod org/springframework/core/io/Resource.isFile:()Z
      13: ifeq          183
      16: aload_0
      17: invokeinterface #52,  1           // InterfaceMethod org/springframework/core/io/Resource.getFile:()Ljava/io/File;
      22: astore        4
      24: aload_1
      25: ifnull        35
      28: aload_1
      29: invokevirtual #53                 // Method org/springframework/core/io/support/ResourceRegion.getPosition:()J
      32: goto          36
      35: lconst_0
      36: lstore        5
      38: aload_1
      39: ifnull        49
      42: aload_1
      43: invokevirtual #54                 // Method org/springframework/core/io/support/ResourceRegion.getCount:()J
      46: goto          54
      49: aload         4
      51: invokevirtual #55                 // Method java/io/File.length:()J
      54: lstore        7
      56: getstatic     #34                 // Field logger:Lorg/apache/commons/logging/Log;
      59: invokeinterface #35,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      64: ifeq          162
      67: aload_1
      68: ifnull        109
      71: new           #37                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      78: ldc           #56                 // String region
      80: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: lload         5
      85: invokevirtual #57                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      88: ldc           #58                 // String -
      90: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: lload         7
      95: invokevirtual #57                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      98: ldc           #59                 // String  of
     100: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: goto          111
     109: ldc           #60                 // String
     111: astore        9
     113: getstatic     #34                 // Field logger:Lorg/apache/commons/logging/Log;
     116: new           #37                 // class java/lang/StringBuilder
     119: dup
     120: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     123: aload_3
     124: invokestatic  #39                 // Method org/springframework/core/codec/Hints.getLogPrefix:(Ljava/util/Map;)Ljava/lang/String;
     127: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: ldc           #61                 // String Zero-copy
     132: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: aload         9
     137: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: ldc           #62                 // String [
     142: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: aload_0
     146: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     149: ldc           #63                 // String ]
     151: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     162: aload_2
     163: checkcast     #50                 // class org/springframework/http/ZeroCopyHttpOutputMessage
     166: aload         4
     168: lload         5
     170: lload         7
     172: invokeinterface #64,  6           // InterfaceMethod org/springframework/http/ZeroCopyHttpOutputMessage.writeWith:(Ljava/io/File;JJ)Lreactor/core/publisher/Mono;
     177: invokestatic  #65                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
     180: areturn
     181: astore        4
     183: invokestatic  #66                 // Method java/util/Optional.empty:()Ljava/util/Optional;
     186: areturn
    Exception table:
       from    to  target type
          16   180   181   Class java/io/IOException

  public reactor.core.publisher.Mono<java.lang.Void> write(org.reactivestreams.Publisher<? extends org.springframework.core.io.Resource>, org.springframework.core.ResolvableType, org.springframework.core.ResolvableType, org.springframework.http.MediaType, org.springframework.http.server.reactive.ServerHttpRequest, org.springframework.http.server.reactive.ServerHttpResponse, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload         6
       2: invokeinterface #67,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.getHeaders:()Lorg/springframework/http/HttpHeaders;
       7: astore        8
       9: aload         8
      11: ldc           #69                 // String Accept-Ranges
      13: ldc           #70                 // String bytes
      15: invokevirtual #71                 // Method org/springframework/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/String;)V
      18: aload         5
      20: invokeinterface #72,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getHeaders:()Lorg/springframework/http/HttpHeaders;
      25: invokevirtual #73                 // Method org/springframework/http/HttpHeaders.getRange:()Ljava/util/List;
      28: astore        9
      30: goto          54
      33: astore        10
      35: aload         6
      37: getstatic     #75                 // Field org/springframework/http/HttpStatus.REQUESTED_RANGE_NOT_SATISFIABLE:Lorg/springframework/http/HttpStatus;
      40: invokeinterface #76,  2           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.setStatusCode:(Lorg/springframework/http/HttpStatus;)Z
      45: pop
      46: aload         6
      48: invokeinterface #77,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.setComplete:()Lreactor/core/publisher/Mono;
      53: areturn
      54: aload_1
      55: invokestatic  #13                 // Method reactor/core/publisher/Mono.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
      58: aload_0
      59: aload         9
      61: aload_3
      62: aload         4
      64: aload         6
      66: aload         7
      68: aload         8
      70: invokedynamic #78,  0             // InvokeDynamic #2:apply:(Lorg/springframework/http/codec/ResourceHttpMessageWriter;Ljava/util/List;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/server/reactive/ServerHttpResponse;Ljava/util/Map;Lorg/springframework/http/HttpHeaders;)Ljava/util/function/Function;
      75: invokevirtual #15                 // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      78: areturn
    Exception table:
       from    to  target type
          18    30    33   Class java/lang/IllegalArgumentException

  private reactor.core.publisher.Mono<java.lang.Void> writeSingleRegion(org.springframework.core.io.support.ResourceRegion, org.springframework.http.ReactiveHttpOutputMessage, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: invokevirtual #79                 // Method org/springframework/core/io/support/ResourceRegion.getResource:()Lorg/springframework/core/io/Resource;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokestatic  #24                 // Method zeroCopy:(Lorg/springframework/core/io/Resource;Lorg/springframework/core/io/support/ResourceRegion;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Ljava/util/Optional;
      10: aload_0
      11: aload_1
      12: aload_2
      13: aload_3
      14: invokedynamic #80,  0             // InvokeDynamic #3:get:(Lorg/springframework/http/codec/ResourceHttpMessageWriter;Lorg/springframework/core/io/support/ResourceRegion;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Ljava/util/function/Supplier;
      19: invokevirtual #26                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      22: checkcast     #27                 // class reactor/core/publisher/Mono
      25: areturn

  private reactor.core.publisher.Mono<java.lang.Void> encodeAndWriteRegions(org.reactivestreams.Publisher<? extends org.springframework.core.io.support.ResourceRegion>, org.springframework.http.MediaType, org.springframework.http.ReactiveHttpOutputMessage, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field regionEncoder:Lorg/springframework/core/codec/ResourceRegionEncoder;
       4: aload_1
       5: aload_3
       6: invokeinterface #81,  1           // InterfaceMethod org/springframework/http/ReactiveHttpOutputMessage.bufferFactory:()Lorg/springframework/core/io/buffer/DataBufferFactory;
      11: getstatic     #82                 // Field REGION_TYPE:Lorg/springframework/core/ResolvableType;
      14: aload_2
      15: aload         4
      17: invokevirtual #83                 // Method org/springframework/core/codec/ResourceRegionEncoder.encode:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
      20: astore        5
      22: aload_3
      23: aload         5
      25: invokeinterface #84,  2           // InterfaceMethod org/springframework/http/ReactiveHttpOutputMessage.writeWith:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
      30: areturn

  private reactor.core.publisher.Mono lambda$writeSingleRegion$3(org.springframework.core.io.support.ResourceRegion, org.springframework.http.ReactiveHttpOutputMessage, java.util.Map);
    Code:
       0: aload_1
       1: invokestatic  #85                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
       4: astore        4
       6: aload_2
       7: invokeinterface #16,  1           // InterfaceMethod org/springframework/http/ReactiveHttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
      12: invokevirtual #86                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      15: astore        5
      17: aload_0
      18: aload         4
      20: aload         5
      22: aload_2
      23: aload_3
      24: invokespecial #87                 // Method encodeAndWriteRegions:(Lorg/reactivestreams/Publisher;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
      27: areturn

  private reactor.core.publisher.Mono lambda$write$2(java.util.List, org.springframework.core.ResolvableType, org.springframework.http.MediaType, org.springframework.http.server.reactive.ServerHttpResponse, java.util.Map, org.springframework.http.HttpHeaders, org.springframework.core.io.Resource);
    Code:
       0: aload_1
       1: invokeinterface #88,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       6: ifeq          22
       9: aload_0
      10: aload         7
      12: aload_2
      13: aload_3
      14: aload         4
      16: aload         5
      18: invokespecial #89                 // Method writeResource:(Lorg/springframework/core/io/Resource;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
      21: areturn
      22: aload         4
      24: getstatic     #90                 // Field org/springframework/http/HttpStatus.PARTIAL_CONTENT:Lorg/springframework/http/HttpStatus;
      27: invokeinterface #76,  2           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.setStatusCode:(Lorg/springframework/http/HttpStatus;)Z
      32: pop
      33: aload_1
      34: aload         7
      36: invokestatic  #91                 // Method org/springframework/http/HttpRange.toResourceRegions:(Ljava/util/List;Lorg/springframework/core/io/Resource;)Ljava/util/List;
      39: astore        8
      41: aload_3
      42: aload         7
      44: aload         5
      46: invokestatic  #17                 // Method getResourceMediaType:(Lorg/springframework/http/MediaType;Lorg/springframework/core/io/Resource;Ljava/util/Map;)Lorg/springframework/http/MediaType;
      49: astore        9
      51: aload         8
      53: invokeinterface #92,  1           // InterfaceMethod java/util/List.size:()I
      58: iconst_1
      59: if_icmpne     198
      62: aload         8
      64: iconst_0
      65: invokeinterface #93,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      70: checkcast     #94                 // class org/springframework/core/io/support/ResourceRegion
      73: astore        10
      75: aload         6
      77: aload         9
      79: invokevirtual #18                 // Method org/springframework/http/HttpHeaders.setContentType:(Lorg/springframework/http/MediaType;)V
      82: aload         7
      84: invokestatic  #20                 // Method lengthOf:(Lorg/springframework/core/io/Resource;)J
      87: lstore        11
      89: lload         11
      91: ldc2_w        #21                 // long -1l
      94: lcmp
      95: ifeq          187
      98: aload         10
     100: invokevirtual #53                 // Method org/springframework/core/io/support/ResourceRegion.getPosition:()J
     103: lstore        13
     105: lload         13
     107: aload         10
     109: invokevirtual #54                 // Method org/springframework/core/io/support/ResourceRegion.getCount:()J
     112: ladd
     113: lconst_1
     114: lsub
     115: lstore        15
     117: lload         15
     119: lload         11
     121: lconst_1
     122: lsub
     123: invokestatic  #95                 // Method java/lang/Math.min:(JJ)J
     126: lstore        15
     128: aload         6
     130: ldc           #96                 // String Content-Range
     132: new           #37                 // class java/lang/StringBuilder
     135: dup
     136: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     139: ldc           #97                 // String bytes
     141: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: lload         13
     146: invokevirtual #57                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     149: bipush        45
     151: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     154: lload         15
     156: invokevirtual #57                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     159: bipush        47
     161: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     164: lload         11
     166: invokevirtual #57                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     169: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     172: invokevirtual #99                 // Method org/springframework/http/HttpHeaders.add:(Ljava/lang/String;Ljava/lang/String;)V
     175: aload         6
     177: lload         15
     179: lload         13
     181: lsub
     182: lconst_1
     183: ladd
     184: invokevirtual #23                 // Method org/springframework/http/HttpHeaders.setContentLength:(J)V
     187: aload_0
     188: aload         10
     190: aload         4
     192: aload         5
     194: invokespecial #100                // Method writeSingleRegion:(Lorg/springframework/core/io/support/ResourceRegion;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
     197: areturn
     198: invokestatic  #101                // Method org/springframework/util/MimeTypeUtils.generateMultipartBoundaryString:()Ljava/lang/String;
     201: astore        10
     203: new           #37                 // class java/lang/StringBuilder
     206: dup
     207: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     210: ldc           #102                // String multipart/byteranges;boundary=
     212: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: aload         10
     217: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     220: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     223: invokestatic  #103                // Method org/springframework/http/MediaType.parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
     226: astore        11
     228: aload         6
     230: aload         11
     232: invokevirtual #18                 // Method org/springframework/http/HttpHeaders.setContentType:(Lorg/springframework/http/MediaType;)V
     235: aload         5
     237: getstatic     #104                // Field org/springframework/core/codec/ResourceRegionEncoder.BOUNDARY_STRING_HINT:Ljava/lang/String;
     240: aload         10
     242: invokestatic  #105                // Method org/springframework/core/codec/Hints.merge:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/Map;
     245: astore        12
     247: aload_0
     248: aload         8
     250: invokestatic  #106                // Method reactor/core/publisher/Flux.fromIterable:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
     253: aload         9
     255: aload         4
     257: aload         12
     259: invokespecial #87                 // Method encodeAndWriteRegions:(Lorg/reactivestreams/Publisher;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
     262: areturn

  private reactor.core.publisher.Mono lambda$writeResource$1(org.springframework.core.io.Resource, org.springframework.http.ReactiveHttpOutputMessage, org.springframework.core.ResolvableType, org.springframework.http.MediaType, java.util.Map);
    Code:
       0: aload_1
       1: invokestatic  #85                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
       4: astore        6
       6: aload_2
       7: invokeinterface #81,  1           // InterfaceMethod org/springframework/http/ReactiveHttpOutputMessage.bufferFactory:()Lorg/springframework/core/io/buffer/DataBufferFactory;
      12: astore        7
      14: aload_0
      15: getfield      #5                  // Field encoder:Lorg/springframework/core/codec/ResourceEncoder;
      18: aload         6
      20: aload         7
      22: aload_3
      23: aload         4
      25: aload         5
      27: invokevirtual #107                // Method org/springframework/core/codec/ResourceEncoder.encode:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
      30: astore        8
      32: aload_2
      33: aload         8
      35: invokeinterface #84,  2           // InterfaceMethod org/springframework/http/ReactiveHttpOutputMessage.writeWith:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
      40: areturn

  private reactor.core.publisher.Mono lambda$write$0(org.springframework.core.ResolvableType, org.springframework.http.MediaType, org.springframework.http.ReactiveHttpOutputMessage, java.util.Map, org.springframework.core.io.Resource);
    Code:
       0: aload_0
       1: aload         5
       3: aload_1
       4: aload_2
       5: aload_3
       6: aload         4
       8: invokespecial #89                 // Method writeResource:(Lorg/springframework/core/io/Resource;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
      11: areturn

  static {};
    Code:
       0: ldc           #94                 // class org/springframework/core/io/support/ResourceRegion
       2: invokestatic  #108                // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
       5: putstatic     #82                 // Field REGION_TYPE:Lorg/springframework/core/ResolvableType;
       8: ldc           #109                // class org/springframework/http/codec/ResourceHttpMessageWriter
      10: invokestatic  #110                // Method org/springframework/http/HttpLogging.forLogName:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      13: putstatic     #34                 // Field logger:Lorg/apache/commons/logging/Log;
      16: return
}
