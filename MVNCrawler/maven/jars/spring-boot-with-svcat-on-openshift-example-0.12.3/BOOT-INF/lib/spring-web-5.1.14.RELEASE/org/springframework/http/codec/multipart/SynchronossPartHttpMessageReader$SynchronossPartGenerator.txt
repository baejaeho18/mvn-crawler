Compiled from "SynchronossPartHttpMessageReader.java"
class org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader$SynchronossPartGenerator extends reactor.core.publisher.BaseSubscriber<org.springframework.core.io.buffer.DataBuffer> implements java.util.function.Consumer<reactor.core.publisher.FluxSink<org.springframework.http.codec.multipart.Part>> {
  private final org.springframework.http.ReactiveHttpInputMessage inputMessage;

  private final org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader$LimitedPartBodyStreamStorageFactory storageFactory;

  private org.synchronoss.cloud.nio.multipart.NioMultipartParserListener listener;

  private org.synchronoss.cloud.nio.multipart.NioMultipartParser parser;

  final org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader this$0;

  public org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader$SynchronossPartGenerator(org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader, org.springframework.http.ReactiveHttpInputMessage);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/http/codec/multipart/SynchronossPartHttpMessageReader;
       5: aload_0
       6: invokespecial #2                  // Method reactor/core/publisher/BaseSubscriber."<init>":()V
       9: aload_0
      10: new           #3                  // class org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$LimitedPartBodyStreamStorageFactory
      13: dup
      14: aload_0
      15: getfield      #1                  // Field this$0:Lorg/springframework/http/codec/multipart/SynchronossPartHttpMessageReader;
      18: aconst_null
      19: invokespecial #4                  // Method org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$LimitedPartBodyStreamStorageFactory."<init>":(Lorg/springframework/http/codec/multipart/SynchronossPartHttpMessageReader;Lorg/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$1;)V
      22: putfield      #5                  // Field storageFactory:Lorg/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$LimitedPartBodyStreamStorageFactory;
      25: aload_0
      26: aload_2
      27: putfield      #6                  // Field inputMessage:Lorg/springframework/http/ReactiveHttpInputMessage;
      30: return

  public void accept(reactor.core.publisher.FluxSink<org.springframework.http.codec.multipart.Part>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field inputMessage:Lorg/springframework/http/ReactiveHttpInputMessage;
       4: invokeinterface #7,  1            // InterfaceMethod org/springframework/http/ReactiveHttpInputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
       9: astore_2
      10: aload_2
      11: invokevirtual #8                  // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      14: astore_3
      15: aload_3
      16: ifnull        23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc           #9                  // String No content type set
      26: invokestatic  #10                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      29: aload_0
      30: aload_2
      31: invokespecial #11                 // Method getContentLength:(Lorg/springframework/http/HttpHeaders;)I
      34: istore        4
      36: aload_3
      37: invokevirtual #12                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
      40: invokestatic  #13                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      43: getstatic     #14                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      46: invokevirtual #15                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #16                 // class java/nio/charset/Charset
      52: astore        5
      54: new           #17                 // class org/synchronoss/cloud/nio/multipart/MultipartContext
      57: dup
      58: aload_3
      59: invokevirtual #18                 // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      62: iload         4
      64: aload         5
      66: invokevirtual #19                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      69: invokespecial #20                 // Method org/synchronoss/cloud/nio/multipart/MultipartContext."<init>":(Ljava/lang/String;ILjava/lang/String;)V
      72: astore        6
      74: aload_0
      75: new           #21                 // class org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$FluxSinkAdapterListener
      78: dup
      79: aload_1
      80: aload         6
      82: aload_0
      83: getfield      #5                  // Field storageFactory:Lorg/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$LimitedPartBodyStreamStorageFactory;
      86: invokespecial #22                 // Method org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$FluxSinkAdapterListener."<init>":(Lreactor/core/publisher/FluxSink;Lorg/synchronoss/cloud/nio/multipart/MultipartContext;Lorg/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$LimitedPartBodyStreamStorageFactory;)V
      89: putfield      #23                 // Field listener:Lorg/synchronoss/cloud/nio/multipart/NioMultipartParserListener;
      92: aload_0
      93: aload         6
      95: invokestatic  #24                 // Method org/synchronoss/cloud/nio/multipart/Multipart.multipart:(Lorg/synchronoss/cloud/nio/multipart/MultipartContext;)Lorg/synchronoss/cloud/nio/multipart/Multipart$Builder;
      98: aload_0
      99: getfield      #5                  // Field storageFactory:Lorg/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$LimitedPartBodyStreamStorageFactory;
     102: invokevirtual #25                 // Method org/synchronoss/cloud/nio/multipart/Multipart$Builder.usePartBodyStreamStorageFactory:(Lorg/synchronoss/cloud/nio/multipart/PartBodyStreamStorageFactory;)Lorg/synchronoss/cloud/nio/multipart/Multipart$Builder;
     105: aload_0
     106: getfield      #23                 // Field listener:Lorg/synchronoss/cloud/nio/multipart/NioMultipartParserListener;
     109: invokevirtual #26                 // Method org/synchronoss/cloud/nio/multipart/Multipart$Builder.forNIO:(Lorg/synchronoss/cloud/nio/multipart/NioMultipartParserListener;)Lorg/synchronoss/cloud/nio/multipart/NioMultipartParser;
     112: putfield      #27                 // Field parser:Lorg/synchronoss/cloud/nio/multipart/NioMultipartParser;
     115: aload_0
     116: getfield      #6                  // Field inputMessage:Lorg/springframework/http/ReactiveHttpInputMessage;
     119: invokeinterface #28,  1           // InterfaceMethod org/springframework/http/ReactiveHttpInputMessage.getBody:()Lreactor/core/publisher/Flux;
     124: aload_0
     125: invokevirtual #29                 // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
     128: return

  protected void hookOnNext(org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: aload_0
       1: getfield      #27                 // Field parser:Lorg/synchronoss/cloud/nio/multipart/NioMultipartParser;
       4: ifnull        18
       7: aload_0
       8: getfield      #23                 // Field listener:Lorg/synchronoss/cloud/nio/multipart/NioMultipartParserListener;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #30                 // String Not initialized yet
      21: invokestatic  #10                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      24: aload_1
      25: invokeinterface #31,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readableByteCount:()I
      30: istore_2
      31: aload_0
      32: getfield      #5                  // Field storageFactory:Lorg/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$LimitedPartBodyStreamStorageFactory;
      35: iload_2
      36: i2l
      37: invokevirtual #32                 // Method org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$LimitedPartBodyStreamStorageFactory.increaseByteCount:(J)V
      40: iload_2
      41: newarray       byte
      43: astore_3
      44: aload_1
      45: aload_3
      46: invokeinterface #33,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.read:([B)Lorg/springframework/core/io/buffer/DataBuffer;
      51: pop
      52: aload_0
      53: getfield      #27                 // Field parser:Lorg/synchronoss/cloud/nio/multipart/NioMultipartParser;
      56: aload_3
      57: invokevirtual #34                 // Method org/synchronoss/cloud/nio/multipart/NioMultipartParser.write:([B)V
      60: aload_1
      61: invokestatic  #35                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      64: pop
      65: goto          137
      68: astore        4
      70: aload_0
      71: invokevirtual #37                 // Method cancel:()V
      74: aload_0
      75: getfield      #5                  // Field storageFactory:Lorg/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$LimitedPartBodyStreamStorageFactory;
      78: invokevirtual #38                 // Method org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$LimitedPartBodyStreamStorageFactory.getCurrentPartIndex:()I
      81: istore        5
      83: aload_0
      84: getfield      #23                 // Field listener:Lorg/synchronoss/cloud/nio/multipart/NioMultipartParserListener;
      87: new           #39                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #41                 // String Parser error for part [
      96: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: iload         5
     101: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     104: ldc           #44                 // String ]
     106: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: aload         4
     114: invokeinterface #46,  3           // InterfaceMethod org/synchronoss/cloud/nio/multipart/NioMultipartParserListener.onError:(Ljava/lang/String;Ljava/lang/Throwable;)V
     119: aload_1
     120: invokestatic  #35                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
     123: pop
     124: goto          137
     127: astore        6
     129: aload_1
     130: invokestatic  #35                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
     133: pop
     134: aload         6
     136: athrow
     137: return
    Exception table:
       from    to  target type
          52    60    68   Class java/io/IOException
          52    60   127   any
          68   119   127   any
         127   129   127   any

  protected void hookOnError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #23                 // Field listener:Lorg/synchronoss/cloud/nio/multipart/NioMultipartParserListener;
       4: ifnull        49
       7: aload_0
       8: getfield      #5                  // Field storageFactory:Lorg/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$LimitedPartBodyStreamStorageFactory;
      11: invokevirtual #38                 // Method org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$LimitedPartBodyStreamStorageFactory.getCurrentPartIndex:()I
      14: istore_2
      15: aload_0
      16: getfield      #23                 // Field listener:Lorg/synchronoss/cloud/nio/multipart/NioMultipartParserListener;
      19: new           #39                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #47                 // String Failure while parsing part[
      28: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: iload_2
      32: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: ldc           #44                 // String ]
      37: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: aload_1
      44: invokeinterface #46,  3           // InterfaceMethod org/synchronoss/cloud/nio/multipart/NioMultipartParserListener.onError:(Ljava/lang/String;Ljava/lang/Throwable;)V
      49: return

  protected void hookOnComplete();
    Code:
       0: aload_0
       1: getfield      #23                 // Field listener:Lorg/synchronoss/cloud/nio/multipart/NioMultipartParserListener;
       4: ifnull        16
       7: aload_0
       8: getfield      #23                 // Field listener:Lorg/synchronoss/cloud/nio/multipart/NioMultipartParserListener;
      11: invokeinterface #48,  1           // InterfaceMethod org/synchronoss/cloud/nio/multipart/NioMultipartParserListener.onAllPartsFinished:()V
      16: return

  protected void hookFinally(reactor.core.publisher.SignalType);
    Code:
       0: aload_0
       1: getfield      #27                 // Field parser:Lorg/synchronoss/cloud/nio/multipart/NioMultipartParser;
       4: ifnull        14
       7: aload_0
       8: getfield      #27                 // Field parser:Lorg/synchronoss/cloud/nio/multipart/NioMultipartParser;
      11: invokevirtual #49                 // Method org/synchronoss/cloud/nio/multipart/NioMultipartParser.close:()V
      14: goto          18
      17: astore_2
      18: return
    Exception table:
       from    to  target type
           0    14    17   Class java/io/IOException

  private int getContentLength(org.springframework.http.HttpHeaders);
    Code:
       0: aload_1
       1: invokevirtual #50                 // Method org/springframework/http/HttpHeaders.getContentLength:()J
       4: lstore_2
       5: lload_2
       6: l2i
       7: i2l
       8: lload_2
       9: lcmp
      10: ifne          18
      13: lload_2
      14: l2i
      15: goto          19
      18: iconst_m1
      19: ireturn

  protected void hookOnNext(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #51                 // class org/springframework/core/io/buffer/DataBuffer
       5: invokevirtual #52                 // Method hookOnNext:(Lorg/springframework/core/io/buffer/DataBuffer;)V
       8: return

  public void accept(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #53                 // class reactor/core/publisher/FluxSink
       5: invokevirtual #54                 // Method accept:(Lreactor/core/publisher/FluxSink;)V
       8: return
}
