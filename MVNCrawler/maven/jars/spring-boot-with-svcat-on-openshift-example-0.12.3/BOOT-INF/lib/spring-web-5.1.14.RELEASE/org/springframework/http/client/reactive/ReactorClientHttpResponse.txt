Compiled from "ReactorClientHttpResponse.java"
class org.springframework.http.client.reactive.ReactorClientHttpResponse implements org.springframework.http.client.reactive.ClientHttpResponse {
  private final org.springframework.core.io.buffer.NettyDataBufferFactory bufferFactory;

  private final reactor.netty.http.client.HttpClientResponse response;

  private final reactor.netty.NettyInbound inbound;

  private final java.util.concurrent.atomic.AtomicBoolean rejectSubscribers;

  public org.springframework.http.client.reactive.ReactorClientHttpResponse(reactor.netty.http.client.HttpClientResponse, reactor.netty.NettyInbound, io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #4                  // Field rejectSubscribers:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field response:Lreactor/netty/http/client/HttpClientResponse;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field inbound:Lreactor/netty/NettyInbound;
      25: aload_0
      26: new           #7                  // class org/springframework/core/io/buffer/NettyDataBufferFactory
      29: dup
      30: aload_3
      31: invokespecial #8                  // Method org/springframework/core/io/buffer/NettyDataBufferFactory."<init>":(Lio/netty/buffer/ByteBufAllocator;)V
      34: putfield      #9                  // Field bufferFactory:Lorg/springframework/core/io/buffer/NettyDataBufferFactory;
      37: return

  public reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> getBody();
    Code:
       0: aload_0
       1: getfield      #6                  // Field inbound:Lreactor/netty/NettyInbound;
       4: invokeinterface #10,  1           // InterfaceMethod reactor/netty/NettyInbound.receive:()Lreactor/netty/ByteBufFlux;
       9: aload_0
      10: invokedynamic #11,  0             // InvokeDynamic #0:accept:(Lorg/springframework/http/client/reactive/ReactorClientHttpResponse;)Ljava/util/function/Consumer;
      15: invokevirtual #12                 // Method reactor/netty/ByteBufFlux.doOnSubscribe:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
      18: aload_0
      19: invokedynamic #13,  0             // InvokeDynamic #1:run:(Lorg/springframework/http/client/reactive/ReactorClientHttpResponse;)Ljava/lang/Runnable;
      24: invokevirtual #14                 // Method reactor/core/publisher/Flux.doOnCancel:(Ljava/lang/Runnable;)Lreactor/core/publisher/Flux;
      27: aload_0
      28: invokedynamic #15,  0             // InvokeDynamic #2:apply:(Lorg/springframework/http/client/reactive/ReactorClientHttpResponse;)Ljava/util/function/Function;
      33: invokevirtual #16                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      36: areturn

  public org.springframework.http.HttpHeaders getHeaders();
    Code:
       0: new           #17                 // class org/springframework/http/HttpHeaders
       3: dup
       4: invokespecial #18                 // Method org/springframework/http/HttpHeaders."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field response:Lreactor/netty/http/client/HttpClientResponse;
      12: invokeinterface #19,  1           // InterfaceMethod reactor/netty/http/client/HttpClientResponse.responseHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
      17: invokevirtual #20                 // Method io/netty/handler/codec/http/HttpHeaders.entries:()Ljava/util/List;
      20: aload_1
      21: invokedynamic #21,  0             // InvokeDynamic #3:accept:(Lorg/springframework/http/HttpHeaders;)Ljava/util/function/Consumer;
      26: invokeinterface #22,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      31: aload_1
      32: areturn

  public org.springframework.http.HttpStatus getStatusCode();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getRawStatusCode:()I
       4: invokestatic  #24                 // Method org/springframework/http/HttpStatus.valueOf:(I)Lorg/springframework/http/HttpStatus;
       7: areturn

  public int getRawStatusCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field response:Lreactor/netty/http/client/HttpClientResponse;
       4: invokeinterface #25,  1           // InterfaceMethod reactor/netty/http/client/HttpClientResponse.status:()Lio/netty/handler/codec/http/HttpResponseStatus;
       9: invokevirtual #26                 // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
      12: ireturn

  public org.springframework.util.MultiValueMap<java.lang.String, org.springframework.http.ResponseCookie> getCookies();
    Code:
       0: new           #27                 // class org/springframework/util/LinkedMultiValueMap
       3: dup
       4: invokespecial #28                 // Method org/springframework/util/LinkedMultiValueMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field response:Lreactor/netty/http/client/HttpClientResponse;
      12: invokeinterface #29,  1           // InterfaceMethod reactor/netty/http/client/HttpClientResponse.cookies:()Ljava/util/Map;
      17: invokeinterface #30,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      22: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      27: invokedynamic #32,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      32: invokeinterface #33,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      37: aload_1
      38: invokedynamic #34,  0             // InvokeDynamic #5:accept:(Lorg/springframework/util/MultiValueMap;)Ljava/util/function/Consumer;
      43: invokeinterface #35,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      48: aload_1
      49: invokestatic  #36                 // Method org/springframework/util/CollectionUtils.unmodifiableMultiValueMap:(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/util/MultiValueMap;
      52: areturn

  public java.lang.String toString();
    Code:
       0: new           #37                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #39                 // String ReactorClientHttpResponse{request=[
       9: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field response:Lreactor/netty/http/client/HttpClientResponse;
      16: invokeinterface #41,  1           // InterfaceMethod reactor/netty/http/client/HttpClientResponse.method:()Lio/netty/handler/codec/http/HttpMethod;
      21: invokevirtual #42                 // Method io/netty/handler/codec/http/HttpMethod.name:()Ljava/lang/String;
      24: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #43                 // String
      29: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: getfield      #5                  // Field response:Lreactor/netty/http/client/HttpClientResponse;
      36: invokeinterface #44,  1           // InterfaceMethod reactor/netty/http/client/HttpClientResponse.uri:()Ljava/lang/String;
      41: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #45                 // String ],status=
      46: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_0
      50: invokevirtual #23                 // Method getRawStatusCode:()I
      53: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      56: bipush        125
      58: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      61: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: areturn

  private static void lambda$getCookies$4(org.springframework.util.MultiValueMap, io.netty.handler.codec.http.cookie.Cookie);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #49,  1           // InterfaceMethod io/netty/handler/codec/http/cookie/Cookie.name:()Ljava/lang/String;
       7: aload_1
       8: invokeinterface #49,  1           // InterfaceMethod io/netty/handler/codec/http/cookie/Cookie.name:()Ljava/lang/String;
      13: aload_1
      14: invokeinterface #50,  1           // InterfaceMethod io/netty/handler/codec/http/cookie/Cookie.value:()Ljava/lang/String;
      19: invokestatic  #51                 // Method org/springframework/http/ResponseCookie.from:(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
      22: aload_1
      23: invokeinterface #52,  1           // InterfaceMethod io/netty/handler/codec/http/cookie/Cookie.domain:()Ljava/lang/String;
      28: invokeinterface #53,  2           // InterfaceMethod org/springframework/http/ResponseCookie$ResponseCookieBuilder.domain:(Ljava/lang/String;)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
      33: aload_1
      34: invokeinterface #54,  1           // InterfaceMethod io/netty/handler/codec/http/cookie/Cookie.path:()Ljava/lang/String;
      39: invokeinterface #55,  2           // InterfaceMethod org/springframework/http/ResponseCookie$ResponseCookieBuilder.path:(Ljava/lang/String;)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
      44: aload_1
      45: invokeinterface #56,  1           // InterfaceMethod io/netty/handler/codec/http/cookie/Cookie.maxAge:()J
      50: invokeinterface #57,  3           // InterfaceMethod org/springframework/http/ResponseCookie$ResponseCookieBuilder.maxAge:(J)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
      55: aload_1
      56: invokeinterface #58,  1           // InterfaceMethod io/netty/handler/codec/http/cookie/Cookie.isSecure:()Z
      61: invokeinterface #59,  2           // InterfaceMethod org/springframework/http/ResponseCookie$ResponseCookieBuilder.secure:(Z)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
      66: aload_1
      67: invokeinterface #60,  1           // InterfaceMethod io/netty/handler/codec/http/cookie/Cookie.isHttpOnly:()Z
      72: invokeinterface #61,  2           // InterfaceMethod org/springframework/http/ResponseCookie$ResponseCookieBuilder.httpOnly:(Z)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
      77: invokeinterface #62,  1           // InterfaceMethod org/springframework/http/ResponseCookie$ResponseCookieBuilder.build:()Lorg/springframework/http/ResponseCookie;
      82: invokeinterface #63,  3           // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      87: return

  private static void lambda$getHeaders$3(org.springframework.http.HttpHeaders, java.util.Map$Entry);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       7: checkcast     #65                 // class java/lang/String
      10: aload_1
      11: invokeinterface #66,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      16: checkcast     #65                 // class java/lang/String
      19: invokevirtual #67                 // Method org/springframework/http/HttpHeaders.add:(Ljava/lang/String;Ljava/lang/String;)V
      22: return

  private org.springframework.core.io.buffer.DataBuffer lambda$getBody$2(io.netty.buffer.ByteBuf);
    Code:
       0: aload_1
       1: invokevirtual #68                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
       4: pop
       5: aload_0
       6: getfield      #9                  // Field bufferFactory:Lorg/springframework/core/io/buffer/NettyDataBufferFactory;
       9: aload_1
      10: invokevirtual #69                 // Method org/springframework/core/io/buffer/NettyDataBufferFactory.wrap:(Lio/netty/buffer/ByteBuf;)Lorg/springframework/core/io/buffer/NettyDataBuffer;
      13: areturn

  private void lambda$getBody$1();
    Code:
       0: aload_0
       1: getfield      #4                  // Field rejectSubscribers:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #70                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  private void lambda$getBody$0(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #4                  // Field rejectSubscribers:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #71                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          20
      10: new           #72                 // class java/lang/IllegalStateException
      13: dup
      14: ldc           #73                 // String The client response body can only be consumed once.
      16: invokespecial #74                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return
}
