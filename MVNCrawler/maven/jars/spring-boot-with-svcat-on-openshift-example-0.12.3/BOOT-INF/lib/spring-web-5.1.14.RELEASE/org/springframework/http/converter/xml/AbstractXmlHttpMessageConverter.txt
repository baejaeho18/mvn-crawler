Compiled from "AbstractXmlHttpMessageConverter.java"
public abstract class org.springframework.http.converter.xml.AbstractXmlHttpMessageConverter<T> extends org.springframework.http.converter.AbstractHttpMessageConverter<T> {
  private final javax.xml.transform.TransformerFactory transformerFactory;

  protected org.springframework.http.converter.xml.AbstractXmlHttpMessageConverter();
    Code:
       0: aload_0
       1: iconst_3
       2: anewarray     #1                  // class org/springframework/http/MediaType
       5: dup
       6: iconst_0
       7: getstatic     #2                  // Field org/springframework/http/MediaType.APPLICATION_XML:Lorg/springframework/http/MediaType;
      10: aastore
      11: dup
      12: iconst_1
      13: getstatic     #3                  // Field org/springframework/http/MediaType.TEXT_XML:Lorg/springframework/http/MediaType;
      16: aastore
      17: dup
      18: iconst_2
      19: new           #1                  // class org/springframework/http/MediaType
      22: dup
      23: ldc           #4                  // String application
      25: ldc           #5                  // String *+xml
      27: invokespecial #6                  // Method org/springframework/http/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      30: aastore
      31: invokespecial #7                  // Method org/springframework/http/converter/AbstractHttpMessageConverter."<init>":([Lorg/springframework/http/MediaType;)V
      34: aload_0
      35: invokestatic  #8                  // Method javax/xml/transform/TransformerFactory.newInstance:()Ljavax/xml/transform/TransformerFactory;
      38: putfield      #9                  // Field transformerFactory:Ljavax/xml/transform/TransformerFactory;
      41: return

  public final T readInternal(java.lang.Class<? extends T>, org.springframework.http.HttpInputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotReadableException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #10,  1           // InterfaceMethod org/springframework/http/HttpInputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
       8: new           #11                 // class javax/xml/transform/stream/StreamSource
      11: dup
      12: aload_2
      13: invokeinterface #12,  1           // InterfaceMethod org/springframework/http/HttpInputMessage.getBody:()Ljava/io/InputStream;
      18: invokespecial #13                 // Method javax/xml/transform/stream/StreamSource."<init>":(Ljava/io/InputStream;)V
      21: invokevirtual #14                 // Method readFromSource:(Ljava/lang/Class;Lorg/springframework/http/HttpHeaders;Ljavax/xml/transform/Source;)Ljava/lang/Object;
      24: areturn
      25: astore_3
      26: aload_3
      27: athrow
      28: astore_3
      29: new           #18                 // class org/springframework/http/converter/HttpMessageNotReadableException
      32: dup
      33: new           #19                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #21                 // String Could not unmarshal to [
      42: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_1
      46: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: ldc           #24                 // String ]:
      51: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_3
      55: invokevirtual #25                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      58: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: aload_3
      65: aload_2
      66: invokespecial #27                 // Method org/springframework/http/converter/HttpMessageNotReadableException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;Lorg/springframework/http/HttpInputMessage;)V
      69: athrow
    Exception table:
       from    to  target type
           0    24    25   Class java/io/IOException
           0    24    25   Class org/springframework/http/converter/HttpMessageConversionException
           0    24    28   Class java/lang/Exception

  protected final void writeInternal(T, org.springframework.http.HttpOutputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #28,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
       8: new           #29                 // class javax/xml/transform/stream/StreamResult
      11: dup
      12: aload_2
      13: invokeinterface #30,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getBody:()Ljava/io/OutputStream;
      18: invokespecial #31                 // Method javax/xml/transform/stream/StreamResult."<init>":(Ljava/io/OutputStream;)V
      21: invokevirtual #32                 // Method writeToResult:(Ljava/lang/Object;Lorg/springframework/http/HttpHeaders;Ljavax/xml/transform/Result;)V
      24: goto          71
      27: astore_3
      28: aload_3
      29: athrow
      30: astore_3
      31: new           #33                 // class org/springframework/http/converter/HttpMessageNotWritableException
      34: dup
      35: new           #19                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #34                 // String Could not marshal [
      44: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_1
      48: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      51: ldc           #24                 // String ]:
      53: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_3
      57: invokevirtual #25                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      60: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: aload_3
      67: invokespecial #35                 // Method org/springframework/http/converter/HttpMessageNotWritableException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      70: athrow
      71: return
    Exception table:
       from    to  target type
           0    24    27   Class java/io/IOException
           0    24    27   Class org/springframework/http/converter/HttpMessageConversionException
           0    24    30   Class java/lang/Exception

  protected void transform(javax.xml.transform.Source, javax.xml.transform.Result) throws javax.xml.transform.TransformerException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field transformerFactory:Ljavax/xml/transform/TransformerFactory;
       4: invokevirtual #36                 // Method javax/xml/transform/TransformerFactory.newTransformer:()Ljavax/xml/transform/Transformer;
       7: aload_1
       8: aload_2
       9: invokevirtual #37                 // Method javax/xml/transform/Transformer.transform:(Ljavax/xml/transform/Source;Ljavax/xml/transform/Result;)V
      12: return

  protected abstract T readFromSource(java.lang.Class<? extends T>, org.springframework.http.HttpHeaders, javax.xml.transform.Source) throws java.lang.Exception;

  protected abstract void writeToResult(T, org.springframework.http.HttpHeaders, javax.xml.transform.Result) throws java.lang.Exception;
}
