Compiled from "MultipartFile.java"
public interface org.springframework.web.multipart.MultipartFile extends org.springframework.core.io.InputStreamSource {
  public abstract java.lang.String getName();

  public abstract java.lang.String getOriginalFilename();

  public abstract java.lang.String getContentType();

  public abstract boolean isEmpty();

  public abstract long getSize();

  public abstract byte[] getBytes() throws java.io.IOException;

  public abstract java.io.InputStream getInputStream() throws java.io.IOException;

  public default org.springframework.core.io.Resource getResource();
    Code:
       0: new           #1                  // class org/springframework/web/multipart/MultipartFileResource
       3: dup
       4: aload_0
       5: invokespecial #2                  // Method org/springframework/web/multipart/MultipartFileResource."<init>":(Lorg/springframework/web/multipart/MultipartFile;)V
       8: areturn

  public abstract void transferTo(java.io.File) throws java.io.IOException, java.lang.IllegalStateException;

  public default void transferTo(java.nio.file.Path) throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokeinterface #3,  1            // InterfaceMethod getInputStream:()Ljava/io/InputStream;
       6: aload_1
       7: iconst_0
       8: anewarray     #4                  // class java/nio/file/OpenOption
      11: invokestatic  #5                  // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;
      14: invokestatic  #6                  // Method org/springframework/util/FileCopyUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I
      17: pop
      18: return
}
