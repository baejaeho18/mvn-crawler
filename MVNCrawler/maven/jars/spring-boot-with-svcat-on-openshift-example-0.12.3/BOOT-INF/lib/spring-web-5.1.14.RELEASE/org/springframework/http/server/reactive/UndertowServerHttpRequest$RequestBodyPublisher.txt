Compiled from "UndertowServerHttpRequest.java"
class org.springframework.http.server.reactive.UndertowServerHttpRequest$RequestBodyPublisher extends org.springframework.http.server.reactive.AbstractListenerReadPublisher<org.springframework.core.io.buffer.DataBuffer> {
  private final org.xnio.channels.StreamSourceChannel channel;

  private final org.springframework.core.io.buffer.DataBufferFactory bufferFactory;

  private final io.undertow.connector.ByteBufferPool byteBufferPool;

  final org.springframework.http.server.reactive.UndertowServerHttpRequest this$0;

  public org.springframework.http.server.reactive.UndertowServerHttpRequest$RequestBodyPublisher(org.springframework.http.server.reactive.UndertowServerHttpRequest, io.undertow.server.HttpServerExchange, org.springframework.core.io.buffer.DataBufferFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/UndertowServerHttpRequest;
       5: aload_0
       6: aload_1
       7: invokevirtual #3                  // Method org/springframework/http/server/reactive/UndertowServerHttpRequest.getLogPrefix:()Ljava/lang/String;
      10: invokespecial #4                  // Method org/springframework/http/server/reactive/AbstractListenerReadPublisher."<init>":(Ljava/lang/String;)V
      13: aload_0
      14: aload_2
      15: invokevirtual #5                  // Method io/undertow/server/HttpServerExchange.getRequestChannel:()Lorg/xnio/channels/StreamSourceChannel;
      18: putfield      #6                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      21: aload_0
      22: aload_3
      23: putfield      #7                  // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      26: aload_0
      27: aload_2
      28: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      31: invokevirtual #9                  // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      34: putfield      #10                 // Field byteBufferPool:Lio/undertow/connector/ByteBufferPool;
      37: return

  private void registerListeners(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #11,  0             // InvokeDynamic #0:exchangeEvent:(Lorg/springframework/http/server/reactive/UndertowServerHttpRequest$RequestBodyPublisher;)Lio/undertow/server/ExchangeCompletionListener;
       7: invokevirtual #12                 // Method io/undertow/server/HttpServerExchange.addExchangeCompleteListener:(Lio/undertow/server/ExchangeCompletionListener;)Lio/undertow/server/HttpServerExchange;
      10: pop
      11: aload_0
      12: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      15: invokeinterface #13,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
      20: aload_0
      21: invokedynamic #14,  0             // InvokeDynamic #1:handleEvent:(Lorg/springframework/http/server/reactive/UndertowServerHttpRequest$RequestBodyPublisher;)Lorg/xnio/ChannelListener;
      26: invokeinterface #15,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      31: aload_0
      32: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      35: invokeinterface #16,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
      40: aload_0
      41: invokedynamic #17,  0             // InvokeDynamic #2:handleEvent:(Lorg/springframework/http/server/reactive/UndertowServerHttpRequest$RequestBodyPublisher;)Lorg/xnio/ChannelListener;
      46: invokeinterface #15,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      51: aload_0
      52: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      55: invokeinterface #18,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.resumeReads:()V
      60: return

  protected void checkOnDataAvailable();
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       4: invokeinterface #18,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.resumeReads:()V
       9: aload_0
      10: invokevirtual #19                 // Method onDataAvailable:()V
      13: return

  protected void readingPaused();
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       4: invokeinterface #20,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.suspendReads:()V
       9: return

  protected org.springframework.core.io.buffer.DataBuffer read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field byteBufferPool:Lio/undertow/connector/ByteBufferPool;
       4: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
       9: astore_1
      10: iconst_1
      11: istore_2
      12: aload_1
      13: invokeinterface #22,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      18: astore_3
      19: aload_0
      20: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      23: aload_3
      24: invokeinterface #23,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      29: istore        4
      31: getstatic     #24                 // Field rsReadLogger:Lorg/apache/commons/logging/Log;
      34: invokeinterface #25,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      39: ifeq          93
      42: getstatic     #24                 // Field rsReadLogger:Lorg/apache/commons/logging/Log;
      45: new           #26                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      52: aload_0
      53: invokevirtual #28                 // Method getLogPrefix:()Ljava/lang/String;
      56: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc           #30                 // String Read
      61: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: iload         4
      66: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      69: iload         4
      71: iconst_m1
      72: if_icmpeq     80
      75: ldc           #32                 // String  bytes
      77: goto          82
      80: ldc           #33                 // String
      82: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: invokeinterface #35,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      93: iload         4
      95: ifle          151
      98: aload_3
      99: invokevirtual #36                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     102: pop
     103: aload_0
     104: getfield      #7                  // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
     107: aload_3
     108: invokeinterface #37,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.wrap:(Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
     113: astore        5
     115: iconst_0
     116: istore_2
     117: new           #38                 // class org/springframework/http/server/reactive/UndertowServerHttpRequest$UndertowDataBuffer
     120: dup
     121: aload         5
     123: aload_1
     124: invokespecial #39                 // Method org/springframework/http/server/reactive/UndertowServerHttpRequest$UndertowDataBuffer."<init>":(Lorg/springframework/core/io/buffer/DataBuffer;Lio/undertow/connector/PooledByteBuffer;)V
     127: astore        6
     129: iload_2
     130: ifeq          148
     133: aload_1
     134: invokeinterface #40,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
     139: ifeq          148
     142: aload_1
     143: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     148: aload         6
     150: areturn
     151: iload         4
     153: iconst_m1
     154: if_icmpne     161
     157: aload_0
     158: invokevirtual #42                 // Method onAllDataRead:()V
     161: aconst_null
     162: astore        5
     164: iload_2
     165: ifeq          183
     168: aload_1
     169: invokeinterface #40,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
     174: ifeq          183
     177: aload_1
     178: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     183: aload         5
     185: areturn
     186: astore        7
     188: iload_2
     189: ifeq          207
     192: aload_1
     193: invokeinterface #40,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
     198: ifeq          207
     201: aload_1
     202: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     207: aload         7
     209: athrow
    Exception table:
       from    to  target type
          12   129   186   any
         151   164   186   any
         186   188   186   any

  protected void discardData();
    Code:
       0: return

  protected java.lang.Object read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method read:()Lorg/springframework/core/io/buffer/DataBuffer;
       4: areturn

  private void lambda$registerListeners$2(org.xnio.channels.StreamSourceChannel);
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method onAllDataRead:()V
       4: return

  private void lambda$registerListeners$1(org.xnio.channels.StreamSourceChannel);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method onDataAvailable:()V
       4: return

  private void lambda$registerListeners$0(io.undertow.server.HttpServerExchange, io.undertow.server.ExchangeCompletionListener$NextListener);
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method onAllDataRead:()V
       4: aload_2
       5: invokeinterface #44,  1           // InterfaceMethod io/undertow/server/ExchangeCompletionListener$NextListener.proceed:()V
      10: return

  static void access$000(org.springframework.http.server.reactive.UndertowServerHttpRequest$RequestBodyPublisher, io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method registerListeners:(Lio/undertow/server/HttpServerExchange;)V
       5: return
}
