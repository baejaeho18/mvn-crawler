Compiled from "HttpHeadResponseDecorator.java"
public class org.springframework.http.server.reactive.HttpHeadResponseDecorator extends org.springframework.http.server.reactive.ServerHttpResponseDecorator {
  public org.springframework.http.server.reactive.HttpHeadResponseDecorator(org.springframework.http.server.reactive.ServerHttpResponse);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/http/server/reactive/ServerHttpResponseDecorator."<init>":(Lorg/springframework/http/server/reactive/ServerHttpResponse;)V
       5: return

  public final reactor.core.publisher.Mono<java.lang.Void> writeWith(org.reactivestreams.Publisher<? extends org.springframework.core.io.buffer.DataBuffer>);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
       4: iconst_0
       5: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokedynamic #4,  0              // InvokeDynamic #0:apply:()Ljava/util/function/BiFunction;
      13: invokevirtual #5                  // Method reactor/core/publisher/Flux.reduce:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
      16: aload_0
      17: invokedynamic #6,  0              // InvokeDynamic #1:accept:(Lorg/springframework/http/server/reactive/HttpHeadResponseDecorator;)Ljava/util/function/Consumer;
      22: invokevirtual #7                  // Method reactor/core/publisher/Mono.doOnNext:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      25: invokevirtual #8                  // Method reactor/core/publisher/Mono.then:()Lreactor/core/publisher/Mono;
      28: areturn

  public final reactor.core.publisher.Mono<java.lang.Void> writeAndFlushWith(org.reactivestreams.Publisher<? extends org.reactivestreams.Publisher<? extends org.springframework.core.io.buffer.DataBuffer>>);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method setComplete:()Lreactor/core/publisher/Mono;
       4: areturn

  private void lambda$writeWith$1(java.lang.Integer);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method java/lang/Integer.intValue:()I
       4: ifgt          19
       7: aload_0
       8: invokevirtual #11                 // Method getHeaders:()Lorg/springframework/http/HttpHeaders;
      11: ldc           #13                 // String Content-Length
      13: invokevirtual #14                 // Method org/springframework/http/HttpHeaders.getFirst:(Ljava/lang/String;)Ljava/lang/String;
      16: ifnonnull     31
      19: aload_0
      20: invokevirtual #11                 // Method getHeaders:()Lorg/springframework/http/HttpHeaders;
      23: aload_1
      24: invokevirtual #10                 // Method java/lang/Integer.intValue:()I
      27: i2l
      28: invokevirtual #15                 // Method org/springframework/http/HttpHeaders.setContentLength:(J)V
      31: return

  private static java.lang.Integer lambda$writeWith$0(java.lang.Integer, org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method java/lang/Integer.intValue:()I
       4: aload_1
       5: invokeinterface #16,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readableByteCount:()I
      10: iadd
      11: istore_2
      12: aload_1
      13: invokestatic  #17                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      16: pop
      17: iload_2
      18: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: areturn
}
