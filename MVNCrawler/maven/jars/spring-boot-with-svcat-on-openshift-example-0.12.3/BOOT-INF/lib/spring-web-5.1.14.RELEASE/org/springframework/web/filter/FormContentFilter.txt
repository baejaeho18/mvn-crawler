Compiled from "FormContentFilter.java"
public class org.springframework.web.filter.FormContentFilter extends org.springframework.web.filter.OncePerRequestFilter {
  private static final java.util.List<java.lang.String> HTTP_METHODS;

  private org.springframework.http.converter.FormHttpMessageConverter formConverter;

  public org.springframework.web.filter.FormContentFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/filter/OncePerRequestFilter."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/http/converter/support/AllEncompassingFormHttpMessageConverter
       8: dup
       9: invokespecial #3                  // Method org/springframework/http/converter/support/AllEncompassingFormHttpMessageConverter."<init>":()V
      12: putfield      #4                  // Field formConverter:Lorg/springframework/http/converter/FormHttpMessageConverter;
      15: return

  public void setFormConverter(org.springframework.http.converter.FormHttpMessageConverter);
    Code:
       0: aload_1
       1: ldc           #5                  // String FormHttpMessageConverter is required
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #4                  // Field formConverter:Lorg/springframework/http/converter/FormHttpMessageConverter;
      11: return

  public void setCharset(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: getfield      #4                  // Field formConverter:Lorg/springframework/http/converter/FormHttpMessageConverter;
       4: aload_1
       5: invokevirtual #7                  // Method org/springframework/http/converter/FormHttpMessageConverter.setCharset:(Ljava/nio/charset/Charset;)V
       8: return

  protected void doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method parseIfNecessary:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/util/MultiValueMap;
       5: astore        4
       7: aload         4
       9: invokestatic  #9                  // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Map;)Z
      12: ifne          35
      15: aload_3
      16: new           #10                 // class org/springframework/web/filter/FormContentFilter$FormContentRequestWrapper
      19: dup
      20: aload_1
      21: aload         4
      23: invokespecial #11                 // Method org/springframework/web/filter/FormContentFilter$FormContentRequestWrapper."<init>":(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/util/MultiValueMap;)V
      26: aload_2
      27: invokeinterface #12,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
      32: goto          43
      35: aload_3
      36: aload_1
      37: aload_2
      38: invokeinterface #12,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
      43: return

  private org.springframework.util.MultiValueMap<java.lang.String, java.lang.String> parseIfNecessary(javax.servlet.http.HttpServletRequest) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method shouldParse:(Ljavax/servlet/http/HttpServletRequest;)Z
       5: ifne          10
       8: aconst_null
       9: areturn
      10: new           #14                 // class org/springframework/web/filter/FormContentFilter$1
      13: dup
      14: aload_0
      15: aload_1
      16: aload_1
      17: invokespecial #15                 // Method org/springframework/web/filter/FormContentFilter$1."<init>":(Lorg/springframework/web/filter/FormContentFilter;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletRequest;)V
      20: astore_2
      21: aload_0
      22: getfield      #4                  // Field formConverter:Lorg/springframework/http/converter/FormHttpMessageConverter;
      25: aconst_null
      26: aload_2
      27: invokevirtual #16                 // Method org/springframework/http/converter/FormHttpMessageConverter.read:(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Lorg/springframework/util/MultiValueMap;
      30: areturn

  private boolean shouldParse(javax.servlet.http.HttpServletRequest);
    Code:
       0: getstatic     #17                 // Field HTTP_METHODS:Ljava/util/List;
       3: aload_1
       4: invokeinterface #18,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getMethod:()Ljava/lang/String;
       9: invokeinterface #19,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      14: ifne          19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: invokeinterface #20,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getContentType:()Ljava/lang/String;
      25: invokestatic  #21                 // Method org/springframework/http/MediaType.parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      28: astore_2
      29: getstatic     #22                 // Field org/springframework/http/MediaType.APPLICATION_FORM_URLENCODED:Lorg/springframework/http/MediaType;
      32: aload_2
      33: invokevirtual #23                 // Method org/springframework/http/MediaType.includes:(Lorg/springframework/http/MediaType;)Z
      36: ireturn
      37: astore_2
      38: iconst_0
      39: ireturn
    Exception table:
       from    to  target type
          19    36    37   Class java/lang/IllegalArgumentException

  static {};
    Code:
       0: iconst_3
       1: anewarray     #25                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #26                 // String PUT
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #27                 // String PATCH
      13: aastore
      14: dup
      15: iconst_2
      16: ldc           #28                 // String DELETE
      18: aastore
      19: invokestatic  #29                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      22: putstatic     #17                 // Field HTTP_METHODS:Ljava/util/List;
      25: return
}
