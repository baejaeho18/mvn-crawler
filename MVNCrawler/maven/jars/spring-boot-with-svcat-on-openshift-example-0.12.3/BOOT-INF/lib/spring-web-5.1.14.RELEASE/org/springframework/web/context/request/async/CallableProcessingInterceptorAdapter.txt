Compiled from "CallableProcessingInterceptorAdapter.java"
public abstract class org.springframework.web.context.request.async.CallableProcessingInterceptorAdapter implements org.springframework.web.context.request.async.CallableProcessingInterceptor {
  public org.springframework.web.context.request.async.CallableProcessingInterceptorAdapter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public <T> void beforeConcurrentHandling(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>) throws java.lang.Exception;
    Code:
       0: return

  public <T> void preProcess(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>) throws java.lang.Exception;
    Code:
       0: return

  public <T> void postProcess(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>, java.lang.Object) throws java.lang.Exception;
    Code:
       0: return

  public <T> java.lang.Object handleTimeout(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>) throws java.lang.Exception;
    Code:
       0: getstatic     #2                  // Field RESULT_NONE:Ljava/lang/Object;
       3: areturn

  public <T> java.lang.Object handleError(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: getstatic     #2                  // Field RESULT_NONE:Ljava/lang/Object;
       3: areturn

  public <T> void afterCompletion(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>) throws java.lang.Exception;
    Code:
       0: return
}
