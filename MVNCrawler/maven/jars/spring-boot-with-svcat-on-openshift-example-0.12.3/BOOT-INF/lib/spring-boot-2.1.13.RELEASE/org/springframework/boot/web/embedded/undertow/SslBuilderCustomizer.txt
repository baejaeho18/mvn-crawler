Compiled from "SslBuilderCustomizer.java"
class org.springframework.boot.web.embedded.undertow.SslBuilderCustomizer implements org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer {
  private final int port;

  private final java.net.InetAddress address;

  private final org.springframework.boot.web.server.Ssl ssl;

  private final org.springframework.boot.web.server.SslStoreProvider sslStoreProvider;

  org.springframework.boot.web.embedded.undertow.SslBuilderCustomizer(int, java.net.InetAddress, org.springframework.boot.web.server.Ssl, org.springframework.boot.web.server.SslStoreProvider);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field port:I
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field address:Ljava/net/InetAddress;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field ssl:Lorg/springframework/boot/web/server/Ssl;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field sslStoreProvider:Lorg/springframework/boot/web/server/SslStoreProvider;
      25: return

  public void customize(io.undertow.Undertow$Builder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ssl:Lorg/springframework/boot/web/server/Ssl;
       4: invokevirtual #6                  // Method org/springframework/boot/web/server/Ssl.getProtocol:()Ljava/lang/String;
       7: invokestatic  #7                  // Method javax/net/ssl/SSLContext.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;
      10: astore_2
      11: aload_2
      12: aload_0
      13: aload_0
      14: getfield      #4                  // Field ssl:Lorg/springframework/boot/web/server/Ssl;
      17: aload_0
      18: getfield      #5                  // Field sslStoreProvider:Lorg/springframework/boot/web/server/SslStoreProvider;
      21: invokespecial #8                  // Method getKeyManagers:(Lorg/springframework/boot/web/server/Ssl;Lorg/springframework/boot/web/server/SslStoreProvider;)[Ljavax/net/ssl/KeyManager;
      24: aload_0
      25: aload_0
      26: getfield      #4                  // Field ssl:Lorg/springframework/boot/web/server/Ssl;
      29: aload_0
      30: getfield      #5                  // Field sslStoreProvider:Lorg/springframework/boot/web/server/SslStoreProvider;
      33: invokespecial #9                  // Method getTrustManagers:(Lorg/springframework/boot/web/server/Ssl;Lorg/springframework/boot/web/server/SslStoreProvider;)[Ljavax/net/ssl/TrustManager;
      36: aconst_null
      37: invokevirtual #10                 // Method javax/net/ssl/SSLContext.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V
      40: aload_1
      41: aload_0
      42: getfield      #2                  // Field port:I
      45: aload_0
      46: invokespecial #11                 // Method getListenAddress:()Ljava/lang/String;
      49: aload_2
      50: invokevirtual #12                 // Method io/undertow/Undertow$Builder.addHttpsListener:(ILjava/lang/String;Ljavax/net/ssl/SSLContext;)Lio/undertow/Undertow$Builder;
      53: pop
      54: aload_1
      55: getstatic     #13                 // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
      58: aload_0
      59: aload_0
      60: getfield      #4                  // Field ssl:Lorg/springframework/boot/web/server/Ssl;
      63: invokespecial #14                 // Method getSslClientAuthMode:(Lorg/springframework/boot/web/server/Ssl;)Lorg/xnio/SslClientAuthMode;
      66: invokevirtual #15                 // Method io/undertow/Undertow$Builder.setSocketOption:(Lorg/xnio/Option;Ljava/lang/Object;)Lio/undertow/Undertow$Builder;
      69: pop
      70: aload_0
      71: getfield      #4                  // Field ssl:Lorg/springframework/boot/web/server/Ssl;
      74: invokevirtual #16                 // Method org/springframework/boot/web/server/Ssl.getEnabledProtocols:()[Ljava/lang/String;
      77: ifnull        98
      80: aload_1
      81: getstatic     #17                 // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
      84: aload_0
      85: getfield      #4                  // Field ssl:Lorg/springframework/boot/web/server/Ssl;
      88: invokevirtual #16                 // Method org/springframework/boot/web/server/Ssl.getEnabledProtocols:()[Ljava/lang/String;
      91: invokestatic  #18                 // Method org/xnio/Sequence.of:([Ljava/lang/Object;)Lorg/xnio/Sequence;
      94: invokevirtual #15                 // Method io/undertow/Undertow$Builder.setSocketOption:(Lorg/xnio/Option;Ljava/lang/Object;)Lio/undertow/Undertow$Builder;
      97: pop
      98: aload_0
      99: getfield      #4                  // Field ssl:Lorg/springframework/boot/web/server/Ssl;
     102: invokevirtual #19                 // Method org/springframework/boot/web/server/Ssl.getCiphers:()[Ljava/lang/String;
     105: ifnull        126
     108: aload_1
     109: getstatic     #20                 // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
     112: aload_0
     113: getfield      #4                  // Field ssl:Lorg/springframework/boot/web/server/Ssl;
     116: invokevirtual #19                 // Method org/springframework/boot/web/server/Ssl.getCiphers:()[Ljava/lang/String;
     119: invokestatic  #18                 // Method org/xnio/Sequence.of:([Ljava/lang/Object;)Lorg/xnio/Sequence;
     122: invokevirtual #15                 // Method io/undertow/Undertow$Builder.setSocketOption:(Lorg/xnio/Option;Ljava/lang/Object;)Lio/undertow/Undertow$Builder;
     125: pop
     126: goto          139
     129: astore_2
     130: new           #23                 // class java/lang/IllegalStateException
     133: dup
     134: aload_2
     135: invokespecial #24                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
     138: athrow
     139: return
    Exception table:
       from    to  target type
           0   126   129   Class java/security/NoSuchAlgorithmException
           0   126   129   Class java/security/KeyManagementException

  private java.lang.String getListenAddress();
    Code:
       0: aload_0
       1: getfield      #3                  // Field address:Ljava/net/InetAddress;
       4: ifnonnull     10
       7: ldc           #25                 // String 0.0.0.0
       9: areturn
      10: aload_0
      11: getfield      #3                  // Field address:Ljava/net/InetAddress;
      14: invokevirtual #26                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
      17: areturn

  private org.xnio.SslClientAuthMode getSslClientAuthMode(org.springframework.boot.web.server.Ssl);
    Code:
       0: aload_1
       1: invokevirtual #27                 // Method org/springframework/boot/web/server/Ssl.getClientAuth:()Lorg/springframework/boot/web/server/Ssl$ClientAuth;
       4: getstatic     #28                 // Field org/springframework/boot/web/server/Ssl$ClientAuth.NEED:Lorg/springframework/boot/web/server/Ssl$ClientAuth;
       7: if_acmpne     14
      10: getstatic     #29                 // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      13: areturn
      14: aload_1
      15: invokevirtual #27                 // Method org/springframework/boot/web/server/Ssl.getClientAuth:()Lorg/springframework/boot/web/server/Ssl$ClientAuth;
      18: getstatic     #30                 // Field org/springframework/boot/web/server/Ssl$ClientAuth.WANT:Lorg/springframework/boot/web/server/Ssl$ClientAuth;
      21: if_acmpne     28
      24: getstatic     #31                 // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
      27: areturn
      28: getstatic     #32                 // Field org/xnio/SslClientAuthMode.NOT_REQUESTED:Lorg/xnio/SslClientAuthMode;
      31: areturn

  private javax.net.ssl.KeyManager[] getKeyManagers(org.springframework.boot.web.server.Ssl, org.springframework.boot.web.server.SslStoreProvider);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #33                 // Method getKeyStore:(Lorg/springframework/boot/web/server/Ssl;Lorg/springframework/boot/web/server/SslStoreProvider;)Ljava/security/KeyStore;
       6: astore_3
       7: aload_3
       8: aload_1
       9: invokevirtual #34                 // Method org/springframework/boot/web/server/Ssl.getKeyAlias:()Ljava/lang/String;
      12: invokestatic  #35                 // Method org/springframework/boot/web/server/SslConfigurationValidator.validateKeyAlias:(Ljava/security/KeyStore;Ljava/lang/String;)V
      15: invokestatic  #36                 // Method javax/net/ssl/KeyManagerFactory.getDefaultAlgorithm:()Ljava/lang/String;
      18: invokestatic  #37                 // Method javax/net/ssl/KeyManagerFactory.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/KeyManagerFactory;
      21: astore        4
      23: aload_1
      24: invokevirtual #38                 // Method org/springframework/boot/web/server/Ssl.getKeyPassword:()Ljava/lang/String;
      27: ifnull        40
      30: aload_1
      31: invokevirtual #38                 // Method org/springframework/boot/web/server/Ssl.getKeyPassword:()Ljava/lang/String;
      34: invokevirtual #39                 // Method java/lang/String.toCharArray:()[C
      37: goto          41
      40: aconst_null
      41: astore        5
      43: aload         5
      45: ifnonnull     64
      48: aload_1
      49: invokevirtual #40                 // Method org/springframework/boot/web/server/Ssl.getKeyStorePassword:()Ljava/lang/String;
      52: ifnull        64
      55: aload_1
      56: invokevirtual #40                 // Method org/springframework/boot/web/server/Ssl.getKeyStorePassword:()Ljava/lang/String;
      59: invokevirtual #39                 // Method java/lang/String.toCharArray:()[C
      62: astore        5
      64: aload         4
      66: aload_3
      67: aload         5
      69: invokevirtual #41                 // Method javax/net/ssl/KeyManagerFactory.init:(Ljava/security/KeyStore;[C)V
      72: aload_1
      73: invokevirtual #34                 // Method org/springframework/boot/web/server/Ssl.getKeyAlias:()Ljava/lang/String;
      76: ifnull        90
      79: aload_0
      80: aload_1
      81: aload         4
      83: invokevirtual #42                 // Method javax/net/ssl/KeyManagerFactory.getKeyManagers:()[Ljavax/net/ssl/KeyManager;
      86: invokespecial #43                 // Method getConfigurableAliasKeyManagers:(Lorg/springframework/boot/web/server/Ssl;[Ljavax/net/ssl/KeyManager;)[Ljavax/net/ssl/KeyManager;
      89: areturn
      90: aload         4
      92: invokevirtual #42                 // Method javax/net/ssl/KeyManagerFactory.getKeyManagers:()[Ljavax/net/ssl/KeyManager;
      95: areturn
      96: astore_3
      97: new           #23                 // class java/lang/IllegalStateException
     100: dup
     101: aload_3
     102: invokespecial #24                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
     105: athrow
    Exception table:
       from    to  target type
           0    89    96   Class java/lang/Exception
          90    95    96   Class java/lang/Exception

  private javax.net.ssl.KeyManager[] getConfigurableAliasKeyManagers(org.springframework.boot.web.server.Ssl, javax.net.ssl.KeyManager[]);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_2
       4: arraylength
       5: if_icmpge     43
       8: aload_2
       9: iload_3
      10: aaload
      11: instanceof    #45                 // class javax/net/ssl/X509ExtendedKeyManager
      14: ifeq          37
      17: aload_2
      18: iload_3
      19: new           #46                 // class org/springframework/boot/web/embedded/undertow/SslBuilderCustomizer$ConfigurableAliasKeyManager
      22: dup
      23: aload_2
      24: iload_3
      25: aaload
      26: checkcast     #45                 // class javax/net/ssl/X509ExtendedKeyManager
      29: aload_1
      30: invokevirtual #34                 // Method org/springframework/boot/web/server/Ssl.getKeyAlias:()Ljava/lang/String;
      33: invokespecial #47                 // Method org/springframework/boot/web/embedded/undertow/SslBuilderCustomizer$ConfigurableAliasKeyManager."<init>":(Ljavax/net/ssl/X509ExtendedKeyManager;Ljava/lang/String;)V
      36: aastore
      37: iinc          3, 1
      40: goto          2
      43: aload_2
      44: areturn

  private java.security.KeyStore getKeyStore(org.springframework.boot.web.server.Ssl, org.springframework.boot.web.server.SslStoreProvider) throws java.lang.Exception;
    Code:
       0: aload_2
       1: ifnull        11
       4: aload_2
       5: invokeinterface #48,  1           // InterfaceMethod org/springframework/boot/web/server/SslStoreProvider.getKeyStore:()Ljava/security/KeyStore;
      10: areturn
      11: aload_0
      12: aload_1
      13: invokevirtual #49                 // Method org/springframework/boot/web/server/Ssl.getKeyStoreType:()Ljava/lang/String;
      16: aload_1
      17: invokevirtual #50                 // Method org/springframework/boot/web/server/Ssl.getKeyStoreProvider:()Ljava/lang/String;
      20: aload_1
      21: invokevirtual #51                 // Method org/springframework/boot/web/server/Ssl.getKeyStore:()Ljava/lang/String;
      24: aload_1
      25: invokevirtual #40                 // Method org/springframework/boot/web/server/Ssl.getKeyStorePassword:()Ljava/lang/String;
      28: invokespecial #52                 // Method loadKeyStore:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyStore;
      31: areturn

  private javax.net.ssl.TrustManager[] getTrustManagers(org.springframework.boot.web.server.Ssl, org.springframework.boot.web.server.SslStoreProvider);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #53                 // Method getTrustStore:(Lorg/springframework/boot/web/server/Ssl;Lorg/springframework/boot/web/server/SslStoreProvider;)Ljava/security/KeyStore;
       6: astore_3
       7: invokestatic  #54                 // Method javax/net/ssl/TrustManagerFactory.getDefaultAlgorithm:()Ljava/lang/String;
      10: invokestatic  #55                 // Method javax/net/ssl/TrustManagerFactory.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;
      13: astore        4
      15: aload         4
      17: aload_3
      18: invokevirtual #56                 // Method javax/net/ssl/TrustManagerFactory.init:(Ljava/security/KeyStore;)V
      21: aload         4
      23: invokevirtual #57                 // Method javax/net/ssl/TrustManagerFactory.getTrustManagers:()[Ljavax/net/ssl/TrustManager;
      26: areturn
      27: astore_3
      28: new           #23                 // class java/lang/IllegalStateException
      31: dup
      32: aload_3
      33: invokespecial #24                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      36: athrow
    Exception table:
       from    to  target type
           0    26    27   Class java/lang/Exception

  private java.security.KeyStore getTrustStore(org.springframework.boot.web.server.Ssl, org.springframework.boot.web.server.SslStoreProvider) throws java.lang.Exception;
    Code:
       0: aload_2
       1: ifnull        11
       4: aload_2
       5: invokeinterface #58,  1           // InterfaceMethod org/springframework/boot/web/server/SslStoreProvider.getTrustStore:()Ljava/security/KeyStore;
      10: areturn
      11: aload_0
      12: aload_1
      13: invokevirtual #59                 // Method org/springframework/boot/web/server/Ssl.getTrustStoreType:()Ljava/lang/String;
      16: aload_1
      17: invokevirtual #60                 // Method org/springframework/boot/web/server/Ssl.getTrustStoreProvider:()Ljava/lang/String;
      20: aload_1
      21: invokevirtual #61                 // Method org/springframework/boot/web/server/Ssl.getTrustStore:()Ljava/lang/String;
      24: aload_1
      25: invokevirtual #62                 // Method org/springframework/boot/web/server/Ssl.getTrustStorePassword:()Ljava/lang/String;
      28: invokespecial #63                 // Method loadTrustStore:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyStore;
      31: areturn

  private java.security.KeyStore loadKeyStore(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #64                 // Method loadStore:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyStore;
       9: areturn

  private java.security.KeyStore loadTrustStore(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_3
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: aload         4
      12: invokespecial #64                 // Method loadStore:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyStore;
      15: areturn

  private java.security.KeyStore loadStore(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_1
       5: goto          10
       8: ldc           #65                 // String JKS
      10: astore_1
      11: aload_2
      12: ifnull        23
      15: aload_1
      16: aload_2
      17: invokestatic  #66                 // Method java/security/KeyStore.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyStore;
      20: goto          27
      23: aload_1
      24: invokestatic  #67                 // Method java/security/KeyStore.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;
      27: astore        5
      29: aload_3
      30: invokestatic  #68                 // Method org/springframework/util/ResourceUtils.getURL:(Ljava/lang/String;)Ljava/net/URL;
      33: astore        6
      35: aload         5
      37: aload         6
      39: invokevirtual #69                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
      42: aload         4
      44: ifnull        55
      47: aload         4
      49: invokevirtual #39                 // Method java/lang/String.toCharArray:()[C
      52: goto          56
      55: aconst_null
      56: invokevirtual #70                 // Method java/security/KeyStore.load:(Ljava/io/InputStream;[C)V
      59: aload         5
      61: areturn
      62: astore        6
      64: new           #71                 // class org/springframework/boot/web/server/WebServerException
      67: dup
      68: new           #72                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #74                 // String Could not load key store \'
      77: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_3
      81: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: ldc           #76                 // String \'
      86: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: invokevirtual #77                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: aload         6
      94: invokespecial #78                 // Method org/springframework/boot/web/server/WebServerException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      97: athrow
    Exception table:
       from    to  target type
          29    61    62   Class java/lang/Exception
}
