Compiled from "DefaultLogbackConfiguration.java"
class org.springframework.boot.logging.logback.DefaultLogbackConfiguration {
  private static final java.lang.String CONSOLE_LOG_PATTERN;

  private static final java.lang.String FILE_LOG_PATTERN;

  private static final java.lang.String MAX_FILE_SIZE;

  private final org.springframework.core.env.PropertyResolver patterns;

  private final org.springframework.boot.logging.LogFile logFile;

  org.springframework.boot.logging.logback.DefaultLogbackConfiguration(org.springframework.boot.logging.LoggingInitializationContext, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: aload_1
       7: invokevirtual #2                  // Method org/springframework/boot/logging/LoggingInitializationContext.getEnvironment:()Lorg/springframework/core/env/Environment;
      10: invokespecial #3                  // Method getPatternsResolver:(Lorg/springframework/core/env/Environment;)Lorg/springframework/core/env/PropertyResolver;
      13: putfield      #4                  // Field patterns:Lorg/springframework/core/env/PropertyResolver;
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field logFile:Lorg/springframework/boot/logging/LogFile;
      21: return

  private org.springframework.core.env.PropertyResolver getPatternsResolver(org.springframework.core.env.Environment);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: new           #6                  // class org/springframework/core/env/PropertySourcesPropertyResolver
       7: dup
       8: aconst_null
       9: invokespecial #7                  // Method org/springframework/core/env/PropertySourcesPropertyResolver."<init>":(Lorg/springframework/core/env/PropertySources;)V
      12: areturn
      13: aload_1
      14: instanceof    #8                  // class org/springframework/core/env/ConfigurableEnvironment
      17: ifeq          44
      20: new           #6                  // class org/springframework/core/env/PropertySourcesPropertyResolver
      23: dup
      24: aload_1
      25: checkcast     #8                  // class org/springframework/core/env/ConfigurableEnvironment
      28: invokeinterface #9,  1            // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getPropertySources:()Lorg/springframework/core/env/MutablePropertySources;
      33: invokespecial #7                  // Method org/springframework/core/env/PropertySourcesPropertyResolver."<init>":(Lorg/springframework/core/env/PropertySources;)V
      36: astore_2
      37: aload_2
      38: iconst_1
      39: invokevirtual #10                 // Method org/springframework/core/env/PropertySourcesPropertyResolver.setIgnoreUnresolvableNestedPlaceholders:(Z)V
      42: aload_2
      43: areturn
      44: aload_1
      45: areturn

  public void apply(org.springframework.boot.logging.logback.LogbackConfigurator);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getConfigurationLock:()Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: aload_1
       9: invokespecial #12                 // Method base:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;)V
      12: aload_0
      13: aload_1
      14: invokespecial #13                 // Method consoleAppender:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;)Lch/qos/logback/core/Appender;
      17: astore_3
      18: aload_0
      19: getfield      #5                  // Field logFile:Lorg/springframework/boot/logging/LogFile;
      22: ifnull        62
      25: aload_0
      26: aload_1
      27: aload_0
      28: getfield      #5                  // Field logFile:Lorg/springframework/boot/logging/LogFile;
      31: invokevirtual #14                 // Method org/springframework/boot/logging/LogFile.toString:()Ljava/lang/String;
      34: invokespecial #15                 // Method fileAppender:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Lch/qos/logback/core/Appender;
      37: astore        4
      39: aload_1
      40: getstatic     #16                 // Field ch/qos/logback/classic/Level.INFO:Lch/qos/logback/classic/Level;
      43: iconst_2
      44: anewarray     #17                 // class ch/qos/logback/core/Appender
      47: dup
      48: iconst_0
      49: aload_3
      50: aastore
      51: dup
      52: iconst_1
      53: aload         4
      55: aastore
      56: invokevirtual #18                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.root:(Lch/qos/logback/classic/Level;[Lch/qos/logback/core/Appender;)V
      59: goto          77
      62: aload_1
      63: getstatic     #16                 // Field ch/qos/logback/classic/Level.INFO:Lch/qos/logback/classic/Level;
      66: iconst_1
      67: anewarray     #17                 // class ch/qos/logback/core/Appender
      70: dup
      71: iconst_0
      72: aload_3
      73: aastore
      74: invokevirtual #18                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.root:(Lch/qos/logback/classic/Level;[Lch/qos/logback/core/Appender;)V
      77: aload_2
      78: monitorexit
      79: goto          89
      82: astore        5
      84: aload_2
      85: monitorexit
      86: aload         5
      88: athrow
      89: return
    Exception table:
       from    to  target type
           7    79    82   any
          82    86    82   any

  private void base(org.springframework.boot.logging.logback.LogbackConfigurator);
    Code:
       0: aload_1
       1: ldc           #19                 // String clr
       3: ldc           #20                 // class org/springframework/boot/logging/logback/ColorConverter
       5: invokevirtual #21                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.conversionRule:(Ljava/lang/String;Ljava/lang/Class;)V
       8: aload_1
       9: ldc           #22                 // String wex
      11: ldc           #23                 // class org/springframework/boot/logging/logback/WhitespaceThrowableProxyConverter
      13: invokevirtual #21                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.conversionRule:(Ljava/lang/String;Ljava/lang/Class;)V
      16: aload_1
      17: ldc           #24                 // String wEx
      19: ldc           #25                 // class org/springframework/boot/logging/logback/ExtendedWhitespaceThrowableProxyConverter
      21: invokevirtual #21                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.conversionRule:(Ljava/lang/String;Ljava/lang/Class;)V
      24: aload_1
      25: ldc           #26                 // String org.apache.catalina.startup.DigesterFactory
      27: getstatic     #27                 // Field ch/qos/logback/classic/Level.ERROR:Lch/qos/logback/classic/Level;
      30: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      33: aload_1
      34: ldc           #29                 // String org.apache.catalina.util.LifecycleBase
      36: getstatic     #27                 // Field ch/qos/logback/classic/Level.ERROR:Lch/qos/logback/classic/Level;
      39: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      42: aload_1
      43: ldc           #30                 // String org.apache.coyote.http11.Http11NioProtocol
      45: getstatic     #31                 // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
      48: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      51: aload_1
      52: ldc           #32                 // String org.apache.sshd.common.util.SecurityUtils
      54: getstatic     #31                 // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
      57: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      60: aload_1
      61: ldc           #33                 // String org.apache.tomcat.util.net.NioSelectorPool
      63: getstatic     #31                 // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
      66: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      69: aload_1
      70: ldc           #34                 // String org.eclipse.jetty.util.component.AbstractLifeCycle
      72: getstatic     #27                 // Field ch/qos/logback/classic/Level.ERROR:Lch/qos/logback/classic/Level;
      75: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      78: aload_1
      79: ldc           #35                 // String org.hibernate.validator.internal.util.Version
      81: getstatic     #31                 // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
      84: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      87: return

  private ch.qos.logback.core.Appender<ch.qos.logback.classic.spi.ILoggingEvent> consoleAppender(org.springframework.boot.logging.logback.LogbackConfigurator);
    Code:
       0: new           #36                 // class ch/qos/logback/core/ConsoleAppender
       3: dup
       4: invokespecial #37                 // Method ch/qos/logback/core/ConsoleAppender."<init>":()V
       7: astore_2
       8: new           #38                 // class ch/qos/logback/classic/encoder/PatternLayoutEncoder
      11: dup
      12: invokespecial #39                 // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder."<init>":()V
      15: astore_3
      16: aload_0
      17: getfield      #4                  // Field patterns:Lorg/springframework/core/env/PropertyResolver;
      20: ldc           #40                 // String logging.pattern.console
      22: ldc           #42                 // String %clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
      24: invokeinterface #43,  3           // InterfaceMethod org/springframework/core/env/PropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      29: astore        4
      31: aload_3
      32: aload         4
      34: aload_1
      35: invokevirtual #44                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getContext:()Lch/qos/logback/classic/LoggerContext;
      38: invokestatic  #45                 // Method ch/qos/logback/core/util/OptionHelper.substVars:(Ljava/lang/String;Lch/qos/logback/core/spi/PropertyContainer;)Ljava/lang/String;
      41: invokevirtual #46                 // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder.setPattern:(Ljava/lang/String;)V
      44: aload_1
      45: aload_3
      46: invokevirtual #47                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.start:(Lch/qos/logback/core/spi/LifeCycle;)V
      49: aload_2
      50: aload_3
      51: invokevirtual #48                 // Method ch/qos/logback/core/ConsoleAppender.setEncoder:(Lch/qos/logback/core/encoder/Encoder;)V
      54: aload_1
      55: ldc           #49                 // String CONSOLE
      57: aload_2
      58: invokevirtual #50                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.appender:(Ljava/lang/String;Lch/qos/logback/core/Appender;)V
      61: aload_2
      62: areturn

  private ch.qos.logback.core.Appender<ch.qos.logback.classic.spi.ILoggingEvent> fileAppender(org.springframework.boot.logging.logback.LogbackConfigurator, java.lang.String);
    Code:
       0: new           #51                 // class ch/qos/logback/core/rolling/RollingFileAppender
       3: dup
       4: invokespecial #52                 // Method ch/qos/logback/core/rolling/RollingFileAppender."<init>":()V
       7: astore_3
       8: new           #38                 // class ch/qos/logback/classic/encoder/PatternLayoutEncoder
      11: dup
      12: invokespecial #39                 // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder."<init>":()V
      15: astore        4
      17: aload_0
      18: getfield      #4                  // Field patterns:Lorg/springframework/core/env/PropertyResolver;
      21: ldc           #53                 // String logging.pattern.file
      23: ldc           #54                 // String %d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
      25: invokeinterface #43,  3           // InterfaceMethod org/springframework/core/env/PropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      30: astore        5
      32: aload         4
      34: aload         5
      36: aload_1
      37: invokevirtual #44                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getContext:()Lch/qos/logback/classic/LoggerContext;
      40: invokestatic  #45                 // Method ch/qos/logback/core/util/OptionHelper.substVars:(Ljava/lang/String;Lch/qos/logback/core/spi/PropertyContainer;)Ljava/lang/String;
      43: invokevirtual #46                 // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder.setPattern:(Ljava/lang/String;)V
      46: aload_3
      47: aload         4
      49: invokevirtual #55                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setEncoder:(Lch/qos/logback/core/encoder/Encoder;)V
      52: aload_1
      53: aload         4
      55: invokevirtual #47                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.start:(Lch/qos/logback/core/spi/LifeCycle;)V
      58: aload_3
      59: aload_2
      60: invokevirtual #56                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setFile:(Ljava/lang/String;)V
      63: aload_0
      64: aload_3
      65: aload_1
      66: aload_2
      67: invokespecial #57                 // Method setRollingPolicy:(Lch/qos/logback/core/rolling/RollingFileAppender;Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)V
      70: aload_1
      71: ldc           #58                 // String FILE
      73: aload_3
      74: invokevirtual #50                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.appender:(Ljava/lang/String;Lch/qos/logback/core/Appender;)V
      77: aload_3
      78: areturn

  private void setRollingPolicy(ch.qos.logback.core.rolling.RollingFileAppender<ch.qos.logback.classic.spi.ILoggingEvent>, org.springframework.boot.logging.logback.LogbackConfigurator, java.lang.String);
    Code:
       0: new           #59                 // class ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy
       3: dup
       4: invokespecial #60                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy."<init>":()V
       7: astore        4
       9: aload         4
      11: new           #61                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
      18: aload_3
      19: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #64                 // String .%d{yyyy-MM-dd}.%i.gz
      24: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokevirtual #66                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setFileNamePattern:(Ljava/lang/String;)V
      33: aload_0
      34: aload         4
      36: aload_0
      37: getfield      #4                  // Field patterns:Lorg/springframework/core/env/PropertyResolver;
      40: ldc           #67                 // String logging.file.max-size
      42: ldc           #68                 // String 10MB
      44: invokeinterface #43,  3           // InterfaceMethod org/springframework/core/env/PropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      49: invokespecial #69                 // Method setMaxFileSize:(Lch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy;Ljava/lang/String;)V
      52: aload         4
      54: aload_0
      55: getfield      #4                  // Field patterns:Lorg/springframework/core/env/PropertyResolver;
      58: ldc           #70                 // String logging.file.max-history
      60: ldc           #71                 // class java/lang/Integer
      62: iconst_0
      63: invokestatic  #73                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      66: invokeinterface #74,  4           // InterfaceMethod org/springframework/core/env/PropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      71: checkcast     #71                 // class java/lang/Integer
      74: invokevirtual #75                 // Method java/lang/Integer.intValue:()I
      77: invokevirtual #76                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setMaxHistory:(I)V
      80: aload_1
      81: aload         4
      83: invokevirtual #77                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setRollingPolicy:(Lch/qos/logback/core/rolling/RollingPolicy;)V
      86: aload         4
      88: aload_1
      89: invokevirtual #78                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setParent:(Lch/qos/logback/core/FileAppender;)V
      92: aload_2
      93: aload         4
      95: invokevirtual #47                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.start:(Lch/qos/logback/core/spi/LifeCycle;)V
      98: return

  private void setMaxFileSize(ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy<ch.qos.logback.classic.spi.ILoggingEvent>, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #79                 // Method ch/qos/logback/core/util/FileSize.valueOf:(Ljava/lang/String;)Lch/qos/logback/core/util/FileSize;
       5: invokevirtual #80                 // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setMaxFileSize:(Lch/qos/logback/core/util/FileSize;)V
       8: goto          45
      11: astore_3
      12: ldc           #59                 // class ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy
      14: ldc           #82                 // String setMaxFileSize
      16: iconst_1
      17: anewarray     #83                 // class java/lang/Class
      20: dup
      21: iconst_0
      22: ldc           #84                 // class java/lang/String
      24: aastore
      25: invokestatic  #85                 // Method org/springframework/util/ReflectionUtils.findMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      28: astore        4
      30: aload         4
      32: aload_1
      33: iconst_1
      34: anewarray     #86                 // class java/lang/Object
      37: dup
      38: iconst_0
      39: aload_2
      40: aastore
      41: invokestatic  #87                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      44: pop
      45: return
    Exception table:
       from    to  target type
           0     8    11   Class java/lang/NoSuchMethodError
}
