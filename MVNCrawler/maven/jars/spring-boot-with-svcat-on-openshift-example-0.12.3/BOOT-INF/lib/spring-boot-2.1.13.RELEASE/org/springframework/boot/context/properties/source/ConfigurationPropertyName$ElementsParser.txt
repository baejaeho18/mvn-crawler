Compiled from "ConfigurationPropertyName.java"
class org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementsParser {
  private static final int DEFAULT_CAPACITY;

  private final java.lang.CharSequence source;

  private final char separator;

  private int size;

  private int[] start;

  private int[] end;

  private org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType[] type;

  private java.lang.CharSequence[] resolved;

  org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementsParser(java.lang.CharSequence, char);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: bipush        6
       5: invokespecial #2                  // Method "<init>":(Ljava/lang/CharSequence;CI)V
       8: return

  org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementsParser(java.lang.CharSequence, char, int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field source:Ljava/lang/CharSequence;
       9: aload_0
      10: iload_2
      11: putfield      #5                  // Field separator:C
      14: aload_0
      15: iload_3
      16: newarray       int
      18: putfield      #6                  // Field start:[I
      21: aload_0
      22: iload_3
      23: newarray       int
      25: putfield      #7                  // Field end:[I
      28: aload_0
      29: iload_3
      30: anewarray     #8                  // class org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType
      33: putfield      #9                  // Field type:[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
      36: return

  public org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements parse();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #10                 // Method parse:(Ljava/util/function/Function;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;
       5: areturn

  public org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements parse(java.util.function.Function<java.lang.CharSequence, java.lang.CharSequence>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field source:Ljava/lang/CharSequence;
       4: invokeinterface #11,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       9: istore_2
      10: iconst_0
      11: istore_3
      12: iconst_0
      13: istore        4
      15: getstatic     #12                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.EMPTY:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
      18: astore        5
      20: iconst_0
      21: istore        6
      23: iload         6
      25: iload_2
      26: if_icmpge     183
      29: aload_0
      30: getfield      #4                  // Field source:Ljava/lang/CharSequence;
      33: iload         6
      35: invokeinterface #13,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      40: istore        7
      42: iload         7
      44: bipush        91
      46: if_icmpne     81
      49: iload_3
      50: ifne          75
      53: aload_0
      54: iload         4
      56: iload         6
      58: aload         5
      60: aload_1
      61: invokespecial #14                 // Method add:(IILorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;Ljava/util/function/Function;)V
      64: iload         6
      66: iconst_1
      67: iadd
      68: istore        4
      70: getstatic     #15                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.NUMERICALLY_INDEXED:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
      73: astore        5
      75: iinc          3, 1
      78: goto          177
      81: iload         7
      83: bipush        93
      85: if_icmpne     120
      88: iinc          3, -1
      91: iload_3
      92: ifne          177
      95: aload_0
      96: iload         4
      98: iload         6
     100: aload         5
     102: aload_1
     103: invokespecial #14                 // Method add:(IILorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;Ljava/util/function/Function;)V
     106: iload         6
     108: iconst_1
     109: iadd
     110: istore        4
     112: getstatic     #12                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.EMPTY:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
     115: astore        5
     117: goto          177
     120: aload         5
     122: invokevirtual #16                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.isIndexed:()Z
     125: ifne          162
     128: iload         7
     130: aload_0
     131: getfield      #5                  // Field separator:C
     134: if_icmpne     162
     137: aload_0
     138: iload         4
     140: iload         6
     142: aload         5
     144: aload_1
     145: invokespecial #14                 // Method add:(IILorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;Ljava/util/function/Function;)V
     148: iload         6
     150: iconst_1
     151: iadd
     152: istore        4
     154: getstatic     #12                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.EMPTY:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
     157: astore        5
     159: goto          177
     162: aload_0
     163: aload         5
     165: iload         7
     167: iload         6
     169: iload         4
     171: isub
     172: invokespecial #17                 // Method updateType:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;CI)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
     175: astore        5
     177: iinc          6, 1
     180: goto          23
     183: iload_3
     184: ifeq          192
     187: getstatic     #18                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.NON_UNIFORM:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
     190: astore        5
     192: aload_0
     193: iload         4
     195: iload_2
     196: aload         5
     198: aload_1
     199: invokespecial #14                 // Method add:(IILorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;Ljava/util/function/Function;)V
     202: new           #19                 // class org/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements
     205: dup
     206: aload_0
     207: getfield      #4                  // Field source:Ljava/lang/CharSequence;
     210: aload_0
     211: getfield      #20                 // Field size:I
     214: aload_0
     215: getfield      #6                  // Field start:[I
     218: aload_0
     219: getfield      #7                  // Field end:[I
     222: aload_0
     223: getfield      #9                  // Field type:[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
     226: aload_0
     227: getfield      #21                 // Field resolved:[Ljava/lang/CharSequence;
     230: invokespecial #22                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements."<init>":(Ljava/lang/CharSequence;I[I[I[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;[Ljava/lang/CharSequence;)V
     233: areturn

  private org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType updateType(org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType, char, int);
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.isIndexed:()Z
       4: ifeq          27
       7: aload_1
       8: getstatic     #15                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.NUMERICALLY_INDEXED:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
      11: if_acmpne     25
      14: iload_2
      15: invokestatic  #23                 // Method isNumeric:(C)Z
      18: ifne          25
      21: getstatic     #24                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.INDEXED:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
      24: areturn
      25: aload_1
      26: areturn
      27: aload_1
      28: getstatic     #12                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.EMPTY:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
      31: if_acmpne     56
      34: iload_2
      35: iload_3
      36: invokestatic  #25                 // Method isValidChar:(CI)Z
      39: ifeq          56
      42: iload_3
      43: ifne          52
      46: getstatic     #26                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.UNIFORM:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
      49: goto          55
      52: getstatic     #18                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.NON_UNIFORM:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
      55: areturn
      56: aload_1
      57: getstatic     #26                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.UNIFORM:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
      60: if_acmpne     73
      63: iload_2
      64: bipush        45
      66: if_icmpne     73
      69: getstatic     #27                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.DASHED:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
      72: areturn
      73: iload_2
      74: iload_3
      75: invokestatic  #25                 // Method isValidChar:(CI)Z
      78: ifne          107
      81: aload_1
      82: getstatic     #12                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.EMPTY:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
      85: if_acmpne     103
      88: iload_2
      89: invokestatic  #28                 // Method java/lang/Character.toLowerCase:(C)C
      92: iload_3
      93: invokestatic  #25                 // Method isValidChar:(CI)Z
      96: ifne          103
      99: getstatic     #12                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.EMPTY:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
     102: areturn
     103: getstatic     #18                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.NON_UNIFORM:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
     106: areturn
     107: aload_1
     108: areturn

  private void add(int, int, org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType, java.util.function.Function<java.lang.CharSequence, java.lang.CharSequence>);
    Code:
       0: iload_2
       1: iload_1
       2: isub
       3: iconst_1
       4: if_icmplt     14
       7: aload_3
       8: getstatic     #12                 // Field org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.EMPTY:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
      11: if_acmpne     15
      14: return
      15: aload_0
      16: getfield      #6                  // Field start:[I
      19: arraylength
      20: iload_2
      21: if_icmpgt     72
      24: aload_0
      25: aload_0
      26: aload_0
      27: getfield      #6                  // Field start:[I
      30: invokespecial #29                 // Method expand:([I)[I
      33: putfield      #6                  // Field start:[I
      36: aload_0
      37: aload_0
      38: aload_0
      39: getfield      #7                  // Field end:[I
      42: invokespecial #29                 // Method expand:([I)[I
      45: putfield      #7                  // Field end:[I
      48: aload_0
      49: aload_0
      50: aload_0
      51: getfield      #9                  // Field type:[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
      54: invokespecial #30                 // Method expand:([Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;)[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
      57: putfield      #9                  // Field type:[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
      60: aload_0
      61: aload_0
      62: aload_0
      63: getfield      #21                 // Field resolved:[Ljava/lang/CharSequence;
      66: invokespecial #31                 // Method expand:([Ljava/lang/CharSequence;)[Ljava/lang/CharSequence;
      69: putfield      #21                 // Field resolved:[Ljava/lang/CharSequence;
      72: aload         4
      74: ifnull        176
      77: aload_0
      78: getfield      #21                 // Field resolved:[Ljava/lang/CharSequence;
      81: ifnonnull     96
      84: aload_0
      85: aload_0
      86: getfield      #6                  // Field start:[I
      89: arraylength
      90: anewarray     #32                 // class java/lang/CharSequence
      93: putfield      #21                 // Field resolved:[Ljava/lang/CharSequence;
      96: aload         4
      98: aload_0
      99: getfield      #4                  // Field source:Ljava/lang/CharSequence;
     102: iload_1
     103: iload_2
     104: invokeinterface #33,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
     109: invokeinterface #34,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     114: checkcast     #32                 // class java/lang/CharSequence
     117: astore        5
     119: new           #1                  // class org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementsParser
     122: dup
     123: aload         5
     125: bipush        46
     127: invokespecial #35                 // Method "<init>":(Ljava/lang/CharSequence;C)V
     130: invokevirtual #36                 // Method parse:()Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;
     133: astore        6
     135: aload         6
     137: invokevirtual #37                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements.getSize:()I
     140: iconst_1
     141: if_icmpne     148
     144: iconst_1
     145: goto          149
     148: iconst_0
     149: ldc           #38                 // String Resolved element must not contain multiple elements
     151: invokestatic  #39                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
     154: aload_0
     155: getfield      #21                 // Field resolved:[Ljava/lang/CharSequence;
     158: aload_0
     159: getfield      #20                 // Field size:I
     162: aload         6
     164: iconst_0
     165: invokevirtual #40                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements.get:(I)Ljava/lang/CharSequence;
     168: aastore
     169: aload         6
     171: iconst_0
     172: invokevirtual #41                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements.getType:(I)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
     175: astore_3
     176: aload_0
     177: getfield      #6                  // Field start:[I
     180: aload_0
     181: getfield      #20                 // Field size:I
     184: iload_1
     185: iastore
     186: aload_0
     187: getfield      #7                  // Field end:[I
     190: aload_0
     191: getfield      #20                 // Field size:I
     194: iload_2
     195: iastore
     196: aload_0
     197: getfield      #9                  // Field type:[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;
     200: aload_0
     201: getfield      #20                 // Field size:I
     204: aload_3
     205: aastore
     206: aload_0
     207: dup
     208: getfield      #20                 // Field size:I
     211: iconst_1
     212: iadd
     213: putfield      #20                 // Field size:I
     216: return

  private int[] expand(int[]);
    Code:
       0: aload_1
       1: arraylength
       2: bipush        6
       4: iadd
       5: newarray       int
       7: astore_2
       8: aload_1
       9: iconst_0
      10: aload_2
      11: iconst_0
      12: aload_1
      13: arraylength
      14: invokestatic  #42                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      17: aload_2
      18: areturn

  private org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType[] expand(org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType[]);
    Code:
       0: aload_1
       1: arraylength
       2: bipush        6
       4: iadd
       5: anewarray     #8                  // class org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType
       8: astore_2
       9: aload_1
      10: iconst_0
      11: aload_2
      12: iconst_0
      13: aload_1
      14: arraylength
      15: invokestatic  #42                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      18: aload_2
      19: areturn

  private java.lang.CharSequence[] expand(java.lang.CharSequence[]);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: arraylength
       8: bipush        6
      10: iadd
      11: anewarray     #32                 // class java/lang/CharSequence
      14: astore_2
      15: aload_1
      16: iconst_0
      17: aload_2
      18: iconst_0
      19: aload_1
      20: arraylength
      21: invokestatic  #42                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: aload_2
      25: areturn

  public static boolean isValidChar(char, int);
    Code:
       0: iload_0
       1: invokestatic  #43                 // Method isAlpha:(C)Z
       4: ifne          24
       7: iload_0
       8: invokestatic  #23                 // Method isNumeric:(C)Z
      11: ifne          24
      14: iload_1
      15: ifeq          28
      18: iload_0
      19: bipush        45
      21: if_icmpne     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public static boolean isAlphaNumeric(char);
    Code:
       0: iload_0
       1: invokestatic  #43                 // Method isAlpha:(C)Z
       4: ifne          14
       7: iload_0
       8: invokestatic  #23                 // Method isNumeric:(C)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private static boolean isAlpha(char);
    Code:
       0: iload_0
       1: bipush        97
       3: if_icmplt     16
       6: iload_0
       7: bipush        122
       9: if_icmpgt     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private static boolean isNumeric(char);
    Code:
       0: iload_0
       1: bipush        48
       3: if_icmplt     16
       6: iload_0
       7: bipush        57
       9: if_icmpgt     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn
}
