Compiled from "SslServerCustomizer.java"
final class org.springframework.boot.web.embedded.netty.SslServerCustomizer$ConfigurableAliasKeyManager extends javax.net.ssl.X509ExtendedKeyManager {
  private final javax.net.ssl.X509ExtendedKeyManager delegate;

  private final java.lang.String alias;

  private org.springframework.boot.web.embedded.netty.SslServerCustomizer$ConfigurableAliasKeyManager(javax.net.ssl.X509ExtendedKeyManager, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method javax/net/ssl/X509ExtendedKeyManager."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field delegate:Ljavax/net/ssl/X509ExtendedKeyManager;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field alias:Ljava/lang/String;
      14: return

  public java.lang.String chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Ljavax/net/ssl/X509ExtendedKeyManager;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #5                  // Method javax/net/ssl/X509ExtendedKeyManager.chooseEngineClientAlias:([Ljava/lang/String;[Ljava/security/Principal;Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;
      10: areturn

  public java.lang.String chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: getfield      #4                  // Field alias:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #4                  // Field alias:Ljava/lang/String;
      11: goto          24
      14: aload_0
      15: getfield      #3                  // Field delegate:Ljavax/net/ssl/X509ExtendedKeyManager;
      18: aload_1
      19: aload_2
      20: aload_3
      21: invokevirtual #6                  // Method javax/net/ssl/X509ExtendedKeyManager.chooseEngineServerAlias:(Ljava/lang/String;[Ljava/security/Principal;Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;
      24: areturn

  public java.lang.String chooseClientAlias(java.lang.String[], java.security.Principal[], java.net.Socket);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Ljavax/net/ssl/X509ExtendedKeyManager;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #7                  // Method javax/net/ssl/X509ExtendedKeyManager.chooseClientAlias:([Ljava/lang/String;[Ljava/security/Principal;Ljava/net/Socket;)Ljava/lang/String;
      10: areturn

  public java.lang.String chooseServerAlias(java.lang.String, java.security.Principal[], java.net.Socket);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Ljavax/net/ssl/X509ExtendedKeyManager;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #8                  // Method javax/net/ssl/X509ExtendedKeyManager.chooseServerAlias:(Ljava/lang/String;[Ljava/security/Principal;Ljava/net/Socket;)Ljava/lang/String;
      10: areturn

  public java.security.cert.X509Certificate[] getCertificateChain(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Ljavax/net/ssl/X509ExtendedKeyManager;
       4: aload_1
       5: invokevirtual #9                  // Method javax/net/ssl/X509ExtendedKeyManager.getCertificateChain:(Ljava/lang/String;)[Ljava/security/cert/X509Certificate;
       8: areturn

  public java.lang.String[] getClientAliases(java.lang.String, java.security.Principal[]);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Ljavax/net/ssl/X509ExtendedKeyManager;
       4: aload_1
       5: aload_2
       6: invokevirtual #10                 // Method javax/net/ssl/X509ExtendedKeyManager.getClientAliases:(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;
       9: areturn

  public java.security.PrivateKey getPrivateKey(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Ljavax/net/ssl/X509ExtendedKeyManager;
       4: aload_1
       5: invokevirtual #11                 // Method javax/net/ssl/X509ExtendedKeyManager.getPrivateKey:(Ljava/lang/String;)Ljava/security/PrivateKey;
       8: areturn

  public java.lang.String[] getServerAliases(java.lang.String, java.security.Principal[]);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Ljavax/net/ssl/X509ExtendedKeyManager;
       4: aload_1
       5: aload_2
       6: invokevirtual #12                 // Method javax/net/ssl/X509ExtendedKeyManager.getServerAliases:(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;
       9: areturn

  org.springframework.boot.web.embedded.netty.SslServerCustomizer$ConfigurableAliasKeyManager(javax.net.ssl.X509ExtendedKeyManager, java.lang.String, org.springframework.boot.web.embedded.netty.SslServerCustomizer$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Ljavax/net/ssl/X509ExtendedKeyManager;Ljava/lang/String;)V
       6: return
}
