Compiled from "LoggingApplicationListener.java"
public class org.springframework.boot.context.logging.LoggingApplicationListener implements org.springframework.context.event.GenericApplicationListener {
  private static final org.springframework.boot.context.properties.source.ConfigurationPropertyName LOGGING_LEVEL;

  private static final org.springframework.boot.context.properties.source.ConfigurationPropertyName LOGGING_GROUP;

  private static final org.springframework.boot.context.properties.bind.Bindable<java.util.Map<java.lang.String, java.lang.String>> STRING_STRING_MAP;

  private static final org.springframework.boot.context.properties.bind.Bindable<java.util.Map<java.lang.String, java.lang.String[]>> STRING_STRINGS_MAP;

  public static final int DEFAULT_ORDER;

  public static final java.lang.String CONFIG_PROPERTY;

  public static final java.lang.String REGISTER_SHUTDOWN_HOOK_PROPERTY;

  public static final java.lang.String LOGGING_SYSTEM_BEAN_NAME;

  public static final java.lang.String LOGFILE_BEAN_NAME;

  private static final java.util.Map<java.lang.String, java.util.List<java.lang.String>> DEFAULT_GROUP_LOGGERS;

  private static final java.util.Map<org.springframework.boot.logging.LogLevel, java.util.List<java.lang.String>> LOG_LEVEL_LOGGERS;

  private static final java.lang.Class<?>[] EVENT_TYPES;

  private static final java.lang.Class<?>[] SOURCE_TYPES;

  private static final java.util.concurrent.atomic.AtomicBoolean shutdownHookRegistered;

  private final org.apache.commons.logging.Log logger;

  private org.springframework.boot.logging.LoggingSystem loggingSystem;

  private org.springframework.boot.logging.LogFile logFile;

  private int order;

  private boolean parseArgs;

  private org.springframework.boot.logging.LogLevel springBootLogging;

  public org.springframework.boot.context.logging.LoggingApplicationListener();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #4                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: ldc           #7                  // int -2147483628
      18: putfield      #8                  // Field order:I
      21: aload_0
      22: iconst_1
      23: putfield      #9                  // Field parseArgs:Z
      26: aload_0
      27: aconst_null
      28: putfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      31: return

  public boolean supportsEventType(org.springframework.core.ResolvableType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method org/springframework/core/ResolvableType.getRawClass:()Ljava/lang/Class;
       5: getstatic     #12                 // Field EVENT_TYPES:[Ljava/lang/Class;
       8: invokespecial #13                 // Method isAssignableFrom:(Ljava/lang/Class;[Ljava/lang/Class;)Z
      11: ireturn

  public boolean supportsSourceType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #14                 // Field SOURCE_TYPES:[Ljava/lang/Class;
       5: invokespecial #13                 // Method isAssignableFrom:(Ljava/lang/Class;[Ljava/lang/Class;)Z
       8: ireturn

  private boolean isAssignableFrom(java.lang.Class<?>, java.lang.Class<?>...);
    Code:
       0: aload_1
       1: ifnull        43
       4: aload_2
       5: astore_3
       6: aload_3
       7: arraylength
       8: istore        4
      10: iconst_0
      11: istore        5
      13: iload         5
      15: iload         4
      17: if_icmpge     43
      20: aload_3
      21: iload         5
      23: aaload
      24: astore        6
      26: aload         6
      28: aload_1
      29: invokevirtual #15                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: iinc          5, 1
      40: goto          13
      43: iconst_0
      44: ireturn

  public void onApplicationEvent(org.springframework.context.ApplicationEvent);
    Code:
       0: aload_1
       1: instanceof    #16                 // class org/springframework/boot/context/event/ApplicationStartingEvent
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #16                 // class org/springframework/boot/context/event/ApplicationStartingEvent
      12: invokespecial #17                 // Method onApplicationStartingEvent:(Lorg/springframework/boot/context/event/ApplicationStartingEvent;)V
      15: goto          94
      18: aload_1
      19: instanceof    #18                 // class org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent
      22: ifeq          36
      25: aload_0
      26: aload_1
      27: checkcast     #18                 // class org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent
      30: invokespecial #19                 // Method onApplicationEnvironmentPreparedEvent:(Lorg/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent;)V
      33: goto          94
      36: aload_1
      37: instanceof    #20                 // class org/springframework/boot/context/event/ApplicationPreparedEvent
      40: ifeq          54
      43: aload_0
      44: aload_1
      45: checkcast     #20                 // class org/springframework/boot/context/event/ApplicationPreparedEvent
      48: invokespecial #21                 // Method onApplicationPreparedEvent:(Lorg/springframework/boot/context/event/ApplicationPreparedEvent;)V
      51: goto          94
      54: aload_1
      55: instanceof    #22                 // class org/springframework/context/event/ContextClosedEvent
      58: ifeq          83
      61: aload_1
      62: checkcast     #22                 // class org/springframework/context/event/ContextClosedEvent
      65: invokevirtual #23                 // Method org/springframework/context/event/ContextClosedEvent.getApplicationContext:()Lorg/springframework/context/ApplicationContext;
      68: invokeinterface #24,  1           // InterfaceMethod org/springframework/context/ApplicationContext.getParent:()Lorg/springframework/context/ApplicationContext;
      73: ifnonnull     83
      76: aload_0
      77: invokespecial #25                 // Method onContextClosedEvent:()V
      80: goto          94
      83: aload_1
      84: instanceof    #26                 // class org/springframework/boot/context/event/ApplicationFailedEvent
      87: ifeq          94
      90: aload_0
      91: invokespecial #27                 // Method onApplicationFailedEvent:()V
      94: return

  private void onApplicationStartingEvent(org.springframework.boot.context.event.ApplicationStartingEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method org/springframework/boot/context/event/ApplicationStartingEvent.getSpringApplication:()Lorg/springframework/boot/SpringApplication;
       5: invokevirtual #29                 // Method org/springframework/boot/SpringApplication.getClassLoader:()Ljava/lang/ClassLoader;
       8: invokestatic  #30                 // Method org/springframework/boot/logging/LoggingSystem.get:(Ljava/lang/ClassLoader;)Lorg/springframework/boot/logging/LoggingSystem;
      11: putfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      14: aload_0
      15: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      18: invokevirtual #32                 // Method org/springframework/boot/logging/LoggingSystem.beforeInitialize:()V
      21: return

  private void onApplicationEnvironmentPreparedEvent(org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent);
    Code:
       0: aload_0
       1: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
       4: ifnonnull     21
       7: aload_0
       8: aload_1
       9: invokevirtual #33                 // Method org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent.getSpringApplication:()Lorg/springframework/boot/SpringApplication;
      12: invokevirtual #29                 // Method org/springframework/boot/SpringApplication.getClassLoader:()Ljava/lang/ClassLoader;
      15: invokestatic  #30                 // Method org/springframework/boot/logging/LoggingSystem.get:(Ljava/lang/ClassLoader;)Lorg/springframework/boot/logging/LoggingSystem;
      18: putfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      21: aload_0
      22: aload_1
      23: invokevirtual #34                 // Method org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent.getEnvironment:()Lorg/springframework/core/env/ConfigurableEnvironment;
      26: aload_1
      27: invokevirtual #33                 // Method org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent.getSpringApplication:()Lorg/springframework/boot/SpringApplication;
      30: invokevirtual #29                 // Method org/springframework/boot/SpringApplication.getClassLoader:()Ljava/lang/ClassLoader;
      33: invokevirtual #35                 // Method initialize:(Lorg/springframework/core/env/ConfigurableEnvironment;Ljava/lang/ClassLoader;)V
      36: return

  private void onApplicationPreparedEvent(org.springframework.boot.context.event.ApplicationPreparedEvent);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method org/springframework/boot/context/event/ApplicationPreparedEvent.getApplicationContext:()Lorg/springframework/context/ConfigurableApplicationContext;
       4: invokeinterface #37,  1           // InterfaceMethod org/springframework/context/ConfigurableApplicationContext.getBeanFactory:()Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;
       9: astore_2
      10: aload_2
      11: ldc           #38                 // String springBootLoggingSystem
      13: invokeinterface #39,  2           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableListableBeanFactory.containsBean:(Ljava/lang/String;)Z
      18: ifne          33
      21: aload_2
      22: ldc           #38                 // String springBootLoggingSystem
      24: aload_0
      25: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      28: invokeinterface #40,  3           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableListableBeanFactory.registerSingleton:(Ljava/lang/String;Ljava/lang/Object;)V
      33: aload_0
      34: getfield      #41                 // Field logFile:Lorg/springframework/boot/logging/LogFile;
      37: ifnull        63
      40: aload_2
      41: ldc           #42                 // String springBootLogFile
      43: invokeinterface #39,  2           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableListableBeanFactory.containsBean:(Ljava/lang/String;)Z
      48: ifne          63
      51: aload_2
      52: ldc           #42                 // String springBootLogFile
      54: aload_0
      55: getfield      #41                 // Field logFile:Lorg/springframework/boot/logging/LogFile;
      58: invokeinterface #40,  3           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableListableBeanFactory.registerSingleton:(Ljava/lang/String;Ljava/lang/Object;)V
      63: return

  private void onContextClosedEvent();
    Code:
       0: aload_0
       1: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
       4: ifnull        14
       7: aload_0
       8: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      11: invokevirtual #43                 // Method org/springframework/boot/logging/LoggingSystem.cleanUp:()V
      14: return

  private void onApplicationFailedEvent();
    Code:
       0: aload_0
       1: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
       4: ifnull        14
       7: aload_0
       8: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      11: invokevirtual #43                 // Method org/springframework/boot/logging/LoggingSystem.cleanUp:()V
      14: return

  protected void initialize(org.springframework.core.env.ConfigurableEnvironment, java.lang.ClassLoader);
    Code:
       0: new           #44                 // class org/springframework/boot/logging/LoggingSystemProperties
       3: dup
       4: aload_1
       5: invokespecial #45                 // Method org/springframework/boot/logging/LoggingSystemProperties."<init>":(Lorg/springframework/core/env/Environment;)V
       8: invokevirtual #46                 // Method org/springframework/boot/logging/LoggingSystemProperties.apply:()V
      11: aload_0
      12: aload_1
      13: invokestatic  #47                 // Method org/springframework/boot/logging/LogFile.get:(Lorg/springframework/core/env/PropertyResolver;)Lorg/springframework/boot/logging/LogFile;
      16: putfield      #41                 // Field logFile:Lorg/springframework/boot/logging/LogFile;
      19: aload_0
      20: getfield      #41                 // Field logFile:Lorg/springframework/boot/logging/LogFile;
      23: ifnull        33
      26: aload_0
      27: getfield      #41                 // Field logFile:Lorg/springframework/boot/logging/LogFile;
      30: invokevirtual #48                 // Method org/springframework/boot/logging/LogFile.applyToSystemProperties:()V
      33: aload_0
      34: aload_1
      35: invokespecial #49                 // Method initializeEarlyLoggingLevel:(Lorg/springframework/core/env/ConfigurableEnvironment;)V
      38: aload_0
      39: aload_1
      40: aload_0
      41: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      44: aload_0
      45: getfield      #41                 // Field logFile:Lorg/springframework/boot/logging/LogFile;
      48: invokespecial #50                 // Method initializeSystem:(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/boot/logging/LogFile;)V
      51: aload_0
      52: aload_1
      53: aload_0
      54: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      57: invokespecial #51                 // Method initializeFinalLoggingLevels:(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/logging/LoggingSystem;)V
      60: aload_0
      61: aload_1
      62: aload_0
      63: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      66: invokespecial #52                 // Method registerShutdownHookIfNecessary:(Lorg/springframework/core/env/Environment;Lorg/springframework/boot/logging/LoggingSystem;)V
      69: return

  private void initializeEarlyLoggingLevel(org.springframework.core.env.ConfigurableEnvironment);
    Code:
       0: aload_0
       1: getfield      #9                  // Field parseArgs:Z
       4: ifeq          48
       7: aload_0
       8: getfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      11: ifnonnull     48
      14: aload_0
      15: aload_1
      16: ldc           #53                 // String debug
      18: invokespecial #54                 // Method isSet:(Lorg/springframework/core/env/ConfigurableEnvironment;Ljava/lang/String;)Z
      21: ifeq          31
      24: aload_0
      25: getstatic     #55                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
      28: putfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      31: aload_0
      32: aload_1
      33: ldc           #56                 // String trace
      35: invokespecial #54                 // Method isSet:(Lorg/springframework/core/env/ConfigurableEnvironment;Ljava/lang/String;)Z
      38: ifeq          48
      41: aload_0
      42: getstatic     #57                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      45: putfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      48: return

  private boolean isSet(org.springframework.core.env.ConfigurableEnvironment, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #58,  2           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       7: astore_3
       8: aload_3
       9: ifnull        25
      12: aload_3
      13: ldc           #59                 // String false
      15: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  private void initializeSystem(org.springframework.core.env.ConfigurableEnvironment, org.springframework.boot.logging.LoggingSystem, org.springframework.boot.logging.LogFile);
    Code:
       0: new           #61                 // class org/springframework/boot/logging/LoggingInitializationContext
       3: dup
       4: aload_1
       5: invokespecial #62                 // Method org/springframework/boot/logging/LoggingInitializationContext."<init>":(Lorg/springframework/core/env/ConfigurableEnvironment;)V
       8: astore        4
      10: aload_1
      11: ldc           #63                 // String logging.config
      13: invokeinterface #58,  2           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      18: astore        5
      20: aload_0
      21: aload         5
      23: invokespecial #64                 // Method ignoreLogConfig:(Ljava/lang/String;)Z
      26: ifeq          40
      29: aload_2
      30: aload         4
      32: aconst_null
      33: aload_3
      34: invokevirtual #65                 // Method org/springframework/boot/logging/LoggingSystem.initialize:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      37: goto          114
      40: aload         5
      42: invokestatic  #66                 // Method org/springframework/util/ResourceUtils.getURL:(Ljava/lang/String;)Ljava/net/URL;
      45: invokevirtual #67                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
      48: invokevirtual #68                 // Method java/io/InputStream.close:()V
      51: aload_2
      52: aload         4
      54: aload         5
      56: aload_3
      57: invokevirtual #65                 // Method org/springframework/boot/logging/LoggingSystem.initialize:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      60: goto          114
      63: astore        6
      65: getstatic     #70                 // Field java/lang/System.err:Ljava/io/PrintStream;
      68: new           #71                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #73                 // String Logging system failed to initialize using configuration from \'
      77: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload         5
      82: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: ldc           #75                 // String \'
      87: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokevirtual #77                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      96: aload         6
      98: getstatic     #70                 // Field java/lang/System.err:Ljava/io/PrintStream;
     101: invokevirtual #78                 // Method java/lang/Exception.printStackTrace:(Ljava/io/PrintStream;)V
     104: new           #79                 // class java/lang/IllegalStateException
     107: dup
     108: aload         6
     110: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
     113: athrow
     114: return
    Exception table:
       from    to  target type
          40    60    63   Class java/lang/Exception

  private boolean ignoreLogConfig(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #81                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
       4: ifeq          16
       7: aload_1
       8: ldc           #82                 // String -D
      10: invokevirtual #83                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private void initializeFinalLoggingLevels(org.springframework.core.env.ConfigurableEnvironment, org.springframework.boot.logging.LoggingSystem);
    Code:
       0: aload_0
       1: getfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
       4: ifnull        16
       7: aload_0
       8: aload_2
       9: aload_0
      10: getfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      13: invokevirtual #84                 // Method initializeLogLevel:(Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/boot/logging/LogLevel;)V
      16: aload_0
      17: aload_2
      18: aload_1
      19: invokevirtual #85                 // Method setLogLevels:(Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/core/env/Environment;)V
      22: return

  protected void initializeLogLevel(org.springframework.boot.logging.LoggingSystem, org.springframework.boot.logging.LogLevel);
    Code:
       0: getstatic     #86                 // Field LOG_LEVEL_LOGGERS:Ljava/util/Map;
       3: aload_2
       4: invokestatic  #87                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       7: invokeinterface #88,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #89                 // class java/util/List
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokedynamic #90,  0             // InvokeDynamic #0:accept:(Lorg/springframework/boot/context/logging/LoggingApplicationListener;Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/boot/logging/LogLevel;)Ljava/util/function/Consumer;
      23: invokeinterface #91,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      28: return

  private void initializeLogLevel(org.springframework.boot.logging.LoggingSystem, org.springframework.boot.logging.LogLevel, java.lang.String);
    Code:
       0: getstatic     #92                 // Field DEFAULT_GROUP_LOGGERS:Ljava/util/Map;
       3: aload_3
       4: invokeinterface #93,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #89                 // class java/util/List
      12: astore        4
      14: aload         4
      16: ifnonnull     26
      19: aload_1
      20: aload_3
      21: aload_2
      22: invokevirtual #94                 // Method org/springframework/boot/logging/LoggingSystem.setLogLevel:(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;)V
      25: return
      26: aload         4
      28: aload_1
      29: aload_2
      30: invokedynamic #95,  0             // InvokeDynamic #1:accept:(Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/boot/logging/LogLevel;)Ljava/util/function/Consumer;
      35: invokeinterface #91,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      40: return

  protected void setLogLevels(org.springframework.boot.logging.LoggingSystem, org.springframework.core.env.Environment);
    Code:
       0: aload_2
       1: instanceof    #96                 // class org/springframework/core/env/ConfigurableEnvironment
       4: ifne          8
       7: return
       8: aload_2
       9: invokestatic  #97                 // Method org/springframework/boot/context/properties/bind/Binder.get:(Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/context/properties/bind/Binder;
      12: astore_3
      13: aload_0
      14: invokespecial #98                 // Method getGroups:()Ljava/util/Map;
      17: astore        4
      19: aload_3
      20: getstatic     #99                 // Field LOGGING_GROUP:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      23: getstatic     #100                // Field STRING_STRINGS_MAP:Lorg/springframework/boot/context/properties/bind/Bindable;
      26: aload         4
      28: invokevirtual #101                // Method org/springframework/boot/context/properties/bind/Bindable.withExistingValue:(Ljava/lang/Object;)Lorg/springframework/boot/context/properties/bind/Bindable;
      31: invokevirtual #102                // Method org/springframework/boot/context/properties/bind/Binder.bind:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;)Lorg/springframework/boot/context/properties/bind/BindResult;
      34: pop
      35: aload_3
      36: getstatic     #103                // Field LOGGING_LEVEL:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      39: getstatic     #104                // Field STRING_STRING_MAP:Lorg/springframework/boot/context/properties/bind/Bindable;
      42: invokevirtual #102                // Method org/springframework/boot/context/properties/bind/Binder.bind:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;)Lorg/springframework/boot/context/properties/bind/BindResult;
      45: invokedynamic #105,  0            // InvokeDynamic #2:get:()Ljava/util/function/Supplier;
      50: invokevirtual #106                // Method org/springframework/boot/context/properties/bind/BindResult.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      53: checkcast     #107                // class java/util/Map
      56: astore        5
      58: aload         5
      60: aload_0
      61: aload         4
      63: aload_1
      64: invokedynamic #108,  0            // InvokeDynamic #3:accept:(Lorg/springframework/boot/context/logging/LoggingApplicationListener;Ljava/util/Map;Lorg/springframework/boot/logging/LoggingSystem;)Ljava/util/function/BiConsumer;
      69: invokeinterface #109,  2          // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      74: return

  private java.util.Map<java.lang.String, java.lang.String[]> getGroups();
    Code:
       0: new           #110                // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #111                // Method java/util/LinkedHashMap."<init>":()V
       7: astore_1
       8: getstatic     #92                 // Field DEFAULT_GROUP_LOGGERS:Ljava/util/Map;
      11: aload_1
      12: invokedynamic #112,  0            // InvokeDynamic #4:accept:(Ljava/util/Map;)Ljava/util/function/BiConsumer;
      17: invokeinterface #109,  2          // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      22: aload_1
      23: areturn

  private void setLogLevel(org.springframework.boot.logging.LoggingSystem, java.lang.String[], java.lang.String);
    Code:
       0: aload_2
       1: astore        4
       3: aload         4
       5: arraylength
       6: istore        5
       8: iconst_0
       9: istore        6
      11: iload         6
      13: iload         5
      15: if_icmpge     39
      18: aload         4
      20: iload         6
      22: aaload
      23: astore        7
      25: aload_0
      26: aload_1
      27: aload         7
      29: aload_3
      30: invokespecial #113                // Method setLogLevel:(Lorg/springframework/boot/logging/LoggingSystem;Ljava/lang/String;Ljava/lang/String;)V
      33: iinc          6, 1
      36: goto          11
      39: return

  private void setLogLevel(org.springframework.boot.logging.LoggingSystem, java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ldc           #115                // String ROOT
       3: invokevirtual #116                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifeq          13
       9: aconst_null
      10: goto          14
      13: aload_2
      14: astore_2
      15: aload_1
      16: aload_2
      17: aload_0
      18: aload_3
      19: invokespecial #117                // Method coerceLogLevel:(Ljava/lang/String;)Lorg/springframework/boot/logging/LogLevel;
      22: invokevirtual #94                 // Method org/springframework/boot/logging/LoggingSystem.setLogLevel:(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;)V
      25: goto          72
      28: astore        4
      30: aload_0
      31: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      34: new           #71                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #119                // String Cannot set level \'
      43: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_3
      47: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #120                // String \' for \'
      52: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_2
      56: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc           #75                 // String \'
      61: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokeinterface #121,  2          // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
      72: return
    Exception table:
       from    to  target type
           0    25    28   Class java/lang/RuntimeException

  private org.springframework.boot.logging.LogLevel coerceLogLevel(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #122                // Method java/lang/String.trim:()Ljava/lang/String;
       4: astore_2
       5: ldc           #59                 // String false
       7: aload_2
       8: invokevirtual #116                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      11: ifeq          18
      14: getstatic     #123                // Field org/springframework/boot/logging/LogLevel.OFF:Lorg/springframework/boot/logging/LogLevel;
      17: areturn
      18: aload_2
      19: getstatic     #124                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      22: invokevirtual #125                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      25: invokestatic  #126                // Method org/springframework/boot/logging/LogLevel.valueOf:(Ljava/lang/String;)Lorg/springframework/boot/logging/LogLevel;
      28: areturn

  private void registerShutdownHookIfNecessary(org.springframework.core.env.Environment, org.springframework.boot.logging.LoggingSystem);
    Code:
       0: aload_1
       1: ldc           #127                // String logging.register-shutdown-hook
       3: ldc           #128                // class java/lang/Boolean
       5: iconst_0
       6: invokestatic  #129                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: invokeinterface #130,  4          // InterfaceMethod org/springframework/core/env/Environment.getProperty:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #128                // class java/lang/Boolean
      17: invokevirtual #131                // Method java/lang/Boolean.booleanValue:()Z
      20: istore_3
      21: iload_3
      22: ifeq          60
      25: aload_2
      26: invokevirtual #132                // Method org/springframework/boot/logging/LoggingSystem.getShutdownHandler:()Ljava/lang/Runnable;
      29: astore        4
      31: aload         4
      33: ifnull        60
      36: getstatic     #133                // Field shutdownHookRegistered:Ljava/util/concurrent/atomic/AtomicBoolean;
      39: iconst_0
      40: iconst_1
      41: invokevirtual #134                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      44: ifeq          60
      47: aload_0
      48: new           #135                // class java/lang/Thread
      51: dup
      52: aload         4
      54: invokespecial #136                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      57: invokevirtual #137                // Method registerShutdownHook:(Ljava/lang/Thread;)V
      60: return

  void registerShutdownHook(java.lang.Thread);
    Code:
       0: invokestatic  #138                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       3: aload_1
       4: invokevirtual #139                // Method java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
       7: return

  public void setOrder(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field order:I
       5: return

  public int getOrder();
    Code:
       0: aload_0
       1: getfield      #8                  // Field order:I
       4: ireturn

  public void setSpringBootLogging(org.springframework.boot.logging.LogLevel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
       5: return

  public void setParseArgs(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field parseArgs:Z
       5: return

  private static void lambda$getGroups$3(java.util.Map, java.lang.String, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #140                // Method org/springframework/util/StringUtils.toStringArray:(Ljava/util/Collection;)[Ljava/lang/String;
       6: invokeinterface #141,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #142                // class "[Ljava/lang/String;"
      14: pop
      15: return

  private void lambda$setLogLevels$2(java.util.Map, org.springframework.boot.logging.LoggingSystem, java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_3
       2: invokeinterface #93,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #142                // class "[Ljava/lang/String;"
      10: astore        5
      12: aload         5
      14: invokestatic  #143                // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
      17: ifeq          31
      20: aload_0
      21: aload_2
      22: aload_3
      23: aload         4
      25: invokespecial #113                // Method setLogLevel:(Lorg/springframework/boot/logging/LoggingSystem;Ljava/lang/String;Ljava/lang/String;)V
      28: goto          40
      31: aload_0
      32: aload_2
      33: aload         5
      35: aload         4
      37: invokespecial #144                // Method setLogLevel:(Lorg/springframework/boot/logging/LoggingSystem;[Ljava/lang/String;Ljava/lang/String;)V
      40: return

  private static void lambda$initializeLogLevel$1(org.springframework.boot.logging.LoggingSystem, org.springframework.boot.logging.LogLevel, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokevirtual #94                 // Method org/springframework/boot/logging/LoggingSystem.setLogLevel:(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;)V
       6: return

  private void lambda$initializeLogLevel$0(org.springframework.boot.logging.LoggingSystem, org.springframework.boot.logging.LogLevel, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #145                // Method initializeLogLevel:(Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/boot/logging/LogLevel;Ljava/lang/String;)V
       7: return

  static {};
    Code:
       0: ldc           #146                // String logging.level
       2: invokestatic  #147                // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName.of:(Ljava/lang/CharSequence;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
       5: putstatic     #103                // Field LOGGING_LEVEL:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
       8: ldc           #148                // String logging.group
      10: invokestatic  #147                // Method org/springframework/boot/context/properties/source/ConfigurationPropertyName.of:(Ljava/lang/CharSequence;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      13: putstatic     #99                 // Field LOGGING_GROUP:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      16: ldc           #149                // class java/lang/String
      18: ldc           #149                // class java/lang/String
      20: invokestatic  #150                // Method org/springframework/boot/context/properties/bind/Bindable.mapOf:(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/boot/context/properties/bind/Bindable;
      23: putstatic     #104                // Field STRING_STRING_MAP:Lorg/springframework/boot/context/properties/bind/Bindable;
      26: ldc           #149                // class java/lang/String
      28: ldc           #142                // class "[Ljava/lang/String;"
      30: invokestatic  #150                // Method org/springframework/boot/context/properties/bind/Bindable.mapOf:(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/boot/context/properties/bind/Bindable;
      33: putstatic     #100                // Field STRING_STRINGS_MAP:Lorg/springframework/boot/context/properties/bind/Bindable;
      36: new           #151                // class org/springframework/util/LinkedMultiValueMap
      39: dup
      40: invokespecial #152                // Method org/springframework/util/LinkedMultiValueMap."<init>":()V
      43: astore_0
      44: aload_0
      45: ldc           #153                // String web
      47: ldc           #154                // String org.springframework.core.codec
      49: invokeinterface #155,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      54: aload_0
      55: ldc           #153                // String web
      57: ldc           #156                // String org.springframework.http
      59: invokeinterface #155,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      64: aload_0
      65: ldc           #153                // String web
      67: ldc           #157                // String org.springframework.web
      69: invokeinterface #155,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      74: aload_0
      75: ldc           #153                // String web
      77: ldc           #158                // String org.springframework.boot.actuate.endpoint.web
      79: invokeinterface #155,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      84: aload_0
      85: ldc           #153                // String web
      87: ldc           #159                // String org.springframework.boot.web.servlet.ServletContextInitializerBeans
      89: invokeinterface #155,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      94: aload_0
      95: ldc           #160                // String sql
      97: ldc           #161                // String org.springframework.jdbc.core
      99: invokeinterface #155,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     104: aload_0
     105: ldc           #160                // String sql
     107: ldc           #162                // String org.hibernate.SQL
     109: invokeinterface #155,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     114: aload_0
     115: invokestatic  #163                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     118: putstatic     #92                 // Field DEFAULT_GROUP_LOGGERS:Ljava/util/Map;
     121: new           #151                // class org/springframework/util/LinkedMultiValueMap
     124: dup
     125: invokespecial #152                // Method org/springframework/util/LinkedMultiValueMap."<init>":()V
     128: astore_0
     129: aload_0
     130: getstatic     #55                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
     133: ldc           #160                // String sql
     135: invokeinterface #155,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     140: aload_0
     141: getstatic     #55                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
     144: ldc           #153                // String web
     146: invokeinterface #155,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     151: aload_0
     152: getstatic     #55                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
     155: ldc           #164                // String org.springframework.boot
     157: invokeinterface #155,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     162: aload_0
     163: getstatic     #57                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
     166: ldc           #165                // String org.springframework
     168: invokeinterface #155,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     173: aload_0
     174: getstatic     #57                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
     177: ldc           #166                // String org.apache.tomcat
     179: invokeinterface #155,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     184: aload_0
     185: getstatic     #57                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
     188: ldc           #167                // String org.apache.catalina
     190: invokeinterface #155,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     195: aload_0
     196: getstatic     #57                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
     199: ldc           #168                // String org.eclipse.jetty
     201: invokeinterface #155,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     206: aload_0
     207: getstatic     #57                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
     210: ldc           #169                // String org.hibernate.tool.hbm2ddl
     212: invokeinterface #155,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     217: aload_0
     218: invokestatic  #163                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     221: putstatic     #86                 // Field LOG_LEVEL_LOGGERS:Ljava/util/Map;
     224: iconst_5
     225: anewarray     #170                // class java/lang/Class
     228: dup
     229: iconst_0
     230: ldc           #16                 // class org/springframework/boot/context/event/ApplicationStartingEvent
     232: aastore
     233: dup
     234: iconst_1
     235: ldc           #18                 // class org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent
     237: aastore
     238: dup
     239: iconst_2
     240: ldc           #20                 // class org/springframework/boot/context/event/ApplicationPreparedEvent
     242: aastore
     243: dup
     244: iconst_3
     245: ldc           #22                 // class org/springframework/context/event/ContextClosedEvent
     247: aastore
     248: dup
     249: iconst_4
     250: ldc           #26                 // class org/springframework/boot/context/event/ApplicationFailedEvent
     252: aastore
     253: putstatic     #12                 // Field EVENT_TYPES:[Ljava/lang/Class;
     256: iconst_2
     257: anewarray     #170                // class java/lang/Class
     260: dup
     261: iconst_0
     262: ldc           #171                // class org/springframework/boot/SpringApplication
     264: aastore
     265: dup
     266: iconst_1
     267: ldc           #172                // class org/springframework/context/ApplicationContext
     269: aastore
     270: putstatic     #14                 // Field SOURCE_TYPES:[Ljava/lang/Class;
     273: new           #173                // class java/util/concurrent/atomic/AtomicBoolean
     276: dup
     277: iconst_0
     278: invokespecial #174                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     281: putstatic     #133                // Field shutdownHookRegistered:Ljava/util/concurrent/atomic/AtomicBoolean;
     284: return
}
