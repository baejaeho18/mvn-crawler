Compiled from "LoggingSystemProperties.java"
public class org.springframework.boot.logging.LoggingSystemProperties {
  public static final java.lang.String PID_KEY;

  public static final java.lang.String EXCEPTION_CONVERSION_WORD;

  public static final java.lang.String LOG_FILE;

  public static final java.lang.String LOG_PATH;

  public static final java.lang.String CONSOLE_LOG_PATTERN;

  public static final java.lang.String FILE_LOG_PATTERN;

  public static final java.lang.String FILE_MAX_HISTORY;

  public static final java.lang.String FILE_MAX_SIZE;

  public static final java.lang.String LOG_LEVEL_PATTERN;

  public static final java.lang.String LOG_DATEFORMAT_PATTERN;

  private final org.springframework.core.env.Environment environment;

  public org.springframework.boot.logging.LoggingSystemProperties(org.springframework.core.env.Environment);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Environment must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field environment:Lorg/springframework/core/env/Environment;
      15: return

  public void apply();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #5                  // Method apply:(Lorg/springframework/boot/logging/LogFile;)V
       5: return

  public void apply(org.springframework.boot.logging.LogFile);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method getPropertyResolver:()Lorg/springframework/core/env/PropertyResolver;
       4: astore_2
       5: aload_0
       6: aload_2
       7: ldc           #8                  // String LOG_EXCEPTION_CONVERSION_WORD
       9: ldc           #9                  // String exception-conversion-word
      11: invokespecial #10                 // Method setSystemProperty:(Lorg/springframework/core/env/PropertyResolver;Ljava/lang/String;Ljava/lang/String;)V
      14: aload_0
      15: ldc           #11                 // String PID
      17: new           #12                 // class org/springframework/boot/system/ApplicationPid
      20: dup
      21: invokespecial #13                 // Method org/springframework/boot/system/ApplicationPid."<init>":()V
      24: invokevirtual #14                 // Method org/springframework/boot/system/ApplicationPid.toString:()Ljava/lang/String;
      27: invokespecial #15                 // Method setSystemProperty:(Ljava/lang/String;Ljava/lang/String;)V
      30: aload_0
      31: aload_2
      32: ldc           #16                 // String CONSOLE_LOG_PATTERN
      34: ldc           #17                 // String pattern.console
      36: invokespecial #10                 // Method setSystemProperty:(Lorg/springframework/core/env/PropertyResolver;Ljava/lang/String;Ljava/lang/String;)V
      39: aload_0
      40: aload_2
      41: ldc           #18                 // String FILE_LOG_PATTERN
      43: ldc           #19                 // String pattern.file
      45: invokespecial #10                 // Method setSystemProperty:(Lorg/springframework/core/env/PropertyResolver;Ljava/lang/String;Ljava/lang/String;)V
      48: aload_0
      49: aload_2
      50: ldc           #20                 // String LOG_FILE_MAX_HISTORY
      52: ldc           #21                 // String file.max-history
      54: invokespecial #10                 // Method setSystemProperty:(Lorg/springframework/core/env/PropertyResolver;Ljava/lang/String;Ljava/lang/String;)V
      57: aload_0
      58: aload_2
      59: ldc           #22                 // String LOG_FILE_MAX_SIZE
      61: ldc           #23                 // String file.max-size
      63: invokespecial #10                 // Method setSystemProperty:(Lorg/springframework/core/env/PropertyResolver;Ljava/lang/String;Ljava/lang/String;)V
      66: aload_0
      67: aload_2
      68: ldc           #24                 // String LOG_LEVEL_PATTERN
      70: ldc           #25                 // String pattern.level
      72: invokespecial #10                 // Method setSystemProperty:(Lorg/springframework/core/env/PropertyResolver;Ljava/lang/String;Ljava/lang/String;)V
      75: aload_0
      76: aload_2
      77: ldc           #26                 // String LOG_DATEFORMAT_PATTERN
      79: ldc           #27                 // String pattern.dateformat
      81: invokespecial #10                 // Method setSystemProperty:(Lorg/springframework/core/env/PropertyResolver;Ljava/lang/String;Ljava/lang/String;)V
      84: aload_1
      85: ifnull        92
      88: aload_1
      89: invokevirtual #28                 // Method org/springframework/boot/logging/LogFile.applyToSystemProperties:()V
      92: return

  private org.springframework.core.env.PropertyResolver getPropertyResolver();
    Code:
       0: aload_0
       1: getfield      #4                  // Field environment:Lorg/springframework/core/env/Environment;
       4: instanceof    #29                 // class org/springframework/core/env/ConfigurableEnvironment
       7: ifeq          40
      10: new           #30                 // class org/springframework/core/env/PropertySourcesPropertyResolver
      13: dup
      14: aload_0
      15: getfield      #4                  // Field environment:Lorg/springframework/core/env/Environment;
      18: checkcast     #29                 // class org/springframework/core/env/ConfigurableEnvironment
      21: invokeinterface #31,  1           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getPropertySources:()Lorg/springframework/core/env/MutablePropertySources;
      26: invokespecial #32                 // Method org/springframework/core/env/PropertySourcesPropertyResolver."<init>":(Lorg/springframework/core/env/PropertySources;)V
      29: astore_1
      30: aload_1
      31: checkcast     #30                 // class org/springframework/core/env/PropertySourcesPropertyResolver
      34: iconst_1
      35: invokevirtual #33                 // Method org/springframework/core/env/PropertySourcesPropertyResolver.setIgnoreUnresolvableNestedPlaceholders:(Z)V
      38: aload_1
      39: areturn
      40: aload_0
      41: getfield      #4                  // Field environment:Lorg/springframework/core/env/Environment;
      44: areturn

  private void setSystemProperty(org.springframework.core.env.PropertyResolver, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: new           #34                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #36                 // String logging.
      12: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_3
      16: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: invokeinterface #39,  2           // InterfaceMethod org/springframework/core/env/PropertyResolver.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      27: invokespecial #15                 // Method setSystemProperty:(Ljava/lang/String;Ljava/lang/String;)V
      30: return

  private void setSystemProperty(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #40                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       4: ifnonnull     17
       7: aload_2
       8: ifnull        17
      11: aload_1
      12: aload_2
      13: invokestatic  #41                 // Method java/lang/System.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      16: pop
      17: return
}
