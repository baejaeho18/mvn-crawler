Compiled from "NamespaceCache.java"
public class org.dom4j.tree.NamespaceCache {
  protected static java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.ref.WeakReference<org.dom4j.Namespace>>> cache;

  protected static java.util.Map<java.lang.String, java.lang.ref.WeakReference<org.dom4j.Namespace>> noPrefixCache;

  public org.dom4j.tree.NamespaceCache();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.dom4j.Namespace get(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #2                  // Method getURICache:(Ljava/lang/String;)Ljava/util/Map;
       5: astore_3
       6: aload_3
       7: aload_1
       8: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #4                  // class java/lang/ref/WeakReference
      16: astore        4
      18: aconst_null
      19: astore        5
      21: aload         4
      23: ifnull        36
      26: aload         4
      28: invokevirtual #5                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      31: checkcast     #6                  // class org/dom4j/Namespace
      34: astore        5
      36: aload         5
      38: ifnonnull     117
      41: aload_3
      42: dup
      43: astore        6
      45: monitorenter
      46: aload_3
      47: aload_1
      48: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #4                  // class java/lang/ref/WeakReference
      56: astore        4
      58: aload         4
      60: ifnull        73
      63: aload         4
      65: invokevirtual #5                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      68: checkcast     #6                  // class org/dom4j/Namespace
      71: astore        5
      73: aload         5
      75: ifnonnull     103
      78: aload_0
      79: aload_1
      80: aload_2
      81: invokevirtual #7                  // Method createNamespace:(Ljava/lang/String;Ljava/lang/String;)Lorg/dom4j/Namespace;
      84: astore        5
      86: aload_3
      87: aload_1
      88: new           #4                  // class java/lang/ref/WeakReference
      91: dup
      92: aload         5
      94: invokespecial #8                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      97: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     102: pop
     103: aload         6
     105: monitorexit
     106: goto          117
     109: astore        7
     111: aload         6
     113: monitorexit
     114: aload         7
     116: athrow
     117: aload         5
     119: areturn
    Exception table:
       from    to  target type
          46   106   109   any
         109   114   109   any

  public org.dom4j.Namespace get(java.lang.String);
    Code:
       0: getstatic     #10                 // Field noPrefixCache:Ljava/util/Map;
       3: aload_1
       4: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #4                  // class java/lang/ref/WeakReference
      12: astore_2
      13: aconst_null
      14: astore_3
      15: aload_2
      16: ifnull        27
      19: aload_2
      20: invokevirtual #5                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      23: checkcast     #6                  // class org/dom4j/Namespace
      26: astore_3
      27: aload_3
      28: ifnonnull     107
      31: getstatic     #10                 // Field noPrefixCache:Ljava/util/Map;
      34: dup
      35: astore        4
      37: monitorenter
      38: getstatic     #10                 // Field noPrefixCache:Ljava/util/Map;
      41: aload_1
      42: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #4                  // class java/lang/ref/WeakReference
      50: astore_2
      51: aload_2
      52: ifnull        63
      55: aload_2
      56: invokevirtual #5                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      59: checkcast     #6                  // class org/dom4j/Namespace
      62: astore_3
      63: aload_3
      64: ifnonnull     93
      67: aload_0
      68: ldc           #11                 // String
      70: aload_1
      71: invokevirtual #7                  // Method createNamespace:(Ljava/lang/String;Ljava/lang/String;)Lorg/dom4j/Namespace;
      74: astore_3
      75: getstatic     #10                 // Field noPrefixCache:Ljava/util/Map;
      78: aload_1
      79: new           #4                  // class java/lang/ref/WeakReference
      82: dup
      83: aload_3
      84: invokespecial #8                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      87: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: pop
      93: aload         4
      95: monitorexit
      96: goto          107
      99: astore        5
     101: aload         4
     103: monitorexit
     104: aload         5
     106: athrow
     107: aload_3
     108: areturn
    Exception table:
       from    to  target type
          38    96    99   any
          99   104    99   any

  protected java.util.Map<java.lang.String, java.lang.ref.WeakReference<org.dom4j.Namespace>> getURICache(java.lang.String);
    Code:
       0: getstatic     #12                 // Field cache:Ljava/util/Map;
       3: aload_1
       4: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #13                 // class java/util/Map
      12: astore_2
      13: aload_2
      14: ifnonnull     71
      17: getstatic     #12                 // Field cache:Ljava/util/Map;
      20: dup
      21: astore_3
      22: monitorenter
      23: getstatic     #12                 // Field cache:Ljava/util/Map;
      26: aload_1
      27: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #13                 // class java/util/Map
      35: astore_2
      36: aload_2
      37: ifnonnull     59
      40: new           #14                 // class java/util/concurrent/ConcurrentHashMap
      43: dup
      44: invokespecial #15                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      47: astore_2
      48: getstatic     #12                 // Field cache:Ljava/util/Map;
      51: aload_1
      52: aload_2
      53: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: aload_3
      60: monitorexit
      61: goto          71
      64: astore        4
      66: aload_3
      67: monitorexit
      68: aload         4
      70: athrow
      71: aload_2
      72: areturn
    Exception table:
       from    to  target type
          23    61    64   any
          64    68    64   any

  protected org.dom4j.Namespace createNamespace(java.lang.String, java.lang.String);
    Code:
       0: new           #6                  // class org/dom4j/Namespace
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #16                 // Method org/dom4j/Namespace."<init>":(Ljava/lang/String;Ljava/lang/String;)V
       9: areturn

  static {};
    Code:
       0: new           #14                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #15                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: putstatic     #12                 // Field cache:Ljava/util/Map;
      10: new           #14                 // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #15                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: putstatic     #10                 // Field noPrefixCache:Ljava/util/Map;
      20: return
}
