Compiled from "BeanELResolver.java"
public class javax.el.BeanELResolver extends javax.el.ELResolver {
  private static final int CACHE_SIZE;

  private static final java.lang.String CACHE_SIZE_PROP;

  private final boolean readOnly;

  private final javax.el.BeanELResolver$ConcurrentCache<java.lang.String, javax.el.BeanELResolver$BeanProperties> cache;

  public javax.el.BeanELResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/el/ELResolver."<init>":()V
       4: aload_0
       5: new           #2                  // class javax/el/BeanELResolver$ConcurrentCache
       8: dup
       9: getstatic     #3                  // Field CACHE_SIZE:I
      12: invokespecial #4                  // Method javax/el/BeanELResolver$ConcurrentCache."<init>":(I)V
      15: putfield      #5                  // Field cache:Ljavax/el/BeanELResolver$ConcurrentCache;
      18: aload_0
      19: iconst_0
      20: putfield      #6                  // Field readOnly:Z
      23: return

  public javax.el.BeanELResolver(boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/el/ELResolver."<init>":()V
       4: aload_0
       5: new           #2                  // class javax/el/BeanELResolver$ConcurrentCache
       8: dup
       9: getstatic     #3                  // Field CACHE_SIZE:I
      12: invokespecial #4                  // Method javax/el/BeanELResolver$ConcurrentCache."<init>":(I)V
      15: putfield      #5                  // Field cache:Ljavax/el/BeanELResolver$ConcurrentCache;
      18: aload_0
      19: iload_1
      20: putfield      #6                  // Field readOnly:Z
      23: return

  public java.lang.Class<?> getType(javax.el.ELContext, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: ifnull        13
       9: aload_3
      10: ifnonnull     15
      13: aconst_null
      14: areturn
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokevirtual #8                  // Method javax/el/ELContext.setPropertyResolved:(Ljava/lang/Object;Ljava/lang/Object;)V
      21: aload_0
      22: aload_1
      23: aload_2
      24: aload_3
      25: invokespecial #9                  // Method property:(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljavax/el/BeanELResolver$BeanProperty;
      28: invokevirtual #10                 // Method javax/el/BeanELResolver$BeanProperty.getPropertyType:()Ljava/lang/Class;
      31: areturn

  public java.lang.Object getValue(javax.el.ELContext, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: ifnull        13
       9: aload_3
      10: ifnonnull     15
      13: aconst_null
      14: areturn
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokevirtual #8                  // Method javax/el/ELContext.setPropertyResolved:(Ljava/lang/Object;Ljava/lang/Object;)V
      21: aload_0
      22: aload_1
      23: aload_2
      24: aload_3
      25: invokespecial #9                  // Method property:(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljavax/el/BeanELResolver$BeanProperty;
      28: aload_1
      29: aload_2
      30: invokestatic  #11                 // Method javax/el/BeanELResolver$BeanProperty.access$000:(Ljavax/el/BeanELResolver$BeanProperty;Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/lang/reflect/Method;
      33: astore        4
      35: aload         4
      37: aload_2
      38: aconst_null
      39: checkcast     #12                 // class "[Ljava/lang/Object;"
      42: invokevirtual #13                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      45: areturn
      46: astore        5
      48: aload         5
      50: invokevirtual #15                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
      53: astore        6
      55: aload         6
      57: invokestatic  #16                 // Method javax/el/Util.handleThrowable:(Ljava/lang/Throwable;)V
      60: new           #17                 // class javax/el/ELException
      63: dup
      64: aload_1
      65: ldc           #18                 // String propertyReadError
      67: iconst_2
      68: anewarray     #19                 // class java/lang/Object
      71: dup
      72: iconst_0
      73: aload_2
      74: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      77: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
      80: aastore
      81: dup
      82: iconst_1
      83: aload_3
      84: invokevirtual #22                 // Method java/lang/Object.toString:()Ljava/lang/String;
      87: aastore
      88: invokestatic  #23                 // Method javax/el/Util.message:(Ljavax/el/ELContext;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      91: aload         6
      93: invokespecial #24                 // Method javax/el/ELException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      96: athrow
      97: astore        5
      99: new           #17                 // class javax/el/ELException
     102: dup
     103: aload         5
     105: invokespecial #26                 // Method javax/el/ELException."<init>":(Ljava/lang/Throwable;)V
     108: athrow
    Exception table:
       from    to  target type
          35    45    46   Class java/lang/reflect/InvocationTargetException
          35    45    97   Class java/lang/Exception

  public void setValue(javax.el.ELContext, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: ifnull        13
       9: aload_3
      10: ifnonnull     14
      13: return
      14: aload_1
      15: aload_2
      16: aload_3
      17: invokevirtual #8                  // Method javax/el/ELContext.setPropertyResolved:(Ljava/lang/Object;Ljava/lang/Object;)V
      20: aload_0
      21: getfield      #6                  // Field readOnly:Z
      24: ifeq          55
      27: new           #27                 // class javax/el/PropertyNotWritableException
      30: dup
      31: aload_1
      32: ldc           #28                 // String resolverNotWriteable
      34: iconst_1
      35: anewarray     #19                 // class java/lang/Object
      38: dup
      39: iconst_0
      40: aload_2
      41: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      44: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
      47: aastore
      48: invokestatic  #23                 // Method javax/el/Util.message:(Ljavax/el/ELContext;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      51: invokespecial #29                 // Method javax/el/PropertyNotWritableException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: aload_1
      57: aload_2
      58: aload_3
      59: invokespecial #9                  // Method property:(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljavax/el/BeanELResolver$BeanProperty;
      62: aload_1
      63: aload_2
      64: invokestatic  #30                 // Method javax/el/BeanELResolver$BeanProperty.access$100:(Ljavax/el/BeanELResolver$BeanProperty;Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/lang/reflect/Method;
      67: astore        5
      69: aload         5
      71: aload_2
      72: iconst_1
      73: anewarray     #19                 // class java/lang/Object
      76: dup
      77: iconst_0
      78: aload         4
      80: aastore
      81: invokevirtual #13                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: goto          151
      88: astore        6
      90: aload         6
      92: invokevirtual #15                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
      95: astore        7
      97: aload         7
      99: invokestatic  #16                 // Method javax/el/Util.handleThrowable:(Ljava/lang/Throwable;)V
     102: new           #17                 // class javax/el/ELException
     105: dup
     106: aload_1
     107: ldc           #31                 // String propertyWriteError
     109: iconst_2
     110: anewarray     #19                 // class java/lang/Object
     113: dup
     114: iconst_0
     115: aload_2
     116: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     119: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
     122: aastore
     123: dup
     124: iconst_1
     125: aload_3
     126: invokevirtual #22                 // Method java/lang/Object.toString:()Ljava/lang/String;
     129: aastore
     130: invokestatic  #23                 // Method javax/el/Util.message:(Ljavax/el/ELContext;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     133: aload         7
     135: invokespecial #24                 // Method javax/el/ELException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     138: athrow
     139: astore        6
     141: new           #17                 // class javax/el/ELException
     144: dup
     145: aload         6
     147: invokespecial #26                 // Method javax/el/ELException."<init>":(Ljava/lang/Throwable;)V
     150: athrow
     151: return
    Exception table:
       from    to  target type
          69    85    88   Class java/lang/reflect/InvocationTargetException
          69    85   139   Class java/lang/Exception

  public java.lang.Object invoke(javax.el.ELContext, java.lang.Object, java.lang.Object, java.lang.Class<?>[], java.lang.Object[]);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: ifnull        13
       9: aload_3
      10: ifnonnull     15
      13: aconst_null
      14: areturn
      15: invokestatic  #32                 // Method javax/el/ELManager.getExpressionFactory:()Ljavax/el/ExpressionFactory;
      18: astore        6
      20: aload         6
      22: aload_3
      23: ldc           #33                 // class java/lang/String
      25: invokevirtual #34                 // Method javax/el/ExpressionFactory.coerceToType:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      28: checkcast     #33                 // class java/lang/String
      31: astore        7
      33: aload_2
      34: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      37: aload_2
      38: aload         7
      40: aload         4
      42: aload         5
      44: invokestatic  #35                 // Method javax/el/Util.findMethod:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/reflect/Method;
      47: astore        8
      49: aload         8
      51: invokevirtual #36                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      54: aload         8
      56: invokevirtual #37                 // Method java/lang/reflect/Method.isVarArgs:()Z
      59: aload         5
      61: invokestatic  #38                 // Method javax/el/Util.buildParameters:([Ljava/lang/Class;Z[Ljava/lang/Object;)[Ljava/lang/Object;
      64: astore        9
      66: aconst_null
      67: astore        10
      69: aload         8
      71: aload_2
      72: aload         9
      74: invokevirtual #13                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      77: astore        10
      79: goto          118
      82: astore        11
      84: new           #17                 // class javax/el/ELException
      87: dup
      88: aload         11
      90: invokespecial #26                 // Method javax/el/ELException."<init>":(Ljava/lang/Throwable;)V
      93: athrow
      94: astore        11
      96: aload         11
      98: invokevirtual #15                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
     101: astore        12
     103: aload         12
     105: invokestatic  #16                 // Method javax/el/Util.handleThrowable:(Ljava/lang/Throwable;)V
     108: new           #17                 // class javax/el/ELException
     111: dup
     112: aload         12
     114: invokespecial #26                 // Method javax/el/ELException."<init>":(Ljava/lang/Throwable;)V
     117: athrow
     118: aload_1
     119: aload_2
     120: aload_3
     121: invokevirtual #8                  // Method javax/el/ELContext.setPropertyResolved:(Ljava/lang/Object;Ljava/lang/Object;)V
     124: aload         10
     126: areturn
    Exception table:
       from    to  target type
          69    79    82   Class java/lang/IllegalArgumentException
          69    79    82   Class java/lang/IllegalAccessException
          69    79    94   Class java/lang/reflect/InvocationTargetException

  public boolean isReadOnly(javax.el.ELContext, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: ifnull        13
       9: aload_3
      10: ifnonnull     15
      13: iconst_0
      14: ireturn
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokevirtual #8                  // Method javax/el/ELContext.setPropertyResolved:(Ljava/lang/Object;Ljava/lang/Object;)V
      21: aload_0
      22: getfield      #6                  // Field readOnly:Z
      25: ifne          42
      28: aload_0
      29: aload_1
      30: aload_2
      31: aload_3
      32: invokespecial #9                  // Method property:(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljavax/el/BeanELResolver$BeanProperty;
      35: aload_2
      36: invokevirtual #41                 // Method javax/el/BeanELResolver$BeanProperty.isReadOnly:(Ljava/lang/Object;)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  public java.util.Iterator<java.beans.FeatureDescriptor> getFeatureDescriptors(javax.el.ELContext, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_2
       7: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: invokestatic  #42                 // Method java/beans/Introspector.getBeanInfo:(Ljava/lang/Class;)Ljava/beans/BeanInfo;
      13: astore_3
      14: aload_3
      15: invokeinterface #43,  1           // InterfaceMethod java/beans/BeanInfo.getPropertyDescriptors:()[Ljava/beans/PropertyDescriptor;
      20: astore        4
      22: iconst_0
      23: istore        5
      25: iload         5
      27: aload         4
      29: arraylength
      30: if_icmpge     70
      33: aload         4
      35: iload         5
      37: aaload
      38: ldc           #45                 // String resolvableAtDesignTime
      40: getstatic     #46                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      43: invokevirtual #47                 // Method java/beans/PropertyDescriptor.setValue:(Ljava/lang/String;Ljava/lang/Object;)V
      46: aload         4
      48: iload         5
      50: aaload
      51: ldc           #48                 // String type
      53: aload         4
      55: iload         5
      57: aaload
      58: invokevirtual #49                 // Method java/beans/PropertyDescriptor.getPropertyType:()Ljava/lang/Class;
      61: invokevirtual #47                 // Method java/beans/PropertyDescriptor.setValue:(Ljava/lang/String;Ljava/lang/Object;)V
      64: iinc          5, 1
      67: goto          25
      70: aload         4
      72: checkcast     #50                 // class "[Ljava/beans/FeatureDescriptor;"
      75: invokestatic  #51                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      78: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      83: areturn
      84: astore_3
      85: aconst_null
      86: areturn
    Exception table:
       from    to  target type
           6    83    84   Class java/beans/IntrospectionException

  public java.lang.Class<?> getCommonPropertyType(javax.el.ELContext, java.lang.Object);
    Code:
       0: aload_2
       1: ifnull        7
       4: ldc           #19                 // class java/lang/Object
       6: areturn
       7: aconst_null
       8: areturn

  private final javax.el.BeanELResolver$BeanProperty property(javax.el.ELContext, java.lang.Object, java.lang.Object);
    Code:
       0: aload_2
       1: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore        4
       6: aload_3
       7: invokevirtual #22                 // Method java/lang/Object.toString:()Ljava/lang/String;
      10: astore        5
      12: aload_0
      13: getfield      #5                  // Field cache:Ljavax/el/BeanELResolver$ConcurrentCache;
      16: aload         4
      18: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
      21: invokevirtual #54                 // Method javax/el/BeanELResolver$ConcurrentCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #55                 // class javax/el/BeanELResolver$BeanProperties
      27: astore        6
      29: aload         6
      31: ifnull        44
      34: aload         4
      36: aload         6
      38: invokestatic  #56                 // Method javax/el/BeanELResolver$BeanProperties.access$200:(Ljavax/el/BeanELResolver$BeanProperties;)Ljava/lang/Class;
      41: if_acmpeq     69
      44: new           #55                 // class javax/el/BeanELResolver$BeanProperties
      47: dup
      48: aload         4
      50: invokespecial #57                 // Method javax/el/BeanELResolver$BeanProperties."<init>":(Ljava/lang/Class;)V
      53: astore        6
      55: aload_0
      56: getfield      #5                  // Field cache:Ljavax/el/BeanELResolver$ConcurrentCache;
      59: aload         4
      61: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
      64: aload         6
      66: invokevirtual #58                 // Method javax/el/BeanELResolver$ConcurrentCache.put:(Ljava/lang/Object;Ljava/lang/Object;)V
      69: aload         6
      71: aload_1
      72: aload         5
      74: invokestatic  #59                 // Method javax/el/BeanELResolver$BeanProperties.access$300:(Ljavax/el/BeanELResolver$BeanProperties;Ljavax/el/ELContext;Ljava/lang/String;)Ljavax/el/BeanELResolver$BeanProperty;
      77: areturn

  static {};
    Code:
       0: invokestatic  #60                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: ifnonnull     17
       6: ldc           #62                 // String org.apache.el.BeanELResolver.CACHE_SIZE
       8: ldc           #63                 // String 1000
      10: invokestatic  #64                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      13: astore_0
      14: goto          31
      17: new           #65                 // class javax/el/BeanELResolver$1
      20: dup
      21: invokespecial #66                 // Method javax/el/BeanELResolver$1."<init>":()V
      24: invokestatic  #67                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      27: checkcast     #33                 // class java/lang/String
      30: astore_0
      31: aload_0
      32: invokestatic  #68                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      35: putstatic     #3                  // Field CACHE_SIZE:I
      38: return
}
