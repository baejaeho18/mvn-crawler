Compiled from "FunctionMapperImpl.java"
public class org.apache.el.lang.FunctionMapperImpl extends javax.el.FunctionMapper implements java.io.Externalizable {
  private static final long serialVersionUID;

  protected java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.el.lang.FunctionMapperImpl$Function> functions;

  public org.apache.el.lang.FunctionMapperImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/el/FunctionMapper."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field functions:Ljava/util/concurrent/ConcurrentMap;
      15: return

  public java.lang.reflect.Method resolveFunction(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field functions:Ljava/util/concurrent/ConcurrentMap;
       4: new           #5                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      11: aload_1
      12: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #8                  // String :
      17: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_2
      21: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokeinterface #10,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #11                 // class org/apache/el/lang/FunctionMapperImpl$Function
      35: astore_3
      36: aload_3
      37: ifnonnull     42
      40: aconst_null
      41: areturn
      42: aload_3
      43: invokevirtual #12                 // Method org/apache/el/lang/FunctionMapperImpl$Function.getMethod:()Ljava/lang/reflect/Method;
      46: areturn

  public void mapFunction(java.lang.String, java.lang.String, java.lang.reflect.Method);
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #8                  // String :
      13: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_2
      17: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: astore        4
      25: aload_3
      26: ifnonnull     44
      29: aload_0
      30: getfield      #4                  // Field functions:Ljava/util/concurrent/ConcurrentMap;
      33: aload         4
      35: invokeinterface #13,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: goto          70
      44: new           #11                 // class org/apache/el/lang/FunctionMapperImpl$Function
      47: dup
      48: aload_1
      49: aload_2
      50: aload_3
      51: invokespecial #14                 // Method org/apache/el/lang/FunctionMapperImpl$Function."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/reflect/Method;)V
      54: astore        5
      56: aload_0
      57: getfield      #4                  // Field functions:Ljava/util/concurrent/ConcurrentMap;
      60: aload         4
      62: aload         5
      64: invokeinterface #15,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: return

  public void writeExternal(java.io.ObjectOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field functions:Ljava/util/concurrent/ConcurrentMap;
       5: invokeinterface #16,  2           // InterfaceMethod java/io/ObjectOutput.writeObject:(Ljava/lang/Object;)V
      10: return

  public void readExternal(java.io.ObjectInput) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #17,  1           // InterfaceMethod java/io/ObjectInput.readObject:()Ljava/lang/Object;
       7: checkcast     #18                 // class java/util/concurrent/ConcurrentMap
      10: putfield      #4                  // Field functions:Ljava/util/concurrent/ConcurrentMap;
      13: return
}
