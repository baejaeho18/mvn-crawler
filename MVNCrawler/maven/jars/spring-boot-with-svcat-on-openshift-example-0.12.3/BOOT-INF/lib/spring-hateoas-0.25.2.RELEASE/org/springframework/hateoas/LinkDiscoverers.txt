Compiled from "LinkDiscoverers.java"
public class org.springframework.hateoas.LinkDiscoverers {
  private final org.springframework.plugin.core.PluginRegistry<org.springframework.hateoas.LinkDiscoverer, org.springframework.http.MediaType> discoverers;

  public org.springframework.hateoas.LinkDiscoverers(org.springframework.plugin.core.PluginRegistry<org.springframework.hateoas.LinkDiscoverer, org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Registry of LinkDiscoverer must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field discoverers:Lorg/springframework/plugin/core/PluginRegistry;
      15: return

  public org.springframework.hateoas.LinkDiscoverer getLinkDiscovererFor(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #4                  // Field discoverers:Lorg/springframework/plugin/core/PluginRegistry;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod org/springframework/plugin/core/PluginRegistry.getPluginFor:(Ljava/lang/Object;)Lorg/springframework/plugin/core/Plugin;
      10: checkcast     #6                  // class org/springframework/hateoas/LinkDiscoverer
      13: areturn

  public org.springframework.hateoas.LinkDiscoverer getLinkDiscovererFor(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #7                  // Method org/springframework/http/MediaType.valueOf:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
       5: invokevirtual #8                  // Method getLinkDiscovererFor:(Lorg/springframework/http/MediaType;)Lorg/springframework/hateoas/LinkDiscoverer;
       8: areturn
}
