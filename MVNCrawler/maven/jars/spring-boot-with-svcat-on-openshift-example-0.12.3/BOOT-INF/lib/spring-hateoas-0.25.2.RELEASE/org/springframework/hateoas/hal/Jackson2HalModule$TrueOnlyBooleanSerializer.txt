Compiled from "Jackson2HalModule.java"
public class org.springframework.hateoas.hal.Jackson2HalModule$TrueOnlyBooleanSerializer extends com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase<java.lang.Boolean> {
  private static final long serialVersionUID;

  public org.springframework.hateoas.hal.Jackson2HalModule$TrueOnlyBooleanSerializer();
    Code:
       0: aload_0
       1: ldc           #1                  // class java/lang/Boolean
       3: invokespecial #2                  // Method com/fasterxml/jackson/databind/ser/std/NonTypedScalarSerializerBase."<init>":(Ljava/lang/Class;)V
       6: return

  public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Boolean);
    Code:
       0: aload_2
       1: ifnull        14
       4: getstatic     #3                  // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
       7: aload_2
       8: invokevirtual #4                  // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void serialize(java.lang.Boolean, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #5                  // Method java/lang/Boolean.booleanValue:()Z
       5: invokevirtual #6                  // Method com/fasterxml/jackson/core/JsonGenerator.writeBoolean:(Z)V
       8: return

  public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: ldc           #7                  // String boolean
       3: iconst_1
       4: invokevirtual #8                  // Method createSchemaNode:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
       7: areturn

  public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_1
       5: aload_2
       6: invokeinterface #9,  2            // InterfaceMethod com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.expectBooleanFormat:(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonBooleanFormatVisitor;
      11: pop
      12: return

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/lang/Boolean
       5: aload_2
       6: aload_3
       7: invokevirtual #10                 // Method serialize:(Ljava/lang/Boolean;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      10: return

  public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #1                  // class java/lang/Boolean
       6: invokevirtual #11                 // Method isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/Boolean;)Z
       9: ireturn
}
