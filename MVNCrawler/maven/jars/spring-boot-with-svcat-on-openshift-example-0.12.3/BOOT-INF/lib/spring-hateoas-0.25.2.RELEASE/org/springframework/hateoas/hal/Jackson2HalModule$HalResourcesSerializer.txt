Compiled from "Jackson2HalModule.java"
public class org.springframework.hateoas.hal.Jackson2HalModule$HalResourcesSerializer extends com.fasterxml.jackson.databind.ser.ContainerSerializer<java.util.Collection<?>> implements com.fasterxml.jackson.databind.ser.ContextualSerializer {
  private static final long serialVersionUID;

  private final com.fasterxml.jackson.databind.BeanProperty property;

  private final org.springframework.hateoas.hal.Jackson2HalModule$EmbeddedMapper embeddedMapper;

  public org.springframework.hateoas.hal.Jackson2HalModule$HalResourcesSerializer(org.springframework.hateoas.hal.Jackson2HalModule$EmbeddedMapper);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokespecial #1                  // Method "<init>":(Lcom/fasterxml/jackson/databind/BeanProperty;Lorg/springframework/hateoas/hal/Jackson2HalModule$EmbeddedMapper;)V
       6: return

  public org.springframework.hateoas.hal.Jackson2HalModule$HalResourcesSerializer(com.fasterxml.jackson.databind.BeanProperty, org.springframework.hateoas.hal.Jackson2HalModule$EmbeddedMapper);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/fasterxml/jackson/databind/type/TypeFactory.defaultInstance:()Lcom/fasterxml/jackson/databind/type/TypeFactory;
       4: ldc           #3                  // class java/util/Collection
       6: invokevirtual #4                  // Method com/fasterxml/jackson/databind/type/TypeFactory.constructType:(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;
       9: invokespecial #5                  // Method com/fasterxml/jackson/databind/ser/ContainerSerializer."<init>":(Lcom/fasterxml/jackson/databind/JavaType;)V
      12: aload_0
      13: aload_1
      14: putfield      #6                  // Field property:Lcom/fasterxml/jackson/databind/BeanProperty;
      17: aload_0
      18: aload_2
      19: putfield      #7                  // Field embeddedMapper:Lorg/springframework/hateoas/hal/Jackson2HalModule$EmbeddedMapper;
      22: return

  public void serialize(java.util.Collection<?>, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field embeddedMapper:Lorg/springframework/hateoas/hal/Jackson2HalModule$EmbeddedMapper;
       4: aload_1
       5: invokevirtual #8                  // Method org/springframework/hateoas/hal/Jackson2HalModule$EmbeddedMapper.map:(Ljava/lang/Iterable;)Ljava/util/Map;
       8: astore        4
      10: aload_2
      11: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.getCurrentValue:()Ljava/lang/Object;
      14: astore        5
      16: aload         5
      18: instanceof    #10                 // class org/springframework/hateoas/ResourceSupport
      21: ifeq          46
      24: aload_0
      25: getfield      #7                  // Field embeddedMapper:Lorg/springframework/hateoas/hal/Jackson2HalModule$EmbeddedMapper;
      28: aload_1
      29: invokevirtual #11                 // Method org/springframework/hateoas/hal/Jackson2HalModule$EmbeddedMapper.hasCuriedEmbed:(Ljava/lang/Iterable;)Z
      32: ifeq          46
      35: aload         5
      37: checkcast     #10                 // class org/springframework/hateoas/ResourceSupport
      40: invokestatic  #12                 // Method org/springframework/hateoas/hal/Jackson2HalModule.access$000:()Lorg/springframework/hateoas/Link;
      43: invokevirtual #13                 // Method org/springframework/hateoas/ResourceSupport.add:(Lorg/springframework/hateoas/Link;)V
      46: aload_3
      47: ldc           #14                 // class java/util/Map
      49: aload_0
      50: getfield      #6                  // Field property:Lcom/fasterxml/jackson/databind/BeanProperty;
      53: invokevirtual #15                 // Method com/fasterxml/jackson/databind/SerializerProvider.findValueSerializer:(Ljava/lang/Class;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer;
      56: aload         4
      58: aload_2
      59: aload_3
      60: invokevirtual #16                 // Method com/fasterxml/jackson/databind/JsonSerializer.serialize:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      63: return

  public com.fasterxml.jackson.databind.JsonSerializer<?> createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: new           #17                 // class org/springframework/hateoas/hal/Jackson2HalModule$HalResourcesSerializer
       3: dup
       4: aload_2
       5: aload_0
       6: getfield      #7                  // Field embeddedMapper:Lorg/springframework/hateoas/hal/Jackson2HalModule$EmbeddedMapper;
       9: invokespecial #1                  // Method "<init>":(Lcom/fasterxml/jackson/databind/BeanProperty;Lorg/springframework/hateoas/hal/Jackson2HalModule$EmbeddedMapper;)V
      12: areturn

  public com.fasterxml.jackson.databind.JavaType getContentType();
    Code:
       0: aconst_null
       1: areturn

  public com.fasterxml.jackson.databind.JsonSerializer<?> getContentSerializer();
    Code:
       0: aconst_null
       1: areturn

  public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.util.Collection<?>);
    Code:
       0: aload_2
       1: invokeinterface #18,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
       6: ireturn

  public boolean hasSingleElement(java.util.Collection<?>);
    Code:
       0: aload_1
       1: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.size:()I
       6: iconst_1
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected com.fasterxml.jackson.databind.ser.ContainerSerializer<?> _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer);
    Code:
       0: aconst_null
       1: areturn

  public boolean hasSingleElement(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #3                  // class java/util/Collection
       5: invokevirtual #20                 // Method hasSingleElement:(Ljava/util/Collection;)Z
       8: ireturn

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #3                  // class java/util/Collection
       5: aload_2
       6: aload_3
       7: invokevirtual #21                 // Method serialize:(Ljava/util/Collection;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      10: return

  public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #3                  // class java/util/Collection
       6: invokevirtual #22                 // Method isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/util/Collection;)Z
       9: ireturn
}
