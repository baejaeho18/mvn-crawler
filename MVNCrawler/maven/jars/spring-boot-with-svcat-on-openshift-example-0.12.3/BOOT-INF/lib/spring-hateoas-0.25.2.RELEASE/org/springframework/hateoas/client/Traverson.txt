Compiled from "Traverson.java"
public class org.springframework.hateoas.client.Traverson {
  private static final org.springframework.hateoas.LinkDiscoverers DEFAULT_LINK_DISCOVERERS;

  private final java.net.URI baseUri;

  private final java.util.List<org.springframework.http.MediaType> mediaTypes;

  private org.springframework.web.client.RestOperations operations;

  private org.springframework.hateoas.LinkDiscoverers discoverers;

  public org.springframework.hateoas.client.Traverson(java.net.URI, org.springframework.http.MediaType...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #5                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       6: invokespecial #6                  // Method "<init>":(Ljava/net/URI;Ljava/util/List;)V
       9: return

  public org.springframework.hateoas.client.Traverson(java.net.URI, java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #8                  // String Base URI must not be null!
       7: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #10                 // String At least one media type must be given!
      13: invokestatic  #11                 // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
      16: aload_0
      17: aload_2
      18: putfield      #12                 // Field mediaTypes:Ljava/util/List;
      21: aload_0
      22: aload_1
      23: putfield      #2                  // Field baseUri:Ljava/net/URI;
      26: aload_0
      27: getstatic     #13                 // Field DEFAULT_LINK_DISCOVERERS:Lorg/springframework/hateoas/LinkDiscoverers;
      30: putfield      #1                  // Field discoverers:Lorg/springframework/hateoas/LinkDiscoverers;
      33: aload_0
      34: aload_0
      35: getfield      #12                 // Field mediaTypes:Ljava/util/List;
      38: invokestatic  #14                 // Method createDefaultTemplate:(Ljava/util/List;)Lorg/springframework/web/client/RestOperations;
      41: invokevirtual #15                 // Method setRestOperations:(Lorg/springframework/web/client/RestOperations;)Lorg/springframework/hateoas/client/Traverson;
      44: pop
      45: return

  public static java.util.List<org.springframework.http.converter.HttpMessageConverter<?>> getDefaultMessageConverters(org.springframework.http.MediaType...);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       4: invokestatic  #16                 // Method getDefaultMessageConverters:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public static java.util.List<org.springframework.http.converter.HttpMessageConverter<?>> getDefaultMessageConverters(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: ldc           #17                 // String Media types must not be null!
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #18                 // class java/util/ArrayList
       9: dup
      10: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
      13: astore_1
      14: aload_1
      15: new           #20                 // class org/springframework/http/converter/StringHttpMessageConverter
      18: dup
      19: ldc           #21                 // String UTF-8
      21: invokestatic  #22                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      24: invokespecial #23                 // Method org/springframework/http/converter/StringHttpMessageConverter."<init>":(Ljava/nio/charset/Charset;)V
      27: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      32: pop
      33: aload_0
      34: invokestatic  #25                 // Method getHalJsonFlavors:(Ljava/util/Collection;)Ljava/util/List;
      37: astore_2
      38: aload_2
      39: invokeinterface #26,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      44: ifne          58
      47: aload_1
      48: aload_2
      49: invokestatic  #27                 // Method getHalConverter:(Ljava/util/List;)Lorg/springframework/http/converter/HttpMessageConverter;
      52: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: aload_1
      59: areturn

  private static java.util.List<org.springframework.http.MediaType> getHalJsonFlavors(java.util.Collection<org.springframework.http.MediaType>);
    Code:
       0: new           #18                 // class java/util/ArrayList
       3: dup
       4: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          55
      24: aload_2
      25: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #31                 // class org/springframework/http/MediaType
      33: astore_3
      34: getstatic     #32                 // Field org/springframework/hateoas/MediaTypes.HAL_JSON:Lorg/springframework/http/MediaType;
      37: aload_3
      38: invokevirtual #33                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
      41: ifeq          52
      44: aload_1
      45: aload_3
      46: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: goto          15
      55: aload_1
      56: areturn

  private static final org.springframework.web.client.RestOperations createDefaultTemplate(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: new           #34                 // class org/springframework/web/client/RestTemplate
       3: dup
       4: invokespecial #35                 // Method org/springframework/web/client/RestTemplate."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokestatic  #16                 // Method getDefaultMessageConverters:(Ljava/util/List;)Ljava/util/List;
      13: invokevirtual #36                 // Method org/springframework/web/client/RestTemplate.setMessageConverters:(Ljava/util/List;)V
      16: aload_1
      17: areturn

  private static final org.springframework.http.converter.HttpMessageConverter<?> getHalConverter(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: new           #37                 // class com/fasterxml/jackson/databind/ObjectMapper
       3: dup
       4: invokespecial #38                 // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
       7: astore_1
       8: aload_1
       9: new           #39                 // class org/springframework/hateoas/hal/Jackson2HalModule
      12: dup
      13: invokespecial #40                 // Method org/springframework/hateoas/hal/Jackson2HalModule."<init>":()V
      16: invokevirtual #41                 // Method com/fasterxml/jackson/databind/ObjectMapper.registerModule:(Lcom/fasterxml/jackson/databind/Module;)Lcom/fasterxml/jackson/databind/ObjectMapper;
      19: pop
      20: aload_1
      21: getstatic     #42                 // Field com/fasterxml/jackson/databind/DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES:Lcom/fasterxml/jackson/databind/DeserializationFeature;
      24: iconst_0
      25: invokevirtual #43                 // Method com/fasterxml/jackson/databind/ObjectMapper.configure:(Lcom/fasterxml/jackson/databind/DeserializationFeature;Z)Lcom/fasterxml/jackson/databind/ObjectMapper;
      28: pop
      29: new           #44                 // class org/springframework/http/converter/json/MappingJackson2HttpMessageConverter
      32: dup
      33: invokespecial #45                 // Method org/springframework/http/converter/json/MappingJackson2HttpMessageConverter."<init>":()V
      36: astore_2
      37: aload_2
      38: aload_1
      39: invokevirtual #46                 // Method org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.setObjectMapper:(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
      42: aload_2
      43: aload_0
      44: invokevirtual #47                 // Method org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.setSupportedMediaTypes:(Ljava/util/List;)V
      47: aload_2
      48: areturn

  public org.springframework.hateoas.client.Traverson setRestOperations(org.springframework.web.client.RestOperations);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     15
       5: aload_0
       6: getfield      #12                 // Field mediaTypes:Ljava/util/List;
       9: invokestatic  #14                 // Method createDefaultTemplate:(Ljava/util/List;)Lorg/springframework/web/client/RestOperations;
      12: goto          16
      15: aload_1
      16: putfield      #3                  // Field operations:Lorg/springframework/web/client/RestOperations;
      19: aload_0
      20: areturn

  public org.springframework.hateoas.client.Traverson setLinkDiscoverers(java.util.List<? extends org.springframework.hateoas.LinkDiscoverer>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #1                  // Field discoverers:Lorg/springframework/hateoas/LinkDiscoverers;
       5: ifnonnull     14
       8: getstatic     #13                 // Field DEFAULT_LINK_DISCOVERERS:Lorg/springframework/hateoas/LinkDiscoverers;
      11: goto          25
      14: new           #48                 // class org/springframework/hateoas/LinkDiscoverers
      17: dup
      18: aload_1
      19: invokestatic  #49                 // Method org/springframework/plugin/core/OrderAwarePluginRegistry.create:(Ljava/util/List;)Lorg/springframework/plugin/core/OrderAwarePluginRegistry;
      22: invokespecial #50                 // Method org/springframework/hateoas/LinkDiscoverers."<init>":(Lorg/springframework/plugin/core/PluginRegistry;)V
      25: putfield      #1                  // Field discoverers:Lorg/springframework/hateoas/LinkDiscoverers;
      28: aload_0
      29: areturn

  public org.springframework.hateoas.client.Traverson$TraversalBuilder follow(java.lang.String...);
    Code:
       0: new           #51                 // class org/springframework/hateoas/client/Traverson$TraversalBuilder
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #52                 // Method org/springframework/hateoas/client/Traverson$TraversalBuilder."<init>":(Lorg/springframework/hateoas/client/Traverson;Lorg/springframework/hateoas/client/Traverson$1;)V
       9: aload_1
      10: invokevirtual #53                 // Method org/springframework/hateoas/client/Traverson$TraversalBuilder.follow:([Ljava/lang/String;)Lorg/springframework/hateoas/client/Traverson$TraversalBuilder;
      13: areturn

  public org.springframework.hateoas.client.Traverson$TraversalBuilder follow(org.springframework.hateoas.client.Hop);
    Code:
       0: new           #51                 // class org/springframework/hateoas/client/Traverson$TraversalBuilder
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #52                 // Method org/springframework/hateoas/client/Traverson$TraversalBuilder."<init>":(Lorg/springframework/hateoas/client/Traverson;Lorg/springframework/hateoas/client/Traverson$1;)V
       9: aload_1
      10: invokevirtual #54                 // Method org/springframework/hateoas/client/Traverson$TraversalBuilder.follow:(Lorg/springframework/hateoas/client/Hop;)Lorg/springframework/hateoas/client/Traverson$TraversalBuilder;
      13: areturn

  private org.springframework.http.HttpEntity<?> prepareRequest(org.springframework.http.HttpHeaders);
    Code:
       0: new           #55                 // class org/springframework/http/HttpHeaders
       3: dup
       4: invokespecial #56                 // Method org/springframework/http/HttpHeaders."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #57                 // Method org/springframework/http/HttpHeaders.putAll:(Ljava/util/Map;)V
      13: aload_1
      14: invokevirtual #58                 // Method org/springframework/http/HttpHeaders.getAccept:()Ljava/util/List;
      17: invokeinterface #26,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      22: ifeq          33
      25: aload_2
      26: aload_0
      27: getfield      #12                 // Field mediaTypes:Ljava/util/List;
      30: invokevirtual #59                 // Method org/springframework/http/HttpHeaders.setAccept:(Ljava/util/List;)V
      33: new           #60                 // class org/springframework/http/HttpEntity
      36: dup
      37: aload_2
      38: invokespecial #61                 // Method org/springframework/http/HttpEntity."<init>":(Lorg/springframework/util/MultiValueMap;)V
      41: areturn

  static org.springframework.http.HttpEntity access$100(org.springframework.hateoas.client.Traverson, org.springframework.http.HttpHeaders);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method prepareRequest:(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpEntity;
       5: areturn

  static org.springframework.web.client.RestOperations access$200(org.springframework.hateoas.client.Traverson);
    Code:
       0: aload_0
       1: getfield      #3                  // Field operations:Lorg/springframework/web/client/RestOperations;
       4: areturn

  static java.net.URI access$300(org.springframework.hateoas.client.Traverson);
    Code:
       0: aload_0
       1: getfield      #2                  // Field baseUri:Ljava/net/URI;
       4: areturn

  static org.springframework.hateoas.LinkDiscoverers access$400(org.springframework.hateoas.client.Traverson);
    Code:
       0: aload_0
       1: getfield      #1                  // Field discoverers:Lorg/springframework/hateoas/LinkDiscoverers;
       4: areturn

  static {};
    Code:
       0: new           #62                 // class org/springframework/hateoas/hal/HalLinkDiscoverer
       3: dup
       4: invokespecial #63                 // Method org/springframework/hateoas/hal/HalLinkDiscoverer."<init>":()V
       7: astore_0
       8: new           #48                 // class org/springframework/hateoas/LinkDiscoverers
      11: dup
      12: iconst_1
      13: anewarray     #64                 // class org/springframework/hateoas/LinkDiscoverer
      16: dup
      17: iconst_0
      18: aload_0
      19: aastore
      20: invokestatic  #5                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      23: invokestatic  #49                 // Method org/springframework/plugin/core/OrderAwarePluginRegistry.create:(Ljava/util/List;)Lorg/springframework/plugin/core/OrderAwarePluginRegistry;
      26: invokespecial #50                 // Method org/springframework/hateoas/LinkDiscoverers."<init>":(Lorg/springframework/plugin/core/PluginRegistry;)V
      29: putstatic     #13                 // Field DEFAULT_LINK_DISCOVERERS:Lorg/springframework/hateoas/LinkDiscoverers;
      32: return
}
