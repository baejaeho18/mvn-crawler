Compiled from "TypeConstrainedMappingJackson2HttpMessageConverter.java"
public class org.springframework.hateoas.mvc.TypeConstrainedMappingJackson2HttpMessageConverter extends org.springframework.http.converter.json.MappingJackson2HttpMessageConverter {
  private final java.lang.Class<?> type;

  public org.springframework.hateoas.mvc.TypeConstrainedMappingJackson2HttpMessageConverter(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/http/converter/json/MappingJackson2HttpMessageConverter."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Type must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field type:Ljava/lang/Class;
      15: return

  public boolean canRead(java.lang.Class<?>, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:Ljava/lang/Class;
       4: aload_1
       5: invokevirtual #5                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ifeq          24
      11: aload_0
      12: aload_1
      13: aload_2
      14: invokespecial #6                  // Method org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.canRead:(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean canRead(java.lang.reflect.Type, java.lang.Class<?>, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:Ljava/lang/Class;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #7                  // Method getJavaType:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/JavaType;
      10: invokevirtual #8                  // Method com/fasterxml/jackson/databind/JavaType.getRawClass:()Ljava/lang/Class;
      13: invokevirtual #5                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      16: ifeq          33
      19: aload_0
      20: aload_1
      21: aload_2
      22: aload_3
      23: invokespecial #9                  // Method org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.canRead:(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  public boolean canWrite(java.lang.Class<?>, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:Ljava/lang/Class;
       4: aload_1
       5: invokevirtual #5                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ifeq          24
      11: aload_0
      12: aload_1
      13: aload_2
      14: invokespecial #10                 // Method org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.canWrite:(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn
}
