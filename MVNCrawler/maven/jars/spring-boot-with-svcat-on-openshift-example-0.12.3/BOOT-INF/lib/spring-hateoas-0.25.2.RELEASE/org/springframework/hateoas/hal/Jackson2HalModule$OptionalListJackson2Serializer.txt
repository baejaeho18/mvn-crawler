Compiled from "Jackson2HalModule.java"
public class org.springframework.hateoas.hal.Jackson2HalModule$OptionalListJackson2Serializer extends com.fasterxml.jackson.databind.ser.ContainerSerializer<java.lang.Object> implements com.fasterxml.jackson.databind.ser.ContextualSerializer {
  private static final long serialVersionUID;

  private final com.fasterxml.jackson.databind.BeanProperty property;

  private final java.util.Map<java.lang.Class<?>, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>> serializers;

  private final org.springframework.hateoas.hal.HalConfiguration halConfiguration;

  public org.springframework.hateoas.hal.Jackson2HalModule$OptionalListJackson2Serializer();
    Code:
       0: aload_0
       1: aconst_null
       2: new           #1                  // class org/springframework/hateoas/hal/HalConfiguration
       5: dup
       6: invokespecial #2                  // Method org/springframework/hateoas/hal/HalConfiguration."<init>":()V
       9: getstatic     #3                  // Field org/springframework/hateoas/hal/HalConfiguration$RenderSingleLinks.AS_SINGLE:Lorg/springframework/hateoas/hal/HalConfiguration$RenderSingleLinks;
      12: invokevirtual #4                  // Method org/springframework/hateoas/hal/HalConfiguration.withRenderSingleLinks:(Lorg/springframework/hateoas/hal/HalConfiguration$RenderSingleLinks;)Lorg/springframework/hateoas/hal/HalConfiguration;
      15: invokespecial #5                  // Method "<init>":(Lcom/fasterxml/jackson/databind/BeanProperty;Lorg/springframework/hateoas/hal/HalConfiguration;)V
      18: return

  public org.springframework.hateoas.hal.Jackson2HalModule$OptionalListJackson2Serializer(com.fasterxml.jackson.databind.BeanProperty);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class org/springframework/hateoas/hal/HalConfiguration
       5: dup
       6: invokespecial #2                  // Method org/springframework/hateoas/hal/HalConfiguration."<init>":()V
       9: getstatic     #3                  // Field org/springframework/hateoas/hal/HalConfiguration$RenderSingleLinks.AS_SINGLE:Lorg/springframework/hateoas/hal/HalConfiguration$RenderSingleLinks;
      12: invokevirtual #4                  // Method org/springframework/hateoas/hal/HalConfiguration.withRenderSingleLinks:(Lorg/springframework/hateoas/hal/HalConfiguration$RenderSingleLinks;)Lorg/springframework/hateoas/hal/HalConfiguration;
      15: invokespecial #5                  // Method "<init>":(Lcom/fasterxml/jackson/databind/BeanProperty;Lorg/springframework/hateoas/hal/HalConfiguration;)V
      18: return

  public org.springframework.hateoas.hal.Jackson2HalModule$OptionalListJackson2Serializer(com.fasterxml.jackson.databind.BeanProperty, org.springframework.hateoas.hal.HalConfiguration);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method com/fasterxml/jackson/databind/type/TypeFactory.defaultInstance:()Lcom/fasterxml/jackson/databind/type/TypeFactory;
       4: ldc           #7                  // class java/util/List
       6: invokevirtual #8                  // Method com/fasterxml/jackson/databind/type/TypeFactory.constructType:(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;
       9: invokespecial #9                  // Method com/fasterxml/jackson/databind/ser/ContainerSerializer."<init>":(Lcom/fasterxml/jackson/databind/JavaType;)V
      12: aload_0
      13: aload_1
      14: putfield      #10                 // Field property:Lcom/fasterxml/jackson/databind/BeanProperty;
      17: aload_0
      18: new           #11                 // class java/util/HashMap
      21: dup
      22: invokespecial #12                 // Method java/util/HashMap."<init>":()V
      25: putfield      #13                 // Field serializers:Ljava/util/Map;
      28: aload_0
      29: aload_2
      30: putfield      #14                 // Field halConfiguration:Lorg/springframework/hateoas/hal/HalConfiguration;
      33: return

  public com.fasterxml.jackson.databind.ser.ContainerSerializer<?> _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer);
    Code:
       0: new           #15                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #16                 // String not implemented
       6: invokespecial #17                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_1
       1: checkcast     #7                  // class java/util/List
       4: astore        4
       6: aload         4
       8: invokeinterface #18,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      13: ifeq          17
      16: return
      17: aload         4
      19: invokeinterface #19,  1           // InterfaceMethod java/util/List.size:()I
      24: iconst_1
      25: if_icmpne     55
      28: aload_0
      29: getfield      #14                 // Field halConfiguration:Lorg/springframework/hateoas/hal/HalConfiguration;
      32: invokevirtual #20                 // Method org/springframework/hateoas/hal/HalConfiguration.getRenderSingleLinks:()Lorg/springframework/hateoas/hal/HalConfiguration$RenderSingleLinks;
      35: getstatic     #3                  // Field org/springframework/hateoas/hal/HalConfiguration$RenderSingleLinks.AS_SINGLE:Lorg/springframework/hateoas/hal/HalConfiguration$RenderSingleLinks;
      38: if_acmpne     55
      41: aload_0
      42: aload         4
      44: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      49: aload_2
      50: aload_3
      51: invokespecial #22                 // Method serializeContents:(Ljava/util/Iterator;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      54: return
      55: aload_2
      56: invokevirtual #23                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartArray:()V
      59: aload_0
      60: aload         4
      62: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      67: aload_2
      68: aload_3
      69: invokespecial #22                 // Method serializeContents:(Ljava/util/Iterator;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      72: aload_2
      73: invokevirtual #24                 // Method com/fasterxml/jackson/core/JsonGenerator.writeEndArray:()V
      76: return

  private void serializeContents(java.util.Iterator<?>, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_1
       1: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       6: ifeq          50
       9: aload_1
      10: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      15: astore        4
      17: aload         4
      19: ifnonnull     30
      22: aload_3
      23: aload_2
      24: invokevirtual #27                 // Method com/fasterxml/jackson/databind/SerializerProvider.defaultSerializeNull:(Lcom/fasterxml/jackson/core/JsonGenerator;)V
      27: goto          47
      30: aload_0
      31: aload         4
      33: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      36: aload_3
      37: invokespecial #29                 // Method getOrLookupSerializerFor:(Ljava/lang/Class;Lcom/fasterxml/jackson/databind/SerializerProvider;)Lcom/fasterxml/jackson/databind/JsonSerializer;
      40: aload         4
      42: aload_2
      43: aload_3
      44: invokevirtual #30                 // Method com/fasterxml/jackson/databind/JsonSerializer.serialize:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      47: goto          0
      50: return

  private com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> getOrLookupSerializerFor(java.lang.Class<?>, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field serializers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #32                 // class com/fasterxml/jackson/databind/JsonSerializer
      13: astore_3
      14: aload_3
      15: ifnonnull     40
      18: aload_2
      19: aload_1
      20: aload_0
      21: getfield      #10                 // Field property:Lcom/fasterxml/jackson/databind/BeanProperty;
      24: invokevirtual #33                 // Method com/fasterxml/jackson/databind/SerializerProvider.findValueSerializer:(Ljava/lang/Class;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer;
      27: astore_3
      28: aload_0
      29: getfield      #13                 // Field serializers:Ljava/util/Map;
      32: aload_1
      33: aload_3
      34: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_3
      41: areturn

  public com.fasterxml.jackson.databind.JsonSerializer<?> getContentSerializer();
    Code:
       0: aconst_null
       1: areturn

  public com.fasterxml.jackson.databind.JavaType getContentType();
    Code:
       0: aconst_null
       1: areturn

  public boolean hasSingleElement(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public com.fasterxml.jackson.databind.JsonSerializer<?> createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: new           #35                 // class org/springframework/hateoas/hal/Jackson2HalModule$OptionalListJackson2Serializer
       3: dup
       4: aload_2
       5: invokespecial #36                 // Method "<init>":(Lcom/fasterxml/jackson/databind/BeanProperty;)V
       8: areturn
}
