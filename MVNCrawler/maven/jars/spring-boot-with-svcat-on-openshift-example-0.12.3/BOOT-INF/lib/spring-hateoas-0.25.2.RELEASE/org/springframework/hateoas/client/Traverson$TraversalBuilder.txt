Compiled from "Traverson.java"
public class org.springframework.hateoas.client.Traverson$TraversalBuilder {
  private java.util.List<org.springframework.hateoas.client.Hop> rels;

  private java.util.Map<java.lang.String, java.lang.Object> templateParameters;

  private org.springframework.http.HttpHeaders headers;

  final org.springframework.hateoas.client.Traverson this$0;

  private org.springframework.hateoas.client.Traverson$TraversalBuilder(org.springframework.hateoas.client.Traverson);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/springframework/hateoas/client/Traverson;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #4                  // class java/util/ArrayList
      13: dup
      14: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      17: putfield      #6                  // Field rels:Ljava/util/List;
      20: aload_0
      21: new           #7                  // class java/util/HashMap
      24: dup
      25: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      28: putfield      #9                  // Field templateParameters:Ljava/util/Map;
      31: aload_0
      32: new           #10                 // class org/springframework/http/HttpHeaders
      35: dup
      36: invokespecial #11                 // Method org/springframework/http/HttpHeaders."<init>":()V
      39: putfield      #12                 // Field headers:Lorg/springframework/http/HttpHeaders;
      42: return

  public org.springframework.hateoas.client.Traverson$TraversalBuilder follow(java.lang.String...);
    Code:
       0: aload_1
       1: ldc           #13                 // String Rels must not be null!
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: astore_2
       8: aload_2
       9: arraylength
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: iload_3
      17: if_icmpge     47
      20: aload_2
      21: iload         4
      23: aaload
      24: astore        5
      26: aload_0
      27: getfield      #6                  // Field rels:Ljava/util/List;
      30: aload         5
      32: invokestatic  #15                 // Method org/springframework/hateoas/client/Hop.rel:(Ljava/lang/String;)Lorg/springframework/hateoas/client/Hop;
      35: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: iinc          4, 1
      44: goto          14
      47: aload_0
      48: areturn

  public org.springframework.hateoas.client.Traverson$TraversalBuilder follow(org.springframework.hateoas.client.Hop);
    Code:
       0: aload_1
       1: ldc           #17                 // String Hop must not be null!
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #6                  // Field rels:Ljava/util/List;
      10: aload_1
      11: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: areturn

  public org.springframework.hateoas.client.Traverson$TraversalBuilder withTemplateParameters(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field templateParameters:Ljava/util/Map;
       5: aload_0
       6: areturn

  public org.springframework.hateoas.client.Traverson$TraversalBuilder withHeaders(org.springframework.http.HttpHeaders);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field headers:Lorg/springframework/http/HttpHeaders;
       5: aload_0
       6: areturn

  public <T> T toObject(java.lang.Class<T>);
    Code:
       0: aload_1
       1: ldc           #18                 // String Target type must not be null!
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #2                  // Field this$0:Lorg/springframework/hateoas/client/Traverson;
      10: invokestatic  #19                 // Method org/springframework/hateoas/client/Traverson.access$200:(Lorg/springframework/hateoas/client/Traverson;)Lorg/springframework/web/client/RestOperations;
      13: aload_0
      14: invokespecial #20                 // Method traverseToExpandedFinalUrl:()Ljava/net/URI;
      17: getstatic     #21                 // Field org/springframework/http/HttpMethod.GET:Lorg/springframework/http/HttpMethod;
      20: aload_0
      21: getfield      #2                  // Field this$0:Lorg/springframework/hateoas/client/Traverson;
      24: aload_0
      25: getfield      #12                 // Field headers:Lorg/springframework/http/HttpHeaders;
      28: invokestatic  #22                 // Method org/springframework/hateoas/client/Traverson.access$100:(Lorg/springframework/hateoas/client/Traverson;Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpEntity;
      31: aload_1
      32: invokeinterface #23,  5           // InterfaceMethod org/springframework/web/client/RestOperations.exchange:(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;)Lorg/springframework/http/ResponseEntity;
      37: invokevirtual #24                 // Method org/springframework/http/ResponseEntity.getBody:()Ljava/lang/Object;
      40: areturn

  public <T> T toObject(org.springframework.core.ParameterizedTypeReference<T>);
    Code:
       0: aload_1
       1: ldc           #18                 // String Target type must not be null!
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #2                  // Field this$0:Lorg/springframework/hateoas/client/Traverson;
      10: invokestatic  #19                 // Method org/springframework/hateoas/client/Traverson.access$200:(Lorg/springframework/hateoas/client/Traverson;)Lorg/springframework/web/client/RestOperations;
      13: aload_0
      14: invokespecial #20                 // Method traverseToExpandedFinalUrl:()Ljava/net/URI;
      17: getstatic     #21                 // Field org/springframework/http/HttpMethod.GET:Lorg/springframework/http/HttpMethod;
      20: aload_0
      21: getfield      #2                  // Field this$0:Lorg/springframework/hateoas/client/Traverson;
      24: aload_0
      25: getfield      #12                 // Field headers:Lorg/springframework/http/HttpHeaders;
      28: invokestatic  #22                 // Method org/springframework/hateoas/client/Traverson.access$100:(Lorg/springframework/hateoas/client/Traverson;Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpEntity;
      31: aload_1
      32: invokeinterface #25,  5           // InterfaceMethod org/springframework/web/client/RestOperations.exchange:(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/http/ResponseEntity;
      37: invokevirtual #24                 // Method org/springframework/http/ResponseEntity.getBody:()Ljava/lang/Object;
      40: areturn

  public <T> T toObject(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #26                 // String JSON path must not be null or empty!
       3: invokestatic  #27                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #2                  // Field this$0:Lorg/springframework/hateoas/client/Traverson;
      10: invokestatic  #19                 // Method org/springframework/hateoas/client/Traverson.access$200:(Lorg/springframework/hateoas/client/Traverson;)Lorg/springframework/web/client/RestOperations;
      13: aload_0
      14: invokespecial #20                 // Method traverseToExpandedFinalUrl:()Ljava/net/URI;
      17: getstatic     #21                 // Field org/springframework/http/HttpMethod.GET:Lorg/springframework/http/HttpMethod;
      20: aload_0
      21: getfield      #2                  // Field this$0:Lorg/springframework/hateoas/client/Traverson;
      24: aload_0
      25: getfield      #12                 // Field headers:Lorg/springframework/http/HttpHeaders;
      28: invokestatic  #22                 // Method org/springframework/hateoas/client/Traverson.access$100:(Lorg/springframework/hateoas/client/Traverson;Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpEntity;
      31: ldc           #28                 // class java/lang/String
      33: invokeinterface #23,  5           // InterfaceMethod org/springframework/web/client/RestOperations.exchange:(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;)Lorg/springframework/http/ResponseEntity;
      38: invokevirtual #24                 // Method org/springframework/http/ResponseEntity.getBody:()Ljava/lang/Object;
      41: checkcast     #28                 // class java/lang/String
      44: astore_2
      45: aload_2
      46: aload_1
      47: iconst_0
      48: anewarray     #29                 // class com/jayway/jsonpath/Predicate
      51: invokestatic  #30                 // Method com/jayway/jsonpath/JsonPath.read:(Ljava/lang/String;Ljava/lang/String;[Lcom/jayway/jsonpath/Predicate;)Ljava/lang/Object;
      54: areturn

  public <T> org.springframework.http.ResponseEntity<T> toEntity(java.lang.Class<T>);
    Code:
       0: aload_1
       1: ldc           #18                 // String Target type must not be null!
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #2                  // Field this$0:Lorg/springframework/hateoas/client/Traverson;
      10: invokestatic  #19                 // Method org/springframework/hateoas/client/Traverson.access$200:(Lorg/springframework/hateoas/client/Traverson;)Lorg/springframework/web/client/RestOperations;
      13: aload_0
      14: invokespecial #20                 // Method traverseToExpandedFinalUrl:()Ljava/net/URI;
      17: getstatic     #21                 // Field org/springframework/http/HttpMethod.GET:Lorg/springframework/http/HttpMethod;
      20: aload_0
      21: getfield      #2                  // Field this$0:Lorg/springframework/hateoas/client/Traverson;
      24: aload_0
      25: getfield      #12                 // Field headers:Lorg/springframework/http/HttpHeaders;
      28: invokestatic  #22                 // Method org/springframework/hateoas/client/Traverson.access$100:(Lorg/springframework/hateoas/client/Traverson;Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpEntity;
      31: aload_1
      32: invokeinterface #23,  5           // InterfaceMethod org/springframework/web/client/RestOperations.exchange:(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;)Lorg/springframework/http/ResponseEntity;
      37: areturn

  public org.springframework.hateoas.Link asLink();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #31                 // Method traverseToLink:(Z)Lorg/springframework/hateoas/Link;
       5: areturn

  public org.springframework.hateoas.Link asTemplatedLink();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #31                 // Method traverseToLink:(Z)Lorg/springframework/hateoas/Link;
       5: areturn

  private org.springframework.hateoas.Link traverseToLink(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field rels:Ljava/util/List;
       4: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I
       9: ifle          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc           #33                 // String At least one rel needs to be provided!
      19: invokestatic  #34                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      22: new           #35                 // class org/springframework/hateoas/Link
      25: dup
      26: iload_1
      27: ifeq          40
      30: aload_0
      31: invokespecial #20                 // Method traverseToExpandedFinalUrl:()Ljava/net/URI;
      34: invokevirtual #36                 // Method java/net/URI.toString:()Ljava/lang/String;
      37: goto          44
      40: aload_0
      41: invokespecial #37                 // Method traverseToFinalUrl:()Ljava/lang/String;
      44: aload_0
      45: getfield      #6                  // Field rels:Ljava/util/List;
      48: aload_0
      49: getfield      #6                  // Field rels:Ljava/util/List;
      52: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I
      57: iconst_1
      58: isub
      59: invokeinterface #38,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      64: checkcast     #39                 // class org/springframework/hateoas/client/Hop
      67: invokevirtual #40                 // Method org/springframework/hateoas/client/Hop.getRel:()Ljava/lang/String;
      70: invokespecial #41                 // Method org/springframework/hateoas/Link."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      73: areturn

  private java.lang.String traverseToFinalUrl();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field this$0:Lorg/springframework/hateoas/client/Traverson;
       5: invokestatic  #42                 // Method org/springframework/hateoas/client/Traverson.access$300:(Lorg/springframework/hateoas/client/Traverson;)Ljava/net/URI;
       8: invokevirtual #36                 // Method java/net/URI.toString:()Ljava/lang/String;
      11: aload_0
      12: getfield      #6                  // Field rels:Ljava/util/List;
      15: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: invokespecial #44                 // Method getAndFindLinkWithRel:(Ljava/lang/String;Ljava/util/Iterator;)Ljava/lang/String;
      23: astore_1
      24: new           #45                 // class org/springframework/hateoas/UriTemplate
      27: dup
      28: aload_1
      29: invokespecial #46                 // Method org/springframework/hateoas/UriTemplate."<init>":(Ljava/lang/String;)V
      32: invokevirtual #47                 // Method org/springframework/hateoas/UriTemplate.toString:()Ljava/lang/String;
      35: areturn

  private java.net.URI traverseToExpandedFinalUrl();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field this$0:Lorg/springframework/hateoas/client/Traverson;
       5: invokestatic  #42                 // Method org/springframework/hateoas/client/Traverson.access$300:(Lorg/springframework/hateoas/client/Traverson;)Ljava/net/URI;
       8: invokevirtual #36                 // Method java/net/URI.toString:()Ljava/lang/String;
      11: aload_0
      12: getfield      #6                  // Field rels:Ljava/util/List;
      15: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: invokespecial #44                 // Method getAndFindLinkWithRel:(Ljava/lang/String;Ljava/util/Iterator;)Ljava/lang/String;
      23: astore_1
      24: new           #45                 // class org/springframework/hateoas/UriTemplate
      27: dup
      28: aload_1
      29: invokespecial #46                 // Method org/springframework/hateoas/UriTemplate."<init>":(Ljava/lang/String;)V
      32: aload_0
      33: getfield      #9                  // Field templateParameters:Ljava/util/Map;
      36: invokevirtual #48                 // Method org/springframework/hateoas/UriTemplate.expand:(Ljava/util/Map;)Ljava/net/URI;
      39: areturn

  private java.lang.String getAndFindLinkWithRel(java.lang.String, java.util.Iterator<org.springframework.hateoas.client.Hop>);
    Code:
       0: aload_2
       1: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       6: ifne          11
       9: aload_1
      10: areturn
      11: aload_0
      12: getfield      #2                  // Field this$0:Lorg/springframework/hateoas/client/Traverson;
      15: aload_0
      16: getfield      #12                 // Field headers:Lorg/springframework/http/HttpHeaders;
      19: invokestatic  #22                 // Method org/springframework/hateoas/client/Traverson.access$100:(Lorg/springframework/hateoas/client/Traverson;Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpEntity;
      22: astore_3
      23: new           #45                 // class org/springframework/hateoas/UriTemplate
      26: dup
      27: aload_1
      28: invokespecial #46                 // Method org/springframework/hateoas/UriTemplate."<init>":(Ljava/lang/String;)V
      31: astore        4
      33: aload_0
      34: getfield      #2                  // Field this$0:Lorg/springframework/hateoas/client/Traverson;
      37: invokestatic  #19                 // Method org/springframework/hateoas/client/Traverson.access$200:(Lorg/springframework/hateoas/client/Traverson;)Lorg/springframework/web/client/RestOperations;
      40: aload         4
      42: iconst_0
      43: anewarray     #50                 // class java/lang/Object
      46: invokevirtual #51                 // Method org/springframework/hateoas/UriTemplate.expand:([Ljava/lang/Object;)Ljava/net/URI;
      49: getstatic     #21                 // Field org/springframework/http/HttpMethod.GET:Lorg/springframework/http/HttpMethod;
      52: aload_3
      53: ldc           #28                 // class java/lang/String
      55: invokeinterface #23,  5           // InterfaceMethod org/springframework/web/client/RestOperations.exchange:(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;)Lorg/springframework/http/ResponseEntity;
      60: astore        5
      62: aload         5
      64: invokevirtual #52                 // Method org/springframework/http/ResponseEntity.getHeaders:()Lorg/springframework/http/HttpHeaders;
      67: invokevirtual #53                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      70: astore        6
      72: aload         5
      74: invokevirtual #24                 // Method org/springframework/http/ResponseEntity.getBody:()Ljava/lang/Object;
      77: checkcast     #28                 // class java/lang/String
      80: astore        7
      82: aload_2
      83: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      88: checkcast     #39                 // class org/springframework/hateoas/client/Hop
      91: astore        8
      93: aload         8
      95: invokevirtual #40                 // Method org/springframework/hateoas/client/Hop.getRel:()Ljava/lang/String;
      98: aload_0
      99: getfield      #2                  // Field this$0:Lorg/springframework/hateoas/client/Traverson;
     102: invokestatic  #55                 // Method org/springframework/hateoas/client/Traverson.access$400:(Lorg/springframework/hateoas/client/Traverson;)Lorg/springframework/hateoas/LinkDiscoverers;
     105: invokestatic  #56                 // Method org/springframework/hateoas/client/Rels.getRelFor:(Ljava/lang/String;Lorg/springframework/hateoas/LinkDiscoverers;)Lorg/springframework/hateoas/client/Rels$Rel;
     108: astore        9
     110: aload         9
     112: aload         7
     114: aload         6
     116: invokeinterface #57,  3           // InterfaceMethod org/springframework/hateoas/client/Rels$Rel.findInResponse:(Ljava/lang/String;Lorg/springframework/http/MediaType;)Lorg/springframework/hateoas/Link;
     121: astore        10
     123: aload         10
     125: ifnonnull     155
     128: new           #58                 // class java/lang/IllegalStateException
     131: dup
     132: ldc           #59                 // String Expected to find link with rel \'%s\' in response %s!
     134: iconst_2
     135: anewarray     #50                 // class java/lang/Object
     138: dup
     139: iconst_0
     140: aload         9
     142: aastore
     143: dup
     144: iconst_1
     145: aload         7
     147: aastore
     148: invokestatic  #60                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     151: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     154: athrow
     155: aload         8
     157: invokevirtual #62                 // Method org/springframework/hateoas/client/Hop.hasParameters:()Z
     160: ifne          174
     163: aload_0
     164: aload         10
     166: invokevirtual #63                 // Method org/springframework/hateoas/Link.getHref:()Ljava/lang/String;
     169: aload_2
     170: invokespecial #44                 // Method getAndFindLinkWithRel:(Ljava/lang/String;Ljava/util/Iterator;)Ljava/lang/String;
     173: areturn
     174: aload_0
     175: aload         10
     177: aload         8
     179: aload_0
     180: getfield      #9                  // Field templateParameters:Ljava/util/Map;
     183: invokevirtual #64                 // Method org/springframework/hateoas/client/Hop.getMergedParameters:(Ljava/util/Map;)Ljava/util/Map;
     186: invokevirtual #65                 // Method org/springframework/hateoas/Link.expand:(Ljava/util/Map;)Lorg/springframework/hateoas/Link;
     189: invokevirtual #63                 // Method org/springframework/hateoas/Link.getHref:()Ljava/lang/String;
     192: aload_2
     193: invokespecial #44                 // Method getAndFindLinkWithRel:(Ljava/lang/String;Ljava/util/Iterator;)Ljava/lang/String;
     196: areturn

  org.springframework.hateoas.client.Traverson$TraversalBuilder(org.springframework.hateoas.client.Traverson, org.springframework.hateoas.client.Traverson$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/springframework/hateoas/client/Traverson;)V
       5: return
}
