Compiled from "JaxRsLinkBuilder.java"
public class org.springframework.hateoas.jaxrs.JaxRsLinkBuilder extends org.springframework.hateoas.core.LinkBuilderSupport<org.springframework.hateoas.jaxrs.JaxRsLinkBuilder> {
  private static final org.springframework.hateoas.core.MappingDiscoverer DISCOVERER;

  private static final org.springframework.hateoas.jaxrs.JaxRsLinkBuilder$CustomUriTemplateHandler HANDLER;

  private org.springframework.hateoas.jaxrs.JaxRsLinkBuilder(org.springframework.web.util.UriComponentsBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/hateoas/core/LinkBuilderSupport."<init>":(Lorg/springframework/web/util/UriComponentsBuilder;)V
       5: return

  public static org.springframework.hateoas.jaxrs.JaxRsLinkBuilder linkTo(java.lang.Class<?>);
    Code:
       0: aload_0
       1: iconst_0
       2: anewarray     #2                  // class java/lang/Object
       5: invokestatic  #3                  // Method linkTo:(Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/hateoas/jaxrs/JaxRsLinkBuilder;
       8: areturn

  public static org.springframework.hateoas.jaxrs.JaxRsLinkBuilder linkTo(java.lang.Class<?>, java.lang.Object...);
    Code:
       0: aload_0
       1: ldc           #4                  // String Controller type must not be null!
       3: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #6                  // String Parameters must not be null!
       9: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: getstatic     #7                  // Field DISCOVERER:Lorg/springframework/hateoas/core/MappingDiscoverer;
      15: aload_0
      16: invokeinterface #8,  2            // InterfaceMethod org/springframework/hateoas/core/MappingDiscoverer.getMapping:(Ljava/lang/Class;)Ljava/lang/String;
      21: invokestatic  #9                  // Method org/springframework/web/util/UriComponentsBuilder.fromUriString:(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      24: astore_2
      25: getstatic     #10                 // Field HANDLER:Lorg/springframework/hateoas/jaxrs/JaxRsLinkBuilder$CustomUriTemplateHandler;
      28: aload_2
      29: aload_1
      30: invokevirtual #11                 // Method org/springframework/hateoas/jaxrs/JaxRsLinkBuilder$CustomUriTemplateHandler.expandAndEncode:(Lorg/springframework/web/util/UriComponentsBuilder;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
      33: astore_3
      34: new           #12                 // class org/springframework/hateoas/jaxrs/JaxRsLinkBuilder
      37: dup
      38: invokestatic  #13                 // Method org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromCurrentServletMapping:()Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
      41: invokespecial #14                 // Method "<init>":(Lorg/springframework/web/util/UriComponentsBuilder;)V
      44: aload_3
      45: iconst_1
      46: invokevirtual #15                 // Method slash:(Lorg/springframework/web/util/UriComponents;Z)Lorg/springframework/hateoas/LinkBuilder;
      49: checkcast     #12                 // class org/springframework/hateoas/jaxrs/JaxRsLinkBuilder
      52: areturn

  public static org.springframework.hateoas.jaxrs.JaxRsLinkBuilder linkTo(java.lang.Class<?>, java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: ldc           #4                  // String Controller type must not be null!
       3: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #6                  // String Parameters must not be null!
       9: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: getstatic     #7                  // Field DISCOVERER:Lorg/springframework/hateoas/core/MappingDiscoverer;
      15: aload_0
      16: invokeinterface #8,  2            // InterfaceMethod org/springframework/hateoas/core/MappingDiscoverer.getMapping:(Ljava/lang/Class;)Ljava/lang/String;
      21: invokestatic  #9                  // Method org/springframework/web/util/UriComponentsBuilder.fromUriString:(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      24: astore_2
      25: getstatic     #10                 // Field HANDLER:Lorg/springframework/hateoas/jaxrs/JaxRsLinkBuilder$CustomUriTemplateHandler;
      28: aload_2
      29: aload_1
      30: invokevirtual #16                 // Method org/springframework/hateoas/jaxrs/JaxRsLinkBuilder$CustomUriTemplateHandler.expandAndEncode:(Lorg/springframework/web/util/UriComponentsBuilder;Ljava/util/Map;)Lorg/springframework/web/util/UriComponents;
      33: astore_3
      34: new           #12                 // class org/springframework/hateoas/jaxrs/JaxRsLinkBuilder
      37: dup
      38: invokestatic  #13                 // Method org/springframework/web/servlet/support/ServletUriComponentsBuilder.fromCurrentServletMapping:()Lorg/springframework/web/servlet/support/ServletUriComponentsBuilder;
      41: invokespecial #14                 // Method "<init>":(Lorg/springframework/web/util/UriComponentsBuilder;)V
      44: aload_3
      45: iconst_1
      46: invokevirtual #15                 // Method slash:(Lorg/springframework/web/util/UriComponents;Z)Lorg/springframework/hateoas/LinkBuilder;
      49: checkcast     #12                 // class org/springframework/hateoas/jaxrs/JaxRsLinkBuilder
      52: areturn

  protected org.springframework.hateoas.jaxrs.JaxRsLinkBuilder getThis();
    Code:
       0: aload_0
       1: areturn

  protected org.springframework.hateoas.jaxrs.JaxRsLinkBuilder createNewInstance(org.springframework.web.util.UriComponentsBuilder);
    Code:
       0: new           #12                 // class org/springframework/hateoas/jaxrs/JaxRsLinkBuilder
       3: dup
       4: aload_1
       5: invokespecial #14                 // Method "<init>":(Lorg/springframework/web/util/UriComponentsBuilder;)V
       8: areturn

  protected org.springframework.hateoas.LinkBuilder createNewInstance(org.springframework.web.util.UriComponentsBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method createNewInstance:(Lorg/springframework/web/util/UriComponentsBuilder;)Lorg/springframework/hateoas/jaxrs/JaxRsLinkBuilder;
       5: areturn

  protected org.springframework.hateoas.LinkBuilder getThis();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getThis:()Lorg/springframework/hateoas/jaxrs/JaxRsLinkBuilder;
       4: areturn

  static {};
    Code:
       0: new           #19                 // class org/springframework/hateoas/core/AnnotationMappingDiscoverer
       3: dup
       4: ldc           #20                 // class javax/ws/rs/Path
       6: invokespecial #21                 // Method org/springframework/hateoas/core/AnnotationMappingDiscoverer."<init>":(Ljava/lang/Class;)V
       9: putstatic     #7                  // Field DISCOVERER:Lorg/springframework/hateoas/core/MappingDiscoverer;
      12: new           #22                 // class org/springframework/hateoas/jaxrs/JaxRsLinkBuilder$CustomUriTemplateHandler
      15: dup
      16: invokespecial #23                 // Method org/springframework/hateoas/jaxrs/JaxRsLinkBuilder$CustomUriTemplateHandler."<init>":()V
      19: putstatic     #10                 // Field HANDLER:Lorg/springframework/hateoas/jaxrs/JaxRsLinkBuilder$CustomUriTemplateHandler;
      22: return
}
