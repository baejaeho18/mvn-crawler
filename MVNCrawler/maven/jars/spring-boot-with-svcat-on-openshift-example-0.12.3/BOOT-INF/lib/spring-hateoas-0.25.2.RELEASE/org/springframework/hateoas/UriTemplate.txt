Compiled from "UriTemplate.java"
public class org.springframework.hateoas.UriTemplate implements java.lang.Iterable<org.springframework.hateoas.TemplateVariable>, java.io.Serializable {
  private static final java.util.regex.Pattern VARIABLE_REGEX;

  private static final long serialVersionUID;

  private final org.springframework.hateoas.TemplateVariables variables;

  private java.lang.String baseUri;

  public org.springframework.hateoas.UriTemplate(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Template must not be null or empty!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      10: getstatic     #4                  // Field VARIABLE_REGEX:Ljava/util/regex/Pattern;
      13: aload_1
      14: invokevirtual #5                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      17: astore_2
      18: aload_1
      19: invokevirtual #6                  // Method java/lang/String.length:()I
      22: istore_3
      23: new           #7                  // class java/util/ArrayList
      26: dup
      27: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      30: astore        4
      32: aload_2
      33: invokevirtual #9                  // Method java/util/regex/Matcher.find:()Z
      36: ifeq          143
      39: aload_2
      40: iconst_0
      41: invokevirtual #10                 // Method java/util/regex/Matcher.start:(I)I
      44: istore        5
      46: aload_2
      47: iconst_1
      48: invokevirtual #11                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      51: invokestatic  #12                 // Method org/springframework/hateoas/TemplateVariable$VariableType.from:(Ljava/lang/String;)Lorg/springframework/hateoas/TemplateVariable$VariableType;
      54: astore        6
      56: aload_2
      57: iconst_2
      58: invokevirtual #11                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      61: ldc           #13                 // String ,
      63: invokevirtual #14                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      66: astore        7
      68: aload         7
      70: astore        8
      72: aload         8
      74: arraylength
      75: istore        9
      77: iconst_0
      78: istore        10
      80: iload         10
      82: iload         9
      84: if_icmpge     140
      87: aload         8
      89: iload         10
      91: aaload
      92: astore        11
      94: new           #15                 // class org/springframework/hateoas/TemplateVariable
      97: dup
      98: aload         11
     100: aload         6
     102: invokespecial #16                 // Method org/springframework/hateoas/TemplateVariable."<init>":(Ljava/lang/String;Lorg/springframework/hateoas/TemplateVariable$VariableType;)V
     105: astore        12
     107: aload         12
     109: invokevirtual #17                 // Method org/springframework/hateoas/TemplateVariable.isRequired:()Z
     112: ifne          124
     115: iload         5
     117: iload_3
     118: if_icmpge     124
     121: iload         5
     123: istore_3
     124: aload         4
     126: aload         12
     128: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     133: pop
     134: iinc          10, 1
     137: goto          80
     140: goto          32
     143: aload_0
     144: aload         4
     146: invokeinterface #19,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     151: ifeq          160
     154: getstatic     #20                 // Field org/springframework/hateoas/TemplateVariables.NONE:Lorg/springframework/hateoas/TemplateVariables;
     157: goto          169
     160: new           #21                 // class org/springframework/hateoas/TemplateVariables
     163: dup
     164: aload         4
     166: invokespecial #22                 // Method org/springframework/hateoas/TemplateVariables."<init>":(Ljava/util/List;)V
     169: putfield      #23                 // Field variables:Lorg/springframework/hateoas/TemplateVariables;
     172: aload_0
     173: aload_1
     174: iconst_0
     175: iload_3
     176: invokevirtual #24                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     179: putfield      #25                 // Field baseUri:Ljava/lang/String;
     182: return

  public org.springframework.hateoas.UriTemplate(java.lang.String, org.springframework.hateoas.TemplateVariables);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #26                 // String Base URI must not be null or empty!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #25                 // Field baseUri:Ljava/lang/String;
      15: aload_0
      16: aload_2
      17: ifnonnull     26
      20: getstatic     #20                 // Field org/springframework/hateoas/TemplateVariables.NONE:Lorg/springframework/hateoas/TemplateVariables;
      23: goto          27
      26: aload_2
      27: putfield      #23                 // Field variables:Lorg/springframework/hateoas/TemplateVariables;
      30: return

  public org.springframework.hateoas.UriTemplate with(org.springframework.hateoas.TemplateVariables);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aload_0
       5: areturn
       6: aload_0
       7: getfield      #25                 // Field baseUri:Ljava/lang/String;
      10: invokestatic  #27                 // Method org/springframework/web/util/UriComponentsBuilder.fromUriString:(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      13: invokevirtual #28                 // Method org/springframework/web/util/UriComponentsBuilder.build:()Lorg/springframework/web/util/UriComponents;
      16: astore_2
      17: new           #7                  // class java/util/ArrayList
      20: dup
      21: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      24: astore_3
      25: aload_1
      26: invokevirtual #29                 // Method org/springframework/hateoas/TemplateVariables.iterator:()Ljava/util/Iterator;
      29: astore        4
      31: aload         4
      33: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          122
      41: aload         4
      43: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #15                 // class org/springframework/hateoas/TemplateVariable
      51: astore        5
      53: aload         5
      55: invokevirtual #32                 // Method org/springframework/hateoas/TemplateVariable.isRequestParameterVariable:()Z
      58: istore        6
      60: aload_2
      61: invokevirtual #33                 // Method org/springframework/web/util/UriComponents.getQueryParams:()Lorg/springframework/util/MultiValueMap;
      64: aload         5
      66: invokevirtual #34                 // Method org/springframework/hateoas/TemplateVariable.getName:()Ljava/lang/String;
      69: invokeinterface #35,  2           // InterfaceMethod org/springframework/util/MultiValueMap.containsKey:(Ljava/lang/Object;)Z
      74: istore        7
      76: iload         6
      78: ifeq          89
      81: iload         7
      83: ifeq          89
      86: goto          31
      89: aload         5
      91: invokevirtual #36                 // Method org/springframework/hateoas/TemplateVariable.isFragment:()Z
      94: ifeq          110
      97: aload_2
      98: invokevirtual #37                 // Method org/springframework/web/util/UriComponents.getFragment:()Ljava/lang/String;
     101: invokestatic  #38                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
     104: ifeq          110
     107: goto          31
     110: aload_3
     111: aload         5
     113: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     118: pop
     119: goto          31
     122: new           #39                 // class org/springframework/hateoas/UriTemplate
     125: dup
     126: aload_0
     127: getfield      #25                 // Field baseUri:Ljava/lang/String;
     130: aload_0
     131: getfield      #23                 // Field variables:Lorg/springframework/hateoas/TemplateVariables;
     134: aload_3
     135: invokevirtual #40                 // Method org/springframework/hateoas/TemplateVariables.concat:(Ljava/util/Collection;)Lorg/springframework/hateoas/TemplateVariables;
     138: invokespecial #41                 // Method "<init>":(Ljava/lang/String;Lorg/springframework/hateoas/TemplateVariables;)V
     141: areturn

  public org.springframework.hateoas.UriTemplate with(java.lang.String, org.springframework.hateoas.TemplateVariable$VariableType);
    Code:
       0: aload_0
       1: new           #21                 // class org/springframework/hateoas/TemplateVariables
       4: dup
       5: iconst_1
       6: anewarray     #15                 // class org/springframework/hateoas/TemplateVariable
       9: dup
      10: iconst_0
      11: new           #15                 // class org/springframework/hateoas/TemplateVariable
      14: dup
      15: aload_1
      16: aload_2
      17: invokespecial #16                 // Method org/springframework/hateoas/TemplateVariable."<init>":(Ljava/lang/String;Lorg/springframework/hateoas/TemplateVariable$VariableType;)V
      20: aastore
      21: invokespecial #42                 // Method org/springframework/hateoas/TemplateVariables."<init>":([Lorg/springframework/hateoas/TemplateVariable;)V
      24: invokevirtual #43                 // Method with:(Lorg/springframework/hateoas/TemplateVariables;)Lorg/springframework/hateoas/UriTemplate;
      27: areturn

  public static boolean isTemplate(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #38                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: getstatic     #4                  // Field VARIABLE_REGEX:Ljava/util/regex/Pattern;
      12: aload_0
      13: invokevirtual #5                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      16: invokevirtual #9                  // Method java/util/regex/Matcher.find:()Z
      19: ireturn

  public java.util.List<org.springframework.hateoas.TemplateVariable> getVariables();
    Code:
       0: aload_0
       1: getfield      #23                 // Field variables:Lorg/springframework/hateoas/TemplateVariables;
       4: invokevirtual #44                 // Method org/springframework/hateoas/TemplateVariables.asList:()Ljava/util/List;
       7: areturn

  public java.util.List<java.lang.String> getVariableNames();
    Code:
       0: new           #7                  // class java/util/ArrayList
       3: dup
       4: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #23                 // Field variables:Lorg/springframework/hateoas/TemplateVariables;
      12: invokevirtual #29                 // Method org/springframework/hateoas/TemplateVariables.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          49
      25: aload_2
      26: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #15                 // class org/springframework/hateoas/TemplateVariable
      34: astore_3
      35: aload_1
      36: aload_3
      37: invokevirtual #34                 // Method org/springframework/hateoas/TemplateVariable.getName:()Ljava/lang/String;
      40: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: goto          16
      49: aload_1
      50: areturn

  public java.net.URI expand(java.lang.Object...);
    Code:
       0: getstatic     #20                 // Field org/springframework/hateoas/TemplateVariables.NONE:Lorg/springframework/hateoas/TemplateVariables;
       3: aload_0
       4: getfield      #23                 // Field variables:Lorg/springframework/hateoas/TemplateVariables;
       7: invokevirtual #45                 // Method org/springframework/hateoas/TemplateVariables.equals:(Ljava/lang/Object;)Z
      10: ifeq          21
      13: aload_0
      14: getfield      #25                 // Field baseUri:Ljava/lang/String;
      17: invokestatic  #46                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      20: areturn
      21: new           #47                 // class org/springframework/web/util/UriTemplate
      24: dup
      25: aload_0
      26: getfield      #25                 // Field baseUri:Ljava/lang/String;
      29: invokespecial #48                 // Method org/springframework/web/util/UriTemplate."<init>":(Ljava/lang/String;)V
      32: astore_2
      33: aload_2
      34: aload_1
      35: invokevirtual #49                 // Method org/springframework/web/util/UriTemplate.expand:([Ljava/lang/Object;)Ljava/net/URI;
      38: invokestatic  #50                 // Method org/springframework/web/util/UriComponentsBuilder.fromUri:(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
      41: astore_3
      42: aload_1
      43: invokestatic  #51                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      46: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore        4
      53: aload_0
      54: invokespecial #53                 // Method getOptionalVariables:()Lorg/springframework/hateoas/TemplateVariables;
      57: invokevirtual #29                 // Method org/springframework/hateoas/TemplateVariables.iterator:()Ljava/util/Iterator;
      60: astore        5
      62: aload         5
      64: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      69: ifeq          118
      72: aload         5
      74: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      79: checkcast     #15                 // class org/springframework/hateoas/TemplateVariable
      82: astore        6
      84: aload         4
      86: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      91: ifeq          104
      94: aload         4
      96: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     101: goto          105
     104: aconst_null
     105: astore        7
     107: aload_3
     108: aload         6
     110: aload         7
     112: invokestatic  #54                 // Method appendToBuilder:(Lorg/springframework/web/util/UriComponentsBuilder;Lorg/springframework/hateoas/TemplateVariable;Ljava/lang/Object;)V
     115: goto          62
     118: aload_3
     119: invokevirtual #28                 // Method org/springframework/web/util/UriComponentsBuilder.build:()Lorg/springframework/web/util/UriComponents;
     122: invokevirtual #55                 // Method org/springframework/web/util/UriComponents.toUri:()Ljava/net/URI;
     125: areturn

  public java.net.URI expand(java.util.Map<java.lang.String, ? extends java.lang.Object>);
    Code:
       0: getstatic     #20                 // Field org/springframework/hateoas/TemplateVariables.NONE:Lorg/springframework/hateoas/TemplateVariables;
       3: aload_0
       4: getfield      #23                 // Field variables:Lorg/springframework/hateoas/TemplateVariables;
       7: invokevirtual #45                 // Method org/springframework/hateoas/TemplateVariables.equals:(Ljava/lang/Object;)Z
      10: ifeq          21
      13: aload_0
      14: getfield      #25                 // Field baseUri:Ljava/lang/String;
      17: invokestatic  #46                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      20: areturn
      21: aload_1
      22: ldc           #56                 // String Parameters must not be null!
      24: invokestatic  #57                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      27: new           #47                 // class org/springframework/web/util/UriTemplate
      30: dup
      31: aload_0
      32: getfield      #25                 // Field baseUri:Ljava/lang/String;
      35: invokespecial #48                 // Method org/springframework/web/util/UriTemplate."<init>":(Ljava/lang/String;)V
      38: astore_2
      39: aload_2
      40: aload_1
      41: invokevirtual #58                 // Method org/springframework/web/util/UriTemplate.expand:(Ljava/util/Map;)Ljava/net/URI;
      44: invokestatic  #50                 // Method org/springframework/web/util/UriComponentsBuilder.fromUri:(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
      47: astore_3
      48: aload_0
      49: invokespecial #53                 // Method getOptionalVariables:()Lorg/springframework/hateoas/TemplateVariables;
      52: invokevirtual #29                 // Method org/springframework/hateoas/TemplateVariables.iterator:()Ljava/util/Iterator;
      55: astore        4
      57: aload         4
      59: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          99
      67: aload         4
      69: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      74: checkcast     #15                 // class org/springframework/hateoas/TemplateVariable
      77: astore        5
      79: aload_3
      80: aload         5
      82: aload_1
      83: aload         5
      85: invokevirtual #34                 // Method org/springframework/hateoas/TemplateVariable.getName:()Ljava/lang/String;
      88: invokeinterface #59,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      93: invokestatic  #54                 // Method appendToBuilder:(Lorg/springframework/web/util/UriComponentsBuilder;Lorg/springframework/hateoas/TemplateVariable;Ljava/lang/Object;)V
      96: goto          57
      99: aload_3
     100: invokevirtual #28                 // Method org/springframework/web/util/UriComponentsBuilder.build:()Lorg/springframework/web/util/UriComponents;
     103: invokevirtual #55                 // Method org/springframework/web/util/UriComponents.toUri:()Ljava/net/URI;
     106: areturn

  public java.util.Iterator<org.springframework.hateoas.TemplateVariable> iterator();
    Code:
       0: aload_0
       1: getfield      #23                 // Field variables:Lorg/springframework/hateoas/TemplateVariables;
       4: invokevirtual #29                 // Method org/springframework/hateoas/TemplateVariables.iterator:()Ljava/util/Iterator;
       7: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #25                 // Field baseUri:Ljava/lang/String;
       4: invokestatic  #27                 // Method org/springframework/web/util/UriComponentsBuilder.fromUriString:(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
       7: invokevirtual #28                 // Method org/springframework/web/util/UriComponentsBuilder.build:()Lorg/springframework/web/util/UriComponents;
      10: astore_1
      11: aload_1
      12: invokevirtual #33                 // Method org/springframework/web/util/UriComponents.getQueryParams:()Lorg/springframework/util/MultiValueMap;
      15: invokeinterface #60,  1           // InterfaceMethod org/springframework/util/MultiValueMap.isEmpty:()Z
      20: ifne          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: istore_2
      29: new           #61                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
      36: aload_0
      37: getfield      #25                 // Field baseUri:Ljava/lang/String;
      40: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: invokespecial #53                 // Method getOptionalVariables:()Lorg/springframework/hateoas/TemplateVariables;
      47: iload_2
      48: invokevirtual #64                 // Method org/springframework/hateoas/TemplateVariables.toString:(Z)Ljava/lang/String;
      51: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: areturn

  private org.springframework.hateoas.TemplateVariables getOptionalVariables();
    Code:
       0: new           #7                  // class java/util/ArrayList
       3: dup
       4: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #66                 // Method iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          50
      22: aload_2
      23: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #15                 // class org/springframework/hateoas/TemplateVariable
      31: astore_3
      32: aload_3
      33: invokevirtual #17                 // Method org/springframework/hateoas/TemplateVariable.isRequired:()Z
      36: ifne          47
      39: aload_1
      40: aload_3
      41: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      46: pop
      47: goto          13
      50: new           #21                 // class org/springframework/hateoas/TemplateVariables
      53: dup
      54: aload_1
      55: invokespecial #22                 // Method org/springframework/hateoas/TemplateVariables."<init>":(Ljava/util/List;)V
      58: areturn

  private static void appendToBuilder(org.springframework.web.util.UriComponentsBuilder, org.springframework.hateoas.TemplateVariable, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     36
       4: aload_1
       5: invokevirtual #17                 // Method org/springframework/hateoas/TemplateVariable.isRequired:()Z
       8: ifeq          35
      11: new           #67                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #68                 // String Template variable %s is required but no value was given!
      17: iconst_1
      18: anewarray     #69                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: invokevirtual #34                 // Method org/springframework/hateoas/TemplateVariable.getName:()Ljava/lang/String;
      27: aastore
      28: invokestatic  #70                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      31: invokespecial #71                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: return
      36: getstatic     #72                 // Field org/springframework/hateoas/UriTemplate$1.$SwitchMap$org$springframework$hateoas$TemplateVariable$VariableType:[I
      39: aload_1
      40: invokevirtual #73                 // Method org/springframework/hateoas/TemplateVariable.getType:()Lorg/springframework/hateoas/TemplateVariable$VariableType;
      43: invokevirtual #74                 // Method org/springframework/hateoas/TemplateVariable$VariableType.ordinal:()I
      46: iaload
      47: tableswitch   { // 1 to 5
                     1: 80
                     2: 80
                     3: 100
                     4: 100
                     5: 119
               default: 128
          }
      80: aload_0
      81: aload_1
      82: invokevirtual #34                 // Method org/springframework/hateoas/TemplateVariable.getName:()Ljava/lang/String;
      85: iconst_1
      86: anewarray     #69                 // class java/lang/Object
      89: dup
      90: iconst_0
      91: aload_2
      92: aastore
      93: invokevirtual #75                 // Method org/springframework/web/util/UriComponentsBuilder.queryParam:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
      96: pop
      97: goto          128
     100: aload_0
     101: iconst_1
     102: anewarray     #76                 // class java/lang/String
     105: dup
     106: iconst_0
     107: aload_2
     108: invokevirtual #77                 // Method java/lang/Object.toString:()Ljava/lang/String;
     111: aastore
     112: invokevirtual #78                 // Method org/springframework/web/util/UriComponentsBuilder.pathSegment:([Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
     115: pop
     116: goto          128
     119: aload_0
     120: aload_2
     121: invokevirtual #77                 // Method java/lang/Object.toString:()Ljava/lang/String;
     124: invokevirtual #79                 // Method org/springframework/web/util/UriComponentsBuilder.fragment:(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
     127: pop
     128: return

  static {};
    Code:
       0: ldc           #80                 // String \\{([\\?\\&#/]?)([\\w\\,]+)\\}
       2: invokestatic  #81                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #4                  // Field VARIABLE_REGEX:Ljava/util/regex/Pattern;
       8: return
}
