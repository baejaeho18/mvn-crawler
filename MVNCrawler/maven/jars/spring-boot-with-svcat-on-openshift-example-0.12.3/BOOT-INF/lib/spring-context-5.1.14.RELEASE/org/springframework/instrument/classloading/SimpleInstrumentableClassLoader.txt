Compiled from "SimpleInstrumentableClassLoader.java"
public class org.springframework.instrument.classloading.SimpleInstrumentableClassLoader extends org.springframework.core.OverridingClassLoader {
  private final org.springframework.instrument.classloading.WeavingTransformer weavingTransformer;

  public org.springframework.instrument.classloading.SimpleInstrumentableClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/core/OverridingClassLoader."<init>":(Ljava/lang/ClassLoader;)V
       5: aload_0
       6: new           #2                  // class org/springframework/instrument/classloading/WeavingTransformer
       9: dup
      10: aload_1
      11: invokespecial #3                  // Method org/springframework/instrument/classloading/WeavingTransformer."<init>":(Ljava/lang/ClassLoader;)V
      14: putfield      #4                  // Field weavingTransformer:Lorg/springframework/instrument/classloading/WeavingTransformer;
      17: return

  public void addTransformer(java.lang.instrument.ClassFileTransformer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field weavingTransformer:Lorg/springframework/instrument/classloading/WeavingTransformer;
       4: aload_1
       5: invokevirtual #5                  // Method org/springframework/instrument/classloading/WeavingTransformer.addTransformer:(Ljava/lang/instrument/ClassFileTransformer;)V
       8: return

  protected byte[] transformIfNecessary(java.lang.String, byte[]);
    Code:
       0: aload_0
       1: getfield      #4                  // Field weavingTransformer:Lorg/springframework/instrument/classloading/WeavingTransformer;
       4: aload_1
       5: aload_2
       6: invokevirtual #6                  // Method org/springframework/instrument/classloading/WeavingTransformer.transformIfNecessary:(Ljava/lang/String;[B)[B
       9: areturn

  static {};
    Code:
       0: invokestatic  #7                  // Method java/lang/ClassLoader.registerAsParallelCapable:()Z
       3: pop
       4: return
}
