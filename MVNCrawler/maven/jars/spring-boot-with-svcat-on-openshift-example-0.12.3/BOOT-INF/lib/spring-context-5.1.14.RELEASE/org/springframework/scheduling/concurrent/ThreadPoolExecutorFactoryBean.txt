Compiled from "ThreadPoolExecutorFactoryBean.java"
public class org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean extends org.springframework.scheduling.concurrent.ExecutorConfigurationSupport implements org.springframework.beans.factory.FactoryBean<java.util.concurrent.ExecutorService>, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean {
  private int corePoolSize;

  private int maxPoolSize;

  private int keepAliveSeconds;

  private boolean allowCoreThreadTimeOut;

  private int queueCapacity;

  private boolean exposeUnconfigurableExecutor;

  private java.util.concurrent.ExecutorService exposedExecutor;

  public org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/scheduling/concurrent/ExecutorConfigurationSupport."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field corePoolSize:I
       9: aload_0
      10: ldc           #4                  // int 2147483647
      12: putfield      #5                  // Field maxPoolSize:I
      15: aload_0
      16: bipush        60
      18: putfield      #6                  // Field keepAliveSeconds:I
      21: aload_0
      22: iconst_0
      23: putfield      #7                  // Field allowCoreThreadTimeOut:Z
      26: aload_0
      27: ldc           #4                  // int 2147483647
      29: putfield      #8                  // Field queueCapacity:I
      32: aload_0
      33: iconst_0
      34: putfield      #9                  // Field exposeUnconfigurableExecutor:Z
      37: return

  public void setCorePoolSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field corePoolSize:I
       5: return

  public void setMaxPoolSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field maxPoolSize:I
       5: return

  public void setKeepAliveSeconds(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field keepAliveSeconds:I
       5: return

  public void setAllowCoreThreadTimeOut(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field allowCoreThreadTimeOut:Z
       5: return

  public void setQueueCapacity(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field queueCapacity:I
       5: return

  public void setExposeUnconfigurableExecutor(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field exposeUnconfigurableExecutor:Z
       5: return

  protected java.util.concurrent.ExecutorService initializeExecutor(java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field queueCapacity:I
       5: invokevirtual #10                 // Method createQueue:(I)Ljava/util/concurrent/BlockingQueue;
       8: astore_3
       9: aload_0
      10: aload_0
      11: getfield      #2                  // Field corePoolSize:I
      14: aload_0
      15: getfield      #5                  // Field maxPoolSize:I
      18: aload_0
      19: getfield      #6                  // Field keepAliveSeconds:I
      22: aload_3
      23: aload_1
      24: aload_2
      25: invokevirtual #11                 // Method createExecutor:(IIILjava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)Ljava/util/concurrent/ThreadPoolExecutor;
      28: astore        4
      30: aload_0
      31: getfield      #7                  // Field allowCoreThreadTimeOut:Z
      34: ifeq          43
      37: aload         4
      39: iconst_1
      40: invokevirtual #12                 // Method java/util/concurrent/ThreadPoolExecutor.allowCoreThreadTimeOut:(Z)V
      43: aload_0
      44: aload_0
      45: getfield      #9                  // Field exposeUnconfigurableExecutor:Z
      48: ifeq          59
      51: aload         4
      53: invokestatic  #13                 // Method java/util/concurrent/Executors.unconfigurableExecutorService:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/ExecutorService;
      56: goto          61
      59: aload         4
      61: putfield      #14                 // Field exposedExecutor:Ljava/util/concurrent/ExecutorService;
      64: aload         4
      66: areturn

  protected java.util.concurrent.ThreadPoolExecutor createExecutor(int, int, int, java.util.concurrent.BlockingQueue<java.lang.Runnable>, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler);
    Code:
       0: new           #15                 // class java/util/concurrent/ThreadPoolExecutor
       3: dup
       4: iload_1
       5: iload_2
       6: iload_3
       7: i2l
       8: getstatic     #16                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      11: aload         4
      13: aload         5
      15: aload         6
      17: invokespecial #17                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
      20: areturn

  protected java.util.concurrent.BlockingQueue<java.lang.Runnable> createQueue(int);
    Code:
       0: iload_1
       1: ifle          13
       4: new           #18                 // class java/util/concurrent/LinkedBlockingQueue
       7: dup
       8: iload_1
       9: invokespecial #19                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
      12: areturn
      13: new           #20                 // class java/util/concurrent/SynchronousQueue
      16: dup
      17: invokespecial #21                 // Method java/util/concurrent/SynchronousQueue."<init>":()V
      20: areturn

  public java.util.concurrent.ExecutorService getObject();
    Code:
       0: aload_0
       1: getfield      #14                 // Field exposedExecutor:Ljava/util/concurrent/ExecutorService;
       4: areturn

  public java.lang.Class<? extends java.util.concurrent.ExecutorService> getObjectType();
    Code:
       0: aload_0
       1: getfield      #14                 // Field exposedExecutor:Ljava/util/concurrent/ExecutorService;
       4: ifnull        17
       7: aload_0
       8: getfield      #14                 // Field exposedExecutor:Ljava/util/concurrent/ExecutorService;
      11: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: goto          19
      17: ldc           #23                 // class java/util/concurrent/ExecutorService
      19: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getObject:()Ljava/util/concurrent/ExecutorService;
       4: areturn
}
