Compiled from "AsyncAnnotationBeanPostProcessor.java"
public class org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor extends org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor {
  public static final java.lang.String DEFAULT_TASK_EXECUTOR_BEAN_NAME;

  protected final org.apache.commons.logging.Log logger;

  private java.util.function.Supplier<java.util.concurrent.Executor> executor;

  private java.util.function.Supplier<org.springframework.aop.interceptor.AsyncUncaughtExceptionHandler> exceptionHandler;

  private java.lang.Class<? extends java.lang.annotation.Annotation> asyncAnnotationType;

  public org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/aop/framework/autoproxy/AbstractBeanFactoryAwareAdvisingPostProcessor."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #4                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: iconst_1
      17: invokevirtual #6                  // Method setBeforeExistingAdvisors:(Z)V
      20: return

  public void configure(java.util.function.Supplier<java.util.concurrent.Executor>, java.util.function.Supplier<org.springframework.aop.interceptor.AsyncUncaughtExceptionHandler>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field executor:Ljava/util/function/Supplier;
       5: aload_0
       6: aload_2
       7: putfield      #8                  // Field exceptionHandler:Ljava/util/function/Supplier;
      10: return

  public void setExecutor(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #9                  // Method org/springframework/util/function/SingletonSupplier.of:(Ljava/lang/Object;)Lorg/springframework/util/function/SingletonSupplier;
       5: putfield      #7                  // Field executor:Ljava/util/function/Supplier;
       8: return

  public void setExceptionHandler(org.springframework.aop.interceptor.AsyncUncaughtExceptionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #9                  // Method org/springframework/util/function/SingletonSupplier.of:(Ljava/lang/Object;)Lorg/springframework/util/function/SingletonSupplier;
       5: putfield      #8                  // Field exceptionHandler:Ljava/util/function/Supplier;
       8: return

  public void setAsyncAnnotationType(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_1
       1: ldc           #10                 // String \'asyncAnnotationType\' must not be null
       3: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #12                 // Field asyncAnnotationType:Ljava/lang/Class;
      11: return

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method org/springframework/aop/framework/autoproxy/AbstractBeanFactoryAwareAdvisingPostProcessor.setBeanFactory:(Lorg/springframework/beans/factory/BeanFactory;)V
       5: new           #14                 // class org/springframework/scheduling/annotation/AsyncAnnotationAdvisor
       8: dup
       9: aload_0
      10: getfield      #7                  // Field executor:Ljava/util/function/Supplier;
      13: aload_0
      14: getfield      #8                  // Field exceptionHandler:Ljava/util/function/Supplier;
      17: invokespecial #15                 // Method org/springframework/scheduling/annotation/AsyncAnnotationAdvisor."<init>":(Ljava/util/function/Supplier;Ljava/util/function/Supplier;)V
      20: astore_2
      21: aload_0
      22: getfield      #12                 // Field asyncAnnotationType:Ljava/lang/Class;
      25: ifnull        36
      28: aload_2
      29: aload_0
      30: getfield      #12                 // Field asyncAnnotationType:Ljava/lang/Class;
      33: invokevirtual #16                 // Method org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.setAsyncAnnotationType:(Ljava/lang/Class;)V
      36: aload_2
      37: aload_1
      38: invokevirtual #17                 // Method org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.setBeanFactory:(Lorg/springframework/beans/factory/BeanFactory;)V
      41: aload_0
      42: aload_2
      43: putfield      #18                 // Field advisor:Lorg/springframework/aop/Advisor;
      46: return
}
