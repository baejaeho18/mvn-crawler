Compiled from "RemoteExporter.java"
public abstract class org.springframework.remoting.support.RemoteExporter extends org.springframework.remoting.support.RemotingSupport {
  private java.lang.Object service;

  private java.lang.Class<?> serviceInterface;

  private java.lang.Boolean registerTraceInterceptor;

  private java.lang.Object[] interceptors;

  public org.springframework.remoting.support.RemoteExporter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/remoting/support/RemotingSupport."<init>":()V
       4: return

  public void setService(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field service:Ljava/lang/Object;
       5: return

  public java.lang.Object getService();
    Code:
       0: aload_0
       1: getfield      #2                  // Field service:Ljava/lang/Object;
       4: areturn

  public void setServiceInterface(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #3                  // String \'serviceInterface\' must not be null
       3: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #5                  // Method java/lang/Class.isInterface:()Z
      10: ldc           #6                  // String \'serviceInterface\' must be an interface
      12: invokestatic  #7                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      15: aload_0
      16: aload_1
      17: putfield      #8                  // Field serviceInterface:Ljava/lang/Class;
      20: return

  public java.lang.Class<?> getServiceInterface();
    Code:
       0: aload_0
       1: getfield      #8                  // Field serviceInterface:Ljava/lang/Class;
       4: areturn

  public void setRegisterTraceInterceptor(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #9                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #10                 // Field registerTraceInterceptor:Ljava/lang/Boolean;
       8: return

  public void setInterceptors(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field interceptors:[Ljava/lang/Object;
       5: return

  protected void checkService() throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getService:()Ljava/lang/Object;
       4: ldc           #13                 // String Property \'service\' is required
       6: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       9: return

  protected void checkServiceInterface() throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getServiceInterface:()Ljava/lang/Class;
       4: astore_1
       5: aload_1
       6: ldc           #15                 // String Property \'serviceInterface\' is required
       8: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      11: aload_0
      12: invokevirtual #12                 // Method getService:()Ljava/lang/Object;
      15: astore_2
      16: aload_2
      17: instanceof    #16                 // class java/lang/String
      20: ifeq          55
      23: new           #17                 // class java/lang/IllegalArgumentException
      26: dup
      27: new           #18                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #20                 // String Service [
      36: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_2
      40: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #23                 // String ] is a String rather than an actual service reference: Have you accidentally specified the service bean name as value instead of as reference?
      45: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_1
      56: aload_2
      57: invokevirtual #26                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      60: ifne          122
      63: new           #17                 // class java/lang/IllegalArgumentException
      66: dup
      67: new           #18                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #27                 // String Service interface [
      76: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_1
      80: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
      83: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: ldc           #29                 // String ] needs to be implemented by service [
      88: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_2
      92: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      95: ldc           #30                 // String ] of class [
      97: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: aload_2
     101: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     104: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
     107: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: ldc           #32                 // String ]
     112: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     121: athrow
     122: return

  protected java.lang.Object getProxyForService();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method checkService:()V
       4: aload_0
       5: invokevirtual #34                 // Method checkServiceInterface:()V
       8: new           #35                 // class org/springframework/aop/framework/ProxyFactory
      11: dup
      12: invokespecial #36                 // Method org/springframework/aop/framework/ProxyFactory."<init>":()V
      15: astore_1
      16: aload_1
      17: aload_0
      18: invokevirtual #14                 // Method getServiceInterface:()Ljava/lang/Class;
      21: invokevirtual #37                 // Method org/springframework/aop/framework/ProxyFactory.addInterface:(Ljava/lang/Class;)V
      24: aload_0
      25: getfield      #10                 // Field registerTraceInterceptor:Ljava/lang/Boolean;
      28: ifnull        44
      31: aload_0
      32: getfield      #10                 // Field registerTraceInterceptor:Ljava/lang/Boolean;
      35: invokevirtual #38                 // Method java/lang/Boolean.booleanValue:()Z
      38: ifeq          66
      41: goto          51
      44: aload_0
      45: getfield      #11                 // Field interceptors:[Ljava/lang/Object;
      48: ifnonnull     66
      51: aload_1
      52: new           #39                 // class org/springframework/remoting/support/RemoteInvocationTraceInterceptor
      55: dup
      56: aload_0
      57: invokevirtual #40                 // Method getExporterName:()Ljava/lang/String;
      60: invokespecial #41                 // Method org/springframework/remoting/support/RemoteInvocationTraceInterceptor."<init>":(Ljava/lang/String;)V
      63: invokevirtual #42                 // Method org/springframework/aop/framework/ProxyFactory.addAdvice:(Lorg/aopalliance/aop/Advice;)V
      66: aload_0
      67: getfield      #11                 // Field interceptors:[Ljava/lang/Object;
      70: ifnull        120
      73: invokestatic  #43                 // Method org/springframework/aop/framework/adapter/GlobalAdvisorAdapterRegistry.getInstance:()Lorg/springframework/aop/framework/adapter/AdvisorAdapterRegistry;
      76: astore_2
      77: aload_0
      78: getfield      #11                 // Field interceptors:[Ljava/lang/Object;
      81: astore_3
      82: aload_3
      83: arraylength
      84: istore        4
      86: iconst_0
      87: istore        5
      89: iload         5
      91: iload         4
      93: if_icmpge     120
      96: aload_3
      97: iload         5
      99: aaload
     100: astore        6
     102: aload_1
     103: aload_2
     104: aload         6
     106: invokeinterface #44,  2           // InterfaceMethod org/springframework/aop/framework/adapter/AdvisorAdapterRegistry.wrap:(Ljava/lang/Object;)Lorg/springframework/aop/Advisor;
     111: invokevirtual #45                 // Method org/springframework/aop/framework/ProxyFactory.addAdvisor:(Lorg/springframework/aop/Advisor;)V
     114: iinc          5, 1
     117: goto          89
     120: aload_1
     121: aload_0
     122: invokevirtual #12                 // Method getService:()Ljava/lang/Object;
     125: invokevirtual #46                 // Method org/springframework/aop/framework/ProxyFactory.setTarget:(Ljava/lang/Object;)V
     128: aload_1
     129: iconst_1
     130: invokevirtual #47                 // Method org/springframework/aop/framework/ProxyFactory.setOpaque:(Z)V
     133: aload_1
     134: aload_0
     135: invokevirtual #48                 // Method getBeanClassLoader:()Ljava/lang/ClassLoader;
     138: invokevirtual #49                 // Method org/springframework/aop/framework/ProxyFactory.getProxy:(Ljava/lang/ClassLoader;)Ljava/lang/Object;
     141: areturn

  protected java.lang.String getExporterName();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokestatic  #50                 // Method org/springframework/util/ClassUtils.getShortName:(Ljava/lang/Class;)Ljava/lang/String;
       7: areturn
}
