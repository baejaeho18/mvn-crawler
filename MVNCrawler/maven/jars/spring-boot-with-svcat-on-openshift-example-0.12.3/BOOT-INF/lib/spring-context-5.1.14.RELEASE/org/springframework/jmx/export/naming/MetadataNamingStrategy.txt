Compiled from "MetadataNamingStrategy.java"
public class org.springframework.jmx.export.naming.MetadataNamingStrategy implements org.springframework.jmx.export.naming.ObjectNamingStrategy,org.springframework.beans.factory.InitializingBean {
  private org.springframework.jmx.export.metadata.JmxAttributeSource attributeSource;

  private java.lang.String defaultDomain;

  public org.springframework.jmx.export.naming.MetadataNamingStrategy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.springframework.jmx.export.naming.MetadataNamingStrategy(org.springframework.jmx.export.metadata.JmxAttributeSource);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String JmxAttributeSource must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field attributeSource:Lorg/springframework/jmx/export/metadata/JmxAttributeSource;
      15: return

  public void setAttributeSource(org.springframework.jmx.export.metadata.JmxAttributeSource);
    Code:
       0: aload_1
       1: ldc           #2                  // String JmxAttributeSource must not be null
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #4                  // Field attributeSource:Lorg/springframework/jmx/export/metadata/JmxAttributeSource;
      11: return

  public void setDefaultDomain(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field defaultDomain:Ljava/lang/String;
       5: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: getfield      #4                  // Field attributeSource:Lorg/springframework/jmx/export/metadata/JmxAttributeSource;
       4: ifnonnull     17
       7: new           #6                  // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #7                  // String Property \'attributeSource\' is required
      13: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public javax.management.ObjectName getObjectName(java.lang.Object, java.lang.String) throws javax.management.MalformedObjectNameException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field attributeSource:Lorg/springframework/jmx/export/metadata/JmxAttributeSource;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #9                  // String No JmxAttributeSource set
      14: invokestatic  #10                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_1
      18: invokestatic  #11                 // Method org/springframework/aop/support/AopUtils.getTargetClass:(Ljava/lang/Object;)Ljava/lang/Class;
      21: astore_3
      22: aload_0
      23: getfield      #4                  // Field attributeSource:Lorg/springframework/jmx/export/metadata/JmxAttributeSource;
      26: aload_3
      27: invokeinterface #12,  2           // InterfaceMethod org/springframework/jmx/export/metadata/JmxAttributeSource.getManagedResource:(Ljava/lang/Class;)Lorg/springframework/jmx/export/metadata/ManagedResource;
      32: astore        4
      34: aload         4
      36: ifnull        59
      39: aload         4
      41: invokevirtual #13                 // Method org/springframework/jmx/export/metadata/ManagedResource.getObjectName:()Ljava/lang/String;
      44: invokestatic  #14                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      47: ifeq          59
      50: aload         4
      52: invokevirtual #13                 // Method org/springframework/jmx/export/metadata/ManagedResource.getObjectName:()Ljava/lang/String;
      55: invokestatic  #15                 // Method org/springframework/jmx/support/ObjectNameManager.getInstance:(Ljava/lang/String;)Ljavax/management/ObjectName;
      58: areturn
      59: aload_2
      60: ifnull        67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ldc           #16                 // String No ManagedResource attribute and no bean key specified
      70: invokestatic  #10                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      73: aload_2
      74: invokestatic  #15                 // Method org/springframework/jmx/support/ObjectNameManager.getInstance:(Ljava/lang/String;)Ljavax/management/ObjectName;
      77: areturn
      78: astore        5
      80: aload_0
      81: getfield      #5                  // Field defaultDomain:Ljava/lang/String;
      84: astore        6
      86: aload         6
      88: ifnonnull     97
      91: aload_3
      92: invokestatic  #18                 // Method org/springframework/util/ClassUtils.getPackageName:(Ljava/lang/Class;)Ljava/lang/String;
      95: astore        6
      97: new           #19                 // class java/util/Hashtable
     100: dup
     101: invokespecial #20                 // Method java/util/Hashtable."<init>":()V
     104: astore        7
     106: aload         7
     108: ldc           #21                 // String type
     110: aload_3
     111: invokestatic  #22                 // Method org/springframework/util/ClassUtils.getShortName:(Ljava/lang/Class;)Ljava/lang/String;
     114: invokevirtual #23                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     117: pop
     118: aload         7
     120: ldc           #24                 // String name
     122: aload_2
     123: invokevirtual #23                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     126: pop
     127: aload         6
     129: aload         7
     131: invokestatic  #25                 // Method org/springframework/jmx/support/ObjectNameManager.getInstance:(Ljava/lang/String;Ljava/util/Hashtable;)Ljavax/management/ObjectName;
     134: areturn
    Exception table:
       from    to  target type
          73    77    78   Class javax/management/MalformedObjectNameException
}
