Compiled from "JvmConfig.java"
public class io.dekorate.option.config.JvmConfig extends io.dekorate.kubernetes.config.Configuration {
  private int xms;

  private int xmx;

  private boolean server;

  private boolean useStringDeduplication;

  private boolean preferIPv4Stack;

  private boolean heapDumpOnOutOfMemoryError;

  private boolean useGCOverheadLimit;

  private io.dekorate.option.annotation.GarbageCollector gc;

  private io.dekorate.option.annotation.SecureRandomSource secureRandom;

  public io.dekorate.option.config.JvmConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/dekorate/kubernetes/config/Configuration."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field xms:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field xmx:I
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field server:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field useStringDeduplication:Z
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field preferIPv4Stack:Z
      29: aload_0
      30: iconst_0
      31: putfield      #7                  // Field heapDumpOnOutOfMemoryError:Z
      34: aload_0
      35: iconst_0
      36: putfield      #8                  // Field useGCOverheadLimit:Z
      39: aload_0
      40: getstatic     #9                  // Field io/dekorate/option/annotation/GarbageCollector.Undefined:Lio/dekorate/option/annotation/GarbageCollector;
      43: putfield      #10                 // Field gc:Lio/dekorate/option/annotation/GarbageCollector;
      46: aload_0
      47: getstatic     #11                 // Field io/dekorate/option/annotation/SecureRandomSource.Undefined:Lio/dekorate/option/annotation/SecureRandomSource;
      50: putfield      #12                 // Field secureRandom:Lio/dekorate/option/annotation/SecureRandomSource;
      53: return

  public io.dekorate.option.config.JvmConfig(io.dekorate.project.Project, java.util.Map<io.dekorate.kubernetes.config.ConfigKey, java.lang.Object>, int, int, boolean, boolean, boolean, boolean, boolean, io.dekorate.option.annotation.GarbageCollector, io.dekorate.option.annotation.SecureRandomSource);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #13                 // Method io/dekorate/kubernetes/config/Configuration."<init>":(Lio/dekorate/project/Project;Ljava/util/Map;)V
       6: aload_0
       7: iconst_0
       8: putfield      #2                  // Field xms:I
      11: aload_0
      12: iconst_0
      13: putfield      #3                  // Field xmx:I
      16: aload_0
      17: iconst_0
      18: putfield      #4                  // Field server:Z
      21: aload_0
      22: iconst_0
      23: putfield      #5                  // Field useStringDeduplication:Z
      26: aload_0
      27: iconst_0
      28: putfield      #6                  // Field preferIPv4Stack:Z
      31: aload_0
      32: iconst_0
      33: putfield      #7                  // Field heapDumpOnOutOfMemoryError:Z
      36: aload_0
      37: iconst_0
      38: putfield      #8                  // Field useGCOverheadLimit:Z
      41: aload_0
      42: getstatic     #9                  // Field io/dekorate/option/annotation/GarbageCollector.Undefined:Lio/dekorate/option/annotation/GarbageCollector;
      45: putfield      #10                 // Field gc:Lio/dekorate/option/annotation/GarbageCollector;
      48: aload_0
      49: getstatic     #11                 // Field io/dekorate/option/annotation/SecureRandomSource.Undefined:Lio/dekorate/option/annotation/SecureRandomSource;
      52: putfield      #12                 // Field secureRandom:Lio/dekorate/option/annotation/SecureRandomSource;
      55: aload_0
      56: iload_3
      57: putfield      #2                  // Field xms:I
      60: aload_0
      61: iload         4
      63: putfield      #3                  // Field xmx:I
      66: aload_0
      67: iload         5
      69: putfield      #4                  // Field server:Z
      72: aload_0
      73: iload         6
      75: putfield      #5                  // Field useStringDeduplication:Z
      78: aload_0
      79: iload         7
      81: putfield      #6                  // Field preferIPv4Stack:Z
      84: aload_0
      85: iload         8
      87: putfield      #7                  // Field heapDumpOnOutOfMemoryError:Z
      90: aload_0
      91: iload         9
      93: putfield      #8                  // Field useGCOverheadLimit:Z
      96: aload_0
      97: aload         10
      99: ifnull        107
     102: aload         10
     104: goto          110
     107: getstatic     #9                  // Field io/dekorate/option/annotation/GarbageCollector.Undefined:Lio/dekorate/option/annotation/GarbageCollector;
     110: putfield      #10                 // Field gc:Lio/dekorate/option/annotation/GarbageCollector;
     113: aload_0
     114: aload         11
     116: ifnull        124
     119: aload         11
     121: goto          127
     124: getstatic     #11                 // Field io/dekorate/option/annotation/SecureRandomSource.Undefined:Lio/dekorate/option/annotation/SecureRandomSource;
     127: putfield      #12                 // Field secureRandom:Lio/dekorate/option/annotation/SecureRandomSource;
     130: return

  public int getXms();
    Code:
       0: aload_0
       1: getfield      #2                  // Field xms:I
       4: ireturn

  public int getXmx();
    Code:
       0: aload_0
       1: getfield      #3                  // Field xmx:I
       4: ireturn

  public boolean isServer();
    Code:
       0: aload_0
       1: getfield      #4                  // Field server:Z
       4: ireturn

  public boolean isUseStringDeduplication();
    Code:
       0: aload_0
       1: getfield      #5                  // Field useStringDeduplication:Z
       4: ireturn

  public boolean isPreferIPv4Stack();
    Code:
       0: aload_0
       1: getfield      #6                  // Field preferIPv4Stack:Z
       4: ireturn

  public boolean isHeapDumpOnOutOfMemoryError();
    Code:
       0: aload_0
       1: getfield      #7                  // Field heapDumpOnOutOfMemoryError:Z
       4: ireturn

  public boolean isUseGCOverheadLimit();
    Code:
       0: aload_0
       1: getfield      #8                  // Field useGCOverheadLimit:Z
       4: ireturn

  public io.dekorate.option.annotation.GarbageCollector getGc();
    Code:
       0: aload_0
       1: getfield      #10                 // Field gc:Lio/dekorate/option/annotation/GarbageCollector;
       4: areturn

  public io.dekorate.option.annotation.SecureRandomSource getSecureRandom();
    Code:
       0: aload_0
       1: getfield      #12                 // Field secureRandom:Lio/dekorate/option/annotation/SecureRandomSource;
       4: areturn
}
