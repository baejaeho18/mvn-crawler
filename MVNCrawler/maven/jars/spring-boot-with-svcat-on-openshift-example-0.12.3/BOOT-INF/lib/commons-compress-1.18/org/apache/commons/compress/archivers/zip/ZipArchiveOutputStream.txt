Compiled from "ZipArchiveOutputStream.java"
public class org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream extends org.apache.commons.compress.archivers.ArchiveOutputStream {
  static final int BUFFER_SIZE;

  private static final int LFH_SIG_OFFSET;

  private static final int LFH_VERSION_NEEDED_OFFSET;

  private static final int LFH_GPB_OFFSET;

  private static final int LFH_METHOD_OFFSET;

  private static final int LFH_TIME_OFFSET;

  private static final int LFH_CRC_OFFSET;

  private static final int LFH_COMPRESSED_SIZE_OFFSET;

  private static final int LFH_ORIGINAL_SIZE_OFFSET;

  private static final int LFH_FILENAME_LENGTH_OFFSET;

  private static final int LFH_EXTRA_LENGTH_OFFSET;

  private static final int LFH_FILENAME_OFFSET;

  private static final int CFH_SIG_OFFSET;

  private static final int CFH_VERSION_MADE_BY_OFFSET;

  private static final int CFH_VERSION_NEEDED_OFFSET;

  private static final int CFH_GPB_OFFSET;

  private static final int CFH_METHOD_OFFSET;

  private static final int CFH_TIME_OFFSET;

  private static final int CFH_CRC_OFFSET;

  private static final int CFH_COMPRESSED_SIZE_OFFSET;

  private static final int CFH_ORIGINAL_SIZE_OFFSET;

  private static final int CFH_FILENAME_LENGTH_OFFSET;

  private static final int CFH_EXTRA_LENGTH_OFFSET;

  private static final int CFH_COMMENT_LENGTH_OFFSET;

  private static final int CFH_DISK_NUMBER_OFFSET;

  private static final int CFH_INTERNAL_ATTRIBUTES_OFFSET;

  private static final int CFH_EXTERNAL_ATTRIBUTES_OFFSET;

  private static final int CFH_LFH_OFFSET;

  private static final int CFH_FILENAME_OFFSET;

  protected boolean finished;

  public static final int DEFLATED;

  public static final int DEFAULT_COMPRESSION;

  public static final int STORED;

  static final java.lang.String DEFAULT_ENCODING;

  public static final int EFS_FLAG;

  private static final byte[] EMPTY;

  private org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry entry;

  private java.lang.String comment;

  private int level;

  private boolean hasCompressionLevelChanged;

  private int method;

  private final java.util.List<org.apache.commons.compress.archivers.zip.ZipArchiveEntry> entries;

  private final org.apache.commons.compress.archivers.zip.StreamCompressor streamCompressor;

  private long cdOffset;

  private long cdLength;

  private static final byte[] ZERO;

  private static final byte[] LZERO;

  private static final byte[] ONE;

  private final java.util.Map<org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$EntryMetaData> metaData;

  private java.lang.String encoding;

  private org.apache.commons.compress.archivers.zip.ZipEncoding zipEncoding;

  protected final java.util.zip.Deflater def;

  private final java.nio.channels.SeekableByteChannel channel;

  private final java.io.OutputStream out;

  private boolean useUTF8Flag;

  private boolean fallbackToUTF8;

  private org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$UnicodeExtraFieldPolicy createUnicodeExtraFields;

  private boolean hasUsedZip64;

  private org.apache.commons.compress.archivers.zip.Zip64Mode zip64Mode;

  private final byte[] copyBuffer;

  private final java.util.Calendar calendarInstance;

  static final byte[] LFH_SIG;

  static final byte[] DD_SIG;

  static final byte[] CFH_SIG;

  static final byte[] EOCD_SIG;

  static final byte[] ZIP64_EOCD_SIG;

  static final byte[] ZIP64_EOCD_LOC_SIG;

  public org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream(java.io.OutputStream);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/commons/compress/archivers/ArchiveOutputStream."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field finished:Z
       9: aload_0
      10: ldc           #8                  // String
      12: putfield      #9                  // Field comment:Ljava/lang/String;
      15: aload_0
      16: iconst_m1
      17: putfield      #11                 // Field level:I
      20: aload_0
      21: iconst_0
      22: putfield      #12                 // Field hasCompressionLevelChanged:Z
      25: aload_0
      26: bipush        8
      28: putfield      #13                 // Field method:I
      31: aload_0
      32: new           #14                 // class java/util/LinkedList
      35: dup
      36: invokespecial #15                 // Method java/util/LinkedList."<init>":()V
      39: putfield      #16                 // Field entries:Ljava/util/List;
      42: aload_0
      43: lconst_0
      44: putfield      #17                 // Field cdOffset:J
      47: aload_0
      48: lconst_0
      49: putfield      #18                 // Field cdLength:J
      52: aload_0
      53: new           #19                 // class java/util/HashMap
      56: dup
      57: invokespecial #20                 // Method java/util/HashMap."<init>":()V
      60: putfield      #21                 // Field metaData:Ljava/util/Map;
      63: aload_0
      64: ldc           #22                 // String UTF8
      66: putfield      #23                 // Field encoding:Ljava/lang/String;
      69: aload_0
      70: ldc           #22                 // String UTF8
      72: invokestatic  #24                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      75: putfield      #25                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      78: aload_0
      79: iconst_1
      80: putfield      #26                 // Field useUTF8Flag:Z
      83: aload_0
      84: iconst_0
      85: putfield      #27                 // Field fallbackToUTF8:Z
      88: aload_0
      89: getstatic     #28                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy.NEVER:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      92: putfield      #29                 // Field createUnicodeExtraFields:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      95: aload_0
      96: iconst_0
      97: putfield      #30                 // Field hasUsedZip64:Z
     100: aload_0
     101: getstatic     #31                 // Field org/apache/commons/compress/archivers/zip/Zip64Mode.AsNeeded:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     104: putfield      #32                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     107: aload_0
     108: ldc           #33                 // int 32768
     110: newarray       byte
     112: putfield      #34                 // Field copyBuffer:[B
     115: aload_0
     116: invokestatic  #35                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
     119: putfield      #36                 // Field calendarInstance:Ljava/util/Calendar;
     122: aload_0
     123: aload_1
     124: putfield      #37                 // Field out:Ljava/io/OutputStream;
     127: aload_0
     128: aconst_null
     129: putfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
     132: aload_0
     133: new           #2                  // class java/util/zip/Deflater
     136: dup
     137: aload_0
     138: getfield      #11                 // Field level:I
     141: iconst_1
     142: invokespecial #39                 // Method java/util/zip/Deflater."<init>":(IZ)V
     145: putfield      #40                 // Field def:Ljava/util/zip/Deflater;
     148: aload_0
     149: aload_1
     150: aload_0
     151: getfield      #40                 // Field def:Ljava/util/zip/Deflater;
     154: invokestatic  #41                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.create:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     157: putfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     160: return

  public org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/commons/compress/archivers/ArchiveOutputStream."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field finished:Z
       9: aload_0
      10: ldc           #8                  // String
      12: putfield      #9                  // Field comment:Ljava/lang/String;
      15: aload_0
      16: iconst_m1
      17: putfield      #11                 // Field level:I
      20: aload_0
      21: iconst_0
      22: putfield      #12                 // Field hasCompressionLevelChanged:Z
      25: aload_0
      26: bipush        8
      28: putfield      #13                 // Field method:I
      31: aload_0
      32: new           #14                 // class java/util/LinkedList
      35: dup
      36: invokespecial #15                 // Method java/util/LinkedList."<init>":()V
      39: putfield      #16                 // Field entries:Ljava/util/List;
      42: aload_0
      43: lconst_0
      44: putfield      #17                 // Field cdOffset:J
      47: aload_0
      48: lconst_0
      49: putfield      #18                 // Field cdLength:J
      52: aload_0
      53: new           #19                 // class java/util/HashMap
      56: dup
      57: invokespecial #20                 // Method java/util/HashMap."<init>":()V
      60: putfield      #21                 // Field metaData:Ljava/util/Map;
      63: aload_0
      64: ldc           #22                 // String UTF8
      66: putfield      #23                 // Field encoding:Ljava/lang/String;
      69: aload_0
      70: ldc           #22                 // String UTF8
      72: invokestatic  #24                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      75: putfield      #25                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      78: aload_0
      79: iconst_1
      80: putfield      #26                 // Field useUTF8Flag:Z
      83: aload_0
      84: iconst_0
      85: putfield      #27                 // Field fallbackToUTF8:Z
      88: aload_0
      89: getstatic     #28                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy.NEVER:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      92: putfield      #29                 // Field createUnicodeExtraFields:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      95: aload_0
      96: iconst_0
      97: putfield      #30                 // Field hasUsedZip64:Z
     100: aload_0
     101: getstatic     #31                 // Field org/apache/commons/compress/archivers/zip/Zip64Mode.AsNeeded:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     104: putfield      #32                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     107: aload_0
     108: ldc           #33                 // int 32768
     110: newarray       byte
     112: putfield      #34                 // Field copyBuffer:[B
     115: aload_0
     116: invokestatic  #35                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
     119: putfield      #36                 // Field calendarInstance:Ljava/util/Calendar;
     122: aload_0
     123: new           #2                  // class java/util/zip/Deflater
     126: dup
     127: aload_0
     128: getfield      #11                 // Field level:I
     131: iconst_1
     132: invokespecial #39                 // Method java/util/zip/Deflater."<init>":(IZ)V
     135: putfield      #40                 // Field def:Ljava/util/zip/Deflater;
     138: aconst_null
     139: astore_2
     140: aconst_null
     141: astore_3
     142: aconst_null
     143: astore        4
     145: aload_1
     146: invokevirtual #43                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
     149: getstatic     #44                 // Field java/nio/file/StandardOpenOption.CREATE:Ljava/nio/file/StandardOpenOption;
     152: getstatic     #45                 // Field java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
     155: getstatic     #46                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
     158: getstatic     #47                 // Field java/nio/file/StandardOpenOption.TRUNCATE_EXISTING:Ljava/nio/file/StandardOpenOption;
     161: invokestatic  #48                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
     164: iconst_0
     165: anewarray     #49                 // class java/nio/file/attribute/FileAttribute
     168: invokestatic  #50                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;Ljava/util/Set;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/channels/SeekableByteChannel;
     171: astore_3
     172: aload_3
     173: aload_0
     174: getfield      #40                 // Field def:Ljava/util/zip/Deflater;
     177: invokestatic  #51                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.create:(Ljava/nio/channels/SeekableByteChannel;Ljava/util/zip/Deflater;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     180: astore        4
     182: goto          212
     185: astore        5
     187: aload_3
     188: invokestatic  #53                 // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V
     191: aconst_null
     192: astore_3
     193: new           #54                 // class java/io/FileOutputStream
     196: dup
     197: aload_1
     198: invokespecial #55                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
     201: astore_2
     202: aload_2
     203: aload_0
     204: getfield      #40                 // Field def:Ljava/util/zip/Deflater;
     207: invokestatic  #41                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.create:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     210: astore        4
     212: aload_0
     213: aload_2
     214: putfield      #37                 // Field out:Ljava/io/OutputStream;
     217: aload_0
     218: aload_3
     219: putfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
     222: aload_0
     223: aload         4
     225: putfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     228: return
    Exception table:
       from    to  target type
         145   182   185   Class java/io/IOException

  public org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream(java.nio.channels.SeekableByteChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/commons/compress/archivers/ArchiveOutputStream."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field finished:Z
       9: aload_0
      10: ldc           #8                  // String
      12: putfield      #9                  // Field comment:Ljava/lang/String;
      15: aload_0
      16: iconst_m1
      17: putfield      #11                 // Field level:I
      20: aload_0
      21: iconst_0
      22: putfield      #12                 // Field hasCompressionLevelChanged:Z
      25: aload_0
      26: bipush        8
      28: putfield      #13                 // Field method:I
      31: aload_0
      32: new           #14                 // class java/util/LinkedList
      35: dup
      36: invokespecial #15                 // Method java/util/LinkedList."<init>":()V
      39: putfield      #16                 // Field entries:Ljava/util/List;
      42: aload_0
      43: lconst_0
      44: putfield      #17                 // Field cdOffset:J
      47: aload_0
      48: lconst_0
      49: putfield      #18                 // Field cdLength:J
      52: aload_0
      53: new           #19                 // class java/util/HashMap
      56: dup
      57: invokespecial #20                 // Method java/util/HashMap."<init>":()V
      60: putfield      #21                 // Field metaData:Ljava/util/Map;
      63: aload_0
      64: ldc           #22                 // String UTF8
      66: putfield      #23                 // Field encoding:Ljava/lang/String;
      69: aload_0
      70: ldc           #22                 // String UTF8
      72: invokestatic  #24                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      75: putfield      #25                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      78: aload_0
      79: iconst_1
      80: putfield      #26                 // Field useUTF8Flag:Z
      83: aload_0
      84: iconst_0
      85: putfield      #27                 // Field fallbackToUTF8:Z
      88: aload_0
      89: getstatic     #28                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy.NEVER:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      92: putfield      #29                 // Field createUnicodeExtraFields:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      95: aload_0
      96: iconst_0
      97: putfield      #30                 // Field hasUsedZip64:Z
     100: aload_0
     101: getstatic     #31                 // Field org/apache/commons/compress/archivers/zip/Zip64Mode.AsNeeded:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     104: putfield      #32                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     107: aload_0
     108: ldc           #33                 // int 32768
     110: newarray       byte
     112: putfield      #34                 // Field copyBuffer:[B
     115: aload_0
     116: invokestatic  #35                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
     119: putfield      #36                 // Field calendarInstance:Ljava/util/Calendar;
     122: aload_0
     123: aload_1
     124: putfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
     127: aload_0
     128: new           #2                  // class java/util/zip/Deflater
     131: dup
     132: aload_0
     133: getfield      #11                 // Field level:I
     136: iconst_1
     137: invokespecial #39                 // Method java/util/zip/Deflater."<init>":(IZ)V
     140: putfield      #40                 // Field def:Ljava/util/zip/Deflater;
     143: aload_0
     144: aload_1
     145: aload_0
     146: getfield      #40                 // Field def:Ljava/util/zip/Deflater;
     149: invokestatic  #51                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.create:(Ljava/nio/channels/SeekableByteChannel;Ljava/util/zip/Deflater;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     152: putfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     155: aload_0
     156: aconst_null
     157: putfield      #37                 // Field out:Ljava/io/OutputStream;
     160: return

  public boolean isSeekable();
    Code:
       0: aload_0
       1: getfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field encoding:Ljava/lang/String;
       5: aload_0
       6: aload_1
       7: invokestatic  #24                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      10: putfield      #25                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      13: aload_0
      14: getfield      #26                 // Field useUTF8Flag:Z
      17: ifeq          32
      20: aload_1
      21: invokestatic  #56                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.isUTF8:(Ljava/lang/String;)Z
      24: ifne          32
      27: aload_0
      28: iconst_0
      29: putfield      #26                 // Field useUTF8Flag:Z
      32: return

  public java.lang.String getEncoding();
    Code:
       0: aload_0
       1: getfield      #23                 // Field encoding:Ljava/lang/String;
       4: areturn

  public void setUseLanguageEncodingFlag(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          19
       5: aload_0
       6: getfield      #23                 // Field encoding:Ljava/lang/String;
       9: invokestatic  #56                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.isUTF8:(Ljava/lang/String;)Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: putfield      #26                 // Field useUTF8Flag:Z
      23: return

  public void setCreateUnicodeExtraFields(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$UnicodeExtraFieldPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field createUnicodeExtraFields:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
       5: return

  public void setFallbackToUTF8(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field fallbackToUTF8:Z
       5: return

  public void setUseZip64(org.apache.commons.compress.archivers.zip.Zip64Mode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
       5: return

  public void finish() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field finished:Z
       4: ifeq          17
       7: new           #52                 // class java/io/IOException
      10: dup
      11: ldc           #57                 // String This archive has already been finished
      13: invokespecial #58                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      21: ifnull        34
      24: new           #52                 // class java/io/IOException
      27: dup
      28: ldc           #60                 // String This archive contains unclosed entries.
      30: invokespecial #58                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: aload_0
      36: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      39: invokevirtual #61                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getTotalBytesWritten:()J
      42: putfield      #17                 // Field cdOffset:J
      45: aload_0
      46: invokespecial #62                 // Method writeCentralDirectoryInChunks:()V
      49: aload_0
      50: aload_0
      51: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      54: invokevirtual #61                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getTotalBytesWritten:()J
      57: aload_0
      58: getfield      #17                 // Field cdOffset:J
      61: lsub
      62: putfield      #18                 // Field cdLength:J
      65: aload_0
      66: invokevirtual #63                 // Method writeZip64CentralDirectory:()V
      69: aload_0
      70: invokevirtual #64                 // Method writeCentralDirectoryEnd:()V
      73: aload_0
      74: getfield      #21                 // Field metaData:Ljava/util/Map;
      77: invokeinterface #65,  1           // InterfaceMethod java/util/Map.clear:()V
      82: aload_0
      83: getfield      #16                 // Field entries:Ljava/util/List;
      86: invokeinterface #66,  1           // InterfaceMethod java/util/List.clear:()V
      91: aload_0
      92: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      95: invokevirtual #67                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.close:()V
      98: aload_0
      99: iconst_1
     100: putfield      #7                  // Field finished:Z
     103: return

  private void writeCentralDirectoryInChunks() throws java.io.IOException;
    Code:
       0: sipush        1000
       3: istore_1
       4: new           #68                 // class java/io/ByteArrayOutputStream
       7: dup
       8: ldc           #69                 // int 70000
      10: invokespecial #70                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
      13: astore_2
      14: iconst_0
      15: istore_3
      16: aload_0
      17: getfield      #16                 // Field entries:Ljava/util/List;
      20: invokeinterface #71,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: astore        4
      27: aload         4
      29: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          86
      37: aload         4
      39: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #74                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
      47: astore        5
      49: aload_2
      50: aload_0
      51: aload         5
      53: invokespecial #75                 // Method createCentralFileHeader:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)[B
      56: invokevirtual #76                 // Method java/io/ByteArrayOutputStream.write:([B)V
      59: iinc          3, 1
      62: iload_3
      63: sipush        1000
      66: if_icmple     83
      69: aload_0
      70: aload_2
      71: invokevirtual #77                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      74: invokespecial #78                 // Method writeCounted:([B)V
      77: aload_2
      78: invokevirtual #79                 // Method java/io/ByteArrayOutputStream.reset:()V
      81: iconst_0
      82: istore_3
      83: goto          27
      86: aload_0
      87: aload_2
      88: invokevirtual #77                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      91: invokespecial #78                 // Method writeCounted:([B)V
      94: return

  public void closeArchiveEntry() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #80                 // Method preClose:()V
       4: aload_0
       5: invokespecial #81                 // Method flushDeflater:()V
       8: aload_0
       9: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      12: invokevirtual #61                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getTotalBytesWritten:()J
      15: aload_0
      16: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      19: invokestatic  #82                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$000:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J
      22: lsub
      23: lstore_1
      24: aload_0
      25: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      28: invokevirtual #83                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getCrc32:()J
      31: lstore_3
      32: aload_0
      33: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      36: aload_0
      37: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      40: invokevirtual #84                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getBytesRead:()J
      43: invokestatic  #85                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$102:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J
      46: pop2
      47: aload_0
      48: aload_0
      49: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      52: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      55: invokespecial #87                 // Method getEffectiveZip64Mode:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      58: astore        5
      60: aload_0
      61: lload_1
      62: lload_3
      63: aload         5
      65: invokespecial #88                 // Method handleSizesAndCrc:(JJLorg/apache/commons/compress/archivers/zip/Zip64Mode;)Z
      68: istore        6
      70: aload_0
      71: iload         6
      73: iconst_0
      74: invokespecial #89                 // Method closeEntry:(ZZ)V
      77: aload_0
      78: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      81: invokevirtual #90                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.reset:()V
      84: return

  private void closeCopiedEntry(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #80                 // Method preClose:()V
       4: aload_0
       5: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
       8: aload_0
       9: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      12: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      15: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      18: invokestatic  #85                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$102:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J
      21: pop2
      22: aload_0
      23: aload_0
      24: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      27: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      30: invokespecial #87                 // Method getEffectiveZip64Mode:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      33: astore_2
      34: aload_0
      35: aload_2
      36: invokespecial #92                 // Method checkIfNeedsZip64:(Lorg/apache/commons/compress/archivers/zip/Zip64Mode;)Z
      39: istore_3
      40: aload_0
      41: iload_3
      42: iload_1
      43: invokespecial #89                 // Method closeEntry:(ZZ)V
      46: return

  private void closeEntry(boolean, boolean) throws java.io.IOException;
    Code:
       0: iload_2
       1: ifne          16
       4: aload_0
       5: getfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
       8: ifnull        16
      11: aload_0
      12: iload_1
      13: invokespecial #93                 // Method rewriteSizesAndCrc:(Z)V
      16: iload_2
      17: ifne          31
      20: aload_0
      21: aload_0
      22: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      25: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      28: invokevirtual #94                 // Method writeDataDescriptor:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V
      31: aload_0
      32: aconst_null
      33: putfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      36: return

  private void preClose() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field finished:Z
       4: ifeq          17
       7: new           #52                 // class java/io/IOException
      10: dup
      11: ldc           #95                 // String Stream has already been finished
      13: invokespecial #58                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      21: ifnonnull     34
      24: new           #52                 // class java/io/IOException
      27: dup
      28: ldc           #96                 // String No current entry to close
      30: invokespecial #58                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      38: invokestatic  #97                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$300:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Z
      41: ifne          53
      44: aload_0
      45: getstatic     #98                 // Field EMPTY:[B
      48: iconst_0
      49: iconst_0
      50: invokevirtual #99                 // Method write:([BII)V
      53: return

  public void addRawArchiveEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #74                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
       3: dup
       4: aload_1
       5: invokespecial #100                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry."<init>":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V
       8: astore_3
       9: aload_0
      10: aload_3
      11: invokespecial #101                // Method hasZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      14: ifeq          24
      17: aload_3
      18: getstatic     #102                // Field org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;
      21: invokevirtual #103                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V
      24: aload_3
      25: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J
      28: ldc2_w        #105                // long -1l
      31: lcmp
      32: ifeq          61
      35: aload_3
      36: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      39: ldc2_w        #105                // long -1l
      42: lcmp
      43: ifeq          61
      46: aload_3
      47: invokevirtual #108                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      50: ldc2_w        #105                // long -1l
      53: lcmp
      54: ifeq          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: istore        4
      64: aload_0
      65: aload_3
      66: iload         4
      68: invokespecial #109                // Method putArchiveEntry:(Lorg/apache/commons/compress/archivers/ArchiveEntry;Z)V
      71: aload_0
      72: aload_2
      73: invokespecial #110                // Method copyFromZipInputStream:(Ljava/io/InputStream;)V
      76: aload_0
      77: iload         4
      79: invokespecial #111                // Method closeCopiedEntry:(Z)V
      82: return

  private void flushDeflater() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
       4: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
       7: invokevirtual #112                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      10: bipush        8
      12: if_icmpne     22
      15: aload_0
      16: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      19: invokevirtual #113                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.flushDeflater:()V
      22: return

  private boolean handleSizesAndCrc(long, long, org.apache.commons.compress.archivers.zip.Zip64Mode) throws java.util.zip.ZipException;
    Code:
       0: aload_0
       1: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
       4: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
       7: invokevirtual #112                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      10: bipush        8
      12: if_icmpne     57
      15: aload_0
      16: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      19: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      22: aload_0
      23: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      26: invokestatic  #114                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$100:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J
      29: invokevirtual #115                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setSize:(J)V
      32: aload_0
      33: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      36: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      39: lload_1
      40: invokevirtual #116                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCompressedSize:(J)V
      43: aload_0
      44: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      47: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      50: lload_3
      51: invokevirtual #117                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCrc:(J)V
      54: goto          259
      57: aload_0
      58: getfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
      61: ifnonnull     226
      64: aload_0
      65: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      68: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      71: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J
      74: lload_3
      75: lcmp
      76: ifeq          148
      79: new           #118                // class java/util/zip/ZipException
      82: dup
      83: new           #119                // class java/lang/StringBuilder
      86: dup
      87: invokespecial #120                // Method java/lang/StringBuilder."<init>":()V
      90: ldc           #121                // String bad CRC checksum for entry
      92: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload_0
      96: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      99: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     102: invokevirtual #123                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;
     105: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: ldc           #124                // String :
     110: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     117: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     120: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J
     123: invokestatic  #125                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     126: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: ldc           #126                // String  instead of
     131: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: lload_3
     135: invokestatic  #125                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     138: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: invokevirtual #127                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: invokespecial #128                // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
     147: athrow
     148: aload_0
     149: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     152: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     155: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     158: lload_1
     159: lcmp
     160: ifeq          259
     163: new           #118                // class java/util/zip/ZipException
     166: dup
     167: new           #119                // class java/lang/StringBuilder
     170: dup
     171: invokespecial #120                // Method java/lang/StringBuilder."<init>":()V
     174: ldc           #129                // String bad size for entry
     176: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: aload_0
     180: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     183: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     186: invokevirtual #123                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;
     189: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: ldc           #124                // String :
     194: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: aload_0
     198: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     201: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     204: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     207: invokevirtual #130                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     210: ldc           #126                // String  instead of
     212: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: lload_1
     216: invokevirtual #130                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     219: invokevirtual #127                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     222: invokespecial #128                // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
     225: athrow
     226: aload_0
     227: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     230: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     233: lload_1
     234: invokevirtual #115                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setSize:(J)V
     237: aload_0
     238: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     241: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     244: lload_1
     245: invokevirtual #116                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCompressedSize:(J)V
     248: aload_0
     249: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     252: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     255: lload_3
     256: invokevirtual #117                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCrc:(J)V
     259: aload_0
     260: aload         5
     262: invokespecial #92                 // Method checkIfNeedsZip64:(Lorg/apache/commons/compress/archivers/zip/Zip64Mode;)Z
     265: ireturn

  private boolean checkIfNeedsZip64(org.apache.commons.compress.archivers.zip.Zip64Mode) throws java.util.zip.ZipException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
       5: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
       8: aload_1
       9: invokespecial #131                // Method isZip64Required:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/archivers/zip/Zip64Mode;)Z
      12: istore_2
      13: iload_2
      14: ifeq          42
      17: aload_1
      18: getstatic     #132                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Never:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      21: if_acmpne     42
      24: new           #133                // class org/apache/commons/compress/archivers/zip/Zip64RequiredException
      27: dup
      28: aload_0
      29: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      32: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      35: invokestatic  #134                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException.getEntryTooBigMessage:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Ljava/lang/String;
      38: invokespecial #135                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: iload_2
      43: ireturn

  private boolean isZip64Required(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.archivers.zip.Zip64Mode);
    Code:
       0: aload_2
       1: getstatic     #136                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Always:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
       4: if_acmpeq     15
       7: aload_0
       8: aload_1
       9: invokespecial #137                // Method isTooLageForZip32:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  private boolean isTooLageForZip32(org.apache.commons.compress.archivers.zip.ZipArchiveEntry);
    Code:
       0: aload_1
       1: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
       4: ldc2_w        #138                // long 4294967295l
       7: lcmp
       8: ifge          22
      11: aload_1
      12: invokevirtual #108                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      15: ldc2_w        #138                // long 4294967295l
      18: lcmp
      19: iflt          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  private void rewriteSizesAndCrc(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
       4: invokeinterface #140,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:()J
       9: lstore_2
      10: aload_0
      11: getfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
      14: aload_0
      15: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      18: invokestatic  #141                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$400:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J
      21: invokeinterface #142,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
      26: pop
      27: aload_0
      28: aload_0
      29: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      32: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      35: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J
      38: invokestatic  #143                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      41: invokevirtual #144                // Method writeOut:([B)V
      44: aload_0
      45: aload_0
      46: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      49: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      52: invokespecial #101                // Method hasZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      55: ifeq          62
      58: iload_1
      59: ifne          99
      62: aload_0
      63: aload_0
      64: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      67: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      70: invokevirtual #108                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      73: invokestatic  #143                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      76: invokevirtual #144                // Method writeOut:([B)V
      79: aload_0
      80: aload_0
      81: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      84: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      87: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      90: invokestatic  #143                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      93: invokevirtual #144                // Method writeOut:([B)V
      96: goto          119
      99: aload_0
     100: getstatic     #145                // Field org/apache/commons/compress/archivers/zip/ZipLong.ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;
     103: invokevirtual #146                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:()[B
     106: invokevirtual #144                // Method writeOut:([B)V
     109: aload_0
     110: getstatic     #145                // Field org/apache/commons/compress/archivers/zip/ZipLong.ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;
     113: invokevirtual #146                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:()[B
     116: invokevirtual #144                // Method writeOut:([B)V
     119: aload_0
     120: aload_0
     121: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     124: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     127: invokespecial #101                // Method hasZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
     130: ifeq          312
     133: aload_0
     134: aload_0
     135: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     138: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     141: invokespecial #147                // Method getName:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Ljava/nio/ByteBuffer;
     144: astore        4
     146: aload         4
     148: invokevirtual #148                // Method java/nio/ByteBuffer.limit:()I
     151: aload         4
     153: invokevirtual #149                // Method java/nio/ByteBuffer.position:()I
     156: isub
     157: istore        5
     159: aload_0
     160: getfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
     163: aload_0
     164: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     167: invokestatic  #141                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$400:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J
     170: ldc2_w        #150                // long 12l
     173: ladd
     174: ldc2_w        #152                // long 4l
     177: ladd
     178: iload         5
     180: i2l
     181: ladd
     182: ldc2_w        #152                // long 4l
     185: ladd
     186: invokeinterface #142,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
     191: pop
     192: aload_0
     193: aload_0
     194: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     197: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     200: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     203: invokestatic  #154                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
     206: invokevirtual #144                // Method writeOut:([B)V
     209: aload_0
     210: aload_0
     211: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     214: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     217: invokevirtual #108                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
     220: invokestatic  #154                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
     223: invokevirtual #144                // Method writeOut:([B)V
     226: iload_1
     227: ifne          312
     230: aload_0
     231: getfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
     234: aload_0
     235: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     238: invokestatic  #141                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$400:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J
     241: ldc2_w        #155                // long 10l
     244: lsub
     245: invokeinterface #142,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
     250: pop
     251: aload_0
     252: aload_0
     253: aload_0
     254: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     257: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     260: invokevirtual #112                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
     263: iconst_0
     264: iconst_0
     265: invokespecial #157                // Method versionNeededToExtract:(IZZ)I
     268: invokestatic  #158                // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B
     271: invokevirtual #144                // Method writeOut:([B)V
     274: aload_0
     275: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     278: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     281: getstatic     #102                // Field org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;
     284: invokevirtual #103                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V
     287: aload_0
     288: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     291: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     294: invokevirtual #159                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtra:()V
     297: aload_0
     298: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     301: invokestatic  #160                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$500:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Z
     304: ifeq          312
     307: aload_0
     308: iconst_0
     309: putfield      #30                 // Field hasUsedZip64:Z
     312: aload_0
     313: getfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
     316: lload_2
     317: invokeinterface #142,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
     322: pop
     323: return

  public void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #109                // Method putArchiveEntry:(Lorg/apache/commons/compress/archivers/ArchiveEntry;Z)V
       6: return

  private void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field finished:Z
       4: ifeq          17
       7: new           #52                 // class java/io/IOException
      10: dup
      11: ldc           #95                 // String Stream has already been finished
      13: invokespecial #58                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      21: ifnull        28
      24: aload_0
      25: invokevirtual #161                // Method closeArchiveEntry:()V
      28: aload_0
      29: new           #162                // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry
      32: dup
      33: aload_1
      34: checkcast     #74                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
      37: aconst_null
      38: invokespecial #163                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry."<init>":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;)V
      41: putfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      44: aload_0
      45: getfield      #16                 // Field entries:Ljava/util/List;
      48: aload_0
      49: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      52: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      55: invokeinterface #164,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      60: pop
      61: aload_0
      62: aload_0
      63: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      66: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      69: invokespecial #165                // Method setDefaults:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V
      72: aload_0
      73: aload_0
      74: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      77: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      80: invokespecial #87                 // Method getEffectiveZip64Mode:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      83: astore_3
      84: aload_0
      85: aload_3
      86: invokespecial #166                // Method validateSizeInformation:(Lorg/apache/commons/compress/archivers/zip/Zip64Mode;)V
      89: aload_0
      90: aload_0
      91: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      94: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      97: aload_3
      98: invokespecial #167                // Method shouldAddZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/archivers/zip/Zip64Mode;)Z
     101: ifeq          249
     104: aload_0
     105: aload_0
     106: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     109: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     112: invokespecial #168                // Method getZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Lorg/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField;
     115: astore        4
     117: iload_2
     118: ifeq          162
     121: new           #169                // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
     124: dup
     125: aload_0
     126: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     129: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     132: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     135: invokespecial #170                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":(J)V
     138: astore        5
     140: new           #169                // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
     143: dup
     144: aload_0
     145: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     148: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     151: invokevirtual #108                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
     154: invokespecial #170                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":(J)V
     157: astore        6
     159: goto          225
     162: aload_0
     163: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     166: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     169: invokevirtual #112                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
     172: ifne          217
     175: aload_0
     176: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     179: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     182: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     185: ldc2_w        #105                // long -1l
     188: lcmp
     189: ifeq          217
     192: new           #169                // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
     195: dup
     196: aload_0
     197: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     200: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     203: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     206: invokespecial #170                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":(J)V
     209: dup
     210: astore        5
     212: astore        6
     214: goto          225
     217: getstatic     #171                // Field org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
     220: dup
     221: astore        5
     223: astore        6
     225: aload         4
     227: aload         5
     229: invokevirtual #172                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.setSize:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
     232: aload         4
     234: aload         6
     236: invokevirtual #173                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.setCompressedSize:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
     239: aload_0
     240: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     243: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     246: invokevirtual #159                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtra:()V
     249: aload_0
     250: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     253: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     256: invokevirtual #112                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
     259: bipush        8
     261: if_icmpne     287
     264: aload_0
     265: getfield      #12                 // Field hasCompressionLevelChanged:Z
     268: ifeq          287
     271: aload_0
     272: getfield      #40                 // Field def:Ljava/util/zip/Deflater;
     275: aload_0
     276: getfield      #11                 // Field level:I
     279: invokevirtual #174                // Method java/util/zip/Deflater.setLevel:(I)V
     282: aload_0
     283: iconst_0
     284: putfield      #12                 // Field hasCompressionLevelChanged:Z
     287: aload_0
     288: aload_1
     289: checkcast     #74                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
     292: iload_2
     293: invokespecial #175                // Method writeLocalFileHeader:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Z)V
     296: return

  private void setDefaults(org.apache.commons.compress.archivers.zip.ZipArchiveEntry);
    Code:
       0: aload_1
       1: invokevirtual #112                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
       4: iconst_m1
       5: if_icmpne     16
       8: aload_1
       9: aload_0
      10: getfield      #13                 // Field method:I
      13: invokevirtual #176                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setMethod:(I)V
      16: aload_1
      17: invokevirtual #177                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getTime:()J
      20: ldc2_w        #105                // long -1l
      23: lcmp
      24: ifne          34
      27: aload_1
      28: invokestatic  #178                // Method java/lang/System.currentTimeMillis:()J
      31: invokevirtual #179                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setTime:(J)V
      34: return

  private void validateSizeInformation(org.apache.commons.compress.archivers.zip.Zip64Mode) throws java.util.zip.ZipException;
    Code:
       0: aload_0
       1: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
       4: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
       7: invokevirtual #112                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      10: ifne          94
      13: aload_0
      14: getfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
      17: ifnonnull     94
      20: aload_0
      21: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      24: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      27: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      30: ldc2_w        #105                // long -1l
      33: lcmp
      34: ifne          47
      37: new           #118                // class java/util/zip/ZipException
      40: dup
      41: ldc           #180                // String uncompressed size is required for STORED method when not writing to a file
      43: invokespecial #128                // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      51: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      54: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J
      57: ldc2_w        #105                // long -1l
      60: lcmp
      61: ifne          74
      64: new           #118                // class java/util/zip/ZipException
      67: dup
      68: ldc           #181                // String crc checksum is required for STORED method when not writing to a file
      70: invokespecial #128                // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      78: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      81: aload_0
      82: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      85: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      88: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      91: invokevirtual #116                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCompressedSize:(J)V
      94: aload_0
      95: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      98: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     101: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     104: ldc2_w        #138                // long 4294967295l
     107: lcmp
     108: ifge          128
     111: aload_0
     112: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     115: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     118: invokevirtual #108                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
     121: ldc2_w        #138                // long 4294967295l
     124: lcmp
     125: iflt          153
     128: aload_1
     129: getstatic     #132                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Never:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     132: if_acmpne     153
     135: new           #133                // class org/apache/commons/compress/archivers/zip/Zip64RequiredException
     138: dup
     139: aload_0
     140: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     143: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     146: invokestatic  #134                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException.getEntryTooBigMessage:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Ljava/lang/String;
     149: invokespecial #135                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException."<init>":(Ljava/lang/String;)V
     152: athrow
     153: return

  private boolean shouldAddZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.archivers.zip.Zip64Mode);
    Code:
       0: aload_2
       1: getstatic     #136                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Always:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
       4: if_acmpeq     54
       7: aload_1
       8: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      11: ldc2_w        #138                // long 4294967295l
      14: lcmp
      15: ifge          54
      18: aload_1
      19: invokevirtual #108                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      22: ldc2_w        #138                // long 4294967295l
      25: lcmp
      26: ifge          54
      29: aload_1
      30: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      33: ldc2_w        #105                // long -1l
      36: lcmp
      37: ifne          58
      40: aload_0
      41: getfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
      44: ifnull        58
      47: aload_2
      48: getstatic     #132                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Never:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      51: if_acmpeq     58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn

  public void setComment(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field comment:Ljava/lang/String;
       5: return

  public void setLevel(int);
    Code:
       0: iload_1
       1: iconst_m1
       2: if_icmplt     11
       5: iload_1
       6: bipush        9
       8: if_icmple     38
      11: new           #182                // class java/lang/IllegalArgumentException
      14: dup
      15: new           #119                // class java/lang/StringBuilder
      18: dup
      19: invokespecial #120                // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #183                // String Invalid compression level:
      24: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: iload_1
      28: invokevirtual #184                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #127                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #185                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: aload_0
      40: getfield      #11                 // Field level:I
      43: iload_1
      44: if_icmpeq     51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: putfield      #12                 // Field hasCompressionLevelChanged:Z
      55: aload_0
      56: iload_1
      57: putfield      #11                 // Field level:I
      60: return

  public void setMethod(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field method:I
       5: return

  public boolean canWriteEntryData(org.apache.commons.compress.archivers.ArchiveEntry);
    Code:
       0: aload_1
       1: instanceof    #74                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
       4: ifeq          51
       7: aload_1
       8: checkcast     #74                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
      11: astore_2
      12: aload_2
      13: invokevirtual #112                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      16: getstatic     #186                // Field org/apache/commons/compress/archivers/zip/ZipMethod.IMPLODING:Lorg/apache/commons/compress/archivers/zip/ZipMethod;
      19: invokevirtual #187                // Method org/apache/commons/compress/archivers/zip/ZipMethod.getCode:()I
      22: if_icmpeq     49
      25: aload_2
      26: invokevirtual #112                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      29: getstatic     #188                // Field org/apache/commons/compress/archivers/zip/ZipMethod.UNSHRINKING:Lorg/apache/commons/compress/archivers/zip/ZipMethod;
      32: invokevirtual #187                // Method org/apache/commons/compress/archivers/zip/ZipMethod.getCode:()I
      35: if_icmpeq     49
      38: aload_2
      39: invokestatic  #189                // Method org/apache/commons/compress/archivers/zip/ZipUtil.canHandleEntryData:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      42: ifeq          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn
      51: iconst_0
      52: ireturn

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
       4: ifnonnull     17
       7: new           #190                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #191                // String No current entry
      13: invokespecial #192                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      21: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      24: invokestatic  #193                // Method org/apache/commons/compress/archivers/zip/ZipUtil.checkRequestedFeatures:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V
      27: aload_0
      28: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      31: aload_1
      32: iload_2
      33: iload_3
      34: aload_0
      35: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      38: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      41: invokevirtual #112                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      44: invokevirtual #194                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.write:([BIII)J
      47: lstore        4
      49: aload_0
      50: lload         4
      52: invokevirtual #195                // Method count:(J)V
      55: return

  private void writeCounted(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
       4: aload_1
       5: invokevirtual #196                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.writeCounted:([B)V
       8: return

  private void copyFromZipInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
       4: ifnonnull     17
       7: new           #190                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #191                // String No current entry
      13: invokespecial #192                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      21: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      24: invokestatic  #193                // Method org/apache/commons/compress/archivers/zip/ZipUtil.checkRequestedFeatures:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V
      27: aload_0
      28: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      31: iconst_1
      32: invokestatic  #197                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$302:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)Z
      35: pop
      36: aload_1
      37: aload_0
      38: getfield      #34                 // Field copyBuffer:[B
      41: invokevirtual #198                // Method java/io/InputStream.read:([B)I
      44: dup
      45: istore_2
      46: iflt          70
      49: aload_0
      50: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      53: aload_0
      54: getfield      #34                 // Field copyBuffer:[B
      57: iconst_0
      58: iload_2
      59: invokevirtual #199                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.writeCounted:([BII)V
      62: aload_0
      63: iload_2
      64: invokevirtual #200                // Method count:(I)V
      67: goto          36
      70: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field finished:Z
       4: ifne          11
       7: aload_0
       8: invokevirtual #201                // Method finish:()V
      11: aload_0
      12: invokevirtual #202                // Method destroy:()V
      15: goto          25
      18: astore_1
      19: aload_0
      20: invokevirtual #202                // Method destroy:()V
      23: aload_1
      24: athrow
      25: return
    Exception table:
       from    to  target type
           0    11    18   any

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field out:Ljava/io/OutputStream;
       4: ifnull        14
       7: aload_0
       8: getfield      #37                 // Field out:Ljava/io/OutputStream;
      11: invokevirtual #203                // Method java/io/OutputStream.flush:()V
      14: return

  protected final void deflate() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
       4: invokevirtual #204                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.deflate:()V
       7: return

  protected void writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #175                // Method writeLocalFileHeader:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Z)V
       6: return

  private void writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
       4: aload_1
       5: invokevirtual #123                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;
       8: invokeinterface #205,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.canEncode:(Ljava/lang/String;)Z
      13: istore_3
      14: aload_0
      15: aload_1
      16: invokespecial #147                // Method getName:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Ljava/nio/ByteBuffer;
      19: astore        4
      21: aload_0
      22: getfield      #29                 // Field createUnicodeExtraFields:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      25: getstatic     #28                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy.NEVER:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      28: if_acmpeq     39
      31: aload_0
      32: aload_1
      33: iload_3
      34: aload         4
      36: invokespecial #206                // Method addUnicodeExtraFields:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;ZLjava/nio/ByteBuffer;)V
      39: aload_0
      40: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      43: invokevirtual #61                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getTotalBytesWritten:()J
      46: lstore        5
      48: aload_0
      49: aload_1
      50: aload         4
      52: iload_3
      53: iload_2
      54: lload         5
      56: invokespecial #207                // Method createLocalFileHeader:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/nio/ByteBuffer;ZZJ)[B
      59: astore        7
      61: aload_0
      62: getfield      #21                 // Field metaData:Ljava/util/Map;
      65: aload_1
      66: new           #208                // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData
      69: dup
      70: lload         5
      72: aload_0
      73: aload_1
      74: invokevirtual #112                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      77: iload_2
      78: invokespecial #209                // Method usesDataDescriptor:(IZ)Z
      81: aconst_null
      82: invokespecial #210                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData."<init>":(JZLorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;)V
      85: invokeinterface #211,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      90: pop
      91: aload_0
      92: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      95: lload         5
      97: ldc2_w        #212                // long 14l
     100: ladd
     101: invokestatic  #214                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$402:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J
     104: pop2
     105: aload_0
     106: aload         7
     108: invokespecial #78                 // Method writeCounted:([B)V
     111: aload_0
     112: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     115: aload_0
     116: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     119: invokevirtual #61                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getTotalBytesWritten:()J
     122: invokestatic  #215                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$002:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J
     125: pop2
     126: return

  private byte[] createLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, java.nio.ByteBuffer, boolean, boolean, long);
    Code:
       0: aload_1
       1: getstatic     #216                // Field org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;
       4: invokevirtual #217                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
       7: checkcast     #218                // class org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField
      10: astore        7
      12: aload         7
      14: ifnull        24
      17: aload_1
      18: getstatic     #216                // Field org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;
      21: invokevirtual #103                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V
      24: aload_1
      25: invokevirtual #219                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAlignment:()I
      28: istore        8
      30: iload         8
      32: ifgt          47
      35: aload         7
      37: ifnull        47
      40: aload         7
      42: invokevirtual #220                // Method org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.getAlignment:()S
      45: istore        8
      47: iload         8
      49: iconst_1
      50: if_icmpgt     66
      53: aload         7
      55: ifnull        143
      58: aload         7
      60: invokevirtual #221                // Method org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.allowMethodChange:()Z
      63: ifne          143
      66: bipush        30
      68: aload_2
      69: invokevirtual #148                // Method java/nio/ByteBuffer.limit:()I
      72: iadd
      73: aload_2
      74: invokevirtual #149                // Method java/nio/ByteBuffer.position:()I
      77: isub
      78: aload_1
      79: invokevirtual #222                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getLocalFileDataExtra:()[B
      82: arraylength
      83: iadd
      84: istore        9
      86: lload         5
      88: lneg
      89: iload         9
      91: i2l
      92: lsub
      93: ldc2_w        #152                // long 4l
      96: lsub
      97: ldc2_w        #224                // long 2l
     100: lsub
     101: iload         8
     103: iconst_1
     104: isub
     105: i2l
     106: land
     107: l2i
     108: istore        10
     110: aload_1
     111: new           #218                // class org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField
     114: dup
     115: iload         8
     117: aload         7
     119: ifnull        134
     122: aload         7
     124: invokevirtual #221                // Method org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.allowMethodChange:()Z
     127: ifeq          134
     130: iconst_1
     131: goto          135
     134: iconst_0
     135: iload         10
     137: invokespecial #226                // Method org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField."<init>":(IZI)V
     140: invokevirtual #227                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V
     143: aload_1
     144: invokevirtual #222                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getLocalFileDataExtra:()[B
     147: astore        9
     149: aload_2
     150: invokevirtual #148                // Method java/nio/ByteBuffer.limit:()I
     153: aload_2
     154: invokevirtual #149                // Method java/nio/ByteBuffer.position:()I
     157: isub
     158: istore        10
     160: bipush        30
     162: iload         10
     164: iadd
     165: aload         9
     167: arraylength
     168: iadd
     169: istore        11
     171: iload         11
     173: newarray       byte
     175: astore        12
     177: getstatic     #228                // Field LFH_SIG:[B
     180: iconst_0
     181: aload         12
     183: iconst_0
     184: iconst_4
     185: invokestatic  #229                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     188: aload_1
     189: invokevirtual #112                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
     192: istore        13
     194: aload_0
     195: iload         13
     197: iload         4
     199: invokespecial #209                // Method usesDataDescriptor:(IZ)Z
     202: istore        14
     204: aload_0
     205: iload         13
     207: aload_0
     208: aload_1
     209: invokespecial #101                // Method hasZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
     212: iload         14
     214: invokespecial #157                // Method versionNeededToExtract:(IZZ)I
     217: aload         12
     219: iconst_4
     220: invokestatic  #230                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     223: aload_0
     224: iload_3
     225: ifne          239
     228: aload_0
     229: getfield      #27                 // Field fallbackToUTF8:Z
     232: ifeq          239
     235: iconst_1
     236: goto          240
     239: iconst_0
     240: iload         14
     242: invokespecial #231                // Method getGeneralPurposeBits:(ZZ)Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;
     245: astore        15
     247: aload         15
     249: aload         12
     251: bipush        6
     253: invokevirtual #232                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encode:([BI)V
     256: iload         13
     258: aload         12
     260: bipush        8
     262: invokestatic  #230                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     265: aload_0
     266: getfield      #36                 // Field calendarInstance:Ljava/util/Calendar;
     269: aload_1
     270: invokevirtual #177                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getTime:()J
     273: aload         12
     275: bipush        10
     277: invokestatic  #233                // Method org/apache/commons/compress/archivers/zip/ZipUtil.toDosTime:(Ljava/util/Calendar;J[BI)V
     280: iload         4
     282: ifeq          299
     285: aload_1
     286: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J
     289: aload         12
     291: bipush        14
     293: invokestatic  #234                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     296: goto          339
     299: iload         13
     301: bipush        8
     303: if_icmpeq     313
     306: aload_0
     307: getfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
     310: ifnull        328
     313: getstatic     #235                // Field LZERO:[B
     316: iconst_0
     317: aload         12
     319: bipush        14
     321: iconst_4
     322: invokestatic  #229                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     325: goto          339
     328: aload_1
     329: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J
     332: aload         12
     334: bipush        14
     336: invokestatic  #234                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     339: aload_0
     340: aload_0
     341: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
     344: invokestatic  #86                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$200:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
     347: invokespecial #101                // Method hasZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
     350: ifeq          376
     353: getstatic     #145                // Field org/apache/commons/compress/archivers/zip/ZipLong.ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;
     356: aload         12
     358: bipush        18
     360: invokevirtual #236                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:([BI)V
     363: getstatic     #145                // Field org/apache/commons/compress/archivers/zip/ZipLong.ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;
     366: aload         12
     368: bipush        22
     370: invokevirtual #236                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:([BI)V
     373: goto          469
     376: iload         4
     378: ifeq          406
     381: aload_1
     382: invokevirtual #108                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
     385: aload         12
     387: bipush        18
     389: invokestatic  #234                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     392: aload_1
     393: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     396: aload         12
     398: bipush        22
     400: invokestatic  #234                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     403: goto          469
     406: iload         13
     408: bipush        8
     410: if_icmpeq     420
     413: aload_0
     414: getfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
     417: ifnull        447
     420: getstatic     #235                // Field LZERO:[B
     423: iconst_0
     424: aload         12
     426: bipush        18
     428: iconst_4
     429: invokestatic  #229                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     432: getstatic     #235                // Field LZERO:[B
     435: iconst_0
     436: aload         12
     438: bipush        22
     440: iconst_4
     441: invokestatic  #229                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     444: goto          469
     447: aload_1
     448: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     451: aload         12
     453: bipush        18
     455: invokestatic  #234                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     458: aload_1
     459: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     462: aload         12
     464: bipush        22
     466: invokestatic  #234                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     469: iload         10
     471: aload         12
     473: bipush        26
     475: invokestatic  #230                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     478: aload         9
     480: arraylength
     481: aload         12
     483: bipush        28
     485: invokestatic  #230                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     488: aload_2
     489: invokevirtual #237                // Method java/nio/ByteBuffer.array:()[B
     492: aload_2
     493: invokevirtual #238                // Method java/nio/ByteBuffer.arrayOffset:()I
     496: aload         12
     498: bipush        30
     500: iload         10
     502: invokestatic  #229                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     505: aload         9
     507: iconst_0
     508: aload         12
     510: bipush        30
     512: iload         10
     514: iadd
     515: aload         9
     517: arraylength
     518: invokestatic  #229                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     521: aload         12
     523: areturn

  private void addUnicodeExtraFields(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, boolean, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field createUnicodeExtraFields:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
       4: getstatic     #239                // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy.ALWAYS:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
       7: if_acmpeq     14
      10: iload_2
      11: ifne          46
      14: aload_1
      15: new           #240                // class org/apache/commons/compress/archivers/zip/UnicodePathExtraField
      18: dup
      19: aload_1
      20: invokevirtual #123                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;
      23: aload_3
      24: invokevirtual #237                // Method java/nio/ByteBuffer.array:()[B
      27: aload_3
      28: invokevirtual #238                // Method java/nio/ByteBuffer.arrayOffset:()I
      31: aload_3
      32: invokevirtual #148                // Method java/nio/ByteBuffer.limit:()I
      35: aload_3
      36: invokevirtual #149                // Method java/nio/ByteBuffer.position:()I
      39: isub
      40: invokespecial #241                // Method org/apache/commons/compress/archivers/zip/UnicodePathExtraField."<init>":(Ljava/lang/String;[BII)V
      43: invokevirtual #227                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V
      46: aload_1
      47: invokevirtual #242                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getComment:()Ljava/lang/String;
      50: astore        4
      52: aload         4
      54: ifnull        143
      57: ldc           #8                  // String
      59: aload         4
      61: invokevirtual #243                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      64: ifne          143
      67: aload_0
      68: getfield      #25                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      71: aload         4
      73: invokeinterface #205,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.canEncode:(Ljava/lang/String;)Z
      78: istore        5
      80: aload_0
      81: getfield      #29                 // Field createUnicodeExtraFields:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      84: getstatic     #239                // Field org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy.ALWAYS:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;
      87: if_acmpeq     95
      90: iload         5
      92: ifne          143
      95: aload_0
      96: aload_1
      97: invokespecial #244                // Method getEntryEncoding:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     100: aload         4
     102: invokeinterface #245,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;
     107: astore        6
     109: aload_1
     110: new           #246                // class org/apache/commons/compress/archivers/zip/UnicodeCommentExtraField
     113: dup
     114: aload         4
     116: aload         6
     118: invokevirtual #237                // Method java/nio/ByteBuffer.array:()[B
     121: aload         6
     123: invokevirtual #238                // Method java/nio/ByteBuffer.arrayOffset:()I
     126: aload         6
     128: invokevirtual #148                // Method java/nio/ByteBuffer.limit:()I
     131: aload         6
     133: invokevirtual #149                // Method java/nio/ByteBuffer.position:()I
     136: isub
     137: invokespecial #247                // Method org/apache/commons/compress/archivers/zip/UnicodeCommentExtraField."<init>":(Ljava/lang/String;[BII)V
     140: invokevirtual #227                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V
     143: return

  protected void writeDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #112                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
       5: iconst_0
       6: invokespecial #209                // Method usesDataDescriptor:(IZ)Z
       9: ifne          13
      12: return
      13: aload_0
      14: getstatic     #248                // Field DD_SIG:[B
      17: invokespecial #78                 // Method writeCounted:([B)V
      20: aload_0
      21: aload_1
      22: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J
      25: invokestatic  #143                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      28: invokespecial #78                 // Method writeCounted:([B)V
      31: aload_0
      32: aload_1
      33: invokespecial #101                // Method hasZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      36: ifne          64
      39: aload_0
      40: aload_1
      41: invokevirtual #108                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      44: invokestatic  #143                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      47: invokespecial #78                 // Method writeCounted:([B)V
      50: aload_0
      51: aload_1
      52: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      55: invokestatic  #143                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      58: invokespecial #78                 // Method writeCounted:([B)V
      61: goto          86
      64: aload_0
      65: aload_1
      66: invokevirtual #108                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      69: invokestatic  #154                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
      72: invokespecial #78                 // Method writeCounted:([B)V
      75: aload_0
      76: aload_1
      77: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      80: invokestatic  #154                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
      83: invokespecial #78                 // Method writeCounted:([B)V
      86: return

  protected void writeCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #75                 // Method createCentralFileHeader:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)[B
       5: astore_2
       6: aload_0
       7: aload_2
       8: invokespecial #78                 // Method writeCounted:([B)V
      11: return

  private byte[] createCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field metaData:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #249,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #208                // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData
      13: astore_2
      14: aload_0
      15: aload_1
      16: invokespecial #101                // Method hasZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      19: ifne          65
      22: aload_1
      23: invokevirtual #108                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      26: ldc2_w        #138                // long 4294967295l
      29: lcmp
      30: ifge          65
      33: aload_1
      34: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      37: ldc2_w        #138                // long 4294967295l
      40: lcmp
      41: ifge          65
      44: aload_2
      45: invokestatic  #250                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.access$800:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)J
      48: ldc2_w        #138                // long 4294967295l
      51: lcmp
      52: ifge          65
      55: aload_0
      56: getfield      #32                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      59: getstatic     #136                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Always:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      62: if_acmpne     69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: istore_3
      71: iload_3
      72: ifeq          95
      75: aload_0
      76: getfield      #32                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      79: getstatic     #132                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Never:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      82: if_acmpne     95
      85: new           #133                // class org/apache/commons/compress/archivers/zip/Zip64RequiredException
      88: dup
      89: ldc           #251                // String archive\'s size exceeds the limit of 4GByte.
      91: invokespecial #135                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: aload_0
      96: aload_1
      97: aload_2
      98: invokestatic  #250                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.access$800:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)J
     101: iload_3
     102: invokespecial #252                // Method handleZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;JZ)V
     105: aload_0
     106: aload_1
     107: aload_0
     108: aload_1
     109: invokespecial #147                // Method getName:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Ljava/nio/ByteBuffer;
     112: aload_2
     113: iload_3
     114: invokespecial #253                // Method createCentralFileHeader:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/nio/ByteBuffer;Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;Z)[B
     117: areturn

  private byte[] createCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, java.nio.ByteBuffer, org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$EntryMetaData, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #254                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCentralDirectoryExtra:()[B
       4: astore        5
       6: aload_1
       7: invokevirtual #242                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getComment:()Ljava/lang/String;
      10: astore        6
      12: aload         6
      14: ifnonnull     21
      17: ldc           #8                  // String
      19: astore        6
      21: aload_0
      22: aload_1
      23: invokespecial #244                // Method getEntryEncoding:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      26: aload         6
      28: invokeinterface #245,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;
      33: astore        7
      35: aload_2
      36: invokevirtual #148                // Method java/nio/ByteBuffer.limit:()I
      39: aload_2
      40: invokevirtual #149                // Method java/nio/ByteBuffer.position:()I
      43: isub
      44: istore        8
      46: aload         7
      48: invokevirtual #148                // Method java/nio/ByteBuffer.limit:()I
      51: aload         7
      53: invokevirtual #149                // Method java/nio/ByteBuffer.position:()I
      56: isub
      57: istore        9
      59: bipush        46
      61: iload         8
      63: iadd
      64: aload         5
      66: arraylength
      67: iadd
      68: iload         9
      70: iadd
      71: istore        10
      73: iload         10
      75: newarray       byte
      77: astore        11
      79: getstatic     #255                // Field CFH_SIG:[B
      82: iconst_0
      83: aload         11
      85: iconst_0
      86: iconst_4
      87: invokestatic  #229                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      90: aload_1
      91: invokevirtual #256                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getPlatform:()I
      94: bipush        8
      96: ishl
      97: aload_0
      98: getfield      #30                 // Field hasUsedZip64:Z
     101: ifne          109
     104: bipush        20
     106: goto          111
     109: bipush        45
     111: ior
     112: aload         11
     114: iconst_4
     115: invokestatic  #230                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     118: aload_1
     119: invokevirtual #112                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
     122: istore        12
     124: aload_0
     125: getfield      #25                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     128: aload_1
     129: invokevirtual #123                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;
     132: invokeinterface #205,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.canEncode:(Ljava/lang/String;)Z
     137: istore        13
     139: aload_0
     140: iload         12
     142: iload         4
     144: aload_3
     145: invokestatic  #257                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.access$900:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)Z
     148: invokespecial #157                // Method versionNeededToExtract:(IZZ)I
     151: aload         11
     153: bipush        6
     155: invokestatic  #230                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     158: aload_0
     159: iload         13
     161: ifne          175
     164: aload_0
     165: getfield      #27                 // Field fallbackToUTF8:Z
     168: ifeq          175
     171: iconst_1
     172: goto          176
     175: iconst_0
     176: aload_3
     177: invokestatic  #257                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.access$900:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)Z
     180: invokespecial #231                // Method getGeneralPurposeBits:(ZZ)Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;
     183: aload         11
     185: bipush        8
     187: invokevirtual #232                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.encode:([BI)V
     190: iload         12
     192: aload         11
     194: bipush        10
     196: invokestatic  #230                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     199: aload_0
     200: getfield      #36                 // Field calendarInstance:Ljava/util/Calendar;
     203: aload_1
     204: invokevirtual #177                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getTime:()J
     207: aload         11
     209: bipush        12
     211: invokestatic  #233                // Method org/apache/commons/compress/archivers/zip/ZipUtil.toDosTime:(Ljava/util/Calendar;J[BI)V
     214: aload_1
     215: invokevirtual #104                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J
     218: aload         11
     220: bipush        16
     222: invokestatic  #234                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     225: aload_1
     226: invokevirtual #108                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
     229: ldc2_w        #138                // long 4294967295l
     232: lcmp
     233: ifge          257
     236: aload_1
     237: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     240: ldc2_w        #138                // long 4294967295l
     243: lcmp
     244: ifge          257
     247: aload_0
     248: getfield      #32                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     251: getstatic     #136                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Always:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     254: if_acmpne     280
     257: getstatic     #145                // Field org/apache/commons/compress/archivers/zip/ZipLong.ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;
     260: aload         11
     262: bipush        20
     264: invokevirtual #236                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:([BI)V
     267: getstatic     #145                // Field org/apache/commons/compress/archivers/zip/ZipLong.ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;
     270: aload         11
     272: bipush        24
     274: invokevirtual #236                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:([BI)V
     277: goto          302
     280: aload_1
     281: invokevirtual #108                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
     284: aload         11
     286: bipush        20
     288: invokestatic  #234                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     291: aload_1
     292: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
     295: aload         11
     297: bipush        24
     299: invokestatic  #234                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     302: iload         8
     304: aload         11
     306: bipush        28
     308: invokestatic  #230                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     311: aload         5
     313: arraylength
     314: aload         11
     316: bipush        30
     318: invokestatic  #230                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     321: iload         9
     323: aload         11
     325: bipush        32
     327: invokestatic  #230                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     330: getstatic     #258                // Field ZERO:[B
     333: iconst_0
     334: aload         11
     336: bipush        34
     338: iconst_2
     339: invokestatic  #229                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     342: aload_1
     343: invokevirtual #259                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getInternalAttributes:()I
     346: aload         11
     348: bipush        36
     350: invokestatic  #230                // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
     353: aload_1
     354: invokevirtual #260                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExternalAttributes:()J
     357: aload         11
     359: bipush        38
     361: invokestatic  #234                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     364: aload_3
     365: invokestatic  #250                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.access$800:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)J
     368: ldc2_w        #138                // long 4294967295l
     371: lcmp
     372: ifge          385
     375: aload_0
     376: getfield      #32                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     379: getstatic     #136                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Always:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     382: if_acmpne     398
     385: ldc2_w        #138                // long 4294967295l
     388: aload         11
     390: bipush        42
     392: invokestatic  #234                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     395: goto          415
     398: aload_3
     399: invokestatic  #250                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.access$800:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)J
     402: ldc2_w        #138                // long 4294967295l
     405: invokestatic  #261                // Method java/lang/Math.min:(JJ)J
     408: aload         11
     410: bipush        42
     412: invokestatic  #234                // Method org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     415: aload_2
     416: invokevirtual #237                // Method java/nio/ByteBuffer.array:()[B
     419: aload_2
     420: invokevirtual #238                // Method java/nio/ByteBuffer.arrayOffset:()I
     423: aload         11
     425: bipush        46
     427: iload         8
     429: invokestatic  #229                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     432: bipush        46
     434: iload         8
     436: iadd
     437: istore        14
     439: aload         5
     441: iconst_0
     442: aload         11
     444: iload         14
     446: aload         5
     448: arraylength
     449: invokestatic  #229                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     452: iload         14
     454: aload         5
     456: arraylength
     457: iadd
     458: istore        15
     460: aload         7
     462: invokevirtual #237                // Method java/nio/ByteBuffer.array:()[B
     465: aload         7
     467: invokevirtual #238                // Method java/nio/ByteBuffer.arrayOffset:()I
     470: aload         11
     472: iload         15
     474: iload         9
     476: invokestatic  #229                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     479: aload         11
     481: areturn

  private void handleZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, long, boolean);
    Code:
       0: iload         4
       2: ifeq          126
       5: aload_0
       6: aload_1
       7: invokespecial #168                // Method getZip64Extra:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Lorg/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField;
      10: astore        5
      12: aload_1
      13: invokevirtual #108                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      16: ldc2_w        #138                // long 4294967295l
      19: lcmp
      20: ifge          44
      23: aload_1
      24: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      27: ldc2_w        #138                // long 4294967295l
      30: lcmp
      31: ifge          44
      34: aload_0
      35: getfield      #32                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      38: getstatic     #136                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Always:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      41: if_acmpne     79
      44: aload         5
      46: new           #169                // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
      49: dup
      50: aload_1
      51: invokevirtual #108                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J
      54: invokespecial #170                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":(J)V
      57: invokevirtual #173                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.setCompressedSize:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
      60: aload         5
      62: new           #169                // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
      65: dup
      66: aload_1
      67: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      70: invokespecial #170                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":(J)V
      73: invokevirtual #172                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.setSize:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
      76: goto          91
      79: aload         5
      81: aconst_null
      82: invokevirtual #173                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.setCompressedSize:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
      85: aload         5
      87: aconst_null
      88: invokevirtual #172                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.setSize:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
      91: lload_2
      92: ldc2_w        #138                // long 4294967295l
      95: lcmp
      96: ifge          109
      99: aload_0
     100: getfield      #32                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     103: getstatic     #136                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Always:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
     106: if_acmpne     122
     109: aload         5
     111: new           #169                // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
     114: dup
     115: lload_2
     116: invokespecial #170                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":(J)V
     119: invokevirtual #262                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.setRelativeHeaderOffset:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
     122: aload_1
     123: invokevirtual #159                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtra:()V
     126: return

  protected void writeCentralDirectoryEnd() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #263                // Field EOCD_SIG:[B
       4: invokespecial #78                 // Method writeCounted:([B)V
       7: aload_0
       8: getstatic     #258                // Field ZERO:[B
      11: invokespecial #78                 // Method writeCounted:([B)V
      14: aload_0
      15: getstatic     #258                // Field ZERO:[B
      18: invokespecial #78                 // Method writeCounted:([B)V
      21: aload_0
      22: getfield      #16                 // Field entries:Ljava/util/List;
      25: invokeinterface #264,  1          // InterfaceMethod java/util/List.size:()I
      30: istore_1
      31: iload_1
      32: ldc_w         #265                // int 65535
      35: if_icmple     59
      38: aload_0
      39: getfield      #32                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      42: getstatic     #132                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Never:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      45: if_acmpne     59
      48: new           #133                // class org/apache/commons/compress/archivers/zip/Zip64RequiredException
      51: dup
      52: ldc_w         #266                // String archive contains more than 65535 entries.
      55: invokespecial #135                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: aload_0
      60: getfield      #17                 // Field cdOffset:J
      63: ldc2_w        #138                // long 4294967295l
      66: lcmp
      67: ifle          90
      70: aload_0
      71: getfield      #32                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      74: getstatic     #132                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Never:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      77: if_acmpne     90
      80: new           #133                // class org/apache/commons/compress/archivers/zip/Zip64RequiredException
      83: dup
      84: ldc           #251                // String archive\'s size exceeds the limit of 4GByte.
      86: invokespecial #135                // Method org/apache/commons/compress/archivers/zip/Zip64RequiredException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: iload_1
      91: ldc_w         #265                // int 65535
      94: invokestatic  #267                // Method java/lang/Math.min:(II)I
      97: invokestatic  #158                // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B
     100: astore_2
     101: aload_0
     102: aload_2
     103: invokespecial #78                 // Method writeCounted:([B)V
     106: aload_0
     107: aload_2
     108: invokespecial #78                 // Method writeCounted:([B)V
     111: aload_0
     112: aload_0
     113: getfield      #18                 // Field cdLength:J
     116: ldc2_w        #138                // long 4294967295l
     119: invokestatic  #261                // Method java/lang/Math.min:(JJ)J
     122: invokestatic  #143                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
     125: invokespecial #78                 // Method writeCounted:([B)V
     128: aload_0
     129: aload_0
     130: getfield      #17                 // Field cdOffset:J
     133: ldc2_w        #138                // long 4294967295l
     136: invokestatic  #261                // Method java/lang/Math.min:(JJ)J
     139: invokestatic  #143                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
     142: invokespecial #78                 // Method writeCounted:([B)V
     145: aload_0
     146: getfield      #25                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
     149: aload_0
     150: getfield      #9                  // Field comment:Ljava/lang/String;
     153: invokeinterface #245,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;
     158: astore_3
     159: aload_3
     160: invokevirtual #148                // Method java/nio/ByteBuffer.limit:()I
     163: aload_3
     164: invokevirtual #149                // Method java/nio/ByteBuffer.position:()I
     167: isub
     168: istore        4
     170: aload_0
     171: iload         4
     173: invokestatic  #158                // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B
     176: invokespecial #78                 // Method writeCounted:([B)V
     179: aload_0
     180: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     183: aload_3
     184: invokevirtual #237                // Method java/nio/ByteBuffer.array:()[B
     187: aload_3
     188: invokevirtual #238                // Method java/nio/ByteBuffer.arrayOffset:()I
     191: iload         4
     193: invokevirtual #199                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.writeCounted:([BII)V
     196: return

  protected void writeZip64CentralDirectory() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #32                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
       4: getstatic     #132                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Never:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
       7: if_acmpne     11
      10: return
      11: aload_0
      12: getfield      #30                 // Field hasUsedZip64:Z
      15: ifne          60
      18: aload_0
      19: getfield      #17                 // Field cdOffset:J
      22: ldc2_w        #138                // long 4294967295l
      25: lcmp
      26: ifge          55
      29: aload_0
      30: getfield      #18                 // Field cdLength:J
      33: ldc2_w        #138                // long 4294967295l
      36: lcmp
      37: ifge          55
      40: aload_0
      41: getfield      #16                 // Field entries:Ljava/util/List;
      44: invokeinterface #264,  1          // InterfaceMethod java/util/List.size:()I
      49: ldc_w         #265                // int 65535
      52: if_icmplt     60
      55: aload_0
      56: iconst_1
      57: putfield      #30                 // Field hasUsedZip64:Z
      60: aload_0
      61: getfield      #30                 // Field hasUsedZip64:Z
      64: ifne          68
      67: return
      68: aload_0
      69: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      72: invokevirtual #61                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getTotalBytesWritten:()J
      75: lstore_1
      76: aload_0
      77: getstatic     #268                // Field ZIP64_EOCD_SIG:[B
      80: invokevirtual #144                // Method writeOut:([B)V
      83: aload_0
      84: ldc2_w        #269                // long 44l
      87: invokestatic  #154                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
      90: invokevirtual #144                // Method writeOut:([B)V
      93: aload_0
      94: bipush        45
      96: invokestatic  #158                // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B
      99: invokevirtual #144                // Method writeOut:([B)V
     102: aload_0
     103: bipush        45
     105: invokestatic  #158                // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B
     108: invokevirtual #144                // Method writeOut:([B)V
     111: aload_0
     112: getstatic     #235                // Field LZERO:[B
     115: invokevirtual #144                // Method writeOut:([B)V
     118: aload_0
     119: getstatic     #235                // Field LZERO:[B
     122: invokevirtual #144                // Method writeOut:([B)V
     125: aload_0
     126: getfield      #16                 // Field entries:Ljava/util/List;
     129: invokeinterface #264,  1          // InterfaceMethod java/util/List.size:()I
     134: i2l
     135: invokestatic  #154                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
     138: astore_3
     139: aload_0
     140: aload_3
     141: invokevirtual #144                // Method writeOut:([B)V
     144: aload_0
     145: aload_3
     146: invokevirtual #144                // Method writeOut:([B)V
     149: aload_0
     150: aload_0
     151: getfield      #18                 // Field cdLength:J
     154: invokestatic  #154                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
     157: invokevirtual #144                // Method writeOut:([B)V
     160: aload_0
     161: aload_0
     162: getfield      #17                 // Field cdOffset:J
     165: invokestatic  #154                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
     168: invokevirtual #144                // Method writeOut:([B)V
     171: aload_0
     172: getstatic     #271                // Field ZIP64_EOCD_LOC_SIG:[B
     175: invokevirtual #144                // Method writeOut:([B)V
     178: aload_0
     179: getstatic     #235                // Field LZERO:[B
     182: invokevirtual #144                // Method writeOut:([B)V
     185: aload_0
     186: lload_1
     187: invokestatic  #154                // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:(J)[B
     190: invokevirtual #144                // Method writeOut:([B)V
     193: aload_0
     194: getstatic     #272                // Field ONE:[B
     197: invokevirtual #144                // Method writeOut:([B)V
     200: return

  protected final void writeOut(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
       4: aload_1
       5: iconst_0
       6: aload_1
       7: arraylength
       8: invokevirtual #273                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.writeOut:([BII)V
      11: return

  protected final void writeOut(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #273                // Method org/apache/commons/compress/archivers/zip/StreamCompressor.writeOut:([BII)V
      10: return

  private org.apache.commons.compress.archivers.zip.GeneralPurposeBit getGeneralPurposeBits(boolean, boolean);
    Code:
       0: new           #4                  // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit
       3: dup
       4: invokespecial #274                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_0
      10: getfield      #26                 // Field useUTF8Flag:Z
      13: ifne          20
      16: iload_1
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: invokevirtual #275                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useUTF8ForNames:(Z)V
      28: iload_2
      29: ifeq          37
      32: aload_3
      33: iconst_1
      34: invokevirtual #276                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.useDataDescriptor:(Z)V
      37: aload_3
      38: areturn

  private int versionNeededToExtract(int, boolean, boolean);
    Code:
       0: iload_2
       1: ifeq          7
       4: bipush        45
       6: ireturn
       7: iload_3
       8: ifeq          14
      11: bipush        20
      13: ireturn
      14: aload_0
      15: iload_1
      16: invokespecial #277                // Method versionNeededToExtractMethod:(I)I
      19: ireturn

  private boolean usesDataDescriptor(int, boolean);
    Code:
       0: iload_2
       1: ifne          21
       4: iload_1
       5: bipush        8
       7: if_icmpne     21
      10: aload_0
      11: getfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
      14: ifnonnull     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  private int versionNeededToExtractMethod(int);
    Code:
       0: iload_1
       1: bipush        8
       3: if_icmpne     11
       6: bipush        20
       8: goto          13
      11: bipush        10
      13: ireturn

  public org.apache.commons.compress.archivers.ArchiveEntry createArchiveEntry(java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field finished:Z
       4: ifeq          17
       7: new           #52                 // class java/io/IOException
      10: dup
      11: ldc           #95                 // String Stream has already been finished
      13: invokespecial #58                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: new           #74                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry
      20: dup
      21: aload_1
      22: aload_2
      23: invokespecial #278                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry."<init>":(Ljava/io/File;Ljava/lang/String;)V
      26: areturn

  private org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField getZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry);
    Code:
       0: aload_0
       1: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
       4: ifnull        27
       7: aload_0
       8: getfield      #59                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;
      11: aload_0
      12: getfield      #30                 // Field hasUsedZip64:Z
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: invokestatic  #279                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.access$502:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)Z
      26: pop
      27: aload_0
      28: iconst_1
      29: putfield      #30                 // Field hasUsedZip64:Z
      32: aload_1
      33: getstatic     #102                // Field org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;
      36: invokevirtual #217                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
      39: checkcast     #280                // class org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField
      42: astore_2
      43: aload_2
      44: ifnonnull     55
      47: new           #280                // class org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField
      50: dup
      51: invokespecial #281                // Method org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField."<init>":()V
      54: astore_2
      55: aload_1
      56: aload_2
      57: invokevirtual #282                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.addAsFirstExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V
      60: aload_2
      61: areturn

  private boolean hasZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry);
    Code:
       0: aload_1
       1: getstatic     #102                // Field org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;
       4: invokevirtual #217                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private org.apache.commons.compress.archivers.zip.Zip64Mode getEffectiveZip64Mode(org.apache.commons.compress.archivers.zip.ZipArchiveEntry);
    Code:
       0: aload_0
       1: getfield      #32                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
       4: getstatic     #31                 // Field org/apache/commons/compress/archivers/zip/Zip64Mode.AsNeeded:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
       7: if_acmpne     37
      10: aload_0
      11: getfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
      14: ifnonnull     37
      17: aload_1
      18: invokevirtual #112                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      21: bipush        8
      23: if_icmpne     37
      26: aload_1
      27: invokevirtual #91                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J
      30: ldc2_w        #105                // long -1l
      33: lcmp
      34: ifeq          42
      37: aload_0
      38: getfield      #32                 // Field zip64Mode:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      41: areturn
      42: getstatic     #132                // Field org/apache/commons/compress/archivers/zip/Zip64Mode.Never:Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
      45: areturn

  private org.apache.commons.compress.archivers.zip.ZipEncoding getEntryEncoding(org.apache.commons.compress.archivers.zip.ZipArchiveEntry);
    Code:
       0: aload_0
       1: getfield      #25                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
       4: aload_1
       5: invokevirtual #123                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;
       8: invokeinterface #205,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.canEncode:(Ljava/lang/String;)Z
      13: istore_2
      14: iload_2
      15: ifne          31
      18: aload_0
      19: getfield      #27                 // Field fallbackToUTF8:Z
      22: ifeq          31
      25: getstatic     #283                // Field org/apache/commons/compress/archivers/zip/ZipEncodingHelper.UTF8_ZIP_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      28: goto          35
      31: aload_0
      32: getfield      #25                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
      35: areturn

  private java.nio.ByteBuffer getName(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #244                // Method getEntryEncoding:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
       5: aload_1
       6: invokevirtual #123                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;
       9: invokeinterface #245,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;
      14: areturn

  void destroy() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
       4: ifnull        16
       7: aload_0
       8: getfield      #38                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
      11: invokeinterface #284,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.close:()V
      16: aload_0
      17: getfield      #37                 // Field out:Ljava/io/OutputStream;
      20: ifnull        50
      23: aload_0
      24: getfield      #37                 // Field out:Ljava/io/OutputStream;
      27: invokevirtual #285                // Method java/io/OutputStream.close:()V
      30: goto          50
      33: astore_1
      34: aload_0
      35: getfield      #37                 // Field out:Ljava/io/OutputStream;
      38: ifnull        48
      41: aload_0
      42: getfield      #37                 // Field out:Ljava/io/OutputStream;
      45: invokevirtual #285                // Method java/io/OutputStream.close:()V
      48: aload_1
      49: athrow
      50: return
    Exception table:
       from    to  target type
           0    16    33   any

  static {};
    Code:
       0: iconst_0
       1: newarray       byte
       3: putstatic     #98                 // Field EMPTY:[B
       6: iconst_2
       7: newarray       byte
       9: dup
      10: iconst_0
      11: iconst_0
      12: bastore
      13: dup
      14: iconst_1
      15: iconst_0
      16: bastore
      17: putstatic     #258                // Field ZERO:[B
      20: iconst_4
      21: newarray       byte
      23: dup
      24: iconst_0
      25: iconst_0
      26: bastore
      27: dup
      28: iconst_1
      29: iconst_0
      30: bastore
      31: dup
      32: iconst_2
      33: iconst_0
      34: bastore
      35: dup
      36: iconst_3
      37: iconst_0
      38: bastore
      39: putstatic     #235                // Field LZERO:[B
      42: lconst_1
      43: invokestatic  #143                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      46: putstatic     #272                // Field ONE:[B
      49: getstatic     #286                // Field org/apache/commons/compress/archivers/zip/ZipLong.LFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;
      52: invokevirtual #146                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:()[B
      55: putstatic     #228                // Field LFH_SIG:[B
      58: getstatic     #287                // Field org/apache/commons/compress/archivers/zip/ZipLong.DD_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;
      61: invokevirtual #146                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:()[B
      64: putstatic     #248                // Field DD_SIG:[B
      67: getstatic     #288                // Field org/apache/commons/compress/archivers/zip/ZipLong.CFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;
      70: invokevirtual #146                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:()[B
      73: putstatic     #255                // Field CFH_SIG:[B
      76: ldc2_w        #289                // long 101010256l
      79: invokestatic  #143                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      82: putstatic     #263                // Field EOCD_SIG:[B
      85: ldc2_w        #291                // long 101075792l
      88: invokestatic  #143                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
      91: putstatic     #268                // Field ZIP64_EOCD_SIG:[B
      94: ldc2_w        #293                // long 117853008l
      97: invokestatic  #143                // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
     100: putstatic     #271                // Field ZIP64_EOCD_LOC_SIG:[B
     103: return
}
