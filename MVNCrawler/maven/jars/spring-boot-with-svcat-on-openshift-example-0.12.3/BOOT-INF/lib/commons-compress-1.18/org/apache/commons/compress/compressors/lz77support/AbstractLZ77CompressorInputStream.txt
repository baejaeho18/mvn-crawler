Compiled from "AbstractLZ77CompressorInputStream.java"
public abstract class org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics {
  private final int windowSize;

  private final byte[] buf;

  private int writeIndex;

  private int readIndex;

  private final org.apache.commons.compress.utils.CountingInputStream in;

  private long bytesRemaining;

  private int backReferenceOffset;

  private int size;

  private final byte[] oneByte;

  protected final org.apache.commons.compress.utils.ByteUtils$ByteSupplier supplier;

  public org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream(java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/compress/compressors/CompressorInputStream."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field size:I
       9: aload_0
      10: iconst_1
      11: newarray       byte
      13: putfield      #3                  // Field oneByte:[B
      16: aload_0
      17: new           #4                  // class org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream$1
      20: dup
      21: aload_0
      22: invokespecial #5                  // Method org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream$1."<init>":(Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;)V
      25: putfield      #6                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;
      28: aload_0
      29: new           #7                  // class org/apache/commons/compress/utils/CountingInputStream
      32: dup
      33: aload_1
      34: invokespecial #8                  // Method org/apache/commons/compress/utils/CountingInputStream."<init>":(Ljava/io/InputStream;)V
      37: putfield      #9                  // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;
      40: aload_0
      41: iload_2
      42: putfield      #10                 // Field windowSize:I
      45: aload_0
      46: iconst_3
      47: iload_2
      48: imul
      49: newarray       byte
      51: putfield      #11                 // Field buf:[B
      54: aload_0
      55: aload_0
      56: iconst_0
      57: dup_x1
      58: putfield      #12                 // Field readIndex:I
      61: putfield      #13                 // Field writeIndex:I
      64: aload_0
      65: lconst_0
      66: putfield      #14                 // Field bytesRemaining:J
      69: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field oneByte:[B
       5: iconst_0
       6: iconst_1
       7: invokevirtual #15                 // Method read:([BII)I
      10: iconst_m1
      11: if_icmpne     18
      14: iconst_m1
      15: goto          28
      18: aload_0
      19: getfield      #3                  // Field oneByte:[B
      22: iconst_0
      23: baload
      24: sipush        255
      27: iand
      28: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;
       4: invokevirtual #16                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V
       7: return

  public int available();
    Code:
       0: aload_0
       1: getfield      #13                 // Field writeIndex:I
       4: aload_0
       5: getfield      #12                 // Field readIndex:I
       8: isub
       9: ireturn

  public int getSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field size:I
       4: ireturn

  public void prefill(byte[]);
    Code:
       0: aload_0
       1: getfield      #13                 // Field writeIndex:I
       4: ifeq          17
       7: new           #17                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #18                 // String the stream has already been read from, can\'t prefill anymore
      13: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #10                 // Field windowSize:I
      21: aload_1
      22: arraylength
      23: invokestatic  #20                 // Method java/lang/Math.min:(II)I
      26: istore_2
      27: aload_1
      28: aload_1
      29: arraylength
      30: iload_2
      31: isub
      32: aload_0
      33: getfield      #11                 // Field buf:[B
      36: iconst_0
      37: iload_2
      38: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      41: aload_0
      42: dup
      43: getfield      #13                 // Field writeIndex:I
      46: iload_2
      47: iadd
      48: putfield      #13                 // Field writeIndex:I
      51: aload_0
      52: dup
      53: getfield      #12                 // Field readIndex:I
      56: iload_2
      57: iadd
      58: putfield      #12                 // Field readIndex:I
      61: return

  public long getCompressedCount();
    Code:
       0: aload_0
       1: getfield      #9                  // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;
       4: invokevirtual #22                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J
       7: lreturn

  protected final void startLiteral(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #14                 // Field bytesRemaining:J
       5: return

  protected final boolean hasMoreDataInBlock();
    Code:
       0: aload_0
       1: getfield      #14                 // Field bytesRemaining:J
       4: lconst_0
       5: lcmp
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  protected final int readLiteral(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method available:()I
       4: istore        4
       6: iload_3
       7: iload         4
       9: if_icmple     20
      12: aload_0
      13: iload_3
      14: iload         4
      16: isub
      17: invokespecial #24                 // Method tryToReadLiteral:(I)V
      20: aload_0
      21: aload_1
      22: iload_2
      23: iload_3
      24: invokespecial #25                 // Method readFromBuffer:([BII)I
      27: ireturn

  private void tryToReadLiteral(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: i2l
       2: aload_0
       3: getfield      #14                 // Field bytesRemaining:J
       6: invokestatic  #26                 // Method java/lang/Math.min:(JJ)J
       9: l2i
      10: aload_0
      11: getfield      #11                 // Field buf:[B
      14: arraylength
      15: aload_0
      16: getfield      #13                 // Field writeIndex:I
      19: isub
      20: invokestatic  #20                 // Method java/lang/Math.min:(II)I
      23: istore_2
      24: iload_2
      25: ifle          47
      28: aload_0
      29: getfield      #9                  // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;
      32: aload_0
      33: getfield      #11                 // Field buf:[B
      36: aload_0
      37: getfield      #13                 // Field writeIndex:I
      40: iload_2
      41: invokestatic  #27                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I
      44: goto          48
      47: iconst_0
      48: istore_3
      49: aload_0
      50: iload_3
      51: invokevirtual #28                 // Method count:(I)V
      54: iload_2
      55: iload_3
      56: if_icmpeq     69
      59: new           #29                 // class java/io/IOException
      62: dup
      63: ldc           #30                 // String Premature end of stream reading literal
      65: invokespecial #31                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload_0
      70: dup
      71: getfield      #13                 // Field writeIndex:I
      74: iload_2
      75: iadd
      76: putfield      #13                 // Field writeIndex:I
      79: aload_0
      80: dup
      81: getfield      #14                 // Field bytesRemaining:J
      84: iload_2
      85: i2l
      86: lsub
      87: putfield      #14                 // Field bytesRemaining:J
      90: return

  private int readFromBuffer(byte[], int, int);
    Code:
       0: iload_3
       1: aload_0
       2: invokevirtual #23                 // Method available:()I
       5: invokestatic  #20                 // Method java/lang/Math.min:(II)I
       8: istore        4
      10: iload         4
      12: ifle          58
      15: aload_0
      16: getfield      #11                 // Field buf:[B
      19: aload_0
      20: getfield      #12                 // Field readIndex:I
      23: aload_1
      24: iload_2
      25: iload         4
      27: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      30: aload_0
      31: dup
      32: getfield      #12                 // Field readIndex:I
      35: iload         4
      37: iadd
      38: putfield      #12                 // Field readIndex:I
      41: aload_0
      42: getfield      #12                 // Field readIndex:I
      45: iconst_2
      46: aload_0
      47: getfield      #10                 // Field windowSize:I
      50: imul
      51: if_icmple     58
      54: aload_0
      55: invokespecial #32                 // Method slideBuffer:()V
      58: aload_0
      59: dup
      60: getfield      #2                  // Field size:I
      63: iload         4
      65: iadd
      66: putfield      #2                  // Field size:I
      69: iload         4
      71: ireturn

  private void slideBuffer();
    Code:
       0: aload_0
       1: getfield      #11                 // Field buf:[B
       4: aload_0
       5: getfield      #10                 // Field windowSize:I
       8: aload_0
       9: getfield      #11                 // Field buf:[B
      12: iconst_0
      13: aload_0
      14: getfield      #10                 // Field windowSize:I
      17: iconst_2
      18: imul
      19: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      22: aload_0
      23: dup
      24: getfield      #13                 // Field writeIndex:I
      27: aload_0
      28: getfield      #10                 // Field windowSize:I
      31: isub
      32: putfield      #13                 // Field writeIndex:I
      35: aload_0
      36: dup
      37: getfield      #12                 // Field readIndex:I
      40: aload_0
      41: getfield      #10                 // Field windowSize:I
      44: isub
      45: putfield      #12                 // Field readIndex:I
      48: return

  protected final void startBackReference(int, long);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #33                 // Field backReferenceOffset:I
       5: aload_0
       6: lload_2
       7: putfield      #14                 // Field bytesRemaining:J
      10: return

  protected final int readBackReference(byte[], int, int);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method available:()I
       4: istore        4
       6: iload_3
       7: iload         4
       9: if_icmple     20
      12: aload_0
      13: iload_3
      14: iload         4
      16: isub
      17: invokespecial #34                 // Method tryToCopy:(I)V
      20: aload_0
      21: aload_1
      22: iload_2
      23: iload_3
      24: invokespecial #25                 // Method readFromBuffer:([BII)I
      27: ireturn

  private void tryToCopy(int);
    Code:
       0: iload_1
       1: i2l
       2: aload_0
       3: getfield      #14                 // Field bytesRemaining:J
       6: invokestatic  #26                 // Method java/lang/Math.min:(JJ)J
       9: l2i
      10: aload_0
      11: getfield      #11                 // Field buf:[B
      14: arraylength
      15: aload_0
      16: getfield      #13                 // Field writeIndex:I
      19: isub
      20: invokestatic  #20                 // Method java/lang/Math.min:(II)I
      23: istore_2
      24: iload_2
      25: ifne          31
      28: goto          243
      31: aload_0
      32: getfield      #33                 // Field backReferenceOffset:I
      35: iconst_1
      36: if_icmpne     82
      39: aload_0
      40: getfield      #11                 // Field buf:[B
      43: aload_0
      44: getfield      #13                 // Field writeIndex:I
      47: iconst_1
      48: isub
      49: baload
      50: istore_3
      51: aload_0
      52: getfield      #11                 // Field buf:[B
      55: aload_0
      56: getfield      #13                 // Field writeIndex:I
      59: aload_0
      60: getfield      #13                 // Field writeIndex:I
      63: iload_2
      64: iadd
      65: iload_3
      66: invokestatic  #35                 // Method java/util/Arrays.fill:([BIIB)V
      69: aload_0
      70: dup
      71: getfield      #13                 // Field writeIndex:I
      74: iload_2
      75: iadd
      76: putfield      #13                 // Field writeIndex:I
      79: goto          243
      82: iload_2
      83: aload_0
      84: getfield      #33                 // Field backReferenceOffset:I
      87: if_icmpge     128
      90: aload_0
      91: getfield      #11                 // Field buf:[B
      94: aload_0
      95: getfield      #13                 // Field writeIndex:I
      98: aload_0
      99: getfield      #33                 // Field backReferenceOffset:I
     102: isub
     103: aload_0
     104: getfield      #11                 // Field buf:[B
     107: aload_0
     108: getfield      #13                 // Field writeIndex:I
     111: iload_2
     112: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     115: aload_0
     116: dup
     117: getfield      #13                 // Field writeIndex:I
     120: iload_2
     121: iadd
     122: putfield      #13                 // Field writeIndex:I
     125: goto          243
     128: iload_2
     129: aload_0
     130: getfield      #33                 // Field backReferenceOffset:I
     133: idiv
     134: istore_3
     135: iconst_0
     136: istore        4
     138: iload         4
     140: iload_3
     141: if_icmpge     191
     144: aload_0
     145: getfield      #11                 // Field buf:[B
     148: aload_0
     149: getfield      #13                 // Field writeIndex:I
     152: aload_0
     153: getfield      #33                 // Field backReferenceOffset:I
     156: isub
     157: aload_0
     158: getfield      #11                 // Field buf:[B
     161: aload_0
     162: getfield      #13                 // Field writeIndex:I
     165: aload_0
     166: getfield      #33                 // Field backReferenceOffset:I
     169: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     172: aload_0
     173: dup
     174: getfield      #13                 // Field writeIndex:I
     177: aload_0
     178: getfield      #33                 // Field backReferenceOffset:I
     181: iadd
     182: putfield      #13                 // Field writeIndex:I
     185: iinc          4, 1
     188: goto          138
     191: iload_2
     192: aload_0
     193: getfield      #33                 // Field backReferenceOffset:I
     196: iload_3
     197: imul
     198: isub
     199: istore        4
     201: iload         4
     203: ifle          243
     206: aload_0
     207: getfield      #11                 // Field buf:[B
     210: aload_0
     211: getfield      #13                 // Field writeIndex:I
     214: aload_0
     215: getfield      #33                 // Field backReferenceOffset:I
     218: isub
     219: aload_0
     220: getfield      #11                 // Field buf:[B
     223: aload_0
     224: getfield      #13                 // Field writeIndex:I
     227: iload         4
     229: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     232: aload_0
     233: dup
     234: getfield      #13                 // Field writeIndex:I
     237: iload         4
     239: iadd
     240: putfield      #13                 // Field writeIndex:I
     243: aload_0
     244: dup
     245: getfield      #14                 // Field bytesRemaining:J
     248: iload_2
     249: i2l
     250: lsub
     251: putfield      #14                 // Field bytesRemaining:J
     254: return

  protected final int readOneByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;
       4: invokevirtual #36                 // Method org/apache/commons/compress/utils/CountingInputStream.read:()I
       7: istore_1
       8: iload_1
       9: iconst_m1
      10: if_icmpeq     24
      13: aload_0
      14: iconst_1
      15: invokevirtual #28                 // Method count:(I)V
      18: iload_1
      19: sipush        255
      22: iand
      23: ireturn
      24: iconst_m1
      25: ireturn
}
