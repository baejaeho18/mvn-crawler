Compiled from "Coders.java"
class org.apache.commons.compress.archivers.sevenz.Coders$BCJDecoder extends org.apache.commons.compress.archivers.sevenz.CoderBase {
  private final org.tukaani.xz.FilterOptions opts;

  org.apache.commons.compress.archivers.sevenz.Coders$BCJDecoder(org.tukaani.xz.FilterOptions);
    Code:
       0: aload_0
       1: iconst_0
       2: anewarray     #1                  // class java/lang/Class
       5: invokespecial #2                  // Method org/apache/commons/compress/archivers/sevenz/CoderBase."<init>":([Ljava/lang/Class;)V
       8: aload_0
       9: aload_1
      10: putfield      #3                  // Field opts:Lorg/tukaani/xz/FilterOptions;
      13: return

  java.io.InputStream decode(java.lang.String, java.io.InputStream, long, org.apache.commons.compress.archivers.sevenz.Coder, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field opts:Lorg/tukaani/xz/FilterOptions;
       4: aload_2
       5: invokevirtual #4                  // Method org/tukaani/xz/FilterOptions.getInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;
       8: areturn
       9: astore        7
      11: new           #6                  // class java/io/IOException
      14: dup
      15: new           #7                  // class java/lang/StringBuilder
      18: dup
      19: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #9                  // String BCJ filter used in
      24: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #11                 // String  needs XZ for Java > 1.4 - see https://commons.apache.org/proper/commons-compress/limitations.html#7Z
      33: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: aload         7
      41: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      44: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/AssertionError

  java.io.OutputStream encode(java.io.OutputStream, java.lang.Object);
    Code:
       0: new           #14                 // class org/apache/commons/compress/utils/FlushShieldFilterOutputStream
       3: dup
       4: aload_0
       5: getfield      #3                  // Field opts:Lorg/tukaani/xz/FilterOptions;
       8: new           #15                 // class org/tukaani/xz/FinishableWrapperOutputStream
      11: dup
      12: aload_1
      13: invokespecial #16                 // Method org/tukaani/xz/FinishableWrapperOutputStream."<init>":(Ljava/io/OutputStream;)V
      16: invokevirtual #17                 // Method org/tukaani/xz/FilterOptions.getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;
      19: invokespecial #18                 // Method org/apache/commons/compress/utils/FlushShieldFilterOutputStream."<init>":(Ljava/io/OutputStream;)V
      22: areturn
}
