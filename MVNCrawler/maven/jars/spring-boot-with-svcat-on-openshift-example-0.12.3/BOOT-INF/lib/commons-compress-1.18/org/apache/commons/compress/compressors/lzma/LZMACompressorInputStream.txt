Compiled from "LZMACompressorInputStream.java"
public class org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics {
  private final org.apache.commons.compress.utils.CountingInputStream countingStream;

  private final java.io.InputStream in;

  public org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/compress/compressors/CompressorInputStream."<init>":()V
       4: aload_0
       5: new           #2                  // class org/tukaani/xz/LZMAInputStream
       8: dup
       9: aload_0
      10: new           #3                  // class org/apache/commons/compress/utils/CountingInputStream
      13: dup
      14: aload_1
      15: invokespecial #4                  // Method org/apache/commons/compress/utils/CountingInputStream."<init>":(Ljava/io/InputStream;)V
      18: dup_x1
      19: putfield      #5                  // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;
      22: iconst_m1
      23: invokespecial #6                  // Method org/tukaani/xz/LZMAInputStream."<init>":(Ljava/io/InputStream;I)V
      26: putfield      #7                  // Field in:Ljava/io/InputStream;
      29: return

  public org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream(java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/compress/compressors/CompressorInputStream."<init>":()V
       4: aload_0
       5: new           #2                  // class org/tukaani/xz/LZMAInputStream
       8: dup
       9: aload_0
      10: new           #3                  // class org/apache/commons/compress/utils/CountingInputStream
      13: dup
      14: aload_1
      15: invokespecial #4                  // Method org/apache/commons/compress/utils/CountingInputStream."<init>":(Ljava/io/InputStream;)V
      18: dup_x1
      19: putfield      #5                  // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;
      22: iload_2
      23: invokespecial #6                  // Method org/tukaani/xz/LZMAInputStream."<init>":(Ljava/io/InputStream;I)V
      26: putfield      #7                  // Field in:Ljava/io/InputStream;
      29: goto          51
      32: astore_3
      33: new           #9                  // class org/apache/commons/compress/MemoryLimitException
      36: dup
      37: aload_3
      38: invokevirtual #10                 // Method org/tukaani/xz/MemoryLimitException.getMemoryNeeded:()I
      41: i2l
      42: aload_3
      43: invokevirtual #11                 // Method org/tukaani/xz/MemoryLimitException.getMemoryLimit:()I
      46: aload_3
      47: invokespecial #12                 // Method org/apache/commons/compress/MemoryLimitException."<init>":(JILjava/lang/Exception;)V
      50: athrow
      51: return
    Exception table:
       from    to  target type
           4    29    32   Class org/tukaani/xz/MemoryLimitException

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field in:Ljava/io/InputStream;
       4: invokevirtual #13                 // Method java/io/InputStream.read:()I
       7: istore_1
       8: aload_0
       9: iload_1
      10: iconst_m1
      11: if_icmpne     18
      14: iconst_0
      15: goto          19
      18: iconst_1
      19: invokevirtual #14                 // Method count:(I)V
      22: iload_1
      23: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field in:Ljava/io/InputStream;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #15                 // Method java/io/InputStream.read:([BII)I
      10: istore        4
      12: aload_0
      13: iload         4
      15: invokevirtual #14                 // Method count:(I)V
      18: iload         4
      20: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field in:Ljava/io/InputStream;
       4: lload_1
       5: invokestatic  #16                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J
       8: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field in:Ljava/io/InputStream;
       4: invokevirtual #17                 // Method java/io/InputStream.available:()I
       7: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field in:Ljava/io/InputStream;
       4: invokevirtual #18                 // Method java/io/InputStream.close:()V
       7: return

  public long getCompressedCount();
    Code:
       0: aload_0
       1: getfield      #5                  // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;
       4: invokevirtual #19                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J
       7: lreturn

  public static boolean matches(byte[], int);
    Code:
       0: aload_0
       1: ifnull        33
       4: iload_1
       5: iconst_3
       6: if_icmplt     33
       9: aload_0
      10: iconst_0
      11: baload
      12: bipush        93
      14: if_icmpne     33
      17: aload_0
      18: iconst_1
      19: baload
      20: ifne          33
      23: aload_0
      24: iconst_2
      25: baload
      26: ifne          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn
}
