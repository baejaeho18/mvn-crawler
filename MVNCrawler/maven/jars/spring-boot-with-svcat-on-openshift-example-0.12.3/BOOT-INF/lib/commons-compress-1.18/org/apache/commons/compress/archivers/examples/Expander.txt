Compiled from "Expander.java"
public class org.apache.commons.compress.archivers.examples.Expander {
  public org.apache.commons.compress.archivers.examples.Expander();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void expand(java.io.File, java.io.File) throws java.io.IOException, org.apache.commons.compress.archivers.ArchiveException;
    Code:
       0: aconst_null
       1: astore_3
       2: new           #2                  // class java/io/BufferedInputStream
       5: dup
       6: aload_1
       7: invokevirtual #3                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
      10: iconst_0
      11: anewarray     #4                  // class java/nio/file/OpenOption
      14: invokestatic  #5                  // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
      17: invokespecial #6                  // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      20: astore        4
      22: aconst_null
      23: astore        5
      25: new           #7                  // class org/apache/commons/compress/archivers/ArchiveStreamFactory
      28: dup
      29: invokespecial #8                  // Method org/apache/commons/compress/archivers/ArchiveStreamFactory."<init>":()V
      32: pop
      33: aload         4
      35: invokestatic  #9                  // Method org/apache/commons/compress/archivers/ArchiveStreamFactory.detect:(Ljava/io/InputStream;)Ljava/lang/String;
      38: astore_3
      39: aload         4
      41: ifnull        126
      44: aload         5
      46: ifnull        69
      49: aload         4
      51: invokevirtual #10                 // Method java/io/InputStream.close:()V
      54: goto          126
      57: astore        6
      59: aload         5
      61: aload         6
      63: invokevirtual #12                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      66: goto          126
      69: aload         4
      71: invokevirtual #10                 // Method java/io/InputStream.close:()V
      74: goto          126
      77: astore        6
      79: aload         6
      81: astore        5
      83: aload         6
      85: athrow
      86: astore        7
      88: aload         4
      90: ifnull        123
      93: aload         5
      95: ifnull        118
      98: aload         4
     100: invokevirtual #10                 // Method java/io/InputStream.close:()V
     103: goto          123
     106: astore        8
     108: aload         5
     110: aload         8
     112: invokevirtual #12                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     115: goto          123
     118: aload         4
     120: invokevirtual #10                 // Method java/io/InputStream.close:()V
     123: aload         7
     125: athrow
     126: aload_0
     127: aload_3
     128: aload_1
     129: aload_2
     130: invokevirtual #13                 // Method expand:(Ljava/lang/String;Ljava/io/File;Ljava/io/File;)V
     133: return
    Exception table:
       from    to  target type
          49    54    57   Class java/lang/Throwable
          25    39    77   Class java/lang/Throwable
          25    39    86   any
          98   103   106   Class java/lang/Throwable
          77    88    86   any

  public void expand(java.lang.String, java.io.File, java.io.File) throws java.io.IOException, org.apache.commons.compress.archivers.ArchiveException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method prefersSeekableByteChannel:(Ljava/lang/String;)Z
       5: ifeq          134
       8: aload_2
       9: invokevirtual #3                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
      12: iconst_1
      13: anewarray     #4                  // class java/nio/file/OpenOption
      16: dup
      17: iconst_0
      18: getstatic     #15                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
      21: aastore
      22: invokestatic  #16                 // Method java/nio/channels/FileChannel.open:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/FileChannel;
      25: astore        4
      27: aconst_null
      28: astore        5
      30: aload_0
      31: aload_1
      32: aload         4
      34: aload_3
      35: invokevirtual #17                 // Method expand:(Ljava/lang/String;Ljava/nio/channels/SeekableByteChannel;Ljava/io/File;)V
      38: aload         4
      40: ifnull        133
      43: aload         5
      45: ifnull        70
      48: aload         4
      50: invokeinterface #18,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.close:()V
      55: goto          133
      58: astore        6
      60: aload         5
      62: aload         6
      64: invokevirtual #12                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      67: goto          133
      70: aload         4
      72: invokeinterface #18,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.close:()V
      77: goto          133
      80: astore        6
      82: aload         6
      84: astore        5
      86: aload         6
      88: athrow
      89: astore        7
      91: aload         4
      93: ifnull        130
      96: aload         5
      98: ifnull        123
     101: aload         4
     103: invokeinterface #18,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.close:()V
     108: goto          130
     111: astore        8
     113: aload         5
     115: aload         8
     117: invokevirtual #12                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     120: goto          130
     123: aload         4
     125: invokeinterface #18,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.close:()V
     130: aload         7
     132: athrow
     133: return
     134: new           #2                  // class java/io/BufferedInputStream
     137: dup
     138: aload_2
     139: invokevirtual #3                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
     142: iconst_0
     143: anewarray     #4                  // class java/nio/file/OpenOption
     146: invokestatic  #5                  // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
     149: invokespecial #6                  // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
     152: astore        4
     154: aconst_null
     155: astore        5
     157: aload_0
     158: aload_1
     159: aload         4
     161: aload_3
     162: invokevirtual #19                 // Method expand:(Ljava/lang/String;Ljava/io/InputStream;Ljava/io/File;)V
     165: aload         4
     167: ifnull        252
     170: aload         5
     172: ifnull        195
     175: aload         4
     177: invokevirtual #10                 // Method java/io/InputStream.close:()V
     180: goto          252
     183: astore        6
     185: aload         5
     187: aload         6
     189: invokevirtual #12                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     192: goto          252
     195: aload         4
     197: invokevirtual #10                 // Method java/io/InputStream.close:()V
     200: goto          252
     203: astore        6
     205: aload         6
     207: astore        5
     209: aload         6
     211: athrow
     212: astore        9
     214: aload         4
     216: ifnull        249
     219: aload         5
     221: ifnull        244
     224: aload         4
     226: invokevirtual #10                 // Method java/io/InputStream.close:()V
     229: goto          249
     232: astore        10
     234: aload         5
     236: aload         10
     238: invokevirtual #12                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     241: goto          249
     244: aload         4
     246: invokevirtual #10                 // Method java/io/InputStream.close:()V
     249: aload         9
     251: athrow
     252: return
    Exception table:
       from    to  target type
          48    55    58   Class java/lang/Throwable
          30    38    80   Class java/lang/Throwable
          30    38    89   any
         101   108   111   Class java/lang/Throwable
          80    91    89   any
         175   180   183   Class java/lang/Throwable
         157   165   203   Class java/lang/Throwable
         157   165   212   any
         224   229   232   Class java/lang/Throwable
         203   214   212   any

  public void expand(java.io.InputStream, java.io.File) throws java.io.IOException, org.apache.commons.compress.archivers.ArchiveException;
    Code:
       0: aload_0
       1: new           #7                  // class org/apache/commons/compress/archivers/ArchiveStreamFactory
       4: dup
       5: invokespecial #8                  // Method org/apache/commons/compress/archivers/ArchiveStreamFactory."<init>":()V
       8: aload_1
       9: invokevirtual #20                 // Method org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream:(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
      12: aload_2
      13: invokevirtual #21                 // Method expand:(Lorg/apache/commons/compress/archivers/ArchiveInputStream;Ljava/io/File;)V
      16: return

  public void expand(java.lang.String, java.io.InputStream, java.io.File) throws java.io.IOException, org.apache.commons.compress.archivers.ArchiveException;
    Code:
       0: aload_0
       1: new           #7                  // class org/apache/commons/compress/archivers/ArchiveStreamFactory
       4: dup
       5: invokespecial #8                  // Method org/apache/commons/compress/archivers/ArchiveStreamFactory."<init>":()V
       8: aload_1
       9: aload_2
      10: invokevirtual #22                 // Method org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
      13: aload_3
      14: invokevirtual #21                 // Method expand:(Lorg/apache/commons/compress/archivers/ArchiveInputStream;Ljava/io/File;)V
      17: return

  public void expand(java.lang.String, java.nio.channels.SeekableByteChannel, java.io.File) throws java.io.IOException, org.apache.commons.compress.archivers.ArchiveException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method prefersSeekableByteChannel:(Ljava/lang/String;)Z
       5: ifne          21
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokestatic  #23                 // Method java/nio/channels/Channels.newInputStream:(Ljava/nio/channels/ReadableByteChannel;)Ljava/io/InputStream;
      14: aload_3
      15: invokevirtual #19                 // Method expand:(Ljava/lang/String;Ljava/io/InputStream;Ljava/io/File;)V
      18: goto          98
      21: ldc           #24                 // String zip
      23: aload_1
      24: invokevirtual #25                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      27: ifeq          46
      30: aload_0
      31: new           #26                 // class org/apache/commons/compress/archivers/zip/ZipFile
      34: dup
      35: aload_2
      36: invokespecial #27                 // Method org/apache/commons/compress/archivers/zip/ZipFile."<init>":(Ljava/nio/channels/SeekableByteChannel;)V
      39: aload_3
      40: invokevirtual #28                 // Method expand:(Lorg/apache/commons/compress/archivers/zip/ZipFile;Ljava/io/File;)V
      43: goto          98
      46: ldc           #29                 // String 7z
      48: aload_1
      49: invokevirtual #25                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      52: ifeq          71
      55: aload_0
      56: new           #30                 // class org/apache/commons/compress/archivers/sevenz/SevenZFile
      59: dup
      60: aload_2
      61: invokespecial #31                 // Method org/apache/commons/compress/archivers/sevenz/SevenZFile."<init>":(Ljava/nio/channels/SeekableByteChannel;)V
      64: aload_3
      65: invokevirtual #32                 // Method expand:(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;Ljava/io/File;)V
      68: goto          98
      71: new           #33                 // class org/apache/commons/compress/archivers/ArchiveException
      74: dup
      75: new           #34                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #36                 // String don\'t know how to handle format
      84: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_1
      88: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokespecial #39                 // Method org/apache/commons/compress/archivers/ArchiveException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: return

  public void expand(org.apache.commons.compress.archivers.ArchiveInputStream, java.io.File) throws java.io.IOException, org.apache.commons.compress.archivers.ArchiveException;
    Code:
       0: aload_0
       1: new           #40                 // class org/apache/commons/compress/archivers/examples/Expander$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #41                 // Method org/apache/commons/compress/archivers/examples/Expander$1."<init>":(Lorg/apache/commons/compress/archivers/examples/Expander;Lorg/apache/commons/compress/archivers/ArchiveInputStream;)V
      10: new           #42                 // class org/apache/commons/compress/archivers/examples/Expander$2
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #43                 // Method org/apache/commons/compress/archivers/examples/Expander$2."<init>":(Lorg/apache/commons/compress/archivers/examples/Expander;Lorg/apache/commons/compress/archivers/ArchiveInputStream;)V
      19: aload_2
      20: invokespecial #44                 // Method expand:(Lorg/apache/commons/compress/archivers/examples/Expander$ArchiveEntrySupplier;Lorg/apache/commons/compress/archivers/examples/Expander$EntryWriter;Ljava/io/File;)V
      23: return

  public void expand(org.apache.commons.compress.archivers.zip.ZipFile, java.io.File) throws java.io.IOException, org.apache.commons.compress.archivers.ArchiveException;
    Code:
       0: aload_1
       1: invokevirtual #45                 // Method org/apache/commons/compress/archivers/zip/ZipFile.getEntries:()Ljava/util/Enumeration;
       4: astore_3
       5: aload_0
       6: new           #46                 // class org/apache/commons/compress/archivers/examples/Expander$3
       9: dup
      10: aload_0
      11: aload_3
      12: aload_1
      13: invokespecial #47                 // Method org/apache/commons/compress/archivers/examples/Expander$3."<init>":(Lorg/apache/commons/compress/archivers/examples/Expander;Ljava/util/Enumeration;Lorg/apache/commons/compress/archivers/zip/ZipFile;)V
      16: new           #48                 // class org/apache/commons/compress/archivers/examples/Expander$4
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #49                 // Method org/apache/commons/compress/archivers/examples/Expander$4."<init>":(Lorg/apache/commons/compress/archivers/examples/Expander;Lorg/apache/commons/compress/archivers/zip/ZipFile;)V
      25: aload_2
      26: invokespecial #44                 // Method expand:(Lorg/apache/commons/compress/archivers/examples/Expander$ArchiveEntrySupplier;Lorg/apache/commons/compress/archivers/examples/Expander$EntryWriter;Ljava/io/File;)V
      29: return

  public void expand(org.apache.commons.compress.archivers.sevenz.SevenZFile, java.io.File) throws java.io.IOException, org.apache.commons.compress.archivers.ArchiveException;
    Code:
       0: aload_0
       1: new           #50                 // class org/apache/commons/compress/archivers/examples/Expander$5
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #51                 // Method org/apache/commons/compress/archivers/examples/Expander$5."<init>":(Lorg/apache/commons/compress/archivers/examples/Expander;Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)V
      10: new           #52                 // class org/apache/commons/compress/archivers/examples/Expander$6
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #53                 // Method org/apache/commons/compress/archivers/examples/Expander$6."<init>":(Lorg/apache/commons/compress/archivers/examples/Expander;Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;)V
      19: aload_2
      20: invokespecial #44                 // Method expand:(Lorg/apache/commons/compress/archivers/examples/Expander$ArchiveEntrySupplier;Lorg/apache/commons/compress/archivers/examples/Expander$EntryWriter;Ljava/io/File;)V
      23: return

  private boolean prefersSeekableByteChannel(java.lang.String);
    Code:
       0: ldc           #24                 // String zip
       2: aload_1
       3: invokevirtual #25                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifne          18
       9: ldc           #29                 // String 7z
      11: aload_1
      12: invokevirtual #25                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private void expand(org.apache.commons.compress.archivers.examples.Expander$ArchiveEntrySupplier, org.apache.commons.compress.archivers.examples.Expander$EntryWriter, java.io.File) throws java.io.IOException;
    Code:
       0: aload_3
       1: invokevirtual #54                 // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
       4: astore        4
       6: aload         4
       8: getstatic     #55                 // Field java/io/File.separator:Ljava/lang/String;
      11: invokevirtual #56                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      14: ifne          40
      17: new           #34                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      24: aload         4
      26: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: getstatic     #57                 // Field java/io/File.separatorChar:C
      32: invokevirtual #58                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      35: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: astore        4
      40: aload_1
      41: invokeinterface #59,  1           // InterfaceMethod org/apache/commons/compress/archivers/examples/Expander$ArchiveEntrySupplier.getNextReadableEntry:()Lorg/apache/commons/compress/archivers/ArchiveEntry;
      46: astore        5
      48: aload         5
      50: ifnull        355
      53: new           #60                 // class java/io/File
      56: dup
      57: aload_3
      58: aload         5
      60: invokeinterface #61,  1           // InterfaceMethod org/apache/commons/compress/archivers/ArchiveEntry.getName:()Ljava/lang/String;
      65: invokespecial #62                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      68: astore        6
      70: aload         6
      72: invokevirtual #54                 // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      75: aload         4
      77: invokevirtual #63                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      80: ifne          125
      83: new           #64                 // class java/io/IOException
      86: dup
      87: new           #34                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #65                 // String expanding
      96: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload         5
     101: invokeinterface #61,  1           // InterfaceMethod org/apache/commons/compress/archivers/ArchiveEntry.getName:()Ljava/lang/String;
     106: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: ldc           #66                 // String  would create file outside of
     111: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_3
     115: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     118: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: invokespecial #68                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     124: athrow
     125: aload         5
     127: invokeinterface #69,  1           // InterfaceMethod org/apache/commons/compress/archivers/ArchiveEntry.isDirectory:()Z
     132: ifeq          179
     135: aload         6
     137: invokevirtual #70                 // Method java/io/File.isDirectory:()Z
     140: ifne          344
     143: aload         6
     145: invokevirtual #71                 // Method java/io/File.mkdirs:()Z
     148: ifne          344
     151: new           #64                 // class java/io/IOException
     154: dup
     155: new           #34                 // class java/lang/StringBuilder
     158: dup
     159: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     162: ldc           #72                 // String failed to create directory
     164: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: aload         6
     169: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     172: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     175: invokespecial #68                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     178: athrow
     179: aload         6
     181: invokevirtual #73                 // Method java/io/File.getParentFile:()Ljava/io/File;
     184: astore        7
     186: aload         7
     188: invokevirtual #70                 // Method java/io/File.isDirectory:()Z
     191: ifne          230
     194: aload         7
     196: invokevirtual #71                 // Method java/io/File.mkdirs:()Z
     199: ifne          230
     202: new           #64                 // class java/io/IOException
     205: dup
     206: new           #34                 // class java/lang/StringBuilder
     209: dup
     210: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     213: ldc           #72                 // String failed to create directory
     215: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     218: aload         7
     220: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     223: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     226: invokespecial #68                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     229: athrow
     230: aload         6
     232: invokevirtual #3                  // Method java/io/File.toPath:()Ljava/nio/file/Path;
     235: iconst_0
     236: anewarray     #4                  // class java/nio/file/OpenOption
     239: invokestatic  #74                 // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;
     242: astore        8
     244: aconst_null
     245: astore        9
     247: aload_2
     248: aload         5
     250: aload         8
     252: invokeinterface #75,  3           // InterfaceMethod org/apache/commons/compress/archivers/examples/Expander$EntryWriter.writeEntryDataTo:(Lorg/apache/commons/compress/archivers/ArchiveEntry;Ljava/io/OutputStream;)V
     257: aload         8
     259: ifnull        344
     262: aload         9
     264: ifnull        287
     267: aload         8
     269: invokevirtual #76                 // Method java/io/OutputStream.close:()V
     272: goto          344
     275: astore        10
     277: aload         9
     279: aload         10
     281: invokevirtual #12                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     284: goto          344
     287: aload         8
     289: invokevirtual #76                 // Method java/io/OutputStream.close:()V
     292: goto          344
     295: astore        10
     297: aload         10
     299: astore        9
     301: aload         10
     303: athrow
     304: astore        11
     306: aload         8
     308: ifnull        341
     311: aload         9
     313: ifnull        336
     316: aload         8
     318: invokevirtual #76                 // Method java/io/OutputStream.close:()V
     321: goto          341
     324: astore        12
     326: aload         9
     328: aload         12
     330: invokevirtual #12                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     333: goto          341
     336: aload         8
     338: invokevirtual #76                 // Method java/io/OutputStream.close:()V
     341: aload         11
     343: athrow
     344: aload_1
     345: invokeinterface #59,  1           // InterfaceMethod org/apache/commons/compress/archivers/examples/Expander$ArchiveEntrySupplier.getNextReadableEntry:()Lorg/apache/commons/compress/archivers/ArchiveEntry;
     350: astore        5
     352: goto          48
     355: return
    Exception table:
       from    to  target type
         267   272   275   Class java/lang/Throwable
         247   257   295   Class java/lang/Throwable
         247   257   304   any
         316   321   324   Class java/lang/Throwable
         295   306   304   any
}
