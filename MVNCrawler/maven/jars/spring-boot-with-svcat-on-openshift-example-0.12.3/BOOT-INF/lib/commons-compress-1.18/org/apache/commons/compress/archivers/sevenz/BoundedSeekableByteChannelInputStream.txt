Compiled from "BoundedSeekableByteChannelInputStream.java"
class org.apache.commons.compress.archivers.sevenz.BoundedSeekableByteChannelInputStream extends java.io.InputStream {
  private static final int MAX_BUF_LEN;

  private final java.nio.ByteBuffer buffer;

  private final java.nio.channels.SeekableByteChannel channel;

  private long bytesRemaining;

  public org.apache.commons.compress.archivers.sevenz.BoundedSeekableByteChannelInputStream(java.nio.channels.SeekableByteChannel, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field channel:Ljava/nio/channels/SeekableByteChannel;
       9: aload_0
      10: lload_2
      11: putfield      #3                  // Field bytesRemaining:J
      14: lload_2
      15: ldc2_w        #5                  // long 8192l
      18: lcmp
      19: ifge          40
      22: lload_2
      23: lconst_0
      24: lcmp
      25: ifle          40
      28: aload_0
      29: lload_2
      30: l2i
      31: invokestatic  #7                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      34: putfield      #8                  // Field buffer:Ljava/nio/ByteBuffer;
      37: goto          50
      40: aload_0
      41: sipush        8192
      44: invokestatic  #7                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      47: putfield      #8                  // Field buffer:Ljava/nio/ByteBuffer;
      50: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field bytesRemaining:J
       4: lconst_0
       5: lcmp
       6: ifle          43
       9: aload_0
      10: dup
      11: getfield      #3                  // Field bytesRemaining:J
      14: lconst_1
      15: lsub
      16: putfield      #3                  // Field bytesRemaining:J
      19: aload_0
      20: iconst_1
      21: invokespecial #9                  // Method read:(I)I
      24: istore_1
      25: iload_1
      26: ifge          31
      29: iload_1
      30: ireturn
      31: aload_0
      32: getfield      #8                  // Field buffer:Ljava/nio/ByteBuffer;
      35: invokevirtual #10                 // Method java/nio/ByteBuffer.get:()B
      38: sipush        255
      41: iand
      42: ireturn
      43: iconst_m1
      44: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field bytesRemaining:J
       4: lconst_0
       5: lcmp
       6: ifne          11
       9: iconst_m1
      10: ireturn
      11: iload_3
      12: istore        4
      14: iload         4
      16: i2l
      17: aload_0
      18: getfield      #3                  // Field bytesRemaining:J
      21: lcmp
      22: ifle          32
      25: aload_0
      26: getfield      #3                  // Field bytesRemaining:J
      29: l2i
      30: istore        4
      32: iload         4
      34: aload_0
      35: getfield      #8                  // Field buffer:Ljava/nio/ByteBuffer;
      38: invokevirtual #11                 // Method java/nio/ByteBuffer.capacity:()I
      41: if_icmpgt     61
      44: aload_0
      45: getfield      #8                  // Field buffer:Ljava/nio/ByteBuffer;
      48: astore        6
      50: aload_0
      51: iload         4
      53: invokespecial #9                  // Method read:(I)I
      56: istore        5
      58: goto          87
      61: iload         4
      63: invokestatic  #7                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      66: astore        6
      68: aload_0
      69: getfield      #2                  // Field channel:Ljava/nio/channels/SeekableByteChannel;
      72: aload         6
      74: invokeinterface #12,  2           // InterfaceMethod java/nio/channels/SeekableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      79: istore        5
      81: aload         6
      83: invokevirtual #13                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      86: pop
      87: iload         5
      89: iflt          114
      92: aload         6
      94: aload_1
      95: iload_2
      96: iload         5
      98: invokevirtual #14                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     101: pop
     102: aload_0
     103: dup
     104: getfield      #3                  // Field bytesRemaining:J
     107: iload         5
     109: i2l
     110: lsub
     111: putfield      #3                  // Field bytesRemaining:J
     114: iload         5
     116: ireturn

  private int read(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #15                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
       7: iload_1
       8: invokevirtual #16                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      11: pop
      12: aload_0
      13: getfield      #2                  // Field channel:Ljava/nio/channels/SeekableByteChannel;
      16: aload_0
      17: getfield      #8                  // Field buffer:Ljava/nio/ByteBuffer;
      20: invokeinterface #12,  2           // InterfaceMethod java/nio/channels/SeekableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      25: istore_2
      26: aload_0
      27: getfield      #8                  // Field buffer:Ljava/nio/ByteBuffer;
      30: invokevirtual #13                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      33: pop
      34: iload_2
      35: ireturn

  public void close();
    Code:
       0: return
}
