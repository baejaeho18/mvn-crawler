Compiled from "BeanFactory.java"
public interface org.springframework.beans.factory.BeanFactory {
  public static final java.lang.String FACTORY_BEAN_PREFIX;

  public abstract java.lang.Object getBean(java.lang.String) throws org.springframework.beans.BeansException;

  public abstract <T> T getBean(java.lang.String, java.lang.Class<T>) throws org.springframework.beans.BeansException;

  public abstract java.lang.Object getBean(java.lang.String, java.lang.Object...) throws org.springframework.beans.BeansException;

  public abstract <T> T getBean(java.lang.Class<T>) throws org.springframework.beans.BeansException;

  public abstract <T> T getBean(java.lang.Class<T>, java.lang.Object...) throws org.springframework.beans.BeansException;

  public abstract <T> org.springframework.beans.factory.ObjectProvider<T> getBeanProvider(java.lang.Class<T>);

  public abstract <T> org.springframework.beans.factory.ObjectProvider<T> getBeanProvider(org.springframework.core.ResolvableType);

  public abstract boolean containsBean(java.lang.String);

  public abstract boolean isSingleton(java.lang.String) throws org.springframework.beans.factory.NoSuchBeanDefinitionException;

  public abstract boolean isPrototype(java.lang.String) throws org.springframework.beans.factory.NoSuchBeanDefinitionException;

  public abstract boolean isTypeMatch(java.lang.String, org.springframework.core.ResolvableType) throws org.springframework.beans.factory.NoSuchBeanDefinitionException;

  public abstract boolean isTypeMatch(java.lang.String, java.lang.Class<?>) throws org.springframework.beans.factory.NoSuchBeanDefinitionException;

  public abstract java.lang.Class<?> getType(java.lang.String) throws org.springframework.beans.factory.NoSuchBeanDefinitionException;

  public abstract java.lang.String[] getAliases(java.lang.String);
}
