Compiled from "AbstractPropertyAccessor.java"
public abstract class org.springframework.beans.AbstractPropertyAccessor extends org.springframework.beans.TypeConverterSupport implements org.springframework.beans.ConfigurablePropertyAccessor {
  private boolean extractOldValueForEditor;

  private boolean autoGrowNestedPaths;

  public org.springframework.beans.AbstractPropertyAccessor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/beans/TypeConverterSupport."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field extractOldValueForEditor:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field autoGrowNestedPaths:Z
      14: return

  public void setExtractOldValueForEditor(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field extractOldValueForEditor:Z
       5: return

  public boolean isExtractOldValueForEditor();
    Code:
       0: aload_0
       1: getfield      #2                  // Field extractOldValueForEditor:Z
       4: ireturn

  public void setAutoGrowNestedPaths(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field autoGrowNestedPaths:Z
       5: return

  public boolean isAutoGrowNestedPaths();
    Code:
       0: aload_0
       1: getfield      #3                  // Field autoGrowNestedPaths:Z
       4: ireturn

  public void setPropertyValue(org.springframework.beans.PropertyValue) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method org/springframework/beans/PropertyValue.getName:()Ljava/lang/String;
       5: aload_1
       6: invokevirtual #5                  // Method org/springframework/beans/PropertyValue.getValue:()Ljava/lang/Object;
       9: invokevirtual #6                  // Method setPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  public void setPropertyValues(java.util.Map<?, ?>) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: new           #7                  // class org/springframework/beans/MutablePropertyValues
       4: dup
       5: aload_1
       6: invokespecial #8                  // Method org/springframework/beans/MutablePropertyValues."<init>":(Ljava/util/Map;)V
       9: invokevirtual #9                  // Method setPropertyValues:(Lorg/springframework/beans/PropertyValues;)V
      12: return

  public void setPropertyValues(org.springframework.beans.PropertyValues) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_0
       4: invokevirtual #10                 // Method setPropertyValues:(Lorg/springframework/beans/PropertyValues;ZZ)V
       7: return

  public void setPropertyValues(org.springframework.beans.PropertyValues, boolean) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_0
       4: invokevirtual #10                 // Method setPropertyValues:(Lorg/springframework/beans/PropertyValues;ZZ)V
       7: return

  public void setPropertyValues(org.springframework.beans.PropertyValues, boolean, boolean) throws org.springframework.beans.BeansException;
    Code:
       0: aconst_null
       1: astore        4
       3: aload_1
       4: instanceof    #7                  // class org/springframework/beans/MutablePropertyValues
       7: ifeq          20
      10: aload_1
      11: checkcast     #7                  // class org/springframework/beans/MutablePropertyValues
      14: invokevirtual #11                 // Method org/springframework/beans/MutablePropertyValues.getPropertyValueList:()Ljava/util/List;
      17: goto          29
      20: aload_1
      21: invokeinterface #12,  1           // InterfaceMethod org/springframework/beans/PropertyValues.getPropertyValues:()[Lorg/springframework/beans/PropertyValue;
      26: invokestatic  #13                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      29: astore        5
      31: aload         5
      33: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      38: astore        6
      40: aload         6
      42: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          124
      50: aload         6
      52: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #17                 // class org/springframework/beans/PropertyValue
      60: astore        7
      62: aload_0
      63: aload         7
      65: invokevirtual #18                 // Method setPropertyValue:(Lorg/springframework/beans/PropertyValue;)V
      68: goto          121
      71: astore        8
      73: iload_2
      74: ifne          80
      77: aload         8
      79: athrow
      80: goto          121
      83: astore        8
      85: iload_3
      86: ifne          92
      89: aload         8
      91: athrow
      92: goto          121
      95: astore        8
      97: aload         4
      99: ifnonnull     111
     102: new           #22                 // class java/util/ArrayList
     105: dup
     106: invokespecial #23                 // Method java/util/ArrayList."<init>":()V
     109: astore        4
     111: aload         4
     113: aload         8
     115: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     120: pop
     121: goto          40
     124: aload         4
     126: ifnull        155
     129: aload         4
     131: iconst_0
     132: anewarray     #21                 // class org/springframework/beans/PropertyAccessException
     135: invokeinterface #25,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     140: checkcast     #26                 // class "[Lorg/springframework/beans/PropertyAccessException;"
     143: astore        6
     145: new           #27                 // class org/springframework/beans/PropertyBatchUpdateException
     148: dup
     149: aload         6
     151: invokespecial #28                 // Method org/springframework/beans/PropertyBatchUpdateException."<init>":([Lorg/springframework/beans/PropertyAccessException;)V
     154: athrow
     155: return
    Exception table:
       from    to  target type
          62    68    71   Class org/springframework/beans/NotWritablePropertyException
          62    68    83   Class org/springframework/beans/NullValueInNestedPathException
          62    68    95   Class org/springframework/beans/PropertyAccessException

  public java.lang.Class<?> getPropertyType(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public abstract java.lang.Object getPropertyValue(java.lang.String) throws org.springframework.beans.BeansException;

  public abstract void setPropertyValue(java.lang.String, java.lang.Object) throws org.springframework.beans.BeansException;
}
