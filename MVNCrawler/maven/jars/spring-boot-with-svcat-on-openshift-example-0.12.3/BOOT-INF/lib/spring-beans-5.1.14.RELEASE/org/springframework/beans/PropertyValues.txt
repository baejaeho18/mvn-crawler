Compiled from "PropertyValues.java"
public interface org.springframework.beans.PropertyValues extends java.lang.Iterable<org.springframework.beans.PropertyValue> {
  public default java.util.Iterator<org.springframework.beans.PropertyValue> iterator();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getPropertyValues:()[Lorg/springframework/beans/PropertyValue;
       6: invokestatic  #2                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       9: invokeinterface #3,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: areturn

  public default java.util.Spliterator<org.springframework.beans.PropertyValue> spliterator();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getPropertyValues:()[Lorg/springframework/beans/PropertyValue;
       6: iconst_0
       7: invokestatic  #4                  // Method java/util/Spliterators.spliterator:([Ljava/lang/Object;I)Ljava/util/Spliterator;
      10: areturn

  public default java.util.stream.Stream<org.springframework.beans.PropertyValue> stream();
    Code:
       0: aload_0
       1: invokeinterface #5,  1            // InterfaceMethod spliterator:()Ljava/util/Spliterator;
       6: iconst_0
       7: invokestatic  #6                  // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
      10: areturn

  public abstract org.springframework.beans.PropertyValue[] getPropertyValues();

  public abstract org.springframework.beans.PropertyValue getPropertyValue(java.lang.String);

  public abstract org.springframework.beans.PropertyValues changesSince(org.springframework.beans.PropertyValues);

  public abstract boolean contains(java.lang.String);

  public abstract boolean isEmpty();
}
