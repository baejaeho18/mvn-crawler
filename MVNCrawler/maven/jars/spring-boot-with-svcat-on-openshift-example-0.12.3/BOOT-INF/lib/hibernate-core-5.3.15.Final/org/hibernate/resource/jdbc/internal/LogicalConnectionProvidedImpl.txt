Compiled from "LogicalConnectionProvidedImpl.java"
public class org.hibernate.resource.jdbc.internal.LogicalConnectionProvidedImpl extends org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor {
  private static final org.jboss.logging.Logger log;

  private transient java.sql.Connection providedConnection;

  private final boolean initiallyAutoCommit;

  private boolean closed;

  public org.hibernate.resource.jdbc.internal.LogicalConnectionProvidedImpl(java.sql.Connection, org.hibernate.resource.jdbc.ResourceRegistry);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hibernate/resource/jdbc/internal/AbstractLogicalConnectionImplementor."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field resourceRegistry:Lorg/hibernate/resource/jdbc/ResourceRegistry;
       9: aload_1
      10: ifnonnull     23
      13: new           #3                  // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #4                  // String Provided Connection cannot be null
      19: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: aload_1
      25: putfield      #6                  // Field providedConnection:Ljava/sql/Connection;
      28: aload_0
      29: aload_1
      30: invokestatic  #7                  // Method determineInitialAutoCommitMode:(Ljava/sql/Connection;)Z
      33: putfield      #8                  // Field initiallyAutoCommit:Z
      36: return

  private org.hibernate.resource.jdbc.internal.LogicalConnectionProvidedImpl(boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hibernate/resource/jdbc/internal/AbstractLogicalConnectionImplementor."<init>":()V
       4: aload_0
       5: new           #9                  // class org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl
       8: dup
       9: invokespecial #10                 // Method org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl."<init>":()V
      12: putfield      #2                  // Field resourceRegistry:Lorg/hibernate/resource/jdbc/ResourceRegistry;
      15: aload_0
      16: iload_1
      17: putfield      #11                 // Field closed:Z
      20: aload_0
      21: iload_2
      22: putfield      #8                  // Field initiallyAutoCommit:Z
      25: return

  public org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode getConnectionHandlingMode();
    Code:
       0: getstatic     #12                 // Field org/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode.IMMEDIATE_ACQUISITION_AND_HOLD:Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
       3: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #11                 // Field closed:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.sql.Connection close();
    Code:
       0: getstatic     #13                 // Field log:Lorg/jboss/logging/Logger;
       3: ldc           #14                 // String Closing logical connection
       5: invokevirtual #15                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
       8: aload_0
       9: invokevirtual #16                 // Method getResourceRegistry:()Lorg/hibernate/resource/jdbc/ResourceRegistry;
      12: invokeinterface #17,  1           // InterfaceMethod org/hibernate/resource/jdbc/ResourceRegistry.releaseResources:()V
      17: aload_0
      18: getfield      #6                  // Field providedConnection:Ljava/sql/Connection;
      21: astore_1
      22: aload_0
      23: aconst_null
      24: putfield      #6                  // Field providedConnection:Ljava/sql/Connection;
      27: aload_0
      28: iconst_1
      29: putfield      #11                 // Field closed:Z
      32: getstatic     #13                 // Field log:Lorg/jboss/logging/Logger;
      35: ldc           #18                 // String Logical connection closed
      37: invokevirtual #15                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      40: aload_1
      41: areturn
      42: astore_2
      43: aload_0
      44: aconst_null
      45: putfield      #6                  // Field providedConnection:Ljava/sql/Connection;
      48: aload_0
      49: iconst_1
      50: putfield      #11                 // Field closed:Z
      53: getstatic     #13                 // Field log:Lorg/jboss/logging/Logger;
      56: ldc           #18                 // String Logical connection closed
      58: invokevirtual #15                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      61: aload_2
      62: athrow
    Exception table:
       from    to  target type
          17    22    42   any

  public boolean isPhysicallyConnected();
    Code:
       0: aload_0
       1: getfield      #6                  // Field providedConnection:Ljava/sql/Connection;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.sql.Connection getPhysicalConnection();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method errorIfClosed:()V
       4: aload_0
       5: getfield      #6                  // Field providedConnection:Ljava/sql/Connection;
       8: areturn

  public org.hibernate.resource.jdbc.spi.LogicalConnectionImplementor makeShareableCopy();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method errorIfClosed:()V
       4: new           #20                 // class org/hibernate/resource/jdbc/internal/LogicalConnectionProvidedImpl
       7: dup
       8: aload_0
       9: getfield      #6                  // Field providedConnection:Ljava/sql/Connection;
      12: new           #9                  // class org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl
      15: dup
      16: invokespecial #10                 // Method org/hibernate/resource/jdbc/internal/ResourceRegistryStandardImpl."<init>":()V
      19: invokespecial #21                 // Method "<init>":(Ljava/sql/Connection;Lorg/hibernate/resource/jdbc/ResourceRegistry;)V
      22: areturn

  public void serialize(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #11                 // Field closed:Z
       5: invokevirtual #22                 // Method java/io/ObjectOutputStream.writeBoolean:(Z)V
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field initiallyAutoCommit:Z
      13: invokevirtual #22                 // Method java/io/ObjectOutputStream.writeBoolean:(Z)V
      16: return

  public static org.hibernate.resource.jdbc.internal.LogicalConnectionProvidedImpl deserialize(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method java/io/ObjectInputStream.readBoolean:()Z
       4: istore_1
       5: aload_0
       6: invokevirtual #23                 // Method java/io/ObjectInputStream.readBoolean:()Z
       9: istore_2
      10: new           #20                 // class org/hibernate/resource/jdbc/internal/LogicalConnectionProvidedImpl
      13: dup
      14: iload_1
      15: iload_2
      16: invokespecial #24                 // Method "<init>":(ZZ)V
      19: areturn

  public java.sql.Connection manualDisconnect();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method errorIfClosed:()V
       4: aload_0
       5: getfield      #2                  // Field resourceRegistry:Lorg/hibernate/resource/jdbc/ResourceRegistry;
       8: invokeinterface #17,  1           // InterfaceMethod org/hibernate/resource/jdbc/ResourceRegistry.releaseResources:()V
      13: aload_0
      14: getfield      #6                  // Field providedConnection:Ljava/sql/Connection;
      17: astore_1
      18: aload_0
      19: aconst_null
      20: putfield      #6                  // Field providedConnection:Ljava/sql/Connection;
      23: aload_1
      24: areturn
      25: astore_2
      26: aload_0
      27: aconst_null
      28: putfield      #6                  // Field providedConnection:Ljava/sql/Connection;
      31: aload_2
      32: athrow
    Exception table:
       from    to  target type
           4    18    25   any

  public void manualReconnect(java.sql.Connection);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method errorIfClosed:()V
       4: aload_1
       5: ifnonnull     18
       8: new           #3                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #25                 // String cannot reconnect using a null connection
      14: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_1
      19: aload_0
      20: getfield      #6                  // Field providedConnection:Ljava/sql/Connection;
      23: if_acmpne     37
      26: getstatic     #13                 // Field log:Lorg/jboss/logging/Logger;
      29: ldc           #26                 // String reconnecting the same connection that is already connected; should this connection have been disconnected?
      31: invokevirtual #27                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      34: goto          54
      37: aload_0
      38: getfield      #6                  // Field providedConnection:Ljava/sql/Connection;
      41: ifnull        54
      44: new           #3                  // class java/lang/IllegalArgumentException
      47: dup
      48: ldc           #28                 // String cannot reconnect to a new user-supplied connection because currently connected; must disconnect before reconnecting.
      50: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_0
      55: aload_1
      56: putfield      #6                  // Field providedConnection:Ljava/sql/Connection;
      59: getstatic     #13                 // Field log:Lorg/jboss/logging/Logger;
      62: ldc           #29                 // String Manually reconnected logical connection
      64: invokevirtual #27                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      67: return

  protected java.sql.Connection getConnectionForTransactionManagement();
    Code:
       0: aload_0
       1: getfield      #6                  // Field providedConnection:Ljava/sql/Connection;
       4: areturn

  protected void afterCompletion();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method afterTransaction:()V
       4: aload_0
       5: aload_0
       6: getfield      #8                  // Field initiallyAutoCommit:Z
       9: invokevirtual #31                 // Method resetConnection:(Z)V
      12: return

  static {};
    Code:
       0: ldc           #32                 // class org/hibernate/resource/jdbc/LogicalConnection
       2: invokestatic  #33                 // Method org/jboss/logging/Logger.getLogger:(Ljava/lang/Class;)Lorg/jboss/logging/Logger;
       5: putstatic     #13                 // Field log:Lorg/jboss/logging/Logger;
       8: return
}
