Compiled from "CacheConcurrencyStrategy.java"
public final class org.hibernate.annotations.CacheConcurrencyStrategy extends java.lang.Enum<org.hibernate.annotations.CacheConcurrencyStrategy> {
  public static final org.hibernate.annotations.CacheConcurrencyStrategy NONE;

  public static final org.hibernate.annotations.CacheConcurrencyStrategy READ_ONLY;

  public static final org.hibernate.annotations.CacheConcurrencyStrategy NONSTRICT_READ_WRITE;

  public static final org.hibernate.annotations.CacheConcurrencyStrategy READ_WRITE;

  public static final org.hibernate.annotations.CacheConcurrencyStrategy TRANSACTIONAL;

  private final org.hibernate.cache.spi.access.AccessType accessType;

  private static final org.hibernate.annotations.CacheConcurrencyStrategy[] $VALUES;

  public static org.hibernate.annotations.CacheConcurrencyStrategy[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/hibernate/annotations/CacheConcurrencyStrategy;
       3: invokevirtual #2                  // Method "[Lorg/hibernate/annotations/CacheConcurrencyStrategy;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/hibernate/annotations/CacheConcurrencyStrategy;"
       9: areturn

  public static org.hibernate.annotations.CacheConcurrencyStrategy valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/hibernate/annotations/CacheConcurrencyStrategy
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/hibernate/annotations/CacheConcurrencyStrategy
       9: areturn

  private org.hibernate.annotations.CacheConcurrencyStrategy(org.hibernate.cache.spi.access.AccessType);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #7                  // Field accessType:Lorg/hibernate/cache/spi/access/AccessType;
      11: return

  public org.hibernate.cache.spi.access.AccessType toAccessType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field accessType:Lorg/hibernate/cache/spi/access/AccessType;
       4: areturn

  public static org.hibernate.annotations.CacheConcurrencyStrategy fromAccessType(org.hibernate.cache.spi.access.AccessType);
    Code:
       0: aconst_null
       1: aload_0
       2: if_acmpne     9
       5: getstatic     #8                  // Field NONE:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
       8: areturn
       9: getstatic     #9                  // Field org/hibernate/annotations/CacheConcurrencyStrategy$1.$SwitchMap$org$hibernate$cache$spi$access$AccessType:[I
      12: aload_0
      13: invokevirtual #10                 // Method org/hibernate/cache/spi/access/AccessType.ordinal:()I
      16: iaload
      17: tableswitch   { // 1 to 4
                     1: 48
                     2: 52
                     3: 56
                     4: 60
               default: 64
          }
      48: getstatic     #11                 // Field READ_ONLY:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      51: areturn
      52: getstatic     #12                 // Field READ_WRITE:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      55: areturn
      56: getstatic     #13                 // Field NONSTRICT_READ_WRITE:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      59: areturn
      60: getstatic     #14                 // Field TRANSACTIONAL:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      63: areturn
      64: getstatic     #8                  // Field NONE:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      67: areturn

  public static org.hibernate.annotations.CacheConcurrencyStrategy parse(java.lang.String);
    Code:
       0: getstatic     #11                 // Field READ_ONLY:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
       3: aload_0
       4: invokespecial #15                 // Method isMatch:(Ljava/lang/String;)Z
       7: ifeq          14
      10: getstatic     #11                 // Field READ_ONLY:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      13: areturn
      14: getstatic     #12                 // Field READ_WRITE:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      17: aload_0
      18: invokespecial #15                 // Method isMatch:(Ljava/lang/String;)Z
      21: ifeq          28
      24: getstatic     #12                 // Field READ_WRITE:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      27: areturn
      28: getstatic     #13                 // Field NONSTRICT_READ_WRITE:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      31: aload_0
      32: invokespecial #15                 // Method isMatch:(Ljava/lang/String;)Z
      35: ifeq          42
      38: getstatic     #13                 // Field NONSTRICT_READ_WRITE:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      41: areturn
      42: getstatic     #14                 // Field TRANSACTIONAL:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      45: aload_0
      46: invokespecial #15                 // Method isMatch:(Ljava/lang/String;)Z
      49: ifeq          56
      52: getstatic     #14                 // Field TRANSACTIONAL:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      55: areturn
      56: getstatic     #8                  // Field NONE:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      59: aload_0
      60: invokespecial #15                 // Method isMatch:(Ljava/lang/String;)Z
      63: ifeq          70
      66: getstatic     #8                  // Field NONE:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      69: areturn
      70: aconst_null
      71: areturn

  private boolean isMatch(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field accessType:Lorg/hibernate/cache/spi/access/AccessType;
       4: ifnull        21
       7: aload_0
       8: getfield      #7                  // Field accessType:Lorg/hibernate/cache/spi/access/AccessType;
      11: invokevirtual #16                 // Method org/hibernate/cache/spi/access/AccessType.getExternalName:()Ljava/lang/String;
      14: aload_1
      15: invokevirtual #17                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      18: ifne          32
      21: aload_0
      22: invokevirtual #18                 // Method name:()Ljava/lang/String;
      25: aload_1
      26: invokevirtual #17                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  static {};
    Code:
       0: new           #4                  // class org/hibernate/annotations/CacheConcurrencyStrategy
       3: dup
       4: ldc           #19                 // String NONE
       6: iconst_0
       7: aconst_null
       8: invokespecial #20                 // Method "<init>":(Ljava/lang/String;ILorg/hibernate/cache/spi/access/AccessType;)V
      11: putstatic     #8                  // Field NONE:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      14: new           #4                  // class org/hibernate/annotations/CacheConcurrencyStrategy
      17: dup
      18: ldc           #21                 // String READ_ONLY
      20: iconst_1
      21: getstatic     #22                 // Field org/hibernate/cache/spi/access/AccessType.READ_ONLY:Lorg/hibernate/cache/spi/access/AccessType;
      24: invokespecial #20                 // Method "<init>":(Ljava/lang/String;ILorg/hibernate/cache/spi/access/AccessType;)V
      27: putstatic     #11                 // Field READ_ONLY:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      30: new           #4                  // class org/hibernate/annotations/CacheConcurrencyStrategy
      33: dup
      34: ldc           #23                 // String NONSTRICT_READ_WRITE
      36: iconst_2
      37: getstatic     #24                 // Field org/hibernate/cache/spi/access/AccessType.NONSTRICT_READ_WRITE:Lorg/hibernate/cache/spi/access/AccessType;
      40: invokespecial #20                 // Method "<init>":(Ljava/lang/String;ILorg/hibernate/cache/spi/access/AccessType;)V
      43: putstatic     #13                 // Field NONSTRICT_READ_WRITE:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      46: new           #4                  // class org/hibernate/annotations/CacheConcurrencyStrategy
      49: dup
      50: ldc           #25                 // String READ_WRITE
      52: iconst_3
      53: getstatic     #26                 // Field org/hibernate/cache/spi/access/AccessType.READ_WRITE:Lorg/hibernate/cache/spi/access/AccessType;
      56: invokespecial #20                 // Method "<init>":(Ljava/lang/String;ILorg/hibernate/cache/spi/access/AccessType;)V
      59: putstatic     #12                 // Field READ_WRITE:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      62: new           #4                  // class org/hibernate/annotations/CacheConcurrencyStrategy
      65: dup
      66: ldc           #27                 // String TRANSACTIONAL
      68: iconst_4
      69: getstatic     #28                 // Field org/hibernate/cache/spi/access/AccessType.TRANSACTIONAL:Lorg/hibernate/cache/spi/access/AccessType;
      72: invokespecial #20                 // Method "<init>":(Ljava/lang/String;ILorg/hibernate/cache/spi/access/AccessType;)V
      75: putstatic     #14                 // Field TRANSACTIONAL:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      78: iconst_5
      79: anewarray     #4                  // class org/hibernate/annotations/CacheConcurrencyStrategy
      82: dup
      83: iconst_0
      84: getstatic     #8                  // Field NONE:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      87: aastore
      88: dup
      89: iconst_1
      90: getstatic     #11                 // Field READ_ONLY:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      93: aastore
      94: dup
      95: iconst_2
      96: getstatic     #13                 // Field NONSTRICT_READ_WRITE:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
      99: aastore
     100: dup
     101: iconst_3
     102: getstatic     #12                 // Field READ_WRITE:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
     105: aastore
     106: dup
     107: iconst_4
     108: getstatic     #14                 // Field TRANSACTIONAL:Lorg/hibernate/annotations/CacheConcurrencyStrategy;
     111: aastore
     112: putstatic     #1                  // Field $VALUES:[Lorg/hibernate/annotations/CacheConcurrencyStrategy;
     115: return
}
