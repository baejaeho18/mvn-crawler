Compiled from "AbstractNonIdentifierAttribute.java"
public abstract class org.hibernate.tuple.AbstractNonIdentifierAttribute extends org.hibernate.tuple.AbstractAttribute implements org.hibernate.tuple.NonIdentifierAttribute {
  private final org.hibernate.persister.walking.spi.AttributeSource source;

  private final org.hibernate.engine.spi.SessionFactoryImplementor sessionFactory;

  private final int attributeNumber;

  private final org.hibernate.tuple.BaselineAttributeInformation attributeInformation;

  protected org.hibernate.tuple.AbstractNonIdentifierAttribute(org.hibernate.persister.walking.spi.AttributeSource, org.hibernate.engine.spi.SessionFactoryImplementor, int, java.lang.String, org.hibernate.type.Type, org.hibernate.tuple.BaselineAttributeInformation);
    Code:
       0: aload_0
       1: aload         4
       3: aload         5
       5: invokespecial #1                  // Method org/hibernate/tuple/AbstractAttribute."<init>":(Ljava/lang/String;Lorg/hibernate/type/Type;)V
       8: aload_0
       9: aload_1
      10: putfield      #2                  // Field source:Lorg/hibernate/persister/walking/spi/AttributeSource;
      13: aload_0
      14: aload_2
      15: putfield      #3                  // Field sessionFactory:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
      18: aload_0
      19: iload_3
      20: putfield      #4                  // Field attributeNumber:I
      23: aload_0
      24: aload         6
      26: putfield      #5                  // Field attributeInformation:Lorg/hibernate/tuple/BaselineAttributeInformation;
      29: return

  public org.hibernate.persister.walking.spi.AttributeSource getSource();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method source:()Lorg/hibernate/persister/walking/spi/AttributeSource;
       4: areturn

  protected org.hibernate.persister.walking.spi.AttributeSource source();
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lorg/hibernate/persister/walking/spi/AttributeSource;
       4: areturn

  protected org.hibernate.engine.spi.SessionFactoryImplementor sessionFactory();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sessionFactory:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       4: areturn

  protected int attributeNumber();
    Code:
       0: aload_0
       1: getfield      #4                  // Field attributeNumber:I
       4: ireturn

  public boolean isLazy();
    Code:
       0: aload_0
       1: getfield      #5                  // Field attributeInformation:Lorg/hibernate/tuple/BaselineAttributeInformation;
       4: invokevirtual #7                  // Method org/hibernate/tuple/BaselineAttributeInformation.isLazy:()Z
       7: ireturn

  public boolean isInsertable();
    Code:
       0: aload_0
       1: getfield      #5                  // Field attributeInformation:Lorg/hibernate/tuple/BaselineAttributeInformation;
       4: invokevirtual #8                  // Method org/hibernate/tuple/BaselineAttributeInformation.isInsertable:()Z
       7: ireturn

  public boolean isUpdateable();
    Code:
       0: aload_0
       1: getfield      #5                  // Field attributeInformation:Lorg/hibernate/tuple/BaselineAttributeInformation;
       4: invokevirtual #9                  // Method org/hibernate/tuple/BaselineAttributeInformation.isUpdateable:()Z
       7: ireturn

  public org.hibernate.tuple.ValueGeneration getValueGenerationStrategy();
    Code:
       0: aload_0
       1: getfield      #5                  // Field attributeInformation:Lorg/hibernate/tuple/BaselineAttributeInformation;
       4: invokevirtual #10                 // Method org/hibernate/tuple/BaselineAttributeInformation.getValueGenerationStrategy:()Lorg/hibernate/tuple/ValueGeneration;
       7: areturn

  public boolean isNullable();
    Code:
       0: aload_0
       1: getfield      #5                  // Field attributeInformation:Lorg/hibernate/tuple/BaselineAttributeInformation;
       4: invokevirtual #11                 // Method org/hibernate/tuple/BaselineAttributeInformation.isNullable:()Z
       7: ireturn

  public boolean isDirtyCheckable();
    Code:
       0: aload_0
       1: getfield      #5                  // Field attributeInformation:Lorg/hibernate/tuple/BaselineAttributeInformation;
       4: invokevirtual #12                 // Method org/hibernate/tuple/BaselineAttributeInformation.isDirtyCheckable:()Z
       7: ireturn

  public boolean isDirtyCheckable(boolean);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isDirtyCheckable:()Z
       4: ireturn

  public boolean isVersionable();
    Code:
       0: aload_0
       1: getfield      #5                  // Field attributeInformation:Lorg/hibernate/tuple/BaselineAttributeInformation;
       4: invokevirtual #14                 // Method org/hibernate/tuple/BaselineAttributeInformation.isVersionable:()Z
       7: ireturn

  public org.hibernate.engine.spi.CascadeStyle getCascadeStyle();
    Code:
       0: aload_0
       1: getfield      #5                  // Field attributeInformation:Lorg/hibernate/tuple/BaselineAttributeInformation;
       4: invokevirtual #15                 // Method org/hibernate/tuple/BaselineAttributeInformation.getCascadeStyle:()Lorg/hibernate/engine/spi/CascadeStyle;
       7: areturn

  public org.hibernate.FetchMode getFetchMode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field attributeInformation:Lorg/hibernate/tuple/BaselineAttributeInformation;
       4: invokevirtual #16                 // Method org/hibernate/tuple/BaselineAttributeInformation.getFetchMode:()Lorg/hibernate/FetchMode;
       7: areturn

  protected java.lang.String loggableMetadata();
    Code:
       0: ldc           #17                 // String non-identifier
       2: areturn

  public java.lang.String toString();
    Code:
       0: new           #18                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #20                 // String Attribute(name=
       9: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #22                 // Method getName:()Ljava/lang/String;
      16: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #23                 // String , type=
      21: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #24                 // Method getType:()Lorg/hibernate/type/Type;
      28: invokeinterface #25,  1           // InterfaceMethod org/hibernate/type/Type.getName:()Ljava/lang/String;
      33: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #26                 // String  [
      38: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: invokevirtual #27                 // Method loggableMetadata:()Ljava/lang/String;
      45: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #28                 // String ])
      50: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: areturn
}
