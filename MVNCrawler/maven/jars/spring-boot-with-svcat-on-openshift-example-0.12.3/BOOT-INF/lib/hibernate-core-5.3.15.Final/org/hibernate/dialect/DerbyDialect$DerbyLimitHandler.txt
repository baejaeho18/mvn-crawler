Compiled from "DerbyDialect.java"
final class org.hibernate.dialect.DerbyDialect$DerbyLimitHandler extends org.hibernate.dialect.pagination.AbstractLimitHandler {
  final org.hibernate.dialect.DerbyDialect this$0;

  private org.hibernate.dialect.DerbyDialect$DerbyLimitHandler(org.hibernate.dialect.DerbyDialect);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/hibernate/dialect/DerbyDialect;
       5: aload_0
       6: invokespecial #3                  // Method org/hibernate/dialect/pagination/AbstractLimitHandler."<init>":()V
       9: return

  public java.lang.String processSql(java.lang.String, org.hibernate.engine.spi.RowSelection);
    Code:
       0: new           #4                  // class java/lang/StringBuilder
       3: dup
       4: aload_1
       5: invokevirtual #5                  // Method java/lang/String.length:()I
       8: bipush        50
      10: iadd
      11: invokespecial #6                  // Method java/lang/StringBuilder."<init>":(I)V
      14: astore_3
      15: aload_1
      16: getstatic     #7                  // Field java/util/Locale.ROOT:Ljava/util/Locale;
      19: invokevirtual #8                  // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      22: invokevirtual #9                  // Method java/lang/String.trim:()Ljava/lang/String;
      25: astore        4
      27: aload         4
      29: ldc           #10                 // String for update
      31: invokevirtual #11                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      34: istore        5
      36: aload_0
      37: getfield      #2                  // Field this$0:Lorg/hibernate/dialect/DerbyDialect;
      40: iload         5
      42: invokestatic  #12                 // Method org/hibernate/dialect/DerbyDialect.access$100:(Lorg/hibernate/dialect/DerbyDialect;I)Z
      45: ifeq          65
      48: aload_3
      49: aload_1
      50: iconst_0
      51: iload         5
      53: iconst_1
      54: isub
      55: invokevirtual #13                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      58: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: pop
      62: goto          106
      65: aload_0
      66: getfield      #2                  // Field this$0:Lorg/hibernate/dialect/DerbyDialect;
      69: aload         4
      71: invokestatic  #15                 // Method org/hibernate/dialect/DerbyDialect.access$200:(Lorg/hibernate/dialect/DerbyDialect;Ljava/lang/String;)Z
      74: ifeq          100
      77: aload_3
      78: aload_1
      79: iconst_0
      80: aload_0
      81: getfield      #2                  // Field this$0:Lorg/hibernate/dialect/DerbyDialect;
      84: aload_1
      85: invokestatic  #16                 // Method org/hibernate/dialect/DerbyDialect.access$300:(Lorg/hibernate/dialect/DerbyDialect;Ljava/lang/String;)I
      88: iconst_1
      89: isub
      90: invokevirtual #13                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      93: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: pop
      97: goto          106
     100: aload_3
     101: aload_1
     102: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: pop
     106: aload_2
     107: invokestatic  #17                 // Method org/hibernate/dialect/pagination/LimitHelper.hasFirstRow:(Lorg/hibernate/engine/spi/RowSelection;)Z
     110: ifeq          135
     113: aload_3
     114: ldc           #18                 // String  offset
     116: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: aload_2
     120: invokevirtual #19                 // Method org/hibernate/engine/spi/RowSelection.getFirstRow:()Ljava/lang/Integer;
     123: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     126: ldc           #21                 // String  rows fetch next
     128: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: goto          142
     135: aload_3
     136: ldc           #22                 // String  fetch first
     138: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: pop
     142: aload_3
     143: aload_0
     144: aload_2
     145: invokevirtual #23                 // Method getMaxOrLimit:(Lorg/hibernate/engine/spi/RowSelection;)I
     148: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     151: ldc           #25                 // String  rows only
     153: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: pop
     157: aload_0
     158: getfield      #2                  // Field this$0:Lorg/hibernate/dialect/DerbyDialect;
     161: iload         5
     163: invokestatic  #12                 // Method org/hibernate/dialect/DerbyDialect.access$100:(Lorg/hibernate/dialect/DerbyDialect;I)Z
     166: ifeq          190
     169: aload_3
     170: bipush        32
     172: invokevirtual #26                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     175: pop
     176: aload_3
     177: aload_1
     178: iload         5
     180: invokevirtual #27                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     183: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     186: pop
     187: goto          224
     190: aload_0
     191: getfield      #2                  // Field this$0:Lorg/hibernate/dialect/DerbyDialect;
     194: aload         4
     196: invokestatic  #15                 // Method org/hibernate/dialect/DerbyDialect.access$200:(Lorg/hibernate/dialect/DerbyDialect;Ljava/lang/String;)Z
     199: ifeq          224
     202: aload_3
     203: bipush        32
     205: invokevirtual #26                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     208: aload_1
     209: aload_0
     210: getfield      #2                  // Field this$0:Lorg/hibernate/dialect/DerbyDialect;
     213: aload_1
     214: invokestatic  #16                 // Method org/hibernate/dialect/DerbyDialect.access$300:(Lorg/hibernate/dialect/DerbyDialect;Ljava/lang/String;)I
     217: invokevirtual #27                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     220: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     223: pop
     224: aload_3
     225: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     228: areturn

  public boolean supportsLimit();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/hibernate/dialect/DerbyDialect;
       4: invokestatic  #29                 // Method org/hibernate/dialect/DerbyDialect.access$400:(Lorg/hibernate/dialect/DerbyDialect;)Z
       7: ireturn

  public boolean supportsLimitOffset();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/hibernate/dialect/DerbyDialect;
       4: invokestatic  #29                 // Method org/hibernate/dialect/DerbyDialect.access$400:(Lorg/hibernate/dialect/DerbyDialect;)Z
       7: ireturn

  public boolean supportsVariableLimit();
    Code:
       0: iconst_0
       1: ireturn

  org.hibernate.dialect.DerbyDialect$DerbyLimitHandler(org.hibernate.dialect.DerbyDialect, org.hibernate.dialect.DerbyDialect$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/hibernate/dialect/DerbyDialect;)V
       5: return
}
