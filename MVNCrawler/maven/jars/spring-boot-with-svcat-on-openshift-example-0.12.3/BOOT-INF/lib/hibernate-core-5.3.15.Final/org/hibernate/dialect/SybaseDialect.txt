Compiled from "SybaseDialect.java"
public class org.hibernate.dialect.SybaseDialect extends org.hibernate.dialect.AbstractTransactSQLDialect {
  private static final int PARAM_LIST_SIZE_LIMIT;

  public org.hibernate.dialect.SybaseDialect();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hibernate/dialect/AbstractTransactSQLDialect."<init>":()V
       4: return

  public int getInExpressionCountLimit();
    Code:
       0: ldc           #3                  // int 250000
       2: ireturn

  protected org.hibernate.type.descriptor.sql.SqlTypeDescriptor getSqlTypeDescriptorOverride(int);
    Code:
       0: iload_1
       1: lookupswitch  { // 2
                  2004: 28
                  2005: 32
               default: 36
          }
      28: getstatic     #4                  // Field org/hibernate/type/descriptor/sql/BlobTypeDescriptor.PRIMITIVE_ARRAY_BINDING:Lorg/hibernate/type/descriptor/sql/BlobTypeDescriptor;
      31: areturn
      32: getstatic     #5                  // Field org/hibernate/type/descriptor/sql/ClobTypeDescriptor.STREAM_BINDING_EXTRACTING:Lorg/hibernate/type/descriptor/sql/ClobTypeDescriptor;
      35: areturn
      36: aload_0
      37: iload_1
      38: invokespecial #6                  // Method org/hibernate/dialect/AbstractTransactSQLDialect.getSqlTypeDescriptorOverride:(I)Lorg/hibernate/type/descriptor/sql/SqlTypeDescriptor;
      41: areturn

  public java.lang.String getNullColumnString();
    Code:
       0: ldc           #7                  // String  null
       2: areturn

  public java.lang.String getCurrentSchemaCommand();
    Code:
       0: ldc           #8                  // String select db_name()
       2: areturn

  public boolean supportsPartitionBy();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method org/hibernate/dialect/AbstractTransactSQLDialect.supportsPartitionBy:()Z
       4: ireturn

  public org.hibernate.dialect.identity.IdentityColumnSupport getIdentityColumnSupport();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.getIdentityColumnSupport:()Lorg/hibernate/dialect/identity/IdentityColumnSupport;
       4: areturn

  public boolean supportsTuplesInSubqueries();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.supportsTuplesInSubqueries:()Z
       4: ireturn

  public boolean supportsTupleDistinctCounts();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.supportsTupleDistinctCounts:()Z
       4: ireturn

  public boolean doesRepeatableReadCauseReadersToBlockWriters();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.doesRepeatableReadCauseReadersToBlockWriters:()Z
       4: ireturn

  public boolean doesReadCommittedCauseWritersToBlockReaders();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.doesReadCommittedCauseWritersToBlockReaders:()Z
       4: ireturn

  public boolean supportsExistsInSelect();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.supportsExistsInSelect:()Z
       4: ireturn

  public boolean supportsUnionAll();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.supportsUnionAll:()Z
       4: ireturn

  public boolean supportsEmptyInList();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.supportsEmptyInList:()Z
       4: ireturn

  public java.lang.String getSelectGUIDString();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.getSelectGUIDString:()Ljava/lang/String;
       4: areturn

  public org.hibernate.hql.spi.id.MultiTableBulkIdStrategy getDefaultMultiTableBulkIdStrategy();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.getDefaultMultiTableBulkIdStrategy:()Lorg/hibernate/hql/spi/id/MultiTableBulkIdStrategy;
       4: areturn

  public java.lang.String getCurrentTimestampSelectString();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.getCurrentTimestampSelectString:()Ljava/lang/String;
       4: areturn

  public boolean isCurrentTimestampSelectStringCallable();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.isCurrentTimestampSelectStringCallable:()Z
       4: ireturn

  public boolean supportsCurrentTimestampSelection();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.supportsCurrentTimestampSelection:()Z
       4: ireturn

  public java.sql.ResultSet getResultSet(java.sql.CallableStatement) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #23                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.getResultSet:(Ljava/sql/CallableStatement;)Ljava/sql/ResultSet;
       5: areturn

  public int registerResultSetOutParameter(java.sql.CallableStatement, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #24                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.registerResultSetOutParameter:(Ljava/sql/CallableStatement;I)I
       6: ireturn

  public java.lang.String applyLocksToSql(java.lang.String, org.hibernate.LockOptions, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #25                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.applyLocksToSql:(Ljava/lang/String;Lorg/hibernate/LockOptions;Ljava/util/Map;)Ljava/lang/String;
       7: areturn

  public java.lang.String appendLockHint(org.hibernate.LockOptions, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #26                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.appendLockHint:(Lorg/hibernate/LockOptions;Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public java.lang.String getForUpdateString();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.getForUpdateString:()Ljava/lang/String;
       4: areturn

  public boolean qualifyIndexName();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.qualifyIndexName:()Z
       4: ireturn

  public java.lang.String getAddColumnString();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.getAddColumnString:()Ljava/lang/String;
       4: areturn
}
