Compiled from "JpaAttributeConverterImpl.java"
public class org.hibernate.metamodel.model.convert.internal.JpaAttributeConverterImpl<O, R> implements org.hibernate.metamodel.model.convert.spi.JpaAttributeConverter<O, R> {
  private final org.hibernate.resource.beans.spi.ManagedBean<javax.persistence.AttributeConverter<O, R>> attributeConverterBean;

  private final org.hibernate.type.descriptor.java.JavaTypeDescriptor<javax.persistence.AttributeConverter<O, R>> converterJavaTypeDescriptor;

  private final org.hibernate.type.descriptor.java.BasicJavaDescriptor<O> domainJavaTypeDescriptor;

  private final org.hibernate.type.descriptor.java.BasicJavaDescriptor<R> relationalJavaTypeDescriptor;

  public org.hibernate.metamodel.model.convert.internal.JpaAttributeConverterImpl(org.hibernate.resource.beans.spi.ManagedBean<javax.persistence.AttributeConverter<O, R>>, org.hibernate.type.descriptor.java.JavaTypeDescriptor<javax.persistence.AttributeConverter<O, R>>, org.hibernate.type.descriptor.java.JavaTypeDescriptor<O>, org.hibernate.type.descriptor.java.JavaTypeDescriptor<R>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field attributeConverterBean:Lorg/hibernate/resource/beans/spi/ManagedBean;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field converterJavaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
      14: aload_0
      15: aload_3
      16: checkcast     #4                  // class org/hibernate/type/descriptor/java/BasicJavaDescriptor
      19: putfield      #5                  // Field domainJavaTypeDescriptor:Lorg/hibernate/type/descriptor/java/BasicJavaDescriptor;
      22: aload_0
      23: aload         4
      25: checkcast     #4                  // class org/hibernate/type/descriptor/java/BasicJavaDescriptor
      28: putfield      #6                  // Field relationalJavaTypeDescriptor:Lorg/hibernate/type/descriptor/java/BasicJavaDescriptor;
      31: return

  public org.hibernate.resource.beans.spi.ManagedBean<javax.persistence.AttributeConverter<O, R>> getConverterBean();
    Code:
       0: aload_0
       1: getfield      #2                  // Field attributeConverterBean:Lorg/hibernate/resource/beans/spi/ManagedBean;
       4: areturn

  public O toDomainValue(R);
    Code:
       0: aload_0
       1: getfield      #2                  // Field attributeConverterBean:Lorg/hibernate/resource/beans/spi/ManagedBean;
       4: invokeinterface #7,  1            // InterfaceMethod org/hibernate/resource/beans/spi/ManagedBean.getBeanInstance:()Ljava/lang/Object;
       9: checkcast     #8                  // class javax/persistence/AttributeConverter
      12: aload_1
      13: invokeinterface #9,  2            // InterfaceMethod javax/persistence/AttributeConverter.convertToEntityAttribute:(Ljava/lang/Object;)Ljava/lang/Object;
      18: areturn

  public R toRelationalValue(O);
    Code:
       0: aload_0
       1: getfield      #2                  // Field attributeConverterBean:Lorg/hibernate/resource/beans/spi/ManagedBean;
       4: invokeinterface #7,  1            // InterfaceMethod org/hibernate/resource/beans/spi/ManagedBean.getBeanInstance:()Ljava/lang/Object;
       9: checkcast     #8                  // class javax/persistence/AttributeConverter
      12: aload_1
      13: invokeinterface #10,  2           // InterfaceMethod javax/persistence/AttributeConverter.convertToDatabaseColumn:(Ljava/lang/Object;)Ljava/lang/Object;
      18: areturn

  public org.hibernate.type.descriptor.java.JavaTypeDescriptor<javax.persistence.AttributeConverter<O, R>> getConverterJavaTypeDescriptor();
    Code:
       0: aload_0
       1: getfield      #3                  // Field converterJavaTypeDescriptor:Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
       4: areturn

  public org.hibernate.type.descriptor.java.BasicJavaDescriptor<O> getDomainJavaTypeDescriptor();
    Code:
       0: aload_0
       1: getfield      #5                  // Field domainJavaTypeDescriptor:Lorg/hibernate/type/descriptor/java/BasicJavaDescriptor;
       4: areturn

  public org.hibernate.type.descriptor.java.BasicJavaDescriptor<R> getRelationalJavaTypeDescriptor();
    Code:
       0: aload_0
       1: getfield      #6                  // Field relationalJavaTypeDescriptor:Lorg/hibernate/type/descriptor/java/BasicJavaDescriptor;
       4: areturn
}
