Compiled from "SybaseASE157LimitHandler.java"
public class org.hibernate.dialect.pagination.SybaseASE157LimitHandler extends org.hibernate.dialect.pagination.AbstractLimitHandler {
  private static final java.util.regex.Pattern SELECT_DISTINCT_PATTERN;

  private static final java.util.regex.Pattern SELECT_PATTERN;

  private static final java.util.regex.Pattern TOP_PATTERN;

  public org.hibernate.dialect.pagination.SybaseASE157LimitHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hibernate/dialect/pagination/AbstractLimitHandler."<init>":()V
       4: return

  public java.lang.String processSql(java.lang.String, org.hibernate.engine.spi.RowSelection);
    Code:
       0: aload_2
       1: invokevirtual #2                  // Method org/hibernate/engine/spi/RowSelection.getMaxRows:()Ljava/lang/Integer;
       4: ifnonnull     9
       7: aload_1
       8: areturn
       9: aload_0
      10: aload_2
      11: invokevirtual #3                  // Method getMaxOrLimit:(Lorg/hibernate/engine/spi/RowSelection;)I
      14: istore_3
      15: iload_3
      16: ldc           #5                  // int 2147483647
      18: if_icmpne     23
      21: aload_1
      22: areturn
      23: getstatic     #6                  // Field SELECT_DISTINCT_PATTERN:Ljava/util/regex/Pattern;
      26: aload_1
      27: invokevirtual #7                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      30: astore        4
      32: aload         4
      34: invokevirtual #8                  // Method java/util/regex/Matcher.matches:()Z
      37: ifeq          48
      40: aload         4
      42: aload_1
      43: iload_3
      44: invokestatic  #9                  // Method insertTop:(Ljava/util/regex/Matcher;Ljava/lang/String;I)Ljava/lang/String;
      47: areturn
      48: getstatic     #10                 // Field SELECT_PATTERN:Ljava/util/regex/Pattern;
      51: aload_1
      52: invokevirtual #7                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      55: astore        5
      57: aload         5
      59: invokevirtual #8                  // Method java/util/regex/Matcher.matches:()Z
      62: ifeq          73
      65: aload         5
      67: aload_1
      68: iload_3
      69: invokestatic  #9                  // Method insertTop:(Ljava/util/regex/Matcher;Ljava/lang/String;I)Ljava/lang/String;
      72: areturn
      73: aload_1
      74: areturn

  public boolean supportsLimit();
    Code:
       0: iconst_1
       1: ireturn

  public boolean supportsLimitOffset();
    Code:
       0: iconst_0
       1: ireturn

  public boolean useMaxForLimit();
    Code:
       0: iconst_1
       1: ireturn

  public boolean supportsVariableLimit();
    Code:
       0: iconst_0
       1: ireturn

  private static java.lang.String insertTop(java.util.regex.Matcher, java.lang.String, int);
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #11                 // Method java/util/regex/Matcher.end:(I)I
       5: istore_3
       6: getstatic     #12                 // Field TOP_PATTERN:Ljava/util/regex/Pattern;
       9: aload_1
      10: iload_3
      11: invokevirtual #13                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      14: invokevirtual #7                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      17: invokevirtual #8                  // Method java/util/regex/Matcher.matches:()Z
      20: ifeq          25
      23: aload_1
      24: areturn
      25: new           #14                 // class java/lang/StringBuilder
      28: dup
      29: aload_1
      30: invokespecial #15                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      33: astore        4
      35: aload         4
      37: iload_3
      38: new           #14                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #17                 // String top
      47: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: iload_2
      51: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      54: ldc           #20                 // String
      56: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokevirtual #22                 // Method java/lang/StringBuilder.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;
      65: pop
      66: aload         4
      68: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: areturn

  static {};
    Code:
       0: ldc           #23                 // String ^(\\s*select\\s+distinct\\s+).*
       2: iconst_2
       3: invokestatic  #25                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
       6: putstatic     #6                  // Field SELECT_DISTINCT_PATTERN:Ljava/util/regex/Pattern;
       9: ldc           #26                 // String ^(\\s*select\\s+).*
      11: iconst_2
      12: invokestatic  #25                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
      15: putstatic     #10                 // Field SELECT_PATTERN:Ljava/util/regex/Pattern;
      18: ldc           #27                 // String ^\\s*top\\s+.*
      20: iconst_2
      21: invokestatic  #25                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
      24: putstatic     #12                 // Field TOP_PATTERN:Ljava/util/regex/Pattern;
      27: return
}
