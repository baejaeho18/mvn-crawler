Compiled from "AbstractHANADialect.java"
class org.hibernate.dialect.AbstractHANADialect$MaterializedBlob implements java.sql.Blob {
  private byte[] bytes;

  public org.hibernate.dialect.AbstractHANADialect$MaterializedBlob(byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field bytes:[B
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method setBytes:([B)V
      14: return

  public long length() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getBytes:()[B
       4: arraylength
       5: i2l
       6: lreturn

  public byte[] getBytes(long, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field bytes:[B
       4: lload_1
       5: lconst_1
       6: lsub
       7: l2i
       8: lload_1
       9: lconst_1
      10: lsub
      11: iload_3
      12: i2l
      13: ladd
      14: l2i
      15: invokestatic  #5                  // Method java/util/Arrays.copyOfRange:([BII)[B
      18: areturn

  public java.io.InputStream getBinaryStream() throws java.sql.SQLException;
    Code:
       0: new           #6                  // class java/io/ByteArrayInputStream
       3: dup
       4: aload_0
       5: invokevirtual #4                  // Method getBytes:()[B
       8: invokespecial #7                  // Method java/io/ByteArrayInputStream."<init>":([B)V
      11: areturn

  public long position(byte[], long) throws java.sql.SQLException;
    Code:
       0: new           #8                  // class java/sql/SQLFeatureNotSupportedException
       3: dup
       4: invokespecial #9                  // Method java/sql/SQLFeatureNotSupportedException."<init>":()V
       7: athrow

  public long position(java.sql.Blob, long) throws java.sql.SQLException;
    Code:
       0: new           #8                  // class java/sql/SQLFeatureNotSupportedException
       3: dup
       4: invokespecial #9                  // Method java/sql/SQLFeatureNotSupportedException."<init>":()V
       7: athrow

  public int setBytes(long, byte[]) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: istore        4
       3: aload_0
       4: getfield      #2                  // Field bytes:[B
       7: arraylength
       8: i2l
       9: lload_1
      10: lconst_1
      11: lsub
      12: aload_3
      13: arraylength
      14: i2l
      15: ladd
      16: lcmp
      17: ifge          39
      20: aload_0
      21: aload_0
      22: getfield      #2                  // Field bytes:[B
      25: lload_1
      26: lconst_1
      27: lsub
      28: aload_3
      29: arraylength
      30: i2l
      31: ladd
      32: l2i
      33: invokestatic  #10                 // Method java/util/Arrays.copyOf:([BI)[B
      36: putfield      #2                  // Field bytes:[B
      39: iconst_0
      40: istore        5
      42: iload         5
      44: aload_3
      45: arraylength
      46: if_icmpge     85
      49: iload         5
      51: aload_0
      52: getfield      #2                  // Field bytes:[B
      55: arraylength
      56: if_icmpge     85
      59: aload_0
      60: getfield      #2                  // Field bytes:[B
      63: iload         5
      65: i2l
      66: lload_1
      67: ladd
      68: lconst_1
      69: lsub
      70: l2i
      71: aload_3
      72: iload         5
      74: baload
      75: bastore
      76: iinc          5, 1
      79: iinc          4, 1
      82: goto          42
      85: iload         4
      87: ireturn

  public int setBytes(long, byte[], int, int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: istore        6
       3: aload_0
       4: getfield      #2                  // Field bytes:[B
       7: arraylength
       8: i2l
       9: lload_1
      10: lconst_1
      11: lsub
      12: iload         5
      14: i2l
      15: ladd
      16: lcmp
      17: ifge          39
      20: aload_0
      21: aload_0
      22: getfield      #2                  // Field bytes:[B
      25: lload_1
      26: lconst_1
      27: lsub
      28: iload         5
      30: i2l
      31: ladd
      32: l2i
      33: invokestatic  #10                 // Method java/util/Arrays.copyOf:([BI)[B
      36: putfield      #2                  // Field bytes:[B
      39: iload         4
      41: istore        7
      43: iload         7
      45: iload         5
      47: if_icmpge     86
      50: iload         7
      52: aload_0
      53: getfield      #2                  // Field bytes:[B
      56: arraylength
      57: if_icmpge     86
      60: aload_0
      61: getfield      #2                  // Field bytes:[B
      64: iload         7
      66: i2l
      67: lload_1
      68: ladd
      69: lconst_1
      70: lsub
      71: l2i
      72: aload_3
      73: iload         7
      75: baload
      76: bastore
      77: iinc          7, 1
      80: iinc          6, 1
      83: goto          43
      86: iload         6
      88: ireturn

  public java.io.OutputStream setBinaryStream(long) throws java.sql.SQLException;
    Code:
       0: new           #11                 // class org/hibernate/dialect/AbstractHANADialect$MaterializedBlob$1
       3: dup
       4: aload_0
       5: invokespecial #12                 // Method org/hibernate/dialect/AbstractHANADialect$MaterializedBlob$1."<init>":(Lorg/hibernate/dialect/AbstractHANADialect$MaterializedBlob;)V
       8: areturn

  public void truncate(long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #4                  // Method getBytes:()[B
       5: lload_1
       6: l2i
       7: invokestatic  #10                 // Method java/util/Arrays.copyOf:([BI)[B
      10: invokevirtual #3                  // Method setBytes:([B)V
      13: return

  public void free() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #3                  // Method setBytes:([B)V
       5: return

  public java.io.InputStream getBinaryStream(long, long) throws java.sql.SQLException;
    Code:
       0: new           #6                  // class java/io/ByteArrayInputStream
       3: dup
       4: aload_0
       5: invokevirtual #4                  // Method getBytes:()[B
       8: lload_1
       9: lconst_1
      10: lsub
      11: l2i
      12: lload_3
      13: l2i
      14: invokespecial #13                 // Method java/io/ByteArrayInputStream."<init>":([BII)V
      17: areturn

  byte[] getBytes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bytes:[B
       4: areturn

  void setBytes(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field bytes:[B
       5: return
}
