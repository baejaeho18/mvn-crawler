Compiled from "AbstractInterceptor.java"
public abstract class org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor implements org.hibernate.bytecode.enhance.spi.interceptor.SessionAssociableInterceptor {
  private final java.lang.String entityName;

  private transient org.hibernate.engine.spi.SharedSessionContractImplementor session;

  private boolean allowLoadOutsideTransaction;

  private java.lang.String sessionFactoryUuid;

  public org.hibernate.bytecode.enhance.spi.interceptor.AbstractInterceptor(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field entityName:Ljava/lang/String;
       9: return

  public java.lang.String getEntityName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field entityName:Ljava/lang/String;
       4: areturn

  public org.hibernate.engine.spi.SharedSessionContractImplementor getLinkedSession();
    Code:
       0: aload_0
       1: getfield      #3                  // Field session:Lorg/hibernate/engine/spi/SharedSessionContractImplementor;
       4: areturn

  public void setSession(org.hibernate.engine.spi.SharedSessionContractImplementor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field session:Lorg/hibernate/engine/spi/SharedSessionContractImplementor;
       5: aload_1
       6: ifnull        58
       9: aload_0
      10: getfield      #4                  // Field allowLoadOutsideTransaction:Z
      13: ifne          58
      16: aload_0
      17: aload_1
      18: invokeinterface #5,  1            // InterfaceMethod org/hibernate/engine/spi/SharedSessionContractImplementor.getFactory:()Lorg/hibernate/engine/spi/SessionFactoryImplementor;
      23: invokeinterface #6,  1            // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getSessionFactoryOptions:()Lorg/hibernate/boot/spi/SessionFactoryOptions;
      28: invokeinterface #7,  1            // InterfaceMethod org/hibernate/boot/spi/SessionFactoryOptions.isInitializeLazyStateOutsideTransactionsEnabled:()Z
      33: putfield      #4                  // Field allowLoadOutsideTransaction:Z
      36: aload_0
      37: getfield      #4                  // Field allowLoadOutsideTransaction:Z
      40: ifeq          58
      43: aload_0
      44: aload_1
      45: invokeinterface #5,  1            // InterfaceMethod org/hibernate/engine/spi/SharedSessionContractImplementor.getFactory:()Lorg/hibernate/engine/spi/SessionFactoryImplementor;
      50: invokeinterface #8,  1            // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getUuid:()Ljava/lang/String;
      55: putfield      #9                  // Field sessionFactoryUuid:Ljava/lang/String;
      58: return

  public void unsetSession();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #3                  // Field session:Lorg/hibernate/engine/spi/SharedSessionContractImplementor;
       5: return

  public boolean allowLoadOutsideTransaction();
    Code:
       0: aload_0
       1: getfield      #4                  // Field allowLoadOutsideTransaction:Z
       4: ireturn

  public java.lang.String getSessionFactoryUuid();
    Code:
       0: aload_0
       1: getfield      #9                  // Field sessionFactoryUuid:Ljava/lang/String;
       4: areturn

  protected abstract java.lang.Object handleRead(java.lang.Object, java.lang.String, java.lang.Object);

  protected abstract java.lang.Object handleWrite(java.lang.Object, java.lang.String, java.lang.Object, java.lang.Object);

  public boolean readBoolean(java.lang.Object, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #10                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #11                 // Method handleRead:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #12                 // class java/lang/Boolean
      13: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
      16: ireturn

  public boolean writeBoolean(java.lang.Object, java.lang.String, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #10                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: iload         4
       9: invokestatic  #10                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      12: invokevirtual #14                 // Method handleWrite:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #12                 // class java/lang/Boolean
      18: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
      21: ireturn

  public byte readByte(java.lang.Object, java.lang.String, byte);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #15                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
       7: invokevirtual #11                 // Method handleRead:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #16                 // class java/lang/Byte
      13: invokevirtual #17                 // Method java/lang/Byte.byteValue:()B
      16: ireturn

  public byte writeByte(java.lang.Object, java.lang.String, byte, byte);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #15                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
       7: iload         4
       9: invokestatic  #15                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      12: invokevirtual #14                 // Method handleWrite:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #16                 // class java/lang/Byte
      18: invokevirtual #17                 // Method java/lang/Byte.byteValue:()B
      21: ireturn

  public char readChar(java.lang.Object, java.lang.String, char);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #18                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
       7: invokevirtual #11                 // Method handleRead:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #19                 // class java/lang/Character
      13: invokevirtual #20                 // Method java/lang/Character.charValue:()C
      16: ireturn

  public char writeChar(java.lang.Object, java.lang.String, char, char);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #18                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
       7: iload         4
       9: invokestatic  #18                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      12: invokevirtual #14                 // Method handleWrite:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #19                 // class java/lang/Character
      18: invokevirtual #20                 // Method java/lang/Character.charValue:()C
      21: ireturn

  public short readShort(java.lang.Object, java.lang.String, short);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #21                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
       7: invokevirtual #11                 // Method handleRead:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #22                 // class java/lang/Short
      13: invokevirtual #23                 // Method java/lang/Short.shortValue:()S
      16: ireturn

  public short writeShort(java.lang.Object, java.lang.String, short, short);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #21                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
       7: iload         4
       9: invokestatic  #21                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      12: invokevirtual #14                 // Method handleWrite:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #22                 // class java/lang/Short
      18: invokevirtual #23                 // Method java/lang/Short.shortValue:()S
      21: ireturn

  public int readInt(java.lang.Object, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #11                 // Method handleRead:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #25                 // class java/lang/Integer
      13: invokevirtual #26                 // Method java/lang/Integer.intValue:()I
      16: ireturn

  public int writeInt(java.lang.Object, java.lang.String, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: iload         4
       9: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: invokevirtual #14                 // Method handleWrite:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #25                 // class java/lang/Integer
      18: invokevirtual #26                 // Method java/lang/Integer.intValue:()I
      21: ireturn

  public float readFloat(java.lang.Object, java.lang.String, float);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: fload_3
       4: invokestatic  #27                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       7: invokevirtual #11                 // Method handleRead:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #28                 // class java/lang/Float
      13: invokevirtual #29                 // Method java/lang/Float.floatValue:()F
      16: freturn

  public float writeFloat(java.lang.Object, java.lang.String, float, float);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: fload_3
       4: invokestatic  #27                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       7: fload         4
       9: invokestatic  #27                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      12: invokevirtual #14                 // Method handleWrite:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #28                 // class java/lang/Float
      18: invokevirtual #29                 // Method java/lang/Float.floatValue:()F
      21: freturn

  public double readDouble(java.lang.Object, java.lang.String, double);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: dload_3
       4: invokestatic  #30                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       7: invokevirtual #11                 // Method handleRead:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #31                 // class java/lang/Double
      13: invokevirtual #32                 // Method java/lang/Double.doubleValue:()D
      16: dreturn

  public double writeDouble(java.lang.Object, java.lang.String, double, double);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: dload_3
       4: invokestatic  #30                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       7: dload         5
       9: invokestatic  #30                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      12: invokevirtual #14                 // Method handleWrite:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #31                 // class java/lang/Double
      18: invokevirtual #32                 // Method java/lang/Double.doubleValue:()D
      21: dreturn

  public long readLong(java.lang.Object, java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: invokestatic  #33                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #11                 // Method handleRead:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #34                 // class java/lang/Long
      13: invokevirtual #35                 // Method java/lang/Long.longValue:()J
      16: lreturn

  public long writeLong(java.lang.Object, java.lang.String, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: invokestatic  #33                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: lload         5
       9: invokestatic  #33                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: invokevirtual #14                 // Method handleWrite:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #34                 // class java/lang/Long
      18: invokevirtual #35                 // Method java/lang/Long.longValue:()J
      21: lreturn

  public java.lang.Object readObject(java.lang.Object, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #11                 // Method handleRead:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object writeObject(java.lang.Object, java.lang.String, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #14                 // Method handleWrite:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn
}
