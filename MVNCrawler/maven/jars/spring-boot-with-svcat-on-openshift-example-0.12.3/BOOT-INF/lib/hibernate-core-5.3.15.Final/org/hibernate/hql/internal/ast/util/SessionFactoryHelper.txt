Compiled from "SessionFactoryHelper.java"
public class org.hibernate.hql.internal.ast.util.SessionFactoryHelper {
  private final org.hibernate.engine.spi.SessionFactoryImplementor sfi;

  private final java.util.Map<java.lang.String, org.hibernate.persister.entity.PropertyMapping> collectionPropertyMappingByRole;

  public org.hibernate.hql.internal.ast.util.SessionFactoryHelper(org.hibernate.engine.spi.SessionFactoryImplementor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       9: aload_0
      10: new           #3                  // class java/util/HashMap
      13: dup
      14: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      17: putfield      #5                  // Field collectionPropertyMappingByRole:Ljava/util/Map;
      20: return

  public org.hibernate.engine.spi.SessionFactoryImplementor getFactory();
    Code:
       0: aload_0
       1: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       4: areturn

  public boolean hasPhysicalDiscriminatorColumn(org.hibernate.persister.entity.Queryable);
    Code:
       0: aload_1
       1: invokeinterface #6,  1            // InterfaceMethod org/hibernate/persister/entity/Queryable.getDiscriminatorType:()Lorg/hibernate/type/Type;
       6: ifnull        31
       9: aload_1
      10: invokeinterface #7,  1            // InterfaceMethod org/hibernate/persister/entity/Queryable.getDiscriminatorColumnName:()Ljava/lang/String;
      15: astore_2
      16: aload_2
      17: ifnull        31
      20: ldc           #8                  // String clazz_
      22: aload_2
      23: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_1
      30: ireturn
      31: iconst_0
      32: ireturn

  public java.lang.String getImportedClassName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       4: invokeinterface #10,  1           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
       9: aload_1
      10: invokeinterface #11,  2           // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.getImportedClassName:(Ljava/lang/String;)Ljava/lang/String;
      15: areturn

  public org.hibernate.persister.entity.Queryable findQueryableUsingImports(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       4: aload_1
       5: invokestatic  #12                 // Method findQueryableUsingImports:(Lorg/hibernate/engine/spi/SessionFactoryImplementor;Ljava/lang/String;)Lorg/hibernate/persister/entity/Queryable;
       8: areturn

  public static org.hibernate.persister.entity.Queryable findQueryableUsingImports(org.hibernate.engine.spi.SessionFactoryImplementor, java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
       6: aload_1
       7: invokeinterface #11,  2           // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.getImportedClassName:(Ljava/lang/String;)Ljava/lang/String;
      12: astore_2
      13: aload_2
      14: ifnonnull     19
      17: aconst_null
      18: areturn
      19: aload_0
      20: invokeinterface #10,  1           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
      25: aload_2
      26: invokeinterface #13,  2           // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.entityPersister:(Ljava/lang/String;)Lorg/hibernate/persister/entity/EntityPersister;
      31: checkcast     #14                 // class org/hibernate/persister/entity/Queryable
      34: areturn
      35: astore_3
      36: aconst_null
      37: areturn
    Exception table:
       from    to  target type
          19    34    35   Class org/hibernate/MappingException

  public org.hibernate.persister.entity.EntityPersister findEntityPersisterByName(java.lang.String) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       4: invokeinterface #10,  1           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
       9: invokeinterface #16,  1           // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.entityPersisters:()Ljava/util/Map;
      14: aload_1
      15: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #18                 // class org/hibernate/persister/entity/EntityPersister
      23: astore_2
      24: aload_2
      25: ifnull        30
      28: aload_2
      29: areturn
      30: aload_0
      31: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
      34: invokeinterface #10,  1           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
      39: aload_1
      40: invokeinterface #11,  2           // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.getImportedClassName:(Ljava/lang/String;)Ljava/lang/String;
      45: astore_3
      46: aload_3
      47: ifnonnull     52
      50: aconst_null
      51: areturn
      52: aload_0
      53: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
      56: invokeinterface #10,  1           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
      61: aload_3
      62: invokeinterface #13,  2           // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.entityPersister:(Ljava/lang/String;)Lorg/hibernate/persister/entity/EntityPersister;
      67: areturn

  public org.hibernate.persister.entity.EntityPersister requireClassPersister(java.lang.String) throws antlr.SemanticException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method findEntityPersisterByName:(Ljava/lang/String;)Lorg/hibernate/persister/entity/EntityPersister;
       5: astore_2
       6: aload_2
       7: ifnonnull     37
      10: new           #20                 // class org/hibernate/hql/internal/ast/QuerySyntaxException
      13: dup
      14: new           #21                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      21: aload_1
      22: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #24                 // String  is not mapped
      27: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #26                 // Method org/hibernate/hql/internal/ast/QuerySyntaxException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: goto          54
      40: astore_3
      41: new           #27                 // class org/hibernate/hql/internal/ast/DetailedSemanticException
      44: dup
      45: aload_3
      46: invokevirtual #28                 // Method org/hibernate/MappingException.getMessage:()Ljava/lang/String;
      49: aload_3
      50: invokespecial #29                 // Method org/hibernate/hql/internal/ast/DetailedSemanticException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: athrow
      54: aload_2
      55: areturn
    Exception table:
       from    to  target type
           0    37    40   Class org/hibernate/MappingException

  public org.hibernate.persister.collection.QueryableCollection getCollectionPersister(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       4: invokeinterface #10,  1           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
       9: aload_1
      10: invokeinterface #30,  2           // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.collectionPersister:(Ljava/lang/String;)Lorg/hibernate/persister/collection/CollectionPersister;
      15: checkcast     #31                 // class org/hibernate/persister/collection/QueryableCollection
      18: areturn
      19: astore_2
      20: new           #33                 // class org/hibernate/QueryException
      23: dup
      24: new           #21                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #34                 // String collection is not queryable:
      33: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #35                 // Method org/hibernate/QueryException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: astore_2
      48: new           #33                 // class org/hibernate/QueryException
      51: dup
      52: new           #21                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #37                 // String collection not found:
      61: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_1
      65: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokespecial #35                 // Method org/hibernate/QueryException."<init>":(Ljava/lang/String;)V
      74: athrow
    Exception table:
       from    to  target type
           0    18    19   Class java/lang/ClassCastException
           0    18    47   Class java/lang/Exception

  public org.hibernate.persister.collection.QueryableCollection requireQueryableCollection(java.lang.String) throws org.hibernate.QueryException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       4: invokeinterface #10,  1           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
       9: aload_1
      10: invokeinterface #30,  2           // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.collectionPersister:(Ljava/lang/String;)Lorg/hibernate/persister/collection/CollectionPersister;
      15: checkcast     #31                 // class org/hibernate/persister/collection/QueryableCollection
      18: astore_2
      19: aload_2
      20: ifnull        42
      23: aload_0
      24: getfield      #5                  // Field collectionPropertyMappingByRole:Ljava/util/Map;
      27: aload_1
      28: new           #38                 // class org/hibernate/persister/collection/CollectionPropertyMapping
      31: dup
      32: aload_2
      33: invokespecial #39                 // Method org/hibernate/persister/collection/CollectionPropertyMapping."<init>":(Lorg/hibernate/persister/collection/QueryableCollection;)V
      36: invokeinterface #40,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aload_2
      43: areturn
      44: astore_2
      45: new           #33                 // class org/hibernate/QueryException
      48: dup
      49: new           #21                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #41                 // String collection role is not queryable:
      58: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_1
      62: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #35                 // Method org/hibernate/QueryException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: astore_2
      73: new           #33                 // class org/hibernate/QueryException
      76: dup
      77: new           #21                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #42                 // String collection role not found:
      86: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_1
      90: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokespecial #35                 // Method org/hibernate/QueryException."<init>":(Ljava/lang/String;)V
      99: athrow
    Exception table:
       from    to  target type
           0    43    44   Class java/lang/ClassCastException
           0    43    72   Class java/lang/Exception

  public org.hibernate.persister.entity.PropertyMapping getCollectionPropertyMapping(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field collectionPropertyMappingByRole:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #43                 // class org/hibernate/persister/entity/PropertyMapping
      13: areturn

  public java.lang.String[] getCollectionElementColumns(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method getCollectionPropertyMapping:(Ljava/lang/String;)Lorg/hibernate/persister/entity/PropertyMapping;
       5: aload_2
       6: ldc           #46                 // String elements
       8: invokeinterface #47,  3           // InterfaceMethod org/hibernate/persister/entity/PropertyMapping.toColumns:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      13: areturn

  public org.hibernate.engine.internal.JoinSequence createJoinSequence();
    Code:
       0: new           #48                 // class org/hibernate/engine/internal/JoinSequence
       3: dup
       4: aload_0
       5: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       8: invokespecial #49                 // Method org/hibernate/engine/internal/JoinSequence."<init>":(Lorg/hibernate/engine/spi/SessionFactoryImplementor;)V
      11: areturn

  public org.hibernate.engine.internal.JoinSequence createJoinSequence(boolean, org.hibernate.type.AssociationType, java.lang.String, org.hibernate.sql.JoinType, java.lang.String[]);
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method createJoinSequence:()Lorg/hibernate/engine/internal/JoinSequence;
       4: astore        6
       6: aload         6
       8: iload_1
       9: invokevirtual #51                 // Method org/hibernate/engine/internal/JoinSequence.setUseThetaStyle:(Z)Lorg/hibernate/engine/internal/JoinSequence;
      12: pop
      13: aload         6
      15: aload_2
      16: aload_3
      17: aload         4
      19: aload         5
      21: invokevirtual #52                 // Method org/hibernate/engine/internal/JoinSequence.addJoin:(Lorg/hibernate/type/AssociationType;Ljava/lang/String;Lorg/hibernate/sql/JoinType;[Ljava/lang/String;)Lorg/hibernate/engine/internal/JoinSequence;
      24: pop
      25: aload         6
      27: areturn

  public org.hibernate.engine.internal.JoinSequence createJoinSequence(boolean, org.hibernate.type.AssociationType, java.lang.String, org.hibernate.sql.JoinType, java.lang.String[][]);
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method createJoinSequence:()Lorg/hibernate/engine/internal/JoinSequence;
       4: astore        6
       6: aload         6
       8: iload_1
       9: invokevirtual #51                 // Method org/hibernate/engine/internal/JoinSequence.setUseThetaStyle:(Z)Lorg/hibernate/engine/internal/JoinSequence;
      12: pop
      13: aload         6
      15: aload_2
      16: aload_3
      17: aload         4
      19: aload         5
      21: invokevirtual #53                 // Method org/hibernate/engine/internal/JoinSequence.addJoin:(Lorg/hibernate/type/AssociationType;Ljava/lang/String;Lorg/hibernate/sql/JoinType;[[Ljava/lang/String;)Lorg/hibernate/engine/internal/JoinSequence;
      24: pop
      25: aload         6
      27: areturn

  public org.hibernate.engine.internal.JoinSequence createCollectionJoinSequence(org.hibernate.persister.collection.QueryableCollection, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method createJoinSequence:()Lorg/hibernate/engine/internal/JoinSequence;
       4: astore_3
       5: aload_3
       6: aload_1
       7: aload_2
       8: invokevirtual #54                 // Method org/hibernate/engine/internal/JoinSequence.setRoot:(Lorg/hibernate/persister/entity/Joinable;Ljava/lang/String;)Lorg/hibernate/engine/internal/JoinSequence;
      11: pop
      12: aload_3
      13: iconst_1
      14: invokevirtual #51                 // Method org/hibernate/engine/internal/JoinSequence.setUseThetaStyle:(Z)Lorg/hibernate/engine/internal/JoinSequence;
      17: pop
      18: aload_3
      19: areturn

  public java.lang.String getIdentifierOrUniqueKeyPropertyName(org.hibernate.type.EntityType);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       5: invokevirtual #55                 // Method org/hibernate/type/EntityType.getIdentifierOrUniqueKeyPropertyName:(Lorg/hibernate/engine/spi/Mapping;)Ljava/lang/String;
       8: areturn
       9: astore_2
      10: new           #33                 // class org/hibernate/QueryException
      13: dup
      14: aload_2
      15: invokespecial #56                 // Method org/hibernate/QueryException."<init>":(Ljava/lang/Exception;)V
      18: athrow
    Exception table:
       from    to  target type
           0     8     9   Class org/hibernate/MappingException

  public int getColumnSpan(org.hibernate.type.Type);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       5: invokeinterface #57,  2           // InterfaceMethod org/hibernate/type/Type.getColumnSpan:(Lorg/hibernate/engine/spi/Mapping;)I
      10: ireturn

  public java.lang.String getAssociatedEntityName(org.hibernate.type.CollectionType);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       5: invokevirtual #58                 // Method org/hibernate/type/CollectionType.getAssociatedEntityName:(Lorg/hibernate/engine/spi/SessionFactoryImplementor;)Ljava/lang/String;
       8: areturn

  private org.hibernate.type.Type getElementType(org.hibernate.type.CollectionType);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       5: invokevirtual #59                 // Method org/hibernate/type/CollectionType.getElementType:(Lorg/hibernate/engine/spi/SessionFactoryImplementor;)Lorg/hibernate/type/Type;
       8: areturn

  public org.hibernate.type.AssociationType getElementAssociationType(org.hibernate.type.CollectionType);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #60                 // Method getElementType:(Lorg/hibernate/type/CollectionType;)Lorg/hibernate/type/Type;
       5: checkcast     #61                 // class org/hibernate/type/AssociationType
       8: areturn

  public org.hibernate.dialect.function.SQLFunction findSQLFunction(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       4: invokeinterface #62,  1           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getSqlFunctionRegistry:()Lorg/hibernate/dialect/function/SQLFunctionRegistry;
       9: aload_1
      10: invokevirtual #63                 // Method org/hibernate/dialect/function/SQLFunctionRegistry.findSQLFunction:(Ljava/lang/String;)Lorg/hibernate/dialect/function/SQLFunction;
      13: areturn

  private org.hibernate.dialect.function.SQLFunction requireSQLFunction(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #64                 // Method findSQLFunction:(Ljava/lang/String;)Lorg/hibernate/dialect/function/SQLFunction;
       5: astore_2
       6: aload_2
       7: ifnonnull     37
      10: new           #33                 // class org/hibernate/QueryException
      13: dup
      14: new           #21                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #65                 // String Unable to find SQL function:
      23: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #35                 // Method org/hibernate/QueryException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_2
      38: areturn

  public org.hibernate.type.Type findFunctionReturnType(java.lang.String, antlr.collections.AST);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #66                 // Method requireSQLFunction:(Ljava/lang/String;)Lorg/hibernate/dialect/function/SQLFunction;
       5: astore_3
       6: aload_0
       7: aload_1
       8: aload_3
       9: aload_2
      10: invokevirtual #67                 // Method findFunctionReturnType:(Ljava/lang/String;Lorg/hibernate/dialect/function/SQLFunction;Lantlr/collections/AST;)Lorg/hibernate/type/Type;
      13: areturn

  public org.hibernate.type.Type findFunctionReturnType(java.lang.String, org.hibernate.dialect.function.SQLFunction, antlr.collections.AST);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_3
       4: ifnull        62
       7: ldc           #68                 // String cast
       9: aload_1
      10: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          44
      16: aload_0
      17: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
      20: invokeinterface #69,  1           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getTypeResolver:()Lorg/hibernate/type/TypeResolver;
      25: aload_3
      26: invokeinterface #70,  1           // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      31: invokeinterface #71,  1           // InterfaceMethod antlr/collections/AST.getText:()Ljava/lang/String;
      36: invokevirtual #72                 // Method org/hibernate/type/TypeResolver.heuristicType:(Ljava/lang/String;)Lorg/hibernate/type/Type;
      39: astore        4
      41: goto          62
      44: ldc           #73                 // class org/hibernate/hql/internal/ast/tree/SqlNode
      46: aload_3
      47: invokevirtual #74                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      50: ifeq          62
      53: aload_3
      54: checkcast     #73                 // class org/hibernate/hql/internal/ast/tree/SqlNode
      57: invokevirtual #75                 // Method org/hibernate/hql/internal/ast/tree/SqlNode.getDataType:()Lorg/hibernate/type/Type;
      60: astore        4
      62: aload_2
      63: aload         4
      65: aload_0
      66: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
      69: invokeinterface #76,  3           // InterfaceMethod org/hibernate/dialect/function/SQLFunction.getReturnType:(Lorg/hibernate/type/Type;Lorg/hibernate/engine/spi/Mapping;)Lorg/hibernate/type/Type;
      74: areturn

  public java.lang.String[][] generateColumnNames(org.hibernate.type.Type[]);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       5: invokestatic  #77                 // Method org/hibernate/hql/internal/NameGenerator.generateColumnNames:([Lorg/hibernate/type/Type;Lorg/hibernate/engine/spi/SessionFactoryImplementor;)[[Ljava/lang/String;
       8: areturn

  public boolean isStrictJPAQLComplianceEnabled();
    Code:
       0: aload_0
       1: getfield      #2                  // Field sfi:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       4: invokeinterface #78,  1           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getSessionFactoryOptions:()Lorg/hibernate/boot/spi/SessionFactoryOptions;
       9: invokeinterface #79,  1           // InterfaceMethod org/hibernate/boot/spi/SessionFactoryOptions.getJpaCompliance:()Lorg/hibernate/jpa/spi/JpaCompliance;
      14: invokeinterface #80,  1           // InterfaceMethod org/hibernate/jpa/spi/JpaCompliance.isJpaQueryComplianceEnabled:()Z
      19: ireturn
}
