Compiled from "AssociationVisitationStrategy.java"
public interface org.hibernate.persister.walking.spi.AssociationVisitationStrategy {
  public abstract void start();

  public abstract void finish();

  public abstract void startingEntity(org.hibernate.persister.walking.spi.EntityDefinition);

  public abstract void finishingEntity(org.hibernate.persister.walking.spi.EntityDefinition);

  public abstract void startingEntityIdentifier(org.hibernate.persister.walking.spi.EntityIdentifierDefinition);

  public abstract void finishingEntityIdentifier(org.hibernate.persister.walking.spi.EntityIdentifierDefinition);

  public abstract void startingCollection(org.hibernate.persister.walking.spi.CollectionDefinition);

  public abstract void finishingCollection(org.hibernate.persister.walking.spi.CollectionDefinition);

  public abstract void startingCollectionIndex(org.hibernate.persister.walking.spi.CollectionIndexDefinition);

  public abstract void finishingCollectionIndex(org.hibernate.persister.walking.spi.CollectionIndexDefinition);

  public abstract void startingCollectionElements(org.hibernate.persister.walking.spi.CollectionElementDefinition);

  public abstract void finishingCollectionElements(org.hibernate.persister.walking.spi.CollectionElementDefinition);

  public abstract void startingComposite(org.hibernate.persister.walking.spi.CompositionDefinition);

  public abstract void finishingComposite(org.hibernate.persister.walking.spi.CompositionDefinition);

  public abstract boolean startingAttribute(org.hibernate.persister.walking.spi.AttributeDefinition);

  public abstract void finishingAttribute(org.hibernate.persister.walking.spi.AttributeDefinition);

  public abstract void foundAny(org.hibernate.persister.walking.spi.AnyMappingDefinition);

  public abstract void associationKeyRegistered(org.hibernate.persister.walking.spi.AssociationKey);

  public abstract org.hibernate.loader.plan.spi.FetchSource registeredFetchSource(org.hibernate.persister.walking.spi.AssociationKey);

  public abstract void foundCircularAssociation(org.hibernate.persister.walking.spi.AssociationAttributeDefinition);

  public abstract boolean isDuplicateAssociationKey(org.hibernate.persister.walking.spi.AssociationKey);
}
