Compiled from "SqlStatementParser.java"
class org.hibernate.hql.internal.antlr.SqlStatementParser$ErrorHandler implements org.hibernate.hql.internal.ast.ErrorReporter {
  private java.util.List<java.lang.String> errorList;

  final org.hibernate.hql.internal.antlr.SqlStatementParser this$0;

  private org.hibernate.hql.internal.antlr.SqlStatementParser$ErrorHandler(org.hibernate.hql.internal.antlr.SqlStatementParser);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/hibernate/hql/internal/antlr/SqlStatementParser;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #4                  // class java/util/LinkedList
      13: dup
      14: invokespecial #5                  // Method java/util/LinkedList."<init>":()V
      17: putfield      #6                  // Field errorList:Ljava/util/List;
      20: return

  public void reportError(antlr.RecognitionException);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method antlr/RecognitionException.toString:()Ljava/lang/String;
       5: invokevirtual #8                  // Method reportError:(Ljava/lang/String;)V
       8: return

  public void reportError(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field errorList:Ljava/util/List;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void reportWarning(java.lang.String);
    Code:
       0: return

  public boolean hasErrors();
    Code:
       0: aload_0
       1: getfield      #6                  // Field errorList:Ljava/util/List;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.lang.String getErrorMessage();
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #6                  // Field errorList:Ljava/util/List;
      12: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          60
      27: aload_1
      28: aload_2
      29: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #16                 // class java/lang/String
      37: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: pop
      41: aload_2
      42: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          18
      50: aload_1
      51: ldc           #18                 // String \n
      53: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: pop
      57: goto          18
      60: aload_1
      61: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: areturn

  org.hibernate.hql.internal.antlr.SqlStatementParser$ErrorHandler(org.hibernate.hql.internal.antlr.SqlStatementParser, org.hibernate.hql.internal.antlr.SqlStatementParser$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/hibernate/hql/internal/antlr/SqlStatementParser;)V
       5: return
}
