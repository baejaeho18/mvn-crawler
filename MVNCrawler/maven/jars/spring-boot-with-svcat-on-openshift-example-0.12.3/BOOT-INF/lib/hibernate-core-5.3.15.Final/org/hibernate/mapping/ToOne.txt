Compiled from "ToOne.java"
public abstract class org.hibernate.mapping.ToOne extends org.hibernate.mapping.SimpleValue implements org.hibernate.mapping.Fetchable {
  private org.hibernate.FetchMode fetchMode;

  protected java.lang.String referencedPropertyName;

  private java.lang.String referencedEntityName;

  private java.lang.String propertyName;

  private boolean embedded;

  private boolean lazy;

  protected boolean unwrapProxy;

  protected boolean referenceToPrimaryKey;

  protected org.hibernate.mapping.ToOne(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.Table);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/hibernate/mapping/SimpleValue."<init>":(Lorg/hibernate/boot/spi/MetadataImplementor;Lorg/hibernate/mapping/Table;)V
       6: aload_0
       7: iconst_1
       8: putfield      #2                  // Field lazy:Z
      11: aload_0
      12: iconst_1
      13: putfield      #3                  // Field referenceToPrimaryKey:Z
      16: return

  protected org.hibernate.mapping.ToOne(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.Table);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #4                  // Method org/hibernate/mapping/SimpleValue."<init>":(Lorg/hibernate/boot/spi/MetadataBuildingContext;Lorg/hibernate/mapping/Table;)V
       6: aload_0
       7: iconst_1
       8: putfield      #2                  // Field lazy:Z
      11: aload_0
      12: iconst_1
      13: putfield      #3                  // Field referenceToPrimaryKey:Z
      16: return

  public org.hibernate.FetchMode getFetchMode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fetchMode:Lorg/hibernate/FetchMode;
       4: areturn

  public void setFetchMode(org.hibernate.FetchMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field fetchMode:Lorg/hibernate/FetchMode;
       5: return

  public abstract void createForeignKey() throws org.hibernate.MappingException;

  public abstract org.hibernate.type.Type getType() throws org.hibernate.MappingException;

  public java.lang.String getReferencedPropertyName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field referencedPropertyName:Ljava/lang/String;
       4: areturn

  public void setReferencedPropertyName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     9
       5: aconst_null
       6: goto          13
       9: aload_1
      10: invokevirtual #7                  // Method java/lang/String.intern:()Ljava/lang/String;
      13: putfield      #6                  // Field referencedPropertyName:Ljava/lang/String;
      16: return

  public java.lang.String getReferencedEntityName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field referencedEntityName:Ljava/lang/String;
       4: areturn

  public void setReferencedEntityName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     9
       5: aconst_null
       6: goto          13
       9: aload_1
      10: invokevirtual #7                  // Method java/lang/String.intern:()Ljava/lang/String;
      13: putfield      #8                  // Field referencedEntityName:Ljava/lang/String;
      16: return

  public java.lang.String getPropertyName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field propertyName:Ljava/lang/String;
       4: areturn

  public void setPropertyName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     9
       5: aconst_null
       6: goto          13
       9: aload_1
      10: invokevirtual #7                  // Method java/lang/String.intern:()Ljava/lang/String;
      13: putfield      #9                  // Field propertyName:Ljava/lang/String;
      16: return

  public void setTypeUsingReflection(java.lang.String, java.lang.String) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field referencedEntityName:Ljava/lang/String;
       4: ifnonnull     45
       7: aload_0
       8: invokevirtual #10                 // Method getMetadata:()Lorg/hibernate/boot/spi/MetadataImplementor;
      11: invokeinterface #11,  1           // InterfaceMethod org/hibernate/boot/spi/MetadataImplementor.getMetadataBuildingOptions:()Lorg/hibernate/boot/spi/MetadataBuildingOptions;
      16: invokeinterface #12,  1           // InterfaceMethod org/hibernate/boot/spi/MetadataBuildingOptions.getServiceRegistry:()Lorg/hibernate/boot/registry/StandardServiceRegistry;
      21: ldc           #13                 // class org/hibernate/boot/registry/classloading/spi/ClassLoaderService
      23: invokeinterface #14,  2           // InterfaceMethod org/hibernate/boot/registry/StandardServiceRegistry.getService:(Ljava/lang/Class;)Lorg/hibernate/service/Service;
      28: checkcast     #13                 // class org/hibernate/boot/registry/classloading/spi/ClassLoaderService
      31: astore_3
      32: aload_0
      33: aload_1
      34: aload_2
      35: aload_3
      36: invokestatic  #15                 // Method org/hibernate/internal/util/ReflectHelper.reflectedPropertyClass:(Ljava/lang/String;Ljava/lang/String;Lorg/hibernate/boot/registry/classloading/spi/ClassLoaderService;)Ljava/lang/Class;
      39: invokevirtual #16                 // Method java/lang/Class.getName:()Ljava/lang/String;
      42: putfield      #8                  // Field referencedEntityName:Ljava/lang/String;
      45: return

  public boolean isTypeSpecified();
    Code:
       0: aload_0
       1: getfield      #8                  // Field referencedEntityName:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.Object accept(org.hibernate.mapping.ValueVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #17,  2           // InterfaceMethod org/hibernate/mapping/ValueVisitor.accept:(Lorg/hibernate/mapping/SimpleValue;)Ljava/lang/Object;
       7: areturn

  public boolean isSame(org.hibernate.mapping.SimpleValue);
    Code:
       0: aload_1
       1: instanceof    #18                 // class org/hibernate/mapping/ToOne
       4: ifeq          22
       7: aload_0
       8: aload_1
       9: checkcast     #18                 // class org/hibernate/mapping/ToOne
      12: invokevirtual #19                 // Method isSame:(Lorg/hibernate/mapping/ToOne;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean isSame(org.hibernate.mapping.ToOne);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method org/hibernate/mapping/SimpleValue.isSame:(Lorg/hibernate/mapping/SimpleValue;)Z
       5: ifeq          51
       8: aload_0
       9: getfield      #6                  // Field referencedPropertyName:Ljava/lang/String;
      12: aload_1
      13: getfield      #6                  // Field referencedPropertyName:Ljava/lang/String;
      16: invokestatic  #21                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      19: ifeq          51
      22: aload_0
      23: getfield      #8                  // Field referencedEntityName:Ljava/lang/String;
      26: aload_1
      27: getfield      #8                  // Field referencedEntityName:Ljava/lang/String;
      30: invokestatic  #21                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      33: ifeq          51
      36: aload_0
      37: getfield      #22                 // Field embedded:Z
      40: aload_1
      41: getfield      #22                 // Field embedded:Z
      44: if_icmpne     51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: ireturn

  public boolean isValid(org.hibernate.engine.spi.Mapping) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field referencedEntityName:Ljava/lang/String;
       4: ifnonnull     17
       7: new           #23                 // class org/hibernate/MappingException
      10: dup
      11: ldc           #24                 // String association must specify the referenced entity
      13: invokespecial #25                 // Method org/hibernate/MappingException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: invokespecial #26                 // Method org/hibernate/mapping/SimpleValue.isValid:(Lorg/hibernate/engine/spi/Mapping;)Z
      22: ireturn

  public boolean isLazy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field lazy:Z
       4: ireturn

  public void setLazy(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field lazy:Z
       5: return

  public boolean isUnwrapProxy();
    Code:
       0: aload_0
       1: getfield      #27                 // Field unwrapProxy:Z
       4: ireturn

  public void setUnwrapProxy(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field unwrapProxy:Z
       5: return

  public boolean isReferenceToPrimaryKey();
    Code:
       0: aload_0
       1: getfield      #3                  // Field referenceToPrimaryKey:Z
       4: ireturn

  public void setReferenceToPrimaryKey(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field referenceToPrimaryKey:Z
       5: return
}
