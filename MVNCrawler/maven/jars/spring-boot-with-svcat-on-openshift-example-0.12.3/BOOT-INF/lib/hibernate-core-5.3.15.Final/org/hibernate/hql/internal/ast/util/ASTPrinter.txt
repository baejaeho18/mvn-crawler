Compiled from "ASTPrinter.java"
public class org.hibernate.hql.internal.ast.util.ASTPrinter {
  private final java.util.Map<java.lang.Integer, java.lang.String> tokenTypeNameCache;

  org.hibernate.hql.internal.ast.util.ASTPrinter(java.lang.Class);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method org/hibernate/hql/internal/ast/util/ASTUtil.generateTokenNameCache:(Ljava/lang/Class;)Ljava/util/Map;
       9: putfield      #3                  // Field tokenTypeNameCache:Ljava/util/Map;
      12: return

  public java.lang.String showAsString(antlr.collections.AST, java.lang.String);
    Code:
       0: new           #4                  // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #5                  // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_3
       8: new           #6                  // class java/io/PrintStream
      11: dup
      12: aload_3
      13: invokespecial #7                  // Method java/io/PrintStream."<init>":(Ljava/io/OutputStream;)V
      16: astore        4
      18: aload         4
      20: aload_2
      21: invokevirtual #8                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      24: aload_0
      25: aload_1
      26: aload         4
      28: invokevirtual #9                  // Method showAst:(Lantlr/collections/AST;Ljava/io/PrintStream;)V
      31: aload         4
      33: invokevirtual #10                 // Method java/io/PrintStream.flush:()V
      36: new           #11                 // class java/lang/String
      39: dup
      40: aload_3
      41: invokevirtual #12                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      44: invokespecial #13                 // Method java/lang/String."<init>":([B)V
      47: areturn

  public void showAst(antlr.collections.AST, java.io.PrintStream);
    Code:
       0: aload_0
       1: aload_1
       2: new           #14                 // class java/io/PrintWriter
       5: dup
       6: aload_2
       7: invokespecial #15                 // Method java/io/PrintWriter."<init>":(Ljava/io/OutputStream;)V
      10: invokevirtual #16                 // Method showAst:(Lantlr/collections/AST;Ljava/io/PrintWriter;)V
      13: return

  public void showAst(antlr.collections.AST, java.io.PrintWriter);
    Code:
       0: new           #17                 // class java/util/ArrayList
       3: dup
       4: invokespecial #18                 // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_0
       9: aload_3
      10: aload_2
      11: aload_1
      12: invokespecial #19                 // Method showAst:(Ljava/util/ArrayList;Ljava/io/PrintWriter;Lantlr/collections/AST;)V
      15: aload_2
      16: invokevirtual #20                 // Method java/io/PrintWriter.flush:()V
      19: return

  public java.lang.String getTokenTypeName(int);
    Code:
       0: iload_1
       1: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       4: astore_2
       5: aload_0
       6: getfield      #3                  // Field tokenTypeNameCache:Ljava/util/Map;
       9: aload_2
      10: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #11                 // class java/lang/String
      18: astore_3
      19: aload_3
      20: ifnonnull     28
      23: aload_2
      24: invokevirtual #23                 // Method java/lang/Integer.toString:()Ljava/lang/String;
      27: astore_3
      28: aload_3
      29: areturn

  private void showAst(java.util.ArrayList<antlr.collections.AST>, java.io.PrintWriter, antlr.collections.AST);
    Code:
       0: aload_3
       1: ifnonnull     11
       4: aload_2
       5: ldc           #24                 // String AST is null!
       7: invokevirtual #25                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      10: return
      11: aload_1
      12: invokevirtual #26                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      15: astore        4
      17: aload         4
      19: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          67
      27: aload         4
      29: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #29                 // class antlr/collections/AST
      37: astore        5
      39: aload         5
      41: invokeinterface #30,  1           // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      46: ifnonnull     58
      49: aload_2
      50: ldc           #31                 // String
      52: invokevirtual #32                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      55: goto          64
      58: aload_2
      59: ldc           #33                 // String  |
      61: invokevirtual #32                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      64: goto          17
      67: aload_3
      68: invokeinterface #30,  1           // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      73: ifnonnull     85
      76: aload_2
      77: ldc           #34                 // String  \\-
      79: invokevirtual #32                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      82: goto          91
      85: aload_2
      86: ldc           #35                 // String  +-
      88: invokevirtual #32                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      91: aload_0
      92: aload_2
      93: aload_3
      94: invokespecial #36                 // Method showNode:(Ljava/io/PrintWriter;Lantlr/collections/AST;)V
      97: new           #17                 // class java/util/ArrayList
     100: dup
     101: aload_1
     102: invokespecial #37                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     105: astore        4
     107: aload         4
     109: aload_3
     110: invokevirtual #38                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     113: pop
     114: aload_3
     115: invokeinterface #39,  1           // InterfaceMethod antlr/collections/AST.getFirstChild:()Lantlr/collections/AST;
     120: astore        5
     122: aload         5
     124: ifnull        148
     127: aload_0
     128: aload         4
     130: aload_2
     131: aload         5
     133: invokespecial #19                 // Method showAst:(Ljava/util/ArrayList;Ljava/io/PrintWriter;Lantlr/collections/AST;)V
     136: aload         5
     138: invokeinterface #30,  1           // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
     143: astore        5
     145: goto          122
     148: aload         4
     150: invokevirtual #40                 // Method java/util/ArrayList.clear:()V
     153: return

  private void showNode(java.io.PrintWriter, antlr.collections.AST);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #41                 // Method nodeToString:(Lantlr/collections/AST;)Ljava/lang/String;
       5: astore_3
       6: aload_1
       7: aload_3
       8: invokevirtual #25                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      11: return

  public java.lang.String nodeToString(antlr.collections.AST);
    Code:
       0: aload_1
       1: ifnonnull     7
       4: ldc           #42                 // String {node:null}
       6: areturn
       7: new           #43                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      14: astore_2
      15: aload_2
      16: ldc           #45                 // String [
      18: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: aload_1
      23: invokeinterface #47,  1           // InterfaceMethod antlr/collections/AST.getType:()I
      28: invokevirtual #48                 // Method getTokenTypeName:(I)Ljava/lang/String;
      31: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #49                 // String ]
      36: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_2
      41: aload_1
      42: invokevirtual #50                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      45: invokevirtual #51                 // Method java/lang/Class.getName:()Ljava/lang/String;
      48: invokestatic  #52                 // Method org/hibernate/internal/util/StringHelper.unqualify:(Ljava/lang/String;)Ljava/lang/String;
      51: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #53                 // String :
      56: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: aload_2
      61: ldc           #54                 // String \'
      63: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: pop
      67: aload_1
      68: invokeinterface #55,  1           // InterfaceMethod antlr/collections/AST.getText:()Ljava/lang/String;
      73: astore_3
      74: aload_3
      75: ifnonnull     81
      78: ldc           #56                 // String {text:null}
      80: astore_3
      81: aload_3
      82: aload_2
      83: invokestatic  #57                 // Method appendEscapedMultibyteChars:(Ljava/lang/String;Ljava/lang/StringBuilder;)V
      86: aload_2
      87: ldc           #54                 // String \'
      89: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_1
      94: instanceof    #58                 // class org/hibernate/hql/internal/ast/tree/DisplayableNode
      97: ifeq          123
     100: aload_1
     101: checkcast     #58                 // class org/hibernate/hql/internal/ast/tree/DisplayableNode
     104: astore        4
     106: aload_2
     107: ldc           #59                 // String
     109: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload         4
     114: invokeinterface #60,  1           // InterfaceMethod org/hibernate/hql/internal/ast/tree/DisplayableNode.getDisplayText:()Ljava/lang/String;
     119: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: pop
     123: aload_2
     124: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: areturn

  public static void appendEscapedMultibyteChars(java.lang.String, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method java/lang/String.toCharArray:()[C
       4: astore_2
       5: aload_2
       6: astore_3
       7: aload_3
       8: arraylength
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: iload         4
      18: if_icmpge     68
      21: aload_3
      22: iload         5
      24: caload
      25: istore        6
      27: iload         6
      29: sipush        256
      32: if_icmple     55
      35: aload_1
      36: ldc           #63                 // String \\u
      38: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: pop
      42: aload_1
      43: iload         6
      45: invokestatic  #64                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      48: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: pop
      52: goto          62
      55: aload_1
      56: iload         6
      58: invokevirtual #65                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      61: pop
      62: iinc          5, 1
      65: goto          14
      68: return

  public static java.lang.String escapeMultibyteChars(java.lang.String);
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokestatic  #57                 // Method appendEscapedMultibyteChars:(Ljava/lang/String;Ljava/lang/StringBuilder;)V
      13: aload_1
      14: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      17: areturn
}
