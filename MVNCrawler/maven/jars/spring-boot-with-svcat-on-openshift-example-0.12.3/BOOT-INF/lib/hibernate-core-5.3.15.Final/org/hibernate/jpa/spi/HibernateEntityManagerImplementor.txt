Compiled from "HibernateEntityManagerImplementor.java"
public interface org.hibernate.jpa.spi.HibernateEntityManagerImplementor extends org.hibernate.ejb.HibernateEntityManager,org.hibernate.jpa.spi.HibernateEntityManagerFactoryAware {
  public abstract org.hibernate.engine.spi.SessionImplementor getSession();

  public abstract void checkOpen(boolean) throws java.lang.IllegalStateException;

  public abstract boolean isTransactionInProgress();

  public abstract void markForRollbackOnly();

  public abstract org.hibernate.LockOptions getLockRequest(javax.persistence.LockModeType, java.util.Map<java.lang.String, java.lang.Object>);

  public default org.hibernate.LockOptions buildLockOptions(javax.persistence.LockModeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #1,  3            // InterfaceMethod getLockRequest:(Ljavax/persistence/LockModeType;Ljava/util/Map;)Lorg/hibernate/LockOptions;
       8: areturn

  public abstract <T> org.hibernate.query.Query<T> createQuery(java.lang.String, java.lang.Class<T>, javax.persistence.criteria.Selection, org.hibernate.jpa.spi.HibernateEntityManagerImplementor$QueryOptions);

  public default org.hibernate.Session getSession();
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod getSession:()Lorg/hibernate/engine/spi/SessionImplementor;
       6: areturn
}
