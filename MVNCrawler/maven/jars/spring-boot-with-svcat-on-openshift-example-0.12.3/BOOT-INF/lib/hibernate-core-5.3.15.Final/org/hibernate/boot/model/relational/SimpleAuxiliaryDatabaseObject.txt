Compiled from "SimpleAuxiliaryDatabaseObject.java"
public class org.hibernate.boot.model.relational.SimpleAuxiliaryDatabaseObject extends org.hibernate.boot.model.relational.AbstractAuxiliaryDatabaseObject {
  private static final java.lang.String CATALOG_NAME_PLACEHOLDER;

  private static final java.lang.String SCHEMA_NAME_PLACEHOLDER;

  private final java.lang.String catalogName;

  private final java.lang.String schemaName;

  private final java.lang.String[] createStrings;

  private final java.lang.String[] dropStrings;

  public org.hibernate.boot.model.relational.SimpleAuxiliaryDatabaseObject(org.hibernate.boot.model.relational.Namespace, java.lang.String, java.lang.String, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: anewarray     #1                  // class java/lang/String
       6: dup
       7: iconst_0
       8: aload_2
       9: aastore
      10: iconst_1
      11: anewarray     #1                  // class java/lang/String
      14: dup
      15: iconst_0
      16: aload_3
      17: aastore
      18: aload         4
      20: invokespecial #2                  // Method "<init>":(Lorg/hibernate/boot/model/relational/Namespace;[Ljava/lang/String;[Ljava/lang/String;Ljava/util/Set;)V
      23: return

  public org.hibernate.boot.model.relational.SimpleAuxiliaryDatabaseObject(org.hibernate.boot.model.relational.Namespace, java.lang.String[], java.lang.String[], java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload         4
       3: aload_1
       4: invokevirtual #3                  // Method org/hibernate/boot/model/relational/Namespace.getPhysicalName:()Lorg/hibernate/boot/model/relational/Namespace$Name;
       7: invokevirtual #4                  // Method org/hibernate/boot/model/relational/Namespace$Name.getCatalog:()Lorg/hibernate/boot/model/naming/Identifier;
      10: invokestatic  #5                  // Method extractName:(Lorg/hibernate/boot/model/naming/Identifier;)Ljava/lang/String;
      13: aload_1
      14: invokevirtual #3                  // Method org/hibernate/boot/model/relational/Namespace.getPhysicalName:()Lorg/hibernate/boot/model/relational/Namespace$Name;
      17: invokevirtual #6                  // Method org/hibernate/boot/model/relational/Namespace$Name.getSchema:()Lorg/hibernate/boot/model/naming/Identifier;
      20: invokestatic  #5                  // Method extractName:(Lorg/hibernate/boot/model/naming/Identifier;)Ljava/lang/String;
      23: aload_2
      24: aload_3
      25: invokespecial #7                  // Method "<init>":(Ljava/util/Set;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V
      28: return

  private static java.lang.String extractName(org.hibernate.boot.model.naming.Identifier);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          12
       8: aload_0
       9: invokevirtual #8                  // Method org/hibernate/boot/model/naming/Identifier.getText:()Ljava/lang/String;
      12: areturn

  public org.hibernate.boot.model.relational.SimpleAuxiliaryDatabaseObject(java.util.Set<java.lang.String>, java.lang.String, java.lang.String, java.lang.String[], java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method org/hibernate/boot/model/relational/AbstractAuxiliaryDatabaseObject."<init>":(Ljava/util/Set;)V
       5: aload_0
       6: aload_2
       7: putfield      #10                 // Field catalogName:Ljava/lang/String;
      10: aload_0
      11: aload_3
      12: putfield      #11                 // Field schemaName:Ljava/lang/String;
      15: aload_0
      16: aload         4
      18: putfield      #12                 // Field createStrings:[Ljava/lang/String;
      21: aload_0
      22: aload         5
      24: putfield      #13                 // Field dropStrings:[Ljava/lang/String;
      27: return

  public java.lang.String[] sqlCreateStrings(org.hibernate.dialect.Dialect);
    Code:
       0: aload_0
       1: getfield      #12                 // Field createStrings:[Ljava/lang/String;
       4: arraylength
       5: anewarray     #1                  // class java/lang/String
       8: astore_2
       9: iconst_0
      10: istore_3
      11: aload_0
      12: getfield      #12                 // Field createStrings:[Ljava/lang/String;
      15: arraylength
      16: istore        4
      18: iload_3
      19: iload         4
      21: if_icmpge     43
      24: aload_2
      25: iload_3
      26: aload_0
      27: aload_0
      28: getfield      #12                 // Field createStrings:[Ljava/lang/String;
      31: iload_3
      32: aaload
      33: invokespecial #14                 // Method injectCatalogAndSchema:(Ljava/lang/String;)Ljava/lang/String;
      36: aastore
      37: iinc          3, 1
      40: goto          18
      43: aload_2
      44: areturn

  public java.lang.String[] sqlDropStrings(org.hibernate.dialect.Dialect);
    Code:
       0: aload_0
       1: getfield      #13                 // Field dropStrings:[Ljava/lang/String;
       4: arraylength
       5: anewarray     #1                  // class java/lang/String
       8: astore_2
       9: iconst_0
      10: istore_3
      11: aload_0
      12: getfield      #13                 // Field dropStrings:[Ljava/lang/String;
      15: arraylength
      16: istore        4
      18: iload_3
      19: iload         4
      21: if_icmpge     43
      24: aload_2
      25: iload_3
      26: aload_0
      27: aload_0
      28: getfield      #13                 // Field dropStrings:[Ljava/lang/String;
      31: iload_3
      32: aaload
      33: invokespecial #14                 // Method injectCatalogAndSchema:(Ljava/lang/String;)Ljava/lang/String;
      36: aastore
      37: iinc          3, 1
      40: goto          18
      43: aload_2
      44: areturn

  protected java.lang.String getCatalogName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field catalogName:Ljava/lang/String;
       4: areturn

  protected java.lang.String getSchemaName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field schemaName:Ljava/lang/String;
       4: areturn

  private java.lang.String injectCatalogAndSchema(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #16                 // String ${catalog}
       3: aload_0
       4: getfield      #10                 // Field catalogName:Ljava/lang/String;
       7: ifnonnull     15
      10: ldc           #17                 // String
      12: goto          19
      15: aload_0
      16: getfield      #10                 // Field catalogName:Ljava/lang/String;
      19: invokestatic  #18                 // Method org/hibernate/internal/util/StringHelper.replace:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      22: astore_2
      23: aload_2
      24: ldc           #19                 // String ${schema}
      26: aload_0
      27: getfield      #11                 // Field schemaName:Ljava/lang/String;
      30: ifnonnull     38
      33: ldc           #17                 // String
      35: goto          42
      38: aload_0
      39: getfield      #11                 // Field schemaName:Ljava/lang/String;
      42: invokestatic  #18                 // Method org/hibernate/internal/util/StringHelper.replace:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      45: astore_2
      46: aload_2
      47: areturn
}
