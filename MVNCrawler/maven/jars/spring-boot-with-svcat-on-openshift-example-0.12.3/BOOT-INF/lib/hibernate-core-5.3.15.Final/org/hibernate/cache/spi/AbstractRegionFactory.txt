Compiled from "AbstractRegionFactory.java"
public abstract class org.hibernate.cache.spi.AbstractRegionFactory implements org.hibernate.cache.spi.RegionFactory {
  private final java.util.concurrent.atomic.AtomicBoolean started;

  public static final java.util.List<java.lang.String> LEGACY_QUERY_RESULTS_REGION_UNQUALIFIED_NAMES;

  public static final java.util.List<java.lang.String> LEGACY_UPDATE_TIMESTAMPS_REGION_UNQUALIFIED_NAMES;

  private java.lang.Exception startingException;

  private org.hibernate.boot.spi.SessionFactoryOptions options;

  static final boolean $assertionsDisabled;

  public org.hibernate.cache.spi.AbstractRegionFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #4                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: return

  protected boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #4                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          33
      10: getstatic     #6                  // Field $assertionsDisabled:Z
      13: ifne          31
      16: aload_0
      17: getfield      #7                  // Field options:Lorg/hibernate/boot/spi/SessionFactoryOptions;
      20: ifnonnull     31
      23: new           #8                  // class java/lang/AssertionError
      26: dup
      27: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: iconst_1
      32: ireturn
      33: getstatic     #6                  // Field $assertionsDisabled:Z
      36: ifne          54
      39: aload_0
      40: getfield      #7                  // Field options:Lorg/hibernate/boot/spi/SessionFactoryOptions;
      43: ifnull        54
      46: new           #8                  // class java/lang/AssertionError
      49: dup
      50: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      53: athrow
      54: new           #10                 // class java/lang/IllegalStateException
      57: dup
      58: ldc           #11                 // String Cache provider not started
      60: aload_0
      61: getfield      #12                 // Field startingException:Ljava/lang/Exception;
      64: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      67: athrow

  protected void verifyStarted();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method verifiedStartStatus:()Z
       4: ifne          21
       7: new           #10                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #11                 // String Cache provider not started
      13: aload_0
      14: getfield      #12                 // Field startingException:Ljava/lang/Exception;
      17: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      20: athrow
      21: return

  protected boolean verifiedStartStatus();
    Code:
       0: aload_0
       1: getfield      #4                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          33
      10: getstatic     #6                  // Field $assertionsDisabled:Z
      13: ifne          31
      16: aload_0
      17: getfield      #7                  // Field options:Lorg/hibernate/boot/spi/SessionFactoryOptions;
      20: ifnonnull     31
      23: new           #8                  // class java/lang/AssertionError
      26: dup
      27: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: iconst_1
      32: ireturn
      33: getstatic     #6                  // Field $assertionsDisabled:Z
      36: ifne          54
      39: aload_0
      40: getfield      #7                  // Field options:Lorg/hibernate/boot/spi/SessionFactoryOptions;
      43: ifnull        54
      46: new           #8                  // class java/lang/AssertionError
      49: dup
      50: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      53: athrow
      54: iconst_0
      55: ireturn

  protected org.hibernate.boot.spi.SessionFactoryOptions getOptions();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method verifyStarted:()V
       4: aload_0
       5: getfield      #7                  // Field options:Lorg/hibernate/boot/spi/SessionFactoryOptions;
       8: areturn

  public final void start(org.hibernate.boot.spi.SessionFactoryOptions, java.util.Map) throws org.hibernate.cache.CacheException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          71
      12: aload_0
      13: dup
      14: astore_3
      15: monitorenter
      16: aload_0
      17: aload_1
      18: putfield      #7                  // Field options:Lorg/hibernate/boot/spi/SessionFactoryOptions;
      21: aload_0
      22: aload_1
      23: aload_2
      24: invokevirtual #17                 // Method prepareForUse:(Lorg/hibernate/boot/spi/SessionFactoryOptions;Ljava/util/Map;)V
      27: aload_0
      28: aconst_null
      29: putfield      #12                 // Field startingException:Ljava/lang/Exception;
      32: goto          56
      35: astore        4
      37: aload_0
      38: aconst_null
      39: putfield      #7                  // Field options:Lorg/hibernate/boot/spi/SessionFactoryOptions;
      42: aload_0
      43: getfield      #4                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      46: iconst_0
      47: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      50: aload_0
      51: aload         4
      53: putfield      #12                 // Field startingException:Ljava/lang/Exception;
      56: aload_3
      57: monitorexit
      58: goto          68
      61: astore        5
      63: aload_3
      64: monitorexit
      65: aload         5
      67: athrow
      68: goto          79
      71: getstatic     #20                 // Field org/hibernate/cache/spi/SecondLevelCacheLogger.INSTANCE:Lorg/hibernate/cache/spi/SecondLevelCacheLogger;
      74: invokeinterface #21,  1           // InterfaceMethod org/hibernate/cache/spi/SecondLevelCacheLogger.attemptToStartAlreadyStartedCacheProvider:()V
      79: return
    Exception table:
       from    to  target type
          21    32    35   Class java/lang/Exception
          16    58    61   any
          61    65    61   any

  protected abstract void prepareForUse(org.hibernate.boot.spi.SessionFactoryOptions, java.util.Map);

  public final void stop();
    Code:
       0: aload_0
       1: getfield      #4                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: iconst_0
       6: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          59
      12: aload_0
      13: dup
      14: astore_1
      15: monitorenter
      16: aload_0
      17: invokevirtual #22                 // Method releaseFromUse:()V
      20: aload_0
      21: aconst_null
      22: putfield      #7                  // Field options:Lorg/hibernate/boot/spi/SessionFactoryOptions;
      25: aload_0
      26: aconst_null
      27: putfield      #12                 // Field startingException:Ljava/lang/Exception;
      30: goto          46
      33: astore_2
      34: aload_0
      35: aconst_null
      36: putfield      #7                  // Field options:Lorg/hibernate/boot/spi/SessionFactoryOptions;
      39: aload_0
      40: aconst_null
      41: putfield      #12                 // Field startingException:Ljava/lang/Exception;
      44: aload_2
      45: athrow
      46: aload_1
      47: monitorexit
      48: goto          56
      51: astore_3
      52: aload_1
      53: monitorexit
      54: aload_3
      55: athrow
      56: goto          67
      59: getstatic     #20                 // Field org/hibernate/cache/spi/SecondLevelCacheLogger.INSTANCE:Lorg/hibernate/cache/spi/SecondLevelCacheLogger;
      62: invokeinterface #23,  1           // InterfaceMethod org/hibernate/cache/spi/SecondLevelCacheLogger.attemptToStopAlreadyStoppedCacheProvider:()V
      67: return
    Exception table:
       from    to  target type
          16    20    33   any
          16    48    51   any
          51    54    51   any

  protected abstract void releaseFromUse();

  public boolean isMinimalPutsEnabledByDefault();
    Code:
       0: iconst_0
       1: ireturn

  public org.hibernate.cache.spi.access.AccessType getDefaultAccessType();
    Code:
       0: getstatic     #24                 // Field org/hibernate/cache/spi/access/AccessType.READ_WRITE:Lorg/hibernate/cache/spi/access/AccessType;
       3: areturn

  public java.lang.String qualify(java.lang.String);
    Code:
       0: getstatic     #25                 // Field org/hibernate/cache/spi/support/RegionNameQualifier.INSTANCE:Lorg/hibernate/cache/spi/support/RegionNameQualifier;
       3: aload_1
       4: aload_0
       5: getfield      #7                  // Field options:Lorg/hibernate/boot/spi/SessionFactoryOptions;
       8: invokevirtual #26                 // Method org/hibernate/cache/spi/support/RegionNameQualifier.qualify:(Ljava/lang/String;Lorg/hibernate/boot/spi/SessionFactoryOptions;)Ljava/lang/String;
      11: areturn

  public org.hibernate.cache.spi.CacheTransactionSynchronization createTransactionContext(org.hibernate.engine.spi.SharedSessionContractImplementor);
    Code:
       0: new           #27                 // class org/hibernate/cache/spi/StandardCacheTransactionSynchronization
       3: dup
       4: aload_0
       5: invokespecial #28                 // Method org/hibernate/cache/spi/StandardCacheTransactionSynchronization."<init>":(Lorg/hibernate/cache/spi/RegionFactory;)V
       8: areturn

  public long nextTimestamp();
    Code:
       0: invokestatic  #29                 // Method org/hibernate/cache/spi/support/SimpleTimestamper.next:()J
       3: lreturn

  public long getTimeout();
    Code:
       0: invokestatic  #30                 // Method org/hibernate/cache/spi/support/SimpleTimestamper.timeOut:()I
       3: i2l
       4: lreturn

  static {};
    Code:
       0: ldc           #31                 // class org/hibernate/cache/spi/AbstractRegionFactory
       2: invokevirtual #32                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #6                  // Field $assertionsDisabled:Z
      16: iconst_2
      17: anewarray     #33                 // class java/lang/String
      20: dup
      21: iconst_0
      22: ldc           #34                 // String org.hibernate.cache.spi.QueryResultsRegion
      24: aastore
      25: dup
      26: iconst_1
      27: ldc           #35                 // String org.hibernate.cache.internal.StandardQueryCache
      29: aastore
      30: invokestatic  #36                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      33: invokestatic  #37                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      36: putstatic     #38                 // Field LEGACY_QUERY_RESULTS_REGION_UNQUALIFIED_NAMES:Ljava/util/List;
      39: iconst_2
      40: anewarray     #33                 // class java/lang/String
      43: dup
      44: iconst_0
      45: ldc           #39                 // String org.hibernate.cache.spi.TimestampsRegion
      47: aastore
      48: dup
      49: iconst_1
      50: ldc           #40                 // String org.hibernate.cache.spi.UpdateTimestampsCache
      52: aastore
      53: invokestatic  #36                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      56: invokestatic  #37                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      59: putstatic     #41                 // Field LEGACY_UPDATE_TIMESTAMPS_REGION_UNQUALIFIED_NAMES:Ljava/util/List;
      62: return
}
