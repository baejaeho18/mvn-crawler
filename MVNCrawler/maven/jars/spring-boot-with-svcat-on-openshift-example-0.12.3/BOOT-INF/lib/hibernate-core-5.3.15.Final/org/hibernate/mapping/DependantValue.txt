Compiled from "DependantValue.java"
public class org.hibernate.mapping.DependantValue extends org.hibernate.mapping.SimpleValue {
  private org.hibernate.mapping.KeyValue wrappedValue;

  private boolean nullable;

  private boolean updateable;

  public org.hibernate.mapping.DependantValue(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.Table, org.hibernate.mapping.KeyValue);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/hibernate/mapping/SimpleValue."<init>":(Lorg/hibernate/boot/spi/MetadataImplementor;Lorg/hibernate/mapping/Table;)V
       6: aload_0
       7: aload_3
       8: putfield      #2                  // Field wrappedValue:Lorg/hibernate/mapping/KeyValue;
      11: return

  public org.hibernate.mapping.DependantValue(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.Table, org.hibernate.mapping.KeyValue);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method org/hibernate/mapping/SimpleValue."<init>":(Lorg/hibernate/boot/spi/MetadataBuildingContext;Lorg/hibernate/mapping/Table;)V
       6: aload_0
       7: aload_3
       8: putfield      #2                  // Field wrappedValue:Lorg/hibernate/mapping/KeyValue;
      11: return

  public org.hibernate.type.Type getType() throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field wrappedValue:Lorg/hibernate/mapping/KeyValue;
       4: invokeinterface #4,  1            // InterfaceMethod org/hibernate/mapping/KeyValue.getType:()Lorg/hibernate/type/Type;
       9: areturn

  public void setTypeUsingReflection(java.lang.String, java.lang.String);
    Code:
       0: return

  public java.lang.Object accept(org.hibernate.mapping.ValueVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #5,  2            // InterfaceMethod org/hibernate/mapping/ValueVisitor.accept:(Lorg/hibernate/mapping/DependantValue;)Ljava/lang/Object;
       7: areturn

  public boolean isNullable();
    Code:
       0: aload_0
       1: getfield      #6                  // Field nullable:Z
       4: ireturn

  public void setNullable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field nullable:Z
       5: return

  public boolean isUpdateable();
    Code:
       0: aload_0
       1: getfield      #7                  // Field updateable:Z
       4: ireturn

  public void setUpdateable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field updateable:Z
       5: return

  public boolean isSame(org.hibernate.mapping.SimpleValue);
    Code:
       0: aload_1
       1: instanceof    #8                  // class org/hibernate/mapping/DependantValue
       4: ifeq          22
       7: aload_0
       8: aload_1
       9: checkcast     #8                  // class org/hibernate/mapping/DependantValue
      12: invokevirtual #9                  // Method isSame:(Lorg/hibernate/mapping/DependantValue;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean isSame(org.hibernate.mapping.DependantValue);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method org/hibernate/mapping/SimpleValue.isSame:(Lorg/hibernate/mapping/SimpleValue;)Z
       5: ifeq          26
       8: aload_0
       9: getfield      #2                  // Field wrappedValue:Lorg/hibernate/mapping/KeyValue;
      12: aload_1
      13: getfield      #2                  // Field wrappedValue:Lorg/hibernate/mapping/KeyValue;
      16: invokestatic  #11                 // Method isSame:(Lorg/hibernate/mapping/Value;Lorg/hibernate/mapping/Value;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn
}
