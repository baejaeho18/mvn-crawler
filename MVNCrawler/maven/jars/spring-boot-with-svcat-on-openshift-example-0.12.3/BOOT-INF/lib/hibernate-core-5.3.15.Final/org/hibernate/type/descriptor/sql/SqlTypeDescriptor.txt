Compiled from "SqlTypeDescriptor.java"
public interface org.hibernate.type.descriptor.sql.SqlTypeDescriptor extends java.io.Serializable {
  public abstract int getSqlType();

  public abstract boolean canBeRemapped();

  public default <T> org.hibernate.type.descriptor.java.BasicJavaDescriptor<T> getJdbcRecommendedJavaTypeMapping(org.hibernate.type.spi.TypeConfiguration);
    Code:
       0: aload_1
       1: invokevirtual #1                  // Method org/hibernate/type/spi/TypeConfiguration.getJavaTypeDescriptorRegistry:()Lorg/hibernate/type/descriptor/java/spi/JavaTypeDescriptorRegistry;
       4: getstatic     #2                  // Field org/hibernate/type/descriptor/sql/JdbcTypeJavaClassMappings.INSTANCE:Lorg/hibernate/type/descriptor/sql/JdbcTypeJavaClassMappings;
       7: aload_0
       8: invokeinterface #3,  1            // InterfaceMethod getSqlType:()I
      13: invokevirtual #4                  // Method org/hibernate/type/descriptor/sql/JdbcTypeJavaClassMappings.determineJavaClassForJdbcTypeCode:(I)Ljava/lang/Class;
      16: invokevirtual #5                  // Method org/hibernate/type/descriptor/java/spi/JavaTypeDescriptorRegistry.getDescriptor:(Ljava/lang/Class;)Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;
      19: checkcast     #6                  // class org/hibernate/type/descriptor/java/BasicJavaDescriptor
      22: areturn

  public abstract <X> org.hibernate.type.descriptor.ValueBinder<X> getBinder(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>);

  public abstract <X> org.hibernate.type.descriptor.ValueExtractor<X> getExtractor(org.hibernate.type.descriptor.java.JavaTypeDescriptor<X>);
}
