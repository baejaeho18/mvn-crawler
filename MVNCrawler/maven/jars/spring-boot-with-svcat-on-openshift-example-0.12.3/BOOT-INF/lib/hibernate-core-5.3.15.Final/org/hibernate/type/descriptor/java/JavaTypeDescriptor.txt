Compiled from "JavaTypeDescriptor.java"
public interface org.hibernate.type.descriptor.java.JavaTypeDescriptor<T> extends java.io.Serializable {
  public abstract java.lang.Class<T> getJavaTypeClass();

  public default java.lang.Class<T> getJavaType();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getJavaTypeClass:()Ljava/lang/Class;
       6: areturn

  public default org.hibernate.type.descriptor.java.MutabilityPlan<T> getMutabilityPlan();
    Code:
       0: getstatic     #2                  // Field org/hibernate/type/descriptor/java/ImmutableMutabilityPlan.INSTANCE:Lorg/hibernate/type/descriptor/java/ImmutableMutabilityPlan;
       3: areturn

  public default java.util.Comparator<T> getComparator();
    Code:
       0: ldc           #3                  // class java/lang/Comparable
       2: ldc           #3                  // class java/lang/Comparable
       4: invokevirtual #4                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       7: ifeq          16
      10: getstatic     #5                  // Field org/hibernate/internal/util/compare/ComparableComparator.INSTANCE:Ljava/util/Comparator;
      13: goto          17
      16: aconst_null
      17: areturn

  public default int extractHashCode(T);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #6                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #7                  // String Value to extract hashCode from cannot be null
      10: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokevirtual #9                  // Method java/lang/Object.hashCode:()I
      18: ireturn

  public default boolean areEqual(T, T);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #10                 // Method java/util/Objects.deepEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       5: ireturn

  public default java.lang.String extractLoggableRepresentation(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #11,  2           // InterfaceMethod toString:(Ljava/lang/Object;)Ljava/lang/String;
       7: areturn

  public default java.lang.String toString(T);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: ldc           #12                 // String null
       6: goto          13
       9: aload_1
      10: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
      13: areturn

  public abstract T fromString(java.lang.String);

  public abstract <X> X unwrap(T, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions);

  public abstract <X> T wrap(X, org.hibernate.type.descriptor.WrapperOptions);
}
