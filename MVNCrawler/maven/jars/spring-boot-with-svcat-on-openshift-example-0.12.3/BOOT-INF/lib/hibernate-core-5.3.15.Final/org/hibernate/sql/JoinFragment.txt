Compiled from "JoinFragment.java"
public abstract class org.hibernate.sql.JoinFragment {
  public static final int INNER_JOIN;

  public static final int FULL_JOIN;

  public static final int LEFT_OUTER_JOIN;

  public static final int RIGHT_OUTER_JOIN;

  private boolean hasFilterCondition;

  private boolean hasThetaJoins;

  public org.hibernate.sql.JoinFragment();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract void addJoin(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], org.hibernate.sql.JoinType);

  public abstract void addJoin(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], org.hibernate.sql.JoinType, java.lang.String);

  public void addJoin(java.lang.String, java.lang.String, java.lang.String[][], java.lang.String[], org.hibernate.sql.JoinType, java.lang.String);
    Code:
       0: aload_3
       1: arraylength
       2: iconst_1
       3: if_icmple     36
       6: new           #2                  // class java/lang/UnsupportedOperationException
       9: dup
      10: new           #3                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #5                  // String The join fragment does not support multiple foreign key columns:
      19: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      26: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #10                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: aload_1
      38: aload_2
      39: aload_3
      40: iconst_0
      41: aaload
      42: aload         4
      44: aload         5
      46: aload         6
      48: invokevirtual #11                 // Method addJoin:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Lorg/hibernate/sql/JoinType;Ljava/lang/String;)V
      51: return

  public abstract void addCrossJoin(java.lang.String, java.lang.String);

  public abstract void addJoins(java.lang.String, java.lang.String);

  public abstract java.lang.String toFromFragmentString();

  public abstract java.lang.String toWhereFragmentString();

  public abstract void addCondition(java.lang.String, java.lang.String[], java.lang.String[]);

  public abstract boolean addCondition(java.lang.String);

  public abstract org.hibernate.sql.JoinFragment copy();

  public void addFragment(org.hibernate.sql.JoinFragment);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method hasThetaJoins:()Z
       4: ifeq          12
       7: aload_0
       8: iconst_1
       9: putfield      #13                 // Field hasThetaJoins:Z
      12: aload_0
      13: aload_1
      14: invokevirtual #14                 // Method toFromFragmentString:()Ljava/lang/String;
      17: aload_1
      18: invokevirtual #15                 // Method toWhereFragmentString:()Ljava/lang/String;
      21: invokevirtual #16                 // Method addJoins:(Ljava/lang/String;Ljava/lang/String;)V
      24: return

  protected boolean addCondition(java.lang.StringBuilder, java.lang.String);
    Code:
       0: aload_2
       1: invokestatic  #17                 // Method org/hibernate/internal/util/StringHelper.isNotEmpty:(Ljava/lang/String;)Z
       4: ifeq          31
       7: aload_2
       8: ldc           #18                 // String  and
      10: invokevirtual #19                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      13: ifne          23
      16: aload_1
      17: ldc           #20                 // String  and
      19: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: pop
      23: aload_1
      24: aload_2
      25: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: pop
      29: iconst_1
      30: ireturn
      31: iconst_0
      32: ireturn

  public boolean hasFilterCondition();
    Code:
       0: aload_0
       1: getfield      #21                 // Field hasFilterCondition:Z
       4: ireturn

  public void setHasFilterCondition(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field hasFilterCondition:Z
       5: return

  public boolean hasThetaJoins();
    Code:
       0: aload_0
       1: getfield      #13                 // Field hasThetaJoins:Z
       4: ireturn

  public void setHasThetaJoins(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field hasThetaJoins:Z
       5: return

  static {};
    Code:
       0: getstatic     #22                 // Field org/hibernate/sql/JoinType.INNER_JOIN:Lorg/hibernate/sql/JoinType;
       3: invokevirtual #23                 // Method org/hibernate/sql/JoinType.getJoinTypeValue:()I
       6: putstatic     #24                 // Field INNER_JOIN:I
       9: getstatic     #25                 // Field org/hibernate/sql/JoinType.FULL_JOIN:Lorg/hibernate/sql/JoinType;
      12: invokevirtual #23                 // Method org/hibernate/sql/JoinType.getJoinTypeValue:()I
      15: putstatic     #26                 // Field FULL_JOIN:I
      18: getstatic     #27                 // Field org/hibernate/sql/JoinType.LEFT_OUTER_JOIN:Lorg/hibernate/sql/JoinType;
      21: invokevirtual #23                 // Method org/hibernate/sql/JoinType.getJoinTypeValue:()I
      24: putstatic     #28                 // Field LEFT_OUTER_JOIN:I
      27: getstatic     #29                 // Field org/hibernate/sql/JoinType.RIGHT_OUTER_JOIN:Lorg/hibernate/sql/JoinType;
      30: invokevirtual #23                 // Method org/hibernate/sql/JoinType.getJoinTypeValue:()I
      33: putstatic     #30                 // Field RIGHT_OUTER_JOIN:I
      36: return
}
