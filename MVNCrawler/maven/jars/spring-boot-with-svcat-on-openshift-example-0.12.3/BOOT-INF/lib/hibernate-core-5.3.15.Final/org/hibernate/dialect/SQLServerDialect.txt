Compiled from "SQLServerDialect.java"
public class org.hibernate.dialect.SQLServerDialect extends org.hibernate.dialect.AbstractTransactSQLDialect {
  private static final int PARAM_LIST_SIZE_LIMIT;

  private final org.hibernate.dialect.pagination.LimitHandler limitHandler;

  public org.hibernate.dialect.SQLServerDialect();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hibernate/dialect/AbstractTransactSQLDialect."<init>":()V
       4: aload_0
       5: bipush        -3
       7: ldc           #3                  // String image
       9: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
      12: aload_0
      13: bipush        -3
      15: ldc2_w        #5                  // long 8000l
      18: ldc           #7                  // String varbinary($l)
      20: invokevirtual #8                  // Method registerColumnType:(IJLjava/lang/String;)V
      23: aload_0
      24: bipush        -4
      26: ldc           #3                  // String image
      28: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
      31: aload_0
      32: iconst_m1
      33: ldc           #9                  // String text
      35: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
      38: aload_0
      39: bipush        16
      41: ldc           #10                 // String bit
      43: invokevirtual #4                  // Method registerColumnType:(ILjava/lang/String;)V
      46: aload_0
      47: ldc           #11                 // String second
      49: new           #12                 // class org/hibernate/dialect/function/SQLFunctionTemplate
      52: dup
      53: getstatic     #13                 // Field org/hibernate/type/StandardBasicTypes.INTEGER:Lorg/hibernate/type/IntegerType;
      56: ldc           #14                 // String datepart(second, ?1)
      58: invokespecial #15                 // Method org/hibernate/dialect/function/SQLFunctionTemplate."<init>":(Lorg/hibernate/type/Type;Ljava/lang/String;)V
      61: invokevirtual #16                 // Method registerFunction:(Ljava/lang/String;Lorg/hibernate/dialect/function/SQLFunction;)V
      64: aload_0
      65: ldc           #17                 // String minute
      67: new           #12                 // class org/hibernate/dialect/function/SQLFunctionTemplate
      70: dup
      71: getstatic     #13                 // Field org/hibernate/type/StandardBasicTypes.INTEGER:Lorg/hibernate/type/IntegerType;
      74: ldc           #18                 // String datepart(minute, ?1)
      76: invokespecial #15                 // Method org/hibernate/dialect/function/SQLFunctionTemplate."<init>":(Lorg/hibernate/type/Type;Ljava/lang/String;)V
      79: invokevirtual #16                 // Method registerFunction:(Ljava/lang/String;Lorg/hibernate/dialect/function/SQLFunction;)V
      82: aload_0
      83: ldc           #19                 // String hour
      85: new           #12                 // class org/hibernate/dialect/function/SQLFunctionTemplate
      88: dup
      89: getstatic     #13                 // Field org/hibernate/type/StandardBasicTypes.INTEGER:Lorg/hibernate/type/IntegerType;
      92: ldc           #20                 // String datepart(hour, ?1)
      94: invokespecial #15                 // Method org/hibernate/dialect/function/SQLFunctionTemplate."<init>":(Lorg/hibernate/type/Type;Ljava/lang/String;)V
      97: invokevirtual #16                 // Method registerFunction:(Ljava/lang/String;Lorg/hibernate/dialect/function/SQLFunction;)V
     100: aload_0
     101: ldc           #21                 // String locate
     103: new           #22                 // class org/hibernate/dialect/function/StandardSQLFunction
     106: dup
     107: ldc           #23                 // String charindex
     109: getstatic     #13                 // Field org/hibernate/type/StandardBasicTypes.INTEGER:Lorg/hibernate/type/IntegerType;
     112: invokespecial #24                 // Method org/hibernate/dialect/function/StandardSQLFunction."<init>":(Ljava/lang/String;Lorg/hibernate/type/Type;)V
     115: invokevirtual #16                 // Method registerFunction:(Ljava/lang/String;Lorg/hibernate/dialect/function/SQLFunction;)V
     118: aload_0
     119: ldc           #25                 // String extract
     121: new           #12                 // class org/hibernate/dialect/function/SQLFunctionTemplate
     124: dup
     125: getstatic     #13                 // Field org/hibernate/type/StandardBasicTypes.INTEGER:Lorg/hibernate/type/IntegerType;
     128: ldc           #26                 // String datepart(?1, ?3)
     130: invokespecial #15                 // Method org/hibernate/dialect/function/SQLFunctionTemplate."<init>":(Lorg/hibernate/type/Type;Ljava/lang/String;)V
     133: invokevirtual #16                 // Method registerFunction:(Ljava/lang/String;Lorg/hibernate/dialect/function/SQLFunction;)V
     136: aload_0
     137: ldc           #27                 // String mod
     139: new           #12                 // class org/hibernate/dialect/function/SQLFunctionTemplate
     142: dup
     143: getstatic     #13                 // Field org/hibernate/type/StandardBasicTypes.INTEGER:Lorg/hibernate/type/IntegerType;
     146: ldc           #28                 // String ?1 % ?2
     148: invokespecial #15                 // Method org/hibernate/dialect/function/SQLFunctionTemplate."<init>":(Lorg/hibernate/type/Type;Ljava/lang/String;)V
     151: invokevirtual #16                 // Method registerFunction:(Ljava/lang/String;Lorg/hibernate/dialect/function/SQLFunction;)V
     154: aload_0
     155: ldc           #29                 // String bit_length
     157: new           #12                 // class org/hibernate/dialect/function/SQLFunctionTemplate
     160: dup
     161: getstatic     #13                 // Field org/hibernate/type/StandardBasicTypes.INTEGER:Lorg/hibernate/type/IntegerType;
     164: ldc           #30                 // String datalength(?1) * 8
     166: invokespecial #15                 // Method org/hibernate/dialect/function/SQLFunctionTemplate."<init>":(Lorg/hibernate/type/Type;Ljava/lang/String;)V
     169: invokevirtual #16                 // Method registerFunction:(Ljava/lang/String;Lorg/hibernate/dialect/function/SQLFunction;)V
     172: aload_0
     173: ldc           #31                 // String trim
     175: new           #32                 // class org/hibernate/dialect/function/AnsiTrimEmulationFunction
     178: dup
     179: invokespecial #33                 // Method org/hibernate/dialect/function/AnsiTrimEmulationFunction."<init>":()V
     182: invokevirtual #16                 // Method registerFunction:(Ljava/lang/String;Lorg/hibernate/dialect/function/SQLFunction;)V
     185: aload_0
     186: ldc           #34                 // String top
     188: invokevirtual #35                 // Method registerKeyword:(Ljava/lang/String;)V
     191: aload_0
     192: ldc           #36                 // String key
     194: invokevirtual #35                 // Method registerKeyword:(Ljava/lang/String;)V
     197: aload_0
     198: new           #37                 // class org/hibernate/dialect/pagination/TopLimitHandler
     201: dup
     202: iconst_0
     203: iconst_0
     204: invokespecial #38                 // Method org/hibernate/dialect/pagination/TopLimitHandler."<init>":(ZZ)V
     207: putfield      #39                 // Field limitHandler:Lorg/hibernate/dialect/pagination/LimitHandler;
     210: return

  public java.lang.String getNoColumnsInsertString();
    Code:
       0: ldc           #40                 // String default values
       2: areturn

  static int getAfterSelectInsertPoint(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #41                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
       4: invokevirtual #42                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
       7: ldc           #43                 // String select
       9: invokevirtual #44                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      12: istore_1
      13: aload_0
      14: getstatic     #41                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
      17: invokevirtual #42                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      20: ldc           #45                 // String select distinct
      22: invokevirtual #44                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      25: istore_2
      26: iload_1
      27: iload_2
      28: iload_1
      29: if_icmpne     37
      32: bipush        15
      34: goto          39
      37: bipush        6
      39: iadd
      40: ireturn

  public java.lang.String getLimitString(java.lang.String, int, int);
    Code:
       0: iload_2
       1: ifle          14
       4: new           #46                 // class java/lang/UnsupportedOperationException
       7: dup
       8: ldc           #47                 // String query result offset is not supported
      10: invokespecial #48                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #49                 // class java/lang/StringBuilder
      17: dup
      18: aload_1
      19: invokevirtual #50                 // Method java/lang/String.length:()I
      22: bipush        8
      24: iadd
      25: invokespecial #51                 // Method java/lang/StringBuilder."<init>":(I)V
      28: aload_1
      29: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_1
      33: invokestatic  #53                 // Method getAfterSelectInsertPoint:(Ljava/lang/String;)I
      36: new           #49                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #55                 // String  top
      45: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: iload_3
      49: invokevirtual #56                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      52: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokevirtual #58                 // Method java/lang/StringBuilder.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn

  public org.hibernate.dialect.pagination.LimitHandler getLimitHandler();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method isLegacyLimitHandlerBehaviorEnabled:()Z
       4: ifeq          16
       7: new           #60                 // class org/hibernate/dialect/pagination/LegacyLimitHandler
      10: dup
      11: aload_0
      12: invokespecial #61                 // Method org/hibernate/dialect/pagination/LegacyLimitHandler."<init>":(Lorg/hibernate/dialect/Dialect;)V
      15: areturn
      16: aload_0
      17: invokevirtual #62                 // Method getDefaultLimitHandler:()Lorg/hibernate/dialect/pagination/LimitHandler;
      20: areturn

  protected org.hibernate.dialect.pagination.LimitHandler getDefaultLimitHandler();
    Code:
       0: aload_0
       1: getfield      #39                 // Field limitHandler:Lorg/hibernate/dialect/pagination/LimitHandler;
       4: areturn

  public boolean supportsLimit();
    Code:
       0: iconst_1
       1: ireturn

  public boolean useMaxForLimit();
    Code:
       0: iconst_1
       1: ireturn

  public boolean supportsLimitOffset();
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsVariableLimit();
    Code:
       0: iconst_0
       1: ireturn

  public char closeQuote();
    Code:
       0: bipush        93
       2: ireturn

  public java.lang.String getCurrentSchemaCommand();
    Code:
       0: ldc           #63                 // String SELECT SCHEMA_NAME()
       2: areturn

  public char openQuote();
    Code:
       0: bipush        91
       2: ireturn

  public java.lang.String appendLockHint(org.hibernate.LockOptions, java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #64                 // Method org/hibernate/LockOptions.getLockMode:()Lorg/hibernate/LockMode;
       4: astore_3
       5: getstatic     #65                 // Field org/hibernate/dialect/SQLServerDialect$1.$SwitchMap$org$hibernate$LockMode:[I
       8: aload_3
       9: invokevirtual #66                 // Method org/hibernate/LockMode.ordinal:()I
      12: iaload
      13: tableswitch   { // 1 to 6
                     1: 52
                     2: 52
                     3: 52
                     4: 52
                     5: 72
                     6: 92
               default: 112
          }
      52: new           #49                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
      59: aload_2
      60: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc           #67                 // String  with (updlock, rowlock)
      65: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: areturn
      72: new           #49                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
      79: aload_2
      80: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: ldc           #68                 // String  with (holdlock, rowlock)
      85: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: areturn
      92: new           #49                 // class java/lang/StringBuilder
      95: dup
      96: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
      99: aload_2
     100: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: ldc           #69                 // String  with (updlock, rowlock, readpast)
     105: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: areturn
     112: aload_2
     113: areturn

  public java.lang.String getCurrentTimestampSelectString();
    Code:
       0: ldc           #70                 // String select current_timestamp
       2: areturn

  public boolean areStringComparisonsCaseInsensitive();
    Code:
       0: iconst_1
       1: ireturn

  public boolean supportsResultSetPositionQueryMethodsOnForwardOnlyCursor();
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsCircularCascadeDeleteConstraints();
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsLobValueChangePropogation();
    Code:
       0: iconst_0
       1: ireturn

  public boolean doesReadCommittedCauseWritersToBlockReaders();
    Code:
       0: iconst_0
       1: ireturn

  public boolean doesRepeatableReadCauseReadersToBlockWriters();
    Code:
       0: iconst_0
       1: ireturn

  protected org.hibernate.type.descriptor.sql.SqlTypeDescriptor getSqlTypeDescriptorOverride(int);
    Code:
       0: iload_1
       1: bipush        -6
       3: if_icmpne     12
       6: getstatic     #71                 // Field org/hibernate/type/descriptor/sql/SmallIntTypeDescriptor.INSTANCE:Lorg/hibernate/type/descriptor/sql/SmallIntTypeDescriptor;
       9: goto          17
      12: aload_0
      13: iload_1
      14: invokespecial #72                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.getSqlTypeDescriptorOverride:(I)Lorg/hibernate/type/descriptor/sql/SqlTypeDescriptor;
      17: areturn

  public int getInExpressionCountLimit();
    Code:
       0: sipush        2100
       3: ireturn

  public org.hibernate.dialect.identity.IdentityColumnSupport getIdentityColumnSupport();
    Code:
       0: new           #74                 // class org/hibernate/dialect/identity/SQLServerIdentityColumnSupport
       3: dup
       4: invokespecial #75                 // Method org/hibernate/dialect/identity/SQLServerIdentityColumnSupport."<init>":()V
       7: areturn

  public boolean supportsPartitionBy();
    Code:
       0: aload_0
       1: invokespecial #76                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.supportsPartitionBy:()Z
       4: ireturn

  public boolean supportsTuplesInSubqueries();
    Code:
       0: aload_0
       1: invokespecial #77                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.supportsTuplesInSubqueries:()Z
       4: ireturn

  public boolean supportsTupleDistinctCounts();
    Code:
       0: aload_0
       1: invokespecial #78                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.supportsTupleDistinctCounts:()Z
       4: ireturn

  public boolean supportsExistsInSelect();
    Code:
       0: aload_0
       1: invokespecial #79                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.supportsExistsInSelect:()Z
       4: ireturn

  public boolean supportsUnionAll();
    Code:
       0: aload_0
       1: invokespecial #80                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.supportsUnionAll:()Z
       4: ireturn

  public boolean supportsEmptyInList();
    Code:
       0: aload_0
       1: invokespecial #81                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.supportsEmptyInList:()Z
       4: ireturn

  public java.lang.String getSelectGUIDString();
    Code:
       0: aload_0
       1: invokespecial #82                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.getSelectGUIDString:()Ljava/lang/String;
       4: areturn

  public org.hibernate.hql.spi.id.MultiTableBulkIdStrategy getDefaultMultiTableBulkIdStrategy();
    Code:
       0: aload_0
       1: invokespecial #83                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.getDefaultMultiTableBulkIdStrategy:()Lorg/hibernate/hql/spi/id/MultiTableBulkIdStrategy;
       4: areturn

  public boolean isCurrentTimestampSelectStringCallable();
    Code:
       0: aload_0
       1: invokespecial #84                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.isCurrentTimestampSelectStringCallable:()Z
       4: ireturn

  public boolean supportsCurrentTimestampSelection();
    Code:
       0: aload_0
       1: invokespecial #85                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.supportsCurrentTimestampSelection:()Z
       4: ireturn

  public java.sql.ResultSet getResultSet(java.sql.CallableStatement) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #86                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.getResultSet:(Ljava/sql/CallableStatement;)Ljava/sql/ResultSet;
       5: areturn

  public int registerResultSetOutParameter(java.sql.CallableStatement, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #87                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.registerResultSetOutParameter:(Ljava/sql/CallableStatement;I)I
       6: ireturn

  public java.lang.String applyLocksToSql(java.lang.String, org.hibernate.LockOptions, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #88                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.applyLocksToSql:(Ljava/lang/String;Lorg/hibernate/LockOptions;Ljava/util/Map;)Ljava/lang/String;
       7: areturn

  public java.lang.String getForUpdateString();
    Code:
       0: aload_0
       1: invokespecial #89                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.getForUpdateString:()Ljava/lang/String;
       4: areturn

  public boolean qualifyIndexName();
    Code:
       0: aload_0
       1: invokespecial #90                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.qualifyIndexName:()Z
       4: ireturn

  public java.lang.String getNullColumnString();
    Code:
       0: aload_0
       1: invokespecial #91                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.getNullColumnString:()Ljava/lang/String;
       4: areturn

  public java.lang.String getAddColumnString();
    Code:
       0: aload_0
       1: invokespecial #92                 // Method org/hibernate/dialect/AbstractTransactSQLDialect.getAddColumnString:()Ljava/lang/String;
       4: areturn
}
