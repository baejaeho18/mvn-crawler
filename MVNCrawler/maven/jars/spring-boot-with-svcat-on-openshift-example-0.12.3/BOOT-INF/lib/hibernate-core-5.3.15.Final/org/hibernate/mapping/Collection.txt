Compiled from "Collection.java"
public abstract class org.hibernate.mapping.Collection implements org.hibernate.mapping.Fetchable,org.hibernate.mapping.Value,org.hibernate.mapping.Filterable {
  public static final java.lang.String DEFAULT_ELEMENT_COLUMN_NAME;

  public static final java.lang.String DEFAULT_KEY_COLUMN_NAME;

  private final org.hibernate.boot.spi.MetadataImplementor metadata;

  private org.hibernate.boot.spi.MetadataBuildingContext buildingContext;

  private org.hibernate.mapping.PersistentClass owner;

  private org.hibernate.mapping.KeyValue key;

  private org.hibernate.mapping.Value element;

  private org.hibernate.mapping.Table collectionTable;

  private java.lang.String role;

  private boolean lazy;

  private boolean extraLazy;

  private boolean inverse;

  private boolean mutable;

  private boolean subselectLoadable;

  private java.lang.String cacheConcurrencyStrategy;

  private java.lang.String cacheRegionName;

  private java.lang.String orderBy;

  private java.lang.String where;

  private java.lang.String manyToManyWhere;

  private java.lang.String manyToManyOrderBy;

  private java.lang.String referencedPropertyName;

  private java.lang.String mappedByProperty;

  private boolean sorted;

  private java.util.Comparator comparator;

  private java.lang.String comparatorClassName;

  private boolean orphanDelete;

  private int batchSize;

  private org.hibernate.FetchMode fetchMode;

  private boolean embedded;

  private boolean optimisticLocked;

  private java.lang.Class collectionPersisterClass;

  private java.lang.String typeName;

  private java.util.Properties typeParameters;

  private final java.util.List filters;

  private final java.util.List manyToManyFilters;

  private final java.util.Set<java.lang.String> synchronizedTables;

  private java.lang.String customSQLInsert;

  private boolean customInsertCallable;

  private org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle insertCheckStyle;

  private java.lang.String customSQLUpdate;

  private boolean customUpdateCallable;

  private org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle updateCheckStyle;

  private java.lang.String customSQLDelete;

  private boolean customDeleteCallable;

  private org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle deleteCheckStyle;

  private java.lang.String customSQLDeleteAll;

  private boolean customDeleteAllCallable;

  private org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle deleteAllCheckStyle;

  private java.lang.String loaderName;

  static final boolean $assertionsDisabled;

  protected org.hibernate.mapping.Collection(org.hibernate.boot.spi.MetadataBuildingContext, org.hibernate.mapping.PersistentClass);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1,  1            // InterfaceMethod org/hibernate/boot/spi/MetadataBuildingContext.getMetadataCollector:()Lorg/hibernate/boot/spi/InFlightMetadataCollector;
       7: aload_2
       8: invokespecial #2                  // Method "<init>":(Lorg/hibernate/boot/spi/MetadataImplementor;Lorg/hibernate/mapping/PersistentClass;)V
      11: aload_0
      12: aload_1
      13: putfield      #3                  // Field buildingContext:Lorg/hibernate/boot/spi/MetadataBuildingContext;
      16: return

  protected org.hibernate.mapping.Collection(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.PersistentClass);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #5                  // Field mutable:Z
       9: aload_0
      10: iconst_m1
      11: putfield      #6                  // Field batchSize:I
      14: aload_0
      15: iconst_1
      16: putfield      #7                  // Field embedded:Z
      19: aload_0
      20: iconst_1
      21: putfield      #8                  // Field optimisticLocked:Z
      24: aload_0
      25: new           #9                  // class java/util/ArrayList
      28: dup
      29: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      32: putfield      #11                 // Field filters:Ljava/util/List;
      35: aload_0
      36: new           #9                  // class java/util/ArrayList
      39: dup
      40: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      43: putfield      #12                 // Field manyToManyFilters:Ljava/util/List;
      46: aload_0
      47: new           #13                 // class java/util/HashSet
      50: dup
      51: invokespecial #14                 // Method java/util/HashSet."<init>":()V
      54: putfield      #15                 // Field synchronizedTables:Ljava/util/Set;
      57: aload_0
      58: aload_1
      59: putfield      #16                 // Field metadata:Lorg/hibernate/boot/spi/MetadataImplementor;
      62: aload_0
      63: aload_2
      64: putfield      #17                 // Field owner:Lorg/hibernate/mapping/PersistentClass;
      67: return

  public org.hibernate.boot.spi.MetadataImplementor getMetadata();
    Code:
       0: aload_0
       1: getfield      #16                 // Field metadata:Lorg/hibernate/boot/spi/MetadataImplementor;
       4: areturn

  public org.hibernate.service.ServiceRegistry getServiceRegistry();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getMetadata:()Lorg/hibernate/boot/spi/MetadataImplementor;
       4: invokeinterface #19,  1           // InterfaceMethod org/hibernate/boot/spi/MetadataImplementor.getMetadataBuildingOptions:()Lorg/hibernate/boot/spi/MetadataBuildingOptions;
       9: invokeinterface #20,  1           // InterfaceMethod org/hibernate/boot/spi/MetadataBuildingOptions.getServiceRegistry:()Lorg/hibernate/boot/registry/StandardServiceRegistry;
      14: areturn

  public boolean isSet();
    Code:
       0: iconst_0
       1: ireturn

  public org.hibernate.mapping.KeyValue getKey();
    Code:
       0: aload_0
       1: getfield      #21                 // Field key:Lorg/hibernate/mapping/KeyValue;
       4: areturn

  public org.hibernate.mapping.Value getElement();
    Code:
       0: aload_0
       1: getfield      #22                 // Field element:Lorg/hibernate/mapping/Value;
       4: areturn

  public boolean isIndexed();
    Code:
       0: iconst_0
       1: ireturn

  public org.hibernate.mapping.Table getCollectionTable();
    Code:
       0: aload_0
       1: getfield      #23                 // Field collectionTable:Lorg/hibernate/mapping/Table;
       4: areturn

  public void setCollectionTable(org.hibernate.mapping.Table);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field collectionTable:Lorg/hibernate/mapping/Table;
       5: return

  public boolean isSorted();
    Code:
       0: aload_0
       1: getfield      #24                 // Field sorted:Z
       4: ireturn

  public java.util.Comparator getComparator();
    Code:
       0: aload_0
       1: getfield      #25                 // Field comparator:Ljava/util/Comparator;
       4: ifnonnull     105
       7: aload_0
       8: getfield      #26                 // Field comparatorClassName:Ljava/lang/String;
      11: ifnull        105
      14: aload_0
      15: invokevirtual #18                 // Method getMetadata:()Lorg/hibernate/boot/spi/MetadataImplementor;
      18: invokeinterface #19,  1           // InterfaceMethod org/hibernate/boot/spi/MetadataImplementor.getMetadataBuildingOptions:()Lorg/hibernate/boot/spi/MetadataBuildingOptions;
      23: invokeinterface #20,  1           // InterfaceMethod org/hibernate/boot/spi/MetadataBuildingOptions.getServiceRegistry:()Lorg/hibernate/boot/registry/StandardServiceRegistry;
      28: ldc           #27                 // class org/hibernate/boot/registry/classloading/spi/ClassLoaderService
      30: invokeinterface #28,  2           // InterfaceMethod org/hibernate/boot/registry/StandardServiceRegistry.getService:(Ljava/lang/Class;)Lorg/hibernate/service/Service;
      35: checkcast     #27                 // class org/hibernate/boot/registry/classloading/spi/ClassLoaderService
      38: astore_1
      39: aload_0
      40: aload_1
      41: aload_0
      42: getfield      #26                 // Field comparatorClassName:Ljava/lang/String;
      45: invokeinterface #29,  2           // InterfaceMethod org/hibernate/boot/registry/classloading/spi/ClassLoaderService.classForName:(Ljava/lang/String;)Ljava/lang/Class;
      50: invokevirtual #30                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      53: checkcast     #31                 // class java/util/Comparator
      56: invokevirtual #32                 // Method setComparator:(Ljava/util/Comparator;)V
      59: goto          105
      62: astore_1
      63: new           #34                 // class org/hibernate/MappingException
      66: dup
      67: new           #35                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #37                 // String Could not instantiate comparator class [
      76: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: getfield      #26                 // Field comparatorClassName:Ljava/lang/String;
      83: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: ldc           #39                 // String ] for collection
      88: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_0
      92: invokevirtual #40                 // Method getRole:()Ljava/lang/String;
      95: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #42                 // Method org/hibernate/MappingException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_0
     106: getfield      #25                 // Field comparator:Ljava/util/Comparator;
     109: areturn
    Exception table:
       from    to  target type
          14    59    62   Class java/lang/Exception

  public boolean isLazy();
    Code:
       0: aload_0
       1: getfield      #43                 // Field lazy:Z
       4: ireturn

  public void setLazy(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #43                 // Field lazy:Z
       5: return

  public java.lang.String getRole();
    Code:
       0: aload_0
       1: getfield      #44                 // Field role:Ljava/lang/String;
       4: areturn

  public abstract org.hibernate.type.CollectionType getDefaultCollectionType() throws org.hibernate.MappingException;

  public boolean isPrimitiveArray();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isArray();
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasFormula();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isOneToMany();
    Code:
       0: aload_0
       1: getfield      #22                 // Field element:Lorg/hibernate/mapping/Value;
       4: instanceof    #45                 // class org/hibernate/mapping/OneToMany
       7: ireturn

  public boolean isInverse();
    Code:
       0: aload_0
       1: getfield      #46                 // Field inverse:Z
       4: ireturn

  public java.lang.String getOwnerEntityName();
    Code:
       0: aload_0
       1: getfield      #17                 // Field owner:Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #47                 // Method org/hibernate/mapping/PersistentClass.getEntityName:()Ljava/lang/String;
       7: areturn

  public java.lang.String getOrderBy();
    Code:
       0: aload_0
       1: getfield      #48                 // Field orderBy:Ljava/lang/String;
       4: areturn

  public void setComparator(java.util.Comparator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field comparator:Ljava/util/Comparator;
       5: return

  public void setElement(org.hibernate.mapping.Value);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field element:Lorg/hibernate/mapping/Value;
       5: return

  public void setKey(org.hibernate.mapping.KeyValue);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field key:Lorg/hibernate/mapping/KeyValue;
       5: return

  public void setOrderBy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field orderBy:Ljava/lang/String;
       5: return

  public void setRole(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field role:Ljava/lang/String;
       5: return

  public void setSorted(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #24                 // Field sorted:Z
       5: return

  public void setInverse(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #46                 // Field inverse:Z
       5: return

  public org.hibernate.mapping.PersistentClass getOwner();
    Code:
       0: aload_0
       1: getfield      #17                 // Field owner:Lorg/hibernate/mapping/PersistentClass;
       4: areturn

  public void setOwner(org.hibernate.mapping.PersistentClass);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field owner:Lorg/hibernate/mapping/PersistentClass;
       5: return

  public java.lang.String getWhere();
    Code:
       0: aload_0
       1: getfield      #49                 // Field where:Ljava/lang/String;
       4: areturn

  public void setWhere(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field where:Ljava/lang/String;
       5: return

  public java.lang.String getManyToManyWhere();
    Code:
       0: aload_0
       1: getfield      #50                 // Field manyToManyWhere:Ljava/lang/String;
       4: areturn

  public void setManyToManyWhere(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #50                 // Field manyToManyWhere:Ljava/lang/String;
       5: return

  public java.lang.String getManyToManyOrdering();
    Code:
       0: aload_0
       1: getfield      #51                 // Field manyToManyOrderBy:Ljava/lang/String;
       4: areturn

  public void setManyToManyOrdering(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field manyToManyOrderBy:Ljava/lang/String;
       5: return

  public boolean isIdentified();
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasOrphanDelete();
    Code:
       0: aload_0
       1: getfield      #52                 // Field orphanDelete:Z
       4: ireturn

  public void setOrphanDelete(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #52                 // Field orphanDelete:Z
       5: return

  public int getBatchSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field batchSize:I
       4: ireturn

  public void setBatchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field batchSize:I
       5: return

  public org.hibernate.FetchMode getFetchMode();
    Code:
       0: aload_0
       1: getfield      #53                 // Field fetchMode:Lorg/hibernate/FetchMode;
       4: areturn

  public void setFetchMode(org.hibernate.FetchMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field fetchMode:Lorg/hibernate/FetchMode;
       5: return

  public void setCollectionPersisterClass(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #54                 // Field collectionPersisterClass:Ljava/lang/Class;
       5: return

  public java.lang.Class getCollectionPersisterClass();
    Code:
       0: aload_0
       1: getfield      #54                 // Field collectionPersisterClass:Ljava/lang/Class;
       4: areturn

  public void validate(org.hibernate.engine.spi.Mapping) throws org.hibernate.MappingException;
    Code:
       0: getstatic     #55                 // Field $assertionsDisabled:Z
       3: ifne          43
       6: aload_0
       7: invokevirtual #56                 // Method getKey:()Lorg/hibernate/mapping/KeyValue;
      10: ifnonnull     43
      13: new           #57                 // class java/lang/AssertionError
      16: dup
      17: new           #35                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #58                 // String Collection key not bound :
      26: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: invokevirtual #40                 // Method getRole:()Ljava/lang/String;
      33: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #59                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      42: athrow
      43: getstatic     #55                 // Field $assertionsDisabled:Z
      46: ifne          86
      49: aload_0
      50: invokevirtual #60                 // Method getElement:()Lorg/hibernate/mapping/Value;
      53: ifnonnull     86
      56: new           #57                 // class java/lang/AssertionError
      59: dup
      60: new           #35                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #61                 // String Collection element not bound :
      69: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #40                 // Method getRole:()Ljava/lang/String;
      76: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokespecial #59                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      85: athrow
      86: aload_0
      87: invokevirtual #56                 // Method getKey:()Lorg/hibernate/mapping/KeyValue;
      90: aload_1
      91: invokeinterface #62,  2           // InterfaceMethod org/hibernate/mapping/KeyValue.isValid:(Lorg/hibernate/engine/spi/Mapping;)Z
      96: ifne          151
      99: new           #34                 // class org/hibernate/MappingException
     102: dup
     103: new           #35                 // class java/lang/StringBuilder
     106: dup
     107: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     110: ldc           #63                 // String collection foreign key mapping has wrong number of columns:
     112: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: aload_0
     116: invokevirtual #40                 // Method getRole:()Ljava/lang/String;
     119: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: ldc           #64                 // String  type:
     124: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload_0
     128: invokevirtual #56                 // Method getKey:()Lorg/hibernate/mapping/KeyValue;
     131: invokeinterface #65,  1           // InterfaceMethod org/hibernate/mapping/KeyValue.getType:()Lorg/hibernate/type/Type;
     136: invokeinterface #66,  1           // InterfaceMethod org/hibernate/type/Type.getName:()Ljava/lang/String;
     141: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     147: invokespecial #42                 // Method org/hibernate/MappingException."<init>":(Ljava/lang/String;)V
     150: athrow
     151: aload_0
     152: invokevirtual #60                 // Method getElement:()Lorg/hibernate/mapping/Value;
     155: aload_1
     156: invokeinterface #67,  2           // InterfaceMethod org/hibernate/mapping/Value.isValid:(Lorg/hibernate/engine/spi/Mapping;)Z
     161: ifne          216
     164: new           #34                 // class org/hibernate/MappingException
     167: dup
     168: new           #35                 // class java/lang/StringBuilder
     171: dup
     172: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     175: ldc           #68                 // String collection element mapping has wrong number of columns:
     177: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: aload_0
     181: invokevirtual #40                 // Method getRole:()Ljava/lang/String;
     184: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: ldc           #64                 // String  type:
     189: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: aload_0
     193: invokevirtual #60                 // Method getElement:()Lorg/hibernate/mapping/Value;
     196: invokeinterface #69,  1           // InterfaceMethod org/hibernate/mapping/Value.getType:()Lorg/hibernate/type/Type;
     201: invokeinterface #66,  1           // InterfaceMethod org/hibernate/type/Type.getName:()Ljava/lang/String;
     206: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     212: invokespecial #42                 // Method org/hibernate/MappingException."<init>":(Ljava/lang/String;)V
     215: athrow
     216: aload_0
     217: invokespecial #70                 // Method checkColumnDuplication:()V
     220: return

  private void checkColumnDuplication(java.util.Set, org.hibernate.mapping.Value) throws org.hibernate.MappingException;
    Code:
       0: aload_2
       1: invokeinterface #71,  1           // InterfaceMethod org/hibernate/mapping/Value.getColumnInsertability:()[Z
       6: astore_3
       7: aload_2
       8: invokeinterface #72,  1           // InterfaceMethod org/hibernate/mapping/Value.getColumnUpdateability:()[Z
      13: astore        4
      15: aload_2
      16: invokeinterface #73,  1           // InterfaceMethod org/hibernate/mapping/Value.getColumnIterator:()Ljava/util/Iterator;
      21: astore        5
      23: iconst_0
      24: istore        6
      26: aload         5
      28: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          143
      36: aload         5
      38: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #76                 // class org/hibernate/mapping/Selectable
      46: astore        7
      48: aload         7
      50: invokeinterface #77,  1           // InterfaceMethod org/hibernate/mapping/Selectable.isFormula:()Z
      55: ifne          137
      58: aload_3
      59: iload         6
      61: baload
      62: ifne          73
      65: aload         4
      67: iload         6
      69: baload
      70: ifeq          137
      73: aload         7
      75: checkcast     #78                 // class org/hibernate/mapping/Column
      78: astore        8
      80: aload_1
      81: aload         8
      83: invokevirtual #79                 // Method org/hibernate/mapping/Column.getName:()Ljava/lang/String;
      86: invokeinterface #80,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      91: ifne          137
      94: new           #34                 // class org/hibernate/MappingException
      97: dup
      98: new           #35                 // class java/lang/StringBuilder
     101: dup
     102: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     105: ldc           #81                 // String Repeated column in mapping for collection:
     107: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_0
     111: invokevirtual #40                 // Method getRole:()Ljava/lang/String;
     114: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc           #82                 // String  column:
     119: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload         8
     124: invokevirtual #79                 // Method org/hibernate/mapping/Column.getName:()Ljava/lang/String;
     127: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: invokespecial #42                 // Method org/hibernate/MappingException."<init>":(Ljava/lang/String;)V
     136: athrow
     137: iinc          6, 1
     140: goto          26
     143: return

  private void checkColumnDuplication() throws org.hibernate.MappingException;
    Code:
       0: new           #13                 // class java/util/HashSet
       3: dup
       4: invokespecial #14                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: aload_0
      11: invokevirtual #56                 // Method getKey:()Lorg/hibernate/mapping/KeyValue;
      14: invokespecial #83                 // Method checkColumnDuplication:(Ljava/util/Set;Lorg/hibernate/mapping/Value;)V
      17: aload_0
      18: invokevirtual #84                 // Method isIndexed:()Z
      21: ifeq          36
      24: aload_0
      25: aload_1
      26: aload_0
      27: checkcast     #85                 // class org/hibernate/mapping/IndexedCollection
      30: invokevirtual #86                 // Method org/hibernate/mapping/IndexedCollection.getIndex:()Lorg/hibernate/mapping/Value;
      33: invokespecial #83                 // Method checkColumnDuplication:(Ljava/util/Set;Lorg/hibernate/mapping/Value;)V
      36: aload_0
      37: invokevirtual #87                 // Method isIdentified:()Z
      40: ifeq          55
      43: aload_0
      44: aload_1
      45: aload_0
      46: checkcast     #88                 // class org/hibernate/mapping/IdentifierCollection
      49: invokevirtual #89                 // Method org/hibernate/mapping/IdentifierCollection.getIdentifier:()Lorg/hibernate/mapping/KeyValue;
      52: invokespecial #83                 // Method checkColumnDuplication:(Ljava/util/Set;Lorg/hibernate/mapping/Value;)V
      55: aload_0
      56: invokevirtual #90                 // Method isOneToMany:()Z
      59: ifne          71
      62: aload_0
      63: aload_1
      64: aload_0
      65: invokevirtual #60                 // Method getElement:()Lorg/hibernate/mapping/Value;
      68: invokespecial #83                 // Method checkColumnDuplication:(Ljava/util/Set;Lorg/hibernate/mapping/Value;)V
      71: return

  public java.util.Iterator<org.hibernate.mapping.Selectable> getColumnIterator();
    Code:
       0: invokestatic  #91                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: invokeinterface #92,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: areturn

  public int getColumnSpan();
    Code:
       0: iconst_0
       1: ireturn

  public org.hibernate.type.Type getType() throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method getCollectionType:()Lorg/hibernate/type/CollectionType;
       4: areturn

  public org.hibernate.type.CollectionType getCollectionType();
    Code:
       0: aload_0
       1: getfield      #94                 // Field typeName:Ljava/lang/String;
       4: ifnonnull     12
       7: aload_0
       8: invokevirtual #95                 // Method getDefaultCollectionType:()Lorg/hibernate/type/CollectionType;
      11: areturn
      12: aload_0
      13: invokevirtual #18                 // Method getMetadata:()Lorg/hibernate/boot/spi/MetadataImplementor;
      16: invokeinterface #96,  1           // InterfaceMethod org/hibernate/boot/spi/MetadataImplementor.getTypeConfiguration:()Lorg/hibernate/type/spi/TypeConfiguration;
      21: invokevirtual #97                 // Method org/hibernate/type/spi/TypeConfiguration.getTypeResolver:()Lorg/hibernate/type/TypeResolver;
      24: invokevirtual #98                 // Method org/hibernate/type/TypeResolver.getTypeFactory:()Lorg/hibernate/type/TypeFactory;
      27: aload_0
      28: getfield      #94                 // Field typeName:Ljava/lang/String;
      31: aload_0
      32: getfield      #99                 // Field typeParameters:Ljava/util/Properties;
      35: aload_0
      36: getfield      #44                 // Field role:Ljava/lang/String;
      39: aload_0
      40: getfield      #100                // Field referencedPropertyName:Ljava/lang/String;
      43: invokevirtual #101                // Method org/hibernate/type/TypeFactory.customCollection:(Ljava/lang/String;Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Lorg/hibernate/type/CollectionType;
      46: areturn

  public boolean isNullable();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isAlternateUniqueKey();
    Code:
       0: iconst_0
       1: ireturn

  public org.hibernate.mapping.Table getTable();
    Code:
       0: aload_0
       1: getfield      #17                 // Field owner:Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #102                // Method org/hibernate/mapping/PersistentClass.getTable:()Lorg/hibernate/mapping/Table;
       7: areturn

  public void createForeignKey();
    Code:
       0: return

  public boolean isSimpleValue();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isValid(org.hibernate.engine.spi.Mapping) throws org.hibernate.MappingException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean isSame(org.hibernate.mapping.Value);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     23
       5: aload_1
       6: instanceof    #103                // class org/hibernate/mapping/Collection
       9: ifeq          27
      12: aload_0
      13: aload_1
      14: checkcast     #103                // class org/hibernate/mapping/Collection
      17: invokevirtual #104                // Method isSame:(Lorg/hibernate/mapping/Collection;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  protected static boolean isSame(org.hibernate.mapping.Value, org.hibernate.mapping.Value);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     23
       5: aload_0
       6: ifnull        27
       9: aload_1
      10: ifnull        27
      13: aload_0
      14: aload_1
      15: invokeinterface #105,  2          // InterfaceMethod org/hibernate/mapping/Value.isSame:(Lorg/hibernate/mapping/Value;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public boolean isSame(org.hibernate.mapping.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     131
       5: aload_0
       6: getfield      #21                 // Field key:Lorg/hibernate/mapping/KeyValue;
       9: aload_1
      10: getfield      #21                 // Field key:Lorg/hibernate/mapping/KeyValue;
      13: invokestatic  #106                // Method isSame:(Lorg/hibernate/mapping/Value;Lorg/hibernate/mapping/Value;)Z
      16: ifeq          135
      19: aload_0
      20: getfield      #22                 // Field element:Lorg/hibernate/mapping/Value;
      23: aload_1
      24: getfield      #22                 // Field element:Lorg/hibernate/mapping/Value;
      27: invokestatic  #106                // Method isSame:(Lorg/hibernate/mapping/Value;Lorg/hibernate/mapping/Value;)Z
      30: ifeq          135
      33: aload_0
      34: getfield      #23                 // Field collectionTable:Lorg/hibernate/mapping/Table;
      37: aload_1
      38: getfield      #23                 // Field collectionTable:Lorg/hibernate/mapping/Table;
      41: invokestatic  #107                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      44: ifeq          135
      47: aload_0
      48: getfield      #49                 // Field where:Ljava/lang/String;
      51: aload_1
      52: getfield      #49                 // Field where:Ljava/lang/String;
      55: invokestatic  #107                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      58: ifeq          135
      61: aload_0
      62: getfield      #50                 // Field manyToManyWhere:Ljava/lang/String;
      65: aload_1
      66: getfield      #50                 // Field manyToManyWhere:Ljava/lang/String;
      69: invokestatic  #107                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      72: ifeq          135
      75: aload_0
      76: getfield      #100                // Field referencedPropertyName:Ljava/lang/String;
      79: aload_1
      80: getfield      #100                // Field referencedPropertyName:Ljava/lang/String;
      83: invokestatic  #107                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      86: ifeq          135
      89: aload_0
      90: getfield      #108                // Field mappedByProperty:Ljava/lang/String;
      93: aload_1
      94: getfield      #108                // Field mappedByProperty:Ljava/lang/String;
      97: invokestatic  #107                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     100: ifeq          135
     103: aload_0
     104: getfield      #94                 // Field typeName:Ljava/lang/String;
     107: aload_1
     108: getfield      #94                 // Field typeName:Ljava/lang/String;
     111: invokestatic  #107                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     114: ifeq          135
     117: aload_0
     118: getfield      #99                 // Field typeParameters:Ljava/util/Properties;
     121: aload_1
     122: getfield      #99                 // Field typeParameters:Ljava/util/Properties;
     125: invokestatic  #107                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     128: ifeq          135
     131: iconst_1
     132: goto          136
     135: iconst_0
     136: ireturn

  private void createForeignKeys() throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: getfield      #100                // Field referencedPropertyName:Ljava/lang/String;
       4: ifnonnull     32
       7: aload_0
       8: invokevirtual #60                 // Method getElement:()Lorg/hibernate/mapping/Value;
      11: invokeinterface #109,  1          // InterfaceMethod org/hibernate/mapping/Value.createForeignKey:()V
      16: aload_0
      17: getfield      #21                 // Field key:Lorg/hibernate/mapping/KeyValue;
      20: aload_0
      21: invokevirtual #110                // Method getOwner:()Lorg/hibernate/mapping/PersistentClass;
      24: invokevirtual #47                 // Method org/hibernate/mapping/PersistentClass.getEntityName:()Ljava/lang/String;
      27: invokeinterface #111,  2          // InterfaceMethod org/hibernate/mapping/KeyValue.createForeignKeyOfEntity:(Ljava/lang/String;)V
      32: return

  abstract void createPrimaryKey();

  public void createAllKeys() throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: invokespecial #112                // Method createForeignKeys:()V
       4: aload_0
       5: invokevirtual #113                // Method isInverse:()Z
       8: ifne          15
      11: aload_0
      12: invokevirtual #114                // Method createPrimaryKey:()V
      15: return

  public java.lang.String getCacheConcurrencyStrategy();
    Code:
       0: aload_0
       1: getfield      #115                // Field cacheConcurrencyStrategy:Ljava/lang/String;
       4: areturn

  public void setCacheConcurrencyStrategy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #115                // Field cacheConcurrencyStrategy:Ljava/lang/String;
       5: return

  public void setTypeUsingReflection(java.lang.String, java.lang.String);
    Code:
       0: return

  public java.lang.String getCacheRegionName();
    Code:
       0: aload_0
       1: getfield      #116                // Field cacheRegionName:Ljava/lang/String;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #44                 // Field role:Ljava/lang/String;
      11: goto          18
      14: aload_0
      15: getfield      #116                // Field cacheRegionName:Ljava/lang/String;
      18: areturn

  public void setCacheRegionName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #117                // Method org/hibernate/internal/util/StringHelper.nullIfEmpty:(Ljava/lang/String;)Ljava/lang/String;
       5: putfield      #116                // Field cacheRegionName:Ljava/lang/String;
       8: return

  public void setCustomSQLInsert(java.lang.String, boolean, org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #118                // Field customSQLInsert:Ljava/lang/String;
       5: aload_0
       6: iload_2
       7: putfield      #119                // Field customInsertCallable:Z
      10: aload_0
      11: aload_3
      12: putfield      #120                // Field insertCheckStyle:Lorg/hibernate/engine/spi/ExecuteUpdateResultCheckStyle;
      15: return

  public java.lang.String getCustomSQLInsert();
    Code:
       0: aload_0
       1: getfield      #118                // Field customSQLInsert:Ljava/lang/String;
       4: areturn

  public boolean isCustomInsertCallable();
    Code:
       0: aload_0
       1: getfield      #119                // Field customInsertCallable:Z
       4: ireturn

  public org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle getCustomSQLInsertCheckStyle();
    Code:
       0: aload_0
       1: getfield      #120                // Field insertCheckStyle:Lorg/hibernate/engine/spi/ExecuteUpdateResultCheckStyle;
       4: areturn

  public void setCustomSQLUpdate(java.lang.String, boolean, org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #121                // Field customSQLUpdate:Ljava/lang/String;
       5: aload_0
       6: iload_2
       7: putfield      #122                // Field customUpdateCallable:Z
      10: aload_0
      11: aload_3
      12: putfield      #123                // Field updateCheckStyle:Lorg/hibernate/engine/spi/ExecuteUpdateResultCheckStyle;
      15: return

  public java.lang.String getCustomSQLUpdate();
    Code:
       0: aload_0
       1: getfield      #121                // Field customSQLUpdate:Ljava/lang/String;
       4: areturn

  public boolean isCustomUpdateCallable();
    Code:
       0: aload_0
       1: getfield      #122                // Field customUpdateCallable:Z
       4: ireturn

  public org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle getCustomSQLUpdateCheckStyle();
    Code:
       0: aload_0
       1: getfield      #123                // Field updateCheckStyle:Lorg/hibernate/engine/spi/ExecuteUpdateResultCheckStyle;
       4: areturn

  public void setCustomSQLDelete(java.lang.String, boolean, org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #124                // Field customSQLDelete:Ljava/lang/String;
       5: aload_0
       6: iload_2
       7: putfield      #125                // Field customDeleteCallable:Z
      10: aload_0
      11: aload_3
      12: putfield      #126                // Field deleteCheckStyle:Lorg/hibernate/engine/spi/ExecuteUpdateResultCheckStyle;
      15: return

  public java.lang.String getCustomSQLDelete();
    Code:
       0: aload_0
       1: getfield      #124                // Field customSQLDelete:Ljava/lang/String;
       4: areturn

  public boolean isCustomDeleteCallable();
    Code:
       0: aload_0
       1: getfield      #125                // Field customDeleteCallable:Z
       4: ireturn

  public org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle getCustomSQLDeleteCheckStyle();
    Code:
       0: aload_0
       1: getfield      #126                // Field deleteCheckStyle:Lorg/hibernate/engine/spi/ExecuteUpdateResultCheckStyle;
       4: areturn

  public void setCustomSQLDeleteAll(java.lang.String, boolean, org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #127                // Field customSQLDeleteAll:Ljava/lang/String;
       5: aload_0
       6: iload_2
       7: putfield      #128                // Field customDeleteAllCallable:Z
      10: aload_0
      11: aload_3
      12: putfield      #129                // Field deleteAllCheckStyle:Lorg/hibernate/engine/spi/ExecuteUpdateResultCheckStyle;
      15: return

  public java.lang.String getCustomSQLDeleteAll();
    Code:
       0: aload_0
       1: getfield      #127                // Field customSQLDeleteAll:Ljava/lang/String;
       4: areturn

  public boolean isCustomDeleteAllCallable();
    Code:
       0: aload_0
       1: getfield      #128                // Field customDeleteAllCallable:Z
       4: ireturn

  public org.hibernate.engine.spi.ExecuteUpdateResultCheckStyle getCustomSQLDeleteAllCheckStyle();
    Code:
       0: aload_0
       1: getfield      #129                // Field deleteAllCheckStyle:Lorg/hibernate/engine/spi/ExecuteUpdateResultCheckStyle;
       4: areturn

  public void addFilter(java.lang.String, java.lang.String, boolean, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field filters:Ljava/util/List;
       4: new           #130                // class org/hibernate/internal/FilterConfiguration
       7: dup
       8: aload_1
       9: aload_2
      10: iload_3
      11: aload         4
      13: aload         5
      15: aconst_null
      16: invokespecial #131                // Method org/hibernate/internal/FilterConfiguration."<init>":(Ljava/lang/String;Ljava/lang/String;ZLjava/util/Map;Ljava/util/Map;Lorg/hibernate/mapping/PersistentClass;)V
      19: invokeinterface #132,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      24: pop
      25: return

  public java.util.List getFilters();
    Code:
       0: aload_0
       1: getfield      #11                 // Field filters:Ljava/util/List;
       4: areturn

  public void addManyToManyFilter(java.lang.String, java.lang.String, boolean, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field manyToManyFilters:Ljava/util/List;
       4: new           #130                // class org/hibernate/internal/FilterConfiguration
       7: dup
       8: aload_1
       9: aload_2
      10: iload_3
      11: aload         4
      13: aload         5
      15: aconst_null
      16: invokespecial #131                // Method org/hibernate/internal/FilterConfiguration."<init>":(Ljava/lang/String;Ljava/lang/String;ZLjava/util/Map;Ljava/util/Map;Lorg/hibernate/mapping/PersistentClass;)V
      19: invokeinterface #132,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      24: pop
      25: return

  public java.util.List getManyToManyFilters();
    Code:
       0: aload_0
       1: getfield      #12                 // Field manyToManyFilters:Ljava/util/List;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #35                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #133                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #134                // Method java/lang/Class.getName:()Ljava/lang/String;
      14: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: bipush        40
      19: invokevirtual #135                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokevirtual #40                 // Method getRole:()Ljava/lang/String;
      26: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: bipush        41
      31: invokevirtual #135                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      34: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn

  public java.util.Set<java.lang.String> getSynchronizedTables();
    Code:
       0: aload_0
       1: getfield      #15                 // Field synchronizedTables:Ljava/util/Set;
       4: areturn

  public java.lang.String getLoaderName();
    Code:
       0: aload_0
       1: getfield      #136                // Field loaderName:Ljava/lang/String;
       4: areturn

  public void setLoaderName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #136                // Field loaderName:Ljava/lang/String;
       5: return

  public java.lang.String getReferencedPropertyName();
    Code:
       0: aload_0
       1: getfield      #100                // Field referencedPropertyName:Ljava/lang/String;
       4: areturn

  public void setReferencedPropertyName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #100                // Field referencedPropertyName:Ljava/lang/String;
       5: return

  public boolean isOptimisticLocked();
    Code:
       0: aload_0
       1: getfield      #8                  // Field optimisticLocked:Z
       4: ireturn

  public void setOptimisticLocked(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field optimisticLocked:Z
       5: return

  public boolean isMap();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getTypeName();
    Code:
       0: aload_0
       1: getfield      #94                 // Field typeName:Ljava/lang/String;
       4: areturn

  public void setTypeName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #94                 // Field typeName:Ljava/lang/String;
       5: return

  public java.util.Properties getTypeParameters();
    Code:
       0: aload_0
       1: getfield      #99                 // Field typeParameters:Ljava/util/Properties;
       4: areturn

  public void setTypeParameters(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #99                 // Field typeParameters:Ljava/util/Properties;
       5: return

  public void setTypeParameters(java.util.Map);
    Code:
       0: aload_1
       1: instanceof    #137                // class java/util/Properties
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #137                // class java/util/Properties
      12: putfield      #99                 // Field typeParameters:Ljava/util/Properties;
      15: goto          37
      18: aload_0
      19: new           #137                // class java/util/Properties
      22: dup
      23: invokespecial #138                // Method java/util/Properties."<init>":()V
      26: putfield      #99                 // Field typeParameters:Ljava/util/Properties;
      29: aload_0
      30: getfield      #99                 // Field typeParameters:Ljava/util/Properties;
      33: aload_1
      34: invokevirtual #139                // Method java/util/Properties.putAll:(Ljava/util/Map;)V
      37: return

  public boolean[] getColumnInsertability();
    Code:
       0: getstatic     #140                // Field org/hibernate/internal/util/collections/ArrayHelper.EMPTY_BOOLEAN_ARRAY:[Z
       3: areturn

  public boolean[] getColumnUpdateability();
    Code:
       0: getstatic     #140                // Field org/hibernate/internal/util/collections/ArrayHelper.EMPTY_BOOLEAN_ARRAY:[Z
       3: areturn

  public boolean isSubselectLoadable();
    Code:
       0: aload_0
       1: getfield      #141                // Field subselectLoadable:Z
       4: ireturn

  public void setSubselectLoadable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #141                // Field subselectLoadable:Z
       5: return

  public boolean isMutable();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mutable:Z
       4: ireturn

  public void setMutable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field mutable:Z
       5: return

  public boolean isExtraLazy();
    Code:
       0: aload_0
       1: getfield      #142                // Field extraLazy:Z
       4: ireturn

  public void setExtraLazy(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #142                // Field extraLazy:Z
       5: return

  public boolean hasOrder();
    Code:
       0: aload_0
       1: getfield      #48                 // Field orderBy:Ljava/lang/String;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #51                 // Field manyToManyOrderBy:Ljava/lang/String;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void setComparatorClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field comparatorClassName:Ljava/lang/String;
       5: return

  public java.lang.String getComparatorClassName();
    Code:
       0: aload_0
       1: getfield      #26                 // Field comparatorClassName:Ljava/lang/String;
       4: areturn

  public java.lang.String getMappedByProperty();
    Code:
       0: aload_0
       1: getfield      #108                // Field mappedByProperty:Ljava/lang/String;
       4: areturn

  public void setMappedByProperty(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #108                // Field mappedByProperty:Ljava/lang/String;
       5: return

  static {};
    Code:
       0: ldc           #103                // class org/hibernate/mapping/Collection
       2: invokevirtual #143                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #55                 // Field $assertionsDisabled:Z
      16: return
}
