Compiled from "AbstractTransactSQLIdentityColumnSupport.java"
public class org.hibernate.dialect.identity.AbstractTransactSQLIdentityColumnSupport extends org.hibernate.dialect.identity.IdentityColumnSupportImpl {
  public org.hibernate.dialect.identity.AbstractTransactSQLIdentityColumnSupport();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hibernate/dialect/identity/IdentityColumnSupportImpl."<init>":()V
       4: return

  public boolean supportsIdentityColumns();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String getIdentityColumnString(int) throws org.hibernate.MappingException;
    Code:
       0: ldc           #2                  // String identity not null
       2: areturn

  public java.lang.String getIdentitySelectString(java.lang.String, java.lang.String, int) throws org.hibernate.MappingException;
    Code:
       0: ldc           #3                  // String select @@identity
       2: areturn

  public boolean supportsInsertSelectIdentity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String appendIdentitySelectToInsert(java.lang.String);
    Code:
       0: new           #4                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #7                  // String \nselect @@identity
      13: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn
}
