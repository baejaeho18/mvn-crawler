Compiled from "AbstractReadWriteAccess.java"
public class org.hibernate.cache.spi.support.AbstractReadWriteAccess$SoftLockImpl implements java.io.Serializable,org.hibernate.cache.spi.support.AbstractReadWriteAccess$Lockable,org.hibernate.cache.spi.access.SoftLock {
  private static final long serialVersionUID;

  private final java.util.UUID sourceUuid;

  private final long lockId;

  private final java.lang.Object version;

  private long timeout;

  private boolean concurrent;

  private int multiplicity;

  private long unlockTimestamp;

  org.hibernate.cache.spi.support.AbstractReadWriteAccess$SoftLockImpl(long, java.util.UUID, long, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field multiplicity:I
       9: aload_0
      10: lload_1
      11: putfield      #3                  // Field timeout:J
      14: aload_0
      15: lload         4
      17: putfield      #4                  // Field lockId:J
      20: aload_0
      21: aload         6
      23: putfield      #5                  // Field version:Ljava/lang/Object;
      26: aload_0
      27: aload_3
      28: putfield      #6                  // Field sourceUuid:Ljava/util/UUID;
      31: return

  public boolean isReadable(long);
    Code:
       0: iconst_0
       1: ireturn

  public boolean isWriteable(long, java.lang.Object, java.util.Comparator);
    Code:
       0: invokestatic  #7                  // Method org/hibernate/cache/spi/support/AbstractReadWriteAccess.access$000:()Z
       3: ifeq          86
       6: invokestatic  #8                  // Method org/hibernate/cache/spi/support/AbstractReadWriteAccess.access$100:()Lorg/jboss/logging/Logger;
       9: ldc           #9                  // String Checking writeability of read-write cache lock [timeout=`%s`, lockId=`%s`, version=`%s`, sourceUuid=%s, multiplicity=`%s`, unlockTimestamp=`%s`] : txTimestamp=`%s`, newVersion=`%s`
      11: bipush        8
      13: anewarray     #10                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_0
      19: getfield      #3                  // Field timeout:J
      22: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      25: aastore
      26: dup
      27: iconst_1
      28: aload_0
      29: getfield      #4                  // Field lockId:J
      32: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      35: aastore
      36: dup
      37: iconst_2
      38: aload_0
      39: getfield      #5                  // Field version:Ljava/lang/Object;
      42: aastore
      43: dup
      44: iconst_3
      45: aload_0
      46: getfield      #6                  // Field sourceUuid:Ljava/util/UUID;
      49: aastore
      50: dup
      51: iconst_4
      52: aload_0
      53: getfield      #2                  // Field multiplicity:I
      56: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: aastore
      60: dup
      61: iconst_5
      62: aload_0
      63: getfield      #13                 // Field unlockTimestamp:J
      66: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      69: aastore
      70: dup
      71: bipush        6
      73: lload_1
      74: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      77: aastore
      78: dup
      79: bipush        7
      81: aload_3
      82: aastore
      83: invokevirtual #14                 // Method org/jboss/logging/Logger.debugf:(Ljava/lang/String;[Ljava/lang/Object;)V
      86: lload_1
      87: aload_0
      88: getfield      #3                  // Field timeout:J
      91: lcmp
      92: ifle          97
      95: iconst_1
      96: ireturn
      97: aload_0
      98: getfield      #2                  // Field multiplicity:I
     101: ifle          106
     104: iconst_0
     105: ireturn
     106: aload_0
     107: getfield      #5                  // Field version:Ljava/lang/Object;
     110: ifnonnull     130
     113: lload_1
     114: aload_0
     115: getfield      #13                 // Field unlockTimestamp:J
     118: lcmp
     119: ifle          126
     122: iconst_1
     123: goto          150
     126: iconst_0
     127: goto          150
     130: aload         4
     132: aload_0
     133: getfield      #5                  // Field version:Ljava/lang/Object;
     136: aload_3
     137: invokeinterface #15,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
     142: ifge          149
     145: iconst_1
     146: goto          150
     149: iconst_0
     150: ireturn

  public java.lang.Object getValue();
    Code:
       0: aconst_null
       1: areturn

  public boolean isUnlockable(org.hibernate.cache.spi.access.SoftLock);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method equals:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #17                 // class org/hibernate/cache/spi/support/AbstractReadWriteAccess$SoftLockImpl
      11: ifeq          52
      14: aload_0
      15: getfield      #4                  // Field lockId:J
      18: aload_1
      19: checkcast     #17                 // class org/hibernate/cache/spi/support/AbstractReadWriteAccess$SoftLockImpl
      22: getfield      #4                  // Field lockId:J
      25: lcmp
      26: ifne          50
      29: aload_0
      30: getfield      #6                  // Field sourceUuid:Ljava/util/UUID;
      33: aload_1
      34: checkcast     #17                 // class org/hibernate/cache/spi/support/AbstractReadWriteAccess$SoftLockImpl
      37: getfield      #6                  // Field sourceUuid:Ljava/util/UUID;
      40: invokevirtual #18                 // Method java/util/UUID.equals:(Ljava/lang/Object;)Z
      43: ifeq          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn
      52: iconst_0
      53: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sourceUuid:Ljava/util/UUID;
       4: ifnull        17
       7: aload_0
       8: getfield      #6                  // Field sourceUuid:Ljava/util/UUID;
      11: invokevirtual #19                 // Method java/util/UUID.hashCode:()I
      14: goto          18
      17: iconst_0
      18: istore_1
      19: aload_0
      20: getfield      #4                  // Field lockId:J
      23: l2i
      24: istore_2
      25: iconst_1
      26: istore_3
      27: iload_3
      28: iconst_2
      29: if_icmpge     52
      32: iload_2
      33: i2l
      34: aload_0
      35: getfield      #4                  // Field lockId:J
      38: iload_3
      39: bipush        32
      41: imul
      42: lushr
      43: lxor
      44: l2i
      45: istore_2
      46: iinc          3, 1
      49: goto          27
      52: iload_1
      53: iload_2
      54: iadd
      55: ireturn

  public boolean wasLockedConcurrently();
    Code:
       0: aload_0
       1: getfield      #22                 // Field concurrent:Z
       4: ireturn

  public org.hibernate.cache.spi.support.AbstractReadWriteAccess$SoftLockImpl lock(long, java.util.UUID, long);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #22                 // Field concurrent:Z
       5: aload_0
       6: dup
       7: getfield      #2                  // Field multiplicity:I
      10: iconst_1
      11: iadd
      12: putfield      #2                  // Field multiplicity:I
      15: aload_0
      16: lload_1
      17: putfield      #3                  // Field timeout:J
      20: aload_0
      21: areturn

  public void unlock(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field multiplicity:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #2                  // Field multiplicity:I
      11: ifne          19
      14: aload_0
      15: lload_1
      16: putfield      #13                 // Field unlockTimestamp:J
      19: return

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #25                 // String Lock Source-UUID:
       9: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field sourceUuid:Ljava/util/UUID;
      16: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #28                 // String  Lock-ID:
      21: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #4                  // Field lockId:J
      28: invokevirtual #29                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn
}
