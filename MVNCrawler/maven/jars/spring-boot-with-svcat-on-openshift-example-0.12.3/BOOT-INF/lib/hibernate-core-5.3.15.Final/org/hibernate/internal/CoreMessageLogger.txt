Compiled from "CoreMessageLogger.java"
public interface org.hibernate.internal.CoreMessageLogger extends org.jboss.logging.BasicLogger {
  public abstract void alreadySessionBound();

  public abstract void autoCommitMode(boolean);

  public abstract void autoFlushWillNotWork();

  public abstract void batchContainedStatementsOnRelease();

  public abstract void bytecodeProvider(java.lang.String);

  public abstract void c3p0ProviderClassNotFound(java.lang.String);

  public abstract void cachedFileNotFound(java.lang.String, java.io.FileNotFoundException);

  public abstract void cacheProvider(java.lang.String);

  public abstract void callingJoinTransactionOnNonJtaEntityManager();

  public abstract void closing();

  public abstract void collectionsFetched(long);

  public abstract void collectionsLoaded(long);

  public abstract void collectionsRecreated(long);

  public abstract void collectionsRemoved(long);

  public abstract void collectionsUpdated(long);

  public abstract void columns(java.util.Set);

  public abstract void compositeIdClassDoesNotOverrideEquals(java.lang.String);

  public abstract void compositeIdClassDoesNotOverrideHashCode(java.lang.String);

  public abstract void configurationResource(java.lang.String);

  public abstract void configuredSessionFactory(java.lang.String);

  public abstract void configuringFromFile(java.lang.String);

  public abstract void configuringFromResource(java.lang.String);

  public abstract void configuringFromUrl(java.net.URL);

  public abstract void configuringFromXmlDocument();

  public abstract void connectionsObtained(long);

  public abstract void containerProvidingNullPersistenceUnitRootUrl();

  public abstract void containsJoinFetchedCollection(java.lang.String);

  public abstract void creatingSubcontextInfo(java.lang.String);

  public abstract void definingFlushBeforeCompletionIgnoredInHem(java.lang.String);

  public abstract void deprecatedForceDescriminatorAnnotation();

  public abstract void deprecatedOracle9Dialect();

  public abstract void deprecatedOracleDialect();

  public abstract void deprecatedUuidGenerator(java.lang.String, java.lang.String);

  public abstract void disallowingInsertStatementComment();

  public abstract void duplicateGeneratorName(java.lang.String);

  public abstract void duplicateGeneratorTable(java.lang.String);

  public abstract void duplicateImport(java.lang.String, java.lang.String);

  public abstract void duplicateJoins(java.lang.String);

  public abstract void duplicateListener(java.lang.String);

  public abstract void duplicateMetadata();

  public abstract void entitiesDeleted(long);

  public abstract void entitiesFetched(long);

  public abstract void entitiesInserted(long);

  public abstract void entitiesLoaded(long);

  public abstract void entitiesUpdated(long);

  public abstract void entityAnnotationOnNonRoot(java.lang.String);

  public abstract void entityManagerClosedBySomeoneElse(java.lang.String);

  public abstract void entityMappedAsNonAbstract(java.lang.String);

  public abstract void exceptionHeaderFound(java.lang.String, java.lang.String);

  public abstract void exceptionHeaderNotFound(java.lang.String, java.lang.String);

  public abstract void exceptionInAfterTransactionCompletionInterceptor(java.lang.Throwable);

  public abstract void exceptionInBeforeTransactionCompletionInterceptor(java.lang.Throwable);

  public abstract void exceptionInSubResolver(java.lang.String);

  public abstract void expectedType(java.lang.String, java.lang.String);

  public abstract void expired(java.lang.Object);

  public abstract void factoryBoundToJndiName(java.lang.String);

  public abstract void factoryJndiRename(java.lang.String, java.lang.String);

  public abstract void factoryUnboundFromJndiName(java.lang.String);

  public abstract void factoryUnboundFromName(java.lang.String);

  public abstract void failed(java.lang.Throwable);

  public abstract void failSafeCollectionsCleanup(org.hibernate.engine.loading.internal.CollectionLoadContext);

  public abstract void failSafeEntitiesCleanup(org.hibernate.engine.loading.internal.EntityLoadContext);

  public abstract void fetchingDatabaseMetadata();

  public abstract void firstOrMaxResultsSpecifiedWithCollectionFetch();

  public abstract void flushes(long);

  public abstract void forcingContainerResourceCleanup();

  public abstract void forcingTableUse();

  public abstract void foreignKeys(java.util.Set);

  public abstract void foundMappingDocument(java.lang.String);

  public abstract void gettersOfLazyClassesCannotBeFinal(java.lang.String, java.lang.String);

  public abstract void guidGenerated(java.lang.String);

  public abstract void handlingTransientEntity();

  public abstract void hibernateConnectionPoolSize(int, int);

  public abstract void honoringOptimizerSetting(java.lang.String, java.lang.String, int, java.lang.String, int);

  public abstract void hql(java.lang.String, java.lang.Long, java.lang.Long);

  public abstract void hsqldbSupportsOnlyReadCommittedIsolation();

  public abstract void hydratingEntitiesCount(int);

  public abstract void ignoringTableGeneratorConstraints(java.lang.String);

  public abstract void ignoringUnrecognizedQueryHint(java.lang.String);

  public abstract void illegalPropertyGetterArgument(java.lang.String, java.lang.String);

  public abstract void illegalPropertySetterArgument(java.lang.String, java.lang.String);

  public abstract void immutableAnnotationOnNonRoot(java.lang.String);

  public abstract void incompleteMappingMetadataCacheProcessing();

  public abstract void indexes(java.util.Set);

  public abstract void couldNotBindJndiListener();

  public abstract void instantiatingExplicitConnectionProvider(java.lang.String);

  public abstract void invalidArrayElementType(java.lang.String);

  public abstract void invalidDiscriminatorAnnotation(java.lang.String);

  public abstract void invalidEditOfReadOnlyItem(java.lang.Object);

  public abstract void invalidJndiName(java.lang.String, org.hibernate.engine.jndi.JndiNameException);

  public abstract void invalidOnDeleteAnnotation(java.lang.String);

  public abstract void invalidPrimaryKeyJoinColumnAnnotation(java.lang.String);

  public abstract void invalidSubStrategy(java.lang.String);

  public abstract void invalidTableAnnotation(java.lang.String);

  public abstract void jaccContextId(java.lang.String);

  public abstract void JavaSqlTypesMappedSameCodeMultipleTimes(int, java.lang.String, java.lang.String);

  public abstract java.lang.String bytecodeEnhancementFailed(java.lang.String);

  public abstract void jdbcAutoCommitFalseBreaksEjb3Spec(java.lang.String);

  public abstract java.lang.String jdbcRollbackFailed();

  public abstract void jndiInitialContextProperties(java.util.Hashtable);

  public abstract void jndiNameDoesNotHandleSessionFactoryReference(java.lang.String, java.lang.ClassCastException);

  public abstract void lazyPropertyFetchingAvailable(java.lang.String);

  public abstract void loadingCollectionKeyNotFound(org.hibernate.engine.spi.CollectionKey);

  public abstract void localLoadingCollectionKeysCount(int);

  public abstract void loggingStatistics();

  public abstract void logicalConnectionClosed();

  public abstract void logicalConnectionReleasingPhysicalConnection();

  public abstract void maxQueryTime(long);

  public abstract void missingArguments(int, int);

  public abstract void missingEntityAnnotation(java.lang.String);

  public abstract void namedQueryError(java.lang.String, org.hibernate.HibernateException);

  public abstract void namingExceptionAccessingFactory(javax.naming.NamingException);

  public abstract void narrowingProxy(java.lang.Class);

  public abstract void needsLimit();

  public abstract void noAppropriateConnectionProvider();

  public abstract void noDefaultConstructor(java.lang.String);

  public abstract void noPersistentClassesFound(java.lang.String);

  public abstract void noSessionFactoryWithJndiName(java.lang.String, javax.naming.NameNotFoundException);

  public abstract void optimisticLockFailures(long);

  public abstract void orderByAnnotationIndexedCollection();

  public abstract void overridingTransactionStrategyDangerous(java.lang.String);

  public abstract void packageNotFound(java.lang.String);

  public abstract void parsingXmlError(int, java.lang.String);

  public abstract void parsingXmlErrorForFile(java.lang.String, int, java.lang.String);

  public abstract void parsingXmlWarning(int, java.lang.String);

  public abstract void parsingXmlWarningForFile(java.lang.String, int, java.lang.String);

  public abstract void persistenceProviderCallerDoesNotImplementEjb3SpecCorrectly();

  public abstract void pooledOptimizerReportedInitialValue(org.hibernate.id.IntegralDataTypeHolder);

  public abstract void preparedStatementAlreadyInBatch(java.lang.String);

  public abstract void processEqualityExpression();

  public abstract void processingPersistenceUnitInfoName(java.lang.String);

  public abstract void propertiesLoaded(java.util.Properties);

  public abstract void propertiesNotFound();

  public abstract void propertyNotFound(java.lang.String);

  public abstract void proxoolProviderClassNotFound(java.lang.String);

  public abstract void queriesExecuted(long);

  public abstract void queryCacheHits(long);

  public abstract void queryCacheMisses(long);

  public abstract void queryCachePuts(long);

  public abstract void rdmsOs2200Dialect();

  public abstract void readingCachedMappings(java.io.File);

  public abstract void readingMappingsFromFile(java.lang.String);

  public abstract void readingMappingsFromResource(java.lang.String);

  public abstract void readOnlyCacheConfiguredForMutableCollection(java.lang.String);

  public abstract void recognizedObsoleteHibernateNamespace(java.lang.String, java.lang.String);

  public abstract void renamedProperty(java.lang.Object, java.lang.Object);

  public abstract void requiredDifferentProvider(java.lang.String);

  public abstract void runningHbm2ddlSchemaExport();

  public abstract void runningHbm2ddlSchemaUpdate();

  public abstract void runningSchemaValidator();

  public abstract void schemaExportComplete();

  public abstract void schemaExportUnsuccessful(java.lang.Exception);

  public abstract void schemaUpdateComplete();

  public abstract void scopingTypesToSessionFactoryAfterAlreadyScoped(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.SessionFactoryImplementor);

  public abstract void searchingForMappingDocuments(java.lang.String);

  public abstract void secondLevelCacheHits(long);

  public abstract void secondLevelCacheMisses(long);

  public abstract void secondLevelCachePuts(long);

  public abstract void serviceProperties(java.util.Properties);

  public abstract void sessionsClosed(long);

  public abstract void sessionsOpened(long);

  public abstract void settersOfLazyClassesCannotBeFinal(java.lang.String, java.lang.String);

  public abstract void sortAnnotationIndexedCollection();

  public abstract void splitQueries(java.lang.String, int);

  public abstract void sqlWarning(int, java.lang.String);

  public abstract void startingQueryCache(java.lang.String);

  public abstract void startingServiceAtJndiName(java.lang.String);

  public abstract void startingUpdateTimestampsCache(java.lang.String);

  public abstract void startTime(long);

  public abstract void statementsClosed(long);

  public abstract void statementsPrepared(long);

  public abstract void stoppingService();

  public abstract void subResolverException(java.lang.String);

  public abstract void successfulTransactions(long);

  public abstract void synchronizationAlreadyRegistered(javax.transaction.Synchronization);

  public abstract void synchronizationFailed(javax.transaction.Synchronization, java.lang.Throwable);

  public abstract void tableFound(java.lang.String);

  public abstract void tableNotFound(java.lang.String);

  public abstract void multipleTablesFound(java.lang.String);

  public abstract void transactions(long);

  public abstract void transactionStartedOnNonRootSession();

  public abstract void transactionStrategy(java.lang.String);

  public abstract void typeDefinedNoRegistrationKeys(org.hibernate.type.BasicType);

  public abstract void typeRegistrationOverridesPrevious(java.lang.String, org.hibernate.type.Type);

  public abstract void unableToAccessEjb3Configuration(javax.naming.NamingException);

  public abstract void unableToAccessSessionFactory(java.lang.String, javax.naming.NamingException);

  public abstract void unableToAccessTypeInfoResultSet(java.lang.String);

  public abstract void unableToApplyConstraints(java.lang.String, java.lang.Exception);

  public abstract void unableToBindEjb3ConfigurationToJndi(org.hibernate.engine.jndi.JndiException);

  public abstract void unableToBindFactoryToJndi(org.hibernate.engine.jndi.JndiException);

  public abstract void unableToBindValueToParameter(java.lang.String, int, java.lang.String);

  public abstract void unableToBuildEnhancementMetamodel(java.lang.String);

  public abstract void unableToBuildSessionFactoryUsingMBeanClasspath(java.lang.String);

  public abstract void unableToCleanUpCallableStatement(java.sql.SQLException);

  public abstract void unableToCleanUpPreparedStatement(java.sql.SQLException);

  public abstract void unableToCleanupTemporaryIdTable(java.lang.Throwable);

  public abstract void unableToCloseConnection(java.lang.Exception);

  public abstract void unableToCloseInitialContext(java.lang.String);

  public abstract void unableToCloseInputFiles(java.lang.String, java.io.IOException);

  public abstract void unableToCloseInputStream(java.io.IOException);

  public abstract void unableToCloseInputStreamForResource(java.lang.String, java.io.IOException);

  public abstract void unableToCloseIterator(java.sql.SQLException);

  public abstract void unableToCloseJar(java.lang.String);

  public abstract void unableToCloseOutputFile(java.lang.String, java.io.IOException);

  public abstract void unableToCloseOutputStream(java.io.IOException);

  public abstract void unableToCloseSession(org.hibernate.HibernateException);

  public abstract void unableToCloseSessionDuringRollback(java.lang.Exception);

  public abstract void unableToCloseStream(java.io.IOException);

  public abstract void unableToCloseStreamError(java.io.IOException);

  public abstract java.lang.String unableToCommitJta();

  public abstract void unableToCompleteSchemaUpdate(java.lang.Exception);

  public abstract void unableToCompleteSchemaValidation(java.sql.SQLException);

  public abstract void unableToConfigureSqlExceptionConverter(org.hibernate.HibernateException);

  public abstract void unableToConstructCurrentSessionContext(java.lang.String, java.lang.Throwable);

  public abstract void unableToConstructSqlExceptionConverter(java.lang.Throwable);

  public abstract void unableToCopySystemProperties();

  public abstract void unableToCreateProxyFactory(java.lang.String, org.hibernate.HibernateException);

  public abstract void unableToCreateSchema(java.lang.Exception);

  public abstract void unableToDeserializeCache(java.lang.String, org.hibernate.type.SerializationException);

  public abstract void unableToDestroyCache(java.lang.String);

  public abstract void unableToDestroyQueryCache(java.lang.String, java.lang.String);

  public abstract void unableToDestroyUpdateTimestampsCache(java.lang.String, java.lang.String);

  public abstract void unableToDetermineLockModeValue(java.lang.String, java.lang.Object);

  public abstract java.lang.String unableToDetermineTransactionStatus();

  public abstract java.lang.String unableToDetermineTransactionStatusAfterCommit();

  public abstract void unableToDropTemporaryIdTable(java.lang.String);

  public abstract void unableToExecuteBatch(java.lang.Exception, java.lang.String);

  public abstract void unableToExecuteResolver(org.hibernate.engine.jdbc.dialect.spi.DialectResolver, java.lang.String);

  public abstract void unableToFindPersistenceXmlInClasspath();

  public abstract void unableToGetDatabaseMetadata(java.sql.SQLException);

  public abstract void unableToInstantiateConfiguredSchemaNameResolver(java.lang.String, java.lang.String);

  public abstract void unableToLocateCustomOptimizerClass(java.lang.String);

  public abstract void unableToInstantiateOptimizer(java.lang.String);

  public abstract void unableToInstantiateUuidGenerationStrategy(java.lang.Exception);

  public abstract void unableToJoinTransaction(java.lang.String);

  public abstract void unableToLoadCommand(org.hibernate.HibernateException);

  public abstract void unableToLoadDerbyDriver(java.lang.String);

  public abstract void unableToLoadProperties();

  public abstract java.lang.String unableToLocateConfigFile(java.lang.String);

  public abstract void unableToLocateConfiguredSchemaNameResolver(java.lang.String, java.lang.String);

  public abstract void unableToLocateMBeanServer();

  public abstract void unableToLocateUuidGenerationStrategy(java.lang.String);

  public abstract void unableToLogSqlWarnings(java.sql.SQLException);

  public abstract void unableToLogWarnings(java.sql.SQLException);

  public abstract void unableToMarkForRollbackOnPersistenceException(java.lang.Exception);

  public abstract void unableToMarkForRollbackOnTransientObjectException(java.lang.Exception);

  public abstract void unableToObjectConnectionMetadata(java.sql.SQLException);

  public abstract void unableToObjectConnectionToQueryMetadata(java.sql.SQLException);

  public abstract void unableToObtainConnectionMetadata(java.lang.String);

  public abstract void unableToObtainConnectionToQueryMetadata(java.lang.String);

  public abstract void unableToObtainInitialContext(javax.naming.NamingException);

  public abstract void unableToParseMetadata(java.lang.String);

  public abstract java.lang.String unableToPerformJdbcCommit();

  public abstract void unableToPerformManagedFlush(java.lang.String);

  public abstract java.lang.String unableToQueryDatabaseMetadata();

  public abstract void unableToReadClass(java.lang.String);

  public abstract void unableToReadColumnValueFromResultSet(java.lang.String, java.lang.String);

  public abstract java.lang.String unableToReadHiValue(java.lang.String);

  public abstract void unableToReadOrInitHiValue(java.sql.SQLException);

  public abstract void unableToReleaseBatchStatement();

  public abstract void unableToReleaseCacheLock(org.hibernate.cache.CacheException);

  public abstract void unableToReleaseContext(java.lang.String);

  public abstract void unableToReleaseCreatedMBeanServer(java.lang.String);

  public abstract void unableToReleaseIsolatedConnection(java.lang.Throwable);

  public abstract void unableToReleaseTypeInfoResultSet();

  public abstract void unableToRemoveBagJoinFetch();

  public abstract void unableToResolveAggregateFunction(java.lang.String);

  public abstract void unableToResolveMappingFile(java.lang.String);

  public abstract void unableToRetrieveCache(java.lang.String, java.lang.String);

  public abstract void unableToRetrieveTypeInfoResultSet(java.lang.String);

  public abstract void unableToRollbackConnection(java.lang.Exception);

  public abstract void unableToRollbackIsolatedTransaction(java.lang.Exception, java.lang.Exception);

  public abstract java.lang.String unableToRollbackJta();

  public abstract void unableToRunSchemaUpdate(java.lang.Exception);

  public abstract void unableToSetTransactionToRollbackOnly(javax.transaction.SystemException);

  public abstract void unableToStopHibernateService(java.lang.Exception);

  public abstract void unableToStopService(java.lang.Class, java.lang.String);

  public abstract void unableToSwitchToMethodUsingColumnIndex(java.lang.reflect.Method);

  public abstract void unableToSynchronizeDatabaseStateWithSession(org.hibernate.HibernateException);

  public abstract void unableToToggleAutoCommit(java.lang.Exception);

  public abstract void unableToTransformClass(java.lang.String);

  public abstract void unableToUnbindFactoryFromJndi(org.hibernate.engine.jndi.JndiException);

  public abstract java.lang.String unableToUpdateHiValue(java.lang.String);

  public abstract void unableToUpdateQueryHiValue(java.lang.String, java.sql.SQLException);

  public abstract void unableToWrapResultSet(java.sql.SQLException);

  public abstract void unableToWriteCachedFile(java.lang.String, java.lang.String);

  public abstract void unexpectedLiteralTokenType(int);

  public abstract void unexpectedRowCounts();

  public abstract void unknownBytecodeProvider(java.lang.String, java.lang.String);

  public abstract void unknownIngresVersion(int);

  public abstract void unknownOracleVersion(int);

  public abstract void unknownSqlServerVersion(int, java.lang.Class<? extends org.hibernate.dialect.Dialect>);

  public abstract void unregisteredResultSetWithoutStatement();

  public abstract void unregisteredStatement();

  public abstract void unsuccessful(java.lang.String);

  public abstract void unsuccessfulCreate(java.lang.String);

  public abstract void unsupportedAfterStatement();

  public abstract void unsupportedIngresVersion();

  public abstract void unsupportedInitialValue(java.lang.String);

  public abstract void unsupportedMultiTableBulkHqlJpaql(int, int, int);

  public abstract void unsupportedOracleVersion();

  public abstract void unsupportedProperty(java.lang.Object, java.lang.Object);

  public abstract void updatingSchema();

  public abstract void usingAstQueryTranslatorFactory();

  public abstract void usingDefaultIdGeneratorSegmentValue(java.lang.String, java.lang.String, java.lang.String);

  public abstract void usingDefaultTransactionStrategy();

  public abstract void usingDialect(org.hibernate.dialect.Dialect);

  public abstract void usingOldDtd();

  public abstract void usingReflectionOptimizer();

  public abstract void usingStreams();

  public abstract void usingUuidHexGenerator(java.lang.String, java.lang.String);

  public abstract void validatorNotFound();

  public abstract void version(java.lang.String);

  public abstract void warningsCreatingTempTable(java.sql.SQLWarning);

  public abstract void willNotRegisterListeners();

  public abstract void writeLocksNotSupported(java.lang.String);

  public abstract void writingGeneratedSchemaToFile(java.lang.String);

  public abstract void addingOverrideFor(java.lang.String, java.lang.String);

  public abstract void resolvedSqlTypeDescriptorForDifferentSqlCode(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract void closingUnreleasedBatch();

  public abstract void disablingContextualLOBCreation(java.lang.String);

  public abstract void disablingContextualLOBCreationSinceConnectionNull();

  public abstract void disablingContextualLOBCreationSinceOldJdbcVersion(int);

  public abstract void disablingContextualLOBCreationSinceCreateClobFailed(java.lang.Throwable);

  public abstract void unableToCloseSessionButSwallowingError(org.hibernate.HibernateException);

  public abstract void setManagerLookupClass();

  public abstract void legacyTransactionManagerStrategy(java.lang.String, java.lang.String);

  public abstract void entityIdentifierValueBindingExists(java.lang.String);

  public abstract void deprecatedDerbyDialect();

  public abstract void undeterminedH2Version();

  public abstract void noColumnsSpecifiedForIndex(java.lang.String, java.lang.String);

  public abstract void timestampCachePuts(long);

  public abstract void timestampCacheHits(long);

  public abstract void timestampCacheMisses(long);

  public abstract void entityManagerFactoryAlreadyRegistered(java.lang.String, java.lang.String);

  public abstract void cannotResolveNonNullableTransientDependencies(java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);

  public abstract void naturalIdCachePuts(long);

  public abstract void naturalIdCacheHits(long);

  public abstract void naturalIdCacheMisses(long);

  public abstract void naturalIdMaxQueryTime(long);

  public abstract void naturalIdQueriesExecuted(long);

  public abstract void tooManyInExpressions(java.lang.String, int, java.lang.String, int);

  public abstract void usingFollowOnLocking();

  public abstract void aliasSpecificLockingWithFollowOnLocking(org.hibernate.LockMode);

  public abstract void embedXmlAttributesNoLongerSupported();

  public abstract void explicitSkipLockedLockCombo();

  public abstract void multipleValidationModes(java.lang.String);

  public abstract void nonCompliantMapConversion(java.lang.String);

  public abstract void alternateServiceRole(java.lang.String, java.lang.String);

  public abstract void rollbackFromBackgroundThread(int);

  public abstract void unableToLoadScannedClassOrResource(java.lang.Exception);

  public abstract void unableToDiscoverOsgiService(java.lang.String, java.lang.Exception);

  public abstract void deprecatedManyToManyOuterJoin();

  public abstract void deprecatedManyToManyFetch();

  public abstract void unsupportedNamedParameters();

  public abstract void applyingExplicitDiscriminatorColumnForJoined(java.lang.String, java.lang.String);

  public abstract void creatingPooledLoOptimizer(int, java.lang.String);

  public abstract void logBadHbmAttributeConverterType(java.lang.String, java.lang.String);

  public abstract org.hibernate.HibernateException usingStoppedClassLoaderService();

  public abstract void logUnexpectedSessionInCollectionNotConnected(java.lang.String);

  public abstract void logCannotUnsetUnexpectedSessionInCollection(java.lang.String);

  public abstract void hikariProviderClassNotFound();

  public abstract void cachedFileObsolete(java.io.File);

  public abstract java.lang.String ambiguousPropertyMethods(java.lang.String, java.lang.String, java.lang.String);

  public abstract void logCannotLocateIndexColumnInformation(java.lang.String, java.lang.String);

  public abstract void executingImportScript(java.lang.String);

  public abstract void startingDelayedSchemaDrop();

  public abstract void unsuccessfulSchemaManagementCommand(java.lang.String);

  public abstract java.lang.String collectionNotProcessedByFlush(java.lang.String);

  public abstract void stalePersistenceContextInEntityEntry(java.lang.String);

  public abstract void unknownJavaTypeNoEqualsHashCode(java.lang.Class);

  public abstract void cacheOrCacheableAnnotationOnNonRoot(java.lang.String);

  public abstract void emptyCompositesEnabled();

  public abstract void viburProviderClassNotFound();

  public abstract void attemptToAssociateProxyWithTwoOpenSessions(java.lang.String, java.lang.Object);

  public abstract void agroalProviderClassNotFound();

  public abstract void immutableEntityUpdateQuery(java.lang.String, java.lang.String);

  public abstract java.lang.String bytecodeEnhancementFailedUnableToGetPrivateLookupFor(java.lang.String);

  public abstract void nativeExceptionHandling51ComplianceJpaBootstrapping();

  public abstract void ignoreQueuedOperationsOnMerge(java.lang.String);

  public abstract void queuedOperationWhenAttachToSession(java.lang.String);

  public abstract void queuedOperationWhenDetachFromSession(java.lang.String);

  public abstract void queuedOperationWhenDetachFromSessionOnRollback(java.lang.String);

  public abstract void unsupportedAttributeOverrideWithEntityInheritance(java.lang.String);
}
