Compiled from "SessionFactoryOptions.java"
public interface org.hibernate.boot.spi.SessionFactoryOptions {
  public abstract java.lang.String getUuid();

  public abstract org.hibernate.boot.registry.StandardServiceRegistry getServiceRegistry();

  public abstract java.lang.Object getBeanManagerReference();

  public abstract java.lang.Object getValidatorFactoryReference();

  public abstract boolean isJpaBootstrap();

  public abstract boolean isJtaTransactionAccessEnabled();

  public default boolean isAllowRefreshDetachedEntity();
    Code:
       0: iconst_0
       1: ireturn

  public abstract java.lang.String getSessionFactoryName();

  public abstract boolean isSessionFactoryNameAlsoJndiName();

  public abstract boolean isFlushBeforeCompletionEnabled();

  public abstract boolean isAutoCloseSessionEnabled();

  public abstract boolean isStatisticsEnabled();

  public abstract org.hibernate.Interceptor getInterceptor();

  public abstract java.lang.Class<? extends org.hibernate.Interceptor> getStatelessInterceptorImplementor();

  public default java.util.function.Supplier<? extends org.hibernate.Interceptor> getStatelessInterceptorImplementorSupplier();
    Code:
       0: aload_0
       1: invokedynamic #1,  0              // InvokeDynamic #0:get:(Lorg/hibernate/boot/spi/SessionFactoryOptions;)Ljava/util/function/Supplier;
       6: areturn

  public abstract org.hibernate.resource.jdbc.spi.StatementInspector getStatementInspector();

  public abstract org.hibernate.SessionFactoryObserver[] getSessionFactoryObservers();

  public abstract org.hibernate.cfg.BaselineSessionEventsListenerBuilder getBaselineSessionEventsListenerBuilder();

  public abstract boolean isIdentifierRollbackEnabled();

  public abstract org.hibernate.EntityMode getDefaultEntityMode();

  public abstract org.hibernate.tuple.entity.EntityTuplizerFactory getEntityTuplizerFactory();

  public abstract boolean isCheckNullability();

  public abstract boolean isInitializeLazyStateOutsideTransactionsEnabled();

  public abstract org.hibernate.hql.spi.id.MultiTableBulkIdStrategy getMultiTableBulkIdStrategy();

  public abstract org.hibernate.boot.TempTableDdlTransactionHandling getTempTableDdlTransactionHandling();

  public abstract org.hibernate.loader.BatchFetchStyle getBatchFetchStyle();

  public abstract boolean isDelayBatchFetchLoaderCreationsEnabled();

  public abstract int getDefaultBatchFetchSize();

  public abstract java.lang.Integer getMaximumFetchDepth();

  public abstract org.hibernate.NullPrecedence getDefaultNullPrecedence();

  public abstract boolean isOrderUpdatesEnabled();

  public abstract boolean isOrderInsertsEnabled();

  public abstract org.hibernate.MultiTenancyStrategy getMultiTenancyStrategy();

  public abstract org.hibernate.context.spi.CurrentTenantIdentifierResolver getCurrentTenantIdentifierResolver();

  public abstract boolean isJtaTrackByThread();

  public abstract java.util.Map getQuerySubstitutions();

  public default boolean isStrictJpaQueryLanguageCompliance();
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod getJpaCompliance:()Lorg/hibernate/jpa/spi/JpaCompliance;
       6: invokeinterface #3,  1            // InterfaceMethod org/hibernate/jpa/spi/JpaCompliance.isJpaQueryComplianceEnabled:()Z
      11: ireturn

  public abstract boolean isNamedQueryStartupCheckingEnabled();

  public abstract boolean isConventionalJavaConstants();

  public abstract boolean isSecondLevelCacheEnabled();

  public abstract boolean isQueryCacheEnabled();

  public abstract org.hibernate.cache.spi.TimestampsCacheFactory getTimestampsCacheFactory();

  public abstract java.lang.String getCacheRegionPrefix();

  public abstract boolean isMinimalPutsEnabled();

  public abstract boolean isStructuredCacheEntriesEnabled();

  public abstract boolean isDirectReferenceCacheEntriesEnabled();

  public abstract boolean isAutoEvictCollectionCache();

  public abstract org.hibernate.boot.SchemaAutoTooling getSchemaAutoTooling();

  public abstract int getJdbcBatchSize();

  public abstract boolean isJdbcBatchVersionedData();

  public abstract boolean isScrollableResultSetsEnabled();

  public abstract boolean isWrapResultSetsEnabled();

  public abstract boolean isGetGeneratedKeysEnabled();

  public abstract java.lang.Integer getJdbcFetchSize();

  public abstract org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode getPhysicalConnectionHandlingMode();

  public default boolean doesConnectionProviderDisableAutoCommit();
    Code:
       0: iconst_0
       1: ireturn

  public abstract org.hibernate.ConnectionReleaseMode getConnectionReleaseMode();

  public abstract boolean isCommentsEnabled();

  public abstract org.hibernate.CustomEntityDirtinessStrategy getCustomEntityDirtinessStrategy();

  public abstract org.hibernate.EntityNameResolver[] getEntityNameResolvers();

  public abstract org.hibernate.proxy.EntityNotFoundDelegate getEntityNotFoundDelegate();

  public abstract java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction> getCustomSqlFunctionMap();

  public abstract void setCheckNullability(boolean);

  public abstract boolean isPreferUserTransaction();

  public abstract boolean isProcedureParameterNullPassingEnabled();

  public abstract boolean isCollectionJoinSubqueryRewriteEnabled();

  public abstract boolean isAllowOutOfTransactionUpdateOperations();

  public abstract boolean isReleaseResourcesOnCloseEnabled();

  public abstract java.util.TimeZone getJdbcTimeZone();

  public default boolean isQueryParametersValidationEnabled();
    Code:
       0: aload_0
       1: invokeinterface #4,  1            // InterfaceMethod isJpaBootstrap:()Z
       6: ireturn

  public default org.hibernate.query.criteria.LiteralHandlingMode getCriteriaLiteralHandlingMode();
    Code:
       0: getstatic     #5                  // Field org/hibernate/query/criteria/LiteralHandlingMode.AUTO:Lorg/hibernate/query/criteria/LiteralHandlingMode;
       3: areturn

  public abstract boolean jdbcStyleParamsZeroBased();

  public abstract org.hibernate.jpa.spi.JpaCompliance getJpaCompliance();

  public abstract boolean isFailOnPaginationOverCollectionFetchEnabled();

  public default org.hibernate.query.ImmutableEntityUpdateQueryHandlingMode getImmutableEntityUpdateQueryHandlingMode();
    Code:
       0: getstatic     #6                  // Field org/hibernate/query/ImmutableEntityUpdateQueryHandlingMode.WARNING:Lorg/hibernate/query/ImmutableEntityUpdateQueryHandlingMode;
       3: areturn

  public default boolean inClauseParameterPaddingEnabled();
    Code:
       0: iconst_0
       1: ireturn

  public default boolean nativeExceptionHandling51Compliance();
    Code:
       0: iconst_0
       1: ireturn

  public default boolean isEnhancementAsProxyEnabled();
    Code:
       0: iconst_0
       1: ireturn

  private org.hibernate.Interceptor lambda$getStatelessInterceptorImplementorSupplier$0();
    Code:
       0: aload_0
       1: invokeinterface #7,  1            // InterfaceMethod getStatelessInterceptorImplementor:()Ljava/lang/Class;
       6: invokevirtual #8                  // Method java/lang/Class.newInstance:()Ljava/lang/Object;
       9: checkcast     #9                  // class org/hibernate/Interceptor
      12: areturn
      13: astore_1
      14: new           #12                 // class org/hibernate/HibernateException
      17: dup
      18: ldc           #13                 // String Could not supply session-scoped SessionFactory Interceptor
      20: aload_1
      21: invokespecial #14                 // Method org/hibernate/HibernateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      24: athrow
    Exception table:
       from    to  target type
           0    12    13   Class java/lang/InstantiationException
           0    12    13   Class java/lang/IllegalAccessException
}
