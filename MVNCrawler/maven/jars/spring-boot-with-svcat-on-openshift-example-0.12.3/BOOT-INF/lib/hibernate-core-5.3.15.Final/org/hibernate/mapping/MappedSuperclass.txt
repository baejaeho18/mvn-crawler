Compiled from "MappedSuperclass.java"
public class org.hibernate.mapping.MappedSuperclass {
  private final org.hibernate.mapping.MappedSuperclass superMappedSuperclass;

  private final org.hibernate.mapping.PersistentClass superPersistentClass;

  private final java.util.List declaredProperties;

  private java.lang.Class mappedClass;

  private org.hibernate.mapping.Property identifierProperty;

  private org.hibernate.mapping.Property version;

  private org.hibernate.mapping.Component identifierMapper;

  public org.hibernate.mapping.MappedSuperclass(org.hibernate.mapping.MappedSuperclass, org.hibernate.mapping.PersistentClass);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field superMappedSuperclass:Lorg/hibernate/mapping/MappedSuperclass;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field superPersistentClass:Lorg/hibernate/mapping/PersistentClass;
      14: aload_0
      15: new           #4                  // class java/util/ArrayList
      18: dup
      19: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      22: putfield      #6                  // Field declaredProperties:Ljava/util/List;
      25: return

  public org.hibernate.mapping.MappedSuperclass getSuperMappedSuperclass();
    Code:
       0: aload_0
       1: getfield      #2                  // Field superMappedSuperclass:Lorg/hibernate/mapping/MappedSuperclass;
       4: areturn

  public boolean hasIdentifierProperty();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getIdentifierProperty:()Lorg/hibernate/mapping/Property;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isVersioned();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getVersion:()Lorg/hibernate/mapping/Property;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.hibernate.mapping.PersistentClass getSuperPersistentClass();
    Code:
       0: aload_0
       1: getfield      #3                  // Field superPersistentClass:Lorg/hibernate/mapping/PersistentClass;
       4: areturn

  public java.util.Iterator getDeclaredPropertyIterator();
    Code:
       0: aload_0
       1: getfield      #6                  // Field declaredProperties:Ljava/util/List;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: areturn

  public void addDeclaredProperty(org.hibernate.mapping.Property);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method org/hibernate/mapping/Property.getName:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #6                  // Field declaredProperties:Ljava/util/List;
       9: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          44
      24: aload_2
      25: aload_3
      26: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #13                 // class org/hibernate/mapping/Property
      34: invokevirtual #10                 // Method org/hibernate/mapping/Property.getName:()Ljava/lang/String;
      37: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifeq          15
      43: return
      44: aload_0
      45: getfield      #6                  // Field declaredProperties:Ljava/util/List;
      48: aload_1
      49: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: return

  public java.lang.Class getMappedClass();
    Code:
       0: aload_0
       1: getfield      #16                 // Field mappedClass:Ljava/lang/Class;
       4: areturn

  public void setMappedClass(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field mappedClass:Ljava/lang/Class;
       5: return

  public org.hibernate.mapping.Property getIdentifierProperty();
    Code:
       0: aload_0
       1: getfield      #17                 // Field identifierProperty:Lorg/hibernate/mapping/Property;
       4: astore_1
       5: aload_1
       6: ifnonnull     43
       9: aload_0
      10: getfield      #2                  // Field superMappedSuperclass:Lorg/hibernate/mapping/MappedSuperclass;
      13: ifnull        24
      16: aload_0
      17: getfield      #2                  // Field superMappedSuperclass:Lorg/hibernate/mapping/MappedSuperclass;
      20: invokevirtual #7                  // Method getIdentifierProperty:()Lorg/hibernate/mapping/Property;
      23: astore_1
      24: aload_1
      25: ifnonnull     43
      28: aload_0
      29: getfield      #3                  // Field superPersistentClass:Lorg/hibernate/mapping/PersistentClass;
      32: ifnull        43
      35: aload_0
      36: getfield      #3                  // Field superPersistentClass:Lorg/hibernate/mapping/PersistentClass;
      39: invokevirtual #18                 // Method org/hibernate/mapping/PersistentClass.getIdentifierProperty:()Lorg/hibernate/mapping/Property;
      42: astore_1
      43: aload_1
      44: areturn

  public org.hibernate.mapping.Property getDeclaredIdentifierProperty();
    Code:
       0: aload_0
       1: getfield      #17                 // Field identifierProperty:Lorg/hibernate/mapping/Property;
       4: areturn

  public void setDeclaredIdentifierProperty(org.hibernate.mapping.Property);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field identifierProperty:Lorg/hibernate/mapping/Property;
       5: return

  public org.hibernate.mapping.Property getVersion();
    Code:
       0: aload_0
       1: getfield      #19                 // Field version:Lorg/hibernate/mapping/Property;
       4: astore_1
       5: aload_1
       6: ifnonnull     43
       9: aload_0
      10: getfield      #2                  // Field superMappedSuperclass:Lorg/hibernate/mapping/MappedSuperclass;
      13: ifnull        24
      16: aload_0
      17: getfield      #2                  // Field superMappedSuperclass:Lorg/hibernate/mapping/MappedSuperclass;
      20: invokevirtual #8                  // Method getVersion:()Lorg/hibernate/mapping/Property;
      23: astore_1
      24: aload_1
      25: ifnonnull     43
      28: aload_0
      29: getfield      #3                  // Field superPersistentClass:Lorg/hibernate/mapping/PersistentClass;
      32: ifnull        43
      35: aload_0
      36: getfield      #3                  // Field superPersistentClass:Lorg/hibernate/mapping/PersistentClass;
      39: invokevirtual #20                 // Method org/hibernate/mapping/PersistentClass.getVersion:()Lorg/hibernate/mapping/Property;
      42: astore_1
      43: aload_1
      44: areturn

  public org.hibernate.mapping.Property getDeclaredVersion();
    Code:
       0: aload_0
       1: getfield      #19                 // Field version:Lorg/hibernate/mapping/Property;
       4: areturn

  public void setDeclaredVersion(org.hibernate.mapping.Property);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field version:Lorg/hibernate/mapping/Property;
       5: return

  public org.hibernate.mapping.Component getIdentifierMapper();
    Code:
       0: aload_0
       1: getfield      #21                 // Field identifierMapper:Lorg/hibernate/mapping/Component;
       4: astore_1
       5: aload_1
       6: ifnonnull     43
       9: aload_0
      10: getfield      #2                  // Field superMappedSuperclass:Lorg/hibernate/mapping/MappedSuperclass;
      13: ifnull        24
      16: aload_0
      17: getfield      #2                  // Field superMappedSuperclass:Lorg/hibernate/mapping/MappedSuperclass;
      20: invokevirtual #22                 // Method getIdentifierMapper:()Lorg/hibernate/mapping/Component;
      23: astore_1
      24: aload_1
      25: ifnonnull     43
      28: aload_0
      29: getfield      #3                  // Field superPersistentClass:Lorg/hibernate/mapping/PersistentClass;
      32: ifnull        43
      35: aload_0
      36: getfield      #3                  // Field superPersistentClass:Lorg/hibernate/mapping/PersistentClass;
      39: invokevirtual #23                 // Method org/hibernate/mapping/PersistentClass.getIdentifierMapper:()Lorg/hibernate/mapping/Component;
      42: astore_1
      43: aload_1
      44: areturn

  public org.hibernate.mapping.Component getDeclaredIdentifierMapper();
    Code:
       0: aload_0
       1: getfield      #21                 // Field identifierMapper:Lorg/hibernate/mapping/Component;
       4: areturn

  public void setDeclaredIdentifierMapper(org.hibernate.mapping.Component);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field identifierMapper:Lorg/hibernate/mapping/Component;
       5: return

  public boolean hasProperty(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getDeclaredPropertyIterator:()Ljava/util/Iterator;
       4: astore_2
       5: aload_2
       6: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          40
      14: aload_2
      15: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #13                 // class org/hibernate/mapping/Property
      23: astore_3
      24: aload_3
      25: invokevirtual #10                 // Method org/hibernate/mapping/Property.getName:()Ljava/lang/String;
      28: aload_1
      29: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: goto          5
      40: iconst_0
      41: ireturn

  public boolean isPropertyDefinedInHierarchy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method hasProperty:(Ljava/lang/String;)Z
       5: ifeq          10
       8: iconst_1
       9: ireturn
      10: aload_0
      11: invokevirtual #26                 // Method getSuperMappedSuperclass:()Lorg/hibernate/mapping/MappedSuperclass;
      14: ifnull        30
      17: aload_0
      18: invokevirtual #26                 // Method getSuperMappedSuperclass:()Lorg/hibernate/mapping/MappedSuperclass;
      21: aload_1
      22: invokevirtual #27                 // Method isPropertyDefinedInHierarchy:(Ljava/lang/String;)Z
      25: ifeq          30
      28: iconst_1
      29: ireturn
      30: aload_0
      31: invokevirtual #28                 // Method getSuperPersistentClass:()Lorg/hibernate/mapping/PersistentClass;
      34: ifnull        50
      37: aload_0
      38: invokevirtual #28                 // Method getSuperPersistentClass:()Lorg/hibernate/mapping/PersistentClass;
      41: aload_1
      42: invokevirtual #29                 // Method org/hibernate/mapping/PersistentClass.isPropertyDefinedInHierarchy:(Ljava/lang/String;)Z
      45: ifeq          50
      48: iconst_1
      49: ireturn
      50: iconst_0
      51: ireturn
}
