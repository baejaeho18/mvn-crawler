Compiled from "CascadingActions.java"
final class org.hibernate.engine.spi.CascadingActions$8 extends org.hibernate.engine.spi.CascadingActions$BaseCascadingAction {
  org.hibernate.engine.spi.CascadingActions$8();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hibernate/engine/spi/CascadingActions$BaseCascadingAction."<init>":()V
       4: return

  public void cascade(org.hibernate.event.spi.EventSource, java.lang.Object, java.lang.String, java.lang.Object, boolean) throws org.hibernate.HibernateException;
    Code:
       0: invokestatic  #2                  // Method org/hibernate/engine/spi/CascadingActions.access$000:()Lorg/hibernate/internal/CoreMessageLogger;
       3: ldc           #3                  // String Cascading to persist on flush: {0}
       5: aload_3
       6: invokeinterface #4,  3            // InterfaceMethod org/hibernate/internal/CoreMessageLogger.tracev:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_1
      12: aload_3
      13: aload_2
      14: aload         4
      16: checkcast     #5                  // class java/util/Map
      19: invokeinterface #6,  4            // InterfaceMethod org/hibernate/event/spi/EventSource.persistOnFlush:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V
      24: return

  public java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.spi.EventSource, org.hibernate.type.CollectionType, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokestatic  #7                  // Method org/hibernate/engine/spi/CascadingActions.getLoadedElementsIterator:(Lorg/hibernate/engine/spi/SharedSessionContractImplementor;Lorg/hibernate/type/CollectionType;Ljava/lang/Object;)Ljava/util/Iterator;
       6: areturn

  public boolean deleteOrphans();
    Code:
       0: iconst_1
       1: ireturn

  public boolean requiresNoCascadeChecking();
    Code:
       0: iconst_1
       1: ireturn

  public void noCascade(org.hibernate.event.spi.EventSource, java.lang.Object, org.hibernate.persister.entity.EntityPersister, org.hibernate.type.Type, int);
    Code:
       0: aload         4
       2: invokeinterface #8,  1            // InterfaceMethod org/hibernate/type/Type.isEntityType:()Z
       7: ifeq          107
      10: aload_3
      11: aload_2
      12: iload         5
      14: invokeinterface #9,  3            // InterfaceMethod org/hibernate/persister/entity/EntityPersister.getPropertyValue:(Ljava/lang/Object;I)Ljava/lang/Object;
      19: astore        6
      21: aload         6
      23: ifnull        107
      26: aload_0
      27: aload         6
      29: aload_1
      30: invokespecial #10                 // Method isInManagedState:(Ljava/lang/Object;Lorg/hibernate/event/spi/EventSource;)Z
      33: ifne          107
      36: aload         6
      38: instanceof    #11                 // class org/hibernate/proxy/HibernateProxy
      41: ifne          107
      44: aload         4
      46: checkcast     #12                 // class org/hibernate/type/EntityType
      49: aload_1
      50: invokeinterface #13,  1           // InterfaceMethod org/hibernate/event/spi/EventSource.getFactory:()Lorg/hibernate/engine/spi/SessionFactoryImplementor;
      55: invokevirtual #14                 // Method org/hibernate/type/EntityType.getAssociatedEntityName:(Lorg/hibernate/engine/spi/SessionFactoryImplementor;)Ljava/lang/String;
      58: astore        7
      60: aload         7
      62: aload         6
      64: aconst_null
      65: aload_1
      66: invokestatic  #15                 // Method org/hibernate/engine/internal/ForeignKeys.isTransient:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Boolean;Lorg/hibernate/engine/spi/SharedSessionContractImplementor;)Z
      69: ifeq          107
      72: aload_3
      73: invokeinterface #16,  1           // InterfaceMethod org/hibernate/persister/entity/EntityPersister.getEntityName:()Ljava/lang/String;
      78: astore        8
      80: aload_3
      81: invokeinterface #17,  1           // InterfaceMethod org/hibernate/persister/entity/EntityPersister.getPropertyNames:()[Ljava/lang/String;
      86: iload         5
      88: aaload
      89: astore        9
      91: new           #18                 // class org/hibernate/TransientPropertyValueException
      94: dup
      95: ldc           #19                 // String object references an unsaved transient instance - save the transient instance before flushing
      97: aload         7
      99: aload         8
     101: aload         9
     103: invokespecial #20                 // Method org/hibernate/TransientPropertyValueException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     106: athrow
     107: return

  public boolean performOnLazyProperty();
    Code:
       0: iconst_0
       1: ireturn

  private boolean isInManagedState(java.lang.Object, org.hibernate.event.spi.EventSource);
    Code:
       0: aload_2
       1: invokeinterface #21,  1           // InterfaceMethod org/hibernate/event/spi/EventSource.getPersistenceContext:()Lorg/hibernate/engine/spi/PersistenceContext;
       6: aload_1
       7: invokeinterface #22,  2           // InterfaceMethod org/hibernate/engine/spi/PersistenceContext.getEntry:(Ljava/lang/Object;)Lorg/hibernate/engine/spi/EntityEntry;
      12: astore_3
      13: aload_3
      14: ifnull        57
      17: aload_3
      18: invokeinterface #23,  1           // InterfaceMethod org/hibernate/engine/spi/EntityEntry.getStatus:()Lorg/hibernate/engine/spi/Status;
      23: getstatic     #24                 // Field org/hibernate/engine/spi/Status.MANAGED:Lorg/hibernate/engine/spi/Status;
      26: if_acmpeq     53
      29: aload_3
      30: invokeinterface #23,  1           // InterfaceMethod org/hibernate/engine/spi/EntityEntry.getStatus:()Lorg/hibernate/engine/spi/Status;
      35: getstatic     #25                 // Field org/hibernate/engine/spi/Status.READ_ONLY:Lorg/hibernate/engine/spi/Status;
      38: if_acmpeq     53
      41: aload_3
      42: invokeinterface #23,  1           // InterfaceMethod org/hibernate/engine/spi/EntityEntry.getStatus:()Lorg/hibernate/engine/spi/Status;
      47: getstatic     #26                 // Field org/hibernate/engine/spi/Status.SAVING:Lorg/hibernate/engine/spi/Status;
      50: if_acmpne     57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #27                 // String ACTION_PERSIST_ON_FLUSH
       2: areturn
}
