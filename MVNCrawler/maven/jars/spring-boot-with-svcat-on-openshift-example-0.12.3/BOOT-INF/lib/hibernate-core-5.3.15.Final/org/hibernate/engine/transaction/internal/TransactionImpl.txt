Compiled from "TransactionImpl.java"
public class org.hibernate.engine.transaction.internal.TransactionImpl implements org.hibernate.engine.transaction.spi.TransactionImplementor {
  private static final org.jboss.logging.Logger LOG;

  private final org.hibernate.resource.transaction.spi.TransactionCoordinator transactionCoordinator;

  private final org.hibernate.engine.spi.ExceptionConverter exceptionConverter;

  private final org.hibernate.jpa.spi.JpaCompliance jpaCompliance;

  private final org.hibernate.internal.AbstractSharedSessionContract session;

  private org.hibernate.resource.transaction.spi.TransactionCoordinator$TransactionDriver transactionDriverControl;

  public org.hibernate.engine.transaction.internal.TransactionImpl(org.hibernate.resource.transaction.spi.TransactionCoordinator, org.hibernate.engine.spi.ExceptionConverter, org.hibernate.internal.AbstractSharedSessionContract);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field exceptionConverter:Lorg/hibernate/engine/spi/ExceptionConverter;
      14: aload_0
      15: aload_3
      16: invokevirtual #4                  // Method org/hibernate/internal/AbstractSharedSessionContract.getFactory:()Lorg/hibernate/engine/spi/SessionFactoryImplementor;
      19: invokeinterface #5,  1            // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getSessionFactoryOptions:()Lorg/hibernate/boot/spi/SessionFactoryOptions;
      24: invokeinterface #6,  1            // InterfaceMethod org/hibernate/boot/spi/SessionFactoryOptions.getJpaCompliance:()Lorg/hibernate/jpa/spi/JpaCompliance;
      29: putfield      #7                  // Field jpaCompliance:Lorg/hibernate/jpa/spi/JpaCompliance;
      32: aload_0
      33: aload_3
      34: putfield      #8                  // Field session:Lorg/hibernate/internal/AbstractSharedSessionContract;
      37: aload_3
      38: invokevirtual #9                  // Method org/hibernate/internal/AbstractSharedSessionContract.isOpen:()Z
      41: ifeq          66
      44: aload_1
      45: invokeinterface #10,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator.isActive:()Z
      50: ifeq          66
      53: aload_0
      54: aload_1
      55: invokeinterface #11,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator.getTransactionDriverControl:()Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      60: putfield      #12                 // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      63: goto          74
      66: getstatic     #13                 // Field LOG:Lorg/jboss/logging/Logger;
      69: ldc           #14                 // String TransactionImpl created on closed Session/EntityManager
      71: invokevirtual #15                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      74: getstatic     #13                 // Field LOG:Lorg/jboss/logging/Logger;
      77: invokevirtual #16                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
      80: ifeq          103
      83: getstatic     #13                 // Field LOG:Lorg/jboss/logging/Logger;
      86: ldc           #17                 // String On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == %s
      88: aload_0
      89: getfield      #7                  // Field jpaCompliance:Lorg/hibernate/jpa/spi/JpaCompliance;
      92: invokeinterface #18,  1           // InterfaceMethod org/hibernate/jpa/spi/JpaCompliance.isJpaTransactionComplianceEnabled:()Z
      97: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     100: invokevirtual #20                 // Method org/jboss/logging/Logger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     103: return

  public void begin();
    Code:
       0: aload_0
       1: getfield      #8                  // Field session:Lorg/hibernate/internal/AbstractSharedSessionContract;
       4: invokevirtual #9                  // Method org/hibernate/internal/AbstractSharedSessionContract.isOpen:()Z
       7: ifne          20
      10: new           #21                 // class java/lang/IllegalStateException
      13: dup
      14: ldc           #22                 // String Cannot begin Transaction on closed Session/EntityManager
      16: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #12                 // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      24: ifnonnull     40
      27: aload_0
      28: aload_0
      29: getfield      #2                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator;
      32: invokeinterface #11,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator.getTransactionDriverControl:()Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      37: putfield      #12                 // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      40: aload_0
      41: invokevirtual #24                 // Method isActive:()Z
      44: ifeq          87
      47: aload_0
      48: getfield      #7                  // Field jpaCompliance:Lorg/hibernate/jpa/spi/JpaCompliance;
      51: invokeinterface #18,  1           // InterfaceMethod org/hibernate/jpa/spi/JpaCompliance.isJpaTransactionComplianceEnabled:()Z
      56: ifne          76
      59: aload_0
      60: getfield      #2                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator;
      63: invokeinterface #25,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator.getTransactionCoordinatorBuilder:()Lorg/hibernate/resource/transaction/spi/TransactionCoordinatorBuilder;
      68: invokeinterface #26,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinatorBuilder.isJta:()Z
      73: ifne          86
      76: new           #21                 // class java/lang/IllegalStateException
      79: dup
      80: ldc           #27                 // String Transaction already active
      82: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      85: athrow
      86: return
      87: getstatic     #13                 // Field LOG:Lorg/jboss/logging/Logger;
      90: ldc           #28                 // String begin
      92: invokevirtual #15                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      95: aload_0
      96: getfield      #12                 // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      99: invokeinterface #29,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver.begin:()V
     104: return

  public void commit();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #30                 // Method isActive:(Z)Z
       5: ifne          18
       8: new           #21                 // class java/lang/IllegalStateException
      11: dup
      12: ldc           #31                 // String Transaction not successfully started
      14: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: getstatic     #13                 // Field LOG:Lorg/jboss/logging/Logger;
      21: ldc           #32                 // String committing
      23: invokevirtual #15                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      26: aload_0
      27: invokevirtual #33                 // Method internalGetTransactionDriverControl:()Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      30: invokeinterface #34,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver.commit:()V
      35: goto          50
      38: astore_1
      39: aload_0
      40: getfield      #3                  // Field exceptionConverter:Lorg/hibernate/engine/spi/ExceptionConverter;
      43: aload_1
      44: invokeinterface #36,  2           // InterfaceMethod org/hibernate/engine/spi/ExceptionConverter.convertCommitException:(Ljava/lang/RuntimeException;)Ljava/lang/RuntimeException;
      49: athrow
      50: return
    Exception table:
       from    to  target type
          26    35    38   Class java/lang/RuntimeException

  public org.hibernate.resource.transaction.spi.TransactionCoordinator$TransactionDriver internalGetTransactionDriverControl();
    Code:
       0: aload_0
       1: getfield      #12                 // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
       4: ifnonnull     17
       7: new           #21                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #37                 // String Transaction was not properly begun/started
      13: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #12                 // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      21: areturn

  public void rollback();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method isActive:()Z
       4: ifne          29
       7: aload_0
       8: getfield      #7                  // Field jpaCompliance:Lorg/hibernate/jpa/spi/JpaCompliance;
      11: invokeinterface #18,  1           // InterfaceMethod org/hibernate/jpa/spi/JpaCompliance.isJpaTransactionComplianceEnabled:()Z
      16: ifeq          29
      19: new           #21                 // class java/lang/IllegalStateException
      22: dup
      23: ldc           #38                 // String JPA compliance dictates throwing IllegalStateException when #rollback is called on non-active transaction
      25: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: invokevirtual #39                 // Method getStatus:()Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      33: astore_1
      34: aload_1
      35: getstatic     #40                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.ROLLED_BACK:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      38: if_acmpeq     48
      41: aload_1
      42: getstatic     #41                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.NOT_ACTIVE:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      45: if_acmpne     57
      48: getstatic     #13                 // Field LOG:Lorg/jboss/logging/Logger;
      51: ldc           #42                 // String rollback() called on an inactive transaction
      53: invokevirtual #15                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      56: return
      57: aload_1
      58: invokevirtual #43                 // Method org/hibernate/resource/transaction/spi/TransactionStatus.canRollback:()Z
      61: ifne          99
      64: new           #44                 // class org/hibernate/TransactionException
      67: dup
      68: new           #45                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #47                 // String Cannot rollback transaction in current status [
      77: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_1
      81: invokevirtual #49                 // Method org/hibernate/resource/transaction/spi/TransactionStatus.name:()Ljava/lang/String;
      84: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: ldc           #50                 // String ]
      89: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: invokespecial #52                 // Method org/hibernate/TransactionException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: getstatic     #13                 // Field LOG:Lorg/jboss/logging/Logger;
     102: ldc           #53                 // String rolling back
     104: invokevirtual #15                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     107: aload_1
     108: getstatic     #54                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.FAILED_COMMIT:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
     111: if_acmpne     121
     114: aload_0
     115: invokevirtual #55                 // Method allowFailedCommitToPhysicallyRollback:()Z
     118: ifeq          130
     121: aload_0
     122: invokevirtual #33                 // Method internalGetTransactionDriverControl:()Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
     125: invokeinterface #56,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver.rollback:()V
     130: return

  public boolean isActive();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #30                 // Method isActive:(Z)Z
       5: ireturn

  public boolean isActive(boolean);
    Code:
       0: aload_0
       1: getfield      #12                 // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
       4: ifnonnull     35
       7: aload_0
       8: getfield      #8                  // Field session:Lorg/hibernate/internal/AbstractSharedSessionContract;
      11: invokevirtual #9                  // Method org/hibernate/internal/AbstractSharedSessionContract.isOpen:()Z
      14: ifeq          33
      17: aload_0
      18: aload_0
      19: getfield      #2                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator;
      22: invokeinterface #11,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator.getTransactionDriverControl:()Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      27: putfield      #12                 // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      30: goto          35
      33: iconst_0
      34: ireturn
      35: aload_0
      36: getfield      #12                 // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      39: iload_1
      40: invokeinterface #57,  2           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver.isActive:(Z)Z
      45: ireturn

  public org.hibernate.resource.transaction.spi.TransactionStatus getStatus();
    Code:
       0: aload_0
       1: getfield      #12                 // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
       4: ifnonnull     37
       7: aload_0
       8: getfield      #8                  // Field session:Lorg/hibernate/internal/AbstractSharedSessionContract;
      11: invokevirtual #9                  // Method org/hibernate/internal/AbstractSharedSessionContract.isOpen:()Z
      14: ifeq          33
      17: aload_0
      18: aload_0
      19: getfield      #2                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator;
      22: invokeinterface #11,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator.getTransactionDriverControl:()Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      27: putfield      #12                 // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      30: goto          37
      33: getstatic     #41                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.NOT_ACTIVE:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      36: areturn
      37: aload_0
      38: getfield      #12                 // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      41: invokeinterface #58,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver.getStatus:()Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      46: areturn

  public void registerSynchronization(javax.transaction.Synchronization) throws org.hibernate.HibernateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator;
       4: invokeinterface #59,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator.getLocalSynchronizations:()Lorg/hibernate/resource/transaction/spi/SynchronizationRegistry;
       9: aload_1
      10: invokeinterface #60,  2           // InterfaceMethod org/hibernate/resource/transaction/spi/SynchronizationRegistry.registerSynchronization:(Ljavax/transaction/Synchronization;)V
      15: return

  public void setTimeout(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator;
       4: iload_1
       5: invokeinterface #61,  2           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator.setTimeOut:(I)V
      10: return

  public int getTimeout();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator;
       4: invokeinterface #62,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator.getTimeOut:()I
       9: ireturn

  public void markRollbackOnly();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method isActive:()Z
       4: ifeq          16
       7: aload_0
       8: invokevirtual #33                 // Method internalGetTransactionDriverControl:()Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      11: invokeinterface #63,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver.markRollbackOnly:()V
      16: return

  public void setRollbackOnly();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method isActive:()Z
       4: ifne          40
       7: aload_0
       8: getfield      #7                  // Field jpaCompliance:Lorg/hibernate/jpa/spi/JpaCompliance;
      11: invokeinterface #18,  1           // InterfaceMethod org/hibernate/jpa/spi/JpaCompliance.isJpaTransactionComplianceEnabled:()Z
      16: ifeq          29
      19: new           #21                 // class java/lang/IllegalStateException
      22: dup
      23: ldc           #64                 // String JPA compliance dictates throwing IllegalStateException when #setRollbackOnly is called on non-active transaction
      25: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: getstatic     #13                 // Field LOG:Lorg/jboss/logging/Logger;
      32: ldc           #65                 // String #setRollbackOnly called on a not-active transaction
      34: invokevirtual #15                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      37: goto          44
      40: aload_0
      41: invokevirtual #66                 // Method markRollbackOnly:()V
      44: return

  public boolean getRollbackOnly();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method isActive:()Z
       4: ifne          29
       7: aload_0
       8: getfield      #7                  // Field jpaCompliance:Lorg/hibernate/jpa/spi/JpaCompliance;
      11: invokeinterface #18,  1           // InterfaceMethod org/hibernate/jpa/spi/JpaCompliance.isJpaTransactionComplianceEnabled:()Z
      16: ifeq          29
      19: new           #21                 // class java/lang/IllegalStateException
      22: dup
      23: ldc           #67                 // String JPA compliance dictates throwing IllegalStateException when #getRollbackOnly is called on non-active transaction
      25: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: invokevirtual #39                 // Method getStatus:()Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      33: getstatic     #68                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.MARKED_ROLLBACK:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      36: if_acmpne     43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  protected boolean allowFailedCommitToPhysicallyRollback();
    Code:
       0: iconst_0
       1: ireturn

  static {};
    Code:
       0: ldc           #69                 // class org/hibernate/engine/transaction/internal/TransactionImpl
       2: invokestatic  #70                 // Method org/hibernate/internal/CoreLogging.logger:(Ljava/lang/Class;)Lorg/jboss/logging/Logger;
       5: putstatic     #13                 // Field LOG:Lorg/jboss/logging/Logger;
       8: return
}
