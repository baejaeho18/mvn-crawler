Compiled from "SessionImplementor.java"
public interface org.hibernate.engine.spi.SessionImplementor extends org.hibernate.Session,org.hibernate.engine.spi.SharedSessionContractImplementor,org.hibernate.jpa.spi.HibernateEntityManagerImplementor {
  public abstract org.hibernate.engine.spi.SessionFactoryImplementor getSessionFactory();

  public abstract boolean isFlushBeforeCompletionEnabled();

  public abstract org.hibernate.engine.spi.ActionQueue getActionQueue();

  public abstract java.lang.Object instantiate(org.hibernate.persister.entity.EntityPersister, java.io.Serializable) throws org.hibernate.HibernateException;

  public abstract void forceFlush(org.hibernate.engine.spi.EntityEntry) throws org.hibernate.HibernateException;

  public abstract org.hibernate.query.spi.QueryImplementor createQuery(java.lang.String);

  public abstract <T> org.hibernate.query.spi.QueryImplementor<T> createQuery(java.lang.String, java.lang.Class<T>);

  public abstract <T> org.hibernate.query.spi.QueryImplementor<T> createNamedQuery(java.lang.String, java.lang.Class<T>);

  public abstract org.hibernate.query.spi.QueryImplementor createNamedQuery(java.lang.String);

  public abstract org.hibernate.query.spi.NativeQueryImplementor createNativeQuery(java.lang.String);

  public abstract org.hibernate.query.spi.NativeQueryImplementor createNativeQuery(java.lang.String, java.lang.Class);

  public abstract org.hibernate.query.spi.NativeQueryImplementor createNativeQuery(java.lang.String, java.lang.String);

  public abstract org.hibernate.query.spi.NativeQueryImplementor createSQLQuery(java.lang.String);

  public abstract org.hibernate.query.spi.NativeQueryImplementor getNamedNativeQuery(java.lang.String);

  public abstract org.hibernate.query.spi.QueryImplementor getNamedQuery(java.lang.String);

  public abstract org.hibernate.query.spi.NativeQueryImplementor getNamedSQLQuery(java.lang.String);

  public abstract <T> org.hibernate.query.spi.QueryImplementor<T> createQuery(javax.persistence.criteria.CriteriaQuery<T>);

  public abstract org.hibernate.query.spi.QueryImplementor createQuery(javax.persistence.criteria.CriteriaUpdate);

  public abstract org.hibernate.query.spi.QueryImplementor createQuery(javax.persistence.criteria.CriteriaDelete);

  public abstract <T> org.hibernate.query.spi.QueryImplementor<T> createQuery(java.lang.String, java.lang.Class<T>, javax.persistence.criteria.Selection, org.hibernate.jpa.spi.HibernateEntityManagerImplementor$QueryOptions);

  public abstract void merge(java.lang.String, java.lang.Object, java.util.Map) throws org.hibernate.HibernateException;

  public abstract void persist(java.lang.String, java.lang.Object, java.util.Map) throws org.hibernate.HibernateException;

  public abstract void persistOnFlush(java.lang.String, java.lang.Object, java.util.Map);

  public abstract void refresh(java.lang.String, java.lang.Object, java.util.Map) throws org.hibernate.HibernateException;

  public abstract void delete(java.lang.String, java.lang.Object, boolean, java.util.Set);

  public abstract void removeOrphanBeforeUpdates(java.lang.String, java.lang.Object);

  public default org.hibernate.query.NativeQuery createSQLQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1,  2            // InterfaceMethod createSQLQuery:(Ljava/lang/String;)Lorg/hibernate/query/spi/NativeQueryImplementor;
       7: areturn

  public default org.hibernate.query.Query createNamedQuery(java.lang.String, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #2,  3            // InterfaceMethod createNamedQuery:(Ljava/lang/String;Ljava/lang/Class;)Lorg/hibernate/query/spi/QueryImplementor;
       8: areturn

  public default org.hibernate.query.Query createQuery(javax.persistence.criteria.CriteriaDelete);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #3,  2            // InterfaceMethod createQuery:(Ljavax/persistence/criteria/CriteriaDelete;)Lorg/hibernate/query/spi/QueryImplementor;
       7: areturn

  public default org.hibernate.query.Query createQuery(javax.persistence.criteria.CriteriaUpdate);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #4,  2            // InterfaceMethod createQuery:(Ljavax/persistence/criteria/CriteriaUpdate;)Lorg/hibernate/query/spi/QueryImplementor;
       7: areturn

  public default org.hibernate.query.Query createQuery(javax.persistence.criteria.CriteriaQuery);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #5,  2            // InterfaceMethod createQuery:(Ljavax/persistence/criteria/CriteriaQuery;)Lorg/hibernate/query/spi/QueryImplementor;
       7: areturn

  public default org.hibernate.query.Query createQuery(java.lang.String, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #6,  3            // InterfaceMethod createQuery:(Ljava/lang/String;Ljava/lang/Class;)Lorg/hibernate/query/spi/QueryImplementor;
       8: areturn

  public default org.hibernate.SessionFactory getSessionFactory();
    Code:
       0: aload_0
       1: invokeinterface #7,  1            // InterfaceMethod getSessionFactory:()Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       6: areturn

  public default org.hibernate.query.Query getNamedQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #8,  2            // InterfaceMethod getNamedQuery:(Ljava/lang/String;)Lorg/hibernate/query/spi/QueryImplementor;
       7: areturn

  public default org.hibernate.query.Query createQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #9,  2            // InterfaceMethod createQuery:(Ljava/lang/String;)Lorg/hibernate/query/spi/QueryImplementor;
       7: areturn

  public default org.hibernate.query.NativeQuery getNamedNativeQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #10,  2           // InterfaceMethod getNamedNativeQuery:(Ljava/lang/String;)Lorg/hibernate/query/spi/NativeQueryImplementor;
       7: areturn

  public default org.hibernate.Query getNamedSQLQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #11,  2           // InterfaceMethod getNamedSQLQuery:(Ljava/lang/String;)Lorg/hibernate/query/spi/NativeQueryImplementor;
       7: areturn

  public default org.hibernate.query.NativeQuery createNativeQuery(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #12,  3           // InterfaceMethod createNativeQuery:(Ljava/lang/String;Ljava/lang/String;)Lorg/hibernate/query/spi/NativeQueryImplementor;
       8: areturn

  public default org.hibernate.query.NativeQuery createNativeQuery(java.lang.String, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #13,  3           // InterfaceMethod createNativeQuery:(Ljava/lang/String;Ljava/lang/Class;)Lorg/hibernate/query/spi/NativeQueryImplementor;
       8: areturn

  public default org.hibernate.query.NativeQuery createNativeQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #14,  2           // InterfaceMethod createNativeQuery:(Ljava/lang/String;)Lorg/hibernate/query/spi/NativeQueryImplementor;
       7: areturn

  public default org.hibernate.SQLQuery createSQLQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1,  2            // InterfaceMethod createSQLQuery:(Ljava/lang/String;)Lorg/hibernate/query/spi/NativeQueryImplementor;
       7: areturn

  public default org.hibernate.query.Query createNamedQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #15,  2           // InterfaceMethod createNamedQuery:(Ljava/lang/String;)Lorg/hibernate/query/spi/QueryImplementor;
       7: areturn

  public default org.hibernate.Query createQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #9,  2            // InterfaceMethod createQuery:(Ljava/lang/String;)Lorg/hibernate/query/spi/QueryImplementor;
       7: areturn

  public default org.hibernate.Query getNamedQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #8,  2            // InterfaceMethod getNamedQuery:(Ljava/lang/String;)Lorg/hibernate/query/spi/QueryImplementor;
       7: areturn

  public default javax.persistence.Query createNativeQuery(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #12,  3           // InterfaceMethod createNativeQuery:(Ljava/lang/String;Ljava/lang/String;)Lorg/hibernate/query/spi/NativeQueryImplementor;
       8: areturn

  public default javax.persistence.Query createNativeQuery(java.lang.String, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #13,  3           // InterfaceMethod createNativeQuery:(Ljava/lang/String;Ljava/lang/Class;)Lorg/hibernate/query/spi/NativeQueryImplementor;
       8: areturn

  public default javax.persistence.Query createNativeQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #14,  2           // InterfaceMethod createNativeQuery:(Ljava/lang/String;)Lorg/hibernate/query/spi/NativeQueryImplementor;
       7: areturn

  public default javax.persistence.TypedQuery createNamedQuery(java.lang.String, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #2,  3            // InterfaceMethod createNamedQuery:(Ljava/lang/String;Ljava/lang/Class;)Lorg/hibernate/query/spi/QueryImplementor;
       8: areturn

  public default javax.persistence.Query createNamedQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #15,  2           // InterfaceMethod createNamedQuery:(Ljava/lang/String;)Lorg/hibernate/query/spi/QueryImplementor;
       7: areturn

  public default javax.persistence.TypedQuery createQuery(java.lang.String, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #6,  3            // InterfaceMethod createQuery:(Ljava/lang/String;Ljava/lang/Class;)Lorg/hibernate/query/spi/QueryImplementor;
       8: areturn

  public default javax.persistence.Query createQuery(javax.persistence.criteria.CriteriaDelete);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #3,  2            // InterfaceMethod createQuery:(Ljavax/persistence/criteria/CriteriaDelete;)Lorg/hibernate/query/spi/QueryImplementor;
       7: areturn

  public default javax.persistence.Query createQuery(javax.persistence.criteria.CriteriaUpdate);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #4,  2            // InterfaceMethod createQuery:(Ljavax/persistence/criteria/CriteriaUpdate;)Lorg/hibernate/query/spi/QueryImplementor;
       7: areturn

  public default javax.persistence.TypedQuery createQuery(javax.persistence.criteria.CriteriaQuery);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #5,  2            // InterfaceMethod createQuery:(Ljavax/persistence/criteria/CriteriaQuery;)Lorg/hibernate/query/spi/QueryImplementor;
       7: areturn

  public default javax.persistence.Query createQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #9,  2            // InterfaceMethod createQuery:(Ljava/lang/String;)Lorg/hibernate/query/spi/QueryImplementor;
       7: areturn

  public default org.hibernate.query.Query createQuery(java.lang.String, java.lang.Class, javax.persistence.criteria.Selection, org.hibernate.jpa.spi.HibernateEntityManagerImplementor$QueryOptions);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokeinterface #16,  5           // InterfaceMethod createQuery:(Ljava/lang/String;Ljava/lang/Class;Ljavax/persistence/criteria/Selection;Lorg/hibernate/jpa/spi/HibernateEntityManagerImplementor$QueryOptions;)Lorg/hibernate/query/spi/QueryImplementor;
      11: areturn
}
