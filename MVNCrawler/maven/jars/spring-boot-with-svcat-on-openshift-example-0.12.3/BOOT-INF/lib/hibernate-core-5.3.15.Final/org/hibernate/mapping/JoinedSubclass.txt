Compiled from "JoinedSubclass.java"
public class org.hibernate.mapping.JoinedSubclass extends org.hibernate.mapping.Subclass implements org.hibernate.mapping.TableOwner {
  private org.hibernate.mapping.Table table;

  private org.hibernate.mapping.KeyValue key;

  public org.hibernate.mapping.JoinedSubclass(org.hibernate.mapping.PersistentClass, org.hibernate.boot.spi.MetadataBuildingContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/hibernate/mapping/Subclass."<init>":(Lorg/hibernate/mapping/PersistentClass;Lorg/hibernate/boot/spi/MetadataBuildingContext;)V
       6: return

  public org.hibernate.mapping.Table getTable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field table:Lorg/hibernate/mapping/Table;
       4: areturn

  public void setTable(org.hibernate.mapping.Table);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field table:Lorg/hibernate/mapping/Table;
       5: aload_0
       6: invokevirtual #3                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       9: aload_1
      10: invokevirtual #4                  // Method org/hibernate/mapping/PersistentClass.addSubclassTable:(Lorg/hibernate/mapping/Table;)V
      13: return

  public org.hibernate.mapping.KeyValue getKey();
    Code:
       0: aload_0
       1: getfield      #5                  // Field key:Lorg/hibernate/mapping/KeyValue;
       4: areturn

  public void setKey(org.hibernate.mapping.KeyValue);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field key:Lorg/hibernate/mapping/KeyValue;
       5: return

  public void validate(org.hibernate.engine.spi.Mapping) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/hibernate/mapping/Subclass.validate:(Lorg/hibernate/engine/spi/Mapping;)V
       5: aload_0
       6: getfield      #5                  // Field key:Lorg/hibernate/mapping/KeyValue;
       9: ifnull        77
      12: aload_0
      13: getfield      #5                  // Field key:Lorg/hibernate/mapping/KeyValue;
      16: aload_1
      17: invokeinterface #7,  2            // InterfaceMethod org/hibernate/mapping/KeyValue.isValid:(Lorg/hibernate/engine/spi/Mapping;)Z
      22: ifne          77
      25: new           #8                  // class org/hibernate/MappingException
      28: dup
      29: new           #9                  // class java/lang/StringBuilder
      32: dup
      33: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #11                 // String subclass key mapping has wrong number of columns:
      38: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: invokevirtual #13                 // Method getEntityName:()Ljava/lang/String;
      45: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #14                 // String  type:
      50: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #5                  // Field key:Lorg/hibernate/mapping/KeyValue;
      57: invokeinterface #15,  1           // InterfaceMethod org/hibernate/mapping/KeyValue.getType:()Lorg/hibernate/type/Type;
      62: invokeinterface #16,  1           // InterfaceMethod org/hibernate/type/Type.getName:()Ljava/lang/String;
      67: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokespecial #18                 // Method org/hibernate/MappingException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: return

  public java.util.Iterator getReferenceablePropertyIterator();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getPropertyIterator:()Ljava/util/Iterator;
       4: areturn

  public java.lang.Object accept(org.hibernate.mapping.PersistentClassVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #20,  2           // InterfaceMethod org/hibernate/mapping/PersistentClassVisitor.accept:(Lorg/hibernate/mapping/JoinedSubclass;)Ljava/lang/Object;
       7: areturn
}
