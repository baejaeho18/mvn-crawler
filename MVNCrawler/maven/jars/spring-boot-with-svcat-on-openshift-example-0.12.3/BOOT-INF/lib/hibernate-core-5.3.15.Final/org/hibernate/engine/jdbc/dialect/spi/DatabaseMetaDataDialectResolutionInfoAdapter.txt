Compiled from "DatabaseMetaDataDialectResolutionInfoAdapter.java"
public class org.hibernate.engine.jdbc.dialect.spi.DatabaseMetaDataDialectResolutionInfoAdapter implements org.hibernate.engine.jdbc.dialect.spi.DialectResolutionInfo {
  private final java.sql.DatabaseMetaData databaseMetaData;

  public org.hibernate.engine.jdbc.dialect.spi.DatabaseMetaDataDialectResolutionInfoAdapter(java.sql.DatabaseMetaData);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field databaseMetaData:Ljava/sql/DatabaseMetaData;
       9: return

  public java.lang.String getDatabaseName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field databaseMetaData:Ljava/sql/DatabaseMetaData;
       4: invokeinterface #3,  1            // InterfaceMethod java/sql/DatabaseMetaData.getDatabaseProductName:()Ljava/lang/String;
       9: areturn
      10: astore_1
      11: getstatic     #5                  // Field org/hibernate/engine/jdbc/dialect/spi/BasicSQLExceptionConverter.INSTANCE:Lorg/hibernate/engine/jdbc/dialect/spi/BasicSQLExceptionConverter;
      14: aload_1
      15: invokevirtual #6                  // Method org/hibernate/engine/jdbc/dialect/spi/BasicSQLExceptionConverter.convert:(Ljava/sql/SQLException;)Lorg/hibernate/JDBCException;
      18: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/sql/SQLException

  public int getDatabaseMajorVersion();
    Code:
       0: aload_0
       1: getfield      #2                  // Field databaseMetaData:Ljava/sql/DatabaseMetaData;
       4: invokeinterface #7,  1            // InterfaceMethod java/sql/DatabaseMetaData.getDatabaseMajorVersion:()I
       9: invokestatic  #8                  // Method interpretVersion:(I)I
      12: ireturn
      13: astore_1
      14: getstatic     #5                  // Field org/hibernate/engine/jdbc/dialect/spi/BasicSQLExceptionConverter.INSTANCE:Lorg/hibernate/engine/jdbc/dialect/spi/BasicSQLExceptionConverter;
      17: aload_1
      18: invokevirtual #6                  // Method org/hibernate/engine/jdbc/dialect/spi/BasicSQLExceptionConverter.convert:(Ljava/sql/SQLException;)Lorg/hibernate/JDBCException;
      21: athrow
    Exception table:
       from    to  target type
           0    12    13   Class java/sql/SQLException

  private static int interpretVersion(int);
    Code:
       0: iload_0
       1: ifge          10
       4: sipush        -9999
       7: goto          11
      10: iload_0
      11: ireturn

  public int getDatabaseMinorVersion();
    Code:
       0: aload_0
       1: getfield      #2                  // Field databaseMetaData:Ljava/sql/DatabaseMetaData;
       4: invokeinterface #10,  1           // InterfaceMethod java/sql/DatabaseMetaData.getDatabaseMinorVersion:()I
       9: invokestatic  #8                  // Method interpretVersion:(I)I
      12: ireturn
      13: astore_1
      14: getstatic     #5                  // Field org/hibernate/engine/jdbc/dialect/spi/BasicSQLExceptionConverter.INSTANCE:Lorg/hibernate/engine/jdbc/dialect/spi/BasicSQLExceptionConverter;
      17: aload_1
      18: invokevirtual #6                  // Method org/hibernate/engine/jdbc/dialect/spi/BasicSQLExceptionConverter.convert:(Ljava/sql/SQLException;)Lorg/hibernate/JDBCException;
      21: athrow
    Exception table:
       from    to  target type
           0    12    13   Class java/sql/SQLException

  public java.lang.String getDriverName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field databaseMetaData:Ljava/sql/DatabaseMetaData;
       4: invokeinterface #11,  1           // InterfaceMethod java/sql/DatabaseMetaData.getDriverName:()Ljava/lang/String;
       9: areturn
      10: astore_1
      11: getstatic     #5                  // Field org/hibernate/engine/jdbc/dialect/spi/BasicSQLExceptionConverter.INSTANCE:Lorg/hibernate/engine/jdbc/dialect/spi/BasicSQLExceptionConverter;
      14: aload_1
      15: invokevirtual #6                  // Method org/hibernate/engine/jdbc/dialect/spi/BasicSQLExceptionConverter.convert:(Ljava/sql/SQLException;)Lorg/hibernate/JDBCException;
      18: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/sql/SQLException

  public int getDriverMajorVersion();
    Code:
       0: aload_0
       1: getfield      #2                  // Field databaseMetaData:Ljava/sql/DatabaseMetaData;
       4: invokeinterface #12,  1           // InterfaceMethod java/sql/DatabaseMetaData.getDriverMajorVersion:()I
       9: invokestatic  #8                  // Method interpretVersion:(I)I
      12: ireturn

  public int getDriverMinorVersion();
    Code:
       0: aload_0
       1: getfield      #2                  // Field databaseMetaData:Ljava/sql/DatabaseMetaData;
       4: invokeinterface #13,  1           // InterfaceMethod java/sql/DatabaseMetaData.getDriverMinorVersion:()I
       9: invokestatic  #8                  // Method interpretVersion:(I)I
      12: ireturn
}
