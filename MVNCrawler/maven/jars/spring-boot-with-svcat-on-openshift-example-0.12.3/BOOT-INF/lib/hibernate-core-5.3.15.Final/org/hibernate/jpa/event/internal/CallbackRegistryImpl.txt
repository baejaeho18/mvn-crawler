Compiled from "CallbackRegistryImpl.java"
public class org.hibernate.jpa.event.internal.CallbackRegistryImpl implements org.hibernate.jpa.event.spi.CallbackRegistry,org.hibernate.jpa.event.spi.CallbackBuilder$CallbackRegistrar {
  private java.util.HashMap<java.lang.Class, org.hibernate.jpa.event.spi.Callback[]> preCreates;

  private java.util.HashMap<java.lang.Class, org.hibernate.jpa.event.spi.Callback[]> postCreates;

  private java.util.HashMap<java.lang.Class, org.hibernate.jpa.event.spi.Callback[]> preRemoves;

  private java.util.HashMap<java.lang.Class, org.hibernate.jpa.event.spi.Callback[]> postRemoves;

  private java.util.HashMap<java.lang.Class, org.hibernate.jpa.event.spi.Callback[]> preUpdates;

  private java.util.HashMap<java.lang.Class, org.hibernate.jpa.event.spi.Callback[]> postUpdates;

  private java.util.HashMap<java.lang.Class, org.hibernate.jpa.event.spi.Callback[]> postLoads;

  public org.hibernate.jpa.event.internal.CallbackRegistryImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field preCreates:Ljava/util/HashMap;
      15: aload_0
      16: new           #2                  // class java/util/HashMap
      19: dup
      20: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      23: putfield      #5                  // Field postCreates:Ljava/util/HashMap;
      26: aload_0
      27: new           #2                  // class java/util/HashMap
      30: dup
      31: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      34: putfield      #6                  // Field preRemoves:Ljava/util/HashMap;
      37: aload_0
      38: new           #2                  // class java/util/HashMap
      41: dup
      42: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      45: putfield      #7                  // Field postRemoves:Ljava/util/HashMap;
      48: aload_0
      49: new           #2                  // class java/util/HashMap
      52: dup
      53: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      56: putfield      #8                  // Field preUpdates:Ljava/util/HashMap;
      59: aload_0
      60: new           #2                  // class java/util/HashMap
      63: dup
      64: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      67: putfield      #9                  // Field postUpdates:Ljava/util/HashMap;
      70: aload_0
      71: new           #2                  // class java/util/HashMap
      74: dup
      75: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      78: putfield      #10                 // Field postLoads:Ljava/util/HashMap;
      81: return

  public boolean hasRegisteredCallbacks(java.lang.Class, org.hibernate.jpa.event.spi.CallbackType);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #11                 // Method determineAppropriateCallbackMap:(Lorg/hibernate/jpa/event/spi/CallbackType;)Ljava/util/HashMap;
       5: astore_3
       6: aload_0
       7: aload_3
       8: aload_1
       9: invokevirtual #12                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #13                 // class "[Lorg/hibernate/jpa/event/spi/Callback;"
      15: invokespecial #14                 // Method notEmpty:([Lorg/hibernate/jpa/event/spi/Callback;)Z
      18: ireturn

  public void registerCallbacks(java.lang.Class, org.hibernate.jpa.event.spi.Callback[]);
    Code:
       0: aload_2
       1: ifnull        9
       4: aload_2
       5: arraylength
       6: ifne          10
       9: return
      10: aload_0
      11: aload_2
      12: iconst_0
      13: aaload
      14: invokeinterface #15,  1           // InterfaceMethod org/hibernate/jpa/event/spi/Callback.getCallbackType:()Lorg/hibernate/jpa/event/spi/CallbackType;
      19: invokespecial #11                 // Method determineAppropriateCallbackMap:(Lorg/hibernate/jpa/event/spi/CallbackType;)Ljava/util/HashMap;
      22: astore_3
      23: aload_3
      24: aload_1
      25: invokevirtual #12                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #13                 // class "[Lorg/hibernate/jpa/event/spi/Callback;"
      31: astore        4
      33: aload         4
      35: ifnull        48
      38: aload         4
      40: aload_2
      41: invokestatic  #16                 // Method org/hibernate/internal/util/collections/ArrayHelper.join:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
      44: checkcast     #13                 // class "[Lorg/hibernate/jpa/event/spi/Callback;"
      47: astore_2
      48: aload_3
      49: aload_1
      50: aload_2
      51: invokevirtual #17                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: return

  public void preCreate(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field preCreates:Ljava/util/HashMap;
       5: aload_1
       6: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #12                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #13                 // class "[Lorg/hibernate/jpa/event/spi/Callback;"
      15: aload_1
      16: invokespecial #19                 // Method callback:([Lorg/hibernate/jpa/event/spi/Callback;Ljava/lang/Object;)Z
      19: pop
      20: return

  private boolean notEmpty(org.hibernate.jpa.event.spi.Callback[]);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: arraylength
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public void postCreate(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field postCreates:Ljava/util/HashMap;
       5: aload_1
       6: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #12                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #13                 // class "[Lorg/hibernate/jpa/event/spi/Callback;"
      15: aload_1
      16: invokespecial #19                 // Method callback:([Lorg/hibernate/jpa/event/spi/Callback;Ljava/lang/Object;)Z
      19: pop
      20: return

  public boolean preUpdate(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field preUpdates:Ljava/util/HashMap;
       5: aload_1
       6: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #12                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #13                 // class "[Lorg/hibernate/jpa/event/spi/Callback;"
      15: aload_1
      16: invokespecial #19                 // Method callback:([Lorg/hibernate/jpa/event/spi/Callback;Ljava/lang/Object;)Z
      19: ireturn

  public void postUpdate(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field postUpdates:Ljava/util/HashMap;
       5: aload_1
       6: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #12                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #13                 // class "[Lorg/hibernate/jpa/event/spi/Callback;"
      15: aload_1
      16: invokespecial #19                 // Method callback:([Lorg/hibernate/jpa/event/spi/Callback;Ljava/lang/Object;)Z
      19: pop
      20: return

  public void preRemove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field preRemoves:Ljava/util/HashMap;
       5: aload_1
       6: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #12                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #13                 // class "[Lorg/hibernate/jpa/event/spi/Callback;"
      15: aload_1
      16: invokespecial #19                 // Method callback:([Lorg/hibernate/jpa/event/spi/Callback;Ljava/lang/Object;)Z
      19: pop
      20: return

  public void postRemove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field postRemoves:Ljava/util/HashMap;
       5: aload_1
       6: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #12                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #13                 // class "[Lorg/hibernate/jpa/event/spi/Callback;"
      15: aload_1
      16: invokespecial #19                 // Method callback:([Lorg/hibernate/jpa/event/spi/Callback;Ljava/lang/Object;)Z
      19: pop
      20: return

  public boolean postLoad(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field postLoads:Ljava/util/HashMap;
       5: aload_1
       6: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #12                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #13                 // class "[Lorg/hibernate/jpa/event/spi/Callback;"
      15: aload_1
      16: invokespecial #19                 // Method callback:([Lorg/hibernate/jpa/event/spi/Callback;Ljava/lang/Object;)Z
      19: ireturn

  private boolean callback(org.hibernate.jpa.event.spi.Callback[], java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        48
       4: aload_1
       5: arraylength
       6: ifeq          48
       9: aload_1
      10: astore_3
      11: aload_3
      12: arraylength
      13: istore        4
      15: iconst_0
      16: istore        5
      18: iload         5
      20: iload         4
      22: if_icmpge     46
      25: aload_3
      26: iload         5
      28: aaload
      29: astore        6
      31: aload         6
      33: aload_2
      34: invokeinterface #20,  2           // InterfaceMethod org/hibernate/jpa/event/spi/Callback.performCallback:(Ljava/lang/Object;)Z
      39: pop
      40: iinc          5, 1
      43: goto          18
      46: iconst_1
      47: ireturn
      48: iconst_0
      49: ireturn

  private java.util.HashMap<java.lang.Class, org.hibernate.jpa.event.spi.Callback[]> determineAppropriateCallbackMap(org.hibernate.jpa.event.spi.CallbackType);
    Code:
       0: aload_1
       1: getstatic     #21                 // Field org/hibernate/jpa/event/spi/CallbackType.PRE_PERSIST:Lorg/hibernate/jpa/event/spi/CallbackType;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #4                  // Field preCreates:Ljava/util/HashMap;
      11: areturn
      12: aload_1
      13: getstatic     #22                 // Field org/hibernate/jpa/event/spi/CallbackType.POST_PERSIST:Lorg/hibernate/jpa/event/spi/CallbackType;
      16: if_acmpne     24
      19: aload_0
      20: getfield      #5                  // Field postCreates:Ljava/util/HashMap;
      23: areturn
      24: aload_1
      25: getstatic     #23                 // Field org/hibernate/jpa/event/spi/CallbackType.PRE_REMOVE:Lorg/hibernate/jpa/event/spi/CallbackType;
      28: if_acmpne     36
      31: aload_0
      32: getfield      #6                  // Field preRemoves:Ljava/util/HashMap;
      35: areturn
      36: aload_1
      37: getstatic     #24                 // Field org/hibernate/jpa/event/spi/CallbackType.POST_REMOVE:Lorg/hibernate/jpa/event/spi/CallbackType;
      40: if_acmpne     48
      43: aload_0
      44: getfield      #7                  // Field postRemoves:Ljava/util/HashMap;
      47: areturn
      48: aload_1
      49: getstatic     #25                 // Field org/hibernate/jpa/event/spi/CallbackType.PRE_UPDATE:Lorg/hibernate/jpa/event/spi/CallbackType;
      52: if_acmpne     60
      55: aload_0
      56: getfield      #8                  // Field preUpdates:Ljava/util/HashMap;
      59: areturn
      60: aload_1
      61: getstatic     #26                 // Field org/hibernate/jpa/event/spi/CallbackType.POST_UPDATE:Lorg/hibernate/jpa/event/spi/CallbackType;
      64: if_acmpne     72
      67: aload_0
      68: getfield      #9                  // Field postUpdates:Ljava/util/HashMap;
      71: areturn
      72: aload_1
      73: getstatic     #27                 // Field org/hibernate/jpa/event/spi/CallbackType.POST_LOAD:Lorg/hibernate/jpa/event/spi/CallbackType;
      76: if_acmpne     84
      79: aload_0
      80: getfield      #10                 // Field postLoads:Ljava/util/HashMap;
      83: areturn
      84: new           #28                 // class javax/persistence/PersistenceException
      87: dup
      88: new           #29                 // class java/lang/StringBuilder
      91: dup
      92: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      95: ldc           #31                 // String Unrecognized JPA callback type [
      97: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: aload_1
     101: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     104: ldc           #34                 // String ]
     106: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: invokespecial #36                 // Method javax/persistence/PersistenceException."<init>":(Ljava/lang/String;)V
     115: athrow

  public void release();
    Code:
       0: aload_0
       1: getfield      #4                  // Field preCreates:Ljava/util/HashMap;
       4: invokevirtual #37                 // Method java/util/HashMap.clear:()V
       7: aload_0
       8: getfield      #5                  // Field postCreates:Ljava/util/HashMap;
      11: invokevirtual #37                 // Method java/util/HashMap.clear:()V
      14: aload_0
      15: getfield      #6                  // Field preRemoves:Ljava/util/HashMap;
      18: invokevirtual #37                 // Method java/util/HashMap.clear:()V
      21: aload_0
      22: getfield      #7                  // Field postRemoves:Ljava/util/HashMap;
      25: invokevirtual #37                 // Method java/util/HashMap.clear:()V
      28: aload_0
      29: getfield      #8                  // Field preUpdates:Ljava/util/HashMap;
      32: invokevirtual #37                 // Method java/util/HashMap.clear:()V
      35: aload_0
      36: getfield      #9                  // Field postUpdates:Ljava/util/HashMap;
      39: invokevirtual #37                 // Method java/util/HashMap.clear:()V
      42: aload_0
      43: getfield      #10                 // Field postLoads:Ljava/util/HashMap;
      46: invokevirtual #37                 // Method java/util/HashMap.clear:()V
      49: return

  public boolean hasPostCreateCallbacks(java.lang.Class);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field preCreates:Ljava/util/HashMap;
       5: aload_1
       6: invokevirtual #12                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #13                 // class "[Lorg/hibernate/jpa/event/spi/Callback;"
      12: invokespecial #14                 // Method notEmpty:([Lorg/hibernate/jpa/event/spi/Callback;)Z
      15: ireturn

  public boolean hasPostUpdateCallbacks(java.lang.Class);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field postUpdates:Ljava/util/HashMap;
       5: aload_1
       6: invokevirtual #12                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #13                 // class "[Lorg/hibernate/jpa/event/spi/Callback;"
      12: invokespecial #14                 // Method notEmpty:([Lorg/hibernate/jpa/event/spi/Callback;)Z
      15: ireturn

  public boolean hasPostRemoveCallbacks(java.lang.Class);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field postRemoves:Ljava/util/HashMap;
       5: aload_1
       6: invokevirtual #12                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #13                 // class "[Lorg/hibernate/jpa/event/spi/Callback;"
      12: invokespecial #14                 // Method notEmpty:([Lorg/hibernate/jpa/event/spi/Callback;)Z
      15: ireturn

  public boolean hasRegisteredCallbacks(java.lang.Class, java.lang.Class);
    Code:
       0: aload_0
       1: aload_0
       2: aload_2
       3: invokespecial #38                 // Method toCallbackType:(Ljava/lang/Class;)Lorg/hibernate/jpa/event/spi/CallbackType;
       6: invokespecial #11                 // Method determineAppropriateCallbackMap:(Lorg/hibernate/jpa/event/spi/CallbackType;)Ljava/util/HashMap;
       9: astore_3
      10: aload_3
      11: ifnull        26
      14: aload_3
      15: aload_1
      16: invokevirtual #39                 // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  private org.hibernate.jpa.event.spi.CallbackType toCallbackType(java.lang.Class);
    Code:
       0: aload_1
       1: getstatic     #27                 // Field org/hibernate/jpa/event/spi/CallbackType.POST_LOAD:Lorg/hibernate/jpa/event/spi/CallbackType;
       4: invokevirtual #40                 // Method org/hibernate/jpa/event/spi/CallbackType.getCallbackAnnotation:()Ljava/lang/Class;
       7: if_acmpne     14
      10: getstatic     #27                 // Field org/hibernate/jpa/event/spi/CallbackType.POST_LOAD:Lorg/hibernate/jpa/event/spi/CallbackType;
      13: areturn
      14: aload_1
      15: getstatic     #21                 // Field org/hibernate/jpa/event/spi/CallbackType.PRE_PERSIST:Lorg/hibernate/jpa/event/spi/CallbackType;
      18: invokevirtual #40                 // Method org/hibernate/jpa/event/spi/CallbackType.getCallbackAnnotation:()Ljava/lang/Class;
      21: if_acmpne     28
      24: getstatic     #21                 // Field org/hibernate/jpa/event/spi/CallbackType.PRE_PERSIST:Lorg/hibernate/jpa/event/spi/CallbackType;
      27: areturn
      28: aload_1
      29: getstatic     #22                 // Field org/hibernate/jpa/event/spi/CallbackType.POST_PERSIST:Lorg/hibernate/jpa/event/spi/CallbackType;
      32: invokevirtual #40                 // Method org/hibernate/jpa/event/spi/CallbackType.getCallbackAnnotation:()Ljava/lang/Class;
      35: if_acmpne     42
      38: getstatic     #22                 // Field org/hibernate/jpa/event/spi/CallbackType.POST_PERSIST:Lorg/hibernate/jpa/event/spi/CallbackType;
      41: areturn
      42: aload_1
      43: getstatic     #25                 // Field org/hibernate/jpa/event/spi/CallbackType.PRE_UPDATE:Lorg/hibernate/jpa/event/spi/CallbackType;
      46: invokevirtual #40                 // Method org/hibernate/jpa/event/spi/CallbackType.getCallbackAnnotation:()Ljava/lang/Class;
      49: if_acmpne     56
      52: getstatic     #25                 // Field org/hibernate/jpa/event/spi/CallbackType.PRE_UPDATE:Lorg/hibernate/jpa/event/spi/CallbackType;
      55: areturn
      56: aload_1
      57: getstatic     #26                 // Field org/hibernate/jpa/event/spi/CallbackType.POST_UPDATE:Lorg/hibernate/jpa/event/spi/CallbackType;
      60: invokevirtual #40                 // Method org/hibernate/jpa/event/spi/CallbackType.getCallbackAnnotation:()Ljava/lang/Class;
      63: if_acmpne     70
      66: getstatic     #26                 // Field org/hibernate/jpa/event/spi/CallbackType.POST_UPDATE:Lorg/hibernate/jpa/event/spi/CallbackType;
      69: areturn
      70: aload_1
      71: getstatic     #23                 // Field org/hibernate/jpa/event/spi/CallbackType.PRE_REMOVE:Lorg/hibernate/jpa/event/spi/CallbackType;
      74: invokevirtual #40                 // Method org/hibernate/jpa/event/spi/CallbackType.getCallbackAnnotation:()Ljava/lang/Class;
      77: if_acmpne     84
      80: getstatic     #23                 // Field org/hibernate/jpa/event/spi/CallbackType.PRE_REMOVE:Lorg/hibernate/jpa/event/spi/CallbackType;
      83: areturn
      84: aload_1
      85: getstatic     #24                 // Field org/hibernate/jpa/event/spi/CallbackType.POST_REMOVE:Lorg/hibernate/jpa/event/spi/CallbackType;
      88: invokevirtual #40                 // Method org/hibernate/jpa/event/spi/CallbackType.getCallbackAnnotation:()Ljava/lang/Class;
      91: if_acmpne     98
      94: getstatic     #24                 // Field org/hibernate/jpa/event/spi/CallbackType.POST_REMOVE:Lorg/hibernate/jpa/event/spi/CallbackType;
      97: areturn
      98: new           #28                 // class javax/persistence/PersistenceException
     101: dup
     102: new           #29                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     109: ldc           #41                 // String Unrecognized JPA callback annotation [
     111: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_1
     115: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     118: ldc           #34                 // String ]
     120: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     126: invokespecial #36                 // Method javax/persistence/PersistenceException."<init>":(Ljava/lang/String;)V
     129: athrow
}
