Compiled from "CollectionDataCachingConfigImpl.java"
public class org.hibernate.cache.cfg.internal.CollectionDataCachingConfigImpl extends org.hibernate.cache.cfg.internal.AbstractDomainDataCachingConfig implements org.hibernate.cache.cfg.spi.CollectionDataCachingConfig {
  private final org.hibernate.mapping.Collection collectionDescriptor;

  private final org.hibernate.metamodel.model.domain.NavigableRole navigableRole;

  public org.hibernate.cache.cfg.internal.CollectionDataCachingConfigImpl(org.hibernate.mapping.Collection, org.hibernate.cache.spi.access.AccessType);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method org/hibernate/cache/cfg/internal/AbstractDomainDataCachingConfig."<init>":(Lorg/hibernate/cache/spi/access/AccessType;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field collectionDescriptor:Lorg/hibernate/mapping/Collection;
      10: aload_0
      11: new           #3                  // class org/hibernate/metamodel/model/domain/NavigableRole
      14: dup
      15: aload_1
      16: invokevirtual #4                  // Method org/hibernate/mapping/Collection.getRole:()Ljava/lang/String;
      19: invokespecial #5                  // Method org/hibernate/metamodel/model/domain/NavigableRole."<init>":(Ljava/lang/String;)V
      22: putfield      #6                  // Field navigableRole:Lorg/hibernate/metamodel/model/domain/NavigableRole;
      25: return

  public boolean isMutable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field collectionDescriptor:Lorg/hibernate/mapping/Collection;
       4: invokevirtual #7                  // Method org/hibernate/mapping/Collection.isMutable:()Z
       7: ireturn

  public boolean isVersioned();
    Code:
       0: aload_0
       1: getfield      #2                  // Field collectionDescriptor:Lorg/hibernate/mapping/Collection;
       4: invokevirtual #8                  // Method org/hibernate/mapping/Collection.getOwner:()Lorg/hibernate/mapping/PersistentClass;
       7: invokevirtual #9                  // Method org/hibernate/mapping/PersistentClass.isVersioned:()Z
      10: ireturn

  public java.util.Comparator getOwnerVersionComparator();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method isVersioned:()Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #2                  // Field collectionDescriptor:Lorg/hibernate/mapping/Collection;
      13: invokevirtual #8                  // Method org/hibernate/mapping/Collection.getOwner:()Lorg/hibernate/mapping/PersistentClass;
      16: invokevirtual #11                 // Method org/hibernate/mapping/PersistentClass.getVersion:()Lorg/hibernate/mapping/Property;
      19: invokevirtual #12                 // Method org/hibernate/mapping/Property.getType:()Lorg/hibernate/type/Type;
      22: checkcast     #13                 // class org/hibernate/type/VersionType
      25: invokeinterface #14,  1           // InterfaceMethod org/hibernate/type/VersionType.getComparator:()Ljava/util/Comparator;
      30: areturn

  public org.hibernate.metamodel.model.domain.NavigableRole getNavigableRole();
    Code:
       0: aload_0
       1: getfield      #6                  // Field navigableRole:Lorg/hibernate/metamodel/model/domain/NavigableRole;
       4: areturn
}
