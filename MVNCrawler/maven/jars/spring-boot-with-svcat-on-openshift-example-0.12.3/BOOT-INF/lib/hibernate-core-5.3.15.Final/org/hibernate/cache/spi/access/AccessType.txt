Compiled from "AccessType.java"
public final class org.hibernate.cache.spi.access.AccessType extends java.lang.Enum<org.hibernate.cache.spi.access.AccessType> {
  public static final org.hibernate.cache.spi.access.AccessType READ_ONLY;

  public static final org.hibernate.cache.spi.access.AccessType READ_WRITE;

  public static final org.hibernate.cache.spi.access.AccessType NONSTRICT_READ_WRITE;

  public static final org.hibernate.cache.spi.access.AccessType TRANSACTIONAL;

  private final java.lang.String externalName;

  private static final org.hibernate.cache.spi.access.AccessType[] $VALUES;

  public static org.hibernate.cache.spi.access.AccessType[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/hibernate/cache/spi/access/AccessType;
       3: invokevirtual #2                  // Method "[Lorg/hibernate/cache/spi/access/AccessType;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/hibernate/cache/spi/access/AccessType;"
       9: areturn

  public static org.hibernate.cache.spi.access.AccessType valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/hibernate/cache/spi/access/AccessType
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/hibernate/cache/spi/access/AccessType
       9: areturn

  private org.hibernate.cache.spi.access.AccessType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #7                  // Field externalName:Ljava/lang/String;
      11: return

  public java.lang.String getExternalName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field externalName:Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #10                 // String AccessType[
       9: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #7                  // Field externalName:Ljava/lang/String;
      16: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #12                 // String ]
      21: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public static org.hibernate.cache.spi.access.AccessType fromExternalName(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: invokestatic  #14                 // Method values:()[Lorg/hibernate/cache/spi/access/AccessType;
       9: astore_1
      10: aload_1
      11: arraylength
      12: istore_2
      13: iconst_0
      14: istore_3
      15: iload_3
      16: iload_2
      17: if_icmpge     46
      20: aload_1
      21: iload_3
      22: aaload
      23: astore        4
      25: aload         4
      27: invokevirtual #15                 // Method getExternalName:()Ljava/lang/String;
      30: aload_0
      31: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      34: ifeq          40
      37: aload         4
      39: areturn
      40: iinc          3, 1
      43: goto          15
      46: aload_0
      47: getstatic     #17                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
      50: invokevirtual #18                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      53: invokestatic  #19                 // Method valueOf:(Ljava/lang/String;)Lorg/hibernate/cache/spi/access/AccessType;
      56: areturn
      57: astore_1
      58: new           #21                 // class org/hibernate/cache/spi/access/UnknownAccessTypeException
      61: dup
      62: aload_0
      63: invokespecial #22                 // Method org/hibernate/cache/spi/access/UnknownAccessTypeException."<init>":(Ljava/lang/String;)V
      66: athrow
    Exception table:
       from    to  target type
          46    56    57   Class java/lang/IllegalArgumentException

  static {};
    Code:
       0: new           #4                  // class org/hibernate/cache/spi/access/AccessType
       3: dup
       4: ldc           #23                 // String READ_ONLY
       6: iconst_0
       7: ldc           #24                 // String read-only
       9: invokespecial #25                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      12: putstatic     #26                 // Field READ_ONLY:Lorg/hibernate/cache/spi/access/AccessType;
      15: new           #4                  // class org/hibernate/cache/spi/access/AccessType
      18: dup
      19: ldc           #27                 // String READ_WRITE
      21: iconst_1
      22: ldc           #28                 // String read-write
      24: invokespecial #25                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      27: putstatic     #29                 // Field READ_WRITE:Lorg/hibernate/cache/spi/access/AccessType;
      30: new           #4                  // class org/hibernate/cache/spi/access/AccessType
      33: dup
      34: ldc           #30                 // String NONSTRICT_READ_WRITE
      36: iconst_2
      37: ldc           #31                 // String nonstrict-read-write
      39: invokespecial #25                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      42: putstatic     #32                 // Field NONSTRICT_READ_WRITE:Lorg/hibernate/cache/spi/access/AccessType;
      45: new           #4                  // class org/hibernate/cache/spi/access/AccessType
      48: dup
      49: ldc           #33                 // String TRANSACTIONAL
      51: iconst_3
      52: ldc           #34                 // String transactional
      54: invokespecial #25                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      57: putstatic     #35                 // Field TRANSACTIONAL:Lorg/hibernate/cache/spi/access/AccessType;
      60: iconst_4
      61: anewarray     #4                  // class org/hibernate/cache/spi/access/AccessType
      64: dup
      65: iconst_0
      66: getstatic     #26                 // Field READ_ONLY:Lorg/hibernate/cache/spi/access/AccessType;
      69: aastore
      70: dup
      71: iconst_1
      72: getstatic     #29                 // Field READ_WRITE:Lorg/hibernate/cache/spi/access/AccessType;
      75: aastore
      76: dup
      77: iconst_2
      78: getstatic     #32                 // Field NONSTRICT_READ_WRITE:Lorg/hibernate/cache/spi/access/AccessType;
      81: aastore
      82: dup
      83: iconst_3
      84: getstatic     #35                 // Field TRANSACTIONAL:Lorg/hibernate/cache/spi/access/AccessType;
      87: aastore
      88: putstatic     #1                  // Field $VALUES:[Lorg/hibernate/cache/spi/access/AccessType;
      91: return
}
