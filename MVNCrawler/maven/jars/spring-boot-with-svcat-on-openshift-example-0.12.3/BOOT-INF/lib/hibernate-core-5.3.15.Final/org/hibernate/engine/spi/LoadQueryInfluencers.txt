Compiled from "LoadQueryInfluencers.java"
public class org.hibernate.engine.spi.LoadQueryInfluencers implements java.io.Serializable {
  public static final org.hibernate.engine.spi.LoadQueryInfluencers NONE;

  private final org.hibernate.engine.spi.SessionFactoryImplementor sessionFactory;

  private java.lang.String internalFetchProfile;

  private javax.persistence.EntityGraph fetchGraph;

  private javax.persistence.EntityGraph loadGraph;

  private java.util.HashSet<java.lang.String> enabledFetchProfileNames;

  private java.util.HashMap<java.lang.String, org.hibernate.Filter> enabledFilters;

  public org.hibernate.engine.spi.LoadQueryInfluencers();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method "<init>":(Lorg/hibernate/engine/spi/SessionFactoryImplementor;)V
       5: return

  public org.hibernate.engine.spi.LoadQueryInfluencers(org.hibernate.engine.spi.SessionFactoryImplementor);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field sessionFactory:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       9: return

  public org.hibernate.engine.spi.SessionFactoryImplementor getSessionFactory();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sessionFactory:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       4: areturn

  public java.lang.String getInternalFetchProfile();
    Code:
       0: aload_0
       1: getfield      #4                  // Field internalFetchProfile:Ljava/lang/String;
       4: areturn

  public void setInternalFetchProfile(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sessionFactory:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       4: ifnonnull     17
       7: new           #5                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #6                  // String Cannot modify context-less LoadQueryInfluencers
      13: invokespecial #7                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #4                  // Field internalFetchProfile:Ljava/lang/String;
      22: return

  public boolean hasEnabledFilters();
    Code:
       0: aload_0
       1: getfield      #8                  // Field enabledFilters:Ljava/util/HashMap;
       4: ifnull        21
       7: aload_0
       8: getfield      #8                  // Field enabledFilters:Ljava/util/HashMap;
      11: invokevirtual #9                  // Method java/util/HashMap.isEmpty:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public java.util.Map<java.lang.String, org.hibernate.Filter> getEnabledFilters();
    Code:
       0: aload_0
       1: getfield      #8                  // Field enabledFilters:Ljava/util/HashMap;
       4: ifnonnull     11
       7: getstatic     #10                 // Field java/util/Collections.EMPTY_MAP:Ljava/util/Map;
      10: areturn
      11: aload_0
      12: getfield      #8                  // Field enabledFilters:Ljava/util/HashMap;
      15: invokevirtual #11                 // Method java/util/HashMap.values:()Ljava/util/Collection;
      18: invokeinterface #12,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      23: astore_1
      24: aload_1
      25: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          52
      33: aload_1
      34: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #15                 // class org/hibernate/Filter
      42: astore_2
      43: aload_2
      44: invokeinterface #16,  1           // InterfaceMethod org/hibernate/Filter.validate:()V
      49: goto          24
      52: aload_0
      53: getfield      #8                  // Field enabledFilters:Ljava/util/HashMap;
      56: areturn

  public java.util.Set<java.lang.String> getEnabledFilterNames();
    Code:
       0: aload_0
       1: getfield      #8                  // Field enabledFilters:Ljava/util/HashMap;
       4: ifnonnull     11
       7: getstatic     #17                 // Field java/util/Collections.EMPTY_SET:Ljava/util/Set;
      10: areturn
      11: aload_0
      12: getfield      #8                  // Field enabledFilters:Ljava/util/HashMap;
      15: invokevirtual #18                 // Method java/util/HashMap.keySet:()Ljava/util/Set;
      18: invokestatic  #19                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      21: areturn

  public org.hibernate.Filter getEnabledFilter(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field enabledFilters:Ljava/util/HashMap;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #8                  // Field enabledFilters:Ljava/util/HashMap;
      13: aload_1
      14: invokevirtual #20                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #15                 // class org/hibernate/Filter
      20: areturn

  public org.hibernate.Filter enableFilter(java.lang.String);
    Code:
       0: new           #21                 // class org/hibernate/internal/FilterImpl
       3: dup
       4: aload_0
       5: getfield      #3                  // Field sessionFactory:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       8: aload_1
       9: invokeinterface #22,  2           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getFilterDefinition:(Ljava/lang/String;)Lorg/hibernate/engine/spi/FilterDefinition;
      14: invokespecial #23                 // Method org/hibernate/internal/FilterImpl."<init>":(Lorg/hibernate/engine/spi/FilterDefinition;)V
      17: astore_2
      18: aload_0
      19: getfield      #8                  // Field enabledFilters:Ljava/util/HashMap;
      22: ifnonnull     36
      25: aload_0
      26: new           #24                 // class java/util/HashMap
      29: dup
      30: invokespecial #25                 // Method java/util/HashMap."<init>":()V
      33: putfield      #8                  // Field enabledFilters:Ljava/util/HashMap;
      36: aload_0
      37: getfield      #8                  // Field enabledFilters:Ljava/util/HashMap;
      40: aload_1
      41: aload_2
      42: invokevirtual #26                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_2
      47: areturn

  public void disableFilter(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field enabledFilters:Ljava/util/HashMap;
       4: ifnull        16
       7: aload_0
       8: getfield      #8                  // Field enabledFilters:Ljava/util/HashMap;
      11: aload_1
      12: invokevirtual #27                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return

  public java.lang.Object getFilterParameterValue(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #28                 // Method parseFilterParameterName:(Ljava/lang/String;)[Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #8                  // Field enabledFilters:Ljava/util/HashMap;
       9: ifnonnull     46
      12: new           #29                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #30                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #32                 // String Filter [
      25: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_2
      29: iconst_0
      30: aaload
      31: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #34                 // String ] currently not enabled
      36: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: getfield      #8                  // Field enabledFilters:Ljava/util/HashMap;
      50: aload_2
      51: iconst_0
      52: aaload
      53: invokevirtual #20                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #21                 // class org/hibernate/internal/FilterImpl
      59: astore_3
      60: aload_3
      61: ifnonnull     98
      64: new           #29                 // class java/lang/IllegalArgumentException
      67: dup
      68: new           #30                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #32                 // String Filter [
      77: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_2
      81: iconst_0
      82: aaload
      83: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: ldc           #34                 // String ] currently not enabled
      88: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_3
      99: aload_2
     100: iconst_1
     101: aaload
     102: invokevirtual #37                 // Method org/hibernate/internal/FilterImpl.getParameter:(Ljava/lang/String;)Ljava/lang/Object;
     105: areturn

  public org.hibernate.type.Type getFilterParameterType(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #28                 // Method parseFilterParameterName:(Ljava/lang/String;)[Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #3                  // Field sessionFactory:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       9: aload_2
      10: iconst_0
      11: aaload
      12: invokeinterface #22,  2           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getFilterDefinition:(Ljava/lang/String;)Lorg/hibernate/engine/spi/FilterDefinition;
      17: astore_3
      18: aload_3
      19: ifnonnull     56
      22: new           #29                 // class java/lang/IllegalArgumentException
      25: dup
      26: new           #30                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #32                 // String Filter [
      35: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_2
      39: iconst_0
      40: aaload
      41: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #38                 // String ] not defined
      46: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_3
      57: aload_2
      58: iconst_1
      59: aaload
      60: invokevirtual #39                 // Method org/hibernate/engine/spi/FilterDefinition.getParameterType:(Ljava/lang/String;)Lorg/hibernate/type/Type;
      63: astore        4
      65: aload         4
      67: ifnonnull     80
      70: new           #40                 // class java/lang/InternalError
      73: dup
      74: ldc           #41                 // String Unable to locate type for filter parameter
      76: invokespecial #42                 // Method java/lang/InternalError."<init>":(Ljava/lang/String;)V
      79: athrow
      80: aload         4
      82: areturn

  public static java.lang.String[] parseFilterParameterName(java.lang.String);
    Code:
       0: aload_0
       1: bipush        46
       3: invokevirtual #43                 // Method java/lang/String.lastIndexOf:(I)I
       6: istore_1
       7: iload_1
       8: ifgt          43
      11: new           #29                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #30                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #44                 // String Invalid filter-parameter name format [
      24: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #45                 // String ]; expecting {filter-name}.{param-name}
      33: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: iconst_0
      45: iload_1
      46: invokevirtual #46                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      49: astore_2
      50: aload_0
      51: iload_1
      52: iconst_1
      53: iadd
      54: invokevirtual #47                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      57: astore_3
      58: iconst_2
      59: anewarray     #48                 // class java/lang/String
      62: dup
      63: iconst_0
      64: aload_2
      65: aastore
      66: dup
      67: iconst_1
      68: aload_3
      69: aastore
      70: areturn

  public boolean hasEnabledFetchProfiles();
    Code:
       0: aload_0
       1: getfield      #49                 // Field enabledFetchProfileNames:Ljava/util/HashSet;
       4: ifnull        21
       7: aload_0
       8: getfield      #49                 // Field enabledFetchProfileNames:Ljava/util/HashSet;
      11: invokevirtual #50                 // Method java/util/HashSet.isEmpty:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public java.util.Set<java.lang.String> getEnabledFetchProfileNames();
    Code:
       0: aload_0
       1: getfield      #49                 // Field enabledFetchProfileNames:Ljava/util/HashSet;
       4: ifnonnull     11
       7: getstatic     #17                 // Field java/util/Collections.EMPTY_SET:Ljava/util/Set;
      10: areturn
      11: aload_0
      12: getfield      #49                 // Field enabledFetchProfileNames:Ljava/util/HashSet;
      15: areturn

  private void checkFetchProfileName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sessionFactory:Lorg/hibernate/engine/spi/SessionFactoryImplementor;
       4: aload_1
       5: invokeinterface #51,  2           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.containsFetchProfileDefinition:(Ljava/lang/String;)Z
      10: ifne          22
      13: new           #52                 // class org/hibernate/UnknownProfileException
      16: dup
      17: aload_1
      18: invokespecial #53                 // Method org/hibernate/UnknownProfileException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: return

  public boolean isFetchProfileEnabled(java.lang.String) throws org.hibernate.UnknownProfileException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #54                 // Method checkFetchProfileName:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #49                 // Field enabledFetchProfileNames:Ljava/util/HashSet;
       9: ifnull        27
      12: aload_0
      13: getfield      #49                 // Field enabledFetchProfileNames:Ljava/util/HashSet;
      16: aload_1
      17: invokevirtual #55                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public void enableFetchProfile(java.lang.String) throws org.hibernate.UnknownProfileException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #54                 // Method checkFetchProfileName:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #49                 // Field enabledFetchProfileNames:Ljava/util/HashSet;
       9: ifnonnull     23
      12: aload_0
      13: new           #56                 // class java/util/HashSet
      16: dup
      17: invokespecial #57                 // Method java/util/HashSet."<init>":()V
      20: putfield      #49                 // Field enabledFetchProfileNames:Ljava/util/HashSet;
      23: aload_0
      24: getfield      #49                 // Field enabledFetchProfileNames:Ljava/util/HashSet;
      27: aload_1
      28: invokevirtual #58                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      31: pop
      32: return

  public void disableFetchProfile(java.lang.String) throws org.hibernate.UnknownProfileException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #54                 // Method checkFetchProfileName:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #49                 // Field enabledFetchProfileNames:Ljava/util/HashSet;
       9: ifnull        21
      12: aload_0
      13: getfield      #49                 // Field enabledFetchProfileNames:Ljava/util/HashSet;
      16: aload_1
      17: invokevirtual #59                 // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
      20: pop
      21: return

  public javax.persistence.EntityGraph getFetchGraph();
    Code:
       0: aload_0
       1: getfield      #60                 // Field fetchGraph:Ljavax/persistence/EntityGraph;
       4: areturn

  public void setFetchGraph(javax.persistence.EntityGraph);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field fetchGraph:Ljavax/persistence/EntityGraph;
       5: return

  public javax.persistence.EntityGraph getLoadGraph();
    Code:
       0: aload_0
       1: getfield      #61                 // Field loadGraph:Ljavax/persistence/EntityGraph;
       4: areturn

  public void setLoadGraph(javax.persistence.EntityGraph);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field loadGraph:Ljavax/persistence/EntityGraph;
       5: return

  static {};
    Code:
       0: new           #62                 // class org/hibernate/engine/spi/LoadQueryInfluencers
       3: dup
       4: invokespecial #63                 // Method "<init>":()V
       7: putstatic     #64                 // Field NONE:Lorg/hibernate/engine/spi/LoadQueryInfluencers;
      10: return
}
