Compiled from "SessionFactoryOptionsBuilder.java"
public class org.hibernate.boot.internal.SessionFactoryOptionsBuilder implements org.hibernate.boot.spi.SessionFactoryOptions {
  private static final org.hibernate.internal.CoreMessageLogger log;

  private final java.lang.String uuid;

  private final org.hibernate.boot.registry.StandardServiceRegistry serviceRegistry;

  private java.lang.Object beanManagerReference;

  private java.lang.Object validatorFactoryReference;

  private boolean jpaBootstrap;

  private java.lang.String sessionFactoryName;

  private boolean sessionFactoryNameAlsoJndiName;

  private boolean flushBeforeCompletionEnabled;

  private boolean autoCloseSessionEnabled;

  private boolean jtaTransactionAccessEnabled;

  private boolean allowOutOfTransactionUpdateOperations;

  private boolean releaseResourcesOnCloseEnabled;

  private boolean allowRefreshDetachedEntity;

  private boolean jtaTrackByThread;

  private boolean preferUserTransaction;

  private boolean statisticsEnabled;

  private org.hibernate.Interceptor interceptor;

  private java.lang.Class<? extends org.hibernate.Interceptor> statelessInterceptorClass;

  private java.util.function.Supplier<? extends org.hibernate.Interceptor> statelessInterceptorSupplier;

  private org.hibernate.resource.jdbc.spi.StatementInspector statementInspector;

  private java.util.List<org.hibernate.SessionFactoryObserver> sessionFactoryObserverList;

  private org.hibernate.cfg.BaselineSessionEventsListenerBuilder baselineSessionEventsListenerBuilder;

  private org.hibernate.CustomEntityDirtinessStrategy customEntityDirtinessStrategy;

  private java.util.List<org.hibernate.EntityNameResolver> entityNameResolvers;

  private org.hibernate.proxy.EntityNotFoundDelegate entityNotFoundDelegate;

  private boolean identifierRollbackEnabled;

  private org.hibernate.EntityMode defaultEntityMode;

  private org.hibernate.tuple.entity.EntityTuplizerFactory entityTuplizerFactory;

  private boolean checkNullability;

  private boolean initializeLazyStateOutsideTransactions;

  private org.hibernate.hql.spi.id.MultiTableBulkIdStrategy multiTableBulkIdStrategy;

  private org.hibernate.boot.TempTableDdlTransactionHandling tempTableDdlTransactionHandling;

  private org.hibernate.loader.BatchFetchStyle batchFetchStyle;

  private boolean delayBatchFetchLoaderCreations;

  private int defaultBatchFetchSize;

  private java.lang.Integer maximumFetchDepth;

  private org.hibernate.NullPrecedence defaultNullPrecedence;

  private boolean orderUpdatesEnabled;

  private boolean orderInsertsEnabled;

  private boolean enhancementAsProxyEnabled;

  private org.hibernate.MultiTenancyStrategy multiTenancyStrategy;

  private org.hibernate.context.spi.CurrentTenantIdentifierResolver currentTenantIdentifierResolver;

  private java.util.Map querySubstitutions;

  private boolean namedQueryStartupCheckingEnabled;

  private boolean conventionalJavaConstants;

  private final boolean procedureParameterNullPassingEnabled;

  private final boolean collectionJoinSubqueryRewriteEnabled;

  private boolean jdbcStyleParamsZeroBased;

  private boolean secondLevelCacheEnabled;

  private boolean queryCacheEnabled;

  private org.hibernate.cache.spi.TimestampsCacheFactory timestampsCacheFactory;

  private java.lang.String cacheRegionPrefix;

  private boolean minimalPutsEnabled;

  private boolean structuredCacheEntriesEnabled;

  private boolean directReferenceCacheEntriesEnabled;

  private boolean autoEvictCollectionCache;

  private org.hibernate.boot.SchemaAutoTooling schemaAutoTooling;

  private boolean getGeneratedKeysEnabled;

  private int jdbcBatchSize;

  private boolean jdbcBatchVersionedData;

  private java.lang.Integer jdbcFetchSize;

  private boolean scrollableResultSetsEnabled;

  private boolean commentsEnabled;

  private org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode connectionHandlingMode;

  private boolean connectionProviderDisablesAutoCommit;

  private boolean wrapResultSetsEnabled;

  private java.util.TimeZone jdbcTimeZone;

  private boolean queryParametersValidationEnabled;

  private org.hibernate.query.criteria.LiteralHandlingMode criteriaLiteralHandlingMode;

  private org.hibernate.query.ImmutableEntityUpdateQueryHandlingMode immutableEntityUpdateQueryHandlingMode;

  private java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction> sqlFunctions;

  private org.hibernate.jpa.spi.JpaCompliance jpaCompliance;

  private boolean failOnPaginationOverCollectionFetchEnabled;

  private boolean inClauseParameterPaddingEnabled;

  private boolean nativeExceptionHandling51Compliance;

  static final boolean $assertionsDisabled;

  public org.hibernate.boot.internal.SessionFactoryOptionsBuilder(org.hibernate.boot.registry.StandardServiceRegistry, org.hibernate.boot.spi.BootstrapContext);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #4                  // Method org/hibernate/id/uuid/LocalObjectUuidHelper.generateLocalObjectUuid:()Ljava/lang/String;
       8: putfield      #5                  // Field uuid:Ljava/lang/String;
      11: aload_0
      12: new           #6                  // class java/util/ArrayList
      15: dup
      16: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      19: putfield      #8                  // Field sessionFactoryObserverList:Ljava/util/List;
      22: aload_0
      23: new           #6                  // class java/util/ArrayList
      26: dup
      27: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      30: putfield      #9                  // Field entityNameResolvers:Ljava/util/List;
      33: aload_0
      34: new           #10                 // class org/hibernate/tuple/entity/EntityTuplizerFactory
      37: dup
      38: invokespecial #11                 // Method org/hibernate/tuple/entity/EntityTuplizerFactory."<init>":()V
      41: putfield      #12                 // Field entityTuplizerFactory:Lorg/hibernate/tuple/entity/EntityTuplizerFactory;
      44: aload_0
      45: aload_1
      46: putfield      #13                 // Field serviceRegistry:Lorg/hibernate/boot/registry/StandardServiceRegistry;
      49: aload_0
      50: aload_2
      51: invokeinterface #14,  1           // InterfaceMethod org/hibernate/boot/spi/BootstrapContext.isJpaBootstrap:()Z
      56: putfield      #15                 // Field jpaBootstrap:Z
      59: aload_1
      60: ldc           #16                 // class org/hibernate/boot/registry/selector/spi/StrategySelector
      62: invokeinterface #17,  2           // InterfaceMethod org/hibernate/boot/registry/StandardServiceRegistry.getService:(Ljava/lang/Class;)Lorg/hibernate/service/Service;
      67: checkcast     #16                 // class org/hibernate/boot/registry/selector/spi/StrategySelector
      70: astore_3
      71: aload_1
      72: ldc           #18                 // class org/hibernate/engine/config/spi/ConfigurationService
      74: invokeinterface #17,  2           // InterfaceMethod org/hibernate/boot/registry/StandardServiceRegistry.getService:(Ljava/lang/Class;)Lorg/hibernate/service/Service;
      79: checkcast     #18                 // class org/hibernate/engine/config/spi/ConfigurationService
      82: astore        4
      84: aload_1
      85: ldc           #19                 // class org/hibernate/engine/jdbc/spi/JdbcServices
      87: invokeinterface #17,  2           // InterfaceMethod org/hibernate/boot/registry/StandardServiceRegistry.getService:(Ljava/lang/Class;)Lorg/hibernate/service/Service;
      92: checkcast     #19                 // class org/hibernate/engine/jdbc/spi/JdbcServices
      95: astore        5
      97: new           #20                 // class java/util/HashMap
     100: dup
     101: invokespecial #21                 // Method java/util/HashMap."<init>":()V
     104: astore        6
     106: aload         6
     108: aload         5
     110: invokeinterface #22,  1           // InterfaceMethod org/hibernate/engine/jdbc/spi/JdbcServices.getJdbcEnvironment:()Lorg/hibernate/engine/jdbc/env/spi/JdbcEnvironment;
     115: invokeinterface #23,  1           // InterfaceMethod org/hibernate/engine/jdbc/env/spi/JdbcEnvironment.getDialect:()Lorg/hibernate/dialect/Dialect;
     120: invokevirtual #24                 // Method org/hibernate/dialect/Dialect.getDefaultProperties:()Ljava/util/Properties;
     123: invokeinterface #25,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     128: aload         6
     130: aload         4
     132: invokeinterface #26,  1           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSettings:()Ljava/util/Map;
     137: invokeinterface #25,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     142: aload         4
     144: ifnonnull     170
     147: new           #27                 // class org/hibernate/engine/config/internal/ConfigurationServiceImpl
     150: dup
     151: aload         6
     153: invokespecial #28                 // Method org/hibernate/engine/config/internal/ConfigurationServiceImpl."<init>":(Ljava/util/Map;)V
     156: astore        4
     158: aload         4
     160: checkcast     #27                 // class org/hibernate/engine/config/internal/ConfigurationServiceImpl
     163: aload_1
     164: checkcast     #29                 // class org/hibernate/service/spi/ServiceRegistryImplementor
     167: invokevirtual #30                 // Method org/hibernate/engine/config/internal/ConfigurationServiceImpl.injectServices:(Lorg/hibernate/service/spi/ServiceRegistryImplementor;)V
     170: aload_0
     171: aload         6
     173: ldc           #31                 // String javax.persistence.bean.manager
     175: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     180: putfield      #33                 // Field beanManagerReference:Ljava/lang/Object;
     183: aload_0
     184: aload         6
     186: ldc           #34                 // String javax.persistence.validation.factory
     188: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     193: putfield      #35                 // Field validatorFactoryReference:Ljava/lang/Object;
     196: aload_0
     197: aload         6
     199: ldc           #36                 // String hibernate.session_factory_name
     201: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     206: checkcast     #37                 // class java/lang/String
     209: putfield      #38                 // Field sessionFactoryName:Ljava/lang/String;
     212: aload_0
     213: aload         4
     215: ldc           #39                 // String hibernate.session_factory_name_is_jndi
     217: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
     220: iconst_1
     221: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     224: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
     229: checkcast     #43                 // class java/lang/Boolean
     232: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
     235: putfield      #45                 // Field sessionFactoryNameAlsoJndiName:Z
     238: aload_0
     239: aload         4
     241: ldc           #46                 // String hibernate.jta.allowTransactionAccess
     243: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
     246: iconst_1
     247: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     250: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
     255: checkcast     #43                 // class java/lang/Boolean
     258: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
     261: putfield      #47                 // Field jtaTransactionAccessEnabled:Z
     264: aload_0
     265: aload         4
     267: ldc           #48                 // String hibernate.allow_refresh_detached_entity
     269: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
     272: iconst_1
     273: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     276: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
     281: checkcast     #43                 // class java/lang/Boolean
     284: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
     287: putfield      #49                 // Field allowRefreshDetachedEntity:Z
     290: aload_0
     291: aload         4
     293: ldc           #50                 // String hibernate.transaction.flush_before_completion
     295: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
     298: iconst_1
     299: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     302: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
     307: checkcast     #43                 // class java/lang/Boolean
     310: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
     313: putfield      #51                 // Field flushBeforeCompletionEnabled:Z
     316: aload_0
     317: aload         4
     319: ldc           #52                 // String hibernate.transaction.auto_close_session
     321: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
     324: iconst_0
     325: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     328: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
     333: checkcast     #43                 // class java/lang/Boolean
     336: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
     339: putfield      #53                 // Field autoCloseSessionEnabled:Z
     342: aload_0
     343: aload         4
     345: ldc           #54                 // String hibernate.generate_statistics
     347: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
     350: iconst_0
     351: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     354: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
     359: checkcast     #43                 // class java/lang/Boolean
     362: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
     365: putfield      #55                 // Field statisticsEnabled:Z
     368: aload_0
     369: aload         6
     371: aload_3
     372: invokestatic  #56                 // Method determineInterceptor:(Ljava/util/Map;Lorg/hibernate/boot/registry/selector/spi/StrategySelector;)Lorg/hibernate/Interceptor;
     375: putfield      #57                 // Field interceptor:Lorg/hibernate/Interceptor;
     378: aload_0
     379: aload         6
     381: aload_3
     382: invokestatic  #58                 // Method determineStatelessInterceptor:(Ljava/util/Map;Lorg/hibernate/boot/registry/selector/spi/StrategySelector;)Ljava/util/function/Supplier;
     385: putfield      #59                 // Field statelessInterceptorSupplier:Ljava/util/function/Supplier;
     388: aload_0
     389: aload_3
     390: ldc           #60                 // class org/hibernate/resource/jdbc/spi/StatementInspector
     392: aload         6
     394: ldc           #61                 // String hibernate.session_factory.statement_inspector
     396: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     401: invokeinterface #62,  3           // InterfaceMethod org/hibernate/boot/registry/selector/spi/StrategySelector.resolveStrategy:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
     406: checkcast     #60                 // class org/hibernate/resource/jdbc/spi/StatementInspector
     409: putfield      #63                 // Field statementInspector:Lorg/hibernate/resource/jdbc/spi/StatementInspector;
     412: aload         6
     414: ldc           #64                 // String hibernate.session.events.auto
     416: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     421: checkcast     #37                 // class java/lang/String
     424: astore        7
     426: aload         7
     428: ifnonnull     435
     431: aconst_null
     432: goto          445
     435: aload_3
     436: ldc           #65                 // class org/hibernate/SessionEventListener
     438: aload         7
     440: invokeinterface #66,  3           // InterfaceMethod org/hibernate/boot/registry/selector/spi/StrategySelector.selectStrategyImplementor:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Class;
     445: astore        8
     447: aload         4
     449: ldc           #67                 // String hibernate.session.events.log
     451: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
     454: aload_0
     455: getfield      #55                 // Field statisticsEnabled:Z
     458: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     461: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
     466: checkcast     #43                 // class java/lang/Boolean
     469: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
     472: istore        9
     474: aload_0
     475: new           #68                 // class org/hibernate/cfg/BaselineSessionEventsListenerBuilder
     478: dup
     479: iload         9
     481: aload         8
     483: invokespecial #69                 // Method org/hibernate/cfg/BaselineSessionEventsListenerBuilder."<init>":(ZLjava/lang/Class;)V
     486: putfield      #70                 // Field baselineSessionEventsListenerBuilder:Lorg/hibernate/cfg/BaselineSessionEventsListenerBuilder;
     489: aload_0
     490: aload_3
     491: ldc           #71                 // class org/hibernate/CustomEntityDirtinessStrategy
     493: aload         6
     495: ldc           #72                 // String hibernate.entity_dirtiness_strategy
     497: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     502: getstatic     #73                 // Field org/hibernate/boot/internal/DefaultCustomEntityDirtinessStrategy.INSTANCE:Lorg/hibernate/boot/internal/DefaultCustomEntityDirtinessStrategy;
     505: invokeinterface #74,  4           // InterfaceMethod org/hibernate/boot/registry/selector/spi/StrategySelector.resolveDefaultableStrategy:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     510: checkcast     #71                 // class org/hibernate/CustomEntityDirtinessStrategy
     513: putfield      #75                 // Field customEntityDirtinessStrategy:Lorg/hibernate/CustomEntityDirtinessStrategy;
     516: aload_0
     517: getstatic     #76                 // Field org/hibernate/boot/internal/StandardEntityNotFoundDelegate.INSTANCE:Lorg/hibernate/boot/internal/StandardEntityNotFoundDelegate;
     520: putfield      #77                 // Field entityNotFoundDelegate:Lorg/hibernate/proxy/EntityNotFoundDelegate;
     523: aload_0
     524: aload         4
     526: ldc           #78                 // String hibernate.use_identifier_rollback
     528: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
     531: iconst_0
     532: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     535: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
     540: checkcast     #43                 // class java/lang/Boolean
     543: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
     546: putfield      #79                 // Field identifierRollbackEnabled:Z
     549: aload_0
     550: aload         6
     552: ldc           #80                 // String hibernate.default_entity_mode
     554: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     559: checkcast     #37                 // class java/lang/String
     562: invokestatic  #81                 // Method org/hibernate/EntityMode.parse:(Ljava/lang/String;)Lorg/hibernate/EntityMode;
     565: putfield      #82                 // Field defaultEntityMode:Lorg/hibernate/EntityMode;
     568: aload_0
     569: aload         4
     571: ldc           #83                 // String hibernate.check_nullability
     573: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
     576: iconst_1
     577: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     580: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
     585: checkcast     #43                 // class java/lang/Boolean
     588: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
     591: putfield      #84                 // Field checkNullability:Z
     594: aload_0
     595: aload         4
     597: ldc           #85                 // String hibernate.enable_lazy_load_no_trans
     599: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
     602: iconst_0
     603: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     606: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
     611: checkcast     #43                 // class java/lang/Boolean
     614: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
     617: putfield      #86                 // Field initializeLazyStateOutsideTransactions:Z
     620: aload_0
     621: aload         6
     623: invokestatic  #87                 // Method org/hibernate/MultiTenancyStrategy.determineMultiTenancyStrategy:(Ljava/util/Map;)Lorg/hibernate/MultiTenancyStrategy;
     626: putfield      #88                 // Field multiTenancyStrategy:Lorg/hibernate/MultiTenancyStrategy;
     629: aload_0
     630: aload_3
     631: ldc           #89                 // class org/hibernate/context/spi/CurrentTenantIdentifierResolver
     633: aload         6
     635: ldc           #90                 // String hibernate.tenant_identifier_resolver
     637: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     642: invokeinterface #62,  3           // InterfaceMethod org/hibernate/boot/registry/selector/spi/StrategySelector.resolveStrategy:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
     647: checkcast     #89                 // class org/hibernate/context/spi/CurrentTenantIdentifierResolver
     650: putfield      #91                 // Field currentTenantIdentifierResolver:Lorg/hibernate/context/spi/CurrentTenantIdentifierResolver;
     653: aload_0
     654: aload_3
     655: ldc           #92                 // class org/hibernate/hql/spi/id/MultiTableBulkIdStrategy
     657: aload         6
     659: ldc           #93                 // String hibernate.hql.bulk_id_strategy
     661: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     666: aload         5
     668: invokeinterface #22,  1           // InterfaceMethod org/hibernate/engine/jdbc/spi/JdbcServices.getJdbcEnvironment:()Lorg/hibernate/engine/jdbc/env/spi/JdbcEnvironment;
     673: invokeinterface #23,  1           // InterfaceMethod org/hibernate/engine/jdbc/env/spi/JdbcEnvironment.getDialect:()Lorg/hibernate/dialect/Dialect;
     678: invokevirtual #94                 // Method org/hibernate/dialect/Dialect.getDefaultMultiTableBulkIdStrategy:()Lorg/hibernate/hql/spi/id/MultiTableBulkIdStrategy;
     681: invokeinterface #74,  4           // InterfaceMethod org/hibernate/boot/registry/selector/spi/StrategySelector.resolveDefaultableStrategy:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     686: checkcast     #92                 // class org/hibernate/hql/spi/id/MultiTableBulkIdStrategy
     689: putfield      #95                 // Field multiTableBulkIdStrategy:Lorg/hibernate/hql/spi/id/MultiTableBulkIdStrategy;
     692: aload_0
     693: aload         6
     695: ldc           #96                 // String hibernate.batch_fetch_style
     697: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     702: invokestatic  #97                 // Method org/hibernate/loader/BatchFetchStyle.interpret:(Ljava/lang/Object;)Lorg/hibernate/loader/BatchFetchStyle;
     705: putfield      #98                 // Field batchFetchStyle:Lorg/hibernate/loader/BatchFetchStyle;
     708: aload_0
     709: aload         4
     711: ldc           #99                 // String hibernate.loader.delay_entity_loader_creations
     713: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
     716: iconst_1
     717: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     720: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
     725: checkcast     #43                 // class java/lang/Boolean
     728: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
     731: putfield      #100                // Field delayBatchFetchLoaderCreations:Z
     734: aload_0
     735: ldc           #101                // String hibernate.default_batch_fetch_size
     737: aload         6
     739: iconst_m1
     740: invokestatic  #102                // Method org/hibernate/internal/util/config/ConfigurationHelper.getInt:(Ljava/lang/String;Ljava/util/Map;I)I
     743: putfield      #103                // Field defaultBatchFetchSize:I
     746: aload_0
     747: ldc           #104                // String hibernate.max_fetch_depth
     749: aload         6
     751: invokestatic  #105                // Method org/hibernate/internal/util/config/ConfigurationHelper.getInteger:(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Integer;
     754: putfield      #106                // Field maximumFetchDepth:Ljava/lang/Integer;
     757: ldc           #107                // String hibernate.order_by.default_null_ordering
     759: aload         6
     761: ldc           #108                // String none
     763: iconst_2
     764: anewarray     #37                 // class java/lang/String
     767: dup
     768: iconst_0
     769: ldc           #109                // String first
     771: aastore
     772: dup
     773: iconst_1
     774: ldc           #110                // String last
     776: aastore
     777: invokestatic  #111                // Method org/hibernate/internal/util/config/ConfigurationHelper.getString:(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
     780: astore        10
     782: aload_0
     783: aload         10
     785: invokestatic  #112                // Method org/hibernate/NullPrecedence.parse:(Ljava/lang/String;)Lorg/hibernate/NullPrecedence;
     788: putfield      #113                // Field defaultNullPrecedence:Lorg/hibernate/NullPrecedence;
     791: aload_0
     792: ldc           #114                // String hibernate.order_updates
     794: aload         6
     796: invokestatic  #115                // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;)Z
     799: putfield      #116                // Field orderUpdatesEnabled:Z
     802: aload_0
     803: ldc           #117                // String hibernate.order_inserts
     805: aload         6
     807: invokestatic  #115                // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;)Z
     810: putfield      #118                // Field orderInsertsEnabled:Z
     813: aload_0
     814: ldc           #119                // String hibernate.bytecode.allow_enhancement_as_proxy
     816: aload         6
     818: invokestatic  #115                // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;)Z
     821: putfield      #120                // Field enhancementAsProxyEnabled:Z
     824: aload_0
     825: aload         4
     827: ldc           #121                // String hibernate.jta.track_by_thread
     829: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
     832: iconst_1
     833: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     836: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
     841: checkcast     #43                 // class java/lang/Boolean
     844: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
     847: putfield      #122                // Field jtaTrackByThread:Z
     850: aload_0
     851: ldc           #123                // String hibernate.query.substitutions
     853: ldc           #124                // String  ,=;:\n\t\r\f
     855: aload         6
     857: invokestatic  #125                // Method org/hibernate/internal/util/config/ConfigurationHelper.toMap:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map;
     860: putfield      #126                // Field querySubstitutions:Ljava/util/Map;
     863: aload_0
     864: aload         4
     866: ldc           #127                // String hibernate.query.startup_check
     868: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
     871: iconst_1
     872: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     875: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
     880: checkcast     #43                 // class java/lang/Boolean
     883: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
     886: putfield      #128                // Field namedQueryStartupCheckingEnabled:Z
     889: aload_0
     890: aload         4
     892: ldc           #129                // String hibernate.query.conventional_java_constants
     894: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
     897: iconst_1
     898: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     901: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
     906: checkcast     #43                 // class java/lang/Boolean
     909: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
     912: putfield      #130                // Field conventionalJavaConstants:Z
     915: aload_0
     916: aload         4
     918: ldc           #131                // String hibernate.proc.param_null_passing
     920: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
     923: iconst_0
     924: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     927: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
     932: checkcast     #43                 // class java/lang/Boolean
     935: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
     938: putfield      #132                // Field procedureParameterNullPassingEnabled:Z
     941: aload_0
     942: aload         4
     944: ldc           #133                // String hibernate.collection_join_subquery
     946: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
     949: iconst_1
     950: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     953: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
     958: checkcast     #43                 // class java/lang/Boolean
     961: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
     964: putfield      #134                // Field collectionJoinSubqueryRewriteEnabled:Z
     967: aload_1
     968: ldc           #135                // class org/hibernate/cache/spi/RegionFactory
     970: invokeinterface #17,  2           // InterfaceMethod org/hibernate/boot/registry/StandardServiceRegistry.getService:(Ljava/lang/Class;)Lorg/hibernate/service/Service;
     975: checkcast     #135                // class org/hibernate/cache/spi/RegionFactory
     978: astore        11
     980: ldc           #136                // class org/hibernate/cache/internal/NoCachingRegionFactory
     982: aload         11
     984: invokevirtual #137                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
     987: ifne          1193
     990: aload_0
     991: aload         4
     993: ldc           #138                // String hibernate.cache.use_second_level_cache
     995: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
     998: iconst_1
     999: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1002: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
    1007: checkcast     #43                 // class java/lang/Boolean
    1010: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
    1013: putfield      #139                // Field secondLevelCacheEnabled:Z
    1016: aload_0
    1017: aload         4
    1019: ldc           #140                // String hibernate.cache.use_query_cache
    1021: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
    1024: iconst_0
    1025: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1028: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
    1033: checkcast     #43                 // class java/lang/Boolean
    1036: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
    1039: putfield      #141                // Field queryCacheEnabled:Z
    1042: aload_0
    1043: aload_3
    1044: ldc           #142                // class org/hibernate/cache/spi/TimestampsCacheFactory
    1046: aload         6
    1048: ldc           #143                // String hibernate.cache.query_cache_factory
    1050: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
    1055: getstatic     #144                // Field org/hibernate/cache/internal/StandardTimestampsCacheFactory.INSTANCE:Lorg/hibernate/cache/internal/StandardTimestampsCacheFactory;
    1058: invokeinterface #74,  4           // InterfaceMethod org/hibernate/boot/registry/selector/spi/StrategySelector.resolveDefaultableStrategy:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1063: checkcast     #142                // class org/hibernate/cache/spi/TimestampsCacheFactory
    1066: putfield      #145                // Field timestampsCacheFactory:Lorg/hibernate/cache/spi/TimestampsCacheFactory;
    1069: aload_0
    1070: ldc           #146                // String hibernate.cache.region_prefix
    1072: aload         6
    1074: invokestatic  #147                // Method org/hibernate/internal/util/config/ConfigurationHelper.extractPropertyValue:(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
    1077: putfield      #148                // Field cacheRegionPrefix:Ljava/lang/String;
    1080: aload_0
    1081: aload         4
    1083: ldc           #149                // String hibernate.cache.use_minimal_puts
    1085: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
    1088: aload         11
    1090: invokeinterface #150,  1          // InterfaceMethod org/hibernate/cache/spi/RegionFactory.isMinimalPutsEnabledByDefault:()Z
    1095: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1098: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
    1103: checkcast     #43                 // class java/lang/Boolean
    1106: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
    1109: putfield      #151                // Field minimalPutsEnabled:Z
    1112: aload_0
    1113: aload         4
    1115: ldc           #152                // String hibernate.cache.use_structured_entries
    1117: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
    1120: iconst_0
    1121: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1124: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
    1129: checkcast     #43                 // class java/lang/Boolean
    1132: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
    1135: putfield      #153                // Field structuredCacheEntriesEnabled:Z
    1138: aload_0
    1139: aload         4
    1141: ldc           #154                // String hibernate.cache.use_reference_entries
    1143: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
    1146: iconst_0
    1147: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1150: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
    1155: checkcast     #43                 // class java/lang/Boolean
    1158: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
    1161: putfield      #155                // Field directReferenceCacheEntriesEnabled:Z
    1164: aload_0
    1165: aload         4
    1167: ldc           #156                // String hibernate.cache.auto_evict_collection_cache
    1169: getstatic     #40                 // Field org/hibernate/engine/config/spi/StandardConverters.BOOLEAN:Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;
    1172: iconst_0
    1173: invokestatic  #41                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1176: invokeinterface #42,  4           // InterfaceMethod org/hibernate/engine/config/spi/ConfigurationService.getSetting:(Ljava/lang/String;Lorg/hibernate/engine/config/spi/ConfigurationService$Converter;Ljava/lang/Object;)Ljava/lang/Object;
    1181: checkcast     #43                 // class java/lang/Boolean
    1184: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
    1187: putfield      #157                // Field autoEvictCollectionCache:Z
    1190: goto          1233
    1193: aload_0
    1194: iconst_0
    1195: putfield      #139                // Field secondLevelCacheEnabled:Z
    1198: aload_0
    1199: iconst_0
    1200: putfield      #141                // Field queryCacheEnabled:Z
    1203: aload_0
    1204: aconst_null
    1205: putfield      #145                // Field timestampsCacheFactory:Lorg/hibernate/cache/spi/TimestampsCacheFactory;
    1208: aload_0
    1209: aconst_null
    1210: putfield      #148                // Field cacheRegionPrefix:Ljava/lang/String;
    1213: aload_0
    1214: iconst_0
    1215: putfield      #151                // Field minimalPutsEnabled:Z
    1218: aload_0
    1219: iconst_0
    1220: putfield      #153                // Field structuredCacheEntriesEnabled:Z
    1223: aload_0
    1224: iconst_0
    1225: putfield      #155                // Field directReferenceCacheEntriesEnabled:Z
    1228: aload_0
    1229: iconst_0
    1230: putfield      #157                // Field autoEvictCollectionCache:Z
    1233: aload_0
    1234: aload         6
    1236: ldc           #158                // String hibernate.hbm2ddl.auto
    1238: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
    1243: checkcast     #37                 // class java/lang/String
    1246: invokestatic  #159                // Method org/hibernate/boot/SchemaAutoTooling.interpret:(Ljava/lang/String;)Lorg/hibernate/boot/SchemaAutoTooling;
    1249: putfield      #160                // Field schemaAutoTooling:Lorg/hibernate/boot/SchemaAutoTooling;
    1252: goto          1288
    1255: astore        12
    1257: getstatic     #162                // Field log:Lorg/hibernate/internal/CoreMessageLogger;
    1260: new           #163                // class java/lang/StringBuilder
    1263: dup
    1264: invokespecial #164                // Method java/lang/StringBuilder."<init>":()V
    1267: aload         12
    1269: invokevirtual #165                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
    1272: invokevirtual #166                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1275: ldc           #167                // String   Ignoring
    1277: invokevirtual #166                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1280: invokevirtual #168                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1283: invokeinterface #169,  2          // InterfaceMethod org/hibernate/internal/CoreMessageLogger.warn:(Ljava/lang/Object;)V
    1288: aload         5
    1290: invokeinterface #170,  1          // InterfaceMethod org/hibernate/engine/jdbc/spi/JdbcServices.getExtractedMetaDataSupport:()Lorg/hibernate/engine/jdbc/env/spi/ExtractedDatabaseMetaData;
    1295: astore        12
    1297: aload_0
    1298: getstatic     #171                // Field org/hibernate/boot/TempTableDdlTransactionHandling.NONE:Lorg/hibernate/boot/TempTableDdlTransactionHandling;
    1301: putfield      #172                // Field tempTableDdlTransactionHandling:Lorg/hibernate/boot/TempTableDdlTransactionHandling;
    1304: aload         12
    1306: invokeinterface #173,  1          // InterfaceMethod org/hibernate/engine/jdbc/env/spi/ExtractedDatabaseMetaData.doesDataDefinitionCauseTransactionCommit:()Z
    1311: ifeq          1341
    1314: aload         12
    1316: invokeinterface #174,  1          // InterfaceMethod org/hibernate/engine/jdbc/env/spi/ExtractedDatabaseMetaData.supportsDataDefinitionInTransaction:()Z
    1321: ifeq          1334
    1324: aload_0
    1325: getstatic     #175                // Field org/hibernate/boot/TempTableDdlTransactionHandling.ISOLATE_AND_TRANSACT:Lorg/hibernate/boot/TempTableDdlTransactionHandling;
    1328: putfield      #172                // Field tempTableDdlTransactionHandling:Lorg/hibernate/boot/TempTableDdlTransactionHandling;
    1331: goto          1341
    1334: aload_0
    1335: getstatic     #176                // Field org/hibernate/boot/TempTableDdlTransactionHandling.ISOLATE:Lorg/hibernate/boot/TempTableDdlTransactionHandling;
    1338: putfield      #172                // Field tempTableDdlTransactionHandling:Lorg/hibernate/boot/TempTableDdlTransactionHandling;
    1341: aload_0
    1342: ldc           #177                // String hibernate.jdbc.batch_size
    1344: aload         6
    1346: iconst_0
    1347: invokestatic  #102                // Method org/hibernate/internal/util/config/ConfigurationHelper.getInt:(Ljava/lang/String;Ljava/util/Map;I)I
    1350: putfield      #178                // Field jdbcBatchSize:I
    1353: aload         12
    1355: invokeinterface #179,  1          // InterfaceMethod org/hibernate/engine/jdbc/env/spi/ExtractedDatabaseMetaData.supportsBatchUpdates:()Z
    1360: ifne          1368
    1363: aload_0
    1364: iconst_0
    1365: putfield      #178                // Field jdbcBatchSize:I
    1368: aload_0
    1369: ldc           #180                // String hibernate.jdbc.batch_versioned_data
    1371: aload         6
    1373: iconst_1
    1374: invokestatic  #181                // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
    1377: putfield      #182                // Field jdbcBatchVersionedData:Z
    1380: aload_0
    1381: ldc           #183                // String hibernate.jdbc.use_scrollable_resultset
    1383: aload         6
    1385: aload         12
    1387: invokeinterface #184,  1          // InterfaceMethod org/hibernate/engine/jdbc/env/spi/ExtractedDatabaseMetaData.supportsScrollableResults:()Z
    1392: invokestatic  #181                // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
    1395: putfield      #185                // Field scrollableResultSetsEnabled:Z
    1398: aload_0
    1399: ldc           #186                // String hibernate.jdbc.wrap_result_sets
    1401: aload         6
    1403: iconst_0
    1404: invokestatic  #181                // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
    1407: putfield      #187                // Field wrapResultSetsEnabled:Z
    1410: aload_0
    1411: ldc           #188                // String hibernate.jdbc.use_get_generated_keys
    1413: aload         6
    1415: aload         12
    1417: invokeinterface #189,  1          // InterfaceMethod org/hibernate/engine/jdbc/env/spi/ExtractedDatabaseMetaData.supportsGetGeneratedKeys:()Z
    1422: invokestatic  #181                // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
    1425: putfield      #190                // Field getGeneratedKeysEnabled:Z
    1428: aload_0
    1429: ldc           #191                // String hibernate.jdbc.fetch_size
    1431: aload         6
    1433: invokestatic  #105                // Method org/hibernate/internal/util/config/ConfigurationHelper.getInteger:(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Integer;
    1436: putfield      #192                // Field jdbcFetchSize:Ljava/lang/Integer;
    1439: aload_0
    1440: aload_0
    1441: aload         6
    1443: aload_1
    1444: invokespecial #193                // Method interpretConnectionHandlingMode:(Ljava/util/Map;Lorg/hibernate/boot/registry/StandardServiceRegistry;)Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
    1447: putfield      #194                // Field connectionHandlingMode:Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
    1450: aload_0
    1451: ldc           #195                // String hibernate.connection.provider_disables_autocommit
    1453: aload         6
    1455: iconst_0
    1456: invokestatic  #181                // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
    1459: putfield      #196                // Field connectionProviderDisablesAutoCommit:Z
    1462: aload_0
    1463: ldc           #197                // String hibernate.use_sql_comments
    1465: aload         6
    1467: invokestatic  #115                // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;)Z
    1470: putfield      #198                // Field commentsEnabled:Z
    1473: aload_0
    1474: ldc           #199                // String hibernate.jta.prefer_user_transaction
    1476: aload         6
    1478: iconst_0
    1479: invokestatic  #181                // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
    1482: putfield      #200                // Field preferUserTransaction:Z
    1485: aload_0
    1486: ldc           #201                // String hibernate.allow_update_outside_transaction
    1488: aload         6
    1490: iconst_0
    1491: invokestatic  #181                // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
    1494: putfield      #202                // Field allowOutOfTransactionUpdateOperations:Z
    1497: aload_0
    1498: ldc           #203                // String hibernate.ejb.discard_pc_on_close
    1500: aload         6
    1502: iconst_0
    1503: invokestatic  #181                // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
    1506: putfield      #204                // Field releaseResourcesOnCloseEnabled:Z
    1509: aload         6
    1511: ldc           #205                // String hibernate.jdbc.time_zone
    1513: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
    1518: astore        13
    1520: aload         13
    1522: instanceof    #206                // class java/util/TimeZone
    1525: ifeq          1540
    1528: aload_0
    1529: aload         13
    1531: checkcast     #206                // class java/util/TimeZone
    1534: putfield      #207                // Field jdbcTimeZone:Ljava/util/TimeZone;
    1537: goto          1627
    1540: aload         13
    1542: instanceof    #208                // class java/time/ZoneId
    1545: ifeq          1563
    1548: aload_0
    1549: aload         13
    1551: checkcast     #208                // class java/time/ZoneId
    1554: invokestatic  #209                // Method java/util/TimeZone.getTimeZone:(Ljava/time/ZoneId;)Ljava/util/TimeZone;
    1557: putfield      #207                // Field jdbcTimeZone:Ljava/util/TimeZone;
    1560: goto          1627
    1563: aload         13
    1565: instanceof    #37                 // class java/lang/String
    1568: ifeq          1589
    1571: aload_0
    1572: aload         13
    1574: checkcast     #37                 // class java/lang/String
    1577: invokestatic  #210                // Method java/time/ZoneId.of:(Ljava/lang/String;)Ljava/time/ZoneId;
    1580: invokestatic  #209                // Method java/util/TimeZone.getTimeZone:(Ljava/time/ZoneId;)Ljava/util/TimeZone;
    1583: putfield      #207                // Field jdbcTimeZone:Ljava/util/TimeZone;
    1586: goto          1627
    1589: aload         13
    1591: ifnull        1627
    1594: new           #211                // class java/lang/IllegalArgumentException
    1597: dup
    1598: new           #163                // class java/lang/StringBuilder
    1601: dup
    1602: invokespecial #164                // Method java/lang/StringBuilder."<init>":()V
    1605: ldc           #212                // String Configuration property hibernate.jdbc.time_zone value [
    1607: invokevirtual #166                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1610: aload         13
    1612: invokevirtual #213                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    1615: ldc           #214                // String ] is not supported!
    1617: invokevirtual #166                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1620: invokevirtual #168                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1623: invokespecial #215                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
    1626: athrow
    1627: aload_0
    1628: ldc           #216                // String hibernate.query.validate_parameters
    1630: aload         6
    1632: iconst_1
    1633: invokestatic  #181                // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
    1636: putfield      #217                // Field queryParametersValidationEnabled:Z
    1639: aload_0
    1640: aload         6
    1642: ldc           #218                // String hibernate.criteria.literal_handling_mode
    1644: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
    1649: invokestatic  #219                // Method org/hibernate/query/criteria/LiteralHandlingMode.interpret:(Ljava/lang/Object;)Lorg/hibernate/query/criteria/LiteralHandlingMode;
    1652: putfield      #220                // Field criteriaLiteralHandlingMode:Lorg/hibernate/query/criteria/LiteralHandlingMode;
    1655: aload_0
    1656: ldc           #221                // String hibernate.query.sql.jdbc_style_params_base
    1658: aload         6
    1660: iconst_0
    1661: invokestatic  #181                // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
    1664: putfield      #222                // Field jdbcStyleParamsZeroBased:Z
    1667: aload_0
    1668: aload_2
    1669: invokeinterface #223,  1          // InterfaceMethod org/hibernate/boot/spi/BootstrapContext.getJpaCompliance:()Lorg/hibernate/jpa/spi/MutableJpaCompliance;
    1674: putfield      #224                // Field jpaCompliance:Lorg/hibernate/jpa/spi/JpaCompliance;
    1677: aload_0
    1678: ldc           #225                // String hibernate.query.fail_on_pagination_over_collection_fetch
    1680: aload         6
    1682: iconst_0
    1683: invokestatic  #181                // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
    1686: putfield      #226                // Field failOnPaginationOverCollectionFetchEnabled:Z
    1689: aload_0
    1690: aload         6
    1692: ldc           #227                // String hibernate.query.immutable_entity_update_query_handling_mode
    1694: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
    1699: invokestatic  #228                // Method org/hibernate/query/ImmutableEntityUpdateQueryHandlingMode.interpret:(Ljava/lang/Object;)Lorg/hibernate/query/ImmutableEntityUpdateQueryHandlingMode;
    1702: putfield      #229                // Field immutableEntityUpdateQueryHandlingMode:Lorg/hibernate/query/ImmutableEntityUpdateQueryHandlingMode;
    1705: aload_0
    1706: ldc           #230                // String hibernate.query.in_clause_parameter_padding
    1708: aload         6
    1710: iconst_0
    1711: invokestatic  #181                // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
    1714: putfield      #231                // Field inClauseParameterPaddingEnabled:Z
    1717: aload_0
    1718: ldc           #232                // String hibernate.native_exception_handling_51_compliance
    1720: aload         6
    1722: iconst_0
    1723: invokestatic  #181                // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
    1726: putfield      #233                // Field nativeExceptionHandling51Compliance:Z
    1729: aload_2
    1730: invokeinterface #14,  1           // InterfaceMethod org/hibernate/boot/spi/BootstrapContext.isJpaBootstrap:()Z
    1735: ifeq          1758
    1738: aload_0
    1739: getfield      #233                // Field nativeExceptionHandling51Compliance:Z
    1742: ifeq          1758
    1745: getstatic     #162                // Field log:Lorg/hibernate/internal/CoreMessageLogger;
    1748: invokeinterface #234,  1          // InterfaceMethod org/hibernate/internal/CoreMessageLogger.nativeExceptionHandling51ComplianceJpaBootstrapping:()V
    1753: aload_0
    1754: iconst_0
    1755: putfield      #233                // Field nativeExceptionHandling51Compliance:Z
    1758: return
    Exception table:
       from    to  target type
        1233  1252  1255   Class java/lang/Exception

  private static org.hibernate.Interceptor determineInterceptor(java.util.Map, org.hibernate.boot.registry.selector.spi.StrategySelector);
    Code:
       0: aload_0
       1: ldc           #235                // String hibernate.session_factory.interceptor
       3: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_2
       9: aload_2
      10: ifnonnull     38
      13: aload_0
      14: ldc           #236                // String hibernate.ejb.interceptor
      16: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: astore_2
      22: aload_2
      23: ifnull        38
      26: getstatic     #237                // Field org/hibernate/internal/log/DeprecationLogger.DEPRECATION_LOGGER:Lorg/hibernate/internal/log/DeprecationLogger;
      29: ldc           #236                // String hibernate.ejb.interceptor
      31: ldc           #235                // String hibernate.session_factory.interceptor
      33: invokeinterface #238,  3          // InterfaceMethod org/hibernate/internal/log/DeprecationLogger.deprecatedSetting:(Ljava/lang/String;Ljava/lang/String;)V
      38: aload_1
      39: ldc           #239                // class org/hibernate/Interceptor
      41: aload_2
      42: invokeinterface #62,  3           // InterfaceMethod org/hibernate/boot/registry/selector/spi/StrategySelector.resolveStrategy:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #239                // class org/hibernate/Interceptor
      50: areturn

  private static java.util.function.Supplier<? extends org.hibernate.Interceptor> determineStatelessInterceptor(java.util.Map, org.hibernate.boot.registry.selector.spi.StrategySelector);
    Code:
       0: aload_0
       1: ldc           #240                // String hibernate.session_factory.session_scoped_interceptor
       3: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_2
       9: aload_2
      10: ifnonnull     38
      13: aload_0
      14: ldc           #241                // String hibernate.ejb.interceptor.session_scoped
      16: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: astore_2
      22: aload_2
      23: ifnull        38
      26: getstatic     #237                // Field org/hibernate/internal/log/DeprecationLogger.DEPRECATION_LOGGER:Lorg/hibernate/internal/log/DeprecationLogger;
      29: ldc           #241                // String hibernate.ejb.interceptor.session_scoped
      31: ldc           #240                // String hibernate.session_factory.session_scoped_interceptor
      33: invokeinterface #238,  3          // InterfaceMethod org/hibernate/internal/log/DeprecationLogger.deprecatedSetting:(Ljava/lang/String;Ljava/lang/String;)V
      38: aload_2
      39: ifnonnull     44
      42: aconst_null
      43: areturn
      44: aload_2
      45: instanceof    #242                // class java/util/function/Supplier
      48: ifeq          56
      51: aload_2
      52: checkcast     #242                // class java/util/function/Supplier
      55: areturn
      56: aload_2
      57: instanceof    #243                // class java/lang/Class
      60: ifeq          73
      63: aload_2
      64: checkcast     #243                // class java/lang/Class
      67: astore_3
      68: aload_3
      69: invokestatic  #244                // Method interceptorSupplier:(Ljava/lang/Class;)Ljava/util/function/Supplier;
      72: areturn
      73: aload_1
      74: ldc           #239                // class org/hibernate/Interceptor
      76: aload_2
      77: invokevirtual #245                // Method java/lang/Object.toString:()Ljava/lang/String;
      80: invokeinterface #66,  3           // InterfaceMethod org/hibernate/boot/registry/selector/spi/StrategySelector.selectStrategyImplementor:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Class;
      85: invokestatic  #244                // Method interceptorSupplier:(Ljava/lang/Class;)Ljava/util/function/Supplier;
      88: areturn

  private static java.util.function.Supplier<? extends org.hibernate.Interceptor> interceptorSupplier(java.lang.Class<? extends org.hibernate.Interceptor>);
    Code:
       0: aload_0
       1: invokedynamic #246,  0            // InvokeDynamic #0:get:(Ljava/lang/Class;)Ljava/util/function/Supplier;
       6: areturn

  private org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode interpretConnectionHandlingMode(java.util.Map, org.hibernate.boot.registry.StandardServiceRegistry);
    Code:
       0: aload_1
       1: ldc           #247                // String hibernate.connection.handling_mode
       3: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokestatic  #248                // Method org/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode.interpret:(Ljava/lang/Object;)Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
      11: astore_3
      12: aload_3
      13: ifnull        18
      16: aload_3
      17: areturn
      18: aload_2
      19: ldc           #249                // class org/hibernate/resource/transaction/spi/TransactionCoordinatorBuilder
      21: invokeinterface #17,  2           // InterfaceMethod org/hibernate/boot/registry/StandardServiceRegistry.getService:(Ljava/lang/Class;)Lorg/hibernate/service/Service;
      26: checkcast     #249                // class org/hibernate/resource/transaction/spi/TransactionCoordinatorBuilder
      29: astore        4
      31: aload_1
      32: ldc           #250                // String hibernate.connection.acquisition_mode
      34: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: invokestatic  #251                // Method org/hibernate/ConnectionAcquisitionMode.interpret:(Ljava/lang/Object;)Lorg/hibernate/ConnectionAcquisitionMode;
      42: astore        5
      44: aload_1
      45: ldc           #252                // String hibernate.connection.release_mode
      47: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      52: invokestatic  #253                // Method org/hibernate/ConnectionReleaseMode.interpret:(Ljava/lang/Object;)Lorg/hibernate/ConnectionReleaseMode;
      55: astore        6
      57: aload         5
      59: ifnonnull     67
      62: aload         6
      64: ifnull        79
      67: aload_0
      68: aload         5
      70: aload         6
      72: aload_1
      73: aload         4
      75: invokespecial #254                // Method interpretConnectionHandlingMode:(Lorg/hibernate/ConnectionAcquisitionMode;Lorg/hibernate/ConnectionReleaseMode;Ljava/util/Map;Lorg/hibernate/resource/transaction/spi/TransactionCoordinatorBuilder;)Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
      78: areturn
      79: aload         4
      81: invokeinterface #255,  1          // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinatorBuilder.getDefaultConnectionHandlingMode:()Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
      86: areturn

  private org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode interpretConnectionHandlingMode(org.hibernate.ConnectionAcquisitionMode, org.hibernate.ConnectionReleaseMode, java.util.Map, org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder);
    Code:
       0: getstatic     #237                // Field org/hibernate/internal/log/DeprecationLogger.DEPRECATION_LOGGER:Lorg/hibernate/internal/log/DeprecationLogger;
       3: invokeinterface #256,  1          // InterfaceMethod org/hibernate/internal/log/DeprecationLogger.logUseOfDeprecatedConnectionHandlingSettings:()V
       8: aload_1
       9: ifnonnull     18
      12: getstatic     #257                // Field org/hibernate/ConnectionAcquisitionMode.AS_NEEDED:Lorg/hibernate/ConnectionAcquisitionMode;
      15: goto          19
      18: aload_1
      19: astore        5
      21: aload_2
      22: ifnonnull     89
      25: ldc           #252                // String hibernate.connection.release_mode
      27: aload_3
      28: ldc_w         #258                // String auto
      31: invokestatic  #259                // Method org/hibernate/internal/util/config/ConfigurationHelper.getString:(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;
      34: astore        7
      36: getstatic     #260                // Field $assertionsDisabled:Z
      39: ifne          61
      42: ldc_w         #258                // String auto
      45: aload         7
      47: invokevirtual #261                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      50: ifne          61
      53: new           #262                // class java/lang/AssertionError
      56: dup
      57: invokespecial #263                // Method java/lang/AssertionError."<init>":()V
      60: athrow
      61: aload         5
      63: getstatic     #264                // Field org/hibernate/ConnectionAcquisitionMode.IMMEDIATELY:Lorg/hibernate/ConnectionAcquisitionMode;
      66: if_acmpne     77
      69: getstatic     #265                // Field org/hibernate/ConnectionReleaseMode.ON_CLOSE:Lorg/hibernate/ConnectionReleaseMode;
      72: astore        6
      74: goto          86
      77: aload         4
      79: invokeinterface #266,  1          // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinatorBuilder.getDefaultConnectionReleaseMode:()Lorg/hibernate/ConnectionReleaseMode;
      84: astore        6
      86: goto          92
      89: aload_2
      90: astore        6
      92: aload         5
      94: aload         6
      96: invokestatic  #267                // Method org/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode.interpret:(Lorg/hibernate/ConnectionAcquisitionMode;Lorg/hibernate/ConnectionReleaseMode;)Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
      99: areturn

  public java.lang.String getUuid();
    Code:
       0: aload_0
       1: getfield      #5                  // Field uuid:Ljava/lang/String;
       4: areturn

  public org.hibernate.boot.registry.StandardServiceRegistry getServiceRegistry();
    Code:
       0: aload_0
       1: getfield      #13                 // Field serviceRegistry:Lorg/hibernate/boot/registry/StandardServiceRegistry;
       4: areturn

  public boolean isJpaBootstrap();
    Code:
       0: aload_0
       1: getfield      #15                 // Field jpaBootstrap:Z
       4: ireturn

  public boolean isJtaTransactionAccessEnabled();
    Code:
       0: aload_0
       1: getfield      #47                 // Field jtaTransactionAccessEnabled:Z
       4: ireturn

  public boolean isAllowRefreshDetachedEntity();
    Code:
       0: aload_0
       1: getfield      #49                 // Field allowRefreshDetachedEntity:Z
       4: ireturn

  public boolean isAllowOutOfTransactionUpdateOperations();
    Code:
       0: aload_0
       1: getfield      #202                // Field allowOutOfTransactionUpdateOperations:Z
       4: ireturn

  public boolean isReleaseResourcesOnCloseEnabled();
    Code:
       0: aload_0
       1: getfield      #204                // Field releaseResourcesOnCloseEnabled:Z
       4: ireturn

  public java.lang.Object getBeanManagerReference();
    Code:
       0: aload_0
       1: getfield      #33                 // Field beanManagerReference:Ljava/lang/Object;
       4: areturn

  public java.lang.Object getValidatorFactoryReference();
    Code:
       0: aload_0
       1: getfield      #35                 // Field validatorFactoryReference:Ljava/lang/Object;
       4: areturn

  public java.lang.String getSessionFactoryName();
    Code:
       0: aload_0
       1: getfield      #38                 // Field sessionFactoryName:Ljava/lang/String;
       4: areturn

  public boolean isSessionFactoryNameAlsoJndiName();
    Code:
       0: aload_0
       1: getfield      #45                 // Field sessionFactoryNameAlsoJndiName:Z
       4: ireturn

  public boolean isFlushBeforeCompletionEnabled();
    Code:
       0: aload_0
       1: getfield      #51                 // Field flushBeforeCompletionEnabled:Z
       4: ireturn

  public boolean isAutoCloseSessionEnabled();
    Code:
       0: aload_0
       1: getfield      #53                 // Field autoCloseSessionEnabled:Z
       4: ireturn

  public boolean isStatisticsEnabled();
    Code:
       0: aload_0
       1: getfield      #55                 // Field statisticsEnabled:Z
       4: ireturn

  public org.hibernate.Interceptor getInterceptor();
    Code:
       0: aload_0
       1: getfield      #57                 // Field interceptor:Lorg/hibernate/Interceptor;
       4: ifnonnull     13
       7: getstatic     #268                // Field org/hibernate/EmptyInterceptor.INSTANCE:Lorg/hibernate/Interceptor;
      10: goto          17
      13: aload_0
      14: getfield      #57                 // Field interceptor:Lorg/hibernate/Interceptor;
      17: areturn

  public java.lang.Class<? extends org.hibernate.Interceptor> getStatelessInterceptorImplementor();
    Code:
       0: aload_0
       1: getfield      #269                // Field statelessInterceptorClass:Ljava/lang/Class;
       4: areturn

  public java.util.function.Supplier<? extends org.hibernate.Interceptor> getStatelessInterceptorImplementorSupplier();
    Code:
       0: aload_0
       1: getfield      #59                 // Field statelessInterceptorSupplier:Ljava/util/function/Supplier;
       4: areturn

  public org.hibernate.resource.jdbc.spi.StatementInspector getStatementInspector();
    Code:
       0: aload_0
       1: getfield      #63                 // Field statementInspector:Lorg/hibernate/resource/jdbc/spi/StatementInspector;
       4: areturn

  public org.hibernate.SessionFactoryObserver[] getSessionFactoryObservers();
    Code:
       0: aload_0
       1: getfield      #8                  // Field sessionFactoryObserverList:Ljava/util/List;
       4: aload_0
       5: getfield      #8                  // Field sessionFactoryObserverList:Ljava/util/List;
       8: invokeinterface #270,  1          // InterfaceMethod java/util/List.size:()I
      13: anewarray     #271                // class org/hibernate/SessionFactoryObserver
      16: invokeinterface #272,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      21: checkcast     #273                // class "[Lorg/hibernate/SessionFactoryObserver;"
      24: areturn

  public org.hibernate.cfg.BaselineSessionEventsListenerBuilder getBaselineSessionEventsListenerBuilder();
    Code:
       0: aload_0
       1: getfield      #70                 // Field baselineSessionEventsListenerBuilder:Lorg/hibernate/cfg/BaselineSessionEventsListenerBuilder;
       4: areturn

  public boolean isIdentifierRollbackEnabled();
    Code:
       0: aload_0
       1: getfield      #79                 // Field identifierRollbackEnabled:Z
       4: ireturn

  public org.hibernate.EntityMode getDefaultEntityMode();
    Code:
       0: aload_0
       1: getfield      #82                 // Field defaultEntityMode:Lorg/hibernate/EntityMode;
       4: areturn

  public org.hibernate.tuple.entity.EntityTuplizerFactory getEntityTuplizerFactory();
    Code:
       0: aload_0
       1: getfield      #12                 // Field entityTuplizerFactory:Lorg/hibernate/tuple/entity/EntityTuplizerFactory;
       4: areturn

  public boolean isCheckNullability();
    Code:
       0: aload_0
       1: getfield      #84                 // Field checkNullability:Z
       4: ireturn

  public boolean isInitializeLazyStateOutsideTransactionsEnabled();
    Code:
       0: aload_0
       1: getfield      #86                 // Field initializeLazyStateOutsideTransactions:Z
       4: ireturn

  public org.hibernate.hql.spi.id.MultiTableBulkIdStrategy getMultiTableBulkIdStrategy();
    Code:
       0: aload_0
       1: getfield      #95                 // Field multiTableBulkIdStrategy:Lorg/hibernate/hql/spi/id/MultiTableBulkIdStrategy;
       4: areturn

  public org.hibernate.boot.TempTableDdlTransactionHandling getTempTableDdlTransactionHandling();
    Code:
       0: aload_0
       1: getfield      #172                // Field tempTableDdlTransactionHandling:Lorg/hibernate/boot/TempTableDdlTransactionHandling;
       4: areturn

  public org.hibernate.loader.BatchFetchStyle getBatchFetchStyle();
    Code:
       0: aload_0
       1: getfield      #98                 // Field batchFetchStyle:Lorg/hibernate/loader/BatchFetchStyle;
       4: areturn

  public boolean isDelayBatchFetchLoaderCreationsEnabled();
    Code:
       0: aload_0
       1: getfield      #100                // Field delayBatchFetchLoaderCreations:Z
       4: ireturn

  public int getDefaultBatchFetchSize();
    Code:
       0: aload_0
       1: getfield      #103                // Field defaultBatchFetchSize:I
       4: ireturn

  public java.lang.Integer getMaximumFetchDepth();
    Code:
       0: aload_0
       1: getfield      #106                // Field maximumFetchDepth:Ljava/lang/Integer;
       4: areturn

  public org.hibernate.NullPrecedence getDefaultNullPrecedence();
    Code:
       0: aload_0
       1: getfield      #113                // Field defaultNullPrecedence:Lorg/hibernate/NullPrecedence;
       4: areturn

  public boolean isOrderUpdatesEnabled();
    Code:
       0: aload_0
       1: getfield      #116                // Field orderUpdatesEnabled:Z
       4: ireturn

  public boolean isOrderInsertsEnabled();
    Code:
       0: aload_0
       1: getfield      #118                // Field orderInsertsEnabled:Z
       4: ireturn

  public org.hibernate.MultiTenancyStrategy getMultiTenancyStrategy();
    Code:
       0: aload_0
       1: getfield      #88                 // Field multiTenancyStrategy:Lorg/hibernate/MultiTenancyStrategy;
       4: areturn

  public org.hibernate.context.spi.CurrentTenantIdentifierResolver getCurrentTenantIdentifierResolver();
    Code:
       0: aload_0
       1: getfield      #91                 // Field currentTenantIdentifierResolver:Lorg/hibernate/context/spi/CurrentTenantIdentifierResolver;
       4: areturn

  public boolean isJtaTrackByThread();
    Code:
       0: aload_0
       1: getfield      #122                // Field jtaTrackByThread:Z
       4: ireturn

  public java.util.Map getQuerySubstitutions();
    Code:
       0: aload_0
       1: getfield      #126                // Field querySubstitutions:Ljava/util/Map;
       4: areturn

  public boolean isNamedQueryStartupCheckingEnabled();
    Code:
       0: aload_0
       1: getfield      #128                // Field namedQueryStartupCheckingEnabled:Z
       4: ireturn

  public boolean isConventionalJavaConstants();
    Code:
       0: aload_0
       1: getfield      #130                // Field conventionalJavaConstants:Z
       4: ireturn

  public boolean isProcedureParameterNullPassingEnabled();
    Code:
       0: aload_0
       1: getfield      #132                // Field procedureParameterNullPassingEnabled:Z
       4: ireturn

  public boolean isCollectionJoinSubqueryRewriteEnabled();
    Code:
       0: aload_0
       1: getfield      #134                // Field collectionJoinSubqueryRewriteEnabled:Z
       4: ireturn

  public boolean isSecondLevelCacheEnabled();
    Code:
       0: aload_0
       1: getfield      #139                // Field secondLevelCacheEnabled:Z
       4: ireturn

  public boolean isQueryCacheEnabled();
    Code:
       0: aload_0
       1: getfield      #141                // Field queryCacheEnabled:Z
       4: ireturn

  public org.hibernate.cache.spi.TimestampsCacheFactory getTimestampsCacheFactory();
    Code:
       0: aload_0
       1: getfield      #145                // Field timestampsCacheFactory:Lorg/hibernate/cache/spi/TimestampsCacheFactory;
       4: areturn

  public java.lang.String getCacheRegionPrefix();
    Code:
       0: aload_0
       1: getfield      #148                // Field cacheRegionPrefix:Ljava/lang/String;
       4: areturn

  public boolean isMinimalPutsEnabled();
    Code:
       0: aload_0
       1: getfield      #151                // Field minimalPutsEnabled:Z
       4: ireturn

  public boolean isStructuredCacheEntriesEnabled();
    Code:
       0: aload_0
       1: getfield      #153                // Field structuredCacheEntriesEnabled:Z
       4: ireturn

  public boolean isDirectReferenceCacheEntriesEnabled();
    Code:
       0: aload_0
       1: getfield      #155                // Field directReferenceCacheEntriesEnabled:Z
       4: ireturn

  public boolean isAutoEvictCollectionCache();
    Code:
       0: aload_0
       1: getfield      #157                // Field autoEvictCollectionCache:Z
       4: ireturn

  public org.hibernate.boot.SchemaAutoTooling getSchemaAutoTooling();
    Code:
       0: aload_0
       1: getfield      #160                // Field schemaAutoTooling:Lorg/hibernate/boot/SchemaAutoTooling;
       4: areturn

  public int getJdbcBatchSize();
    Code:
       0: aload_0
       1: getfield      #178                // Field jdbcBatchSize:I
       4: ireturn

  public boolean isJdbcBatchVersionedData();
    Code:
       0: aload_0
       1: getfield      #182                // Field jdbcBatchVersionedData:Z
       4: ireturn

  public boolean isScrollableResultSetsEnabled();
    Code:
       0: aload_0
       1: getfield      #185                // Field scrollableResultSetsEnabled:Z
       4: ireturn

  public boolean isWrapResultSetsEnabled();
    Code:
       0: aload_0
       1: getfield      #187                // Field wrapResultSetsEnabled:Z
       4: ireturn

  public boolean isGetGeneratedKeysEnabled();
    Code:
       0: aload_0
       1: getfield      #190                // Field getGeneratedKeysEnabled:Z
       4: ireturn

  public java.lang.Integer getJdbcFetchSize();
    Code:
       0: aload_0
       1: getfield      #192                // Field jdbcFetchSize:Ljava/lang/Integer;
       4: areturn

  public org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode getPhysicalConnectionHandlingMode();
    Code:
       0: aload_0
       1: getfield      #194                // Field connectionHandlingMode:Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
       4: areturn

  public void setCheckNullability(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #84                 // Field checkNullability:Z
       5: return

  public org.hibernate.ConnectionReleaseMode getConnectionReleaseMode();
    Code:
       0: aload_0
       1: invokevirtual #274                // Method getPhysicalConnectionHandlingMode:()Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
       4: invokevirtual #275                // Method org/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode.getReleaseMode:()Lorg/hibernate/ConnectionReleaseMode;
       7: areturn

  public boolean doesConnectionProviderDisableAutoCommit();
    Code:
       0: aload_0
       1: getfield      #196                // Field connectionProviderDisablesAutoCommit:Z
       4: ireturn

  public boolean isCommentsEnabled();
    Code:
       0: aload_0
       1: getfield      #198                // Field commentsEnabled:Z
       4: ireturn

  public org.hibernate.CustomEntityDirtinessStrategy getCustomEntityDirtinessStrategy();
    Code:
       0: aload_0
       1: getfield      #75                 // Field customEntityDirtinessStrategy:Lorg/hibernate/CustomEntityDirtinessStrategy;
       4: areturn

  public org.hibernate.EntityNameResolver[] getEntityNameResolvers();
    Code:
       0: aload_0
       1: getfield      #9                  // Field entityNameResolvers:Ljava/util/List;
       4: aload_0
       5: getfield      #9                  // Field entityNameResolvers:Ljava/util/List;
       8: invokeinterface #270,  1          // InterfaceMethod java/util/List.size:()I
      13: anewarray     #276                // class org/hibernate/EntityNameResolver
      16: invokeinterface #272,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      21: checkcast     #277                // class "[Lorg/hibernate/EntityNameResolver;"
      24: areturn

  public org.hibernate.proxy.EntityNotFoundDelegate getEntityNotFoundDelegate();
    Code:
       0: aload_0
       1: getfield      #77                 // Field entityNotFoundDelegate:Lorg/hibernate/proxy/EntityNotFoundDelegate;
       4: areturn

  public java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction> getCustomSqlFunctionMap();
    Code:
       0: aload_0
       1: getfield      #278                // Field sqlFunctions:Ljava/util/Map;
       4: ifnonnull     13
       7: invokestatic  #279                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      10: goto          17
      13: aload_0
      14: getfield      #278                // Field sqlFunctions:Ljava/util/Map;
      17: areturn

  public boolean isPreferUserTransaction();
    Code:
       0: aload_0
       1: getfield      #200                // Field preferUserTransaction:Z
       4: ireturn

  public java.util.TimeZone getJdbcTimeZone();
    Code:
       0: aload_0
       1: getfield      #207                // Field jdbcTimeZone:Ljava/util/TimeZone;
       4: areturn

  public boolean isQueryParametersValidationEnabled();
    Code:
       0: aload_0
       1: getfield      #217                // Field queryParametersValidationEnabled:Z
       4: ireturn

  public org.hibernate.query.criteria.LiteralHandlingMode getCriteriaLiteralHandlingMode();
    Code:
       0: aload_0
       1: getfield      #220                // Field criteriaLiteralHandlingMode:Lorg/hibernate/query/criteria/LiteralHandlingMode;
       4: areturn

  public org.hibernate.query.ImmutableEntityUpdateQueryHandlingMode getImmutableEntityUpdateQueryHandlingMode();
    Code:
       0: aload_0
       1: getfield      #229                // Field immutableEntityUpdateQueryHandlingMode:Lorg/hibernate/query/ImmutableEntityUpdateQueryHandlingMode;
       4: areturn

  public boolean jdbcStyleParamsZeroBased();
    Code:
       0: aload_0
       1: getfield      #222                // Field jdbcStyleParamsZeroBased:Z
       4: ireturn

  public boolean isFailOnPaginationOverCollectionFetchEnabled();
    Code:
       0: aload_0
       1: getfield      #226                // Field failOnPaginationOverCollectionFetchEnabled:Z
       4: ireturn

  public boolean inClauseParameterPaddingEnabled();
    Code:
       0: aload_0
       1: getfield      #231                // Field inClauseParameterPaddingEnabled:Z
       4: ireturn

  public org.hibernate.jpa.spi.JpaCompliance getJpaCompliance();
    Code:
       0: aload_0
       1: getfield      #224                // Field jpaCompliance:Lorg/hibernate/jpa/spi/JpaCompliance;
       4: areturn

  public boolean nativeExceptionHandling51Compliance();
    Code:
       0: aload_0
       1: getfield      #233                // Field nativeExceptionHandling51Compliance:Z
       4: ireturn

  public boolean isEnhancementAsProxyEnabled();
    Code:
       0: aload_0
       1: getfield      #120                // Field enhancementAsProxyEnabled:Z
       4: ireturn

  public void applyBeanManager(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field beanManagerReference:Ljava/lang/Object;
       5: return

  public void applyValidatorFactory(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field validatorFactoryReference:Ljava/lang/Object;
       5: return

  public void applySessionFactoryName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field sessionFactoryName:Ljava/lang/String;
       5: return

  public void enableSessionFactoryNameAsJndiName(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #45                 // Field sessionFactoryNameAlsoJndiName:Z
       5: return

  public void enableSessionAutoClosing(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #53                 // Field autoCloseSessionEnabled:Z
       5: return

  public void enableSessionAutoFlushing(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #51                 // Field flushBeforeCompletionEnabled:Z
       5: return

  public void enableJtaTrackingByThread(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #122                // Field jtaTrackByThread:Z
       5: return

  public void enablePreferUserTransaction(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #200                // Field preferUserTransaction:Z
       5: return

  public void enableStatisticsSupport(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #55                 // Field statisticsEnabled:Z
       5: return

  public void addSessionFactoryObservers(org.hibernate.SessionFactoryObserver...);
    Code:
       0: aload_0
       1: getfield      #8                  // Field sessionFactoryObserverList:Ljava/util/List;
       4: aload_1
       5: invokestatic  #280                // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
       8: pop
       9: return

  public void applyInterceptor(org.hibernate.Interceptor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field interceptor:Lorg/hibernate/Interceptor;
       5: return

  public void applyStatelessInterceptor(java.lang.Class<? extends org.hibernate.Interceptor>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #269                // Field statelessInterceptorClass:Ljava/lang/Class;
       5: return

  public void applyStatelessInterceptorSupplier(java.util.function.Supplier<? extends org.hibernate.Interceptor>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #59                 // Field statelessInterceptorSupplier:Ljava/util/function/Supplier;
       5: return

  public void applyStatementInspector(org.hibernate.resource.jdbc.spi.StatementInspector);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #63                 // Field statementInspector:Lorg/hibernate/resource/jdbc/spi/StatementInspector;
       5: return

  public void applyCustomEntityDirtinessStrategy(org.hibernate.CustomEntityDirtinessStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #75                 // Field customEntityDirtinessStrategy:Lorg/hibernate/CustomEntityDirtinessStrategy;
       5: return

  public void addEntityNameResolvers(org.hibernate.EntityNameResolver...);
    Code:
       0: aload_0
       1: getfield      #9                  // Field entityNameResolvers:Ljava/util/List;
       4: aload_1
       5: invokestatic  #280                // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
       8: pop
       9: return

  public void applyEntityNotFoundDelegate(org.hibernate.proxy.EntityNotFoundDelegate);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #77                 // Field entityNotFoundDelegate:Lorg/hibernate/proxy/EntityNotFoundDelegate;
       5: return

  public void enableIdentifierRollbackSupport(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #79                 // Field identifierRollbackEnabled:Z
       5: return

  public void applyDefaultEntityMode(org.hibernate.EntityMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #82                 // Field defaultEntityMode:Lorg/hibernate/EntityMode;
       5: return

  public void enableNullabilityChecking(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #84                 // Field checkNullability:Z
       5: return

  public void allowLazyInitializationOutsideTransaction(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #86                 // Field initializeLazyStateOutsideTransactions:Z
       5: return

  public void applyEntityTuplizerFactory(org.hibernate.tuple.entity.EntityTuplizerFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field entityTuplizerFactory:Lorg/hibernate/tuple/entity/EntityTuplizerFactory;
       5: return

  public void applyEntityTuplizer(org.hibernate.EntityMode, java.lang.Class<? extends org.hibernate.tuple.entity.EntityTuplizer>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field entityTuplizerFactory:Lorg/hibernate/tuple/entity/EntityTuplizerFactory;
       4: aload_1
       5: aload_2
       6: invokevirtual #281                // Method org/hibernate/tuple/entity/EntityTuplizerFactory.registerDefaultTuplizerClass:(Lorg/hibernate/EntityMode;Ljava/lang/Class;)V
       9: return

  public void applyMultiTableBulkIdStrategy(org.hibernate.hql.spi.id.MultiTableBulkIdStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #95                 // Field multiTableBulkIdStrategy:Lorg/hibernate/hql/spi/id/MultiTableBulkIdStrategy;
       5: return

  public void applyTempTableDdlTransactionHandling(org.hibernate.boot.TempTableDdlTransactionHandling);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #172                // Field tempTableDdlTransactionHandling:Lorg/hibernate/boot/TempTableDdlTransactionHandling;
       5: return

  public void applyBatchFetchStyle(org.hibernate.loader.BatchFetchStyle);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #98                 // Field batchFetchStyle:Lorg/hibernate/loader/BatchFetchStyle;
       5: return

  public void applyDelayedEntityLoaderCreations(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #100                // Field delayBatchFetchLoaderCreations:Z
       5: return

  public void applyDefaultBatchFetchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #103                // Field defaultBatchFetchSize:I
       5: return

  public void applyMaximumFetchDepth(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #282                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #106                // Field maximumFetchDepth:Ljava/lang/Integer;
       8: return

  public void applyDefaultNullPrecedence(org.hibernate.NullPrecedence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #113                // Field defaultNullPrecedence:Lorg/hibernate/NullPrecedence;
       5: return

  public void enableOrderingOfInserts(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #118                // Field orderInsertsEnabled:Z
       5: return

  public void enableOrderingOfUpdates(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #116                // Field orderUpdatesEnabled:Z
       5: return

  public void applyMultiTenancyStrategy(org.hibernate.MultiTenancyStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #88                 // Field multiTenancyStrategy:Lorg/hibernate/MultiTenancyStrategy;
       5: return

  public void applyCurrentTenantIdentifierResolver(org.hibernate.context.spi.CurrentTenantIdentifierResolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #91                 // Field currentTenantIdentifierResolver:Lorg/hibernate/context/spi/CurrentTenantIdentifierResolver;
       5: return

  public void applyQuerySubstitutions(java.util.Map);
    Code:
       0: aload_0
       1: getfield      #126                // Field querySubstitutions:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      10: return

  public void enableNamedQueryCheckingOnStartup(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #128                // Field namedQueryStartupCheckingEnabled:Z
       5: return

  public void enableSecondLevelCacheSupport(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #139                // Field secondLevelCacheEnabled:Z
       5: return

  public void enableQueryCacheSupport(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #141                // Field queryCacheEnabled:Z
       5: return

  public void applyTimestampsCacheFactory(org.hibernate.cache.spi.TimestampsCacheFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #145                // Field timestampsCacheFactory:Lorg/hibernate/cache/spi/TimestampsCacheFactory;
       5: return

  public void applyCacheRegionPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #148                // Field cacheRegionPrefix:Ljava/lang/String;
       5: return

  public void enableMinimalPuts(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #151                // Field minimalPutsEnabled:Z
       5: return

  public void enabledStructuredCacheEntries(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #153                // Field structuredCacheEntriesEnabled:Z
       5: return

  public void allowDirectReferenceCacheEntries(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #155                // Field directReferenceCacheEntriesEnabled:Z
       5: return

  public void enableAutoEvictCollectionCaches(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #157                // Field autoEvictCollectionCache:Z
       5: return

  public void applyJdbcBatchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #178                // Field jdbcBatchSize:I
       5: return

  public void enableJdbcBatchingForVersionedEntities(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #182                // Field jdbcBatchVersionedData:Z
       5: return

  public void enableScrollableResultSupport(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #185                // Field scrollableResultSetsEnabled:Z
       5: return

  public void enableResultSetWrappingSupport(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #187                // Field wrapResultSetsEnabled:Z
       5: return

  public void enableGeneratedKeysSupport(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #190                // Field getGeneratedKeysEnabled:Z
       5: return

  public void applyJdbcFetchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #282                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #192                // Field jdbcFetchSize:Ljava/lang/Integer;
       8: return

  public void applyConnectionHandlingMode(org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #194                // Field connectionHandlingMode:Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
       5: return

  public void applyConnectionReleaseMode(org.hibernate.ConnectionReleaseMode);
    Code:
       0: aload_0
       1: getfield      #194                // Field connectionHandlingMode:Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
       4: ifnonnull     21
       7: aload_0
       8: getstatic     #257                // Field org/hibernate/ConnectionAcquisitionMode.AS_NEEDED:Lorg/hibernate/ConnectionAcquisitionMode;
      11: aload_1
      12: invokestatic  #267                // Method org/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode.interpret:(Lorg/hibernate/ConnectionAcquisitionMode;Lorg/hibernate/ConnectionReleaseMode;)Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
      15: putfield      #194                // Field connectionHandlingMode:Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
      18: goto          36
      21: aload_0
      22: aload_0
      23: getfield      #194                // Field connectionHandlingMode:Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
      26: invokevirtual #283                // Method org/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode.getAcquisitionMode:()Lorg/hibernate/ConnectionAcquisitionMode;
      29: aload_1
      30: invokestatic  #267                // Method org/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode.interpret:(Lorg/hibernate/ConnectionAcquisitionMode;Lorg/hibernate/ConnectionReleaseMode;)Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
      33: putfield      #194                // Field connectionHandlingMode:Lorg/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode;
      36: return

  public void applyConnectionProviderDisablesAutoCommit(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #196                // Field connectionProviderDisablesAutoCommit:Z
       5: return

  public void enableCommentsSupport(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #198                // Field commentsEnabled:Z
       5: return

  public void applySqlFunction(java.lang.String, org.hibernate.dialect.function.SQLFunction);
    Code:
       0: aload_0
       1: getfield      #278                // Field sqlFunctions:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #20                 // class java/util/HashMap
      11: dup
      12: invokespecial #21                 // Method java/util/HashMap."<init>":()V
      15: putfield      #278                // Field sqlFunctions:Ljava/util/Map;
      18: aload_0
      19: getfield      #278                // Field sqlFunctions:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #284,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: return

  public void allowOutOfTransactionUpdateOperations(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #202                // Field allowOutOfTransactionUpdateOperations:Z
       5: return

  public void enableReleaseResourcesOnClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #204                // Field releaseResourcesOnCloseEnabled:Z
       5: return

  public void enableStrictJpaQueryLanguageCompliance(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #285                // Method enableJpaQueryCompliance:(Z)V
       5: return

  public void enableJpaQueryCompliance(boolean);
    Code:
       0: aload_0
       1: invokespecial #286                // Method mutableJpaCompliance:()Lorg/hibernate/jpa/spi/MutableJpaCompliance;
       4: iload_1
       5: invokeinterface #287,  2          // InterfaceMethod org/hibernate/jpa/spi/MutableJpaCompliance.setQueryCompliance:(Z)V
      10: return

  private org.hibernate.jpa.spi.MutableJpaCompliance mutableJpaCompliance();
    Code:
       0: ldc_w         #288                // class org/hibernate/jpa/spi/MutableJpaCompliance
       3: aload_0
       4: getfield      #224                // Field jpaCompliance:Lorg/hibernate/jpa/spi/JpaCompliance;
       7: invokevirtual #137                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      10: ifne          24
      13: new           #289                // class java/lang/IllegalStateException
      16: dup
      17: ldc_w         #290                // String JpaCompliance is no longer mutable
      20: invokespecial #291                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #224                // Field jpaCompliance:Lorg/hibernate/jpa/spi/JpaCompliance;
      28: checkcast     #288                // class org/hibernate/jpa/spi/MutableJpaCompliance
      31: areturn

  public void enableJpaTransactionCompliance(boolean);
    Code:
       0: aload_0
       1: invokespecial #286                // Method mutableJpaCompliance:()Lorg/hibernate/jpa/spi/MutableJpaCompliance;
       4: iload_1
       5: invokeinterface #292,  2          // InterfaceMethod org/hibernate/jpa/spi/MutableJpaCompliance.setTransactionCompliance:(Z)V
      10: return

  public void enableJpaListCompliance(boolean);
    Code:
       0: aload_0
       1: invokespecial #286                // Method mutableJpaCompliance:()Lorg/hibernate/jpa/spi/MutableJpaCompliance;
       4: iload_1
       5: invokeinterface #293,  2          // InterfaceMethod org/hibernate/jpa/spi/MutableJpaCompliance.setListCompliance:(Z)V
      10: return

  public void enableJpaClosedCompliance(boolean);
    Code:
       0: aload_0
       1: invokespecial #286                // Method mutableJpaCompliance:()Lorg/hibernate/jpa/spi/MutableJpaCompliance;
       4: iload_1
       5: invokeinterface #294,  2          // InterfaceMethod org/hibernate/jpa/spi/MutableJpaCompliance.setClosedCompliance:(Z)V
      10: return

  public void enableJpaProxyCompliance(boolean);
    Code:
       0: aload_0
       1: invokespecial #286                // Method mutableJpaCompliance:()Lorg/hibernate/jpa/spi/MutableJpaCompliance;
       4: iload_1
       5: invokeinterface #295,  2          // InterfaceMethod org/hibernate/jpa/spi/MutableJpaCompliance.setProxyCompliance:(Z)V
      10: return

  public void enableJpaCachingCompliance(boolean);
    Code:
       0: aload_0
       1: invokespecial #286                // Method mutableJpaCompliance:()Lorg/hibernate/jpa/spi/MutableJpaCompliance;
       4: iload_1
       5: invokeinterface #296,  2          // InterfaceMethod org/hibernate/jpa/spi/MutableJpaCompliance.setCachingCompliance:(Z)V
      10: return

  public void disableRefreshDetachedEntity();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #49                 // Field allowRefreshDetachedEntity:Z
       5: return

  public void disableJtaTransactionAccess();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #47                 // Field jtaTransactionAccessEnabled:Z
       5: return

  public void enableJdbcStyleParamsZeroBased();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #222                // Field jdbcStyleParamsZeroBased:Z
       5: return

  public org.hibernate.boot.spi.SessionFactoryOptions buildOptions();
    Code:
       0: ldc_w         #288                // class org/hibernate/jpa/spi/MutableJpaCompliance
       3: aload_0
       4: getfield      #224                // Field jpaCompliance:Lorg/hibernate/jpa/spi/JpaCompliance;
       7: invokevirtual #137                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      10: ifeq          26
      13: aload_0
      14: aload_0
      15: invokespecial #286                // Method mutableJpaCompliance:()Lorg/hibernate/jpa/spi/MutableJpaCompliance;
      18: invokeinterface #297,  1          // InterfaceMethod org/hibernate/jpa/spi/MutableJpaCompliance.immutableCopy:()Lorg/hibernate/jpa/spi/JpaCompliance;
      23: putfield      #224                // Field jpaCompliance:Lorg/hibernate/jpa/spi/JpaCompliance;
      26: aload_0
      27: areturn

  private static org.hibernate.Interceptor lambda$interceptorSupplier$0(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #298                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
       4: checkcast     #239                // class org/hibernate/Interceptor
       7: areturn
       8: astore_1
       9: new           #301                // class org/hibernate/HibernateException
      12: dup
      13: ldc_w         #302                // String Could not supply session-scoped SessionFactory Interceptor
      16: aload_1
      17: invokespecial #303                // Method org/hibernate/HibernateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      20: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/InstantiationException
           0     7     8   Class java/lang/IllegalAccessException

  static {};
    Code:
       0: ldc_w         #304                // class org/hibernate/boot/internal/SessionFactoryOptionsBuilder
       3: invokevirtual #305                // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #260                // Field $assertionsDisabled:Z
      17: ldc_w         #304                // class org/hibernate/boot/internal/SessionFactoryOptionsBuilder
      20: invokestatic  #306                // Method org/hibernate/internal/CoreLogging.messageLogger:(Ljava/lang/Class;)Lorg/hibernate/internal/CoreMessageLogger;
      23: putstatic     #162                // Field log:Lorg/hibernate/internal/CoreMessageLogger;
      26: return
}
