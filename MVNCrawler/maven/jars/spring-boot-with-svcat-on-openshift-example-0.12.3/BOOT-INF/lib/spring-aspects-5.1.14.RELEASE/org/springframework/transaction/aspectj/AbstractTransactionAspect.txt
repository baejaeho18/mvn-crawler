Compiled from "AbstractTransactionAspect.aj"
public abstract class org.springframework.transaction.aspectj.AbstractTransactionAspect extends org.springframework.transaction.interceptor.TransactionAspectSupport implements org.springframework.beans.factory.DisposableBean {
  protected org.springframework.transaction.aspectj.AbstractTransactionAspect(org.springframework.transaction.interceptor.TransactionAttributeSource);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #14                 // Method setTransactionAttributeSource:(Lorg/springframework/transaction/interceptor/TransactionAttributeSource;)V
       9: return

  public void destroy();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method clearTransactionManagerCache:()V
       4: return

  public java.lang.Object ajc$around$org_springframework_transaction_aspectj_AbstractTransactionAspect$1$2a73e96c(java.lang.Object, org.aspectj.runtime.internal.AroundClosure, org.aspectj.lang.JoinPoint$StaticPart);
    Code:
       0: aload_3
       1: invokeinterface #38,  1           // InterfaceMethod org/aspectj/lang/JoinPoint$StaticPart.getSignature:()Lorg/aspectj/lang/Signature;
       6: checkcast     #44                 // class org/aspectj/lang/reflect/MethodSignature
       9: astore        4
      11: aload_0
      12: aload         4
      14: invokeinterface #46,  1           // InterfaceMethod org/aspectj/lang/reflect/MethodSignature.getMethod:()Ljava/lang/reflect/Method;
      19: aload_1
      20: invokevirtual #50                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: new           #56                 // class org/springframework/transaction/aspectj/AbstractTransactionAspect$AbstractTransactionAspect$1
      26: dup
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokespecial #58                 // Method org/springframework/transaction/aspectj/AbstractTransactionAspect$AbstractTransactionAspect$1."<init>":(Lorg/springframework/transaction/aspectj/AbstractTransactionAspect;Ljava/lang/Object;Lorg/aspectj/runtime/internal/AroundClosure;)V
      33: invokevirtual #61                 // Method invokeWithinTransaction:(Ljava/lang/reflect/Method;Ljava/lang/Class;Lorg/springframework/transaction/interceptor/TransactionAspectSupport$InvocationCallback;)Ljava/lang/Object;
      36: areturn
      37: astore        5
      39: aload         5
      41: athrow
      42: astore        5
      44: aload         5
      46: invokestatic  #65                 // Method org/springframework/transaction/aspectj/AbstractTransactionAspect$Rethrower.rethrow:(Ljava/lang/Throwable;)V
      49: new           #71                 // class java/lang/IllegalStateException
      52: dup
      53: ldc           #73                 // String Should never get here
      55: aload         5
      57: invokespecial #75                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      60: athrow
    Exception table:
       from    to  target type
          11    36    37   Class java/lang/RuntimeException
          11    36    37   Class java/lang/Error
          11    36    42   Class java/lang/Throwable

  static java.lang.Object ajc$around$org_springframework_transaction_aspectj_AbstractTransactionAspect$1$2a73e96cproceed(java.lang.Object, org.aspectj.runtime.internal.AroundClosure) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #51                 // class java/lang/Object
       5: dup
       6: iconst_0
       7: aload_0
       8: aastore
       9: invokevirtual #102                // Method org/aspectj/runtime/internal/AroundClosure.run:([Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #51                 // class java/lang/Object
      15: areturn

  protected abstract void ajc$pointcut$$transactionalMethodExecution$df3(java.lang.Object);
}
