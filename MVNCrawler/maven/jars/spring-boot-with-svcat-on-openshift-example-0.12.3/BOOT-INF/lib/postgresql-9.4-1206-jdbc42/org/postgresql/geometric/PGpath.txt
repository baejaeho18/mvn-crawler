Compiled from "PGpath.java"
public class org.postgresql.geometric.PGpath extends org.postgresql.util.PGobject implements java.io.Serializable,java.lang.Cloneable {
  public boolean open;

  public org.postgresql.geometric.PGpoint[] points;

  public org.postgresql.geometric.PGpath(org.postgresql.geometric.PGpoint[], boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field open:Z
      14: return

  public org.postgresql.geometric.PGpath();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/postgresql/util/PGobject."<init>":()V
       4: aload_0
       5: ldc           #5                  // String path
       7: invokevirtual #6                  // Method setType:(Ljava/lang/String;)V
      10: return

  public org.postgresql.geometric.PGpath(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #7                  // Method setValue:(Ljava/lang/String;)V
       9: return

  public void setValue(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: ldc           #8                  // String [
       3: invokevirtual #9                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          31
       9: aload_1
      10: ldc           #10                 // String ]
      12: invokevirtual #11                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      15: ifeq          31
      18: aload_0
      19: iconst_1
      20: putfield      #3                  // Field open:Z
      23: aload_1
      24: invokestatic  #12                 // Method org/postgresql/util/PGtokenizer.removeBox:(Ljava/lang/String;)Ljava/lang/String;
      27: astore_1
      28: goto          79
      31: aload_1
      32: ldc           #13                 // String (
      34: invokevirtual #9                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      37: ifeq          62
      40: aload_1
      41: ldc           #14                 // String )
      43: invokevirtual #11                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      46: ifeq          62
      49: aload_0
      50: iconst_0
      51: putfield      #3                  // Field open:Z
      54: aload_1
      55: invokestatic  #15                 // Method org/postgresql/util/PGtokenizer.removePara:(Ljava/lang/String;)Ljava/lang/String;
      58: astore_1
      59: goto          79
      62: new           #16                 // class org/postgresql/util/PSQLException
      65: dup
      66: ldc           #17                 // String Cannot tell if path is open or closed: {0}.
      68: aload_1
      69: invokestatic  #18                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      72: getstatic     #19                 // Field org/postgresql/util/PSQLState.DATA_TYPE_MISMATCH:Lorg/postgresql/util/PSQLState;
      75: invokespecial #20                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      78: athrow
      79: new           #21                 // class org/postgresql/util/PGtokenizer
      82: dup
      83: aload_1
      84: bipush        44
      86: invokespecial #22                 // Method org/postgresql/util/PGtokenizer."<init>":(Ljava/lang/String;C)V
      89: astore_2
      90: aload_2
      91: invokevirtual #23                 // Method org/postgresql/util/PGtokenizer.getSize:()I
      94: istore_3
      95: aload_0
      96: iload_3
      97: anewarray     #24                 // class org/postgresql/geometric/PGpoint
     100: putfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
     103: iconst_0
     104: istore        4
     106: iload         4
     108: iload_3
     109: if_icmpge     138
     112: aload_0
     113: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
     116: iload         4
     118: new           #24                 // class org/postgresql/geometric/PGpoint
     121: dup
     122: aload_2
     123: iload         4
     125: invokevirtual #25                 // Method org/postgresql/util/PGtokenizer.getToken:(I)Ljava/lang/String;
     128: invokespecial #26                 // Method org/postgresql/geometric/PGpoint."<init>":(Ljava/lang/String;)V
     131: aastore
     132: iinc          4, 1
     135: goto          106
     138: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #27                 // class org/postgresql/geometric/PGpath
       4: ifeq          79
       7: aload_1
       8: checkcast     #27                 // class org/postgresql/geometric/PGpath
      11: astore_2
      12: aload_2
      13: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      16: arraylength
      17: aload_0
      18: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      21: arraylength
      22: if_icmpeq     27
      25: iconst_0
      26: ireturn
      27: aload_2
      28: getfield      #3                  // Field open:Z
      31: aload_0
      32: getfield      #3                  // Field open:Z
      35: if_icmpeq     40
      38: iconst_0
      39: ireturn
      40: iconst_0
      41: istore_3
      42: iload_3
      43: aload_0
      44: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      47: arraylength
      48: if_icmpge     77
      51: aload_0
      52: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      55: iload_3
      56: aaload
      57: aload_2
      58: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      61: iload_3
      62: aaload
      63: invokevirtual #28                 // Method org/postgresql/geometric/PGpoint.equals:(Ljava/lang/Object;)Z
      66: ifne          71
      69: iconst_0
      70: ireturn
      71: iinc          3, 1
      74: goto          42
      77: iconst_1
      78: ireturn
      79: iconst_0
      80: ireturn

  public int hashCode();
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: aload_0
       6: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
       9: arraylength
      10: if_icmpge     36
      13: iload_2
      14: iconst_5
      15: if_icmpge     36
      18: iload_1
      19: aload_0
      20: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      23: iload_2
      24: aaload
      25: invokevirtual #29                 // Method org/postgresql/geometric/PGpoint.hashCode:()I
      28: ixor
      29: istore_1
      30: iinc          2, 1
      33: goto          4
      36: iload_1
      37: ireturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method org/postgresql/util/PGobject.clone:()Ljava/lang/Object;
       4: checkcast     #27                 // class org/postgresql/geometric/PGpath
       7: astore_1
       8: aload_1
       9: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      12: ifnull        67
      15: aload_1
      16: aload_1
      17: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      20: invokevirtual #31                 // Method "[Lorg/postgresql/geometric/PGpoint;".clone:()Ljava/lang/Object;
      23: checkcast     #32                 // class "[Lorg/postgresql/geometric/PGpoint;"
      26: checkcast     #32                 // class "[Lorg/postgresql/geometric/PGpoint;"
      29: putfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      32: iconst_0
      33: istore_2
      34: iload_2
      35: aload_1
      36: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      39: arraylength
      40: if_icmpge     67
      43: aload_1
      44: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      47: iload_2
      48: aload_1
      49: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      52: iload_2
      53: aaload
      54: invokevirtual #33                 // Method org/postgresql/geometric/PGpoint.clone:()Ljava/lang/Object;
      57: checkcast     #24                 // class org/postgresql/geometric/PGpoint
      60: aastore
      61: iinc          2, 1
      64: goto          34
      67: aload_1
      68: areturn

  public java.lang.String getValue();
    Code:
       0: new           #34                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: getfield      #3                  // Field open:Z
       8: ifeq          16
      11: ldc           #8                  // String [
      13: goto          18
      16: ldc           #13                 // String (
      18: invokespecial #35                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      21: astore_1
      22: iconst_0
      23: istore_2
      24: iload_2
      25: aload_0
      26: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      29: arraylength
      30: if_icmpge     64
      33: iload_2
      34: ifle          44
      37: aload_1
      38: ldc           #36                 // String ,
      40: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: pop
      44: aload_1
      45: aload_0
      46: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      49: iload_2
      50: aaload
      51: invokevirtual #38                 // Method org/postgresql/geometric/PGpoint.toString:()Ljava/lang/String;
      54: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: pop
      58: iinc          2, 1
      61: goto          24
      64: aload_1
      65: aload_0
      66: getfield      #3                  // Field open:Z
      69: ifeq          77
      72: ldc           #10                 // String ]
      74: goto          79
      77: ldc           #14                 // String )
      79: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: pop
      83: aload_1
      84: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #3                  // Field open:Z
       4: ireturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #3                  // Field open:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void closePath();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #3                  // Field open:Z
       5: return

  public void openPath();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field open:Z
       5: return
}
