Compiled from "AbstractJdbc23SimpleDataSource.java"
public abstract class org.postgresql.ds.jdbc23.AbstractJdbc23SimpleDataSource extends org.postgresql.ds.common.BaseDataSource implements java.io.Serializable {
  public org.postgresql.ds.jdbc23.AbstractJdbc23SimpleDataSource();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/postgresql/ds/common/BaseDataSource."<init>":()V
       4: return

  public java.lang.String getDescription();
    Code:
       0: new           #2                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #4                  // String Non-Pooling DataSource from
       9: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: invokestatic  #6                  // Method org/postgresql/Driver.getVersion:()Ljava/lang/String;
      15: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: areturn

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method writeBaseObject:(Ljava/io/ObjectOutputStream;)V
       5: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method readBaseObject:(Ljava/io/ObjectInputStream;)V
       5: return
}
