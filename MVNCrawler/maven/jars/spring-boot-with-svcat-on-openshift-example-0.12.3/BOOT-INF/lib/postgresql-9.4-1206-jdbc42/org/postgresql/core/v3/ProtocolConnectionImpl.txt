Compiled from "ProtocolConnectionImpl.java"
class org.postgresql.core.v3.ProtocolConnectionImpl implements org.postgresql.core.ProtocolConnection {
  private boolean integerDateTimes;

  private final java.util.Set<java.lang.Integer> useBinaryForOids;

  private java.lang.String serverVersion;

  private int serverVersionNum;

  private int cancelPid;

  private int cancelKey;

  private boolean standardConformingStrings;

  private int transactionState;

  private java.sql.SQLWarning warnings;

  private boolean closed;

  private final java.util.ArrayList notifications;

  private final org.postgresql.core.PGStream pgStream;

  private final java.lang.String user;

  private final java.lang.String database;

  private final org.postgresql.core.v3.QueryExecutorImpl executor;

  private final org.postgresql.core.Logger logger;

  private final int connectTimeout;

  org.postgresql.core.v3.ProtocolConnectionImpl(org.postgresql.core.PGStream, java.lang.String, java.lang.String, java.util.Properties, org.postgresql.core.Logger, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashSet
       8: dup
       9: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      12: putfield      #4                  // Field useBinaryForOids:Ljava/util/Set;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field serverVersionNum:I
      20: aload_0
      21: iconst_0
      22: putfield      #6                  // Field closed:Z
      25: aload_0
      26: new           #7                  // class java/util/ArrayList
      29: dup
      30: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      33: putfield      #9                  // Field notifications:Ljava/util/ArrayList;
      36: aload_0
      37: aload_1
      38: putfield      #10                 // Field pgStream:Lorg/postgresql/core/PGStream;
      41: aload_0
      42: aload_2
      43: putfield      #11                 // Field user:Ljava/lang/String;
      46: aload_0
      47: aload_3
      48: putfield      #12                 // Field database:Ljava/lang/String;
      51: aload_0
      52: aload         5
      54: putfield      #13                 // Field logger:Lorg/postgresql/core/Logger;
      57: aload_0
      58: new           #14                 // class org/postgresql/core/v3/QueryExecutorImpl
      61: dup
      62: aload_0
      63: aload_1
      64: aload         4
      66: aload         5
      68: invokespecial #15                 // Method org/postgresql/core/v3/QueryExecutorImpl."<init>":(Lorg/postgresql/core/v3/ProtocolConnectionImpl;Lorg/postgresql/core/PGStream;Ljava/util/Properties;Lorg/postgresql/core/Logger;)V
      71: putfield      #16                 // Field executor:Lorg/postgresql/core/v3/QueryExecutorImpl;
      74: aload_0
      75: iconst_0
      76: putfield      #17                 // Field standardConformingStrings:Z
      79: aload_0
      80: iload         6
      82: putfield      #18                 // Field connectTimeout:I
      85: return

  public org.postgresql.util.HostSpec getHostSpec();
    Code:
       0: aload_0
       1: getfield      #10                 // Field pgStream:Lorg/postgresql/core/PGStream;
       4: invokevirtual #19                 // Method org/postgresql/core/PGStream.getHostSpec:()Lorg/postgresql/util/HostSpec;
       7: areturn

  public java.lang.String getUser();
    Code:
       0: aload_0
       1: getfield      #11                 // Field user:Ljava/lang/String;
       4: areturn

  public java.lang.String getDatabase();
    Code:
       0: aload_0
       1: getfield      #12                 // Field database:Ljava/lang/String;
       4: areturn

  public java.lang.String getServerVersion();
    Code:
       0: aload_0
       1: getfield      #20                 // Field serverVersion:Ljava/lang/String;
       4: areturn

  public int getServerVersionNum();
    Code:
       0: aload_0
       1: getfield      #5                  // Field serverVersionNum:I
       4: ifeq          12
       7: aload_0
       8: getfield      #5                  // Field serverVersionNum:I
      11: ireturn
      12: aload_0
      13: getfield      #20                 // Field serverVersion:Ljava/lang/String;
      16: invokestatic  #21                 // Method org/postgresql/core/Utils.parseServerVersionStr:(Ljava/lang/String;)I
      19: ireturn

  public synchronized boolean getStandardConformingStrings();
    Code:
       0: aload_0
       1: getfield      #17                 // Field standardConformingStrings:Z
       4: ireturn

  public synchronized int getTransactionState();
    Code:
       0: aload_0
       1: getfield      #22                 // Field transactionState:I
       4: ireturn

  public synchronized org.postgresql.PGNotification[] getNotifications() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field notifications:Ljava/util/ArrayList;
       4: aload_0
       5: getfield      #9                  // Field notifications:Ljava/util/ArrayList;
       8: invokevirtual #23                 // Method java/util/ArrayList.size:()I
      11: anewarray     #24                 // class org/postgresql/PGNotification
      14: invokevirtual #25                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      17: checkcast     #26                 // class "[Lorg/postgresql/PGNotification;"
      20: checkcast     #26                 // class "[Lorg/postgresql/PGNotification;"
      23: astore_1
      24: aload_0
      25: getfield      #9                  // Field notifications:Ljava/util/ArrayList;
      28: invokevirtual #27                 // Method java/util/ArrayList.clear:()V
      31: aload_1
      32: areturn

  public synchronized java.sql.SQLWarning getWarnings();
    Code:
       0: aload_0
       1: getfield      #28                 // Field warnings:Ljava/sql/SQLWarning;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #28                 // Field warnings:Ljava/sql/SQLWarning;
      10: aload_1
      11: areturn

  public org.postgresql.core.QueryExecutor getQueryExecutor();
    Code:
       0: aload_0
       1: getfield      #16                 // Field executor:Lorg/postgresql/core/v3/QueryExecutorImpl;
       4: areturn

  public void sendQueryCancel() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #13                 // Field logger:Lorg/postgresql/core/Logger;
       6: invokevirtual #29                 // Method org/postgresql/core/Logger.logDebug:()Z
       9: ifeq          58
      12: aload_0
      13: getfield      #13                 // Field logger:Lorg/postgresql/core/Logger;
      16: new           #30                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #32                 // String  FE=> CancelRequest(pid=
      25: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #34                 // Field cancelPid:I
      32: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: ldc           #36                 // String ,ckey=
      37: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: getfield      #37                 // Field cancelKey:I
      44: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      47: ldc           #38                 // String )
      49: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokevirtual #40                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
      58: new           #41                 // class org/postgresql/core/PGStream
      61: dup
      62: aload_0
      63: getfield      #10                 // Field pgStream:Lorg/postgresql/core/PGStream;
      66: invokevirtual #19                 // Method org/postgresql/core/PGStream.getHostSpec:()Lorg/postgresql/util/HostSpec;
      69: aload_0
      70: getfield      #18                 // Field connectTimeout:I
      73: invokespecial #42                 // Method org/postgresql/core/PGStream."<init>":(Lorg/postgresql/util/HostSpec;I)V
      76: astore_1
      77: aload_1
      78: bipush        16
      80: invokevirtual #43                 // Method org/postgresql/core/PGStream.SendInteger4:(I)V
      83: aload_1
      84: sipush        1234
      87: invokevirtual #44                 // Method org/postgresql/core/PGStream.SendInteger2:(I)V
      90: aload_1
      91: sipush        5678
      94: invokevirtual #44                 // Method org/postgresql/core/PGStream.SendInteger2:(I)V
      97: aload_1
      98: aload_0
      99: getfield      #34                 // Field cancelPid:I
     102: invokevirtual #43                 // Method org/postgresql/core/PGStream.SendInteger4:(I)V
     105: aload_1
     106: aload_0
     107: getfield      #37                 // Field cancelKey:I
     110: invokevirtual #43                 // Method org/postgresql/core/PGStream.SendInteger4:(I)V
     113: aload_1
     114: invokevirtual #45                 // Method org/postgresql/core/PGStream.flush:()V
     117: aload_1
     118: invokevirtual #46                 // Method org/postgresql/core/PGStream.ReceiveEOF:()V
     121: aload_1
     122: invokevirtual #47                 // Method org/postgresql/core/PGStream.close:()V
     125: aconst_null
     126: astore_1
     127: aload_1
     128: ifnull        194
     131: aload_1
     132: invokevirtual #47                 // Method org/postgresql/core/PGStream.close:()V
     135: goto          194
     138: astore_2
     139: goto          194
     142: astore_2
     143: aload_0
     144: getfield      #13                 // Field logger:Lorg/postgresql/core/Logger;
     147: invokevirtual #29                 // Method org/postgresql/core/Logger.logDebug:()Z
     150: ifeq          163
     153: aload_0
     154: getfield      #13                 // Field logger:Lorg/postgresql/core/Logger;
     157: ldc           #49                 // String Ignoring exception on cancel request:
     159: aload_2
     160: invokevirtual #50                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     163: aload_1
     164: ifnull        194
     167: aload_1
     168: invokevirtual #47                 // Method org/postgresql/core/PGStream.close:()V
     171: goto          194
     174: astore_2
     175: goto          194
     178: astore_3
     179: aload_1
     180: ifnull        192
     183: aload_1
     184: invokevirtual #47                 // Method org/postgresql/core/PGStream.close:()V
     187: goto          192
     190: astore        4
     192: aload_3
     193: athrow
     194: return
    Exception table:
       from    to  target type
         131   135   138   Class java/io/IOException
           2   127   142   Class java/io/IOException
         167   171   174   Class java/io/IOException
           2   127   178   any
         142   163   178   any
         183   187   190   Class java/io/IOException

  public void close();
    Code:
       0: aload_0
       1: getfield      #6                  // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #13                 // Field logger:Lorg/postgresql/core/Logger;
      12: invokevirtual #29                 // Method org/postgresql/core/Logger.logDebug:()Z
      15: ifeq          27
      18: aload_0
      19: getfield      #13                 // Field logger:Lorg/postgresql/core/Logger;
      22: ldc           #51                 // String  FE=> Terminate
      24: invokevirtual #40                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
      27: aload_0
      28: getfield      #10                 // Field pgStream:Lorg/postgresql/core/PGStream;
      31: bipush        88
      33: invokevirtual #52                 // Method org/postgresql/core/PGStream.SendChar:(I)V
      36: aload_0
      37: getfield      #10                 // Field pgStream:Lorg/postgresql/core/PGStream;
      40: iconst_4
      41: invokevirtual #43                 // Method org/postgresql/core/PGStream.SendInteger4:(I)V
      44: aload_0
      45: getfield      #10                 // Field pgStream:Lorg/postgresql/core/PGStream;
      48: invokevirtual #45                 // Method org/postgresql/core/PGStream.flush:()V
      51: aload_0
      52: getfield      #10                 // Field pgStream:Lorg/postgresql/core/PGStream;
      55: invokevirtual #47                 // Method org/postgresql/core/PGStream.close:()V
      58: goto          82
      61: astore_1
      62: aload_0
      63: getfield      #13                 // Field logger:Lorg/postgresql/core/Logger;
      66: invokevirtual #29                 // Method org/postgresql/core/Logger.logDebug:()Z
      69: ifeq          82
      72: aload_0
      73: getfield      #13                 // Field logger:Lorg/postgresql/core/Logger;
      76: ldc           #53                 // String Discarding IOException on close:
      78: aload_1
      79: invokevirtual #50                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      82: aload_0
      83: iconst_1
      84: putfield      #6                  // Field closed:Z
      87: return
    Exception table:
       from    to  target type
           8    58    61   Class java/io/IOException

  public org.postgresql.core.Encoding getEncoding();
    Code:
       0: aload_0
       1: getfield      #10                 // Field pgStream:Lorg/postgresql/core/PGStream;
       4: invokevirtual #54                 // Method org/postgresql/core/PGStream.getEncoding:()Lorg/postgresql/core/Encoding;
       7: areturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field closed:Z
       4: ireturn

  void setServerVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field serverVersion:Ljava/lang/String;
       5: return

  void setServerVersionNum(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field serverVersionNum:I
       5: return

  void setBackendKeyData(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #34                 // Field cancelPid:I
       5: aload_0
       6: iload_2
       7: putfield      #37                 // Field cancelKey:I
      10: return

  synchronized void addWarning(java.sql.SQLWarning);
    Code:
       0: aload_0
       1: getfield      #28                 // Field warnings:Ljava/sql/SQLWarning;
       4: ifnonnull     15
       7: aload_0
       8: aload_1
       9: putfield      #28                 // Field warnings:Ljava/sql/SQLWarning;
      12: goto          23
      15: aload_0
      16: getfield      #28                 // Field warnings:Ljava/sql/SQLWarning;
      19: aload_1
      20: invokevirtual #55                 // Method java/sql/SQLWarning.setNextWarning:(Ljava/sql/SQLWarning;)V
      23: return

  synchronized void addNotification(org.postgresql.PGNotification);
    Code:
       0: aload_0
       1: getfield      #9                  // Field notifications:Ljava/util/ArrayList;
       4: aload_1
       5: invokevirtual #56                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  synchronized void setTransactionState(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field transactionState:I
       5: return

  synchronized void setStandardConformingStrings(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field standardConformingStrings:Z
       5: return

  public int getProtocolVersion();
    Code:
       0: iconst_3
       1: ireturn

  public int getBackendPID();
    Code:
       0: aload_0
       1: getfield      #34                 // Field cancelPid:I
       4: ireturn

  public boolean useBinaryForReceive(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field useBinaryForOids:Ljava/util/Set;
       4: iload_1
       5: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #58,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      13: ireturn

  public void setBinaryReceiveOids(java.util.Set);
    Code:
       0: aload_0
       1: getfield      #4                  // Field useBinaryForOids:Ljava/util/Set;
       4: invokeinterface #59,  1           // InterfaceMethod java/util/Set.clear:()V
       9: aload_0
      10: getfield      #4                  // Field useBinaryForOids:Ljava/util/Set;
      13: aload_1
      14: invokeinterface #60,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: return

  public void setIntegerDateTimes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #61                 // Field integerDateTimes:Z
       5: return

  public boolean getIntegerDateTimes();
    Code:
       0: aload_0
       1: getfield      #61                 // Field integerDateTimes:Z
       4: ireturn

  public void abort();
    Code:
       0: aload_0
       1: getfield      #10                 // Field pgStream:Lorg/postgresql/core/PGStream;
       4: invokevirtual #62                 // Method org/postgresql/core/PGStream.getSocket:()Ljava/net/Socket;
       7: invokevirtual #63                 // Method java/net/Socket.close:()V
      10: goto          14
      13: astore_1
      14: aload_0
      15: iconst_1
      16: putfield      #6                  // Field closed:Z
      19: return
    Exception table:
       from    to  target type
           0    10    13   Class java/io/IOException
}
